{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTMxMjUz", "number": 848, "title": "Fix #785 JacksonXML support", "bodyText": "Fix #785 JacksonXML support", "createdAt": "2020-03-05T08:21:29Z", "url": "https://github.com/apache/camel-quarkus/pull/848", "merged": true, "mergeCommit": {"oid": "056c964566f73c53a7e827651780d8643257cfb9"}, "closed": true, "closedAt": "2020-03-05T10:07:01Z", "author": {"login": "ppalaga"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKnGkkAH2gAyMzg0MTMxMjUzOjFlYzNkNjhhNmI0MjFmNTU5YTc5ZmVjMmRlNzY4ZTIwOTIxNzUwZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKojEfAFqTM2OTQzMzkxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ec3d68a6b421f559a79fec2de768e20921750db", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/1ec3d68a6b421f559a79fec2de768e20921750db", "committedDate": "2020-03-05T08:18:48Z", "message": "Remove redundant svm dependency from the jackson runtime module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Mzc2MzA1", "url": "https://github.com/apache/camel-quarkus/pull/848#pullrequestreview-369376305", "createdAt": "2020-03-05T08:36:17Z", "commit": {"oid": "57199e7ddd24d4cc5390820a9f3351ae7717c91c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/f45e450d2e39066d51bef8c598299434a8867af1", "committedDate": "2020-03-05T08:38:25Z", "message": "Fix #785 JacksonXML support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57199e7ddd24d4cc5390820a9f3351ae7717c91c", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/57199e7ddd24d4cc5390820a9f3351ae7717c91c", "committedDate": "2020-03-05T08:18:48Z", "message": "Fix #785 JacksonXML support"}, "afterCommit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/f45e450d2e39066d51bef8c598299434a8867af1", "committedDate": "2020-03-05T08:38:25Z", "message": "Fix #785 JacksonXML support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzgwMTUx", "url": "https://github.com/apache/camel-quarkus/pull/848#pullrequestreview-369380151", "createdAt": "2020-03-05T08:42:31Z", "commit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0MjozMlrOFyKlvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0MjozMlrOFyKlvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0NjYyMQ==", "bodyText": "maybe we should just use class names as strings", "url": "https://github.com/apache/camel-quarkus/pull/848#discussion_r388146621", "createdAt": "2020-03-05T08:42:32Z", "author": {"login": "lburgazzoli"}, "path": "extensions/support/jackson-dataformat-xml/deployment/src/main/java/org/apache/camel/quarkus/support/jackson/datafromat/xml/deployment/JacksonDataformatXmlSupportProcessor.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.support.jackson.datafromat.xml.deployment;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.xml.stream.XMLEventFactory;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLOutputFactory;\n+\n+import com.ctc.wstx.shaded.msv.org_isorelax.verifier.VerifierFactoryLoader;\n+import com.ctc.wstx.shaded.msv.relaxng_datatype.DatatypeLibraryFactory;\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.ObjectCodec;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.DeploymentClassLoaderBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.deployment.util.ServiceUtil;\n+import org.codehaus.stax2.validation.XMLValidationSchemaFactory;\n+\n+public class JacksonDataformatXmlSupportProcessor {\n+\n+    private static final String FEATURE = \"camel-support-jackson-dataformat-xml\";\n+    static final String SERVICES_PREFIX = \"META-INF/services/\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    void serviceProviders(BuildProducer<ServiceProviderBuildItem> serviceProviders,\n+            final DeploymentClassLoaderBuildItem classLoader) {\n+        Stream.concat(\n+                Stream.of(\n+                        JsonFactory.class,\n+                        ObjectCodec.class,\n+                        VerifierFactoryLoader.class,\n+                        DatatypeLibraryFactory.class,\n+                        XMLEventFactory.class,\n+                        XMLInputFactory.class,\n+                        XMLOutputFactory.class)\n+                        .map(Class::getName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzgxODYx", "url": "https://github.com/apache/camel-quarkus/pull/848#pullrequestreview-369381861", "createdAt": "2020-03-05T08:45:16Z", "commit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0NToxN1rOFyKqyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0NToxN1rOFyKqyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0NzkxNA==", "bodyText": "As there's no discovery but we deal with a fixed set of ites, maybe we can use strings so we can avoid the the two Stream.of and the Stream.concat", "url": "https://github.com/apache/camel-quarkus/pull/848#discussion_r388147914", "createdAt": "2020-03-05T08:45:17Z", "author": {"login": "lburgazzoli"}, "path": "extensions/support/jackson-dataformat-xml/deployment/src/main/java/org/apache/camel/quarkus/support/jackson/datafromat/xml/deployment/JacksonDataformatXmlSupportProcessor.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.support.jackson.datafromat.xml.deployment;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.xml.stream.XMLEventFactory;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLOutputFactory;\n+\n+import com.ctc.wstx.shaded.msv.org_isorelax.verifier.VerifierFactoryLoader;\n+import com.ctc.wstx.shaded.msv.relaxng_datatype.DatatypeLibraryFactory;\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.ObjectCodec;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.DeploymentClassLoaderBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.deployment.util.ServiceUtil;\n+import org.codehaus.stax2.validation.XMLValidationSchemaFactory;\n+\n+public class JacksonDataformatXmlSupportProcessor {\n+\n+    private static final String FEATURE = \"camel-support-jackson-dataformat-xml\";\n+    static final String SERVICES_PREFIX = \"META-INF/services/\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    void serviceProviders(BuildProducer<ServiceProviderBuildItem> serviceProviders,\n+            final DeploymentClassLoaderBuildItem classLoader) {\n+        Stream.concat(\n+                Stream.of(\n+                        JsonFactory.class,\n+                        ObjectCodec.class,\n+                        VerifierFactoryLoader.class,\n+                        DatatypeLibraryFactory.class,\n+                        XMLEventFactory.class,\n+                        XMLInputFactory.class,\n+                        XMLOutputFactory.class)\n+                        .map(Class::getName),\n+                Stream.of(\n+                        XMLValidationSchemaFactory.INTERNAL_ID_SCHEMA_DTD,\n+                        XMLValidationSchemaFactory.INTERNAL_ID_SCHEMA_RELAXNG,\n+                        XMLValidationSchemaFactory.INTERNAL_ID_SCHEMA_W3C,\n+                        XMLValidationSchemaFactory.INTERNAL_ID_SCHEMA_TREX)\n+                        .map(schemaId -> XMLValidationSchemaFactory.class.getName() + \".\" + schemaId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDMzOTEy", "url": "https://github.com/apache/camel-quarkus/pull/848#pullrequestreview-369433912", "createdAt": "2020-03-05T09:59:50Z", "commit": {"oid": "f45e450d2e39066d51bef8c598299434a8867af1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2518, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}