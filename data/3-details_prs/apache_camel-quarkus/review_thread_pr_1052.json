{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDA3OTAw", "number": 1052, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0MToyNVrODvq8gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0MToyNVrODvq8gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzEzMjgyOnYy", "diffSide": "RIGHT", "path": "docs/modules/ROOT/pages/promote-jvm-only-extensions.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0MToyNVrOGCO5Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0Mzo1M1rOGCi2-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDM4Mg==", "bodyText": "@ppalaga Would the step below not be executed, we end up with a build issue:\nThe step \"8\" is needed otherwise we have:\n[ERROR] Failed to execute goal org.codehaus.gmaven:groovy-maven-plugin:2.1.1:execute (validate-extension-metadata) on project camel-quarkus: Execution validate-extension-metadata of goal org.codehaus.gmaven:groovy-maven-plugin:2.1.1:execute failed:\n[ERROR] Quarkus extension metadata validation failures:\n[ERROR]\n[ERROR] extensions/grpc/runtime/src/main/resources/META-INF/quarkus-extension.yaml must contain a link to the guide https://quarkus.io/guides/camel\n[ERROR] extensions/grpc/runtime/src/main/resources/META-INF/quarkus-extension.yaml metadata must contain a list of keywords with at least \"camel\" present\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException\nIs it a non expected build issue that would need to be fixed ?", "url": "https://github.com/apache/camel-quarkus/pull/1052#discussion_r404994382", "createdAt": "2020-04-07T17:41:25Z", "author": {"login": "aldettinger"}, "path": "docs/modules/ROOT/pages/promote-jvm-only-extensions.adoc", "diffHunk": "@@ -0,0 +1,123 @@\n+[[promote-jvm-only-extensions]]\n+= Promote JVM Only extensions Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present\n+* Remove the `preview` status", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03d3351cace07a5ddb2efe13dfb62b69e8f32235"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NjY4Nw==", "bodyText": "I was only proposing to remove the \"Ensure keyword camel is present\" line. If there is a groovy check for that it can be removed as well.", "url": "https://github.com/apache/camel-quarkus/pull/1052#discussion_r405156687", "createdAt": "2020-04-07T22:44:39Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/promote-jvm-only-extensions.adoc", "diffHunk": "@@ -0,0 +1,123 @@\n+[[promote-jvm-only-extensions]]\n+= Promote JVM Only extensions Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present\n+* Remove the `preview` status", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDM4Mg=="}, "originalCommit": {"oid": "03d3351cace07a5ddb2efe13dfb62b69e8f32235"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyMTQ2Nw==", "bodyText": "Opened follow up issue #1058.", "url": "https://github.com/apache/camel-quarkus/pull/1052#discussion_r405321467", "createdAt": "2020-04-08T07:43:53Z", "author": {"login": "aldettinger"}, "path": "docs/modules/ROOT/pages/promote-jvm-only-extensions.adoc", "diffHunk": "@@ -0,0 +1,123 @@\n+[[promote-jvm-only-extensions]]\n+= Promote JVM Only extensions Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present\n+* Remove the `preview` status", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDM4Mg=="}, "originalCommit": {"oid": "03d3351cace07a5ddb2efe13dfb62b69e8f32235"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4346, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}