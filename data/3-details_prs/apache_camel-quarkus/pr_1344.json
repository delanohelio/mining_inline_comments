{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzA0MjI1", "number": 1344, "title": "Revisit camel-quarkus bootstrap", "bodyText": "Fixes #1128\nFixes #1037\nFixes #1368\nTODO:\n\n overridable routes consumer (not needed any-more)\n cleanup\n documentation (javadoc)\n documentation (user guide)\n additional unit test\n examples\n support for command mode (requires Camel 3.4.0)", "createdAt": "2020-06-11T20:00:03Z", "url": "https://github.com/apache/camel-quarkus/pull/1344", "merged": true, "mergeCommit": {"oid": "259f73616c6e12d51ccf8f5b67e334205556c287"}, "closed": true, "closedAt": "2020-06-20T19:58:06Z", "author": {"login": "lburgazzoli"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcq8M61gBqjM0NDEwNTMzNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctJ7DHgBqjM0NjQ4MTEzMTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bac8b6ddab21b3a48935ffcec4e73d4b2e88a93", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/3bac8b6ddab21b3a48935ffcec4e73d4b2e88a93", "committedDate": "2020-06-11T19:57:26Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "2d7fd8addd422d35044fb5a093a441b5d8efd9c7", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/2d7fd8addd422d35044fb5a093a441b5d8efd9c7", "committedDate": "2020-06-13T18:58:51Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbf86b7af486cf9e73e523971bdbc2fd8a372a37", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/bbf86b7af486cf9e73e523971bdbc2fd8a372a37", "committedDate": "2020-06-14T12:34:22Z", "message": "cleanup"}, "afterCommit": {"oid": "ea9a2e2d570af5cd8613b3bf514c4877b8e37ead", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/ea9a2e2d570af5cd8613b3bf514c4877b8e37ead", "committedDate": "2020-06-14T13:35:15Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea9a2e2d570af5cd8613b3bf514c4877b8e37ead", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/ea9a2e2d570af5cd8613b3bf514c4877b8e37ead", "committedDate": "2020-06-14T13:35:15Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "8c18c2b0a2118cba3e04dfe0bb48d59fb03c44d0", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/8c18c2b0a2118cba3e04dfe0bb48d59fb03c44d0", "committedDate": "2020-06-14T15:07:16Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c18c2b0a2118cba3e04dfe0bb48d59fb03c44d0", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/8c18c2b0a2118cba3e04dfe0bb48d59fb03c44d0", "committedDate": "2020-06-14T15:07:16Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "af9097da9187f5cc7766d31f11293627201431b0", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/af9097da9187f5cc7766d31f11293627201431b0", "committedDate": "2020-06-14T15:19:53Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af9097da9187f5cc7766d31f11293627201431b0", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/af9097da9187f5cc7766d31f11293627201431b0", "committedDate": "2020-06-14T15:19:53Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "16a7d7b3194c0ff536226c09690b1d939df4cda2", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/16a7d7b3194c0ff536226c09690b1d939df4cda2", "committedDate": "2020-06-14T15:20:38Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16a7d7b3194c0ff536226c09690b1d939df4cda2", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/16a7d7b3194c0ff536226c09690b1d939df4cda2", "committedDate": "2020-06-14T15:20:38Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "57e344ebc2f180c1a8d46e7c7b36940f4161be91", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/57e344ebc2f180c1a8d46e7c7b36940f4161be91", "committedDate": "2020-06-14T15:23:02Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57e344ebc2f180c1a8d46e7c7b36940f4161be91", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/57e344ebc2f180c1a8d46e7c7b36940f4161be91", "committedDate": "2020-06-14T15:23:02Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "f3539dc9f57f1c704b213a3a9e1772ab2eabe0f6", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/f3539dc9f57f1c704b213a3a9e1772ab2eabe0f6", "committedDate": "2020-06-14T15:27:54Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3539dc9f57f1c704b213a3a9e1772ab2eabe0f6", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/f3539dc9f57f1c704b213a3a9e1772ab2eabe0f6", "committedDate": "2020-06-14T15:27:54Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "ffb60fe78f392916c7edac576043416c52d4fe44", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/ffb60fe78f392916c7edac576043416c52d4fe44", "committedDate": "2020-06-14T17:54:45Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ffb60fe78f392916c7edac576043416c52d4fe44", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/ffb60fe78f392916c7edac576043416c52d4fe44", "committedDate": "2020-06-14T17:54:45Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "44dbfeb753247d9430ce479e9d896f020db20121", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/44dbfeb753247d9430ce479e9d896f020db20121", "committedDate": "2020-06-14T22:21:16Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44dbfeb753247d9430ce479e9d896f020db20121", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/44dbfeb753247d9430ce479e9d896f020db20121", "committedDate": "2020-06-14T22:21:16Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "c75e2884d67f59c3763cc465b8dfcf1ac30a3a46", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/c75e2884d67f59c3763cc465b8dfcf1ac30a3a46", "committedDate": "2020-06-15T06:56:51Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c75e2884d67f59c3763cc465b8dfcf1ac30a3a46", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/c75e2884d67f59c3763cc465b8dfcf1ac30a3a46", "committedDate": "2020-06-15T06:56:51Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/819cbfb356daeca683fb7eee87719c1f261ee5b5", "committedDate": "2020-06-15T07:16:02Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDMxNTI0", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-430431524", "createdAt": "2020-06-15T08:34:58Z", "commit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODozNDo1OFrOGjoZeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODozODo0N1rOGjohzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxNTIyNQ==", "bodyText": "Revisit this if this becomes a common use - I would like end users to not know or have to use such an option.", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440015225", "createdAt": "2020-06-15T08:34:58Z", "author": {"login": "davsclaus"}, "path": "examples/timer-log-cdi/src/main/resources/application.properties", "diffHunk": "@@ -14,33 +14,17 @@\n ## See the License for the specific language governing permissions and\n ## limitations under the License.\n ## ---------------------------------------------------------------------------\n+\n #\n # Quarkus\n #\n quarkus.banner.enabled = false\n \n-#\n-# Quarkus - Camel\n-#\n-\n-# disable build time route discovery as the only\n-# route defined in this project is based on CDI.\n-#\n-# This is not strictly needed for the correctness\n-# because camel-quarkus automatically\n-# filters auto-discovered routes that targets CDI\n-# but if is is known that routes are all leveraging\n-# CDI, this option will give some little boost to\n-# the build process\n-quarkus.camel.main.routes-discovery.enabled = false\n-\n-#\n-# Camel\n-#\n-camel.context.name = quarkus-camel-example-timer-log-cdi\n+# camel look-up beans using BeanManager so we don't want\n+# ArC to remove beans without injection points.\n+quarkus.arc.remove-unused-beans = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxNzM1Ng==", "bodyText": "Yeah all converters are now non-reflective, so we should look at this in another ticket", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440017356", "createdAt": "2020-06-15T08:38:47Z", "author": {"login": "davsclaus"}, "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelNativeImageProcessor.java", "diffHunk": "@@ -0,0 +1,298 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.core.deployment;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import io.quarkus.deployment.ApplicationArchive;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.ApplicationArchivesBuildItem;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveMethodBuildItem;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.Component;\n+import org.apache.camel.Consumer;\n+import org.apache.camel.Converter;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.Producer;\n+import org.apache.camel.TypeConverter;\n+import org.apache.camel.impl.engine.DefaultComponentResolver;\n+import org.apache.camel.impl.engine.DefaultDataFormatResolver;\n+import org.apache.camel.impl.engine.DefaultLanguageResolver;\n+import org.apache.camel.quarkus.core.CamelConfig;\n+import org.apache.camel.quarkus.core.CamelConfig.ReflectionConfig;\n+import org.apache.camel.quarkus.core.CamelConfig.ResourcesConfig;\n+import org.apache.camel.quarkus.core.CamelConfigFlags;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRoutesBuilderClassBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelServiceBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelServicePatternBuildItem;\n+import org.apache.camel.quarkus.core.deployment.util.CamelSupport;\n+import org.apache.camel.quarkus.core.deployment.util.PathFilter;\n+import org.apache.camel.spi.DataFormat;\n+import org.apache.camel.spi.ExchangeFormatter;\n+import org.apache.camel.spi.PropertiesComponent;\n+import org.apache.camel.spi.ScheduledPollConsumerScheduler;\n+import org.apache.camel.spi.StreamCachingStrategy;\n+import org.apache.camel.support.CamelContextHelper;\n+import org.jboss.jandex.AnnotationTarget.Kind;\n+import org.jboss.jandex.AnnotationValue;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.apache.commons.lang3.ClassUtils.getPackageName;\n+\n+public class CamelNativeImageProcessor {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(CamelNativeImageProcessor.class);\n+\n+    private static final List<Class<?>> CAMEL_REFLECTIVE_CLASSES = Arrays.asList(\n+            Endpoint.class,\n+            Consumer.class,\n+            Producer.class,\n+            TypeConverter.class,\n+            ExchangeFormatter.class,\n+            ScheduledPollConsumerScheduler.class,\n+            Component.class,\n+            CamelContext.class,\n+            StreamCachingStrategy.class,\n+            StreamCachingStrategy.SpoolUsedHeapMemoryLimit.class,\n+            PropertiesComponent.class,\n+            DataFormat.class);\n+\n+    @BuildStep\n+    void reflectiveItems(\n+            CombinedIndexBuildItem combinedIndex,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n+            BuildProducer<ReflectiveMethodBuildItem> reflectiveMethod) {\n+\n+        final IndexView view = combinedIndex.getIndex();\n+\n+        CAMEL_REFLECTIVE_CLASSES.stream()\n+                .map(Class::getName)\n+                .map(DotName::createSimple)\n+                .map(view::getAllKnownImplementors)\n+                .flatMap(Collection::stream)\n+                .filter(CamelSupport::isPublic)\n+                .forEach(v -> reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, v.name().toString())));\n+\n+        DotName converter = DotName.createSimple(Converter.class.getName());\n+        List<ClassInfo> converterClasses = view.getAnnotations(converter)\n+                .stream()\n+                .filter(ai -> ai.target().kind() == Kind.CLASS)\n+                .filter(ai -> {\n+                    AnnotationValue av = ai.value(\"loader\");\n+                    boolean isLoader = av != null && av.asBoolean();\n+                    // filter out camel-base converters which are automatically inlined in the\n+                    // CoreStaticTypeConverterLoader\n+                    // need to revisit with Camel 3.0.0-M3 which should improve this area", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDg5MTEw", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-430489110", "createdAt": "2020-06-15T09:50:36Z", "commit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDczNjE0", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-430473614", "createdAt": "2020-06-15T09:30:11Z", "commit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTozMDoxMVrOGjqZGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyNTozNlrOGjv6bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA0Nzg5OQ==", "bodyText": "Would you mind adding a more informative <description> to the runtime pom.xml so that users get an idea what it is good for?", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440047899", "createdAt": "2020-06-15T09:30:11Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/extensions/main.adoc", "diffHunk": "@@ -0,0 +1,22 @@\n+// Do not edit directly!\n+// This file was generated by camel-quarkus-package-maven-plugin:update-extension-doc-page\n+\n+[[main]]\n+= Main\n+\n+[.badges]\n+[.badge-key]##Since Camel Quarkus##[.badge-version]##1.0.0-CR3## [.badge-key]##JVM##[.badge-supported]##supported## [.badge-key]##Native##[.badge-supported]##supported##\n+\n+Camel Main", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA3NzY0Ng==", "bodyText": "I appreciate the comment!", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440077646", "createdAt": "2020-06-15T10:23:15Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextProcessor.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.core.deployment;\n+\n+import java.util.List;\n+\n+import io.quarkus.arc.deployment.BeanContainerBuildItem;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.annotations.ExecutionTime;\n+import io.quarkus.deployment.annotations.Overridable;\n+import io.quarkus.deployment.annotations.Record;\n+import io.quarkus.deployment.builditem.ServiceStartBuildItem;\n+import io.quarkus.runtime.RuntimeValue;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.quarkus.core.CamelConfig;\n+import org.apache.camel.quarkus.core.CamelConfigFlags;\n+import org.apache.camel.quarkus.core.CamelContextRecorder;\n+import org.apache.camel.quarkus.core.CamelRuntime;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelContextBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelContextCustomizerBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelFactoryFinderResolverBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelModelJAXBContextFactoryBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelModelToXMLDumperBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRegistryBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRoutesBuilderClassBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRoutesLoaderBuildItems;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRuntimeBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRuntimeTaskBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelTypeConverterRegistryBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.ContainerBeansBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.RuntimeCamelContextCustomizerBuildItem;\n+import org.apache.camel.quarkus.core.deployment.util.CamelSupport;\n+import org.apache.camel.spi.ModelJAXBContextFactory;\n+import org.apache.camel.spi.TypeConverterRegistry;\n+\n+public class CamelContextProcessor {\n+    /**\n+     * This build step is responsible to assemble a {@link CamelContext} instance.\n+     *\n+     * @param  beanContainer           a reference to a fully initialized CDI bean container\n+     * @param  recorder                the recorder.\n+     * @param  registry                a reference to a {@link org.apache.camel.spi.Registry}.\n+     * @param  typeConverterRegistry   a reference to a {@link TypeConverterRegistry}.\n+     * @param  modelJAXBContextFactory a list of known {@link ModelJAXBContextFactory}.\n+     * @param  xmlLoader               a list of known {@link org.apache.camel.spi.XMLRoutesDefinitionLoader}.\n+     * @param  modelDumper             a list of known {@link CamelModelToXMLDumperBuildItem}.\n+     * @param  factoryFinderResolver   a list of known {@link org.apache.camel.spi.FactoryFinderResolver}.\n+     * @param  customizers             a list of {@link org.apache.camel.quarkus.core.CamelContextCustomizer} used to\n+     *                                 customize the {@link CamelContext} at {@link ExecutionTime#STATIC_INIT}.\n+     * @return                         a build item holding an instance of a {@link CamelContext}\n+     */\n+    @Record(ExecutionTime.STATIC_INIT)\n+    @BuildStep\n+    CamelContextBuildItem context(\n+            BeanContainerBuildItem beanContainer,\n+            CamelContextRecorder recorder,\n+            CamelRegistryBuildItem registry,\n+            CamelTypeConverterRegistryBuildItem typeConverterRegistry,\n+            CamelModelJAXBContextFactoryBuildItem modelJAXBContextFactory,\n+            CamelRoutesLoaderBuildItems.Xml xmlLoader,\n+            CamelModelToXMLDumperBuildItem modelDumper,\n+            CamelFactoryFinderResolverBuildItem factoryFinderResolver,\n+            List<CamelContextCustomizerBuildItem> customizers,\n+            CamelConfig config) {\n+\n+        RuntimeValue<CamelContext> context = recorder.createContext(\n+                registry.getRegistry(),\n+                typeConverterRegistry.getRegistry(),\n+                modelJAXBContextFactory.getContextFactory(),\n+                xmlLoader.getLoader(),\n+                modelDumper.getValue(),\n+                factoryFinderResolver.getFactoryFinderResolver(),\n+                beanContainer.getValue(),\n+                CamelSupport.getCamelVersion(),\n+                config);\n+\n+        for (CamelContextCustomizerBuildItem customizer : customizers) {\n+            recorder.customize(context, customizer.get());\n+        }\n+\n+        return new CamelContextBuildItem(context);\n+    }\n+\n+    /**\n+     * This build steps assembles the default implementation of a {@link CamelRuntime} responsible to bootstrap\n+     * Camel.\n+     * <p>\n+     * This implementation provides the minimal features for a fully functional and ready to use {@link CamelRuntime} by\n+     * loading all the discoverable {@link org.apache.camel.RoutesBuilder} into the auto-configured {@link CamelContext}\n+     * but does not perform any advanced set-up such as:\n+     * <ul>\n+     * <li>auto-configure components/languages/data-formats through properties which is then under user responsibility\n+     * <li>take control of the application life-cycle\n+     * </ul>\n+     * <p>\n+     * For advanced auto-configuration capabilities add camel-quarkus-main to the list of dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA4MzcxNg==", "bodyText": "A side note about a possible future refactoring: Producing a single ReflectiveClassBuildItem containing multiple class names seems to be more effective than producing multiple ReflectiveClassBuildItems containing single class name each. We have several sites like this.", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440083716", "createdAt": "2020-06-15T10:35:06Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelNativeImageProcessor.java", "diffHunk": "@@ -0,0 +1,298 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.core.deployment;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import io.quarkus.deployment.ApplicationArchive;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.ApplicationArchivesBuildItem;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveMethodBuildItem;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.Component;\n+import org.apache.camel.Consumer;\n+import org.apache.camel.Converter;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.Producer;\n+import org.apache.camel.TypeConverter;\n+import org.apache.camel.impl.engine.DefaultComponentResolver;\n+import org.apache.camel.impl.engine.DefaultDataFormatResolver;\n+import org.apache.camel.impl.engine.DefaultLanguageResolver;\n+import org.apache.camel.quarkus.core.CamelConfig;\n+import org.apache.camel.quarkus.core.CamelConfig.ReflectionConfig;\n+import org.apache.camel.quarkus.core.CamelConfig.ResourcesConfig;\n+import org.apache.camel.quarkus.core.CamelConfigFlags;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelRoutesBuilderClassBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelServiceBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelServicePatternBuildItem;\n+import org.apache.camel.quarkus.core.deployment.util.CamelSupport;\n+import org.apache.camel.quarkus.core.deployment.util.PathFilter;\n+import org.apache.camel.spi.DataFormat;\n+import org.apache.camel.spi.ExchangeFormatter;\n+import org.apache.camel.spi.PropertiesComponent;\n+import org.apache.camel.spi.ScheduledPollConsumerScheduler;\n+import org.apache.camel.spi.StreamCachingStrategy;\n+import org.apache.camel.support.CamelContextHelper;\n+import org.jboss.jandex.AnnotationTarget.Kind;\n+import org.jboss.jandex.AnnotationValue;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.apache.commons.lang3.ClassUtils.getPackageName;\n+\n+public class CamelNativeImageProcessor {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(CamelNativeImageProcessor.class);\n+\n+    private static final List<Class<?>> CAMEL_REFLECTIVE_CLASSES = Arrays.asList(\n+            Endpoint.class,\n+            Consumer.class,\n+            Producer.class,\n+            TypeConverter.class,\n+            ExchangeFormatter.class,\n+            ScheduledPollConsumerScheduler.class,\n+            Component.class,\n+            CamelContext.class,\n+            StreamCachingStrategy.class,\n+            StreamCachingStrategy.SpoolUsedHeapMemoryLimit.class,\n+            PropertiesComponent.class,\n+            DataFormat.class);\n+\n+    @BuildStep\n+    void reflectiveItems(\n+            CombinedIndexBuildItem combinedIndex,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n+            BuildProducer<ReflectiveMethodBuildItem> reflectiveMethod) {\n+\n+        final IndexView view = combinedIndex.getIndex();\n+\n+        CAMEL_REFLECTIVE_CLASSES.stream()\n+                .map(Class::getName)\n+                .map(DotName::createSimple)\n+                .map(view::getAllKnownImplementors)\n+                .flatMap(Collection::stream)\n+                .filter(CamelSupport::isPublic)\n+                .forEach(v -> reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, v.name().toString())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwNzIzNg==", "bodyText": "Please next time put this kind of refactorings in a separate commit.", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440107236", "createdAt": "2020-06-15T11:23:38Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/spi/CamelRuntimeBuildItem.java", "diffHunk": "@@ -18,19 +18,16 @@\n \n import io.quarkus.builder.item.SimpleBuildItem;\n import io.quarkus.runtime.RuntimeValue;\n-import org.apache.camel.spi.ReactiveExecutor;\n+import org.apache.camel.quarkus.core.CamelRuntime;\n \n-/**\n- * Holds the {@link ReactiveExecutor} {@link RuntimeValue}.\n- */\n-public final class CamelReactiveExecutorBuildItem extends SimpleBuildItem {\n-    private final RuntimeValue<ReactiveExecutor> instance;\n+public final class CamelRuntimeBuildItem extends SimpleBuildItem {\n+    private final RuntimeValue<CamelRuntime> runtime;\n \n-    public CamelReactiveExecutorBuildItem(RuntimeValue<ReactiveExecutor> instance) {\n-        this.instance = instance;\n+    public CamelRuntimeBuildItem(RuntimeValue<CamelRuntime> runtime) {\n+        this.runtime = runtime;\n     }\n \n-    public RuntimeValue<ReactiveExecutor> getInstance() {\n-        return instance;\n+    public RuntimeValue<CamelRuntime> get() {\n+        return runtime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwODQxOQ==", "bodyText": "I wonder what symbolic means here?\nI never heart of runtime tasks in the context of Camel Quarkus. Could you please add a sentence or example to get an idea what it is?", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440108419", "createdAt": "2020-06-15T11:26:18Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/spi/CamelRuntimeTaskBuildItem.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.core.deployment.spi;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+\n+/**\n+ * A symbolic class that represents a runtime task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDExNTAyMw==", "bodyText": "Explaining in more detail what it does or add a link to a resource that explains it would be nice.", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440115023", "createdAt": "2020-06-15T11:40:08Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelConfig.java", "diffHunk": "@@ -44,29 +44,25 @@\n     @ConfigItem\n     public RuntimeCatalogConfig runtimeCatalog;\n \n+    /**\n+     * Build time configuration options for routes discovery.\n+     */\n+    @ConfigItem\n+    public RoutesDiscoveryConfig routesDiscovery;\n+\n     /**\n      * Build time configuration options related to the building of native executable.\n      */\n     @ConfigItem(name = \"native\")\n     public NativeConfig native_;\n \n     @ConfigGroup\n-    public static class MainConfig {\n+    public static class BootstrapConfig {\n         /**\n-         * Enable {@code camel-main}. If {@code true}, routes are automatically\n-         * loaded and started and the entire lifecycle of the Camel Context is\n-         * under the control of the {@code camel-main} component. Otherwise, the\n-         * application developer is responsible for performing all the mentioned\n-         * tasks.\n+         * Enable bootstrapping the {@link CamelRuntime}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzODMwMA==", "bodyText": "Why do we need the empty trailing string here?", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440138300", "createdAt": "2020-06-15T12:25:31Z", "author": {"login": "ppalaga"}, "path": "extensions-core/main/runtime/src/main/java/org/apache/camel/quarkus/main/CamelMainRoutesCollector.java", "diffHunk": "@@ -66,7 +67,7 @@ public XMLRoutesDefinitionLoader getXmlRoutesLoader() {\n         List<RoutesDefinition> answer = new ArrayList<>();\n         PackageScanResourceResolver resolver = camelContext.adapt(ExtendedCamelContext.class).getPackageScanResourceResolver();\n \n-        for (String part : directory.split(\",\")) {\n+        for (String part : directory.split(\",\", -1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzODM0OQ==", "bodyText": "Why do we need the empty trailing string here?", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440138349", "createdAt": "2020-06-15T12:25:36Z", "author": {"login": "ppalaga"}, "path": "extensions-core/main/runtime/src/main/java/org/apache/camel/quarkus/main/CamelMainRoutesCollector.java", "diffHunk": "@@ -90,7 +91,7 @@ public XMLRoutesDefinitionLoader getXmlRoutesLoader() {\n         List<RestsDefinition> answer = new ArrayList<>();\n         PackageScanResourceResolver resolver = camelContext.adapt(ExtendedCamelContext.class).getPackageScanResourceResolver();\n \n-        for (String part : directory.split(\",\")) {\n+        for (String part : directory.split(\",\", -1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "819cbfb356daeca683fb7eee87719c1f261ee5b5", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/819cbfb356daeca683fb7eee87719c1f261ee5b5", "committedDate": "2020-06-15T07:16:02Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "511e476729b9abce17bac3ad7a0060d3fed7c55a", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/511e476729b9abce17bac3ad7a0060d3fed7c55a", "committedDate": "2020-06-15T16:38:55Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "511e476729b9abce17bac3ad7a0060d3fed7c55a", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/511e476729b9abce17bac3ad7a0060d3fed7c55a", "committedDate": "2020-06-15T16:38:55Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "724886ed175db09dfe562b864e610908806833ce", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/724886ed175db09dfe562b864e610908806833ce", "committedDate": "2020-06-15T16:48:54Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "724886ed175db09dfe562b864e610908806833ce", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/724886ed175db09dfe562b864e610908806833ce", "committedDate": "2020-06-15T16:48:54Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "a2ee625faf208389bf696d2a1fc5534e19111ba7", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/a2ee625faf208389bf696d2a1fc5534e19111ba7", "committedDate": "2020-06-15T20:38:36Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2ee625faf208389bf696d2a1fc5534e19111ba7", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/a2ee625faf208389bf696d2a1fc5534e19111ba7", "committedDate": "2020-06-15T20:38:36Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "c77fcc9fab3e1f49ffb2ea4f13b0810bb5da15af", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/c77fcc9fab3e1f49ffb2ea4f13b0810bb5da15af", "committedDate": "2020-06-15T20:52:50Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTk1MjI2", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-431195226", "createdAt": "2020-06-16T06:30:22Z", "commit": {"oid": "c77fcc9fab3e1f49ffb2ea4f13b0810bb5da15af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjozMDoyMlrOGkM-ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjozMDoyMlrOGkM-ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNDU4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <description>Bootstrap Camel using Camel Main which bring advanced auto-configuration capabilities and integration with Quarkus Command Mode</description>\n          \n          \n            \n                <description>Bootstrap Camel using Camel Main which brings advanced auto-configuration capabilities and integration with Quarkus Command Mode</description>", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r440614586", "createdAt": "2020-06-16T06:30:22Z", "author": {"login": "ppalaga"}, "path": "extensions-core/main/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,107 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-main-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>camel-quarkus-main</artifactId>\n+    <name>Camel Quarkus :: Main :: Runtime</name>\n+    <description>Bootstrap Camel using Camel Main which bring advanced auto-configuration capabilities and integration with Quarkus Command Mode</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c77fcc9fab3e1f49ffb2ea4f13b0810bb5da15af"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "995dbefc819723f8c372b6465fed383d4cde2436", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/995dbefc819723f8c372b6465fed383d4cde2436", "committedDate": "2020-06-16T07:50:41Z", "message": "Update extensions-core/main/runtime/pom.xml\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>"}, "afterCommit": {"oid": "4660ec62433535e8453bb0d36ecf40e3fc7b035c", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/4660ec62433535e8453bb0d36ecf40e3fc7b035c", "committedDate": "2020-06-16T08:07:53Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDc5MzE3", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-431479317", "createdAt": "2020-06-16T13:03:52Z", "commit": {"oid": "4660ec62433535e8453bb0d36ecf40e3fc7b035c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4660ec62433535e8453bb0d36ecf40e3fc7b035c", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/4660ec62433535e8453bb0d36ecf40e3fc7b035c", "committedDate": "2020-06-16T08:07:53Z", "message": "Revisit camel-quarkus bootstrap #1128"}, "afterCommit": {"oid": "171e6831ed62b961091db96c1561593cb61992d1", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/171e6831ed62b961091db96c1561593cb61992d1", "committedDate": "2020-06-17T16:57:42Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjY2OTI4", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-432666928", "createdAt": "2020-06-17T18:30:38Z", "commit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODozMDozOFrOGlSCNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODozNjo0NlrOGlSPiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0NTk3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            :page-aliases: bootstrap.adoc\n          \n      \n    \n    \n  \n\nIf bootstrap.adoc is  a new page, there is no point in adding an alias. Aliases serve for setting redirects and we use them mainly when we move a page.", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r441745973", "createdAt": "2020-06-17T18:30:38Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/user-guide/bootstrap.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+= Bootstrap Camel Quarkus\n+:page-aliases: bootstrap.adoc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0NzE5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Camel Quarkus automatically configure and deploy a Camel Context bean which by default is started/stopped according to the Quarkus Application lifecycle. The configuration step happens at build time during Quarkus' augmentation phase and it is driven by the Camel Quarkus extensions which can be tuned using Camel Quarkus specific properties indentified by \"camel.quarkus\" as prefix. After the configuration is done, a minimal Camel Runtime is assembled and started at RUNTIME_INIT time. At that point, any additional configuration should be done using CDI, below an example bout how to configure a Camel Component:\n          \n          \n            \n            Camel Quarkus automatically configures and deploys a Camel Context bean which by default is started/stopped according to the Quarkus Application lifecycle. The configuration step happens at build time during Quarkus' augmentation phase and it is driven by the Camel Quarkus extensions which can be tuned using Camel Quarkus specific `camel.quarkus.*` properties. After the configuration is done, a minimal Camel Runtime is assembled and started at `RUNTIME_INIT` time. At that point, any additional configuration should be done using CDI. Below is an example showing how to configure a Camel Component:", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r441747196", "createdAt": "2020-06-17T18:32:58Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/user-guide/bootstrap.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+= Bootstrap Camel Quarkus\n+:page-aliases: bootstrap.adoc\n+\n+Camel Quarkus automatically configure and deploy a Camel Context bean which by default is started/stopped according to the Quarkus Application lifecycle. The configuration step happens at build time during Quarkus' augmentation phase and it is driven by the Camel Quarkus extensions which can be tuned using Camel Quarkus specific properties indentified by \"camel.quarkus\" as prefix. After the configuration is done, a minimal Camel Runtime is assembled and started at RUNTIME_INIT time. At that point, any additional configuration should be done using CDI, below an example bout how to configure a Camel Component:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0ODA5Mw==", "bodyText": "Please add all or at least the most important imports.", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r441748093", "createdAt": "2020-06-17T18:34:34Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/user-guide/bootstrap.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+= Bootstrap Camel Quarkus\n+:page-aliases: bootstrap.adoc\n+\n+Camel Quarkus automatically configure and deploy a Camel Context bean which by default is started/stopped according to the Quarkus Application lifecycle. The configuration step happens at build time during Quarkus' augmentation phase and it is driven by the Camel Quarkus extensions which can be tuned using Camel Quarkus specific properties indentified by \"camel.quarkus\" as prefix. After the configuration is done, a minimal Camel Runtime is assembled and started at RUNTIME_INIT time. At that point, any additional configuration should be done using CDI, below an example bout how to configure a Camel Component:\n+\n+[source,java]\n+----\n+@ApplicationScoped", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0ODU5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To configure component and other aspects of Apache Camel through properties, you can add the camel-core-main extension which brings functionnalities from https://camel.apache.org/components/latest/others/main.html[Apache Camel Main] to Camel Quarkus. By adding such extension the programmatic configuration of the Log Component done above, can be done through properties:\n          \n          \n            \n            To configure component and other aspects of Apache Camel through properties, you can add the `camel-core-main` extension which brings functionalities from https://camel.apache.org/components/latest/others/main.html[Apache Camel Main] to Camel Quarkus. By adding such extension the programmatic configuration of the Log Component done above, can be done through properties:", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r441748595", "createdAt": "2020-06-17T18:35:24Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/user-guide/bootstrap.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+= Bootstrap Camel Quarkus\n+:page-aliases: bootstrap.adoc\n+\n+Camel Quarkus automatically configure and deploy a Camel Context bean which by default is started/stopped according to the Quarkus Application lifecycle. The configuration step happens at build time during Quarkus' augmentation phase and it is driven by the Camel Quarkus extensions which can be tuned using Camel Quarkus specific properties indentified by \"camel.quarkus\" as prefix. After the configuration is done, a minimal Camel Runtime is assembled and started at RUNTIME_INIT time. At that point, any additional configuration should be done using CDI, below an example bout how to configure a Camel Component:\n+\n+[source,java]\n+----\n+@ApplicationScoped\n+public class Configurations {\n+    /**\n+     * Produces a {@link LogComponent} instance with a custom exchange formatter.\n+     */\n+    @Named\n+    LogComponent log() {\n+        DefaultExchangeFormatter formatter = new DefaultExchangeFormatter();\n+        formatter.setShowExchangePattern(false);\n+        formatter.setShowBodyType(false);\n+\n+        LogComponent component = new LogComponent();\n+        component.setExchangeFormatter(formatter);\n+\n+        return component;\n+    }\n+}\n+----\n+\n+To configure component and other aspects of Apache Camel through properties, you can add the camel-core-main extension which brings functionnalities from https://camel.apache.org/components/latest/others/main.html[Apache Camel Main] to Camel Quarkus. By adding such extension the programmatic configuration of the Log Component done above, can be done through properties:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0OTM4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // the configuration of the log component is programmatically done using CDI\n          \n          \n            \n                            // the configuration of the log component is done programmatically using CDI", "url": "https://github.com/apache/camel-quarkus/pull/1344#discussion_r441749385", "createdAt": "2020-06-17T18:36:46Z", "author": {"login": "ppalaga"}, "path": "examples/timer-log-cdi/src/main/java/org/acme/timer/TimerRoute.java", "diffHunk": "@@ -31,18 +31,24 @@\n @ApplicationScoped\n public class TimerRoute extends RouteBuilder {\n \n-    /** {@code timer.period} is defined in {@code src/main/resources/application.properties} */\n+    /**\n+     * {@code timer.period} is defined in {@code src/main/resources/application.properties}\n+     */\n     @ConfigProperty(name = \"timer.period\", defaultValue = \"1000\")\n     String period;\n \n-    /** An injected bean */\n+    /**\n+     * An injected bean\n+     */\n     @Inject\n     Counter counter;\n \n     @Override\n     public void configure() throws Exception {\n         fromF(\"timer:foo?period=%s\", period)\n                 .setBody(exchange -> \"Incremented the counter: \" + counter.increment())\n-                .to(\"log:example?showExchangePattern=false&showBodyType=false\");\n+                // the configuration of the log component is programmatically done using CDI", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/5ffa86e60bb3f5f7580999f5d6b2d2c4fd8cbbc3", "committedDate": "2020-06-17T18:26:29Z", "message": "doc"}, "afterCommit": {"oid": "c7e665396ef39b43c8a03128c30ce7a90a09c131", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/c7e665396ef39b43c8a03128c30ce7a90a09c131", "committedDate": "2020-06-18T22:46:26Z", "message": "Support Quarkus command mode #1037"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7e665396ef39b43c8a03128c30ce7a90a09c131", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/c7e665396ef39b43c8a03128c30ce7a90a09c131", "committedDate": "2020-06-18T22:46:26Z", "message": "Support Quarkus command mode #1037"}, "afterCommit": {"oid": "9dd5f3f4ce6b582ef528f1dd238788b1ad5e098a", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/9dd5f3f4ce6b582ef528f1dd238788b1ad5e098a", "committedDate": "2020-06-19T12:10:48Z", "message": "Support Quarkus command mode #1037"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dd5f3f4ce6b582ef528f1dd238788b1ad5e098a", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/9dd5f3f4ce6b582ef528f1dd238788b1ad5e098a", "committedDate": "2020-06-19T12:10:48Z", "message": "Support Quarkus command mode #1037"}, "afterCommit": {"oid": "78dc9d0d8b35540abf904ca69de10b0d9caa7f98", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/78dc9d0d8b35540abf904ca69de10b0d9caa7f98", "committedDate": "2020-06-19T12:31:41Z", "message": "Support Quarkus command mode #1037"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78dc9d0d8b35540abf904ca69de10b0d9caa7f98", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/78dc9d0d8b35540abf904ca69de10b0d9caa7f98", "committedDate": "2020-06-19T12:31:41Z", "message": "Support Quarkus command mode #1037"}, "afterCommit": {"oid": "a5f5f828d9676887e9152eb2a5f2ff38575e44e8", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/a5f5f828d9676887e9152eb2a5f2ff38575e44e8", "committedDate": "2020-06-19T12:38:18Z", "message": "Support Quarkus command mode #1037"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a906e3a3eb1556c07d1c8758ccc0c52cfa9d5f66", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/a906e3a3eb1556c07d1c8758ccc0c52cfa9d5f66", "committedDate": "2020-06-19T12:54:44Z", "message": "Update examples/timer-log-cdi/src/main/java/org/acme/timer/TimerRoute.java\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>"}, "afterCommit": {"oid": "725de9b5ea2b303169bff877c4229f79a279c489", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/725de9b5ea2b303169bff877c4229f79a279c489", "committedDate": "2020-06-19T12:57:44Z", "message": "Revisit camel-quarkus bootstrap #1128 (docs)\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "725de9b5ea2b303169bff877c4229f79a279c489", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/725de9b5ea2b303169bff877c4229f79a279c489", "committedDate": "2020-06-19T12:57:44Z", "message": "Revisit camel-quarkus bootstrap #1128 (docs)\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>"}, "afterCommit": {"oid": "7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc", "committedDate": "2020-06-19T13:12:05Z", "message": "Regen"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDcwMDI3", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-434070027", "createdAt": "2020-06-19T13:18:34Z", "commit": {"oid": "7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDczODE0", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-434073814", "createdAt": "2020-06-19T13:23:52Z", "commit": {"oid": "7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDc3Njg4", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-434077688", "createdAt": "2020-06-19T13:29:20Z", "commit": {"oid": "7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/7d1196f4b8b0869a3f3b7bac7d4f9c8775029acc", "committedDate": "2020-06-19T13:12:05Z", "message": "Regen"}, "afterCommit": {"oid": "6ba740a42ae92a16de36c8f441fc2d6e76f1f6e1", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/6ba740a42ae92a16de36c8f441fc2d6e76f1f6e1", "committedDate": "2020-06-19T13:36:42Z", "message": "Regen"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDk3MzM2", "url": "https://github.com/apache/camel-quarkus/pull/1344#pullrequestreview-434097336", "createdAt": "2020-06-19T13:56:09Z", "commit": {"oid": "6ba740a42ae92a16de36c8f441fc2d6e76f1f6e1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ba740a42ae92a16de36c8f441fc2d6e76f1f6e1", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/6ba740a42ae92a16de36c8f441fc2d6e76f1f6e1", "committedDate": "2020-06-19T13:36:42Z", "message": "Regen"}, "afterCommit": {"oid": "800d578d51a808c8f61f440f2ba884c0b459ebf1", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/800d578d51a808c8f61f440f2ba884c0b459ebf1", "committedDate": "2020-06-19T14:20:09Z", "message": "Regen"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "800d578d51a808c8f61f440f2ba884c0b459ebf1", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/800d578d51a808c8f61f440f2ba884c0b459ebf1", "committedDate": "2020-06-19T14:20:09Z", "message": "Regen"}, "afterCommit": {"oid": "a94129f0f546fbce3629e860a430629981caf7b9", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/a94129f0f546fbce3629e860a430629981caf7b9", "committedDate": "2020-06-19T15:46:16Z", "message": "Regen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ea3279d196a9c76dc42db00fe32b1cce42fd8bd", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/5ea3279d196a9c76dc42db00fe32b1cce42fd8bd", "committedDate": "2020-06-20T15:32:27Z", "message": "Re-apply commit 9f425b3d14e1831f06cbe246110de670fef9cd3b"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f5e58b1638b74b842e9d81f6c013a4ff5e221d8", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/9f5e58b1638b74b842e9d81f6c013a4ff5e221d8", "committedDate": "2020-06-20T15:32:30Z", "message": "Re apply commit 98abf252d399c70967ffea37295431fb37ca26c7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a56a55a3e827a5327f0fe13947494e4f55f1b49a", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/a56a55a3e827a5327f0fe13947494e4f55f1b49a", "committedDate": "2020-06-20T15:32:30Z", "message": "Revisit camel-quarkus bootstrap #1128"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "502059f0b25399c7df17e6675bf4ac2b0ab2d550", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/502059f0b25399c7df17e6675bf4ac2b0ab2d550", "committedDate": "2020-06-20T15:32:30Z", "message": "Regen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa9206bba17210cb9a6134244dd1a632f26af254", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/aa9206bba17210cb9a6134244dd1a632f26af254", "committedDate": "2020-06-20T15:32:31Z", "message": "Manually re-apply commit 9d990df64ceb946e7eed6006dd01fff09e0eceef"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d00c2686b91550f496f4119d712f8e52d827a0ff", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/d00c2686b91550f496f4119d712f8e52d827a0ff", "committedDate": "2020-06-20T15:32:31Z", "message": "Support Quarkus command mode #1037"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe156967bd9153b4a0018afbc7a704fc3bae74e4", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/fe156967bd9153b4a0018afbc7a704fc3bae74e4", "committedDate": "2020-06-20T15:32:31Z", "message": "Revisit camel-quarkus bootstrap #1128 (docs)\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68e5e31456eefd10fbb7bb9ea389abce2c6c838e", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/68e5e31456eefd10fbb7bb9ea389abce2c6c838e", "committedDate": "2020-06-20T15:32:31Z", "message": "Regen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd76a6fac3b9a100512b871d306875a6b87379e", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/1dd76a6fac3b9a100512b871d306875a6b87379e", "committedDate": "2020-06-20T15:32:31Z", "message": "Fix NPE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82269690255e52af06b88dc48202479658542464", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/82269690255e52af06b88dc48202479658542464", "committedDate": "2020-06-20T16:05:31Z", "message": "Add a test to validate fix for #1368"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7544287f9580b313668b201133cf10204fe43d3f", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/7544287f9580b313668b201133cf10204fe43d3f", "committedDate": "2020-06-20T16:06:01Z", "message": "Regen"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdf754aacef4ff0464261d5f89dfc0bf92ccd536", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/fdf754aacef4ff0464261d5f89dfc0bf92ccd536", "committedDate": "2020-06-19T16:34:26Z", "message": "Fix NPE"}, "afterCommit": {"oid": "7544287f9580b313668b201133cf10204fe43d3f", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel-quarkus/commit/7544287f9580b313668b201133cf10204fe43d3f", "committedDate": "2020-06-20T16:06:01Z", "message": "Regen"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2942, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}