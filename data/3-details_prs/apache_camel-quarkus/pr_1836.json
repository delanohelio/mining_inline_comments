{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTkzNTMz", "number": 1836, "title": "RSS native support", "bodyText": "Fixes #1711", "createdAt": "2020-09-25T10:54:04Z", "url": "https://github.com/apache/camel-quarkus/pull/1836", "merged": true, "mergeCommit": {"oid": "a7822e8aaa29542e49193c150f7dde67389cbc89"}, "closed": true, "closedAt": "2020-09-25T12:39:06Z", "author": {"login": "jamesnetherton"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMTi89AH2gAyNDkyOTkzNTMzOmM1NDg3OWUxZGZhZWQ4MmQ1ZjYzNDViOWY1MGJiNzRjODE3ZTU0OWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMVGAzAFqTQ5NjM4MDU5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c54879e1dfaed82d5f6345b9f50bb74c817e549c", "author": {"user": {"login": "jamesnetherton", "name": "James Netherton"}}, "url": "https://github.com/apache/camel-quarkus/commit/c54879e1dfaed82d5f6345b9f50bb74c817e549c", "committedDate": "2020-09-25T10:50:42Z", "message": "RSS native support\n\nFixes #1711"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MzI2NTIx", "url": "https://github.com/apache/camel-quarkus/pull/1836#pullrequestreview-496326521", "createdAt": "2020-09-25T11:12:18Z", "commit": {"oid": "c54879e1dfaed82d5f6345b9f50bb74c817e549c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2Mzc5NTI1", "url": "https://github.com/apache/camel-quarkus/pull/1836#pullrequestreview-496379525", "createdAt": "2020-09-25T12:37:21Z", "commit": {"oid": "c54879e1dfaed82d5f6345b9f50bb74c817e549c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMjozNzoyMVrOHYB1PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMjozNzoyMVrOHYB1PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk1Nzg4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        InputStream stream = Thread.currentThread().getContextClassLoader()\n          \n          \n            \n                                .getResourceAsStream(\"com/rometools/rome/rome.properties\");\n          \n          \n            \n                    try (InputStream stream = Thread.currentThread().getContextClassLoader()\n          \n          \n            \n                                .getResourceAsStream(\"com/rometools/rome/rome.properties\")) {\n          \n      \n    \n    \n  \n\nStreams should be closed. A followup would be enough", "url": "https://github.com/apache/camel-quarkus/pull/1836#discussion_r494957885", "createdAt": "2020-09-25T12:37:21Z", "author": {"login": "ppalaga"}, "path": "extensions/rss/deployment/src/main/java/org/apache/camel/quarkus/component/rss/deployment/RssProcessor.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.rss.deployment;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+\n+class RssProcessor {\n+\n+    private static final String FEATURE = \"camel-rss\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    NativeImageResourceBuildItem nativeImageResources() {\n+        return new NativeImageResourceBuildItem(\"com/rometools/rome/rome.properties\");\n+    }\n+\n+    @BuildStep\n+    IndexDependencyBuildItem indexDependencies() {\n+        return new IndexDependencyBuildItem(\"com.rometools\", \"rome\");\n+    }\n+\n+    @BuildStep\n+    void registerForReflection(BuildProducer<ReflectiveClassBuildItem> reflectiveClass) {\n+        // Register for reflection feed parser / generator classes from rome.properties\n+        try {\n+            InputStream stream = Thread.currentThread().getContextClassLoader()\n+                    .getResourceAsStream(\"com/rometools/rome/rome.properties\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c54879e1dfaed82d5f6345b9f50bb74c817e549c"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MzgwNTk2", "url": "https://github.com/apache/camel-quarkus/pull/1836#pullrequestreview-496380596", "createdAt": "2020-09-25T12:38:54Z", "commit": {"oid": "c54879e1dfaed82d5f6345b9f50bb74c817e549c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2790, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}