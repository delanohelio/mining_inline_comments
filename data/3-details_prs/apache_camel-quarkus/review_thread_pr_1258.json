{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzg1OTYz", "number": 1258, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozMTowNlrOD-3yTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjoyNzo0MlrOD_3haQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjUyMzAwOnYy", "diffSide": "RIGHT", "path": ".github/test-categories.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozMTowNlrOGZPFFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozMTowNlrOGZPFFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNDY0Ng==", "bodyText": "We could perhaps combine these under a single debezium itests module. Otherwise we have to do the native compilation step on every debezium itest we add.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429114646", "createdAt": "2020-05-22T08:31:06Z", "author": {"login": "jamesnetherton"}, "path": ".github/test-categories.yaml", "diffHunk": "@@ -32,6 +32,7 @@ main:\n   - main-xml-jaxb\n database:\n   - couchdb\n+  - debezium-mysql", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjUyNjY3OnYy", "diffSide": "RIGHT", "path": "extensions/debezium-mysql/deployment/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozMjoyMFrOGZPHbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozMjoyMFrOGZPHbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNTI0NQ==", "bodyText": "Lets leave the format of the project tags as is.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429115245", "createdAt": "2020-05-22T08:32:20Z", "author": {"login": "jamesnetherton"}, "path": "extensions/debezium-mysql/deployment/pom.xml", "diffHunk": "@@ -17,7 +17,9 @@\n     limitations under the License.\n \n -->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjUzMTUyOnYy", "diffSide": "RIGHT", "path": "extensions/debezium-mysql/deployment/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/deployment/DebeziumMysqlProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNDowMlrOGZPKdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNDowMlrOGZPKdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNjAyMw==", "bodyText": "If this is going to be required for every camel-debezium extension, it'd be better to push it into a common debezium-support extension.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429116023", "createdAt": "2020-05-22T08:34:02Z", "author": {"login": "jamesnetherton"}, "path": "extensions/debezium-mysql/deployment/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/deployment/DebeziumMysqlProcessor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.debezium.mysql.deployment;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.jboss.jandex.IndexView;\n+\n+class DebeziumMysqlProcessor {\n+\n+    private static final String FEATURE = \"camel-debezium-mysql\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjUzNjc2OnYy", "diffSide": "RIGHT", "path": "extensions/debezium-mysql/deployment/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/deployment/DebeziumMysqlProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNTozNlrOGZPNog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNTozNlrOGZPNog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNjgzNA==", "bodyText": "Aside from the Connector and ConnectorTask classes, the other items can probably pushed into a common debezium-support extension", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429116834", "createdAt": "2020-05-22T08:35:36Z", "author": {"login": "jamesnetherton"}, "path": "extensions/debezium-mysql/deployment/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/deployment/DebeziumMysqlProcessor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.debezium.mysql.deployment;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.jboss.jandex.IndexView;\n+\n+class DebeziumMysqlProcessor {\n+\n+    private static final String FEATURE = \"camel-debezium-mysql\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        String[] dtos = index.getKnownClasses().stream().map(ci -> ci.name().toString())\n+                .filter(n -> n.startsWith(\"org.apache.kafka.connect.json\")\n+                        || n.startsWith(\"io.debezium.embedded.spi\"))\n+                .sorted()\n+                .toArray(String[]::new);\n+\n+        return new ReflectiveClassBuildItem(false, true, dtos);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem reflectiveClasses() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU0Mjk3OnYy", "diffSide": "RIGHT", "path": "extensions/debezium-mysql/deployment/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/deployment/DebeziumMysqlProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNzo0NVrOGZPRqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNzo0NVrOGZPRqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzg2NQ==", "bodyText": "Similar to previous comments. Apart from the connector, this seems likely to be required in all the debezium extensions so would be better located in a common place.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429117865", "createdAt": "2020-05-22T08:37:45Z", "author": {"login": "jamesnetherton"}, "path": "extensions/debezium-mysql/deployment/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/deployment/DebeziumMysqlProcessor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.debezium.mysql.deployment;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.jboss.jandex.IndexView;\n+\n+class DebeziumMysqlProcessor {\n+\n+    private static final String FEATURE = \"camel-debezium-mysql\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        String[] dtos = index.getKnownClasses().stream().map(ci -> ci.name().toString())\n+                .filter(n -> n.startsWith(\"org.apache.kafka.connect.json\")\n+                        || n.startsWith(\"io.debezium.embedded.spi\"))\n+                .sorted()\n+                .toArray(String[]::new);\n+\n+        return new ReflectiveClassBuildItem(false, true, dtos);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem reflectiveClasses() {\n+        return new ReflectiveClassBuildItem(false, false,\n+                new String[] { \"org.apache.kafka.connect.storage.FileOffsetBackingStore\",\n+                        \"org.apache.kafka.connect.storage.MemoryOffsetBackingStore\",\n+                        \"io.debezium.connector.mysql.MySqlConnector\",\n+                        \"io.debezium.connector.mysql.MySqlConnectorTask\",\n+                        \"io.debezium.relational.history.FileDatabaseHistory\" });\n+    }\n+\n+    @BuildStep\n+    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU0NjU2OnYy", "diffSide": "RIGHT", "path": "extensions/debezium-mysql/runtime/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/SubstituteMetrics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozODo1N1rOGZPT2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozODo1N1rOGZPT2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExODQyNA==", "bodyText": "Duplicated with debezium-postgres so belongs in a common extension.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429118424", "createdAt": "2020-05-22T08:38:57Z", "author": {"login": "jamesnetherton"}, "path": "extensions/debezium-mysql/runtime/src/main/java/org/apache/camel/quarkus/component/debezium/mysql/SubstituteMetrics.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.debezium.mysql;\n+\n+import com.oracle.svm.core.annotate.Substitute;\n+import com.oracle.svm.core.annotate.TargetClass;\n+import org.slf4j.Logger;\n+\n+@TargetClass(io.debezium.metrics.Metrics.class)\n+final class SubstituteMetrics {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU1OTA3OnYy", "diffSide": "RIGHT", "path": "integration-tests/debezium-mysql/src/main/resources/application.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo0MzoyNVrOGZPb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo0MzoyNVrOGZPb0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyMDQ2Nw==", "bodyText": "Do we need this file? Presumably not if everything is commented out.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429120467", "createdAt": "2020-05-22T08:43:25Z", "author": {"login": "jamesnetherton"}, "path": "integration-tests/debezium-mysql/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,18 @@\n+## ---------------------------------------------------------------------------\n+## Licensed to the Apache Software Foundation (ASF) under one or more\n+## contributor license agreements.  See the NOTICE file distributed with\n+## this work for additional information regarding copyright ownership.\n+## The ASF licenses this file to You under the Apache License, Version 2.0\n+## (the \"License\"); you may not use this file except in compliance with\n+## the License.  You may obtain a copy of the License at\n+##\n+##      http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing, software\n+## distributed under the License is distributed on an \"AS IS\" BASIS,\n+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+## See the License for the specific language governing permissions and\n+## limitations under the License.\n+## ---------------------------------------------------------------------------\n+\n+#quarkus.log.category.\"io\".level=DEBUG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f48c3ae8f971c6f5b992d31fef82ad38a4773e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODIxNDQ1OnYy", "diffSide": "RIGHT", "path": "integration-tests/debezium-common/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxNDo1NVrOGaENMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNjowMDoyNlrOGaFQeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4NTA3Mw==", "bodyText": "This must be with scope provided, it's not compliant with the ASF license.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429985073", "createdAt": "2020-05-25T15:14:55Z", "author": {"login": "oscerd"}, "path": "integration-tests/debezium-common/pom.xml", "diffHunk": "@@ -58,32 +74,36 @@\n             <artifactId>quarkus-junit5</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>io.rest-assured</groupId>\n             <artifactId>rest-assured</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n-        <!-- test dependencies - camel-quarkus -->\n         <dependency>\n             <groupId>org.apache.camel.quarkus</groupId>\n             <artifactId>camel-quarkus-integration-testcontainers-support</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>postgresql</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.postgresql</groupId>\n             <artifactId>postgresql</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>mysql</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fc07396ecce3bb401774612633202551daf4c2e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5OTg1OQ==", "bodyText": "@oscerd I'm not still 100% sure about the licensing. But I've removed mysql-connector. It seems that it is transitively added also by quarkus-jdbc-mysql\n\n[INFO] |  - io.quarkus:quarkus-jdbc-mysql:jar:1.5.0.CR1:compile\n[INFO] (tab) |  - mysql:mysql-connector-java:jar:8.0.20:compile\n\nSo I can run mysql container without need of license (eula), but I can not use driver, right?\nDoes it mean, that it shouldn't be transitive in quarkus-jdbc-mysql, or is this eula linked only to mysql-connector-java? (wich doesn't seem to be correct, because I'm still using driver)", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r429999859", "createdAt": "2020-05-25T15:53:21Z", "author": {"login": "JiriOndrusek"}, "path": "integration-tests/debezium-common/pom.xml", "diffHunk": "@@ -58,32 +74,36 @@\n             <artifactId>quarkus-junit5</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>io.rest-assured</groupId>\n             <artifactId>rest-assured</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n-        <!-- test dependencies - camel-quarkus -->\n         <dependency>\n             <groupId>org.apache.camel.quarkus</groupId>\n             <artifactId>camel-quarkus-integration-testcontainers-support</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>postgresql</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.postgresql</groupId>\n             <artifactId>postgresql</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>mysql</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4NTA3Mw=="}, "originalCommit": {"oid": "6fc07396ecce3bb401774612633202551daf4c2e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAwMjI5Nw==", "bodyText": "mysql container doesn't require EULA, mssql server does. Quarkus doesn't apply the ASF license policy or at least it's not subject to the ASF rules, they only use the license. They shouldn't doing it, because mysql-connector-java is not compliant with ASF license, but it's up to  them. In camel-quarkus we should exclude the mysql-connector-java from the quarkus-jdbc-driver and redeclare it as provided. You're mixing mysql and mssql: EULA is related only to the mssql testcontainer container. Mysql-connector-java has a licensing problem related to ASF license compliancy: we cannot use it explicitly in our projects, we need to make users providing it, that's why it should be provided as scope.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r430002297", "createdAt": "2020-05-25T16:00:26Z", "author": {"login": "oscerd"}, "path": "integration-tests/debezium-common/pom.xml", "diffHunk": "@@ -58,32 +74,36 @@\n             <artifactId>quarkus-junit5</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>io.rest-assured</groupId>\n             <artifactId>rest-assured</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n-        <!-- test dependencies - camel-quarkus -->\n         <dependency>\n             <groupId>org.apache.camel.quarkus</groupId>\n             <artifactId>camel-quarkus-integration-testcontainers-support</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>postgresql</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.postgresql</groupId>\n             <artifactId>postgresql</artifactId>\n             <scope>test</scope>\n         </dependency>\n-\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>mysql</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4NTA3Mw=="}, "originalCommit": {"oid": "6fc07396ecce3bb401774612633202551daf4c2e"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTUxMTEzOnYy", "diffSide": "RIGHT", "path": ".github/test-categories.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjozMDoxN1rOGaQSHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjozMDoxN1rOGaQSHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4Mjk0MQ==", "bodyText": "Do we need the -common suffix? If not, lets simplify to debezium.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r430182941", "createdAt": "2020-05-26T06:30:17Z", "author": {"login": "jamesnetherton"}, "path": ".github/test-categories.yaml", "diffHunk": "@@ -32,7 +32,7 @@ main:\n   - main-xml-jaxb\n database:\n   - couchdb\n-  - debezium-postgres\n+  - debezium-common", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc8343f070da965e713fe65ba9fb5f59e5d8c2ae"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTUyMTkzOnYy", "diffSide": "RIGHT", "path": "integration-tests/debezium-common/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjozNDoyNVrOGaQYZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjozNDoyNVrOGaQYZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4NDU1MQ==", "bodyText": "Better to just have Integration tests for Camel Quarkus Debezium Extensions, else the description will get ever larger once support for other stuff is added.", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r430184551", "createdAt": "2020-05-26T06:34:25Z", "author": {"login": "jamesnetherton"}, "path": "integration-tests/debezium-common/pom.xml", "diffHunk": "@@ -28,9 +28,9 @@\n         <relativePath>../pom.xml</relativePath>\n     </parent>\n \n-    <artifactId>camel-quarkus-integration-test-debezium-postgres</artifactId>\n-    <name>Camel Quarkus :: Integration Tests :: Debezium PostgresSQL Connector</name>\n-    <description>Integration tests for Camel Quarkus Debezium PostgresSQL Connector extension</description>\n+    <artifactId>camel-quarkus-integration-test-debezium-common</artifactId>\n+    <name>Camel Quarkus :: Integration Tests :: Debezium Connectors</name>\n+    <description>Integration tests for Camel Quarkus Debezium PostgresSQL, MySQL Connector extension</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc8343f070da965e713fe65ba9fb5f59e5d8c2ae"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjk2NTUzOnYy", "diffSide": "RIGHT", "path": "integration-tests/debezium/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjoyNzo0MlrOGayZvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjoyNzo0MlrOGayZvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0MTk1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <mysql.driver.file>libs/mysql-connector-java-8.0.20.jar</mysql.driver.file>\n          \n          \n            \n                    <!-- You need to download the driver yourself. We cannot add a compile scope dependency for legal reasons. -->\n          \n          \n            \n                    <!-- See https://camel.apache.org/camel-quarkus/latest/extensions/debezium-myslq.html#_usage for more details -->\n          \n          \n            \n                    <mysql.driver.file>libs/mysql-connector-java-8.0.20.jar</mysql.driver.file>", "url": "https://github.com/apache/camel-quarkus/pull/1258#discussion_r430741951", "createdAt": "2020-05-26T22:27:42Z", "author": {"login": "ppalaga"}, "path": "integration-tests/debezium/pom.xml", "diffHunk": "@@ -39,9 +39,22 @@\n         <!-- explicit dependencies of this module in the Maven sense, although they are required by the Quarkus Maven plugin. -->\n         <!-- Please update rule whenever you change the dependencies of this module by running -->\n         <!--     mvn process-resources -Pformat    from the root directory -->\n-        <mvnd.builder.rule>camel-quarkus-debezium-postgres-deployment,camel-quarkus-support-policy-deployment</mvnd.builder.rule>\n+        <mvnd.builder.rule>camel-quarkus-debezium-postgres-deployment,camel-quarkus-debezium-mysql-deployment,camel-quarkus-support-policy-deployment</mvnd.builder.rule>\n+        <mysql.driver.file>libs/mysql-connector-java-8.0.20.jar</mysql.driver.file>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8ccc66087e71afa59c6f30539eb2093408ae7af"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4309, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}