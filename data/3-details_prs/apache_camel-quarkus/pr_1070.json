{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTY5NjYy", "number": 1070, "title": "Add a native extension for AWS2-SQS", "bodyText": "Fixes #1069", "createdAt": "2020-04-10T16:08:09Z", "url": "https://github.com/apache/camel-quarkus/pull/1070", "merged": true, "mergeCommit": {"oid": "a4b68e956e2e766d770d09f6c1f875e2ffc96cfa"}, "closed": true, "closedAt": "2020-04-10T19:41:29Z", "author": {"login": "oscerd"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWTYkhgH2gAyNDAxOTY5NjYyOjg2Mzk3OWYzYjdhZDhmNmQ0ZGZhNTEwMDI0NTM4NTk0Mzg4OTFlZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXjjxAgFqTM5MjkxNjAxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "863979f3b7ad8f6d4dfa51002453859438891efb", "author": {"user": {"login": "oscerd", "name": "Andrea Cosentino"}}, "url": "https://github.com/apache/camel-quarkus/commit/863979f3b7ad8f6d4dfa51002453859438891efb", "committedDate": "2020-04-10T16:07:27Z", "message": "Add a native extension for AWS2-SQS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTI5MzYz", "url": "https://github.com/apache/camel-quarkus/pull/1070#pullrequestreview-391529363", "createdAt": "2020-04-10T16:19:52Z", "commit": {"oid": "863979f3b7ad8f6d4dfa51002453859438891efb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80", "author": {"user": {"login": "oscerd", "name": "Andrea Cosentino"}}, "url": "https://github.com/apache/camel-quarkus/commit/a12ec82d1e15f971dbc248537c930120462dcf80", "committedDate": "2020-04-10T17:38:27Z", "message": "Added extension to pom.xml and format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyOTE2MDEz", "url": "https://github.com/apache/camel-quarkus/pull/1070#pullrequestreview-392916013", "createdAt": "2020-04-14T13:17:27Z", "commit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoxNzoyN1rOGFOJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoyOTo0MFrOGFOrvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyNzg0OQ==", "bodyText": "BTW there is Stream.toArray() that can save the List to array conversion in the next statement.", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408127849", "createdAt": "2020-04-14T13:17:27Z", "author": {"login": "ppalaga"}, "path": "extensions/aws2-sqs/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/sqs/deployment/Aws2SqsProcessor.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.aws2.sqs.deployment;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.BeanRegistrationPhaseBuildItem;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import org.jboss.jandex.DotName;\n+import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;\n+import software.amazon.awssdk.http.SdkHttpService;\n+\n+class Aws2SqsProcessor {\n+    private static final String FEATURE = \"camel-aws2-sqs\";\n+\n+    public static final String AWS_SDK_APPLICATION_ARCHIVE_MARKERS = \"software/amazon/awssdk\";\n+\n+    private static final String APACHE_HTTP_SERVICE = \"software.amazon.awssdk.http.apache.ApacheSdkHttpService\";\n+\n+    private static final List<String> INTERCEPTOR_PATHS = Arrays.asList(\n+            \"software/amazon/awssdk/global/handlers/execution.interceptors\",\n+            \"software/amazon/awssdk/services/sqs/execution.interceptors\");\n+\n+    private static final DotName EXECUTION_INTERCEPTOR_NAME = DotName.createSimple(ExecutionInterceptor.class.getName());\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ExtensionSslNativeSupportBuildItem activateSslNativeSupport() {\n+        return new ExtensionSslNativeSupportBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep(applicationArchiveMarkers = { AWS_SDK_APPLICATION_ARCHIVE_MARKERS })\n+    void process(CombinedIndexBuildItem combinedIndexBuildItem,\n+            BuildProducer<ExtensionSslNativeSupportBuildItem> extensionSslNativeSupport,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClasses,\n+            BuildProducer<FeatureBuildItem> feature,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<NativeImageResourceBuildItem> resource) {\n+\n+        INTERCEPTOR_PATHS.forEach(path -> resource.produce(new NativeImageResourceBuildItem(path)));\n+\n+        List<String> knownInterceptorImpls = combinedIndexBuildItem.getIndex()\n+                .getAllKnownImplementors(EXECUTION_INTERCEPTOR_NAME)\n+                .stream()\n+                .map(c -> c.name().toString()).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDA5Ng==", "bodyText": "Hm... is constructor and methods reflection really necessary for java.lang.String? Sounds possible, but rather strange. I wonder who is the caller in that reflective access?", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408130096", "createdAt": "2020-04-14T13:20:38Z", "author": {"login": "ppalaga"}, "path": "extensions/aws2-sqs/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/sqs/deployment/Aws2SqsProcessor.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.aws2.sqs.deployment;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.BeanRegistrationPhaseBuildItem;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import org.jboss.jandex.DotName;\n+import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;\n+import software.amazon.awssdk.http.SdkHttpService;\n+\n+class Aws2SqsProcessor {\n+    private static final String FEATURE = \"camel-aws2-sqs\";\n+\n+    public static final String AWS_SDK_APPLICATION_ARCHIVE_MARKERS = \"software/amazon/awssdk\";\n+\n+    private static final String APACHE_HTTP_SERVICE = \"software.amazon.awssdk.http.apache.ApacheSdkHttpService\";\n+\n+    private static final List<String> INTERCEPTOR_PATHS = Arrays.asList(\n+            \"software/amazon/awssdk/global/handlers/execution.interceptors\",\n+            \"software/amazon/awssdk/services/sqs/execution.interceptors\");\n+\n+    private static final DotName EXECUTION_INTERCEPTOR_NAME = DotName.createSimple(ExecutionInterceptor.class.getName());\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ExtensionSslNativeSupportBuildItem activateSslNativeSupport() {\n+        return new ExtensionSslNativeSupportBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep(applicationArchiveMarkers = { AWS_SDK_APPLICATION_ARCHIVE_MARKERS })\n+    void process(CombinedIndexBuildItem combinedIndexBuildItem,\n+            BuildProducer<ExtensionSslNativeSupportBuildItem> extensionSslNativeSupport,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClasses,\n+            BuildProducer<FeatureBuildItem> feature,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<NativeImageResourceBuildItem> resource) {\n+\n+        INTERCEPTOR_PATHS.forEach(path -> resource.produce(new NativeImageResourceBuildItem(path)));\n+\n+        List<String> knownInterceptorImpls = combinedIndexBuildItem.getIndex()\n+                .getAllKnownImplementors(EXECUTION_INTERCEPTOR_NAME)\n+                .stream()\n+                .map(c -> c.name().toString()).collect(Collectors.toList());\n+\n+        reflectiveClasses.produce(new ReflectiveClassBuildItem(false, false,\n+                knownInterceptorImpls.toArray(new String[knownInterceptorImpls.size()])));\n+\n+        reflectiveClasses.produce(new ReflectiveClassBuildItem(true, false,\n+                String.class.getCanonicalName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMjcyOA==", "bodyText": "Nitpick: this should better be ...aws2", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408132728", "createdAt": "2020-04-14T13:24:19Z", "author": {"login": "ppalaga"}, "path": "integration-tests/aws2/src/main/java/org/apache/camel/quarkus/component/aws/CamelRoute.java", "diffHunk": "@@ -14,21 +14,21 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.quarkus.component.aws2.sqs.it;\n+package org.apache.camel.quarkus.component.aws;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzNTcxMQ==", "bodyText": "I do not think @RegisterForReflection is necessary here", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408135711", "createdAt": "2020-04-14T13:28:30Z", "author": {"login": "ppalaga"}, "path": "integration-tests/aws2/src/main/java/org/apache/camel/quarkus/component/aws/CamelRoute.java", "diffHunk": "@@ -14,21 +14,21 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.quarkus.component.aws2.sqs.it;\n+package org.apache.camel.quarkus.component.aws;\n \n-import io.quarkus.test.junit.QuarkusTest;\n-import io.restassured.RestAssured;\n-import org.junit.jupiter.api.Test;\n+import io.quarkus.runtime.annotations.RegisterForReflection;\n+import org.apache.camel.builder.RouteBuilder;\n \n-@QuarkusTest\n-class Aws2SqsTest {\n+@RegisterForReflection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzNjYzNw==", "bodyText": "quarkus.ssl.native=true is not necessary, because we produce ExtensionSslNativeSupportBuildItem", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408136637", "createdAt": "2020-04-14T13:29:40Z", "author": {"login": "ppalaga"}, "path": "integration-tests/aws2/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,33 @@\n+## ---------------------------------------------------------------------------\n+## Licensed to the Apache Software Foundation (ASF) under one or more\n+## contributor license agreements.  See the NOTICE file distributed with\n+## this work for additional information regarding copyright ownership.\n+## The ASF licenses this file to You under the Apache License, Version 2.0\n+## (the \"License\"); you may not use this file except in compliance with\n+## the License.  You may obtain a copy of the License at\n+##\n+##      http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing, software\n+## distributed under the License is distributed on an \"AS IS\" BASIS,\n+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+## See the License for the specific language governing permissions and\n+## limitations under the License.\n+## ---------------------------------------------------------------------------\n+#\n+# Quarkus\n+#\n+quarkus.ssl.native=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2475, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}