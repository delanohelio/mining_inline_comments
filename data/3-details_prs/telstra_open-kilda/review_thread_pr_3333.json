{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTIwMDIy", "number": 3333, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzowOTo0OVrODsDp4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzowOTo0OVrODsDp4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTIzODA4OnYy", "diffSide": "RIGHT", "path": "src-java/grpc-speaker/grpc-service/src/main/java/org/openkilda/grpc/speaker/messaging/MessageProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzowOTo0OVrOF8wYow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzowOTo0OVrOF8wYow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1MTYxOQ==", "bodyText": "Do we really want INFO log message for dump and get operations?", "url": "https://github.com/telstra/open-kilda/pull/3333#discussion_r399251619", "createdAt": "2020-03-27T13:09:49Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/grpc-speaker/grpc-service/src/main/java/org/openkilda/grpc/speaker/messaging/MessageProcessor.java", "diffHunk": "@@ -41,34 +47,66 @@\n     @Autowired\n     RequestMapper requestMapper;\n \n+    @Value(\"#{kafkaTopicsConfig.getGrpcResponseTopic()}\")\n+    private String grpcResponseTopic;\n+\n     // TODO error handling\n \n     /**\n      * Process request.\n      *\n-     * @param command a command data.\n+     * @param message a message to be processed\n      */\n-    public void processRequest(CommandData command) {\n-        if (command instanceof CreateLogicalPortRequest) {\n-            CreateLogicalPortRequest req = (CreateLogicalPortRequest) command;\n-            service.createLogicalPort(req.getAddress(), requestMapper.toLogicalPort(req))\n-                    .thenAccept(e -> sendResponse(new CreateLogicalPortResponse(req.getAddress(), e, true)));\n-\n-        } else if (command instanceof DumpLogicalPortsRequest) {\n-            DumpLogicalPortsRequest req = (DumpLogicalPortsRequest) command;\n-            service.dumpLogicalPorts(req.getAddress())\n-                    .thenAccept(e -> sendResponse(new DumpLogicalPortsResponse(req.getAddress(), e)));\n-\n-        } else if (command instanceof GetSwitchInfoRequest) {\n-            GetSwitchInfoRequest req = (GetSwitchInfoRequest) command;\n-            service.getSwitchStatus(req.getAddress())\n-                    .thenAccept(e -> sendResponse(new GetSwitchInfoResponse(req.getAddress(), e)));\n+    public void processRequest(Message message) {\n+        if (message instanceof CommandMessage) {\n+            handleCommandMessage((CommandMessage) message);\n+        } else {\n+            unhandledMessage(message);\n+        }\n+    }\n \n+    private void handleCommandMessage(CommandMessage command) {\n+        CommandData data = command.getData();\n+        String correlationId = command.getCorrelationId();\n+\n+        if (data instanceof CreateLogicalPortRequest) {\n+            handleCreateLogicalPortRequest((CreateLogicalPortRequest) data, correlationId);\n+        } else if (data instanceof DumpLogicalPortsRequest) {\n+            handleDumpLogicalPortsRequest((DumpLogicalPortsRequest) data, correlationId);\n+        } else if (data instanceof GetSwitchInfoRequest) {\n+            handleGetSwitchInfoRequest((GetSwitchInfoRequest) data, correlationId);\n+        } else {\n+            unhandledMessage(command);\n         }\n     }\n \n-    private void sendResponse(InfoData message) {\n-        // TODO topic hardcode\n-        messageProducer.send(\"grpc.response\", message);\n+    private void handleCreateLogicalPortRequest(CreateLogicalPortRequest request, String correlationId) {\n+        log.info(\"Creating logical port {} on switch {}\", request.getLogicalPortNumber(), request.getAddress());\n+        service.createLogicalPort(request.getAddress(), requestMapper.toLogicalPort(request))\n+                .thenAccept(port -> sendResponse(\n+                        new CreateLogicalPortResponse(request.getAddress(), port, true), correlationId));\n+    }\n+\n+    private void handleDumpLogicalPortsRequest(DumpLogicalPortsRequest request, String correlationId) {\n+        log.info(\"Dumping logical ports on switch {}\", request.getAddress());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26b9adc3786c99ecbf7c7069cae0a3cbcca22a5"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2040, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}