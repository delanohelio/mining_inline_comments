{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTIxOTQ2", "number": 3377, "title": "Added swap endpoints FSM in the Flow HS Topology.", "bodyText": "Related with: #3291\nMERGE NOTE: DO NOT FORGET TO CHANGE BASE BEFORE MERGING", "createdAt": "2020-04-08T15:31:37Z", "url": "https://github.com/telstra/open-kilda/pull/3377", "merged": true, "mergeCommit": {"oid": "868baf28fbae4139eb6dc9976ce4581828c384fe"}, "closed": true, "closedAt": "2020-05-25T12:56:44Z", "author": {"login": "dpoltavets"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXHrU6AFqTM5MTk1ODc5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABckvn2KgH2gAyNDAwOTIxOTQ2OjEwNWZmN2QxNjZhMzY5MmNhMDczZjJjMzFkYmM0NDMwMDA2YzkwY2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxOTU4Nzk4", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-391958798", "createdAt": "2020-04-13T05:03:00Z", "commit": {"oid": "66702fe30b0883254ad85adfed588b665e44410d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66702fe30b0883254ad85adfed588b665e44410d", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/66702fe30b0883254ad85adfed588b665e44410d", "committedDate": "2020-04-08T11:38:40Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "5c0d343048c68cd9bcbeee0a0d2d1601aa8bcf56", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/5c0d343048c68cd9bcbeee0a0d2d1601aa8bcf56", "committedDate": "2020-04-15T09:13:13Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c0d343048c68cd9bcbeee0a0d2d1601aa8bcf56", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/5c0d343048c68cd9bcbeee0a0d2d1601aa8bcf56", "committedDate": "2020-04-15T09:13:13Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "b91d2e88ca4d9b3d8fb5f8365a145be65d0a15ce", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/b91d2e88ca4d9b3d8fb5f8365a145be65d0a15ce", "committedDate": "2020-04-23T13:45:09Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b91d2e88ca4d9b3d8fb5f8365a145be65d0a15ce", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/b91d2e88ca4d9b3d8fb5f8365a145be65d0a15ce", "committedDate": "2020-04-23T13:45:09Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "453242d988d7ba028d660d68575b91d4394d9428", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/453242d988d7ba028d660d68575b91d4394d9428", "committedDate": "2020-04-23T14:15:12Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "453242d988d7ba028d660d68575b91d4394d9428", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/453242d988d7ba028d660d68575b91d4394d9428", "committedDate": "2020-04-23T14:15:12Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "2abbd2970c068ab4d3260df11cbb61a372a82d68", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/2abbd2970c068ab4d3260df11cbb61a372a82d68", "committedDate": "2020-04-27T11:41:28Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2abbd2970c068ab4d3260df11cbb61a372a82d68", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/2abbd2970c068ab4d3260df11cbb61a372a82d68", "committedDate": "2020-04-27T11:41:28Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "972690b59bf951ddee0a5a93cb4a03299debb27e", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/972690b59bf951ddee0a5a93cb4a03299debb27e", "committedDate": "2020-04-28T08:02:28Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "972690b59bf951ddee0a5a93cb4a03299debb27e", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/972690b59bf951ddee0a5a93cb4a03299debb27e", "committedDate": "2020-04-28T08:02:28Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "f9051d697222564948a21560208ac0a1ec222620", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/f9051d697222564948a21560208ac0a1ec222620", "committedDate": "2020-04-28T08:24:25Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9051d697222564948a21560208ac0a1ec222620", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/f9051d697222564948a21560208ac0a1ec222620", "committedDate": "2020-04-28T08:24:25Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "92ad3a2c5122beee5033014fd7a71c174cce61c7", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/92ad3a2c5122beee5033014fd7a71c174cce61c7", "committedDate": "2020-04-28T09:14:22Z", "message": "Added swap endpoints fsm."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODYxMTE0", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-409861114", "createdAt": "2020-05-12T09:26:08Z", "commit": {"oid": "c2a067feb18bc145d8229941d967b4aef363d619"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2a067feb18bc145d8229941d967b4aef363d619", "author": {"user": {"login": "rtretyak", "name": "Roman Tretiak"}}, "url": "https://github.com/telstra/open-kilda/commit/c2a067feb18bc145d8229941d967b4aef363d619", "committedDate": "2020-05-12T09:25:30Z", "message": "Merge pull request #3425 from telstra/functional/swap_endpoints_test\n\nAdd test for switch failure during swap endpoints"}, "afterCommit": {"oid": "47f68bda63214454ba1a73224202d4bd9701ef87", "author": {"user": {"login": "rtretyak", "name": "Roman Tretiak"}}, "url": "https://github.com/telstra/open-kilda/commit/47f68bda63214454ba1a73224202d4bd9701ef87", "committedDate": "2020-05-12T10:51:19Z", "message": "Add test for switch failure during swap endpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47f68bda63214454ba1a73224202d4bd9701ef87", "author": {"user": {"login": "rtretyak", "name": "Roman Tretiak"}}, "url": "https://github.com/telstra/open-kilda/commit/47f68bda63214454ba1a73224202d4bd9701ef87", "committedDate": "2020-05-12T10:51:19Z", "message": "Add test for switch failure during swap endpoints"}, "afterCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179", "author": {"user": {"login": "rtretyak", "name": "Roman Tretiak"}}, "url": "https://github.com/telstra/open-kilda/commit/4f5bb604f39a1776461b3f6a93c7f1974a6b9179", "committedDate": "2020-05-13T06:56:13Z", "message": "Add test for switch failure during swap endpoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjUxNjU4", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-410651658", "createdAt": "2020-05-13T07:21:54Z", "commit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMTo1NFrOGUkkhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyOTowNlrOGUkzwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMzg3Ng==", "bodyText": "id remove -", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r424223876", "createdAt": "2020-05-13T07:21:54Z", "author": {"login": "timofei-durakov"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/FlowSwapEndpointsFsm.java", "diffHunk": "@@ -0,0 +1,233 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.fsm.swapendpoints;\n+\n+import static java.lang.String.format;\n+\n+import org.openkilda.messaging.Message;\n+import org.openkilda.messaging.command.flow.FlowRequest;\n+import org.openkilda.messaging.error.ErrorData;\n+import org.openkilda.messaging.error.ErrorType;\n+import org.openkilda.messaging.info.flow.FlowResponse;\n+import org.openkilda.model.Flow;\n+import org.openkilda.persistence.PersistenceManager;\n+import org.openkilda.wfm.CommandContext;\n+import org.openkilda.wfm.topology.flowhs.fsm.common.NbTrackableFsm;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.Event;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.State;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions.OnFinishedAction;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions.OnFinishedWithErrorAction;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions.OnReceivedUpdateResponseAction;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions.RevertUpdateRequestAction;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions.UpdateRequestAction;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions.ValidateFlowsAction;\n+import org.openkilda.wfm.topology.flowhs.model.RequestedFlow;\n+import org.openkilda.wfm.topology.flowhs.service.FlowSwapEndpointsHubCarrier;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.squirrelframework.foundation.fsm.StateMachineBuilder;\n+import org.squirrelframework.foundation.fsm.StateMachineBuilderFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Getter\n+@Setter\n+@Slf4j\n+public class FlowSwapEndpointsFsm extends NbTrackableFsm<FlowSwapEndpointsFsm, State, Event, FlowSwapEndpointsContext> {\n+    public static final int REQUEST_COUNT = 2;\n+\n+    public static final String GENERIC_ERROR_MESSAGE = \"Could not swap endpoints\";\n+\n+    private final FlowSwapEndpointsHubCarrier carrier;\n+\n+    private RequestedFlow firstTargetFlow;\n+    private RequestedFlow secondTargetFlow;\n+    private String firstFlowId;\n+    private String secondFlowId;\n+\n+    private int awaitingResponses = REQUEST_COUNT;\n+    private List<FlowResponse> flowResponses = new ArrayList<>();\n+    private List<ErrorData> errors = new ArrayList<>();\n+    private Flow firstOriginalFlow;\n+    private Flow secondOriginalFlow;\n+\n+    public FlowSwapEndpointsFsm(CommandContext commandContext, FlowSwapEndpointsHubCarrier carrier,\n+                                RequestedFlow firstTargetFlow, RequestedFlow secondTargetFlow) {\n+        super(commandContext);\n+        this.carrier = carrier;\n+        this.firstTargetFlow = firstTargetFlow;\n+        this.secondTargetFlow = secondTargetFlow;\n+        this.firstFlowId = firstTargetFlow.getFlowId();\n+        this.secondFlowId = secondTargetFlow.getFlowId();\n+    }\n+\n+    @Override\n+    public String getFlowId() {\n+        throw new UnsupportedOperationException(\"Not implemented for swap flow endpoints operation. Skipping\");\n+    }\n+\n+    @Override\n+    public void reportError(Event event) {\n+        if (Event.TIMEOUT == event) {\n+            reportGlobalTimeout();\n+        }\n+        // other errors reported inside actions and can be ignored here\n+    }\n+\n+    @Override\n+    protected String getCrudActionName() {\n+        return \"swap-endpoints\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNzU4Mg==", "bodyText": "why is it 500?", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r424227582", "createdAt": "2020-05-13T07:28:44Z", "author": {"login": "timofei-durakov"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/SwapEndpointSpec.groovy", "diffHunk": "@@ -820,12 +827,12 @@ switches\"() {\n                 new SwapFlowPayload(flow2.id, flowHelper.toFlowEndpointV2(flow2Src),\n                         flowHelper.toFlowEndpointV2(flow2Dst)))\n \n-        then: \"An error is received (400 code)\"\n-        def exc = thrown(HttpClientErrorException)\n-        exc.rawStatusCode == 400\n-        exc.responseBodyAsString.to(MessageError).errorMessage == \"Can not swap endpoints for flows: \" +\n-                \"Failed to find path with requested bandwidth=${flow1.maximumBandwidth}: \" +\n-                \"Switch ${flow2SwitchPair.src.dpId} doesn't have links with enough bandwidth\"\n+        then: \"An error is received (500 code)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNzY4Mg==", "bodyText": "the same", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r424227682", "createdAt": "2020-05-13T07:28:54Z", "author": {"login": "timofei-durakov"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/SwapEndpointSpec.groovy", "diffHunk": "@@ -965,12 +972,12 @@ switches\"() {\n                 new SwapFlowPayload(flow2.id, flowHelper.toFlowEndpointV2(flow1.source),\n                         flowHelper.toFlowEndpointV2(flow2.destination)))\n \n-        then: \"An error is received (400 code)\"\n-        def exc = thrown(HttpClientErrorException)\n-        exc.rawStatusCode == 400\n-        exc.responseBodyAsString.to(MessageError).errorMessage == \"Can not swap endpoints for flows: \" +\n-                \"Failed to find path with requested bandwidth=${flow2.maximumBandwidth}: \" +\n-                \"Switch ${flow1SwitchPair.src.dpId} doesn't have links with enough bandwidth\"\n+        then: \"An error is received (500 code)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNzc3Ng==", "bodyText": "and here too", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r424227776", "createdAt": "2020-05-13T07:29:06Z", "author": {"login": "timofei-durakov"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/SwapEndpointSpec.groovy", "diffHunk": "@@ -1137,6 +1144,76 @@ switches\"() {\n         ]\n     }\n \n+    @Tidy\n+    def \"System reverts both flows if fails during rule installation when swapping endpoints\"() {\n+        given: \"Two flows with different src switches and same dst\"\n+        def swPair1\n+        def swPair2 = topologyHelper.switchPairs.find { second ->\n+            swPair1 = topologyHelper.switchPairs.find { first ->\n+                first.src != second.src && first.dst == second.dst\n+            }\n+        }\n+        assumeTrue(\"Unable to find 2 switch pairs with different src and same dst switches\", swPair1 && swPair2)\n+        def flow1 = flowHelperV2.randomFlow(swPair1).tap {\n+            it.source.portNumber = getFreePort(swPair1.src, [swPair2.src])\n+        }\n+        def flow2 = flowHelperV2.randomFlow(swPair2).tap {\n+            it.source.portNumber = getFreePort(swPair2.src, [swPair1.src])\n+        }\n+        flowHelperV2.addFlow(flow1)\n+        flowHelperV2.addFlow(flow2)\n+\n+        when: \"Try to swap flow src endoints, but flow1 src switch does not respond\"\n+        def blockData = switchHelper.knockoutSwitch(swPair1.src, mgmtFlManager)\n+        database.setSwitchStatus(swPair1.src.dpId, SwitchStatus.ACTIVE)\n+        northbound.swapFlowEndpoint(new SwapFlowPayload(flow1.flowId, flow2.source, flow1.destination),\n+                new SwapFlowPayload(flow2.flowId, flow1.source, flow2.destination))\n+\n+        then: \"Receive error response\"\n+        def exc = thrown(HttpServerErrorException)\n+        exc.rawStatusCode == 500", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "originalPosition": 141}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTE2NDcy", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-413516472", "createdAt": "2020-05-18T11:46:27Z", "commit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0NjoyN1rOGWzh-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0NjoyN1rOGWzh-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2NjEzOQ==", "bodyText": "What if one of the flows has \"in-progress\" status (like network changes trigger a reroute)? Will this leave the changes not reverted?", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r426566139", "createdAt": "2020-05-18T11:46:27Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/actions/RevertUpdateRequestAction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions;\n+\n+import org.openkilda.messaging.command.flow.FlowRequest;\n+import org.openkilda.messaging.command.flow.FlowRequest.Type;\n+import org.openkilda.model.Flow;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsContext;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.Event;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.State;\n+import org.openkilda.wfm.topology.flowhs.mapper.RequestedFlowMapper;\n+\n+import com.google.common.collect.Sets;\n+import lombok.extern.slf4j.Slf4j;\n+import org.squirrelframework.foundation.fsm.AnonymousAction;\n+\n+import java.util.ArrayList;\n+\n+@Slf4j\n+public class RevertUpdateRequestAction\n+        extends AnonymousAction<FlowSwapEndpointsFsm, State, Event, FlowSwapEndpointsContext> {\n+\n+    @Override\n+    public void execute(State from, State to, Event event, FlowSwapEndpointsContext context,\n+                        FlowSwapEndpointsFsm stateMachine) {\n+        stateMachine.setAwaitingResponses(FlowSwapEndpointsFsm.REQUEST_COUNT);\n+        stateMachine.setFlowResponses(new ArrayList<>());\n+\n+        Flow firstOriginalFlow = stateMachine.getFirstOriginalFlow();\n+        Flow secondOriginalFlow = stateMachine.getSecondOriginalFlow();\n+\n+        sendRevertUpdateCommand(firstOriginalFlow, secondOriginalFlow.getFlowId(), stateMachine);\n+        sendRevertUpdateCommand(secondOriginalFlow, firstOriginalFlow.getFlowId(), stateMachine);\n+    }\n+\n+    private void sendRevertUpdateCommand(Flow flow, String anotherFlowId, FlowSwapEndpointsFsm stateMachine) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f5bb604f39a1776461b3f6a93c7f1974a6b9179", "author": {"user": {"login": "rtretyak", "name": "Roman Tretiak"}}, "url": "https://github.com/telstra/open-kilda/commit/4f5bb604f39a1776461b3f6a93c7f1974a6b9179", "committedDate": "2020-05-13T06:56:13Z", "message": "Add test for switch failure during swap endpoints"}, "afterCommit": {"oid": "f2c392444632ffa9255bd291b1feae31ce145b77", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/f2c392444632ffa9255bd291b1feae31ce145b77", "committedDate": "2020-05-20T09:50:19Z", "message": "Added swap endpoints fsm."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Mjc5NzY2", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-415279766", "createdAt": "2020-05-20T12:26:54Z", "commit": {"oid": "f2c392444632ffa9255bd291b1feae31ce145b77"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2c392444632ffa9255bd291b1feae31ce145b77", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/f2c392444632ffa9255bd291b1feae31ce145b77", "committedDate": "2020-05-20T09:50:19Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "4ef76080f67386db596acbef2855b30930cfffbc", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/4ef76080f67386db596acbef2855b30930cfffbc", "committedDate": "2020-05-20T13:43:45Z", "message": "Added swap endpoints fsm."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzU1MjYx", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-415355261", "createdAt": "2020-05-20T13:50:00Z", "commit": {"oid": "4ef76080f67386db596acbef2855b30930cfffbc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MDowMVrOGYMsYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MDo1MVrOGYMvKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNjk3Ng==", "bodyText": "Shoudn't 2 updates be in the same transaction?", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r428026976", "createdAt": "2020-05-20T13:50:01Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/actions/OnFinishedAction.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions;\n+\n+import static java.lang.String.format;\n+\n+import org.openkilda.messaging.Message;\n+import org.openkilda.messaging.info.InfoMessage;\n+import org.openkilda.messaging.info.flow.FlowResponse;\n+import org.openkilda.messaging.info.flow.SwapFlowResponse;\n+import org.openkilda.persistence.PersistenceManager;\n+import org.openkilda.wfm.CommandContext;\n+import org.openkilda.wfm.share.logger.FlowOperationsDashboardLogger;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsContext;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.Event;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.State;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Slf4j\n+public class OnFinishedAction extends OnFinishedNbTrackableAction {\n+\n+    public OnFinishedAction(PersistenceManager persistenceManager, FlowOperationsDashboardLogger dashboardLogger) {\n+        super(persistenceManager, dashboardLogger);\n+    }\n+\n+    @Override\n+    protected Optional<Message> performWithResponse(State from, State to, Event event, FlowSwapEndpointsContext context,\n+                                                    FlowSwapEndpointsFsm stateMachine) {\n+        log.info(\"Swap endpoints operation completed successfully.\");\n+\n+        updateFlowStatus(stateMachine.getFirstFlowId(), stateMachine);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef76080f67386db596acbef2855b30930cfffbc"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNzY5MQ==", "bodyText": "Shoudn't 2 updates be in the same transaction?", "url": "https://github.com/telstra/open-kilda/pull/3377#discussion_r428027691", "createdAt": "2020-05-20T13:50:51Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/actions/OnFinishedWithErrorAction.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.actions;\n+\n+import static java.lang.String.format;\n+\n+import org.openkilda.messaging.Message;\n+import org.openkilda.messaging.error.ErrorData;\n+import org.openkilda.messaging.error.ErrorMessage;\n+import org.openkilda.messaging.error.ErrorType;\n+import org.openkilda.messaging.info.flow.FlowResponse;\n+import org.openkilda.messaging.model.FlowDto;\n+import org.openkilda.persistence.PersistenceManager;\n+import org.openkilda.wfm.CommandContext;\n+import org.openkilda.wfm.share.logger.FlowOperationsDashboardLogger;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsContext;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.Event;\n+import org.openkilda.wfm.topology.flowhs.fsm.swapendpoints.FlowSwapEndpointsFsm.State;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+@Slf4j\n+public class OnFinishedWithErrorAction extends OnFinishedNbTrackableAction {\n+\n+    public OnFinishedWithErrorAction(PersistenceManager persistenceManager,\n+                                     FlowOperationsDashboardLogger dashboardLogger) {\n+        super(persistenceManager, dashboardLogger);\n+    }\n+\n+    @Override\n+    protected Optional<Message> performWithResponse(State from, State to, Event event, FlowSwapEndpointsContext context,\n+                                                    FlowSwapEndpointsFsm stateMachine) {\n+\n+        ErrorData data;\n+        if (Event.TIMEOUT.equals(event)) {\n+            data = new ErrorData(ErrorType.OPERATION_TIMED_OUT, getGenericErrorMessage(),\n+                    \"Flow swap endpoints failed by timeout\");\n+        } else if (Event.NEXT.equals(event)) {\n+            List<String> flows = stateMachine.getFlowResponses().stream()\n+                    .map(FlowResponse::getPayload)\n+                    .map(FlowDto::getFlowId)\n+                    .collect(Collectors.toList());\n+            data = new ErrorData(ErrorType.UPDATE_FAILURE, getGenericErrorMessage(),\n+                    format(\"Reverted flows: %s\", flows));\n+        } else {\n+            data = (ErrorData) context.getResponse();\n+        }\n+\n+        if (!Event.VALIDATION_ERROR.equals(event)) {\n+            saveActionToHistory(stateMachine,\n+                    stateMachine.getFirstFlowId(), stateMachine.getSecondFlowId(), data.getErrorDescription());\n+            saveActionToHistory(stateMachine,\n+                    stateMachine.getSecondFlowId(), stateMachine.getFirstFlowId(), data.getErrorDescription());\n+        }\n+\n+        updateFlowStatus(stateMachine.getFirstFlowId(), stateMachine);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef76080f67386db596acbef2855b30930cfffbc"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2567836b6c61a81c532d519381c6639d93c7d456", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/2567836b6c61a81c532d519381c6639d93c7d456", "committedDate": "2020-05-21T05:19:46Z", "message": "Added swap endpoints fsm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ef76080f67386db596acbef2855b30930cfffbc", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/4ef76080f67386db596acbef2855b30930cfffbc", "committedDate": "2020-05-20T13:43:45Z", "message": "Added swap endpoints fsm."}, "afterCommit": {"oid": "2567836b6c61a81c532d519381c6639d93c7d456", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/2567836b6c61a81c532d519381c6639d93c7d456", "committedDate": "2020-05-21T05:19:46Z", "message": "Added swap endpoints fsm."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1OTk4MDc4", "url": "https://github.com/telstra/open-kilda/pull/3377#pullrequestreview-415998078", "createdAt": "2020-05-21T09:17:09Z", "commit": {"oid": "2567836b6c61a81c532d519381c6639d93c7d456"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2baceb065a956949172d61f26515fb46cf0d6191", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/2baceb065a956949172d61f26515fb46cf0d6191", "committedDate": "2020-05-22T07:42:44Z", "message": "Northbound V1 requests redirected to FlowHSTopology"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "105ff7d166a3692ca073f2c31dbc4430006c90ca", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/105ff7d166a3692ca073f2c31dbc4430006c90ca", "committedDate": "2020-05-25T12:56:25Z", "message": "Merge pull request #3493 from telstra/v1-requests-redirected-to-flow-hs\n\nNorthbound V1 requests redirected to FlowHSTopology"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3618, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}