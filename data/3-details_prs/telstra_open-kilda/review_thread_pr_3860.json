{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjg3NTMw", "number": 3860, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOToyMlrOFA5sJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOToyMlrOFA5sJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg5NTA5OnYy", "diffSide": "RIGHT", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWatchDog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOToyMlrOH_aryQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOToyMlrOH_aryQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1OTUyOQ==", "bodyText": "As for me, it looks like you need some \"generic\" (with java generics) class responsible for publishing to a single node (with shared zk-client if it is possible) and some closure for the set of such publishers. This approach is much more scalable than the current one.", "url": "https://github.com/telstra/open-kilda/pull/3860#discussion_r536259529", "createdAt": "2020-12-04T17:29:22Z", "author": {"login": "surabujin"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWatchDog.java", "diffHunk": "@@ -32,19 +32,28 @@\n public class ZkWatchDog extends ZkClient implements DataCallback {\n \n     private static final String SIGNAL = \"signal\";\n+    private static final String BUILD_VERSION = \"build-version\";\n+\n     @VisibleForTesting\n     protected String signalPath;\n     private Signal signal;\n \n+    @VisibleForTesting\n+    protected String buildVersionPath;\n+    private String buildVersion;\n+\n     @VisibleForTesting\n     Set<LifeCycleObserver> observers = new HashSet<>();\n+    @VisibleForTesting\n+    Set<BuildVersionObserver> buildVersionObservers = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3341a630fc323fceacf05a08234479336a08baf"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2293, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}