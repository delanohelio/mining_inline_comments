{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODM4MDQ0", "number": 3376, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzowNTo0N1rODwFauQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzowNTo0N1rODwFauQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzQ3MDAxOnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchTrackingService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzowNTo0N1rOGC4rkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxMTowOVrOGC44Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY3ODk5NQ==", "bodyText": "nit: Why is \"emit discovery event\" used? This is not related to it.", "url": "https://github.com/telstra/open-kilda/pull/3376#discussion_r405678995", "createdAt": "2020-04-08T17:05:47Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchTrackingService.java", "diffHunk": "@@ -167,20 +166,11 @@ public void setup(FloodlightModuleContext context) {\n         }\n     }\n \n-    private void dumpAllSwitchesAction(String correlationId) {\n+    private void dumpAllSwitchesAction() {\n         Collection<IOFSwitch> iofSwitches = switchManager.getAllSwitchMap(true).values();\n-        int switchCounter = 0;\n         for (IOFSwitch sw : iofSwitches) {\n-            try {\n-                NetworkDumpSwitchData swData = new NetworkDumpSwitchData(buildSwitch(sw));\n-                producerService.sendMessageAndTrack(discoveryTopic,\n-                                                correlationId,\n-                                                new ChunkedInfoMessage(swData, System.currentTimeMillis(),\n-                                                        correlationId, switchCounter, iofSwitches.size(), region));\n-            } catch (Exception e) {\n-                logger.error(\"Failed to send network dump for {}\", sw.getId());\n-            }\n-            switchCounter++;\n+            NetworkDumpSwitchData payload = new NetworkDumpSwitchData(buildSwitch(sw));\n+            emitDiscoveryEvent(sw.getId(), payload);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbd6e82d1bad685effd010edc8cd7c68650789da"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MjE3OQ==", "bodyText": "I can't produce a better name at this moment. Can you propose some? emitDiscoveryEvent is used to send any event into network-topology. Most of them are \"discovery\" events, and only this one \"dump\" is not exactly discovery event. But from the consumer perspective the switch-dump is a discovery message too. So I have named it as emitDiscoveryEvent.\nPS I open to propositions.", "url": "https://github.com/telstra/open-kilda/pull/3376#discussion_r405682179", "createdAt": "2020-04-08T17:11:09Z", "author": {"login": "surabujin"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchTrackingService.java", "diffHunk": "@@ -167,20 +166,11 @@ public void setup(FloodlightModuleContext context) {\n         }\n     }\n \n-    private void dumpAllSwitchesAction(String correlationId) {\n+    private void dumpAllSwitchesAction() {\n         Collection<IOFSwitch> iofSwitches = switchManager.getAllSwitchMap(true).values();\n-        int switchCounter = 0;\n         for (IOFSwitch sw : iofSwitches) {\n-            try {\n-                NetworkDumpSwitchData swData = new NetworkDumpSwitchData(buildSwitch(sw));\n-                producerService.sendMessageAndTrack(discoveryTopic,\n-                                                correlationId,\n-                                                new ChunkedInfoMessage(swData, System.currentTimeMillis(),\n-                                                        correlationId, switchCounter, iofSwitches.size(), region));\n-            } catch (Exception e) {\n-                logger.error(\"Failed to send network dump for {}\", sw.getId());\n-            }\n-            switchCounter++;\n+            NetworkDumpSwitchData payload = new NetworkDumpSwitchData(buildSwitch(sw));\n+            emitDiscoveryEvent(sw.getId(), payload);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY3ODk5NQ=="}, "originalCommit": {"oid": "bbd6e82d1bad685effd010edc8cd7c68650789da"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1923, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}