{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODc5ODky", "number": 3138, "title": "Introduce PoP for the switch and take it into account in pce", "bodyText": "protected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs", "createdAt": "2020-01-22T14:20:47Z", "url": "https://github.com/telstra/open-kilda/pull/3138", "merged": true, "mergeCommit": {"oid": "13e84d165e2c1aa067bfd103916998a3de36fb9f"}, "closed": true, "closedAt": "2020-01-27T12:54:47Z", "author": {"login": "timofei-durakov"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb82i62ABqjI5NzAyMzcxNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-cC4DgFqTM0ODYzMTczOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "328700bde4d24a20780bfb594dbc496a4fde7d33", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/328700bde4d24a20780bfb594dbc496a4fde7d33", "committedDate": "2020-01-22T14:19:02Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "7c189e129454bd63e5784cd740124b6fbcaa2f13", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/7c189e129454bd63e5784cd740124b6fbcaa2f13", "committedDate": "2020-01-22T14:23:11Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c189e129454bd63e5784cd740124b6fbcaa2f13", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/7c189e129454bd63e5784cd740124b6fbcaa2f13", "committedDate": "2020-01-22T14:23:11Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/5dd8af87c74af2f9689b42566663f212d90e9c9c", "committedDate": "2020-01-22T14:34:30Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjM4NTI3", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-346638527", "createdAt": "2020-01-22T14:41:46Z", "commit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Njk0NzAy", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-346694702", "createdAt": "2020-01-22T15:50:46Z", "commit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo1MDo0NlrOFghLJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMDoxNFrOFghi2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0MjI3Ng==", "bodyText": "Why not to use computeIfAbsent method with Node::fromSwitch function?", "url": "https://github.com/telstra/open-kilda/pull/3138#discussion_r369642276", "createdAt": "2020-01-22T15:50:46Z", "author": {"login": "rozdy"}, "path": "services/src/kilda-pce/src/main/java/org/openkilda/pce/impl/AvailableNetwork.java", "diffHunk": "@@ -77,7 +80,12 @@ public void addLink(Isl isl, boolean errorOnDuplicates) {\n     }\n \n     private Node getOrInitSwitch(Switch sw) {\n-        return switches.computeIfAbsent(sw.getSwitchId(), Node::fromSwitchId);\n+        Node node = switches.get(sw.getSwitchId());\n+        if (node == null) {\n+            node = Node.fromSwitch(sw);\n+            switches.put(sw.getSwitchId(), node);\n+        }\n+        return node;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0NTcxMQ==", "bodyText": "Maybe rework foreach to for with explicit counter?", "url": "https://github.com/telstra/open-kilda/pull/3138#discussion_r369645711", "createdAt": "2020-01-22T15:56:07Z", "author": {"login": "rozdy"}, "path": "services/src/kilda-pce/src/main/java/org/openkilda/pce/impl/AvailableNetwork.java", "diffHunk": "@@ -113,6 +121,43 @@ public void processDiversitySegments(List<PathSegment> segments) {\n         }\n     }\n \n+    /**\n+     * Adds diversity weights into {@link AvailableNetwork} based on passed path segments and configuration.\n+     */\n+    public void processDiversitySegmentsWithPop(List<PathSegment> segments) {\n+        if (segments.size() == 1) {\n+            return;\n+        }\n+        int c = 0;\n+        Set<String> allocatedPopSet = new HashSet<>();\n+\n+        for (PathSegment ps : segments) {\n+            if (c == 0) {\n+                allocatedPopSet.add(ps.getDestSwitch().getPop());\n+            } else if (c == segments.size() - 1) {\n+                allocatedPopSet.add(ps.getSrcSwitch().getPop());\n+            } else {\n+                allocatedPopSet.add(ps.getSrcSwitch().getPop());\n+                allocatedPopSet.add(ps.getDestSwitch().getPop());\n+            }\n+            c++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0ODM0Ng==", "bodyText": "I think we need some combination of this method and old processDiversitySegments without pops method. Should we try to create diverse path through already used pops if no \"unused\" pops are available? Maybe add separate PopDiversityGroupUseCounter and related diversity.pop.cost param?", "url": "https://github.com/telstra/open-kilda/pull/3138#discussion_r369648346", "createdAt": "2020-01-22T16:00:14Z", "author": {"login": "rozdy"}, "path": "services/src/kilda-pce/src/main/java/org/openkilda/pce/impl/AvailableNetwork.java", "diffHunk": "@@ -113,6 +121,43 @@ public void processDiversitySegments(List<PathSegment> segments) {\n         }\n     }\n \n+    /**\n+     * Adds diversity weights into {@link AvailableNetwork} based on passed path segments and configuration.\n+     */\n+    public void processDiversitySegmentsWithPop(List<PathSegment> segments) {\n+        if (segments.size() == 1) {\n+            return;\n+        }\n+        int c = 0;\n+        Set<String> allocatedPopSet = new HashSet<>();\n+\n+        for (PathSegment ps : segments) {\n+            if (c == 0) {\n+                allocatedPopSet.add(ps.getDestSwitch().getPop());\n+            } else if (c == segments.size() - 1) {\n+                allocatedPopSet.add(ps.getSrcSwitch().getPop());\n+            } else {\n+                allocatedPopSet.add(ps.getSrcSwitch().getPop());\n+                allocatedPopSet.add(ps.getDestSwitch().getPop());\n+            }\n+            c++;\n+        }\n+        for (Edge edge : edges) {\n+            String srcPop = edge.getSrcSwitch().getPop();\n+            if (srcPop != null && allocatedPopSet.contains(srcPop)) {\n+                edge.increaseDiversityGroupUseCounter();\n+                continue;\n+            }\n+            String dstPop = edge.getDestSwitch().getPop();\n+            if (dstPop != null && allocatedPopSet.contains(dstPop)) {\n+                edge.increaseDiversityGroupUseCounter();\n+                continue;\n+            }\n+        }\n+\n+\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c"}, "originalPosition": 77}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dd8af87c74af2f9689b42566663f212d90e9c9c", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/5dd8af87c74af2f9689b42566663f212d90e9c9c", "committedDate": "2020-01-22T14:34:30Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "247c125b05637a5409a889a4540d2d6ffc226be3", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/247c125b05637a5409a889a4540d2d6ffc226be3", "committedDate": "2020-01-22T21:26:03Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDg1MjQy", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-347085242", "createdAt": "2020-01-23T06:44:21Z", "commit": {"oid": "247c125b05637a5409a889a4540d2d6ffc226be3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDk3NzI2", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-347097726", "createdAt": "2020-01-23T07:26:28Z", "commit": {"oid": "247c125b05637a5409a889a4540d2d6ffc226be3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "247c125b05637a5409a889a4540d2d6ffc226be3", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/247c125b05637a5409a889a4540d2d6ffc226be3", "committedDate": "2020-01-22T21:26:03Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "61d2d5e949d86ef94b9bc1dbfda9cd2db0371dff", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/61d2d5e949d86ef94b9bc1dbfda9cd2db0371dff", "committedDate": "2020-01-23T07:51:23Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61d2d5e949d86ef94b9bc1dbfda9cd2db0371dff", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/61d2d5e949d86ef94b9bc1dbfda9cd2db0371dff", "committedDate": "2020-01-23T07:51:23Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "6fc16e59d2a4276c8aacde79d9bdaba141091185", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/6fc16e59d2a4276c8aacde79d9bdaba141091185", "committedDate": "2020-01-23T09:10:54Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTk1NzE1", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-347195715", "createdAt": "2020-01-23T10:31:04Z", "commit": {"oid": "6fc16e59d2a4276c8aacde79d9bdaba141091185"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMDozMTowNVrOFg5eWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMDozMToyOFrOFg5fDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA0MDQwOQ==", "bodyText": "nit: allocatedPopSet -> allocatedPops or transitPops", "url": "https://github.com/telstra/open-kilda/pull/3138#discussion_r370040409", "createdAt": "2020-01-23T10:31:05Z", "author": {"login": "rozdy"}, "path": "services/src/kilda-pce/src/main/java/org/openkilda/pce/impl/AvailableNetwork.java", "diffHunk": "@@ -113,6 +118,43 @@ public void processDiversitySegments(List<PathSegment> segments) {\n         }\n     }\n \n+    /**\n+     * Adds diversity weights into {@link AvailableNetwork} based on passed path segments and configuration.\n+     */\n+    public void processDiversitySegmentsWithPop(List<PathSegment> segments) {\n+        if (segments.size() <= 1) {\n+            return;\n+        }\n+\n+        Set<String> allocatedPopSet = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fc16e59d2a4276c8aacde79d9bdaba141091185"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA0MDU5MA==", "bodyText": "nit: this continue is redundant.", "url": "https://github.com/telstra/open-kilda/pull/3138#discussion_r370040590", "createdAt": "2020-01-23T10:31:28Z", "author": {"login": "rozdy"}, "path": "services/src/kilda-pce/src/main/java/org/openkilda/pce/impl/AvailableNetwork.java", "diffHunk": "@@ -113,6 +118,43 @@ public void processDiversitySegments(List<PathSegment> segments) {\n         }\n     }\n \n+    /**\n+     * Adds diversity weights into {@link AvailableNetwork} based on passed path segments and configuration.\n+     */\n+    public void processDiversitySegmentsWithPop(List<PathSegment> segments) {\n+        if (segments.size() <= 1) {\n+            return;\n+        }\n+\n+        Set<String> allocatedPopSet = new HashSet<>();\n+\n+        for (int i = 0; i < segments.size(); i++) {\n+            PathSegment ps = segments.get(i);\n+            if (i == 0) {\n+                allocatedPopSet.add(ps.getDestSwitch().getPop());\n+            } else if (i == segments.size() - 1) {\n+                allocatedPopSet.add(ps.getSrcSwitch().getPop());\n+            } else {\n+                allocatedPopSet.add(ps.getSrcSwitch().getPop());\n+                allocatedPopSet.add(ps.getDestSwitch().getPop());\n+            }\n+        }\n+        for (Edge edge : edges) {\n+            String srcPop = edge.getSrcSwitch().getPop();\n+            if (srcPop != null && allocatedPopSet.contains(srcPop)) {\n+                edge.increaseDiversityGroupPerPopUseCounter();\n+                continue;\n+            }\n+            String dstPop = edge.getDestSwitch().getPop();\n+            if (dstPop != null && allocatedPopSet.contains(dstPop)) {\n+                edge.increaseDiversityGroupPerPopUseCounter();\n+                continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fc16e59d2a4276c8aacde79d9bdaba141091185"}, "originalPosition": 71}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fc16e59d2a4276c8aacde79d9bdaba141091185", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/6fc16e59d2a4276c8aacde79d9bdaba141091185", "committedDate": "2020-01-23T09:10:54Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "adddccb5d2e3bf39dc1cf8d68861adc697cdda20", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/adddccb5d2e3bf39dc1cf8d68861adc697cdda20", "committedDate": "2020-01-23T10:57:01Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MjEyMjI0", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-347212224", "createdAt": "2020-01-23T10:59:19Z", "commit": {"oid": "adddccb5d2e3bf39dc1cf8d68861adc697cdda20"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "adddccb5d2e3bf39dc1cf8d68861adc697cdda20", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/adddccb5d2e3bf39dc1cf8d68861adc697cdda20", "committedDate": "2020-01-23T10:57:01Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "77a74d2593219e15da89235edd93abd557060bc0", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/77a74d2593219e15da89235edd93abd557060bc0", "committedDate": "2020-01-23T12:25:49Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzI5NDcz", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-347729473", "createdAt": "2020-01-24T02:52:00Z", "commit": {"oid": "77a74d2593219e15da89235edd93abd557060bc0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f7277416e651b9a075e4a5bf64d925bb1deceeb", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/1f7277416e651b9a075e4a5bf64d925bb1deceeb", "committedDate": "2020-01-25T05:53:39Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77a74d2593219e15da89235edd93abd557060bc0", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/77a74d2593219e15da89235edd93abd557060bc0", "committedDate": "2020-01-23T12:25:49Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}, "afterCommit": {"oid": "1f7277416e651b9a075e4a5bf64d925bb1deceeb", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/1f7277416e651b9a075e4a5bf64d925bb1deceeb", "committedDate": "2020-01-25T05:53:39Z", "message": "Introduce PoP for the switch and take it into account in pce\n\nprotected paths should take into account PoP and try not to\nplace protected path into the same transit PoPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NjMxNzM5", "url": "https://github.com/telstra/open-kilda/pull/3138#pullrequestreview-348631739", "createdAt": "2020-01-27T12:38:43Z", "commit": {"oid": "1f7277416e651b9a075e4a5bf64d925bb1deceeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3692, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}