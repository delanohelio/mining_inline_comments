{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjI3MTky", "number": 3696, "title": "Fix reroutes for max_latency path computation strategy", "bodyText": "", "createdAt": "2020-08-25T14:04:43Z", "url": "https://github.com/telstra/open-kilda/pull/3696", "merged": true, "mergeCommit": {"oid": "0b121a74421ea3057f1e8105a545b39764eca1cc"}, "closed": true, "closedAt": "2020-08-25T18:56:14Z", "author": {"login": "rozdy"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCXt_WAH2gAyNDczMjI3MTkyOjgzNzFmZWY4MDNjYzU0NzA1MzFjZjkwNjVmN2I2ZmQ2NjdiOWIzZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCb5nRgFqTQ3NDc2NDIxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8371fef803cc5470531cf9065f7b6fd667b9b3df", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/8371fef803cc5470531cf9065f7b6fd667b9b3df", "committedDate": "2020-08-25T14:03:08Z", "message": "Fix reroutes for max_latency path computation strategy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NTMyMDA1", "url": "https://github.com/telstra/open-kilda/pull/3696#pullrequestreview-474532005", "createdAt": "2020-08-25T14:21:44Z", "commit": {"oid": "8371fef803cc5470531cf9065f7b6fd667b9b3df"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDoyMTo0NFrOHGag7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDoyMTo0NFrOHGag7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ4NzkxNw==", "bodyText": "Why we are ding all this \"computations\" here? Can the code that makes a decision to assign \"DEGRATED\" status to the flow produce statusInfo field too? And use the same transport for this field i.e. stateMachine.getErrorReason()?", "url": "https://github.com/telstra/open-kilda/pull/3696#discussion_r476487917", "createdAt": "2020-08-25T14:21:44Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/reroute/actions/UpdateFlowStatusAction.java", "diffHunk": "@@ -66,18 +61,30 @@ protected void perform(State from, State to, Event event, FlowRerouteContext con\n         stateMachine.saveActionToHistory(format(\"The flow status was set to %s\", resultStatus));\n     }\n \n-    private String getFlowStatusInfo(FlowStatus flowStatus, FlowRerouteFsm stateMachine) {\n+    private String getFlowStatusInfo(Flow flow, FlowStatus flowStatus, FlowRerouteFsm stateMachine) {\n         String flowStatusInfo = null;\n         if (!FlowStatus.UP.equals(flowStatus) && !flowStatus.equals(stateMachine.getOriginalFlowStatus())) {\n             flowStatusInfo = stateMachine.getErrorReason();\n             if (FlowStatus.DEGRADED.equals(flowStatus)) {\n-                if (stateMachine.isIgnoreBandwidth()) {\n-                    flowStatusInfo = IGNORED_BW_RE_ROUTE_FLOW_STATUS_INFO;\n-                } else {\n-                    flowStatusInfo = DEGRADED_FLOW_STATUS_INFO;\n-                }\n+                flowStatusInfo = getDegradedFlowStatusInfo(flow, stateMachine);\n             }\n         }\n         return flowStatusInfo;\n     }\n+\n+    private String getDegradedFlowStatusInfo(Flow flow, FlowRerouteFsm stateMachine) {\n+        boolean ignoreBandwidth = stateMachine.isIgnoreBandwidth();\n+        boolean ignoreLatency = stateMachine.getNewPrimaryPathComputationStrategy() != flow.getPathComputationStrategy()\n+                || (flow.isAllocateProtectedPath()\n+                && stateMachine.getNewProtectedPathComputationStrategy() != flow.getPathComputationStrategy());\n+        if (ignoreBandwidth && ignoreLatency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8371fef803cc5470531cf9065f7b6fd667b9b3df"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NzY0MjE4", "url": "https://github.com/telstra/open-kilda/pull/3696#pullrequestreview-474764218", "createdAt": "2020-08-25T18:55:27Z", "commit": {"oid": "8371fef803cc5470531cf9065f7b6fd667b9b3df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3557, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}