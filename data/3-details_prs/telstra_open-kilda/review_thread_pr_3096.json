{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTMwNDg5", "number": 3096, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo1Mjo1NVrODXdxLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozOTozMlrODXemYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTMxNTY0OnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/DefaultFlowV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo1Mjo1NVrOFcxiVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo1Mjo1NVrOFcxiVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxNjA1NA==", "bodyText": "as for me \"Cleanup:  is needless in the description", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365716054", "createdAt": "2020-01-13T09:52:55Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/DefaultFlowV2Spec.groovy", "diffHunk": "@@ -182,7 +187,8 @@ class DefaultFlowV2Spec extends HealthCheckSpecification {\n port=$defaultFlow2.source.portNumber vlan=0, existing flow '$defaultFlow1.flowId' \\\n source: switch=$defaultFlow1.source.switchId port=$defaultFlow1.source.portNumber vlan=0\"\n \n-        and: \"Cleanup: Delete the flow\"\n+        cleanup: \"Cleanup: Delete the flow\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQyNDYxOnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/MultiRerouteSpec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozMDoxOFrOFcyjBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozMDoxOFrOFcyjBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczMjYxMg==", "bodyText": "revert -> Revert", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365732612", "createdAt": "2020-01-13T10:30:18Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/MultiRerouteSpec.groovy", "diffHunk": "@@ -78,7 +80,7 @@ class MultiRerouteSpec extends HealthCheckSpecification {\n             assert it.availableBandwidth >= 0\n         }\n \n-        and: \"Cleanup: revert system to original state\"\n+        cleanup: \"revert system to original state\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQzMzg4OnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozMzoxNVrOFcyoIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozMzoxNVrOFcyoIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczMzkyMQ==", "bodyText": "\"Cleanup:  is needless in description", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365733921", "createdAt": "2020-01-13T10:33:15Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "diffHunk": "@@ -132,12 +134,13 @@ class PinnedFlowV2Spec extends HealthCheckSpecification {\n             assert pathHelper.convert(northbound.getFlowPath(flow.flowId)) == newPath\n         }\n \n-        and: \"Cleanup: revert system to original state\"\n+        cleanup: \"Cleanup: revert system to original state\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQ0MTgzOnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNjowMVrOFcyszg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNjowMVrOFcyszg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTExOA==", "bodyText": "cleanup is going to fail when assumeTrue is failed\nlet it be for now(it is not critical issue)", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735118", "createdAt": "2020-01-13T10:36:01Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "diffHunk": "@@ -173,7 +180,7 @@ class PinnedFlowV2Spec extends HealthCheckSpecification {\n         errorDetails.errorMessage == \"Could not update flow\"\n         errorDetails.errorDescription == \"Flow flags are not valid, unable to process pinned protected flow\"\n \n-        and: \"Cleanup: Delete the flow\"\n+        cleanup: \"Cleanup: Delete the flow\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQ0MzEzOnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNjozMlrOFcytkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNjozMlrOFcytkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTMxMw==", "bodyText": "\"Cleanup: is needless in description", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735313", "createdAt": "2020-01-13T10:36:32Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "diffHunk": "@@ -173,7 +180,7 @@ class PinnedFlowV2Spec extends HealthCheckSpecification {\n         errorDetails.errorMessage == \"Could not update flow\"\n         errorDetails.errorDescription == \"Flow flags are not valid, unable to process pinned protected flow\"\n \n-        and: \"Cleanup: Delete the flow\"\n+        cleanup: \"Cleanup: Delete the flow\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQ0NDczOnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNzowOFrOFcyuhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNzowOFrOFcyuhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTU1Nw==", "bodyText": "\"Cleanup: is needless in description", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735557", "createdAt": "2020-01-13T10:37:08Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "diffHunk": "@@ -302,7 +318,7 @@ class ProtectedPathV2Spec extends HealthCheckSpecification {\n         newCurrentProtectedPath != currentProtectedPath\n         Wrappers.wait(WAIT_OFFSET) { assert northbound.getFlowStatus(flow.flowId).status == FlowState.UP }\n \n-        and: \"Cleanup: revert system to original state\"\n+        cleanup: \"Cleanup: revert system to original state\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQ0NTUxOnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNzoyN1rOFcyu9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNzoyN1rOFcyu9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTY3MA==", "bodyText": "\"Cleanup: is needless in the description", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735670", "createdAt": "2020-01-13T10:37:27Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "diffHunk": "@@ -428,10 +453,12 @@ class ProtectedPathV2Spec extends HealthCheckSpecification {\n         errorDetails.errorDescription == \"Not enough bandwidth or no path found. \" +\n                 \"Couldn't find non overlapping protected path\"\n \n-        and: \"Cleanup: restore available bandwidth\"\n+        cleanup: \"Cleanup: restore available bandwidth\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQ0NzcwOnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozODoxNVrOFcywRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozODoxNVrOFcywRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNjAwNw==", "bodyText": "'\"Cleanup: delete' -> '\"Delete '", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365736007", "createdAt": "2020-01-13T10:38:15Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "diffHunk": "@@ -490,11 +518,12 @@ class ProtectedPathV2Spec extends HealthCheckSpecification {\n         database.getTransitVlans(flowInfo.forwardPathId, flowInfo.reversePathId).size() == 1\n         database.getTransitVlans(flowInfo.protectedForwardPathId, flowInfo.protectedReversePathId).size() == 1\n \n-        and: \"Cleanup: delete the flow and restore available bandwidth\"\n+        cleanup: \"Cleanup: delete the flow and restore available bandwidth\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 219}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTQ1MTg3OnYy", "diffSide": "RIGHT", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/grpc/LicenseSpec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozOTozMlrOFcyyoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozOTozMlrOFcyyoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNjYwOA==", "bodyText": "unused import", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365736608", "createdAt": "2020-01-13T10:39:32Z", "author": {"login": "andriidovhan"}, "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/grpc/LicenseSpec.groovy", "diffHunk": "@@ -1,5 +1,6 @@\n package org.openkilda.functionaltests.spec.grpc\n \n+import org.openkilda.functionaltests.extension.failfast.Tidy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2167, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}