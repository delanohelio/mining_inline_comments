{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjIwNTIx", "number": 3360, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo1MjoyMVrODv-nTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo1MjoyMVrODv-nTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjM1NTM1OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo1MjoyMVrOGCtwkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMDo0ODoxNFrOGEjMdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMDA0OQ==", "bodyText": "why? finished flow update operation should guarantee that all resources are handled", "url": "https://github.com/telstra/open-kilda/pull/3360#discussion_r405500049", "createdAt": "2020-04-08T12:52:21Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -1131,10 +1131,12 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n         }\n \n         and: \"The new and old dst switches pass switch validation\"\n-        [dstSwitch, newDstSwitch]*.dpId.each { switchId ->\n-            with(northbound.validateSwitch(switchId)) { validation ->\n-                validation.verifyRuleSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n-                validation.verifyMeterSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n+        Wrappers.wait(RULES_DELETION_TIME / 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56abff3ba3788174df9b465b7587e383980aba3d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExMjc5NA==", "bodyText": "it is difficult to reproduce. Probably we need to run it around 30 times and one them is failed.\nit is a rare case, but sometimes it happens.", "url": "https://github.com/telstra/open-kilda/pull/3360#discussion_r406112794", "createdAt": "2020-04-09T10:34:24Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -1131,10 +1131,12 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n         }\n \n         and: \"The new and old dst switches pass switch validation\"\n-        [dstSwitch, newDstSwitch]*.dpId.each { switchId ->\n-            with(northbound.validateSwitch(switchId)) { validation ->\n-                validation.verifyRuleSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n-                validation.verifyMeterSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n+        Wrappers.wait(RULES_DELETION_TIME / 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMDA0OQ=="}, "originalCommit": {"oid": "56abff3ba3788174df9b465b7587e383980aba3d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI3OTY2MA==", "bodyText": "I often see failed build on jenkins due to this test", "url": "https://github.com/telstra/open-kilda/pull/3360#discussion_r406279660", "createdAt": "2020-04-09T15:15:55Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -1131,10 +1131,12 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n         }\n \n         and: \"The new and old dst switches pass switch validation\"\n-        [dstSwitch, newDstSwitch]*.dpId.each { switchId ->\n-            with(northbound.validateSwitch(switchId)) { validation ->\n-                validation.verifyRuleSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n-                validation.verifyMeterSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n+        Wrappers.wait(RULES_DELETION_TIME / 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMDA0OQ=="}, "originalCommit": {"oid": "56abff3ba3788174df9b465b7587e383980aba3d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxMjE5NA==", "bodyText": "Ok, we can try, but the excess rules you're seeing may be due to #3256 and happen in a test that ran half an hour ago, and this test is just the first in the sequence that does the rules verificaiton and shows the problem", "url": "https://github.com/telstra/open-kilda/pull/3360#discussion_r407412194", "createdAt": "2020-04-13T10:09:57Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -1131,10 +1131,12 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n         }\n \n         and: \"The new and old dst switches pass switch validation\"\n-        [dstSwitch, newDstSwitch]*.dpId.each { switchId ->\n-            with(northbound.validateSwitch(switchId)) { validation ->\n-                validation.verifyRuleSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n-                validation.verifyMeterSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n+        Wrappers.wait(RULES_DELETION_TIME / 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMDA0OQ=="}, "originalCommit": {"oid": "56abff3ba3788174df9b465b7587e383980aba3d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQyNDExOA==", "bodyText": "this issue is not caused by other test.\nI've rerun this test locally a lot of times and the issue sometimes is reproduced", "url": "https://github.com/telstra/open-kilda/pull/3360#discussion_r407424118", "createdAt": "2020-04-13T10:48:14Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -1131,10 +1131,12 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n         }\n \n         and: \"The new and old dst switches pass switch validation\"\n-        [dstSwitch, newDstSwitch]*.dpId.each { switchId ->\n-            with(northbound.validateSwitch(switchId)) { validation ->\n-                validation.verifyRuleSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n-                validation.verifyMeterSectionsAreEmpty([\"missing\", \"excess\", \"misconfigured\"])\n+        Wrappers.wait(RULES_DELETION_TIME / 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMDA0OQ=="}, "originalCommit": {"oid": "56abff3ba3788174df9b465b7587e383980aba3d"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1914, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}