{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNDI3MzAy", "number": 3174, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxODo0NVrODdnH8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxODo0NVrODdnH8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzc2MzA0OnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxODo0NlrOFmUAyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0Mzo0MFrOFmWp8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxODA4OQ==", "bodyText": "I think there's no sense to reset \"throttlingData.affectedIsl\" if it's empty already. So \"throttlingData.getAffectedIsl().isEmpty()\" must go to the \"else if\" block.", "url": "https://github.com/telstra/open-kilda/pull/3174#discussion_r375718089", "createdAt": "2020-02-06T09:18:46Z", "author": {"login": "sergii-iakovenko"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java", "diffHunk": "@@ -57,12 +57,16 @@ public ReroutesThrottling(long minDelay, long maxDelay, int defaultFlowPriority)\n      * @param throttlingData the correlation ID and flow priority.\n      */\n     public void putRequest(String flowId, FlowThrottlingData throttlingData) {\n-        log.info(\"Puts flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n+        log.info(\"Puts reroute request for flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n         FlowThrottlingData prevThrottlingData = reroutes.put(flowId, throttlingData);\n         if (prevThrottlingData != null) {\n-            throttlingData.getAffectedIsl().addAll(prevThrottlingData.getAffectedIsl());\n+            if (prevThrottlingData.getAffectedIsl().isEmpty() || throttlingData.getAffectedIsl().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff05c86eb2fbe80aaa8a4cb43704a1f4f5a85665"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MTM5NA==", "bodyText": "Fixed", "url": "https://github.com/telstra/open-kilda/pull/3174#discussion_r375761394", "createdAt": "2020-02-06T10:43:40Z", "author": {"login": "rozdy"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java", "diffHunk": "@@ -57,12 +57,16 @@ public ReroutesThrottling(long minDelay, long maxDelay, int defaultFlowPriority)\n      * @param throttlingData the correlation ID and flow priority.\n      */\n     public void putRequest(String flowId, FlowThrottlingData throttlingData) {\n-        log.info(\"Puts flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n+        log.info(\"Puts reroute request for flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n         FlowThrottlingData prevThrottlingData = reroutes.put(flowId, throttlingData);\n         if (prevThrottlingData != null) {\n-            throttlingData.getAffectedIsl().addAll(prevThrottlingData.getAffectedIsl());\n+            if (prevThrottlingData.getAffectedIsl().isEmpty() || throttlingData.getAffectedIsl().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxODA4OQ=="}, "originalCommit": {"oid": "ff05c86eb2fbe80aaa8a4cb43704a1f4f5a85665"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2118, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}