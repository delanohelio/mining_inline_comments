{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjE2ODYz", "number": 3660, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzozMDo1OFrOETIVvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNToyN1rOEUGftA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDk1MDM3OnYy", "diffSide": "RIGHT", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/speaker/SpeakerRouter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzozMDo1OFrOG4sGSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODoxNDozNlrOG5YvIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5NTk0Ng==", "bodyText": "Em... you reuse setup command to remove data. As for me such code reuse... makes more harm than good. At least you will have an extreme mess in logs - there is no person who will treat the message \"Uni-ISL service receive SETUP request for {}\" as \"remove\" of uni-isl data.\nOne more even bigger issue here - you \"clean\" uniIsl without any checks... IslFsm can reject or postpone removal, but you remove any way to communicate to it in advance, so all ISL clean logic becomes corrupted. You must clean data in cascade and only when the current step is done you can go to the next step.\nSo - only IslFsm/service can call further cleanup when it has done with its own cleanup. The easiest way here is to make the switch to the exhausted discovery mode from the Isl side as part of the removal process.", "url": "https://github.com/telstra/open-kilda/pull/3660#discussion_r462095946", "createdAt": "2020-07-29T07:30:58Z", "author": {"login": "surabujin"}, "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/speaker/SpeakerRouter.java", "diffHunk": "@@ -157,7 +163,12 @@ private void proxySpeaker(Tuple input, InfoData payload) throws PipelineExceptio\n             emit(STREAM_PORT_ID, input, makePortTuple(\n                     new UpdatePortPropertiesCommand((UpdatePortPropertiesRequest) payload)));\n         } else if (payload instanceof DeactivateIslInfoData) {\n-            emit(STREAM_ISL_ID, input, makeIslTuple(input, new IslDeleteCommand((DeactivateIslInfoData) payload)));\n+            DeactivateIslInfoData data = (DeactivateIslInfoData) payload;\n+            emit(STREAM_ISL_ID, input, makeIslTuple(input, new IslDeleteCommand(data)));\n+            emit(STREAM_UNI_ISL_ID, input,\n+                    makeUniIslTuple(input, new UniIslSetupCommand(new Endpoint(data.getSource()))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1ef7c720141de10397f4dbd38cea0f69475b002"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNzI5Ng==", "bodyText": "You're right. I've added the switch to exhausted mode to ISL FSM.", "url": "https://github.com/telstra/open-kilda/pull/3660#discussion_r462827296", "createdAt": "2020-07-30T08:14:36Z", "author": {"login": "dpoltavets"}, "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/speaker/SpeakerRouter.java", "diffHunk": "@@ -157,7 +163,12 @@ private void proxySpeaker(Tuple input, InfoData payload) throws PipelineExceptio\n             emit(STREAM_PORT_ID, input, makePortTuple(\n                     new UpdatePortPropertiesCommand((UpdatePortPropertiesRequest) payload)));\n         } else if (payload instanceof DeactivateIslInfoData) {\n-            emit(STREAM_ISL_ID, input, makeIslTuple(input, new IslDeleteCommand((DeactivateIslInfoData) payload)));\n+            DeactivateIslInfoData data = (DeactivateIslInfoData) payload;\n+            emit(STREAM_ISL_ID, input, makeIslTuple(input, new IslDeleteCommand(data)));\n+            emit(STREAM_UNI_ISL_ID, input,\n+                    makeUniIslTuple(input, new UniIslSetupCommand(new Endpoint(data.getSource()))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5NTk0Ng=="}, "originalCommit": {"oid": "e1ef7c720141de10397f4dbd38cea0f69475b002"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTEzMzk2OnYy", "diffSide": "RIGHT", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNToyN1rOG6M7iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNToyN1rOG6M7iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MjQ0Mw==", "bodyText": "Why auxiliary mode controlled via bfdManger but exaustem mode controlled directly by Islsm?", "url": "https://github.com/telstra/open-kilda/pull/3660#discussion_r463682443", "createdAt": "2020-07-31T15:35:27Z", "author": {"login": "surabujin"}, "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -342,6 +343,11 @@ private void sendInstallMultiTable(IIslCarrier carrier, Endpoint ingress, Endpoi\n         }\n     }\n \n+    private void sendEnableExhaustedPollMode(IIslCarrier carrier) {\n+        carrier.exhaustedPollModeUpdateRequest(reference.getSource(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f95896e3b8afb35d57490cdf06a2cab3e0a330"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1786, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}