{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTAwNzAw", "number": 3779, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOToxNTo1MFrOExH4PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOToxNTo1MFrOExH4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTQ0NzY1OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/main/groovy/org/openkilda/functionaltests/helpers/SwitchHelper.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOToxNTo1MFrOHnFolw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo0NDo0N1rOHuD5pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc0ODgyMw==", "bodyText": "This is fine I guess, but with current implementation you don't really have to add \"properHex\", \"excessHex\", \"missingHex\", \"misconfiguredHex\" here. You will check hex values even if you pass non-hex section and check non-hex section if you only pass hex section. So I'd suggest you either check them truly separately, or just remove them from here and leave the implementation where you check both of them automatically.", "url": "https://github.com/telstra/open-kilda/pull/3779#discussion_r510748823", "createdAt": "2020-10-23T09:15:50Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/main/groovy/org/openkilda/functionaltests/helpers/SwitchHelper.groovy", "diffHunk": "@@ -338,17 +338,30 @@ class SwitchHelper {\n      * Based on that you have to use extra filter to detect these rules in missing/excess/misconfigured sections.\n      */\n     static void verifyRuleSectionsAreEmpty(SwitchValidationResult switchValidateInfo,\n-                                           List<String> sections = [\"missing\", \"proper\", \"excess\", \"misconfigured\"]) {\n+                                           List<String> sections = [\"missing\", \"proper\", \"excess\", \"misconfigured\",\n+                                                                    \"properHex\", \"excessHex\", \"missingHex\",\n+                                                                    \"misconfiguredHex\"]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbfb7bb4622403e6affefedfdf61170ab30a2f78"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2MDQ1NQ==", "bodyText": "extracted into a separate method", "url": "https://github.com/telstra/open-kilda/pull/3779#discussion_r518060455", "createdAt": "2020-11-05T13:44:47Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/main/groovy/org/openkilda/functionaltests/helpers/SwitchHelper.groovy", "diffHunk": "@@ -338,17 +338,30 @@ class SwitchHelper {\n      * Based on that you have to use extra filter to detect these rules in missing/excess/misconfigured sections.\n      */\n     static void verifyRuleSectionsAreEmpty(SwitchValidationResult switchValidateInfo,\n-                                           List<String> sections = [\"missing\", \"proper\", \"excess\", \"misconfigured\"]) {\n+                                           List<String> sections = [\"missing\", \"proper\", \"excess\", \"misconfigured\",\n+                                                                    \"properHex\", \"excessHex\", \"missingHex\",\n+                                                                    \"misconfiguredHex\"]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc0ODgyMw=="}, "originalCommit": {"oid": "fbfb7bb4622403e6affefedfdf61170ab30a2f78"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2222, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}