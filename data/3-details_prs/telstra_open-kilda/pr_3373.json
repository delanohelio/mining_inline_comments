{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODEzMDYy", "number": 3373, "title": "Protected Path Swap in Flow HS topology", "bodyText": "", "createdAt": "2020-04-08T12:17:01Z", "url": "https://github.com/telstra/open-kilda/pull/3373", "merged": true, "mergeCommit": {"oid": "a57828bddf90c08cd249beaf74268d393e1da41a"}, "closed": true, "closedAt": "2020-04-29T09:15:37Z", "author": {"login": "timofei-durakov"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVpSepgBqjMyMTQ1MjkwNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb3G-VABqjMyNzc4NjI3Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02c3ed4727a82b120c4b68a77466bd80dea35823", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/02c3ed4727a82b120c4b68a77466bd80dea35823", "committedDate": "2020-04-08T12:02:38Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "2cf687e36761812ed65be9ed46ff8a234e63d8e4", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/2cf687e36761812ed65be9ed46ff8a234e63d8e4", "committedDate": "2020-04-08T15:04:32Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cf687e36761812ed65be9ed46ff8a234e63d8e4", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/2cf687e36761812ed65be9ed46ff8a234e63d8e4", "committedDate": "2020-04-08T15:04:32Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "6b34f64e173ef1ca27a3a4cf0e2c4825688dafcb", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/6b34f64e173ef1ca27a3a4cf0e2c4825688dafcb", "committedDate": "2020-04-15T10:43:05Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b34f64e173ef1ca27a3a4cf0e2c4825688dafcb", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/6b34f64e173ef1ca27a3a4cf0e2c4825688dafcb", "committedDate": "2020-04-15T10:43:05Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "14c2b46782d3a99c3d14052f300750049d878612", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/14c2b46782d3a99c3d14052f300750049d878612", "committedDate": "2020-04-15T12:07:58Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14c2b46782d3a99c3d14052f300750049d878612", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/14c2b46782d3a99c3d14052f300750049d878612", "committedDate": "2020-04-15T12:07:58Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "daa6388aa305a84816b2779d7a9d58e5acaa6085", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/daa6388aa305a84816b2779d7a9d58e5acaa6085", "committedDate": "2020-04-16T06:38:34Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daa6388aa305a84816b2779d7a9d58e5acaa6085", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/daa6388aa305a84816b2779d7a9d58e5acaa6085", "committedDate": "2020-04-16T06:38:34Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "5ef1dbafb1c932f048d7d144f40a083696a9cd45", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/5ef1dbafb1c932f048d7d144f40a083696a9cd45", "committedDate": "2020-04-17T08:02:25Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ef1dbafb1c932f048d7d144f40a083696a9cd45", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/5ef1dbafb1c932f048d7d144f40a083696a9cd45", "committedDate": "2020-04-17T08:02:25Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "47064822893bf53ae7be7defd97b7336027c4655", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/47064822893bf53ae7be7defd97b7336027c4655", "committedDate": "2020-04-17T08:08:48Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47064822893bf53ae7be7defd97b7336027c4655", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/47064822893bf53ae7be7defd97b7336027c4655", "committedDate": "2020-04-17T08:08:48Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "2e44bd95ca3205d7a81a83666bd9c8a61e42ab3b", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/2e44bd95ca3205d7a81a83666bd9c8a61e42ab3b", "committedDate": "2020-04-17T08:55:31Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e44bd95ca3205d7a81a83666bd9c8a61e42ab3b", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/2e44bd95ca3205d7a81a83666bd9c8a61e42ab3b", "committedDate": "2020-04-17T08:55:31Z", "message": "Protected Path Swap in Flow HS topology"}, "afterCommit": {"oid": "21957e5994ad1241f5543365ba9897cdf0f25768", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/21957e5994ad1241f5543365ba9897cdf0f25768", "committedDate": "2020-04-20T08:10:40Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODYzMTQz", "url": "https://github.com/telstra/open-kilda/pull/3373#pullrequestreview-398863143", "createdAt": "2020-04-23T08:15:17Z", "commit": {"oid": "21957e5994ad1241f5543365ba9897cdf0f25768"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODoxNToxN1rOGKcpAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODoxNToxN1rOGKcpAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwODE5NA==", "bodyText": "commented code", "url": "https://github.com/telstra/open-kilda/pull/3373#discussion_r413608194", "createdAt": "2020-04-23T08:15:17Z", "author": {"login": "niksv"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/bolts/FlowPathSwapHubBolt.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/* Copyright 2019 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.bolts;\n+\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_HISTORY_BOLT;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_NB_RESPONSE_SENDER;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_PING_SENDER;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_SPEAKER_WORKER;\n+import static org.openkilda.wfm.topology.utils.KafkaRecordTranslator.FIELD_ID_PAYLOAD;\n+\n+import org.openkilda.floodlight.api.request.FlowSegmentRequest;\n+import org.openkilda.floodlight.api.response.SpeakerFlowSegmentResponse;\n+import org.openkilda.messaging.Message;\n+import org.openkilda.messaging.command.CommandMessage;\n+import org.openkilda.messaging.command.flow.FlowPathSwapRequest;\n+import org.openkilda.messaging.command.flow.PeriodicPingCommand;\n+import org.openkilda.persistence.PersistenceManager;\n+import org.openkilda.wfm.error.PipelineException;\n+import org.openkilda.wfm.share.flow.resources.FlowResourcesConfig;\n+import org.openkilda.wfm.share.flow.resources.FlowResourcesManager;\n+import org.openkilda.wfm.share.history.model.FlowHistoryHolder;\n+import org.openkilda.wfm.share.hubandspoke.HubBolt;\n+import org.openkilda.wfm.share.utils.KeyProvider;\n+import org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream;\n+import org.openkilda.wfm.topology.flowhs.service.FlowPathSwapHubCarrier;\n+import org.openkilda.wfm.topology.flowhs.service.FlowPathSwapService;\n+import org.openkilda.wfm.topology.utils.MessageKafkaTranslator;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import org.apache.storm.topology.OutputFieldsDeclarer;\n+import org.apache.storm.tuple.Tuple;\n+import org.apache.storm.tuple.Values;\n+\n+public class FlowPathSwapHubBolt extends HubBolt implements FlowPathSwapHubCarrier {\n+\n+    private final FlowPathSwapConfig config;\n+    private final PersistenceManager persistenceManager;\n+    private final FlowResourcesConfig flowResourcesConfig;\n+\n+    private transient FlowPathSwapService service;\n+    private String currentKey;\n+\n+    public FlowPathSwapHubBolt(FlowPathSwapConfig config, PersistenceManager persistenceManager,\n+                               FlowResourcesConfig flowResourcesConfig) {\n+        super(config);\n+\n+        this.config = config;\n+        this.persistenceManager = persistenceManager;\n+        this.flowResourcesConfig = flowResourcesConfig;\n+\n+\n+    }\n+\n+    @Override\n+    protected void init() {\n+\n+        FlowResourcesManager resourcesManager = new FlowResourcesManager(persistenceManager, flowResourcesConfig);\n+        service = new FlowPathSwapService(this, persistenceManager, config.getTransactionRetriesLimit(),\n+                config.getSpeakerCommandRetriesLimit(), resourcesManager);\n+    }\n+\n+    @Override\n+    protected void onRequest(Tuple input) throws PipelineException {\n+        currentKey = input.getStringByField(MessageKafkaTranslator.FIELD_ID_KEY);\n+        FlowPathSwapRequest payload = (FlowPathSwapRequest) input.getValueByField(FIELD_ID_PAYLOAD);\n+        service.handleRequest(currentKey, pullContext(input), payload);\n+    }\n+\n+    @Override\n+    protected void onWorkerResponse(Tuple input) {\n+        String operationKey = input.getStringByField(MessageKafkaTranslator.FIELD_ID_KEY);\n+        currentKey = KeyProvider.getParentKey(operationKey);\n+        SpeakerFlowSegmentResponse flowResponse = (SpeakerFlowSegmentResponse) input.getValueByField(FIELD_ID_PAYLOAD);\n+        service.handleAsyncResponse(currentKey, flowResponse);\n+    }\n+\n+    @Override\n+    public void onTimeout(String key, Tuple tuple) {\n+        currentKey = key;\n+        // service.handleTimeout(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21957e5994ad1241f5543365ba9897cdf0f25768"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Njc0ODkz", "url": "https://github.com/telstra/open-kilda/pull/3373#pullrequestreview-399674893", "createdAt": "2020-04-24T06:35:57Z", "commit": {"oid": "14ce4ee3dfa5c32dc79ba7da7136d78fbb1cae64"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjozNTo1N1rOGLItfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjozNTo1N1rOGLItfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzMDIzOQ==", "bodyText": "+1\nIs there any reason why this code is commented out?", "url": "https://github.com/telstra/open-kilda/pull/3373#discussion_r414330239", "createdAt": "2020-04-24T06:35:57Z", "author": {"login": "dpoltavets"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/bolts/FlowPathSwapHubBolt.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/* Copyright 2019 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.bolts;\n+\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_HISTORY_BOLT;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_NB_RESPONSE_SENDER;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_PING_SENDER;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_SPEAKER_WORKER;\n+import static org.openkilda.wfm.topology.utils.KafkaRecordTranslator.FIELD_ID_PAYLOAD;\n+\n+import org.openkilda.floodlight.api.request.FlowSegmentRequest;\n+import org.openkilda.floodlight.api.response.SpeakerFlowSegmentResponse;\n+import org.openkilda.messaging.Message;\n+import org.openkilda.messaging.command.CommandMessage;\n+import org.openkilda.messaging.command.flow.FlowPathSwapRequest;\n+import org.openkilda.messaging.command.flow.PeriodicPingCommand;\n+import org.openkilda.persistence.PersistenceManager;\n+import org.openkilda.wfm.error.PipelineException;\n+import org.openkilda.wfm.share.flow.resources.FlowResourcesConfig;\n+import org.openkilda.wfm.share.flow.resources.FlowResourcesManager;\n+import org.openkilda.wfm.share.history.model.FlowHistoryHolder;\n+import org.openkilda.wfm.share.hubandspoke.HubBolt;\n+import org.openkilda.wfm.share.utils.KeyProvider;\n+import org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream;\n+import org.openkilda.wfm.topology.flowhs.service.FlowPathSwapHubCarrier;\n+import org.openkilda.wfm.topology.flowhs.service.FlowPathSwapService;\n+import org.openkilda.wfm.topology.utils.MessageKafkaTranslator;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import org.apache.storm.topology.OutputFieldsDeclarer;\n+import org.apache.storm.tuple.Tuple;\n+import org.apache.storm.tuple.Values;\n+\n+public class FlowPathSwapHubBolt extends HubBolt implements FlowPathSwapHubCarrier {\n+\n+    private final FlowPathSwapConfig config;\n+    private final PersistenceManager persistenceManager;\n+    private final FlowResourcesConfig flowResourcesConfig;\n+\n+    private transient FlowPathSwapService service;\n+    private String currentKey;\n+\n+    public FlowPathSwapHubBolt(FlowPathSwapConfig config, PersistenceManager persistenceManager,\n+                               FlowResourcesConfig flowResourcesConfig) {\n+        super(config);\n+\n+        this.config = config;\n+        this.persistenceManager = persistenceManager;\n+        this.flowResourcesConfig = flowResourcesConfig;\n+\n+\n+    }\n+\n+    @Override\n+    protected void init() {\n+\n+        FlowResourcesManager resourcesManager = new FlowResourcesManager(persistenceManager, flowResourcesConfig);\n+        service = new FlowPathSwapService(this, persistenceManager, config.getTransactionRetriesLimit(),\n+                config.getSpeakerCommandRetriesLimit(), resourcesManager);\n+    }\n+\n+    @Override\n+    protected void onRequest(Tuple input) throws PipelineException {\n+        currentKey = input.getStringByField(MessageKafkaTranslator.FIELD_ID_KEY);\n+        FlowPathSwapRequest payload = (FlowPathSwapRequest) input.getValueByField(FIELD_ID_PAYLOAD);\n+        service.handleRequest(currentKey, pullContext(input), payload);\n+    }\n+\n+    @Override\n+    protected void onWorkerResponse(Tuple input) {\n+        String operationKey = input.getStringByField(MessageKafkaTranslator.FIELD_ID_KEY);\n+        currentKey = KeyProvider.getParentKey(operationKey);\n+        SpeakerFlowSegmentResponse flowResponse = (SpeakerFlowSegmentResponse) input.getValueByField(FIELD_ID_PAYLOAD);\n+        service.handleAsyncResponse(currentKey, flowResponse);\n+    }\n+\n+    @Override\n+    public void onTimeout(String key, Tuple tuple) {\n+        currentKey = key;\n+        // service.handleTimeout(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwODE5NA=="}, "originalCommit": {"oid": "21957e5994ad1241f5543365ba9897cdf0f25768"}, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14ce4ee3dfa5c32dc79ba7da7136d78fbb1cae64", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/14ce4ee3dfa5c32dc79ba7da7136d78fbb1cae64", "committedDate": "2020-04-23T09:34:41Z", "message": "add tests for update/swapPath retry (#3380)"}, "afterCommit": {"oid": "8d14299e0b04ea67e50bae94e2934095b2139fe4", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/8d14299e0b04ea67e50bae94e2934095b2139fe4", "committedDate": "2020-04-27T09:01:39Z", "message": "Fixed commented out timeouts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzYzMjk0", "url": "https://github.com/telstra/open-kilda/pull/3373#pullrequestreview-400763294", "createdAt": "2020-04-27T09:07:12Z", "commit": {"oid": "8d14299e0b04ea67e50bae94e2934095b2139fe4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzkxMjUy", "url": "https://github.com/telstra/open-kilda/pull/3373#pullrequestreview-400791252", "createdAt": "2020-04-27T09:44:21Z", "commit": {"oid": "8d14299e0b04ea67e50bae94e2934095b2139fe4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33e7af779183612cb0c045abe8b6991a86da1c0f", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/33e7af779183612cb0c045abe8b6991a86da1c0f", "committedDate": "2020-04-27T22:28:18Z", "message": "Protected Path Swap in Flow HS topology"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eedf92c8194f96b9bd51568235382ef0c7fa0ba", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/7eedf92c8194f96b9bd51568235382ef0c7fa0ba", "committedDate": "2020-04-27T22:28:18Z", "message": "add tests for update/swapPath retry (#3380)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca58d46d2a8f80da2106bed3da7c9842eccb8548", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/ca58d46d2a8f80da2106bed3da7c9842eccb8548", "committedDate": "2020-04-27T22:34:14Z", "message": "Fixed commented out timeouts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d14299e0b04ea67e50bae94e2934095b2139fe4", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/8d14299e0b04ea67e50bae94e2934095b2139fe4", "committedDate": "2020-04-27T09:01:39Z", "message": "Fixed commented out timeouts"}, "afterCommit": {"oid": "ca58d46d2a8f80da2106bed3da7c9842eccb8548", "author": {"user": {"login": "timofei-durakov", "name": "Timofey Durakov"}}, "url": "https://github.com/telstra/open-kilda/commit/ca58d46d2a8f80da2106bed3da7c9842eccb8548", "committedDate": "2020-04-27T22:34:14Z", "message": "Fixed commented out timeouts"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3616, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}