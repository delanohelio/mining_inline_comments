{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MTc0NjM3", "number": 3946, "title": "Move flow endpoints multitable flag to flow path level", "bodyText": "Close #3940 #3941 #3341\nUpgrade Notes:\nConsider using db-migration container with the following script:\ndocker/db-migration/migrations/001-rework-flow-multitable-flag.yaml", "createdAt": "2020-12-22T14:56:39Z", "url": "https://github.com/telstra/open-kilda/pull/3946", "merged": true, "mergeCommit": {"oid": "1b79385d2552ab955fe3ce76c844c9df4f717bd4"}, "closed": true, "closedAt": "2021-03-10T19:26:12Z", "author": {"login": "rozdy"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdo6ECzgFqTU1NzY4OTUyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd_ez3YABqjQ0MDEyOTQ2MTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3Njg5NTIy", "url": "https://github.com/telstra/open-kilda/pull/3946#pullrequestreview-557689522", "createdAt": "2020-12-23T07:33:07Z", "commit": {"oid": "070cbd9c19d9b77047955495009273baf1e3ffee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "070cbd9c19d9b77047955495009273baf1e3ffee", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/070cbd9c19d9b77047955495009273baf1e3ffee", "committedDate": "2020-12-22T09:35:47Z", "message": "Move flow endpoints multitable flag to flow path level"}, "afterCommit": {"oid": "92ec9cb570306580dc53a17292bc791d49b1613a", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/92ec9cb570306580dc53a17292bc791d49b1613a", "committedDate": "2020-12-23T20:38:43Z", "message": "Move flow endpoints multitable flag to flow path level"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92ec9cb570306580dc53a17292bc791d49b1613a", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/92ec9cb570306580dc53a17292bc791d49b1613a", "committedDate": "2020-12-23T20:38:43Z", "message": "Move flow endpoints multitable flag to flow path level"}, "afterCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614", "committedDate": "2020-12-28T17:55:40Z", "message": "Move flow endpoints multitable flag to flow path level"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDQ1ODY3", "url": "https://github.com/telstra/open-kilda/pull/3946#pullrequestreview-559445867", "createdAt": "2020-12-29T09:23:19Z", "commit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDU4Mzc1", "url": "https://github.com/telstra/open-kilda/pull/3946#pullrequestreview-559458375", "createdAt": "2020-12-29T09:56:41Z", "commit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwOTo1Njo0MlrOIMLg1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMDoyMjoxN1rOIMMA5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0MjQ1NA==", "bodyText": "Do we really need index here?", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549642454", "createdAt": "2020-12-29T09:56:42Z", "author": {"login": "surabujin"}, "path": "docker/db-migration/migrations/001-rework-flow-multitable-flag.yaml", "diffHunk": "@@ -0,0 +1,50 @@\n+---\n+databaseChangeLog:\n+  - changeSet:\n+      id: tag\n+      author: rozdy\n+      changes:\n+        - tagDatabase:\n+            tag: 001-rework-flow-multitable-flag\n+  - changeSet:\n+      id: add_new_flow_path_properties\n+      author: rozdy\n+      changes:\n+        - sql: \"CREATE PROPERTY flow_path.src_with_multi_table IF NOT EXISTS BOOLEAN\"\n+        - sql: \"CREATE PROPERTY flow_path.dst_with_multi_table IF NOT EXISTS BOOLEAN\"\n+        - sql: \"CREATE INDEX flow_path.src_with_multi_table NOTUNIQUE_HASH_INDEX\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NDgzMA==", "bodyText": "According to code that fills switchProperties - it is possible to have no switch properties object by some existing switchId... and as result, you will throw NPE here.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549644830", "createdAt": "2020-12-29T10:04:15Z", "author": {"login": "surabujin"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowPathBuilder.java", "diffHunk": "@@ -153,6 +151,8 @@ public FlowPath buildFlowPath(Flow flow, PathResources pathResources, Path path,\n                 .bandwidth(flow.getBandwidth())\n                 .ignoreBandwidth(flow.isIgnoreBandwidth() || forceToIgnoreBandwidth)\n                 .latency(path.getLatency())\n+                .srcWithMultiTable(switchProperties.get(srcSwitch.getSwitchId()).isMultiTable())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjQ4Nw==", "bodyText": "copy & paste is evil - you can move this chunk in parent class.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549646487", "createdAt": "2020-12-29T10:08:50Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/update/actions/RemoveOldRulesAction.java", "diffHunk": "@@ -57,27 +57,35 @@ protected void perform(State from, State to, Event event, FlowUpdateContext cont\n \n         Collection<FlowSegmentRequestFactory> factories = new ArrayList<>();\n \n-        Flow flow = RequestedFlowMapper.INSTANCE.toFlow(stateMachine.getOriginalFlow());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzM5NQ==", "bodyText": "I would like to keep this getter (with replaced body), you have all required objects to extract it.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549647395", "createdAt": "2020-12-29T10:11:47Z", "author": {"login": "surabujin"}, "path": "src-java/kilda-model/src/main/java/org/openkilda/adapter/FlowDestAdapter.java", "diffHunk": "@@ -36,11 +41,6 @@ public FlowEndpoint getEndpoint() {\n                 trackConnectedDevices.isDstArp() || trackConnectedDevices.isDstSwitchArp());\n     }\n \n-    @Override\n-    public boolean isMultiTableSegment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODMzNw==", "bodyText": "It ruins the original idea - now you can't have getters like isPrimaryEgressPath.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549648337", "createdAt": "2020-12-29T10:14:38Z", "author": {"login": "surabujin"}, "path": "src-java/kilda-model/src/main/java/org/openkilda/adapter/FlowDestAdapter.java", "diffHunk": "@@ -18,13 +18,18 @@\n import org.openkilda.model.DetectConnectedDevices;\n import org.openkilda.model.Flow;\n import org.openkilda.model.FlowEndpoint;\n+import org.openkilda.model.FlowPath;\n import org.openkilda.model.PathId;\n \n import lombok.NonNull;\n \n public class FlowDestAdapter extends FlowSideAdapter {\n     public FlowDestAdapter(Flow flow) {\n-        super(flow);\n+        super(flow, flow.getForwardPath());\n+    }\n+\n+    public FlowDestAdapter(Flow flow, FlowPath flowPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTEzMQ==", "bodyText": "... extremely messy. And it based on the excess pathPath field. Bad idea, as for me.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549649131", "createdAt": "2020-12-29T10:17:08Z", "author": {"login": "surabujin"}, "path": "src-java/kilda-model/src/main/java/org/openkilda/adapter/FlowSideAdapter.java", "diffHunk": "@@ -45,41 +47,45 @@ public static FlowSideAdapter makeIngressAdapter(Flow flow, FlowPath path) {\n      */\n     public static FlowSideAdapter makeEgressAdapter(Flow flow, FlowPath path) {\n         if (path.getCookie().getDirection() == FlowPathDirection.FORWARD) {\n-            return new FlowDestAdapter(flow);\n+            return new FlowDestAdapter(flow, path);\n         } else {\n-            return new FlowSourceAdapter(flow);\n+            return new FlowSourceAdapter(flow, path);\n         }\n     }\n \n     /**\n      * Determine flow side by switchId and produce corresponding side-adapter.\n      */\n-    public static FlowSideAdapter makeAdapter(SwitchId switchId, Flow flow) {\n+    public static FlowSideAdapter makeAdapter(SwitchId switchId, Flow flow, FlowPath flowPath) {\n         if (flow.isOneSwitchFlow()) {\n             throw new IllegalArgumentException(\"Unable to determine flow side for one-switch-flow by switch endpoint\");\n         } else if (switchId.equals(flow.getSrcSwitchId())) {\n-            return new FlowSourceAdapter(flow);\n+            return new FlowSourceAdapter(flow, flowPath);\n         } else if (switchId.equals(flow.getDestSwitchId())) {\n-            return new FlowDestAdapter(flow);\n+            return new FlowDestAdapter(flow, flowPath);\n         } else {\n             throw new IllegalArgumentException(String.format(\n                     \"Unable to map switch %s on any flow side of %s\", switchId, flow));\n         }\n     }\n \n-    protected FlowSideAdapter(Flow flow) {\n+    protected FlowSideAdapter(Flow flow, FlowPath flowPath) {\n         this.flow = flow;\n+        this.flowPath = flowPath;\n     }\n \n     public abstract FlowEndpoint getEndpoint();\n \n-    public abstract boolean isMultiTableSegment();\n-\n     public abstract boolean isDetectConnectedDevicesLldp();\n \n     public abstract boolean isDetectConnectedDevicesArp();\n \n     public abstract boolean isPrimaryEgressPath(@NonNull PathId pathId);\n \n     public abstract boolean isLooped();\n+\n+    public boolean isMultiTableSegment() {\n+        return getEndpoint().getSwitchId().equals(flowPath.getSrcSwitchId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDY2MA==", "bodyText": "You must not make such (that this is a forward path) assumptions. At least you must make more checks.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r549650660", "createdAt": "2020-12-29T10:22:17Z", "author": {"login": "surabujin"}, "path": "src-java/kilda-model/src/main/java/org/openkilda/adapter/FlowSideAdapter.java", "diffHunk": "@@ -45,41 +47,45 @@ public static FlowSideAdapter makeIngressAdapter(Flow flow, FlowPath path) {\n      */\n     public static FlowSideAdapter makeEgressAdapter(Flow flow, FlowPath path) {\n         if (path.getCookie().getDirection() == FlowPathDirection.FORWARD) {\n-            return new FlowDestAdapter(flow);\n+            return new FlowDestAdapter(flow, path);\n         } else {\n-            return new FlowSourceAdapter(flow);\n+            return new FlowSourceAdapter(flow, path);\n         }\n     }\n \n     /**\n      * Determine flow side by switchId and produce corresponding side-adapter.\n      */\n-    public static FlowSideAdapter makeAdapter(SwitchId switchId, Flow flow) {\n+    public static FlowSideAdapter makeAdapter(SwitchId switchId, Flow flow, FlowPath flowPath) {\n         if (flow.isOneSwitchFlow()) {\n             throw new IllegalArgumentException(\"Unable to determine flow side for one-switch-flow by switch endpoint\");\n         } else if (switchId.equals(flow.getSrcSwitchId())) {\n-            return new FlowSourceAdapter(flow);\n+            return new FlowSourceAdapter(flow, flowPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/9c1d3d907eaf5331c2bbcb174a9a0f9c748a9614", "committedDate": "2020-12-28T17:55:40Z", "message": "Move flow endpoints multitable flag to flow path level"}, "afterCommit": {"oid": "57f5e28ea5ac3465b0bdd04b8f0dddd759771047", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/57f5e28ea5ac3465b0bdd04b8f0dddd759771047", "committedDate": "2020-12-30T17:29:38Z", "message": "Move flow endpoints multitable flag to flow path level"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57f5e28ea5ac3465b0bdd04b8f0dddd759771047", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/57f5e28ea5ac3465b0bdd04b8f0dddd759771047", "committedDate": "2020-12-30T17:29:38Z", "message": "Move flow endpoints multitable flag to flow path level"}, "afterCommit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/55bd7fd2a2f0d11930ef8cae22adfef805d1da2b", "committedDate": "2021-01-04T10:59:25Z", "message": "Move flow endpoints multitable flag to flow path level"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5MTM0ODU1", "url": "https://github.com/telstra/open-kilda/pull/3946#pullrequestreview-569134855", "createdAt": "2021-01-15T10:22:11Z", "commit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDoyMjoxMVrOIUV6kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDoyMjoxMVrOIUV6kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODIwMTQ5MQ==", "bodyText": "Why direct request via path object? As for me, request via flowSide is more flexible.", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r558201491", "createdAt": "2021-01-15T10:22:11Z", "author": {"login": "surabujin"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/service/SpeakerFlowSegmentRequestBuilder.java", "diffHunk": "@@ -277,11 +277,11 @@ private FlowSegmentRequestFactory makeIngressSegmentRequest(\n         return IngressFlowSegmentRequestFactory.builder()\n                 .messageContext(messageContext)\n                 .metadata(makeMetadata(path, ensureEqualMultiTableFlag(\n-                        flowSide.isMultiTableSegment(), segmentSide.isMultiTable(),\n-                        String.format(\"First flow(id:%s, path:%s) segment and flow level multi-table flag values are \"\n-                                              + \"incompatible to each other - flow(%s) != segment(%s)\",\n+                        path.isSrcWithMultiTable(), segmentSide.isMultiTable(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNzMyOTg0", "url": "https://github.com/telstra/open-kilda/pull/3946#pullrequestreview-570732984", "createdAt": "2021-01-18T19:15:38Z", "commit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxOToxNTozOFrOIV03wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxOToxNTozOFrOIV03wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTc1NzI0OA==", "bodyText": "By design and implementation, BaseFlowRuleRemovalAction is supposed to be used with any FSM which extends FlowProcessingFsm. But this method requires FlowPathSwappingFsm to be provided. Can we align with initial design?", "url": "https://github.com/telstra/open-kilda/pull/3946#discussion_r559757248", "createdAt": "2021-01-18T19:15:38Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/common/actions/BaseFlowRuleRemovalAction.java", "diffHunk": "@@ -235,4 +238,16 @@ protected PathContext buildPathContextForRemovalIngressOnly(SwitchId switchId) {\n                 .server42MacAddress(switchProperties.getServer42MacAddress())\n                 .build();\n     }\n+\n+    protected Flow getOriginalFlowWithPaths(FlowPathSwappingFsm stateMachine, RequestedFlow originalFlow) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3MzEyNDMw", "url": "https://github.com/telstra/open-kilda/pull/3946#pullrequestreview-577312430", "createdAt": "2021-01-27T13:04:28Z", "commit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55bd7fd2a2f0d11930ef8cae22adfef805d1da2b", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/55bd7fd2a2f0d11930ef8cae22adfef805d1da2b", "committedDate": "2021-01-04T10:59:25Z", "message": "Move flow endpoints multitable flag to flow path level"}, "afterCommit": {"oid": "34ea3b69e1afc16be29f957e3f62efb2eaed0069", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/34ea3b69e1afc16be29f957e3f62efb2eaed0069", "committedDate": "2021-02-26T14:17:40Z", "message": "Move flow endpoints multitable flag to flow path level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "770a3f729e3744803ddb7cafea004446db278635", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/770a3f729e3744803ddb7cafea004446db278635", "committedDate": "2021-03-03T10:45:24Z", "message": "Move flow endpoints multitable flag to flow path level"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34ea3b69e1afc16be29f957e3f62efb2eaed0069", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/34ea3b69e1afc16be29f957e3f62efb2eaed0069", "committedDate": "2021-02-26T14:17:40Z", "message": "Move flow endpoints multitable flag to flow path level"}, "afterCommit": {"oid": "770a3f729e3744803ddb7cafea004446db278635", "author": {"user": {"login": "rozdy", "name": "Ievgen Rozdymakha"}}, "url": "https://github.com/telstra/open-kilda/commit/770a3f729e3744803ddb7cafea004446db278635", "committedDate": "2021-03-03T10:45:24Z", "message": "Move flow endpoints multitable flag to flow path level"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3738, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}