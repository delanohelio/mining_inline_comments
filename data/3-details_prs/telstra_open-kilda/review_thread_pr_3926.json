{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTEwNzA5", "number": 3926, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjozMzowOFrOFHre1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTowNjoxNFrOFHtzbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTk2NzU5OnYy", "diffSide": "RIGHT", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjozMzowOFrOIJNqkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjozMzowOFrOIJNqkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTk4NA==", "bodyText": "note: safeRefreshConnection contains isRefreshIntervalPassed inside. So here we have double cheking. But This double checking saving us from calling synchronized method", "url": "https://github.com/telstra/open-kilda/pull/3926#discussion_r546531984", "createdAt": "2020-12-21T06:33:08Z", "author": {"login": "niksv"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -60,42 +60,81 @@ public ZkClient(String id, String serviceName, String connectionString, int sess\n         this.lastRefreshAttempt = Instant.MIN;\n     }\n \n-    public abstract void init();\n+    /**\n+     * Init client.\n+     */\n+    public void init() {\n+        try {\n+            if (!isConnectionAlive()) {\n+                initZk();\n+            }\n+        } catch (IOException e) {\n+            log.error(String.format(\"Couldn't init ZooKeeper for component %s with run id %s and \"\n+                    + \"connection string %s. Error: %s\", serviceName, id, connectionString, e.getMessage()), e);\n+            closeZk();\n+        }\n+        if (isConnectionAlive()) {\n+            try {\n+                validateZNodes();\n+            } catch (KeeperException | InterruptedException | IOException | IllegalStateException e) {\n+                log.error(String.format(\"Couldn't validate nodes for component %s with run id %s and \"\n+                        + \"connection string %s. Error: %s\", serviceName, id, connectionString, e.getMessage()), e);\n+\n+            }\n+            subscribeNodes();\n+        }\n+    }\n \n     String getPaths(String... paths) {\n         return Paths.get(ROOT, paths).toString();\n     }\n \n-    boolean refreshConnection(KeeperState state) throws IOException {\n-        if (state == KeeperState.Disconnected || state == KeeperState.Expired) {\n-            closeZk();\n-            initZk();\n-            init();\n+    boolean refreshConnection(KeeperState state) {\n+        if ((state == KeeperState.Disconnected || state == KeeperState.Expired) && isRefreshIntervalPassed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401c012ad2816f8e6c62f80e95e08da85b21743b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjM0Nzk3OnYy", "diffSide": "RIGHT", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTowNjoxNFrOIJREgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMDoyMDozOFrOIJTQow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4Nzc3OA==", "bodyText": "You are making an assumption that nothing can happen with nodes while there where no connection to zk... as for me it is too optimistic.", "url": "https://github.com/telstra/open-kilda/pull/3926#discussion_r546587778", "createdAt": "2020-12-21T09:06:14Z", "author": {"login": "surabujin"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -141,18 +167,31 @@ protected void ensureZNode(byte[] value, String... path) throws KeeperException,\n         }\n     }\n \n-    void validateNodes() throws KeeperException, InterruptedException, IOException {\n+    @VisibleForTesting\n+    void validateZNodes() throws KeeperException, InterruptedException, IOException {\n         ensureZNode(serviceName);\n         ensureZNode(serviceName, id);\n+        validateNodes();\n+        nodesValidated = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401c012ad2816f8e6c62f80e95e08da85b21743b"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMzY1MQ==", "bodyText": "not exactly, if zk is reconnected the flag is reseted to false", "url": "https://github.com/telstra/open-kilda/pull/3926#discussion_r546623651", "createdAt": "2020-12-21T10:20:38Z", "author": {"login": "timofei-durakov"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -141,18 +167,31 @@ protected void ensureZNode(byte[] value, String... path) throws KeeperException,\n         }\n     }\n \n-    void validateNodes() throws KeeperException, InterruptedException, IOException {\n+    @VisibleForTesting\n+    void validateZNodes() throws KeeperException, InterruptedException, IOException {\n         ensureZNode(serviceName);\n         ensureZNode(serviceName, id);\n+        validateNodes();\n+        nodesValidated = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4Nzc3OA=="}, "originalCommit": {"oid": "401c012ad2816f8e6c62f80e95e08da85b21743b"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2190, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}