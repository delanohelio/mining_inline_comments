{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMDc5MTQx", "number": 3579, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjoyMTozNVrOELIuyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjo0NToyMVrOELJEaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTEyODQyOnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/create/action/HandleNotCreatedFlowAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjoyMTozNVrOGsk_Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNzoyNDoxMVrOGsmb0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5NjUyMw==", "bodyText": "Is the statusInfo supposed to bring light on \"what goes wrong?\"? There is 0 info about what goes wrong.", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449396523", "createdAt": "2020-07-03T06:21:35Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/create/action/HandleNotCreatedFlowAction.java", "diffHunk": "@@ -43,7 +45,7 @@ public HandleNotCreatedFlowAction(PersistenceManager persistenceManager,\n     public void perform(State from, State to, Event event, FlowCreateContext context, FlowCreateFsm stateMachine) {\n         String flowId = stateMachine.getFlowId();\n         dashboardLogger.onFlowStatusUpdate(flowId, FlowStatus.DOWN);\n-        flowRepository.updateStatus(flowId, FlowStatus.DOWN);\n+        flowRepository.updateStatus(flowId, FlowStatus.DOWN, format(\"Failed to create flow %s\", flowId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQyMDI0Mg==", "bodyText": "To see what went wrong, we have history. When setting the task, I realized that this field is needed for filtering.", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449420242", "createdAt": "2020-07-03T07:24:11Z", "author": {"login": "dpoltavets"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/create/action/HandleNotCreatedFlowAction.java", "diffHunk": "@@ -43,7 +45,7 @@ public HandleNotCreatedFlowAction(PersistenceManager persistenceManager,\n     public void perform(State from, State to, Event event, FlowCreateContext context, FlowCreateFsm stateMachine) {\n         String flowId = stateMachine.getFlowId();\n         dashboardLogger.onFlowStatusUpdate(flowId, FlowStatus.DOWN);\n-        flowRepository.updateStatus(flowId, FlowStatus.DOWN);\n+        flowRepository.updateStatus(flowId, FlowStatus.DOWN, format(\"Failed to create flow %s\", flowId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5NjUyMw=="}, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTE0NTcyOnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/reroute/actions/RevertFlowStatusAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjoyOTozOVrOGslJSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjoyOTozOVrOGslJSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5OTExNA==", "bodyText": "Can't understand. I have doubts about this approach.", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449399114", "createdAt": "2020-07-03T06:29:39Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/reroute/actions/RevertFlowStatusAction.java", "diffHunk": "@@ -36,13 +36,20 @@ public RevertFlowStatusAction(PersistenceManager persistenceManager) {\n     @Override\n     protected void perform(State from, State to, Event event, FlowRerouteContext context, FlowRerouteFsm stateMachine) {\n         String flowId = stateMachine.getFlowId();\n-        FlowStatus originalStatus = stateMachine.getOriginalFlowStatus();\n-        if (originalStatus != null) {\n-            log.debug(\"Reverting the flow status of {} to {}\", flowId, originalStatus);\n+        FlowStatus originalFlowStatus = stateMachine.getOriginalFlowStatus();\n+        FlowStatus newFlowStatus = stateMachine.getNewFlowStatus();\n+        if (originalFlowStatus != null) {\n+            log.debug(\"Reverting the flow status of {} to {}\", flowId, originalFlowStatus);\n \n-            flowRepository.updateStatus(flowId, originalStatus);\n+            String flowStatusInfo = FlowStatus.DEGRADED.equals(originalFlowStatus)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTE1NjM1OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/reroute/actions/UpdateFlowStatusAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjozNDozM1rOGslPwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNzoxNToxNVrOGsmMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMDc3MA==", "bodyText": "Why do we need to update statusInfo in cases when there where no actual status update? Why we calculate statusInfo separately from status itself? I.e. the code wich set some status to the flow, know why it has decided to set exactly this status... so it should set statusInfo field too.", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449400770", "createdAt": "2020-07-03T06:34:33Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/reroute/actions/UpdateFlowStatusAction.java", "diffHunk": "@@ -49,12 +50,25 @@ protected void perform(State from, State to, Event event, FlowRerouteContext con\n             FlowStatus flowStatus = flow.computeFlowStatus();\n             if (flowStatus != flow.getStatus()) {\n                 dashboardLogger.onFlowStatusUpdate(flowId, flowStatus);\n-                flowRepository.updateStatus(flowId, flowStatus);\n+                flowRepository.updateStatus(flowId, flowStatus, getFlowStatusInfo(flowStatus, stateMachine));\n+            } else if (FlowStatus.DEGRADED.equals(flowStatus)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxNjM5Mg==", "bodyText": "In the current implementation, the state DEGRADED can only be if the protected path was not found. This status (DEGRADED) can be set earlier. And because of this, we will not update statusInfo.", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449416392", "createdAt": "2020-07-03T07:15:15Z", "author": {"login": "dpoltavets"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/reroute/actions/UpdateFlowStatusAction.java", "diffHunk": "@@ -49,12 +50,25 @@ protected void perform(State from, State to, Event event, FlowRerouteContext con\n             FlowStatus flowStatus = flow.computeFlowStatus();\n             if (flowStatus != flow.getStatus()) {\n                 dashboardLogger.onFlowStatusUpdate(flowId, flowStatus);\n-                flowRepository.updateStatus(flowId, flowStatus);\n+                flowRepository.updateStatus(flowId, flowStatus, getFlowStatusInfo(flowStatus, stateMachine));\n+            } else if (FlowStatus.DEGRADED.equals(flowStatus)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMDc3MA=="}, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTE4Mzc2OnYy", "diffSide": "RIGHT", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjo0NToyMVrOGslfbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNzoyMDo1NVrOGsmWNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwNDc4Mg==", "bodyText": "How it is possible? If the flow is the \"target\" for rerouting, how it can be in UP state?", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449404782", "createdAt": "2020-07-03T06:45:21Z", "author": {"login": "surabujin"}, "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -102,7 +102,12 @@ public void rerouteAffectedFlows(MessageSender sender, String correlationId, Rer\n             Flow flow = entry.getFlow();\n             Boolean sendRerouteRequest = transactionManager.doInTransaction(() -> {\n                 boolean flowPathFound = updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());\n-                flowRepository.updateStatusSafe(flow.getFlowId(), flow.computeFlowStatus());\n+                FlowStatus flowStatus = flow.computeFlowStatus();\n+                String flowStatusInfo = null;\n+                if (!FlowStatus.UP.equals(flowStatus)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxODgwNA==", "bodyText": "Before that, we update the paths statuses and compute the flow status.", "url": "https://github.com/telstra/open-kilda/pull/3579#discussion_r449418804", "createdAt": "2020-07-03T07:20:55Z", "author": {"login": "dpoltavets"}, "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -102,7 +102,12 @@ public void rerouteAffectedFlows(MessageSender sender, String correlationId, Rer\n             Flow flow = entry.getFlow();\n             Boolean sendRerouteRequest = transactionManager.doInTransaction(() -> {\n                 boolean flowPathFound = updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());\n-                flowRepository.updateStatusSafe(flow.getFlowId(), flow.computeFlowStatus());\n+                FlowStatus flowStatus = flow.computeFlowStatus();\n+                String flowStatusInfo = null;\n+                if (!FlowStatus.UP.equals(flowStatus)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwNDc4Mg=="}, "originalCommit": {"oid": "138dfdc593c286bd669e86546d4b6515789cad44"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1894, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}