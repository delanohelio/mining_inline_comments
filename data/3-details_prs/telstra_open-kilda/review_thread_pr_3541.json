{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNjcxNDQ5", "number": 3541, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMToxNFrOEFlVYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMjoxOVrOEFlXJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjkwMDE3OnYy", "diffSide": "RIGHT", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMToxNFrOGj3B1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo0MjozN1rOGnBKfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NDkzMg==", "bodyText": "em... what about the rest of paths passed into paths argument? Now you stop processing paths on first error (not so critical as stop processing all flows on the first error, but still incorrect).", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r440254932", "createdAt": "2020-06-15T15:21:14Z", "author": {"login": "surabujin"}, "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -137,7 +141,13 @@ private void updateFlowPathsStateForFlow(SwitchId switchId, int port, List<FlowP\n                         || (pathSegment.getDestPort() == port\n                         && switchId.equals(pathSegment.getDestSwitch().getSwitchId()))) {\n                     pathSegment.setFailed(true);\n-                    pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                    try {\n+                        pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                    } catch (EntityNotFoundException e) {\n+                        log.warn(\"FlowPath {} not found. Skipping reroute for flow {}.\",\n+                                fp.getPathId(), fp.getFlow().getFlowId(), e);\n+                        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e452895b38212ecda9fcdfb6354eadf99d3e26eb"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2NjcxOQ==", "bodyText": "Reworked.", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r443566719", "createdAt": "2020-06-22T13:42:37Z", "author": {"login": "rozdy"}, "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -137,7 +141,13 @@ private void updateFlowPathsStateForFlow(SwitchId switchId, int port, List<FlowP\n                         || (pathSegment.getDestPort() == port\n                         && switchId.equals(pathSegment.getDestSwitch().getSwitchId()))) {\n                     pathSegment.setFailed(true);\n-                    pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                    try {\n+                        pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                    } catch (EntityNotFoundException e) {\n+                        log.warn(\"FlowPath {} not found. Skipping reroute for flow {}.\",\n+                                fp.getPathId(), fp.getFlow().getFlowId(), e);\n+                        return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NDkzMg=="}, "originalCommit": {"oid": "e452895b38212ecda9fcdfb6354eadf99d3e26eb"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjkwNDcxOnYy", "diffSide": "RIGHT", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMjoxOVrOGj3Esw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo0MjozMFrOGnBKMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NTY2Nw==", "bodyText": "swapping this and following lines you can get rid of flowPathFound variable.", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r440255667", "createdAt": "2020-06-15T15:22:19Z", "author": {"login": "surabujin"}, "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -98,21 +99,24 @@ public void rerouteAffectedFlows(MessageSender sender, String correlationId, Rer\n \n         for (FlowWithAffectedPaths entry : groupPathsForRerouting(affectedFlowPaths)) {\n             Flow flow = entry.getFlow();\n-            transactionManager.doInTransaction(() -> {\n-                updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());\n+            Boolean sendRerouteRequest = transactionManager.doInTransaction(() -> {\n+                boolean flowPathFound = updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e452895b38212ecda9fcdfb6354eadf99d3e26eb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2NjY0Mg==", "bodyText": "I can't swap lines because flow status computation is dependent on flow paths statuses.", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r443566642", "createdAt": "2020-06-22T13:42:30Z", "author": {"login": "rozdy"}, "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -98,21 +99,24 @@ public void rerouteAffectedFlows(MessageSender sender, String correlationId, Rer\n \n         for (FlowWithAffectedPaths entry : groupPathsForRerouting(affectedFlowPaths)) {\n             Flow flow = entry.getFlow();\n-            transactionManager.doInTransaction(() -> {\n-                updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());\n+            Boolean sendRerouteRequest = transactionManager.doInTransaction(() -> {\n+                boolean flowPathFound = updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NTY2Nw=="}, "originalCommit": {"oid": "e452895b38212ecda9fcdfb6354eadf99d3e26eb"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1869, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}