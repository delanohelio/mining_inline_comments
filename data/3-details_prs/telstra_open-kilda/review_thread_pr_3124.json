{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODExNTM5", "number": 3124, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwODoyMjoxMlrODZvtAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowMToyMFrODfImxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzIyNTYwOnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwODoyMjoxMlrOFgTohA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwODozNjo1OVrOFgT_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQyMDQyMA==", "bodyText": "Can we combine this condition and the condition above?", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r369420420", "createdAt": "2020-01-22T08:22:12Z", "author": {"login": "dpoltavets"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "diffHunk": "@@ -287,28 +287,61 @@ public SwitchPropertiesDto updateSwitchProperties(SwitchId switchId, SwitchPrope\n             SwitchProperties switchProperties = switchPropertiesRepository.findBySwitchId(switchId)\n                     .orElseThrow(() -> new SwitchPropertiesNotFoundException(switchId));\n \n-            if (!update.isMultiTable() && update.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n-            }\n+            validateSwitchProperties(switchId, update);\n \n-            final boolean previousMultiTableFlag = switchProperties.isMultiTable();\n-            final boolean previousLldpFlag = switchProperties.isSwitchLldp();\n+            // must be called before updating of switchProperties object\n+            final boolean isSwitchSyncNeeded = isSwitchSyncNeeded(switchProperties, update);\n \n             switchProperties.setMultiTable(update.isMultiTable());\n             switchProperties.setSwitchLldp(update.isSwitchLldp());\n+            switchProperties.setSwitchArp(update.isSwitchArp());\n             switchProperties.setSupportedTransitEncapsulation(update.getSupportedTransitEncapsulation());\n \n             switchPropertiesRepository.createOrUpdate(switchProperties);\n-            if (previousMultiTableFlag != update.isMultiTable() || previousLldpFlag != update.isSwitchLldp()) {\n+            if (isSwitchSyncNeeded) {\n                 carrier.requestSwitchSync(switchId);\n             }\n \n             return SwitchPropertiesMapper.INSTANCE.map(switchProperties);\n         });\n     }\n \n+    private boolean isSwitchSyncNeeded(SwitchProperties current, SwitchProperties updated) {\n+        return current.isMultiTable() != updated.isMultiTable()\n+                || current.isSwitchLldp() != updated.isSwitchLldp()\n+                || current.isSwitchArp() != updated.isSwitchArp();\n+    }\n+\n+    private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n+        if (!updatedSwitchProperties.isMultiTable()) {\n+            if (updatedSwitchProperties.isSwitchLldp()) {\n+                throw new IllegalSwitchPropertiesException(\n+                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n+                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n+            }\n+\n+            if (updatedSwitchProperties.isSwitchArp()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef2f66cb3938d05be196284bca9e22a7e53cc8c8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQyNjI3NQ==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r369426275", "createdAt": "2020-01-22T08:36:59Z", "author": {"login": "niksv"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "diffHunk": "@@ -287,28 +287,61 @@ public SwitchPropertiesDto updateSwitchProperties(SwitchId switchId, SwitchPrope\n             SwitchProperties switchProperties = switchPropertiesRepository.findBySwitchId(switchId)\n                     .orElseThrow(() -> new SwitchPropertiesNotFoundException(switchId));\n \n-            if (!update.isMultiTable() && update.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n-            }\n+            validateSwitchProperties(switchId, update);\n \n-            final boolean previousMultiTableFlag = switchProperties.isMultiTable();\n-            final boolean previousLldpFlag = switchProperties.isSwitchLldp();\n+            // must be called before updating of switchProperties object\n+            final boolean isSwitchSyncNeeded = isSwitchSyncNeeded(switchProperties, update);\n \n             switchProperties.setMultiTable(update.isMultiTable());\n             switchProperties.setSwitchLldp(update.isSwitchLldp());\n+            switchProperties.setSwitchArp(update.isSwitchArp());\n             switchProperties.setSupportedTransitEncapsulation(update.getSupportedTransitEncapsulation());\n \n             switchPropertiesRepository.createOrUpdate(switchProperties);\n-            if (previousMultiTableFlag != update.isMultiTable() || previousLldpFlag != update.isSwitchLldp()) {\n+            if (isSwitchSyncNeeded) {\n                 carrier.requestSwitchSync(switchId);\n             }\n \n             return SwitchPropertiesMapper.INSTANCE.map(switchProperties);\n         });\n     }\n \n+    private boolean isSwitchSyncNeeded(SwitchProperties current, SwitchProperties updated) {\n+        return current.isMultiTable() != updated.isMultiTable()\n+                || current.isSwitchLldp() != updated.isSwitchLldp()\n+                || current.isSwitchArp() != updated.isSwitchArp();\n+    }\n+\n+    private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n+        if (!updatedSwitchProperties.isMultiTable()) {\n+            if (updatedSwitchProperties.isSwitchLldp()) {\n+                throw new IllegalSwitchPropertiesException(\n+                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n+                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n+            }\n+\n+            if (updatedSwitchProperties.isSwitchArp()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQyMDQyMA=="}, "originalCommit": {"oid": "ef2f66cb3938d05be196284bca9e22a7e53cc8c8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTczNDQ3OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowMToyMFrOFoqUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxNzoxOFrOFoqykA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MDcwMA==", "bodyText": "witch -> which or with", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r378180700", "createdAt": "2020-02-12T11:01:20Z", "author": {"login": "rozdy"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "diffHunk": "@@ -288,28 +288,59 @@ public SwitchPropertiesDto updateSwitchProperties(SwitchId switchId, SwitchPrope\n             SwitchProperties switchProperties = switchPropertiesRepository.findBySwitchId(switchId)\n                     .orElseThrow(() -> new SwitchPropertiesNotFoundException(switchId));\n \n-            if (!update.isMultiTable() && update.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n-            }\n+            validateSwitchProperties(switchId, update);\n \n-            final boolean previousMultiTableFlag = switchProperties.isMultiTable();\n-            final boolean previousLldpFlag = switchProperties.isSwitchLldp();\n+            // must be called before updating of switchProperties object\n+            final boolean isSwitchSyncNeeded = isSwitchSyncNeeded(switchProperties, update);\n \n             switchProperties.setMultiTable(update.isMultiTable());\n             switchProperties.setSwitchLldp(update.isSwitchLldp());\n+            switchProperties.setSwitchArp(update.isSwitchArp());\n             switchProperties.setSupportedTransitEncapsulation(update.getSupportedTransitEncapsulation());\n \n             switchPropertiesRepository.createOrUpdate(switchProperties);\n-            if (previousMultiTableFlag != update.isMultiTable() || previousLldpFlag != update.isSwitchLldp()) {\n+            if (isSwitchSyncNeeded) {\n                 carrier.requestSwitchSync(switchId);\n             }\n \n             return SwitchPropertiesMapper.INSTANCE.map(switchProperties);\n         });\n     }\n \n+    private boolean isSwitchSyncNeeded(SwitchProperties current, SwitchProperties updated) {\n+        return current.isMultiTable() != updated.isMultiTable()\n+                || current.isSwitchLldp() != updated.isSwitchLldp()\n+                || current.isSwitchArp() != updated.isSwitchArp();\n+    }\n+\n+    private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n+        if (!updatedSwitchProperties.isMultiTable()) {\n+            String propertyErrorMessage = \"Illegal switch properties combination for switch %s. '%s' property \"\n+                    + \"can be set to 'true' only if 'multiTable' property is 'true'.\";\n+            if (updatedSwitchProperties.isSwitchLldp()) {\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchLldp\"));\n+            }\n+\n+            if (updatedSwitchProperties.isSwitchArp()) {\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchArp\"));\n+            }\n+\n+            List<String> flowsWitchEnabledArp = flowRepository.findByEndpointSwitchWithEnabledArp(switchId).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7fb59989250e1fe5daf8cc5ad305312c2a641e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4ODQzMg==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r378188432", "createdAt": "2020-02-12T11:17:18Z", "author": {"login": "niksv"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "diffHunk": "@@ -288,28 +288,59 @@ public SwitchPropertiesDto updateSwitchProperties(SwitchId switchId, SwitchPrope\n             SwitchProperties switchProperties = switchPropertiesRepository.findBySwitchId(switchId)\n                     .orElseThrow(() -> new SwitchPropertiesNotFoundException(switchId));\n \n-            if (!update.isMultiTable() && update.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n-            }\n+            validateSwitchProperties(switchId, update);\n \n-            final boolean previousMultiTableFlag = switchProperties.isMultiTable();\n-            final boolean previousLldpFlag = switchProperties.isSwitchLldp();\n+            // must be called before updating of switchProperties object\n+            final boolean isSwitchSyncNeeded = isSwitchSyncNeeded(switchProperties, update);\n \n             switchProperties.setMultiTable(update.isMultiTable());\n             switchProperties.setSwitchLldp(update.isSwitchLldp());\n+            switchProperties.setSwitchArp(update.isSwitchArp());\n             switchProperties.setSupportedTransitEncapsulation(update.getSupportedTransitEncapsulation());\n \n             switchPropertiesRepository.createOrUpdate(switchProperties);\n-            if (previousMultiTableFlag != update.isMultiTable() || previousLldpFlag != update.isSwitchLldp()) {\n+            if (isSwitchSyncNeeded) {\n                 carrier.requestSwitchSync(switchId);\n             }\n \n             return SwitchPropertiesMapper.INSTANCE.map(switchProperties);\n         });\n     }\n \n+    private boolean isSwitchSyncNeeded(SwitchProperties current, SwitchProperties updated) {\n+        return current.isMultiTable() != updated.isMultiTable()\n+                || current.isSwitchLldp() != updated.isSwitchLldp()\n+                || current.isSwitchArp() != updated.isSwitchArp();\n+    }\n+\n+    private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n+        if (!updatedSwitchProperties.isMultiTable()) {\n+            String propertyErrorMessage = \"Illegal switch properties combination for switch %s. '%s' property \"\n+                    + \"can be set to 'true' only if 'multiTable' property is 'true'.\";\n+            if (updatedSwitchProperties.isSwitchLldp()) {\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchLldp\"));\n+            }\n+\n+            if (updatedSwitchProperties.isSwitchArp()) {\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchArp\"));\n+            }\n+\n+            List<String> flowsWitchEnabledArp = flowRepository.findByEndpointSwitchWithEnabledArp(switchId).stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MDcwMA=="}, "originalCommit": {"oid": "4f7fb59989250e1fe5daf8cc5ad305312c2a641e"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2064, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}