{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MTI0ODQx", "number": 3888, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NzoyMlrOFB2K4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwMDoxODoxN1rOFU_Zlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDgwNDE3OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/bolts/FlowCreateHubBolt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NzoyMlrOIAtL0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NzoyMlrOIAtL0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxMTIxNw==", "bodyText": "incorrect. should be {} instead of %s", "url": "https://github.com/telstra/open-kilda/pull/3888#discussion_r537611217", "createdAt": "2020-12-07T15:47:22Z", "author": {"login": "niksv"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/bolts/FlowCreateHubBolt.java", "diffHunk": "@@ -87,6 +94,22 @@ protected void init() {\n                 config.getPathAllocationRetryDelay(), config.getSpeakerCommandRetriesLimit());\n     }\n \n+    @Override\n+    protected void handleLifeCycleEvent(LifecycleEvent event) {\n+        if (event.getSignal().equals(Signal.SHUTDOWN)) {\n+            if (service.deactivate()) {\n+                emit(ZkStreams.ZK.toString(), getCurrentTuple(), new Values(event, getCommandContext()));\n+            } else {\n+                deferedShutdownEvent = event;\n+            }\n+        } else if (event.getSignal().equals(Signal.START)) {\n+            service.activate();\n+            emit(ZkStreams.ZK.toString(), getCurrentTuple(), new Values(event, getCommandContext()));\n+        } else {\n+            log.info(\"Received signal info %s\", event.getSignal());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c532365c227dee18c8154fe92927d0c19bfb76d"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3NTU0NTgzOnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/FlowHsTopology.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwMDoxODoxN1rOIdN-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwMDoxODoxN1rOIdN-pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzUwODY0NA==", "bodyText": "Why not move this logic up to the abstract topology?", "url": "https://github.com/telstra/open-kilda/pull/3888#discussion_r567508644", "createdAt": "2021-02-01T00:18:17Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/FlowHsTopology.java", "diffHunk": "@@ -105,17 +108,41 @@ public StormTopology createTopology() {\n \n         history(tb, persistenceManager);\n \n+        zkSpout(tb);\n+        zkBolt(tb);\n+\n         return tb.createTopology();\n     }\n \n+    private void zkSpout(TopologyBuilder topologyBuilder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77fd5014fa6d34e8c16c5ee24e75b21a51ae44c4"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2335, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}