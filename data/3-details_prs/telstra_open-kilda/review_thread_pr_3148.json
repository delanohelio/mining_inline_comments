{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTgwNjIy", "number": 3148, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjowNDo1NlrODbHAsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjoxOTo0OVrODbHIVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzUzMDExOnYy", "diffSide": "RIGHT", "path": "services/src/messaging/src/main/java/org/openkilda/messaging/model/BidirectionalFlowDto.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjowNDo1NlrOFiaCoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjowNDo1NlrOFiaCoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMjU2MQ==", "bodyText": "(nit)  Boolean.TRUE.equals(forward.getPeriodicPings())", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371622561", "createdAt": "2020-01-28T06:04:56Z", "author": {"login": "niksv"}, "path": "services/src/messaging/src/main/java/org/openkilda/messaging/model/BidirectionalFlowDto.java", "diffHunk": "@@ -70,7 +70,7 @@ public BidirectionalFlowDto(FlowDto forward, FlowDto reverse) {\n         this(forward.getFlowId(),\n                 forward.getBandwidth(),\n                 forward.isIgnoreBandwidth(),\n-                forward.isPeriodicPings(),\n+                forward.getPeriodicPings() != null ? forward.getPeriodicPings() : false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzUzMDU3OnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/share/mappers/FlowMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjowNToyOVrOFiaDBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjowNToyOVrOFiaDBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMjY2MA==", "bodyText": "same", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371622660", "createdAt": "2020-01-28T06:05:29Z", "author": {"login": "niksv"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/share/mappers/FlowMapper.java", "diffHunk": "@@ -282,7 +282,7 @@ private Flow buildFlow(FlowDto flow, Supplier<KildaConfiguration> kildaConfigura\n                 .description(flow.getDescription())\n                 .bandwidth(flow.getBandwidth())\n                 .ignoreBandwidth(flow.isIgnoreBandwidth())\n-                .periodicPings(flow.isPeriodicPings())\n+                .periodicPings(flow.getPeriodicPings() != null ? flow.getPeriodicPings() : false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzU0Mzg2OnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flow/bolts/CrudBolt.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjoxNToxOVrOFiaKxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjozNzoxMlrOFiacIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyNDY0Nw==", "bodyText": "should it be StreamType.PING.toString() instead of stream.toString() ?", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371624647", "createdAt": "2020-01-28T06:15:19Z", "author": {"login": "niksv"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flow/bolts/CrudBolt.java", "diffHunk": "@@ -795,5 +802,14 @@ public void sendFlowCommands(@NonNull String flowId, @NonNull List<CommandGroup>\n                     System.currentTimeMillis(), correlationId);\n             outputCollector.emit(stream.toString(), tuple, new Values(message, flowId));\n         }\n+\n+        @Override\n+        public void sendPeriodicPingNotification(@NonNull String flowId, boolean enabled) {\n+            CommandMessage message = new CommandMessage(\n+                    new PeriodicPingCommand(flowId, enabled),\n+                    System.currentTimeMillis(), correlationId);\n+\n+            outputCollector.emit(stream.toString(), tuple, new Values(correlationId, message));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyOTA5MA==", "bodyText": "No, it should be fine, p.s. this aligned with sendFlowCommands", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371629090", "createdAt": "2020-01-28T06:37:12Z", "author": {"login": "timofei-durakov"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flow/bolts/CrudBolt.java", "diffHunk": "@@ -795,5 +802,14 @@ public void sendFlowCommands(@NonNull String flowId, @NonNull List<CommandGroup>\n                     System.currentTimeMillis(), correlationId);\n             outputCollector.emit(stream.toString(), tuple, new Values(message, flowId));\n         }\n+\n+        @Override\n+        public void sendPeriodicPingNotification(@NonNull String flowId, boolean enabled) {\n+            CommandMessage message = new CommandMessage(\n+                    new PeriodicPingCommand(flowId, enabled),\n+                    System.currentTimeMillis(), correlationId);\n+\n+            outputCollector.emit(stream.toString(), tuple, new Values(correlationId, message));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyNDY0Nw=="}, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzU0ODEyOnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flow/service/FlowService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjoxODoyOVrOFiaNPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjozODowNlrOFiadvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyNTI3Nw==", "bodyText": "what if there is no such flow?", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371625277", "createdAt": "2020-01-28T06:18:29Z", "author": {"login": "niksv"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flow/service/FlowService.java", "diffHunk": "@@ -1539,6 +1539,17 @@ private void unwrapBaseFaisafeException(FailsafeException e) throws UnroutableFl\n         return swapFlows(currentFirstFlow, existingFirstFlow, currentSecondFlow, existingSecondFlow, sender);\n     }\n \n+    /**\n+     * Fetch flow and provide update on it's periodic pings.\n+     * @param flowId flow id\n+     * @param sender interface\n+     */\n+    public void notifyOnPeriodicPingChanges(String flowId,\n+                                            FlowCommandSender sender) {\n+        Flow flow = flowRepository.findById(flowId).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyOTUwMA==", "bodyText": "it will be cleaned up by periodic pings cache flush in ping topo with a one minute delay", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371629500", "createdAt": "2020-01-28T06:38:06Z", "author": {"login": "timofei-durakov"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flow/service/FlowService.java", "diffHunk": "@@ -1539,6 +1539,17 @@ private void unwrapBaseFaisafeException(FailsafeException e) throws UnroutableFl\n         return swapFlows(currentFirstFlow, existingFirstFlow, currentSecondFlow, existingSecondFlow, sender);\n     }\n \n+    /**\n+     * Fetch flow and provide update on it's periodic pings.\n+     * @param flowId flow id\n+     * @param sender interface\n+     */\n+    public void notifyOnPeriodicPingChanges(String flowId,\n+                                            FlowCommandSender sender) {\n+        Flow flow = flowRepository.findById(flowId).get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyNTI3Nw=="}, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzU0OTY3OnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/update/actions/OnFinishedAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjoxOTo0OVrOFiaOOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjoxOTo0OVrOFiaOOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyNTUyOQ==", "bodyText": "(nit) two spaces :)", "url": "https://github.com/telstra/open-kilda/pull/3148#discussion_r371625529", "createdAt": "2020-01-28T06:19:49Z", "author": {"login": "niksv"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/update/actions/OnFinishedAction.java", "diffHunk": "@@ -38,8 +39,12 @@ public OnFinishedAction(FlowOperationsDashboardLogger dashboardLogger) {\n     @Override\n     public void perform(State from, State to, Event event, FlowUpdateContext context, FlowUpdateFsm stateMachine) {\n         if (stateMachine.getNewFlowStatus() == FlowStatus.UP) {\n+            RequestedFlow requestedFlow =  stateMachine.getTargetFlow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71468d88ecf93480409e5c48115d1484fd81a409"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}