{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5OTU1OTU1", "number": 3423, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODo0Njo1MVrOD3Fxvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODo0Njo1MVrOD3Fxvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MDkyOTI2OnYy", "diffSide": "RIGHT", "path": "src-java/kilda-model/src/main/java/org/openkilda/model/ServiceCookie.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODo0Njo1MVrOGNJgRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODo1Njo1M1rOGNJ56w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0MDM5MA==", "bodyText": "I don't like idea having Safe method here, why not to change existing one?", "url": "https://github.com/telstra/open-kilda/pull/3423#discussion_r416440390", "createdAt": "2020-04-28T08:46:51Z", "author": {"login": "timofei-durakov"}, "path": "src-java/kilda-model/src/main/java/org/openkilda/model/ServiceCookie.java", "diffHunk": "@@ -63,7 +65,18 @@ public void validate() throws InvalidCookieException {\n \n     // TODO - replace existing meter-id generation approach\n     public MeterId getMeterId() {\n-        return new MeterId(getServiceTag().getValue());\n+        return new MeterId(getField(SERVICE_TAG_FIELD));\n+    }\n+\n+    /**\n+     * Extract and return \"service tag\" field is save way (return empty {@link Optional} object if tag is invalid).\n+     */\n+    public Optional<ServiceCookieTag> getServiceTagSafe() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bc619d65e7ed4678ca0933815d1f2866d463f83"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0Njk1NQ==", "bodyText": "It can be done only if we don't want simple/raw access.", "url": "https://github.com/telstra/open-kilda/pull/3423#discussion_r416446955", "createdAt": "2020-04-28T08:56:53Z", "author": {"login": "surabujin"}, "path": "src-java/kilda-model/src/main/java/org/openkilda/model/ServiceCookie.java", "diffHunk": "@@ -63,7 +65,18 @@ public void validate() throws InvalidCookieException {\n \n     // TODO - replace existing meter-id generation approach\n     public MeterId getMeterId() {\n-        return new MeterId(getServiceTag().getValue());\n+        return new MeterId(getField(SERVICE_TAG_FIELD));\n+    }\n+\n+    /**\n+     * Extract and return \"service tag\" field is save way (return empty {@link Optional} object if tag is invalid).\n+     */\n+    public Optional<ServiceCookieTag> getServiceTagSafe() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0MDM5MA=="}, "originalCommit": {"oid": "8bc619d65e7ed4678ca0933815d1f2866d463f83"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1948, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}