{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzM2NzA3", "number": 3268, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzo1MTo1NVrODoOGOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo1NzoxM1rOD1ybJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTAwNjAwOnYy", "diffSide": "LEFT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzo1MTo1NVrOF2ozGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTowNTozNlrOGF0toQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgzNTg2Ng==", "bodyText": "write unit tests for that", "url": "https://github.com/telstra/open-kilda/pull/3268#discussion_r392835866", "createdAt": "2020-03-16T07:51:55Z", "author": {"login": "timofei-durakov"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -126,9 +130,18 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n             throw new IslNotFoundException(sourceSwitch, sourcePort, destinationSwitch, destinationPort);\n         }\n \n-        if (isls.stream().anyMatch(x -> x.getStatus() == IslStatus.ACTIVE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2149d77722119d2fc92c12b90fd3634f35e0edd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1OTcxMw==", "bodyText": "Tests have been added.", "url": "https://github.com/telstra/open-kilda/pull/3268#discussion_r408759713", "createdAt": "2020-04-15T11:05:36Z", "author": {"login": "dpoltavets"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -126,9 +130,18 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n             throw new IslNotFoundException(sourceSwitch, sourcePort, destinationSwitch, destinationPort);\n         }\n \n-        if (isls.stream().anyMatch(x -> x.getStatus() == IslStatus.ACTIVE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgzNTg2Ng=="}, "originalCommit": {"oid": "b2149d77722119d2fc92c12b90fd3634f35e0edd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzI3MjY5OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo1NzoxM1rOGLY9fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo1NzoxM1rOGLY9fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5NjQ3OQ==", "bodyText": "nit: I'd implement new method to fetch ids, instead of full objects", "url": "https://github.com/telstra/open-kilda/pull/3268#discussion_r414596479", "createdAt": "2020-04-24T13:57:13Z", "author": {"login": "timofei-durakov"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -126,9 +130,18 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n             throw new IslNotFoundException(sourceSwitch, sourcePort, destinationSwitch, destinationPort);\n         }\n \n-        if (isls.stream().anyMatch(x -> x.getStatus() == IslStatus.ACTIVE)) {\n-            throw new IllegalIslStateException(sourceSwitch, sourcePort, destinationSwitch, destinationPort,\n-                    \"ISL must NOT be in active state.\");\n+        if (!force) {\n+            if (isls.stream().anyMatch(x -> x.getStatus() == IslStatus.ACTIVE)) {\n+                throw new IllegalIslStateException(sourceSwitch, sourcePort, destinationSwitch, destinationPort,\n+                        \"ISL must NOT be in active state.\");\n+            }\n+\n+            Collection<FlowPath> flowPaths = flowPathRepository.findWithPathSegment(sourceSwitch, sourcePort,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73c62fec015334558cef0df19bb6d0bf59c1d29"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1999, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}