{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Mzg0NTcx", "number": 3958, "title": "Delicate network topology activate deactivate", "bodyText": "", "createdAt": "2020-12-29T08:26:51Z", "url": "https://github.com/telstra/open-kilda/pull/3958", "merged": true, "mergeCommit": {"oid": "02a8af61bd72dcbfca2d700ca174e9f5220a921f"}, "closed": true, "closedAt": "2021-03-24T09:13:53Z", "author": {"login": "surabujin"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdq2yBfAFqTU1OTQzNDI0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeGA4r5gFqTYxODkwMzU0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDM0MjQ4", "url": "https://github.com/telstra/open-kilda/pull/3958#pullrequestreview-559434248", "createdAt": "2020-12-29T08:51:34Z", "commit": {"oid": "b629c639b944598844c1e54dcf6b8c268101b785"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b629c639b944598844c1e54dcf6b8c268101b785", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/b629c639b944598844c1e54dcf6b8c268101b785", "committedDate": "2020-12-29T08:22:28Z", "message": "Delicate network topology activate deactivate"}, "afterCommit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/67ab5c38331847a6163996cccb22faea73f9e740", "committedDate": "2021-03-12T17:56:51Z", "message": "Delicate network topology activate deactivate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE1MDczNzcy", "url": "https://github.com/telstra/open-kilda/pull/3958#pullrequestreview-615073772", "createdAt": "2021-03-18T08:06:08Z", "commit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xOFQwODowNjowOFrOI4_WSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xOFQwOTowNTozN1rOI5Bv1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjYyOTA2Nw==", "bodyText": "this is not required actually", "url": "https://github.com/telstra/open-kilda/pull/3958#discussion_r596629067", "createdAt": "2021-03-18T08:06:08Z", "author": {"login": "timofei-durakov"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "diffHunk": "@@ -66,6 +66,7 @@\n     private String lifeCycleEventSourceComponent;\n \n     public AbstractBolt() {\n+        this(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjYyOTM0Mg==", "bodyText": "why do you remove transient here? p.s. default false is not required as well", "url": "https://github.com/telstra/open-kilda/pull/3958#discussion_r596629342", "createdAt": "2021-03-18T08:06:36Z", "author": {"login": "timofei-durakov"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "diffHunk": "@@ -45,7 +45,7 @@\n \n     protected transient Logger log = makeLog();\n \n-    protected transient boolean active;\n+    protected boolean active = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjY2ODE2OA==", "bodyText": "extra spaces?", "url": "https://github.com/telstra/open-kilda/pull/3958#discussion_r596668168", "createdAt": "2021-03-18T09:05:21Z", "author": {"login": "timofei-durakov"}, "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/speaker/SpeakerRouter.java", "diffHunk": "@@ -125,34 +127,23 @@ private void speakerMessage(Tuple input, Message message) throws PipelineExcepti\n     private void proxySpeaker(Tuple input, Message message) throws PipelineException {\n         if (active) {\n             if (message instanceof InfoMessage) {\n-                proxySpeaker(input, ((InfoMessage) message).getData());\n+                proxy(input, ((InfoMessage) message).getData());\n             } else {\n                 log.error(\"Do not proxy speaker message - unexpected message type \\\"{}\\\"\", message.getClass());\n             }\n         }\n     }\n \n-    private void proxySpeaker(Tuple input, InfoData payload) throws PipelineException {\n-        if (payload instanceof IslInfoData) {\n-            emit(STREAM_WATCHER_ID, input, makeWatcherTuple(\n-                    input, new WatcherSpeakerDiscoveryCommand((IslInfoData) payload)));\n-        } else if (payload instanceof DiscoPacketSendingConfirmation) {\n-            emit(STREAM_WATCHER_ID, input, makeWatcherTuple(\n-                    input, new WatcherSpeakerSendConfirmationCommand((DiscoPacketSendingConfirmation) payload)));\n-        } else if (payload instanceof IslRoundTripLatency) {\n-            emit(STREAM_WATCHER_ID, input, makeWatcherTuple(\n-                    input, new WatcherSpeakerRoundTripDiscovery((IslRoundTripLatency) payload)));\n-        } else if (payload instanceof SwitchInfoData) {\n-            emit(input, makeDefaultTuple(input, new SwitchEventCommand((SwitchInfoData) payload)));\n-        } else if (payload instanceof PortInfoData) {\n-            emit(input, makeDefaultTuple(input, new SwitchPortEventCommand((PortInfoData) payload)));\n-        } else if (payload instanceof NetworkDumpSwitchData) {\n-            emit(input, makeDefaultTuple(\n-                    input, new SwitchManagedEventCommand(((NetworkDumpSwitchData) payload).getSwitchView())));\n-        } else if (payload instanceof UnmanagedSwitchNotification) {\n-            emit(input, makeDefaultTuple(\n-                    input, new SwitchUnmanagedEventCommand(((UnmanagedSwitchNotification) payload).getSwitchId())));\n-        } else if (payload instanceof DeactivateSwitchInfoData) {\n+    private void proxy(Tuple input, InfoData payload) throws PipelineException {\n+        if (! proxyUnconditionally(input, payload)) {\n+            if (! proxyOnlyWhenActive(input, payload)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjY2ODM3Mw==", "bodyText": "and here", "url": "https://github.com/telstra/open-kilda/pull/3958#discussion_r596668373", "createdAt": "2021-03-18T09:05:37Z", "author": {"login": "timofei-durakov"}, "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/speaker/SpeakerRouter.java", "diffHunk": "@@ -172,8 +163,54 @@ private void proxySpeaker(Tuple input, InfoData payload) throws PipelineExceptio\n         } else if (payload instanceof DeactivateIslInfoData) {\n             emit(STREAM_ISL_ID, input, makeIslTuple(input, new IslDeleteCommand((DeactivateIslInfoData) payload)));\n         } else {\n-            log.error(\"Do not proxy speaker message - unexpected message payload \\\"{}\\\"\", payload.getClass());\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    private boolean proxyOnlyWhenActive(Tuple input, InfoData payload) throws PipelineException {\n+        if (! active) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f6afdfd66d376e858452d01a88db981e68bb79", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/48f6afdfd66d376e858452d01a88db981e68bb79", "committedDate": "2021-03-18T09:53:19Z", "message": "Delicate network topology activate deactivate"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67ab5c38331847a6163996cccb22faea73f9e740", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/67ab5c38331847a6163996cccb22faea73f9e740", "committedDate": "2021-03-12T17:56:51Z", "message": "Delicate network topology activate deactivate"}, "afterCommit": {"oid": "48f6afdfd66d376e858452d01a88db981e68bb79", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/48f6afdfd66d376e858452d01a88db981e68bb79", "committedDate": "2021-03-18T09:53:19Z", "message": "Delicate network topology activate deactivate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE4OTAzNTQw", "url": "https://github.com/telstra/open-kilda/pull/3958#pullrequestreview-618903540", "createdAt": "2021-03-23T17:53:51Z", "commit": {"oid": "48f6afdfd66d376e858452d01a88db981e68bb79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3740, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}