{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NzkzNTY2", "number": 3664, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozOTowM1rOEUFQAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozOTowM1rOEUFQAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDkyOTk0OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozOTowM1rOG6K-Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTowNzozNVrOG69UWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY1MDM4Nw==", "bodyText": "HashSet ... is unordered, how do you propose to define \"the last one\"?", "url": "https://github.com/telstra/open-kilda/pull/3664#discussion_r463650387", "createdAt": "2020-07-31T14:39:03Z", "author": {"login": "surabujin"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -198,8 +198,10 @@ public Flow getFlow(String flowId) throws FlowNotFoundException {\n             flows.addAll(flowRepository.findByEndpointSwitch(switchId));\n         }\n         // need to return Flows unique by id\n+        // Due to possible race condition we can have one flow with different flow paths\n+        // In this case we should get the last one", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3bc6679acd600d52eb5554d97d95878d890284"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3NTIyNQ==", "bodyText": "Reworked code to remove intermediate set at all.", "url": "https://github.com/telstra/open-kilda/pull/3664#discussion_r464475225", "createdAt": "2020-08-03T15:07:35Z", "author": {"login": "rozdy"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -198,8 +198,10 @@ public Flow getFlow(String flowId) throws FlowNotFoundException {\n             flows.addAll(flowRepository.findByEndpointSwitch(switchId));\n         }\n         // need to return Flows unique by id\n+        // Due to possible race condition we can have one flow with different flow paths\n+        // In this case we should get the last one", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY1MDM4Nw=="}, "originalCommit": {"oid": "dc3bc6679acd600d52eb5554d97d95878d890284"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1788, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}