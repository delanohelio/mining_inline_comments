{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDEyMjUw", "number": 3259, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1NTo1OVrODlBAOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1Njo1MlrODlBBWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTQwMzQ1OnYy", "diffSide": "RIGHT", "path": "src-java/kilda-pce/src/main/java/org/openkilda/pce/finder/BestWeightAndShortestPathFinder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1NTo1OVrOFxqa1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1NTo1OVrOFxqa1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxOTU0MA==", "bodyText": "nit: why new Linked List? Maybe use empty list instead?", "url": "https://github.com/telstra/open-kilda/pull/3259#discussion_r387619540", "createdAt": "2020-03-04T11:55:59Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-pce/src/main/java/org/openkilda/pce/finder/BestWeightAndShortestPathFinder.java", "diffHunk": "@@ -307,15 +307,15 @@ private void restoreEdge(Edge edge) {\n \n     private List<Edge> getPath(Node start, Node end, WeightFunction weightFunction, long maxWeight) {\n         SearchNode desiredPath = getDesiredPath(start, end, weightFunction, maxWeight);\n+        List<Edge> foundPath = (desiredPath != null) ? desiredPath.getParentPath() : new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f6ca7ef9c1304cd71dbeccec43f35b1cb7790b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTQwNjMyOnYy", "diffSide": "RIGHT", "path": "src-java/kilda-pce/src/test/java/org/openkilda/pce/finder/BestWeightAndShortestPathFinderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1Njo1MlrOFxqceQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMjowNTowNlrOFxqqHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxOTk2MQ==", "bodyText": "nit: Throw -> Through ?", "url": "https://github.com/telstra/open-kilda/pull/3259#discussion_r387619961", "createdAt": "2020-03-04T11:56:52Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-pce/src/test/java/org/openkilda/pce/finder/BestWeightAndShortestPathFinderTest.java", "diffHunk": "@@ -479,6 +479,27 @@ public void testForwardAndBackwardPathsEqualityEvenWhenReverseHasCheaperPath()\n         assertEquals(forwardSwitchPath, backwardSwitchPath);\n     }\n \n+    @Test\n+    public void shouldCreatePathThrowMoreExpensiveWayMaxLatencyStrategy() throws  UnroutableFlowException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f6ca7ef9c1304cd71dbeccec43f35b1cb7790b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYyMzQ1Mg==", "bodyText": "Yes, you are right.", "url": "https://github.com/telstra/open-kilda/pull/3259#discussion_r387623452", "createdAt": "2020-03-04T12:05:06Z", "author": {"login": "dpoltavets"}, "path": "src-java/kilda-pce/src/test/java/org/openkilda/pce/finder/BestWeightAndShortestPathFinderTest.java", "diffHunk": "@@ -479,6 +479,27 @@ public void testForwardAndBackwardPathsEqualityEvenWhenReverseHasCheaperPath()\n         assertEquals(forwardSwitchPath, backwardSwitchPath);\n     }\n \n+    @Test\n+    public void shouldCreatePathThrowMoreExpensiveWayMaxLatencyStrategy() throws  UnroutableFlowException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxOTk2MQ=="}, "originalCommit": {"oid": "b7f6ca7ef9c1304cd71dbeccec43f35b1cb7790b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1997, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}