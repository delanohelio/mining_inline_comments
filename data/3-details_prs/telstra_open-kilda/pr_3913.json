{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NzY4NTIz", "number": 3913, "title": "Moved ZkClient initialization out of constructor", "bodyText": "", "createdAt": "2020-12-11T10:15:00Z", "url": "https://github.com/telstra/open-kilda/pull/3913", "merged": true, "mergeCommit": {"oid": "48b1d910091cfa0e84d01835716cca04ba480312"}, "closed": true, "closedAt": "2020-12-14T09:26:47Z", "author": {"login": "niksv"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlFUDsAFqTU0OTk3MzQzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlMgciAFqTU1MDQxNTc4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTczNDM2", "url": "https://github.com/telstra/open-kilda/pull/3913#pullrequestreview-549973436", "createdAt": "2020-12-11T10:23:52Z", "commit": {"oid": "a5b097067a78bb5a815ab49ee23ada6e40e57db2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTc1NTEz", "url": "https://github.com/telstra/open-kilda/pull/3913#pullrequestreview-549975513", "createdAt": "2020-12-11T10:26:48Z", "commit": {"oid": "a5b097067a78bb5a815ab49ee23ada6e40e57db2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5b097067a78bb5a815ab49ee23ada6e40e57db2", "author": {"user": {"login": "niksv", "name": "Sergey Nikitin"}}, "url": "https://github.com/telstra/open-kilda/commit/a5b097067a78bb5a815ab49ee23ada6e40e57db2", "committedDate": "2020-12-11T10:11:34Z", "message": "Moved ZkClient initialization out of constructor"}, "afterCommit": {"oid": "a389df79c78793ab6a75d9e358038d2400e1ee9e", "author": {"user": {"login": "niksv", "name": "Sergey Nikitin"}}, "url": "https://github.com/telstra/open-kilda/commit/a389df79c78793ab6a75d9e358038d2400e1ee9e", "committedDate": "2020-12-11T11:15:53Z", "message": "Moved ZkClient initialization out of constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "author": {"user": {"login": "niksv", "name": "Sergey Nikitin"}}, "url": "https://github.com/telstra/open-kilda/commit/a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "committedDate": "2020-12-11T12:05:08Z", "message": "Moved ZkClient initialization out of constructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a389df79c78793ab6a75d9e358038d2400e1ee9e", "author": {"user": {"login": "niksv", "name": "Sergey Nikitin"}}, "url": "https://github.com/telstra/open-kilda/commit/a389df79c78793ab6a75d9e358038d2400e1ee9e", "committedDate": "2020-12-11T11:15:53Z", "message": "Moved ZkClient initialization out of constructor"}, "afterCommit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "author": {"user": {"login": "niksv", "name": "Sergey Nikitin"}}, "url": "https://github.com/telstra/open-kilda/commit/a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "committedDate": "2020-12-11T12:05:08Z", "message": "Moved ZkClient initialization out of constructor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNDE1Nzgz", "url": "https://github.com/telstra/open-kilda/pull/3913#pullrequestreview-550415783", "createdAt": "2020-12-11T18:19:36Z", "commit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODoxOTozN1rOIEEfcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0Mzo1M1rOIEFVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzODgwMw==", "bodyText": "Do you really need both init() and initZk()?", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541138803", "createdAt": "2020-12-11T18:19:37Z", "author": {"login": "surabujin"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/zk/ZooKeeperBolt.java", "diffHunk": "@@ -72,14 +69,10 @@ protected void init() {\n     }\n \n     private void initZk() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0ODIxNw==", "bodyText": "It must be the responsibility of ZkClient...", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541148217", "createdAt": "2020-12-11T18:35:53Z", "author": {"login": "surabujin"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWatchDog.java", "diffHunk": "@@ -61,38 +61,39 @@ public ZkWatchDog(String id, String serviceName, String connectionString,\n             signal = Signal.NONE;\n         }\n         this.signal = signal;\n-        initWatch();\n     }\n \n     @Override\n-    void validateNodes() throws KeeperException, InterruptedException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         super.validateNodes();\n         ensureZNode(serviceName, id, SIGNAL);\n         ensureZNode(DEFAULT_BUILD_VERSION.getBytes(), serviceName, id, BUILD_VERSION);\n+        nodesValidated = true;\n     }\n \n \n     @VisibleForTesting\n-    void subscribeSignal() throws KeeperException, InterruptedException {\n+    void subscribeSignal() {\n         checkData(signalPath);\n     }\n \n     @VisibleForTesting\n-    void subscribeBuildVersion() throws KeeperException, InterruptedException {\n+    void subscribeBuildVersion() {\n         checkData(buildVersionPath);\n     }\n \n-    private void checkData(String path) throws KeeperException, InterruptedException {\n+    private void checkData(String path) {\n         zookeeper.getData(path, this, this, null);\n     }\n \n     @Override\n-    void initWatch() {\n+    public void init() {\n         try {\n+            initZk();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0ODk5Mw==", "bodyText": "Terrible logic tangling between this class and it's parent. I can't propose anything to fix it right now... except removing this nodesValidated flag.", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541148993", "createdAt": "2020-12-11T18:37:15Z", "author": {"login": "surabujin"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWatchDog.java", "diffHunk": "@@ -61,38 +61,39 @@ public ZkWatchDog(String id, String serviceName, String connectionString,\n             signal = Signal.NONE;\n         }\n         this.signal = signal;\n-        initWatch();\n     }\n \n     @Override\n-    void validateNodes() throws KeeperException, InterruptedException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         super.validateNodes();\n         ensureZNode(serviceName, id, SIGNAL);\n         ensureZNode(DEFAULT_BUILD_VERSION.getBytes(), serviceName, id, BUILD_VERSION);\n+        nodesValidated = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTA0Mw==", "bodyText": "Why we have !nodesValidated here? Especially when ZcClient is not controlling this flag value?", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541151043", "createdAt": "2020-12-11T18:41:05Z", "author": {"login": "surabujin"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -93,12 +101,18 @@ protected void ensureZNode(byte[] value, String... path) throws KeeperException,\n         }\n     }\n \n-    void validateNodes() throws KeeperException, InterruptedException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         ensureZNode(serviceName);\n         ensureZNode(serviceName, id);\n     }\n \n+    /**\n+     * Checks that connection to zookeeper is alive and nodes were validated.\n+     */\n     public boolean isConnectionAlive() {\n+        if (zookeeper == null || !nodesValidated) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MjU4MA==", "bodyText": "validateNodes() will never be called, if initZk() on previous line raise exception.", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541152580", "createdAt": "2020-12-11T18:43:53Z", "author": {"login": "surabujin"}, "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWriter.java", "diffHunk": "@@ -51,11 +48,21 @@ public void setState(int active) {\n         }\n     }\n \n+    @Override\n+    public void init() {\n+        try {\n+            initZk();\n+            validateNodes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3726, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}