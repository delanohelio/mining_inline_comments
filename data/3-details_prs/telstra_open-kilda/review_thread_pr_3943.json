{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTQ2NjY5", "number": 3943, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoxNTozOFrOFIJ23g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoxNzoxMFrOFIJ5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDk0NDMwOnYy", "diffSide": "RIGHT", "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoxNTozOFrOIJ6zTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoyNDozMVrOIJ7Dwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI3MTUwMg==", "bodyText": "I would like to alter active value inside activate() / deactivate() methods, in this case successors can alter behaviour, if required.", "url": "https://github.com/telstra/open-kilda/pull/3943#discussion_r547271502", "createdAt": "2020-12-22T13:15:38Z", "author": {"login": "surabujin"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "diffHunk": "@@ -127,16 +127,30 @@ protected void dispatch(Tuple input) throws Exception {\n \n     protected void handleLifeCycleEvent(LifecycleEvent event) {\n         if (Signal.START.equals(event.getSignal())) {\n-            active = true;\n             emit(ZkStreams.ZK.toString(), currentTuple, new Values(event, commandContext));\n+            try {\n+                activate();\n+            } finally {\n+                active = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4552fc6cd1ad11bf7d773a3d8a1690b6d85e479c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI3NTcxNA==", "bodyText": "Good point, but there is no such case yet. For now, we want to always update this flag.", "url": "https://github.com/telstra/open-kilda/pull/3943#discussion_r547275714", "createdAt": "2020-12-22T13:24:31Z", "author": {"login": "dpoltavets"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "diffHunk": "@@ -127,16 +127,30 @@ protected void dispatch(Tuple input) throws Exception {\n \n     protected void handleLifeCycleEvent(LifecycleEvent event) {\n         if (Signal.START.equals(event.getSignal())) {\n-            active = true;\n             emit(ZkStreams.ZK.toString(), currentTuple, new Values(event, commandContext));\n+            try {\n+                activate();\n+            } finally {\n+                active = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI3MTUwMg=="}, "originalCommit": {"oid": "4552fc6cd1ad11bf7d773a3d8a1690b6d85e479c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDk1MDMxOnYy", "diffSide": "RIGHT", "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoxNzoxMFrOIJ62jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoyNDo0MVrOIJ7D_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI3MjMzNA==", "bodyText": "add commend \"no actions required\" or something similar. Now it looks like someone has forgotten to write the method body.", "url": "https://github.com/telstra/open-kilda/pull/3943#discussion_r547272334", "createdAt": "2020-12-22T13:17:10Z", "author": {"login": "surabujin"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "diffHunk": "@@ -127,16 +127,30 @@ protected void dispatch(Tuple input) throws Exception {\n \n     protected void handleLifeCycleEvent(LifecycleEvent event) {\n         if (Signal.START.equals(event.getSignal())) {\n-            active = true;\n             emit(ZkStreams.ZK.toString(), currentTuple, new Values(event, commandContext));\n+            try {\n+                activate();\n+            } finally {\n+                active = true;\n+            }\n         } else if (Signal.SHUTDOWN.equals(event.getSignal())) {\n-            active = false;\n             emit(ZkStreams.ZK.toString(), currentTuple, new Values(event, commandContext));\n+            try {\n+                deactivate();\n+            } finally {\n+                active = false;\n+            }\n         } else {\n             log.error(\"Unsupported signal received: {}\", event.getSignal());\n         }\n     }\n \n+    protected void activate() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4552fc6cd1ad11bf7d773a3d8a1690b6d85e479c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI3NTc3NQ==", "bodyText": "Added.", "url": "https://github.com/telstra/open-kilda/pull/3943#discussion_r547275775", "createdAt": "2020-12-22T13:24:41Z", "author": {"login": "dpoltavets"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/AbstractBolt.java", "diffHunk": "@@ -127,16 +127,30 @@ protected void dispatch(Tuple input) throws Exception {\n \n     protected void handleLifeCycleEvent(LifecycleEvent event) {\n         if (Signal.START.equals(event.getSignal())) {\n-            active = true;\n             emit(ZkStreams.ZK.toString(), currentTuple, new Values(event, commandContext));\n+            try {\n+                activate();\n+            } finally {\n+                active = true;\n+            }\n         } else if (Signal.SHUTDOWN.equals(event.getSignal())) {\n-            active = false;\n             emit(ZkStreams.ZK.toString(), currentTuple, new Values(event, commandContext));\n+            try {\n+                deactivate();\n+            } finally {\n+                active = false;\n+            }\n         } else {\n             log.error(\"Unsupported signal received: {}\", event.getSignal());\n         }\n     }\n \n+    protected void activate() {\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI3MjMzNA=="}, "originalCommit": {"oid": "4552fc6cd1ad11bf7d773a3d8a1690b6d85e479c"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2206, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}