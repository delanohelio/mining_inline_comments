{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzE4Mjk5", "number": 3689, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyMToxNlrOEZY88g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTozMjoyMFrOEZZNNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDU4Njc0OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyMToxNlrOHCLBVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyMToxNlrOHCLBVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzOTc2Ng==", "bodyText": "we should check that ISL is discovered\nif (otherIslFailed) {\n       antiflap.portUp(otherIsl.srcSwitch.dpId, otherIsl.srcPort)\n        Wrappers.wait(discoveryInterval + WAIT_OFFSET) {\n            assert northbound.getLink(otherIsl).actualState == IslChangeType.DISCOVERED\n        }\n}", "url": "https://github.com/telstra/open-kilda/pull/3689#discussion_r472039766", "createdAt": "2020-08-18T09:21:16Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -166,6 +190,7 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n         cleanup: \"Remove the flow\"\n         flowHelperV2.deleteFlow(flow.flowId)\n         isSwitchDisconnected && switchHelper.reviveSwitch(sw, blockData, true)\n+        otherIslFailed && antiflap.portUp(otherIsl.srcSwitch.dpId, otherIsl.srcPort)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7688afb3eb0d048108a395d143ccca5657811c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDYwODMyOnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyNzowNlrOHCLOzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyNzowNlrOHCLOzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0MzIxNA==", "bodyText": "as for me otherIsl is not clear\ndo you mind renaming it (for example to islToFail) ?", "url": "https://github.com/telstra/open-kilda/pull/3689#discussion_r472043214", "createdAt": "2020-08-18T09:27:06Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -151,6 +152,29 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n             assert flowInfo.statusInfo == \"Switch $sw.dpId is inactive\"\n         }\n \n+        when: \"Other isl fails\"\n+        def otherIslFailed = false\n+        def otherIsl = topology.isls.find() {isl-> isl.srcSwitch != sw && isl.dstSwitch != sw}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7688afb3eb0d048108a395d143ccca5657811c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDYyODM2OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTozMjoyMFrOHCLa_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTozMjoyMFrOHCLa_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NjMzNA==", "bodyText": "Why do you check the actualState field?\nprobably would be better to check the state field", "url": "https://github.com/telstra/open-kilda/pull/3689#discussion_r472046334", "createdAt": "2020-08-18T09:32:20Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -151,6 +152,29 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n             assert flowInfo.statusInfo == \"Switch $sw.dpId is inactive\"\n         }\n \n+        when: \"Other isl fails\"\n+        def otherIslFailed = false\n+        def otherIsl = topology.isls.find() {isl-> isl.srcSwitch != sw && isl.dstSwitch != sw}\n+        antiflap.portDown(otherIsl.srcSwitch.dpId, otherIsl.srcPort)\n+        otherIslFailed = true\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northbound.getLink(otherIsl).actualState == IslChangeType.FAILED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7688afb3eb0d048108a395d143ccca5657811c"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1808, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}