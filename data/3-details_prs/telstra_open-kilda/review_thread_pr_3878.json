{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NTYxMjM0", "number": 3878, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTozMlrOFAV_hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjo0MTo1NlrOFApnOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTA0NjQ0OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTozMlrOH-le9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTozMlrOH-le9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4Nzg5Mw==", "bodyText": "why null? why not empty list?", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535387893", "createdAt": "2020-12-03T16:31:32Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTA0NzEwOnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTo0MFrOH-lfYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTo0MFrOH-lfYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4ODAwMA==", "bodyText": "same", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535388000", "createdAt": "2020-12-03T16:31:40Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTA0NzY2OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTo0NlrOH-lfsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMTo0NlrOH-lfsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4ODA4Mw==", "bodyText": "why null? why not empty list?", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535388083", "createdAt": "2020-12-03T16:31:46Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTA1Mzc4OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMjo1OVrOH-ljUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxMjo1M1rOH-ny-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4OTAxMQ==", "bodyText": "As I see this method used as\napplyActions.add(makeOutputAction());\nWill we add null to the list?", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535389011", "createdAt": "2020-12-03T16:32:59Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected OFAction makeOutputAction() {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQwODMxMg==", "bodyText": "All these methods are used only to generate regular flow rules. This factory is designed to create loop rules and should not be used for regular flow rules. So it's doesn't matter null or empty lists are used here. Maybe throw UnsupportedOperationException is the better way.", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535408312", "createdAt": "2020-12-03T16:54:25Z", "author": {"login": "rozdy"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected OFAction makeOutputAction() {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4OTAxMQ=="}, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQxMTg2NA==", "bodyText": "I do not want to block PR, but I wondering about NPEs. I agree with UnsupportedOperationException idea", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535411864", "createdAt": "2020-12-03T16:58:00Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected OFAction makeOutputAction() {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4OTAxMQ=="}, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyNTc4NQ==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535425785", "createdAt": "2020-12-03T17:12:53Z", "author": {"login": "rozdy"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopInstallMultiTableFlowModFactory.java", "diffHunk": "@@ -15,18 +15,41 @@\n \n package org.openkilda.floodlight.command.flow.ingress.of;\n \n-import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentCommand;\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowSegmentBase;\n import org.openkilda.floodlight.switchmanager.SwitchManager;\n import org.openkilda.floodlight.utils.OfFlowModAddMultiTableMessageBuilderFactory;\n import org.openkilda.model.SwitchFeature;\n \n import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n \n+import java.util.List;\n import java.util.Set;\n \n-public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressFlowSegmentInstallFlowModFactory {\n+public class IngressFlowLoopInstallMultiTableFlowModFactory extends IngressInstallFlowModFactory {\n     public IngressFlowLoopInstallMultiTableFlowModFactory(\n-            IngressFlowSegmentCommand command, IOFSwitch sw, Set<SwitchFeature> features) {\n+            IngressFlowSegmentBase command, IOFSwitch sw, Set<SwitchFeature> features) {\n         super(new OfFlowModAddMultiTableMessageBuilderFactory(SwitchManager.FLOW_LOOP_PRIORITY), command, sw, features);\n     }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected OFAction makeOutputAction() {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4OTAxMQ=="}, "originalCommit": {"oid": "50188b0da85883ef7a622a4b33a0ce9f67226573"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI2MTA2OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopFlowModFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjo0MTo1NlrOH_C_Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjoxNTowOVrOH_OVyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTI2Ng==", "bodyText": "should these 4 methods throw unsupported exceptions too?", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r535871266", "createdAt": "2020-12-04T06:41:56Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopFlowModFactory.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/* Copyright 2019 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.floodlight.command.flow.ingress.of;\n+\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowLoopCommand;\n+import org.openkilda.floodlight.utils.OfFlowModBuilderFactory;\n+import org.openkilda.model.SwitchFeature;\n+\n+import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+abstract class IngressFlowLoopFlowModFactory extends IngressInstallFlowModFactory {\n+    private final IngressFlowLoopCommand command;\n+\n+    public IngressFlowLoopFlowModFactory(\n+            OfFlowModBuilderFactory flowModBuilderFactory, IngressFlowLoopCommand command, IOFSwitch sw,\n+            Set<SwitchFeature> features) {\n+        super(flowModBuilderFactory, command, sw, features);\n+        this.command = command;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    protected OFAction makeOutputAction() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f1e57efd93a5e1ffc6c3f15cd54393ae9ba0ca"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1NzI4OA==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3878#discussion_r536057288", "createdAt": "2020-12-04T12:15:09Z", "author": {"login": "rozdy"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowLoopFlowModFactory.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/* Copyright 2019 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.floodlight.command.flow.ingress.of;\n+\n+import org.openkilda.floodlight.command.flow.ingress.IngressFlowLoopCommand;\n+import org.openkilda.floodlight.utils.OfFlowModBuilderFactory;\n+import org.openkilda.model.SwitchFeature;\n+\n+import net.floodlightcontroller.core.IOFSwitch;\n+import org.projectfloodlight.openflow.protocol.action.OFAction;\n+import org.projectfloodlight.openflow.protocol.instruction.OFInstruction;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+abstract class IngressFlowLoopFlowModFactory extends IngressInstallFlowModFactory {\n+    private final IngressFlowLoopCommand command;\n+\n+    public IngressFlowLoopFlowModFactory(\n+            OfFlowModBuilderFactory flowModBuilderFactory, IngressFlowLoopCommand command, IOFSwitch sw,\n+            Set<SwitchFeature> features) {\n+        super(flowModBuilderFactory, command, sw, features);\n+        this.command = command;\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeTransformActions(List<Integer> vlanStack) {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    protected List<OFAction> makeServer42IngressFlowTransformActions(List<Integer> vlanStack) {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    protected OFAction makeOutputAction() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<OFInstruction> makeMetadataInstructions() {\n+        return Collections.emptyList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTI2Ng=="}, "originalCommit": {"oid": "31f1e57efd93a5e1ffc6c3f15cd54393ae9ba0ca"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2328, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}