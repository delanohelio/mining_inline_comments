{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1OTM2MDI1", "number": 3395, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOToyNzowMlrODzojOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOToyNzowMlrODzojOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDY4MzQ0OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/service/connected/ConnectedDevicesService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOToyNzowMlrOGILdfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMDoxOToxOFrOGINe-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyOTU2NQ==", "bodyText": "even though we have a meter on packet in rule, won't we end up with a bunch of ARP?", "url": "https://github.com/telstra/open-kilda/pull/3395#discussion_r411229565", "createdAt": "2020-04-20T09:27:02Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/service/connected/ConnectedDevicesService.java", "diffHunk": "@@ -149,13 +149,16 @@ private void handlePacketIn(OfInput input) {\n             return;\n         }\n \n-        logger.info(\"Receive connected device packet from {} OF-xid:{}\", input.getDpId(), input.getMessage().getXid());\n         long cookie = rawCookie.getValue();\n         SwitchId switchId = new SwitchId(input.getDpId().getLong());\n \n         if (isLldpRelated(cookie)) {\n+            logger.info(\"Receive connected device LLDP packet from {} OF-xid:{}, cookie: {}\",\n+                    input.getDpId(), input.getMessage().getXid(), cookie);\n             handleSwitchLldp(input, switchId, cookie);\n         } else if (isArpRelated(cookie)) {\n+            logger.info(\"Receive connected device ARP packet from {} OF-xid:{}, cookie: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd1f1b22611ecdbbcb7b4619d6377eb5f897de95"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI2MjcxMw==", "bodyText": "log level changed to debug", "url": "https://github.com/telstra/open-kilda/pull/3395#discussion_r411262713", "createdAt": "2020-04-20T10:19:18Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/service/connected/ConnectedDevicesService.java", "diffHunk": "@@ -149,13 +149,16 @@ private void handlePacketIn(OfInput input) {\n             return;\n         }\n \n-        logger.info(\"Receive connected device packet from {} OF-xid:{}\", input.getDpId(), input.getMessage().getXid());\n         long cookie = rawCookie.getValue();\n         SwitchId switchId = new SwitchId(input.getDpId().getLong());\n \n         if (isLldpRelated(cookie)) {\n+            logger.info(\"Receive connected device LLDP packet from {} OF-xid:{}, cookie: {}\",\n+                    input.getDpId(), input.getMessage().getXid(), cookie);\n             handleSwitchLldp(input, switchId, cookie);\n         } else if (isArpRelated(cookie)) {\n+            logger.info(\"Receive connected device ARP packet from {} OF-xid:{}, cookie: {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyOTU2NQ=="}, "originalCommit": {"oid": "bd1f1b22611ecdbbcb7b4619d6377eb5f897de95"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1937, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}