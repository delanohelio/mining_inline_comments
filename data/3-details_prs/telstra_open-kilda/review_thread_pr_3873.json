{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NTA3Njk2", "number": 3873, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1MzoyMFrOE-iA5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODozODoyMVrOE-ya_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA0NDUzOnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowModFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1MzoyMFrOH7vMPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNTozNFrOH7xihg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTIxMg==", "bodyText": "This is the method for single VLAN flow, how it can have inner VLAN defined?\nPS Please use FlowEndpoint.isVlanIdSet() method to check definement of vlan id.", "url": "https://github.com/telstra/open-kilda/pull/3873#discussion_r532401212", "createdAt": "2020-11-30T07:53:20Z", "author": {"login": "surabujin"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowModFactory.java", "diffHunk": "@@ -344,15 +344,17 @@ public OFFlowMod makeSingleVlanFlowLoopMessage() {\n         RoutingMetadata metadata = RoutingMetadata.builder()\n                 .outerVlanId(endpoint.getOuterVlanId())\n                 .build(switchFeatures);\n+        Match.Builder matchBuilder = of.buildMatch()\n+                .setExact(MatchField.IN_PORT, OFPort.of(endpoint.getPortNumber()))\n+                .setMasked(MatchField.METADATA,\n+                OFMetadata.of(metadata.getValue()), OFMetadata.of(metadata.getMask()));\n+        if (endpoint.getInnerVlanId() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "080c3265319c20e29b3c6e63593ae18af36f90cb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTY4Ng==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3873#discussion_r532439686", "createdAt": "2020-11-30T09:05:34Z", "author": {"login": "rozdy"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/command/flow/ingress/of/IngressFlowModFactory.java", "diffHunk": "@@ -344,15 +344,17 @@ public OFFlowMod makeSingleVlanFlowLoopMessage() {\n         RoutingMetadata metadata = RoutingMetadata.builder()\n                 .outerVlanId(endpoint.getOuterVlanId())\n                 .build(switchFeatures);\n+        Match.Builder matchBuilder = of.buildMatch()\n+                .setExact(MatchField.IN_PORT, OFPort.of(endpoint.getPortNumber()))\n+                .setMasked(MatchField.METADATA,\n+                OFMetadata.of(metadata.getValue()), OFMetadata.of(metadata.getMask()));\n+        if (endpoint.getInnerVlanId() != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTIxMg=="}, "originalCommit": {"oid": "080c3265319c20e29b3c6e63593ae18af36f90cb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjczMjc2OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/validation/FlowValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODozODoyMVrOH8IeRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODozMjozNlrOH8dJtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNTQzMQ==", "bodyText": "you will get conflict here with patch about single switch loops", "url": "https://github.com/telstra/open-kilda/pull/3873#discussion_r532815431", "createdAt": "2020-11-30T18:38:21Z", "author": {"login": "nikitamarchenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/validation/FlowValidator.java", "diffHunk": "@@ -110,11 +110,7 @@ public void validate(Flow flow, RequestedFlow requestedFlow, Set<String> bulkUpd\n \n     private void validateFlowLoop(Flow flow, RequestedFlow requestedFlow) throws InvalidFlowException {\n         if (requestedFlow.getLoopSwitchId() != null) {\n-            //todo: fix loops for q-in-q and singe switch loops\n-            if (requestedFlow.getSrcInnerVlan() != 0 || requestedFlow.getDestInnerVlan() != 0) {\n-                throw new InvalidFlowException(\"Loop for Q-in-Q flows is not implemented\",\n-                        ErrorType.NOT_IMPLEMENTED);\n-            }\n+            //todo: fix loops singe switch loops", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8347eeddf804114a9678a35b0f4b7c62cf2c53f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE1NDIyOQ==", "bodyText": "Rebased patch for single-switch flows on this one", "url": "https://github.com/telstra/open-kilda/pull/3873#discussion_r533154229", "createdAt": "2020-12-01T08:32:36Z", "author": {"login": "rozdy"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/validation/FlowValidator.java", "diffHunk": "@@ -110,11 +110,7 @@ public void validate(Flow flow, RequestedFlow requestedFlow, Set<String> bulkUpd\n \n     private void validateFlowLoop(Flow flow, RequestedFlow requestedFlow) throws InvalidFlowException {\n         if (requestedFlow.getLoopSwitchId() != null) {\n-            //todo: fix loops for q-in-q and singe switch loops\n-            if (requestedFlow.getSrcInnerVlan() != 0 || requestedFlow.getDestInnerVlan() != 0) {\n-                throw new InvalidFlowException(\"Loop for Q-in-Q flows is not implemented\",\n-                        ErrorType.NOT_IMPLEMENTED);\n-            }\n+            //todo: fix loops singe switch loops", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNTQzMQ=="}, "originalCommit": {"oid": "b8347eeddf804114a9678a35b0f4b7c62cf2c53f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2318, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}