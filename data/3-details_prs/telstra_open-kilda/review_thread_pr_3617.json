{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODE2MTMw", "number": 3617, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo1NDoxMVrOEOMAgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo1NDoxMVrOEOMAgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzEyMjU3OnYy", "diffSide": "RIGHT", "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jFlowRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo1NDoxMVrOGxMpjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDowMzo1NVrOGxM-nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0MDY1NA==", "bodyText": "why is it or?", "url": "https://github.com/telstra/open-kilda/pull/3617#discussion_r454240654", "createdAt": "2020-07-14T09:54:11Z", "author": {"login": "timofei-durakov"}, "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jFlowRepository.java", "diffHunk": "@@ -330,6 +331,14 @@ public boolean exists(String flowId) {\n         return loadAll(flowStatusDown.or(flowStatusDegraded));\n     }\n \n+    @Override\n+    public Collection<Flow> findByFlowFilter(FlowFilter flowFilter) {\n+        Filters filters = new Filters();\n+        Optional.ofNullable(flowFilter.getFlowStatus()).ifPresent(flowStatus ->\n+                filters.or(new Filter(STATUS_PROPERTY_NAME, ComparisonOperator.EQUALS, flowStatus)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b618e135ffff7beef802a9d44a0a6e9fe49b828c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0NjA0Nw==", "bodyText": "Fixed", "url": "https://github.com/telstra/open-kilda/pull/3617#discussion_r454246047", "createdAt": "2020-07-14T10:03:55Z", "author": {"login": "dpoltavets"}, "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jFlowRepository.java", "diffHunk": "@@ -330,6 +331,14 @@ public boolean exists(String flowId) {\n         return loadAll(flowStatusDown.or(flowStatusDegraded));\n     }\n \n+    @Override\n+    public Collection<Flow> findByFlowFilter(FlowFilter flowFilter) {\n+        Filters filters = new Filters();\n+        Optional.ofNullable(flowFilter.getFlowStatus()).ifPresent(flowStatus ->\n+                filters.or(new Filter(STATUS_PROPERTY_NAME, ComparisonOperator.EQUALS, flowStatus)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0MDY1NA=="}, "originalCommit": {"oid": "b618e135ffff7beef802a9d44a0a6e9fe49b828c"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1912, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}