{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NzAzNDYw", "number": 3408, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyMjozNVrOD1HNjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowOToyNFrOD1yxug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDE5Mjc5OnYy", "diffSide": "RIGHT", "path": "src-java/swmanager-topology/swmanager-storm-topology/src/main/java/org/openkilda/wfm/topology/switchmanager/service/impl/CommandBuilderImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyMjozNVrOGKYgZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyMjozNVrOGKYgZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MDQ1NA==", "bodyText": ".outputPort(properties.getServer42Port()) could not be moved above because if() else section will be extended in next patch PRs", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r413540454", "createdAt": "2020-04-23T06:22:35Z", "author": {"login": "niksv"}, "path": "src-java/swmanager-topology/swmanager-storm-topology/src/main/java/org/openkilda/wfm/topology/switchmanager/service/impl/CommandBuilderImpl.java", "diffHunk": "@@ -121,10 +129,60 @@ public CommandBuilderImpl(PersistenceManager persistenceManager, FlowResourcesCo\n         return commands;\n     }\n \n-    private List<BaseInstallFlow> buildInstallDefaultRuleCommands(SwitchId switchId, List<Long> switchRules) {\n+    /**\n+     * Some default rules require additional properties to be installed. This method filters such rules.\n+     */\n+    private static boolean isDefaultRuleWithSpecialRequirements(long cookie) {\n+        return cookie == SERVER_42_OUTPUT_VLAN_COOKIE\n+                || cookie == SERVER_42_OUTPUT_VXLAN_COOKIE;\n+    }\n+\n+    /**\n+     * Some default rules require additional properties to be installed. This method creates commands for such rules.\n+     */\n+    private List<BaseInstallFlow> buildInstallSpecialDefaultRuleCommands(SwitchId switchId, List<Long> switchRules) {\n+        SwitchProperties properties = switchPropertiesRepository.findBySwitchId(switchId).orElseThrow(\n+                () -> new IllegalStateException(format(\"Switch properties not found for switch %s\", switchId)));\n+\n         List<BaseInstallFlow> commands = new ArrayList<>();\n+        for (Long cookie : switchRules) {\n+            InstallServer42FlowBuilder command = InstallServer42Flow.builder()\n+                    .transactionId(transactionIdGenerator.generate())\n+                    .cookie(cookie)\n+                    .switchId(switchId)\n+                    .multiTable(properties.isMultiTable())\n+                    .inputPort(0)\n+                    .outputPort(0)\n+                    .server42MacAddress(properties.getServer42MacAddress());\n+\n+            if (cookie == SERVER_42_OUTPUT_VLAN_COOKIE) {\n+                commands.add(command\n+                        .id(\"SWMANAGER_SERVER_42_OUTPUT_VLAN_RULE_INSTALL\")\n+                        .outputPort(properties.getServer42Port())\n+                        .build());\n+            } else if (cookie == SERVER_42_OUTPUT_VXLAN_COOKIE) {\n+                commands.add(command\n+                        .id(\"SWMANAGER_SERVER_42_OUTPUT_VXLAN_RULE_INSTALL\")\n+                        .outputPort(properties.getServer42Port())\n+                        .build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c7c16be9c6fafff9e7199dc98537fc61b7c75"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjYyODk3OnYy", "diffSide": "RIGHT", "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyNToyMFrOGLTIvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDozNDowOVrOGLaoYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMTA1Mg==", "bodyText": "nit: fieldActions", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414501052", "createdAt": "2020-04-24T11:25:20Z", "author": {"login": "dpoltavets"}, "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "diffHunk": "@@ -47,12 +48,12 @@\n \n     @JsonCreator\n     public FlowApplyActions(\n-            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_field\") FlowSetFieldAction fieldAction,\n+            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_fields\") List<FlowSetFieldAction> fieldAction,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMzg0Mw==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414623843", "createdAt": "2020-04-24T14:34:09Z", "author": {"login": "niksv"}, "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "diffHunk": "@@ -47,12 +48,12 @@\n \n     @JsonCreator\n     public FlowApplyActions(\n-            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_field\") FlowSetFieldAction fieldAction,\n+            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_fields\") List<FlowSetFieldAction> fieldAction,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMTA1Mg=="}, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzI5NjY4OnYy", "diffSide": "RIGHT", "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowMTo1N1rOGLZL6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDozMzowM1rOGLalSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMDE2OQ==", "bodyText": "why not setFieldActions?", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414600169", "createdAt": "2020-04-24T14:01:57Z", "author": {"login": "timofei-durakov"}, "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "diffHunk": "@@ -30,8 +31,8 @@\n \n     @JsonProperty(\"output\")\n     private String flowOutput;\n-    @JsonProperty(\"set_field\")\n-    private FlowSetFieldAction fieldAction;\n+    @JsonProperty(\"set_fields\")\n+    private List<FlowSetFieldAction> fieldActions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMzA1MA==", "bodyText": "renamed", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414623050", "createdAt": "2020-04-24T14:33:03Z", "author": {"login": "niksv"}, "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "diffHunk": "@@ -30,8 +31,8 @@\n \n     @JsonProperty(\"output\")\n     private String flowOutput;\n-    @JsonProperty(\"set_field\")\n-    private FlowSetFieldAction fieldAction;\n+    @JsonProperty(\"set_fields\")\n+    private List<FlowSetFieldAction> fieldActions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMDE2OQ=="}, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzMxMjQxOnYy", "diffSide": "LEFT", "path": "src-java/floodlight-service/floodlight-api/src/main/java/org/openkilda/messaging/command/switches/SwitchRulesInstallRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowNToyN1rOGLZVOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDozNzoxOFrOGLaxrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMjU1Mg==", "bodyText": "why this method is removed?", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414602552", "createdAt": "2020-04-24T14:05:27Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-api/src/main/java/org/openkilda/messaging/command/switches/SwitchRulesInstallRequest.java", "diffHunk": "@@ -124,13 +131,4 @@ public void setIslPorts(List<Integer> islPorts) {\n     public void setFlowPorts(List<Integer> flowPorts) {\n         this.flowPorts = flowPorts;\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyNjIyMA==", "bodyText": "Two reasons:\n\nIt's invalid because it contains only 3 fields but class has much more.\nTo do not add new field into toString() method, because it will be generated be @DaTa annotation", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414626220", "createdAt": "2020-04-24T14:37:18Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-api/src/main/java/org/openkilda/messaging/command/switches/SwitchRulesInstallRequest.java", "diffHunk": "@@ -124,13 +131,4 @@ public void setIslPorts(List<Integer> islPorts) {\n     public void setFlowPorts(List<Integer> flowPorts) {\n         this.flowPorts = flowPorts;\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMjU1Mg=="}, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzMyMDUzOnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowNzoxNFrOGLZaCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1NDozMlrOGLbluw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMzc4Nw==", "bodyText": "potential npe?", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414603787", "createdAt": "2020-04-24T14:07:14Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "diffHunk": "@@ -787,6 +808,8 @@ private void doInstallSwitchRules(final CommandMessage message) {\n \n         final IKafkaProducerService producerService = getKafkaProducer();\n         final String replyToTopic = context.getKafkaSwitchManagerTopic();\n+        Integer server42Port = request.getServer42Port();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzOTU0Nw==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414639547", "createdAt": "2020-04-24T14:54:32Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "diffHunk": "@@ -787,6 +808,8 @@ private void doInstallSwitchRules(final CommandMessage message) {\n \n         final IKafkaProducerService producerService = getKafkaProducer();\n         final String replyToTopic = context.getKafkaSwitchManagerTopic();\n+        Integer server42Port = request.getServer42Port();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMzc4Nw=="}, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzMyMzg1OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowODowMVrOGLZcLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1NTo1NlrOGLbp2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNDMzNA==", "bodyText": "the same", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414604334", "createdAt": "2020-04-24T14:08:01Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "diffHunk": "@@ -1103,6 +1147,13 @@ private void doDeleteSwitchRules(final CommandMessage message) {\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_TRANSIT_COOKIE);\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_INGRESS_COOKIE);\n                     }\n+                    if (request.isServer42FlowRtt()) {\n+                        Integer server42Port = request.getServer42Port();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MDYwMA==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414640600", "createdAt": "2020-04-24T14:55:56Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "diffHunk": "@@ -1103,6 +1147,13 @@ private void doDeleteSwitchRules(final CommandMessage message) {\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_TRANSIT_COOKIE);\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_INGRESS_COOKIE);\n                     }\n+                    if (request.isServer42FlowRtt()) {\n+                        Integer server42Port = request.getServer42Port();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNDMzNA=="}, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzMzMDUwOnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowOToyNFrOGLZgFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTowMTowNVrOGLb56w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNTMzNQ==", "bodyText": "max_len of what? please lead a comment", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414605335", "createdAt": "2020-04-24T14:09:24Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java", "diffHunk": "@@ -48,6 +50,7 @@\n      * OVS software switch manufacturer constant value.\n      */\n     public static final String OVS_MANUFACTURER = \"Nicira, Inc.\";\n+    private static final int MAX_LEN = 0xFFFFFFFF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0NDcxNQ==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414644715", "createdAt": "2020-04-24T15:01:05Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java", "diffHunk": "@@ -48,6 +50,7 @@\n      * OVS software switch manufacturer constant value.\n      */\n     public static final String OVS_MANUFACTURER = \"Nicira, Inc.\";\n+    private static final int MAX_LEN = 0xFFFFFFFF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNTMzNQ=="}, "originalCommit": {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1945, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}