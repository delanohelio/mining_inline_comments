{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjI2OTM3", "number": 3386, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowMTowMlrODxnLDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowMToyNlrODxnLkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzQ4NjIyOnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/feature/NoviflowSpecificFeature.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowMTowMlrOGFLR_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjoxMzo0MFrOGFLr9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MDg5NA==", "bodyText": "let's rename it to something like isWBSeries", "url": "https://github.com/telstra/open-kilda/pull/3386#discussion_r408080894", "createdAt": "2020-04-14T12:01:02Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/feature/NoviflowSpecificFeature.java", "diffHunk": "@@ -23,15 +23,28 @@\n abstract class NoviflowSpecificFeature extends AbstractFeature {\n     public static final String NOVIFLOW_MANUFACTURER_SUFFIX = \"noviflow\";\n \n-    boolean isNoviSwitch(IOFSwitch sw) {\n-        Optional<SwitchDescription> description = Optional.ofNullable(sw.getSwitchDescription());\n-        return description\n-                .map(SwitchDescription::getManufacturerDescription)\n+    static boolean isNoviSwitch(IOFSwitch sw) {\n+        if (sw == null || sw.getSwitchDescription() == null) {\n+            return false;\n+        }\n+\n+        SwitchDescription description = sw.getSwitchDescription();\n+\n+        if (E_SWITCH_MANUFACTURER_DESCRIPTION.equalsIgnoreCase(description.getManufacturerDescription())) {\n+            return true;\n+        }\n+\n+        if (E_SWITCH_HARDWARE_DESCRIPTION_REGEX.matcher(\n+                Optional.ofNullable(description.getHardwareDescription()).orElse(\"\")).matches()) {\n+            return true;\n+        }\n+\n+        return Optional.ofNullable(description.getManufacturerDescription())\n                 .map(String::toLowerCase)\n                 .orElse(\"\").contains(NOVIFLOW_MANUFACTURER_SUFFIX);\n     }\n \n-    boolean is100GbHw(IOFSwitch sw) {\n+    static boolean is100GbHw(IOFSwitch sw) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2891402f9344365849b2bcbc72123f45262fa86"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NzU0Mw==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3386#discussion_r408087543", "createdAt": "2020-04-14T12:13:40Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/feature/NoviflowSpecificFeature.java", "diffHunk": "@@ -23,15 +23,28 @@\n abstract class NoviflowSpecificFeature extends AbstractFeature {\n     public static final String NOVIFLOW_MANUFACTURER_SUFFIX = \"noviflow\";\n \n-    boolean isNoviSwitch(IOFSwitch sw) {\n-        Optional<SwitchDescription> description = Optional.ofNullable(sw.getSwitchDescription());\n-        return description\n-                .map(SwitchDescription::getManufacturerDescription)\n+    static boolean isNoviSwitch(IOFSwitch sw) {\n+        if (sw == null || sw.getSwitchDescription() == null) {\n+            return false;\n+        }\n+\n+        SwitchDescription description = sw.getSwitchDescription();\n+\n+        if (E_SWITCH_MANUFACTURER_DESCRIPTION.equalsIgnoreCase(description.getManufacturerDescription())) {\n+            return true;\n+        }\n+\n+        if (E_SWITCH_HARDWARE_DESCRIPTION_REGEX.matcher(\n+                Optional.ofNullable(description.getHardwareDescription()).orElse(\"\")).matches()) {\n+            return true;\n+        }\n+\n+        return Optional.ofNullable(description.getManufacturerDescription())\n                 .map(String::toLowerCase)\n                 .orElse(\"\").contains(NOVIFLOW_MANUFACTURER_SUFFIX);\n     }\n \n-    boolean is100GbHw(IOFSwitch sw) {\n+    static boolean is100GbHw(IOFSwitch sw) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MDg5NA=="}, "originalCommit": {"oid": "a2891402f9344365849b2bcbc72123f45262fa86"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzQ4NzU0OnYy", "diffSide": "RIGHT", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/feature/NoviflowSpecificFeature.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowMToyNlrOGFLS3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjoxMzo0NVrOGFLsHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MTExNg==", "bodyText": "let's rename it to something like isSMSeries", "url": "https://github.com/telstra/open-kilda/pull/3386#discussion_r408081116", "createdAt": "2020-04-14T12:01:26Z", "author": {"login": "timofei-durakov"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/feature/NoviflowSpecificFeature.java", "diffHunk": "@@ -51,7 +64,7 @@ boolean is100GbHw(IOFSwitch sw) {\n                 .orElse(\"\")).matches();\n     }\n \n-    boolean isVirtual(IOFSwitch sw) {\n+    static boolean isVirtual(IOFSwitch sw) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2891402f9344365849b2bcbc72123f45262fa86"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NzU4MA==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3386#discussion_r408087580", "createdAt": "2020-04-14T12:13:45Z", "author": {"login": "niksv"}, "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/feature/NoviflowSpecificFeature.java", "diffHunk": "@@ -51,7 +64,7 @@ boolean is100GbHw(IOFSwitch sw) {\n                 .orElse(\"\")).matches();\n     }\n \n-    boolean isVirtual(IOFSwitch sw) {\n+    static boolean isVirtual(IOFSwitch sw) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MTExNg=="}, "originalCommit": {"oid": "a2891402f9344365849b2bcbc72123f45262fa86"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1933, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}