{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTEwNjAy", "number": 3602, "title": "add test for partialSwitchUpdate", "bodyText": "", "createdAt": "2020-07-06T17:29:20Z", "url": "https://github.com/telstra/open-kilda/pull/3602", "merged": true, "mergeCommit": {"oid": "988b27715fedac90f9454a98c677df909363f981"}, "closed": true, "closedAt": "2020-07-17T06:35:24Z", "author": {"login": "andriidovhan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcye8r8ABqjM1MTg2NzM0NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1a7W1AFqTQ0OTYyOTIwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a659630563614d9783f30683a2f537e3f9e72d6", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/8a659630563614d9783f30683a2f537e3f9e72d6", "committedDate": "2020-07-06T17:02:31Z", "message": "add test for partialSwitchUpdate"}, "afterCommit": {"oid": "36a74544eb6ce350a50ab83f4cdab2f1ac12e16e", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/36a74544eb6ce350a50ab83f4cdab2f1ac12e16e", "committedDate": "2020-07-07T05:25:19Z", "message": "add test for partialSwitchUpdate"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36a74544eb6ce350a50ab83f4cdab2f1ac12e16e", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/36a74544eb6ce350a50ab83f4cdab2f1ac12e16e", "committedDate": "2020-07-07T05:25:19Z", "message": "add test for partialSwitchUpdate"}, "afterCommit": {"oid": "f666db63e62306249a0b8e797b1476a0de7e4de4", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/f666db63e62306249a0b8e797b1476a0de7e4de4", "committedDate": "2020-07-09T05:58:58Z", "message": "remove setSwitchPop method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzQ4MTI5", "url": "https://github.com/telstra/open-kilda/pull/3602#pullrequestreview-448748129", "createdAt": "2020-07-15T08:42:10Z", "commit": {"oid": "f666db63e62306249a0b8e797b1476a0de7e4de4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODo0MjoxMFrOGx0RAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODo1NDo0MVrOGx0viQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg4OTcyOA==", "bodyText": "A more compact groovy way would be\ndef updateRequest =[location: [(data.field): data.newValue] as SwitchPatchDto", "url": "https://github.com/telstra/open-kilda/pull/3602#discussion_r454889728", "createdAt": "2020-07-15T08:42:10Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/switches/SwitchesSpec.groovy", "diffHunk": "@@ -333,4 +335,90 @@ class SwitchesSpec extends HealthCheckSpecification {\n                  operation: { getNorthbound().validateSwitch(NON_EXISTENT_SWITCH_ID) }]\n         ]\n     }\n+\n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    @Unroll\n+    def \"Able to partially update switch a 'location.#data.field' field\"() {\n+        given: \"A switch\"\n+        def sw = topology.activeSwitches.first()\n+        def initConf = northbound.getSwitch(sw.dpId)\n+\n+        when: \"Request a switch partial update for a #data.field field\"\n+        def updateRequest = new SwitchPatchDto().tap {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f666db63e62306249a0b8e797b1476a0de7e4de4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg5NjM4Nw==", "bodyText": "Just create a method that maps SwitchDto (initConf) to SwitchPatchDto and get rid of all these if-else branches", "url": "https://github.com/telstra/open-kilda/pull/3602#discussion_r454896387", "createdAt": "2020-07-15T08:52:52Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/switches/SwitchesSpec.groovy", "diffHunk": "@@ -333,4 +335,90 @@ class SwitchesSpec extends HealthCheckSpecification {\n                  operation: { getNorthbound().validateSwitch(NON_EXISTENT_SWITCH_ID) }]\n         ]\n     }\n+\n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    @Unroll\n+    def \"Able to partially update switch a 'location.#data.field' field\"() {\n+        given: \"A switch\"\n+        def sw = topology.activeSwitches.first()\n+        def initConf = northbound.getSwitch(sw.dpId)\n+\n+        when: \"Request a switch partial update for a #data.field field\"\n+        def updateRequest = new SwitchPatchDto().tap {\n+            it.location = new SwitchLocationDtoV2().tap { it.\"$data.field\" = data.newValue }\n+        }\n+        def response = northboundV2.partialSwitchUpdate(sw.dpId, updateRequest)\n+\n+        then: \"Update response reflects the changes\"\n+        response.location.\"$data.field\" == data.newValue\n+\n+        and: \"Changes actually took place\"\n+        northbound.getSwitch(sw.dpId).location.\"$data.field\" == data.newValue\n+\n+        cleanup:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f666db63e62306249a0b8e797b1476a0de7e4de4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg5NzU0NQ==", "bodyText": "northboundV2.partialSwitchUpdate(sw.dpId, new SwitchPatchDto().tap { it.pop = initConf.pop ?: \"\" }", "url": "https://github.com/telstra/open-kilda/pull/3602#discussion_r454897545", "createdAt": "2020-07-15T08:54:41Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/switches/SwitchesSpec.groovy", "diffHunk": "@@ -333,4 +335,90 @@ class SwitchesSpec extends HealthCheckSpecification {\n                  operation: { getNorthbound().validateSwitch(NON_EXISTENT_SWITCH_ID) }]\n         ]\n     }\n+\n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    @Unroll\n+    def \"Able to partially update switch a 'location.#data.field' field\"() {\n+        given: \"A switch\"\n+        def sw = topology.activeSwitches.first()\n+        def initConf = northbound.getSwitch(sw.dpId)\n+\n+        when: \"Request a switch partial update for a #data.field field\"\n+        def updateRequest = new SwitchPatchDto().tap {\n+            it.location = new SwitchLocationDtoV2().tap { it.\"$data.field\" = data.newValue }\n+        }\n+        def response = northboundV2.partialSwitchUpdate(sw.dpId, updateRequest)\n+\n+        then: \"Update response reflects the changes\"\n+        response.location.\"$data.field\" == data.newValue\n+\n+        and: \"Changes actually took place\"\n+        northbound.getSwitch(sw.dpId).location.\"$data.field\" == data.newValue\n+\n+        cleanup:\n+        if (initConf.location.\"$data.field\") {\n+            northboundV2.partialSwitchUpdate(sw.dpId, new SwitchPatchDto().tap {\n+                it.location = new SwitchLocationDtoV2().tap { it.\"$data.field\" = initConf.location.\"$data.field\" }\n+            })\n+        } else {\n+            if (data.field in [\"latitude\", \"longitude\"]) {\n+                northboundV2.partialSwitchUpdate(sw.dpId, new SwitchPatchDto().tap {\n+                    it.location = new SwitchLocationDtoV2().tap { it.\"$data.field\" = 0 }\n+                })\n+            } else {\n+                northboundV2.partialSwitchUpdate(sw.dpId, new SwitchPatchDto().tap {\n+                    it.location = new SwitchLocationDtoV2().tap { it.\"$data.field\" = \"\" }\n+                })\n+            }\n+        }\n+\n+        where:\n+        data << [\n+                [\n+                        field   : \"latitude\",\n+                        newValue: 654\n+                ],\n+                [\n+                        field   : \"longitude\",\n+                        newValue: 456\n+                ],\n+                [\n+                        field   : \"street\",\n+                        newValue: \"testStreet\"\n+                ],\n+                [\n+                        field   : \"city\",\n+                        newValue: \"testCity\"\n+                ],\n+                [\n+                        field   : \"country\",\n+                        newValue: \"testCountry\"\n+                ]\n+        ]\n+    }\n+\n+    @Tidy\n+    def \"Able to partially update switch a 'pop' field\"() {\n+        given: \"A switch\"\n+        def sw = topology.activeSwitches.first()\n+        def initConf = northbound.getSwitch(sw.dpId)\n+\n+        when: \"Request a switch partial update for a 'pop' field\"\n+        def newPopValue = \"test_POP\"\n+        def response = northboundV2.partialSwitchUpdate(sw.dpId, new SwitchPatchDto().tap { it.pop = newPopValue })\n+\n+        then: \"Update response reflects the changes\"\n+        response.pop == newPopValue\n+\n+        and: \"Changes actually took place\"\n+        northbound.getSwitch(sw.dpId).pop == newPopValue\n+\n+        cleanup:\n+        if (initConf.pop) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f666db63e62306249a0b8e797b1476a0de7e4de4"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9a85537a6648c9107f5b7c9efb4189d2ebb6d9f", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/b9a85537a6648c9107f5b7c9efb4189d2ebb6d9f", "committedDate": "2020-07-15T12:47:12Z", "message": "add test for partialSwitchUpdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53f36f6b54791ca5dbd6f5cb47a973b8151bf0ba", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/53f36f6b54791ca5dbd6f5cb47a973b8151bf0ba", "committedDate": "2020-07-15T12:47:12Z", "message": "remove setSwitchPop method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f666db63e62306249a0b8e797b1476a0de7e4de4", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/f666db63e62306249a0b8e797b1476a0de7e4de4", "committedDate": "2020-07-09T05:58:58Z", "message": "remove setSwitchPop method"}, "afterCommit": {"oid": "53f36f6b54791ca5dbd6f5cb47a973b8151bf0ba", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/53f36f6b54791ca5dbd6f5cb47a973b8151bf0ba", "committedDate": "2020-07-15T12:47:12Z", "message": "remove setSwitchPop method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NjI5MjA2", "url": "https://github.com/telstra/open-kilda/pull/3602#pullrequestreview-449629206", "createdAt": "2020-07-16T08:26:26Z", "commit": {"oid": "53f36f6b54791ca5dbd6f5cb47a973b8151bf0ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3607, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}