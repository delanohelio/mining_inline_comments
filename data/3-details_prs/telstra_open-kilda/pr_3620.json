{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjYyNzEz", "number": 3620, "title": "fix \"System does not create flow when reverse path has different bandwidth than forward path on the second link\"", "bodyText": "", "createdAt": "2020-07-10T06:57:41Z", "url": "https://github.com/telstra/open-kilda/pull/3620", "merged": true, "mergeCommit": {"oid": "ddb149a9e73b28a35f85d8d1c93c1f6cf947180a"}, "closed": true, "closedAt": "2020-07-17T06:40:21Z", "author": {"login": "andriidovhan"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczgfW7AFqTQ0NjI3MDUzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1GJAQAFqTQ0ODcyNjY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MjcwNTM5", "url": "https://github.com/telstra/open-kilda/pull/3620#pullrequestreview-446270539", "createdAt": "2020-07-10T09:47:26Z", "commit": {"oid": "0952d98b1f3dcd7d351b609733fe7863b16d678d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTo0NzoyNlrOGvxJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTo0NzoyNlrOGvxJ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0MTYyNw==", "bodyText": "Can we do this trick instead?\n        //All alternative paths for both flows are unavailable\n        def untouchableIsls = pathHelper.getInvolvedIsls(flowPath).collectMany { [it, it.reversed] }\n        def altPaths = switchPair.paths.findAll { [it, it.reverse()].every { it != flowPath }}\n        def islsToBreak = altPaths.collectMany { pathHelper.getInvolvedIsls(it) }\n                .collectMany { [it, it.reversed] }.unique()\n                .findAll { !untouchableIsls.contains(it) }.unique { [it, it.reversed].sort() }\n        withPool { islsToBreak.eachParallel { Isl isl -> antiflap.portDown(isl.srcSwitch.dpId, isl.srcPort) } }\n        Wrappers.wait(WAIT_OFFSET) {\n            assert northbound.getAllLinks().findAll { it.state == FAILED }.size() == islsToBreak.size() * 2\n        }", "url": "https://github.com/telstra/open-kilda/pull/3620#discussion_r452741627", "createdAt": "2020-07-10T09:47:26Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudSpec.groovy", "diffHunk": "@@ -896,35 +895,36 @@ class FlowCrudSpec extends HealthCheckSpecification {\n \n         and: \"Select path for further manipulation with it\"\n         def selectedPath = switchPair.paths.max { it.size() }\n-        def altPaths = switchPair.paths.findAll { it != selectedPath }\n-\n-        and: \"Make all alternative paths unavailable (bring ports down on the src/intermediate switches)\"\n-        List<PathNode> broughtDownPortsSrcSwitch = []\n-        altPaths.findAll { it.first().portNo != selectedPath.first().portNo }.unique { it.first() }.each { path ->\n-            def src = path.first()\n-            broughtDownPortsSrcSwitch.add(src)\n-            antiflap.portDown(src.switchId, src.portNo)\n-        }\n \n-        List<PathNode> broughtDownPortsIntermSwitch = []\n-        altPaths.findAll { it.first().portNo == selectedPath.first().portNo &&\n-                it[2].portNo != selectedPath[2].portNo && it[2].switchId == selectedPath[2].switchId\n-        }.unique { it[2] }.each { path ->\n-            def src = path[2]\n-            broughtDownPortsIntermSwitch.add(src)\n-            antiflap.portDown(src.switchId, src.portNo)\n+        and: \"Make all alternative paths unavailable (bring links down on the src/intermediate switches)\"\n+        List<Isl> broughtDownIsls = []\n+        def involvedIsl = pathHelper.getInvolvedIsls(selectedPath)\n+        //link to src switch\n+        topology.islsForActiveSwitches.findAll {\n+            (it.srcSwitch.dpId == selectedPath[0].switchId || it.dstSwitch.dpId == selectedPath[0].switchId) &&\n+                    (it != involvedIsl[0])\n+        }.each { isl ->\n+            broughtDownIsls.add(isl)\n+        }\n+        //link to intermediate switch\n+        topology.islsForActiveSwitches.findAll {\n+            (it.srcSwitch.dpId == selectedPath[2].switchId || it.dstSwitch.dpId == selectedPath[2].switchId) &&\n+                    !(it in involvedIsl[0..1])\n+        }.each { isl ->\n+            broughtDownIsls.add(isl)\n         }\n+        broughtDownIsls.each { antiflap.portDown(it.srcSwitch.dpId, it.srcPort) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0952d98b1f3dcd7d351b609733fe7863b16d678d"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0952d98b1f3dcd7d351b609733fe7863b16d678d", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/0952d98b1f3dcd7d351b609733fe7863b16d678d", "committedDate": "2020-07-10T06:52:37Z", "message": "fix \"System does not create flow when reverse path has different bandwidth than forward path on the second link\""}, "afterCommit": {"oid": "4efbbfd00c362ea91dbedd1ef443571e936d450f", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/4efbbfd00c362ea91dbedd1ef443571e936d450f", "committedDate": "2020-07-10T12:43:52Z", "message": "fix \"System does not create flow when reverse path has different bandwidth than forward path on the second link\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef8d46e6c17be51dea6821a2cf1326657b273f5", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/3ef8d46e6c17be51dea6821a2cf1326657b273f5", "committedDate": "2020-07-10T12:53:53Z", "message": "fix \"System does not create flow when reverse path has different bandwidth than forward path on the second link\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4efbbfd00c362ea91dbedd1ef443571e936d450f", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/4efbbfd00c362ea91dbedd1ef443571e936d450f", "committedDate": "2020-07-10T12:43:52Z", "message": "fix \"System does not create flow when reverse path has different bandwidth than forward path on the second link\""}, "afterCommit": {"oid": "3ef8d46e6c17be51dea6821a2cf1326657b273f5", "author": {"user": {"login": "andriidovhan", "name": "AndriiDovhan"}}, "url": "https://github.com/telstra/open-kilda/commit/3ef8d46e6c17be51dea6821a2cf1326657b273f5", "committedDate": "2020-07-10T12:53:53Z", "message": "fix \"System does not create flow when reverse path has different bandwidth than forward path on the second link\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzI2NjQx", "url": "https://github.com/telstra/open-kilda/pull/3620#pullrequestreview-448726641", "createdAt": "2020-07-15T08:13:20Z", "commit": {"oid": "3ef8d46e6c17be51dea6821a2cf1326657b273f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3534, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}