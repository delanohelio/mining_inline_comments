{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTY0OTE5", "number": 3777, "title": "OrientDB schema migration toolset", "bodyText": "New docker container db_migration responsible for applying DB\nmigration for devel and for prod environments.", "createdAt": "2020-10-12T13:05:29Z", "url": "https://github.com/telstra/open-kilda/pull/3777", "merged": true, "mergeCommit": {"oid": "e94979f52ff5cf096cfbcd11c644cb0258a6f2c9"}, "closed": true, "closedAt": "2020-10-25T21:49:20Z", "author": {"login": "surabujin"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR1YbgABqjM4NjcwNzYxNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVX-1zAFqTUxNTc1NTA5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70b8dbc77da2b56b04c0f82ee5e0d50d4359d494", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/70b8dbc77da2b56b04c0f82ee5e0d50d4359d494", "committedDate": "2020-10-12T13:03:25Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "daad12bc81923d11cfc93ee1f5387668f3e3b899", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/daad12bc81923d11cfc93ee1f5387668f3e3b899", "committedDate": "2020-10-12T15:05:23Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daad12bc81923d11cfc93ee1f5387668f3e3b899", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/daad12bc81923d11cfc93ee1f5387668f3e3b899", "committedDate": "2020-10-12T15:05:23Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/188c33588919fad8bc977cdab27bd2c7503174ca", "committedDate": "2020-10-12T19:39:39Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDc3MTA1", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-507077105", "createdAt": "2020-10-13T05:23:43Z", "commit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NTI1MzIy", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-507525322", "createdAt": "2020-10-13T14:53:40Z", "commit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDo1Mzo0MFrOHgq4xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMToxOTo0MVrOHhtaTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTE0MA==", "bodyText": "A typo?", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r504019140", "createdAt": "2020-10-13T14:53:40Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/build.gradle", "diffHunk": "@@ -223,6 +223,8 @@ task buildAndCopyArtifacts(type: Copy) {\n     dependsOn floodlightBuild.task(':build')\n }\n \n+task buildAnd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NzIwNg==", "bodyText": "2017? :)", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r505097206", "createdAt": "2020-10-15T00:33:58Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/Dockerfile", "diffHunk": "@@ -0,0 +1,78 @@\n+# Copyright 2017 Telstra Open Source", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwMDM5MA==", "bodyText": "Not clear why we need liquibase-orientdb. From what I see (you propose to use yaml instead of XML and pure SQL instead of custom \"change\"), we don't need it.\nHere's the list of custom \"change\" introduced by the lib, do you think we will use them? https://github.com/unbroken-dome/liquibase-orientdb/tree/master/src/main/java/liquibase/change/ext", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r505100390", "createdAt": "2020-10-15T00:45:31Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/Dockerfile", "diffHunk": "@@ -0,0 +1,78 @@\n+# Copyright 2017 Telstra Open Source\n+#\n+#   Licensed under the Apache License, Version 2.0 (the \"License\");\n+#   you may not use this file except in compliance with the License.\n+#   You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#   Unless required by applicable law or agreed to in writing, software\n+#   distributed under the License is distributed on an \"AS IS\" BASIS,\n+#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#   See the License for the specific language governing permissions and\n+#   limitations under the License.\n+#\n+\n+# Can't use official lisquibase image, because it's minimal version is 3.10.x, while\n+# liquebase-orientdb(https://github.com/unbroken-dome/liquibase-orientdb) plugin\n+# can work up to version 3.5.3\n+\n+FROM openjdk:11-jre-slim-buster\n+\n+# Install GPG for package vefification\n+RUN apt-get update \\\n+    && apt-get -y install gnupg wget curl\n+\n+# Add the liquibase user and step in the directory\n+RUN addgroup --gid 1001 liquibase\n+RUN adduser --disabled-password --uid 1001 --ingroup liquibase liquibase\n+\n+# Make /liquibase directory and change owner to liquibase\n+RUN mkdir /liquibase && chown liquibase /liquibase\n+WORKDIR /liquibase\n+\n+# Change to the liquibase user\n+USER liquibase\n+\n+# Latest Liquibase Release Version\n+ARG LIQUIBASE_VERSION=3.5.5\n+\n+# Download, verify, extract\n+ARG LB_SHA256=da0df7f6ea7694fb62b1448c3c734644d8d49795ff9bb7417db18bb1da5ff2c6\n+RUN set -x \\\n+  && wget -O liquibase-${LIQUIBASE_VERSION}.tar.gz \"https://github.com/liquibase/liquibase/releases/download/liquibase-parent-${LIQUIBASE_VERSION}/liquibase-${LIQUIBASE_VERSION}-bin.tar.gz\" \\\n+  && echo \"$LB_SHA256  liquibase-${LIQUIBASE_VERSION}.tar.gz\" | sha256sum -c - \\\n+  && tar -xzf liquibase-${LIQUIBASE_VERSION}.tar.gz\n+\n+# Setup GPG\n+RUN GNUPGHOME=\"$(mktemp -d)\"\n+\n+# Download JDBC libraries and plugins\n+\n+RUN wget -O /liquibase/lib/orientdb-jdbc-3.0.34-all.jar https://repo1.maven.org/maven2/com/orientechnologies/orientdb-jdbc/3.0.34/orientdb-jdbc-3.0.34-all.jar\n+RUN wget -O /liquibase/lib/liquibase-orientdb-0.3.0.jar https://dl.bintray.com/till-krullmann/tools/org/unbroken-dome/liquibase-orientdb/liquibase-orientdb/0.3.0/liquibase-orientdb-0.3.0.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNDE5MQ==", "bodyText": "I'd propose to distinct migration for development / production envs with separate changelog roots (e.g. migrations/root.yaml and migrations/root-develop-env.yaml).", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r505104191", "createdAt": "2020-10-15T01:00:16Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrate-develop.sh", "diffHunk": "@@ -0,0 +1,16 @@\n+#!/bin/sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNDc4OA==", "bodyText": "I'd recommend to use descriptive ids for changesets.", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r505104788", "createdAt": "2020-10-15T01:02:42Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrations/initial-access-management.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+---\n+databaseChangeLog:\n+  - changeSet:\n+      id: 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNTE5Mw==", "bodyText": "I'd recommend to stick to the \"one change per changeset\" rule. https://www.liquibase.org/get-started/best-practices", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r505105193", "createdAt": "2020-10-15T01:04:20Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrations/initial-access-management.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+---\n+databaseChangeLog:\n+  - changeSet:\n+      id: 1\n+      author: surabujin\n+      changes:\n+        - sql: \"INSERT INTO ORole SET name = 'kilda-role', mode = 0, inheritedRole = (SELECT FROM ORole WHERE name = 'writer')\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwOTA2OA==", "bodyText": "Let's consider tagging as the rollback strategy. See https://docs.liquibase.com/change-types/community/tag-database.html", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r505109068", "createdAt": "2020-10-15T01:19:41Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrate.sh", "diffHunk": "@@ -0,0 +1,15 @@\n+#!/bin/sh\n+\n+set -e\n+\n+cd /liquibase\n+\n+DB_NAME=\"${KILDA_ORIENTDB_DB_NAME:-kilda}\"\n+DB_HOST=\"${KILDA_ORIENTDB_HOST:-odb3.pendev}\"\n+\n+echo \"Apply main migrations set (root.yaml)\"\n+./liquibase --username=\"${KILDA_ORIENTDB_USER:-kilda}\" --password=\"${KILDA_ORIENTDB_PASSWORD:-kilda}\" \\\n+  --url=jdbc:orient:remote:\"${DB_HOST}/${DB_NAME}\" \\\n+  --driver=com.orientechnologies.orient.jdbc.OrientJdbcDriver --changeLogFile=migrations/root.yaml update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/188c33588919fad8bc977cdab27bd2c7503174ca", "committedDate": "2020-10-12T19:39:39Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "ef969667d73522f3e79589dc3a58c60257c07a25", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/ef969667d73522f3e79589dc3a58c60257c07a25", "committedDate": "2020-10-15T18:44:05Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef969667d73522f3e79589dc3a58c60257c07a25", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/ef969667d73522f3e79589dc3a58c60257c07a25", "committedDate": "2020-10-15T18:44:05Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "2f4198c08ccc667ed8f4fd20af2787baf809f64c", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/2f4198c08ccc667ed8f4fd20af2787baf809f64c", "committedDate": "2020-10-16T07:03:12Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f4198c08ccc667ed8f4fd20af2787baf809f64c", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/2f4198c08ccc667ed8f4fd20af2787baf809f64c", "committedDate": "2020-10-16T07:03:12Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "f0c59667dc91a02e58b536045e1e09b6397ae70c", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/f0c59667dc91a02e58b536045e1e09b6397ae70c", "committedDate": "2020-10-18T17:58:40Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0c59667dc91a02e58b536045e1e09b6397ae70c", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/f0c59667dc91a02e58b536045e1e09b6397ae70c", "committedDate": "2020-10-18T17:58:40Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "5c607288333cdc485668af846dfe892eaeac7336", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/5c607288333cdc485668af846dfe892eaeac7336", "committedDate": "2020-10-19T17:31:23Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c607288333cdc485668af846dfe892eaeac7336", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/5c607288333cdc485668af846dfe892eaeac7336", "committedDate": "2020-10-19T17:31:23Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "2c61d2cf813255707bee5629832b76c14e63648f", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/2c61d2cf813255707bee5629832b76c14e63648f", "committedDate": "2020-10-20T12:12:37Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDkzNDg4", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-513493488", "createdAt": "2020-10-21T09:41:53Z", "commit": {"oid": "2c61d2cf813255707bee5629832b76c14e63648f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTo0MTo1NFrOHljVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTo0MTo1NFrOHljVtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzODM1Nw==", "bodyText": "why do we need resolve conf in a container?", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r509138357", "createdAt": "2020-10-21T09:41:54Z", "author": {"login": "timofei-durakov"}, "path": "docker/db-migration/migrations/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# OrientDB migrations\n+\n+## Migration sets:\n+* `initial-access-management.yaml` - create required roles and users, executed from `root` user, applied only on dev \n+  environment.\n+* `prehixtory.yaml` - migration steps already applied to the prod DB on the moment when this migration toolset created, \n+  applied to the dev environment \n+* `root.yaml` - main migration set, applied on all environments.\n+\n+## migrations concepts\n+* use `yaml` format\n+* do not include `changeSet` entries directly into `root.yaml` - create a separate migration file for each migration and \n+  include it into `root.yaml`\n+* put all request that must be applied as one transaction inside one `changeSet`\n+* filename + changeSet id + author together represents a unique identifier for changeSet, used by `liquibase` to track\n+  the history of migration, so you `id` records must be unique for the migration file\n+* name migration files as `NNN-human-readable-description.yaml`, where `NNN` is a decimal digit with leading zeros (for\n+  natural alphanumeric file name sorting)\n+* add `tagDatabase` changeSet at the start of your migration change sets list, it will be used as pointer for rollback\n+  operations\n+\n+## Examples\n+\n+migration file `001-feature-ABC.yaml`\n+```yaml\n+databaseChangeLog:\n+  - changeSet:\n+      id: some-id\n+      author: UNKNOWN\n+      changes:\n+        - sql: \"INSERT ...\"\n+      rollback:\n+        - sql: \"DELETE ...\"\n+```\n+\n+chunk into `root.yaml`\n+```yaml\n+  - include:\n+      relativeToChangelogFile: true\n+      file: 001-feature-ABC.yaml\n+```\n+\n+Tag for rollback operation (during rollback everithing that was applied after this tag will be rolled back)\n+```yaml\n+changeSet:\n+  id: tag-for-some-migration\n+  author: UNKNOWN\n+  changes:\n+  - tagDatabase:\n+      tag: 000-migration\n+```\n+\n+To start DB update by hands you need to build migration container\n+```shell script\n+docker-compose build db_migration\n+```\n+\n+And execute following command (for DB on some foreign host):\n+```shell script\n+docker run \\\n+  --volume /etc/resolv.conf:/etc/resolv.conf --rm --network host \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c61d2cf813255707bee5629832b76c14e63648f"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzAyMzk3", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-514302397", "createdAt": "2020-10-22T01:42:26Z", "commit": {"oid": "2c61d2cf813255707bee5629832b76c14e63648f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMTo0MjoyNlrOHmNjqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjowNDo0NlrOHmN6Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzMDA1OA==", "bodyText": "We will have 2 root changesets:\n\nroot.yaml is for prod migrations only, and includes schema upgrades / downgrades.\nroot-develop-env.yaml for dev and all-in-one. It includes initial-access-management.yaml, prehistory.yaml and root.yaml.\n\nPlease, check this out - https://github.com/liquibase/liquibase/blob/master/liquibase-core/src/test/resources/liquibase/parser/core/yaml/nestedChangeLog.yaml", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r509830058", "createdAt": "2020-10-22T01:42:26Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrate-develop.sh", "diffHunk": "@@ -0,0 +1,16 @@\n+#!/bin/sh", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNDE5MQ=="}, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzMTA5NQ==", "bodyText": "Ok. But this may complicate writing of rollback scripts.", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r509831095", "createdAt": "2020-10-22T01:46:15Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrations/initial-access-management.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+---\n+databaseChangeLog:\n+  - changeSet:\n+      id: 1\n+      author: surabujin\n+      changes:\n+        - sql: \"INSERT INTO ORole SET name = 'kilda-role', mode = 0, inheritedRole = (SELECT FROM ORole WHERE name = 'writer')\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNTE5Mw=="}, "originalCommit": {"oid": "188c33588919fad8bc977cdab27bd2c7503174ca"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzNTgxNA==", "bodyText": "I was thinking about tags as a solution for automatic rollback procedure, not manual.\nTags can be aligned to docker images, so the database update procedure  performs upgrade/downgrade in one action using the same docker image.\nHere's the scenario how the migration pipeline may look like:\n\ndb-migration images for RC1 and RC2 are built using the git commit hash as the tag.\nDuring RC1 deployment, the database is upgraded and tagged with the RC1 hash.\nDuring RC2 deployment, the database is upgraded and tagged with the RC2 hash.\nDuring RC1 deployment, the database is downgraded with rolling back to the RC1 hash.", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r509835814", "createdAt": "2020-10-22T02:04:46Z", "author": {"login": "sergii-iakovenko"}, "path": "docker/db-migration/migrations/root.yaml", "diffHunk": "@@ -0,0 +1,8 @@\n+---\n+databaseChangeLog:\n+  - changeSet:\n+      id: root-tag\n+      author: surabujin\n+      changes:\n+        - tagDatabase:\n+            tag: history-starting-point", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c61d2cf813255707bee5629832b76c14e63648f"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c61d2cf813255707bee5629832b76c14e63648f", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/2c61d2cf813255707bee5629832b76c14e63648f", "committedDate": "2020-10-20T12:12:37Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "ebc67d041721a3525111ea8717a06829f8bdd1a2", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/ebc67d041721a3525111ea8717a06829f8bdd1a2", "committedDate": "2020-10-22T17:32:29Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjIxODQx", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-515621841", "createdAt": "2020-10-23T12:32:08Z", "commit": {"oid": "ebc67d041721a3525111ea8717a06829f8bdd1a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjMxNTU3", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-515631557", "createdAt": "2020-10-23T12:45:17Z", "commit": {"oid": "ebc67d041721a3525111ea8717a06829f8bdd1a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjo0NToxN1rOHnMS1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjo0NToxN1rOHnMS1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1Nzk0MA==", "bodyText": "odb3 ?", "url": "https://github.com/telstra/open-kilda/pull/3777#discussion_r510857940", "createdAt": "2020-10-23T12:45:17Z", "author": {"login": "sirmax123"}, "path": "docker/db-migration/apply-prehistory-migrations.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/bin/sh\n+#\n+# Copyright 2020 Telstra Open Source\n+#\n+#   Licensed under the Apache License, Version 2.0 (the \"License\");\n+#   you may not use this file except in compliance with the License.\n+#   You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#   Unless required by applicable law or agreed to in writing, software\n+#   distributed under the License is distributed on an \"AS IS\" BASIS,\n+#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#   See the License for the specific language governing permissions and\n+#   limitations under the License.\n+#\n+\n+DB_NAME=\"${KILDA_ORIENTDB_DB_NAME:-kilda}\"\n+DB_HOST=\"${KILDA_ORIENTDB_HOST:-odb3.pendev}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc67d041721a3525111ea8717a06829f8bdd1a2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3835cbf7747acfc7bac69552f512d8444eb5393c", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/3835cbf7747acfc7bac69552f512d8444eb5393c", "committedDate": "2020-10-23T14:11:57Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebc67d041721a3525111ea8717a06829f8bdd1a2", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/ebc67d041721a3525111ea8717a06829f8bdd1a2", "committedDate": "2020-10-22T17:32:29Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}, "afterCommit": {"oid": "3835cbf7747acfc7bac69552f512d8444eb5393c", "author": {"user": {"login": "surabujin", "name": "Dmitriy Bogun"}}, "url": "https://github.com/telstra/open-kilda/commit/3835cbf7747acfc7bac69552f512d8444eb5393c", "committedDate": "2020-10-23T14:11:57Z", "message": "OrientDB schema migration toolset\n\nNew docker container `db_migration` responsible for applying DB\nmigration for devel and for prod environments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzU1MDkw", "url": "https://github.com/telstra/open-kilda/pull/3777#pullrequestreview-515755090", "createdAt": "2020-10-23T15:06:06Z", "commit": {"oid": "3835cbf7747acfc7bac69552f512d8444eb5393c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3790, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}