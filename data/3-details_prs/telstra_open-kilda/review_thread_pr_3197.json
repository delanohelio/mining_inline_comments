{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0Mjg2ODUy", "number": 3197, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo1ODoxNlrODh0vhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo1ODoxNlrODh0vhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzkzNzM0OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo1ODoxNlrOFsxgxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo1ODoxNlrOFsxgxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ5Mjg2OQ==", "bodyText": "I'd appreciate a brief comment about why we expect '5' here. This is not obvious", "url": "https://github.com/telstra/open-kilda/pull/3197#discussion_r382492869", "createdAt": "2020-02-21T09:58:16Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -475,11 +478,17 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n         }\n \n         and: \"Flow is rerouted due to switchUp event\"\n-        //TODO(andriidovhan) specify flow history verification(it is not implemented yet) Reroute reason: switchUp event\n         Wrappers.wait(WAIT_OFFSET / 2) {\n-            assert northbound.getFlowHistory(firstFlow.flowId).findAll { it.action == \"Flow rerouting\" }.size() == 2\n-\n-            assert northbound.getFlowHistory(secondFlow.flowId).findAll { it.action == \"Flow rerouting\" }.size() == 5\n+            def firstFlowHistory = northbound.getFlowHistory(firstFlow.flowId).findAll { it.action == \"Flow rerouting\" }\n+            assert firstFlowHistory.size() == 2\n+            assert firstFlowHistory.find {\n+                it.details == \"Reason: initiated by Reroute topology: Switch '$switchPair1.src.dpId' online\"\n+            }\n+            def secondFlowHistory = northbound.getFlowHistory(secondFlow.flowId).findAll { it.action == \"Flow rerouting\" }\n+            assert secondFlowHistory.findAll { it.action == \"Flow rerouting\" }.size() == 5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecbd80fe93e93d3d49e61efe9197be22a46d4965"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2133, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}