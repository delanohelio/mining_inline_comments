{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyOTk2MzUz", "number": 3186, "title": "Fixed resource allocation.", "bodyText": "Now, when calculating the free resource, we take as a starting value a random value from the specified range. If we could not take a free resource, then we use the minimum value as the initial value.\nCloses: #3047.", "createdAt": "2020-02-10T08:12:43Z", "url": "https://github.com/telstra/open-kilda/pull/3186", "merged": true, "mergeCommit": {"oid": "aacedf3a09d73af77f5073249bfad32062805cd3"}, "closed": true, "closedAt": "2020-03-11T15:17:21Z", "author": {"login": "dpoltavets"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcC7G3rAFqTM1NTgzOTczNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJr_QugBqjMwODc1NDMyNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODM5NzM0", "url": "https://github.com/telstra/open-kilda/pull/3186#pullrequestreview-355839734", "createdAt": "2020-02-10T10:45:50Z", "commit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo0NTo1MFrOFnheQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1OToxMFrOFnh42A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzIwMA==", "bodyText": "Why do we need to inherit this methods? As for me static utils methods are preferable here.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376987200", "createdAt": "2020-02-10T10:45:50Z", "author": {"login": "rozdy"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/flow/resources/ResourcePool.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.share.flow.resources;\n+\n+import java.util.Random;\n+\n+public abstract class ResourcePool {\n+    /**\n+     * Return a random integer value between minValue and maxValue.\n+     */\n+    protected int computeStartValue(int minValue, int maxValue) {\n+        return new Random().ints(1, minValue, maxValue).iterator().nextInt();\n+    }\n+\n+    /**\n+     * Return a random long value between minValue and maxValue.\n+     */\n+    protected long computeStartValue(long minValue, long maxValue) {\n+        return new Random().longs(1, minValue, maxValue).iterator().nextLong();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MTM3NA==", "bodyText": "Please update this section too.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376991374", "createdAt": "2020-02-10T10:53:52Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-api/src/main/java/org/openkilda/persistence/repositories/FlowCookieRepository.java", "diffHunk": "@@ -26,8 +26,9 @@\n      * Find an unmasked cookie which is not assigned to any flow.\n      * Use the provided {@code defaultCookie} as the first candidate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MTk2OQ==", "bodyText": "Update param name here.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376991969", "createdAt": "2020-02-10T10:55:02Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-api/src/main/java/org/openkilda/persistence/repositories/FlowMeterRepository.java", "diffHunk": "@@ -40,8 +40,9 @@\n      * Use the provided {@code defaultMeterId} as the first candidate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MjIyOQ==", "bodyText": "Same here.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376992229", "createdAt": "2020-02-10T10:55:34Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-api/src/main/java/org/openkilda/persistence/repositories/TransitVlanRepository.java", "diffHunk": "@@ -30,8 +30,9 @@\n      * Find a transit vlan which is not assigned to any flow.\n      * Use the provided defaultVlan as the first candidate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MjMzNg==", "bodyText": "And here.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376992336", "createdAt": "2020-02-10T10:55:48Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-api/src/main/java/org/openkilda/persistence/repositories/VxlanRepository.java", "diffHunk": "@@ -28,8 +28,9 @@\n      * Find a vxlan which is not assigned to any flow.\n      * Use the provided defaultVxlan as the first candidate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MzMxNg==", "bodyText": "default_cookie -> min_cookie", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376993316", "createdAt": "2020-02-10T10:57:49Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jFlowCookieRepository.java", "diffHunk": "@@ -52,22 +52,23 @@ public Neo4jFlowCookieRepository(Neo4jSessionFactory sessionFactory, Transaction\n     }\n \n     @Override\n-    public Optional<Long> findUnassignedCookie(long defaultCookie) {\n+    public Optional<Long> findUnassignedCookie(long minCookie, long maxCookie) {\n         Map<String, Object> parameters = ImmutableMap.of(\n-                \"default_cookie\", defaultCookie);\n+                \"min_cookie\", minCookie,\n+                \"max_cookie\", maxCookie);\n \n         // The query returns the default_cookie if it's not used in any flow_cookie,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MzY2Mw==", "bodyText": "default_meter -> min_meter_id", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376993663", "createdAt": "2020-02-10T10:58:29Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jFlowMeterRepository.java", "diffHunk": "@@ -77,24 +77,25 @@ public Neo4jFlowMeterRepository(Neo4jSessionFactory sessionFactory, TransactionM\n     }\n \n     @Override\n-    public Optional<MeterId> findUnassignedMeterId(SwitchId switchId, MeterId defaultMeterId) {\n+    public Optional<MeterId> findUnassignedMeterId(SwitchId switchId, MeterId minMeterId, MeterId maxMeterId) {\n         Map<String, Object> parameters = ImmutableMap.of(\n-                \"default_meter\", defaultMeterId.getValue(),\n+                \"min_meter\", minMeterId.getValue(),\n+                \"max_meter\", maxMeterId.getValue(),\n                 \"switch_id\", switchId.toString()\n         );\n \n         // The query returns the default_meter if it's not used in any flow_meter,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5Mzg1Mw==", "bodyText": "default_vlan -> min_vlan", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376993853", "createdAt": "2020-02-10T10:58:51Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jTransitVlanRepository.java", "diffHunk": "@@ -77,22 +77,23 @@ public Neo4jTransitVlanRepository(Neo4jSessionFactory sessionFactory, Transactio\n     }\n \n     @Override\n-    public Optional<Integer> findUnassignedTransitVlan(int defaultVlan) {\n+    public Optional<Integer> findUnassignedTransitVlan(int minVlan, int maxVlan) {\n         Map<String, Object> parameters = ImmutableMap.of(\n-                \"default_vlan\", defaultVlan);\n+                \"min_vlan\", minVlan,\n+                \"max_vlan\", maxVlan);\n \n         // The query returns the default_vlan if it's not used in any transit_vlan,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5NDAwOA==", "bodyText": "default_vni -> min_vni", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r376994008", "createdAt": "2020-02-10T10:59:10Z", "author": {"login": "rozdy"}, "path": "src-java/kilda-persistence-neo4j/src/main/java/org/openkilda/persistence/repositories/impl/Neo4jVxlanRepository.java", "diffHunk": "@@ -50,22 +50,23 @@ public Neo4jVxlanRepository(Neo4jSessionFactory sessionFactory, TransactionManag\n     }\n \n     @Override\n-    public Optional<Integer> findUnassignedVxlan(int defaultVni) {\n+    public Optional<Integer> findUnassignedVxlan(int minVni, int maxVni) {\n         Map<String, Object> parameters = ImmutableMap.of(\n-                \"default_vni\", defaultVni);\n+                \"min_vni\", minVni,\n+                \"max_vni\", maxVni);\n \n         // The query returns the default_vni if it's not used in any vxlan,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODYwMjI3", "url": "https://github.com/telstra/open-kilda/pull/3186#pullrequestreview-355860227", "createdAt": "2020-02-10T11:20:03Z", "commit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMToyMDowM1rOFnieGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMToyMDo0MFrOFnifCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzU0NQ==", "bodyText": "you removed deallocate() call.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r377003545", "createdAt": "2020-02-10T11:20:03Z", "author": {"login": "niksv"}, "path": "src-java/base-topology/base-storm-topology/src/test/java/org/openkilda/wfm/share/flow/resources/MeterPoolTest.java", "diffHunk": "@@ -56,26 +58,11 @@ public void setUp() {\n \n     @Test\n     public void meterPoolTest() {\n-        long first = meterPool.allocate(SWITCH_ID, FLOW_1, PATH_ID_1).getValue();\n-        assertEquals(31, first);\n-\n-        long second = meterPool.allocate(SWITCH_ID, FLOW_2, PATH_ID_2).getValue();\n-        assertEquals(32, second);\n-\n-        long third = meterPool.allocate(SWITCH_ID, FLOW_3, PATH_ID_3).getValue();\n-        assertEquals(33, third);\n-\n-        meterPool.deallocate(PATH_ID_3);\n-        meterPool.deallocate(PATH_ID_2);\n-\n-        long fourth = meterPool.allocate(SWITCH_ID, \"flow_4\", new PathId(\"path_4\")).getValue();\n-        assertEquals(32, fourth);\n-\n-        long fifth = meterPool.allocate(SWITCH_ID, \"flow_5\", new PathId(\"path_5\")).getValue();\n-        assertEquals(33, fifth);\n-\n-        long sixth = meterPool.allocate(SWITCH_ID, \"flow_6\", new PathId(\"path_6\")).getValue();\n-        assertEquals(34, sixth);\n+        Set<MeterId> cookies = new HashSet<>();\n+        for (int i = 31; i < 41; i++) {\n+            cookies.add(meterPool.allocate(SWITCH_ID, format(\"flow_%d\", i), new PathId(format(\"path_%d\", i))));\n+        }\n+        assertEquals(10, cookies.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzc4Nw==", "bodyText": "you removed deallocate too", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r377003787", "createdAt": "2020-02-10T11:20:40Z", "author": {"login": "niksv"}, "path": "src-java/base-topology/base-storm-topology/src/test/java/org/openkilda/wfm/share/flow/resources/transitvlan/TransitVlanPoolTest.java", "diffHunk": "@@ -49,34 +48,14 @@ public void setUp() {\n     }\n \n     @Test\n-    public void vlanIdPool() {\n-        Flow flow = Flow.builder().flowId(\"flow_1\").srcSwitch(switch1).destSwitch(switch2).build();\n-        int first = transitVlanPool.allocate(flow, new PathId(\"path_1\"), new PathId(\"opposit_1\"))\n-                .getTransitVlan().getVlan();\n-        assertEquals(100, first);\n-\n-        PathId path2 = new PathId(\"path_2\");\n-\n-        flow.setFlowId(\"flow_2\");\n-        int second = transitVlanPool.allocate(flow, path2, new PathId(\"opposit_2\")).getTransitVlan().getVlan();\n-        assertEquals(101, second);\n-\n-        flow.setFlowId(\"flow_3\");\n-        int third = transitVlanPool.allocate(flow, new PathId(\"path_3\"), new PathId(\"opposit_3\"))\n-                .getTransitVlan().getVlan();\n-        assertEquals(102, third);\n-\n-        transitVlanPool.deallocate(path2);\n-\n-        flow.setFlowId(\"flow_4\");\n-        int fourth = transitVlanPool.allocate(flow, new PathId(\"path_4\"), new PathId(\"opposit_4\"))\n-                .getTransitVlan().getVlan();\n-        assertEquals(101, fourth);\n-\n-        flow.setFlowId(\"flow_5\");\n-        int fifth = transitVlanPool.allocate(flow, new PathId(\"path_5\"), new PathId(\"opposit_5\"))\n-                .getTransitVlan().getVlan();\n-        assertEquals(103, fifth);\n+    public void vlanPoolTest() {\n+        for (int i = 100; i <= 110; i++) {\n+            Flow flow = Flow.builder().flowId(format(\"flow_%d\", i)).srcSwitch(switch1).destSwitch(switch2).build();\n+            assertTrue(transitVlanPool.allocate(\n+                    flow,\n+                    new PathId(format(\"path_%d\", i)),\n+                    new PathId(format(\"opposite_dummy_%d\", i))).getTransitVlan().getVlan() > 0);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec5c518643b98a5e33e131821ca2a8e797aa4e01", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/ec5c518643b98a5e33e131821ca2a8e797aa4e01", "committedDate": "2020-02-10T06:48:11Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "eebe309b0467cc896a241faed351b23e6b647fe1", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/eebe309b0467cc896a241faed351b23e6b647fe1", "committedDate": "2020-02-10T11:40:03Z", "message": "Fixed resource allocation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eebe309b0467cc896a241faed351b23e6b647fe1", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/eebe309b0467cc896a241faed351b23e6b647fe1", "committedDate": "2020-02-10T11:40:03Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "3c93eca49f9429b18604dcb63740992af1ed75ce", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/3c93eca49f9429b18604dcb63740992af1ed75ce", "committedDate": "2020-02-10T11:41:52Z", "message": "Fixed resource allocation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODczMDE1", "url": "https://github.com/telstra/open-kilda/pull/3186#pullrequestreview-355873015", "createdAt": "2020-02-10T11:43:19Z", "commit": {"oid": "3c93eca49f9429b18604dcb63740992af1ed75ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c93eca49f9429b18604dcb63740992af1ed75ce", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/3c93eca49f9429b18604dcb63740992af1ed75ce", "committedDate": "2020-02-10T11:41:52Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "dd6cacb56e4e1e0d0a2b345848a949b7e568e97f", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/dd6cacb56e4e1e0d0a2b345848a949b7e568e97f", "committedDate": "2020-02-10T12:34:51Z", "message": "Fixed resource allocation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd6cacb56e4e1e0d0a2b345848a949b7e568e97f", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/dd6cacb56e4e1e0d0a2b345848a949b7e568e97f", "committedDate": "2020-02-10T12:34:51Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "1f1cb93b6f319a553c2902cc594dfb9c9eed2333", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/1f1cb93b6f319a553c2902cc594dfb9c9eed2333", "committedDate": "2020-02-11T05:45:31Z", "message": "Fixed resource allocation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDY4NjE4", "url": "https://github.com/telstra/open-kilda/pull/3186#pullrequestreview-356468618", "createdAt": "2020-02-11T08:14:05Z", "commit": {"oid": "dd6cacb56e4e1e0d0a2b345848a949b7e568e97f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODoxNTo0NVrOFoAFgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODoxNzowNFrOFoAHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4ODc3MQ==", "bodyText": "Please, check my comment about the class.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r377488771", "createdAt": "2020-02-11T08:15:45Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/flow/resources/ResourceUtils.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.share.flow.resources;\n+\n+import java.util.Random;\n+\n+public final class ResourceUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f1cb93b6f319a553c2902cc594dfb9c9eed2333"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4OTIzNg==", "bodyText": "The test became shallow: it doesn't verify the allocated values and doesn't check deallocation. I think additional tests should be added to cover this.", "url": "https://github.com/telstra/open-kilda/pull/3186#discussion_r377489236", "createdAt": "2020-02-11T08:17:04Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/base-topology/base-storm-topology/src/test/java/org/openkilda/wfm/share/flow/resources/CookiePoolTest.java", "diffHunk": "@@ -35,26 +39,16 @@ public void setUp() {\n \n     @Test\n     public void cookiePool() {\n-        long first = cookiePool.allocate(\"flow_1\");\n-        assertEquals(5, first);\n-\n-        long second = cookiePool.allocate(\"flow_2\");\n-        assertEquals(6, second);\n-\n-        long third = cookiePool.allocate(\"flow_3\");\n-        assertEquals(7, third);\n-\n-        cookiePool.deallocate(second);\n-        long fourth = cookiePool.allocate(\"flow_4\");\n-        assertEquals(6, fourth);\n-\n-        long fifth = cookiePool.allocate(\"flow_5\");\n-        assertEquals(8, fifth);\n+        Set<Long> cookies = new HashSet<>();\n+        for (int i = 5; i <= 25; i++) {\n+            cookies.add(cookiePool.allocate(format(\"flow_%d\", i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f1cb93b6f319a553c2902cc594dfb9c9eed2333"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f1cb93b6f319a553c2902cc594dfb9c9eed2333", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/1f1cb93b6f319a553c2902cc594dfb9c9eed2333", "committedDate": "2020-02-11T05:45:31Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "51e4782c92b607f5cbe3dd1f13d2e1bd6e423e20", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/51e4782c92b607f5cbe3dd1f13d2e1bd6e423e20", "committedDate": "2020-02-11T10:12:05Z", "message": "Fixed resource allocation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51e4782c92b607f5cbe3dd1f13d2e1bd6e423e20", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/51e4782c92b607f5cbe3dd1f13d2e1bd6e423e20", "committedDate": "2020-02-11T10:12:05Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "ba21fc88fee4bae9fe4ac8eded07414204412e6d", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/ba21fc88fee4bae9fe4ac8eded07414204412e6d", "committedDate": "2020-02-11T12:10:48Z", "message": "Fixed resource allocation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMTA4MTM2", "url": "https://github.com/telstra/open-kilda/pull/3186#pullrequestreview-360108136", "createdAt": "2020-02-18T07:08:01Z", "commit": {"oid": "ba21fc88fee4bae9fe4ac8eded07414204412e6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e81a9a6d46030e270bad8486e3b200bc09da5f64", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/e81a9a6d46030e270bad8486e3b200bc09da5f64", "committedDate": "2020-03-02T11:26:06Z", "message": "Fixed resource allocation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba21fc88fee4bae9fe4ac8eded07414204412e6d", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/ba21fc88fee4bae9fe4ac8eded07414204412e6d", "committedDate": "2020-02-11T12:10:48Z", "message": "Fixed resource allocation."}, "afterCommit": {"oid": "e81a9a6d46030e270bad8486e3b200bc09da5f64", "author": {"user": {"login": "dpoltavets", "name": "Dmitriy Poltavets"}}, "url": "https://github.com/telstra/open-kilda/commit/e81a9a6d46030e270bad8486e3b200bc09da5f64", "committedDate": "2020-03-02T11:26:06Z", "message": "Fixed resource allocation."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3708, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}