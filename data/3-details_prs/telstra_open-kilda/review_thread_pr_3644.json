{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMzI2MTg1", "number": 3644, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo0NDo0OFrOEQ7d1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo0NDo0OFrOEQ7d1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTg2OTY2OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/main/groovy/org/openkilda/functionaltests/extension/fixture/CleanupVerifierExtension.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo0NDo0OFrOG1Wp7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzoyNjo1M1rOG1_EEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5ODg5Mw==", "bodyText": "it requires OF_13, not noviflow/virtual", "url": "https://github.com/telstra/open-kilda/pull/3644#discussion_r458598893", "createdAt": "2020-07-22T07:44:48Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/main/groovy/org/openkilda/functionaltests/extension/fixture/CleanupVerifierExtension.groovy", "diffHunk": "@@ -49,7 +53,10 @@ class CleanupVerifierExtension extends ContextAwareGlobalExtension {\n                         def validation = northbound.validateSwitch(it.switchId)\n                         validation.verifyRuleSectionsAreEmpty()\n                         validation.verifyMeterSectionsAreEmpty()\n-                        assert northbound.getSwitchRules(it.switchId).flowEntries.find { it.cookie == Cookie.DROP_VERIFICATION_LOOP_RULE_COOKIE }\n+                        def sw = topology.activeSwitches.find { s -> s.dpId == it.switchId }\n+                        if (sw.noviflow || sw.virtual) {\n+                            assert northbound.getSwitchRules(it.switchId).flowEntries.find { it.cookie == Cookie.DROP_VERIFICATION_LOOP_RULE_COOKIE }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a853549d9b6f1af5723185da9f435f8d61f5cfe5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2MDk0NA==", "bodyText": "done", "url": "https://github.com/telstra/open-kilda/pull/3644#discussion_r459260944", "createdAt": "2020-07-23T07:26:53Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/main/groovy/org/openkilda/functionaltests/extension/fixture/CleanupVerifierExtension.groovy", "diffHunk": "@@ -49,7 +53,10 @@ class CleanupVerifierExtension extends ContextAwareGlobalExtension {\n                         def validation = northbound.validateSwitch(it.switchId)\n                         validation.verifyRuleSectionsAreEmpty()\n                         validation.verifyMeterSectionsAreEmpty()\n-                        assert northbound.getSwitchRules(it.switchId).flowEntries.find { it.cookie == Cookie.DROP_VERIFICATION_LOOP_RULE_COOKIE }\n+                        def sw = topology.activeSwitches.find { s -> s.dpId == it.switchId }\n+                        if (sw.noviflow || sw.virtual) {\n+                            assert northbound.getSwitchRules(it.switchId).flowEntries.find { it.cookie == Cookie.DROP_VERIFICATION_LOOP_RULE_COOKIE }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5ODg5Mw=="}, "originalCommit": {"oid": "a853549d9b6f1af5723185da9f435f8d61f5cfe5"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1778, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}