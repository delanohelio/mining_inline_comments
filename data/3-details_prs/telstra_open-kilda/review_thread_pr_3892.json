{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NzgyNDE5", "number": 3892, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0Nzo0NFrOFDBsww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODo1ODo1MFrOFFJihQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzE3ODkxOnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/actions/UpdateRequestAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0Nzo0NFrOICesCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NTozNFrOIFT3bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3MDg1OQ==", "bodyText": "em... can we just use flowRequest.setLoopSwitchId(flow.getLoopSwitchId()) ?\nPS In current shape it will produce unexpected issues if/when we will try to make loops on transit switches.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r539470859", "createdAt": "2020-12-09T16:47:44Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/actions/UpdateRequestAction.java", "diffHunk": "@@ -54,6 +54,12 @@ private void sendUpdateCommand(Flow flow, RequestedFlow targetFlow, String anoth\n         flowRequest.setDestination(\n                 new FlowEndpoint(targetFlow.getDestSwitch(), targetFlow.getDestPort(), targetFlow.getDestVlan()));\n \n+        if (flow.getLoopSwitchId() != null) {\n+            boolean flowLoopedOnSrc = flow.getLoopSwitchId().equals(flow.getSrcSwitchId());\n+            flowRequest.setLoopSwitchId(flowLoopedOnSrc ? flowRequest.getSource().getSwitchId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzOTI3Ng==", "bodyText": "The idea behind this logic was to save flow in \"src-looped\" or \"dest-looped\" state regardless of what switches was source and destination. For flows with loop on transit switches swap operation is undefined for now.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r542439276", "createdAt": "2020-12-14T14:45:34Z", "author": {"login": "rozdy"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/swapendpoints/actions/UpdateRequestAction.java", "diffHunk": "@@ -54,6 +54,12 @@ private void sendUpdateCommand(Flow flow, RequestedFlow targetFlow, String anoth\n         flowRequest.setDestination(\n                 new FlowEndpoint(targetFlow.getDestSwitch(), targetFlow.getDestPort(), targetFlow.getDestVlan()));\n \n+        if (flow.getLoopSwitchId() != null) {\n+            boolean flowLoopedOnSrc = flow.getLoopSwitchId().equals(flow.getSrcSwitchId());\n+            flowRequest.setLoopSwitchId(flowLoopedOnSrc ? flowRequest.getSource().getSwitchId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3MDg1OQ=="}, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzE4OTQ4OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/mapper/RequestedFlowMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0OTo0OVrOICeybg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NzoxNlrOIFT8ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3MjQ5NA==", "bodyText": "mapstruct is able to create mapping by itself if field names match.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r539472494", "createdAt": "2020-12-09T16:49:49Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/mapper/RequestedFlowMapper.java", "diffHunk": "@@ -167,6 +167,7 @@ public PathComputationStrategy mapComputationStrategy(String raw) {\n     @Mapping(target = \"priority\", source = \"priority\")\n     @Mapping(target = \"pinned\", source = \"pinned\")\n     @Mapping(target = \"detectConnectedDevices\", source = \"detectConnectedDevices\")\n+    @Mapping(target = \"loopSwitchId\", source = \"loopSwitchId\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ0MDY0Mw==", "bodyText": "Yes, I know but here all other fields was listed so for similarity reasons I decided to put it here.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r542440643", "createdAt": "2020-12-14T14:47:16Z", "author": {"login": "rozdy"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/mapper/RequestedFlowMapper.java", "diffHunk": "@@ -167,6 +167,7 @@ public PathComputationStrategy mapComputationStrategy(String raw) {\n     @Mapping(target = \"priority\", source = \"priority\")\n     @Mapping(target = \"pinned\", source = \"pinned\")\n     @Mapping(target = \"detectConnectedDevices\", source = \"detectConnectedDevices\")\n+    @Mapping(target = \"loopSwitchId\", source = \"loopSwitchId\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3MjQ5NA=="}, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzIwNjA1OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowUpdateService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo1MzowNlrOICe8kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NzoyNlrOIFT9Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3NTA4OQ==", "bodyText": "We should not emit errors if the loop already exists on requested now flow + endpoint.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r539475089", "createdAt": "2020-12-09T16:53:06Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowUpdateService.java", "diffHunk": "@@ -143,8 +141,12 @@ public void handleCreateFlowLoopRequest(String key, CommandContext commandContex\n         Optional<Flow> flow = flowRepository.findById(request.getFlowId());\n         if (flow.isPresent()) {\n             FlowRequest flowRequest = RequestedFlowMapper.INSTANCE.toFlowRequest(flow.get());\n-            flowRequest.setLoopSwitchId(request.getSwitchId());\n-            handleRequest(key, commandContext, flowRequest);\n+            if (flowRequest.getLoopSwitchId() == null) {\n+                flowRequest.setLoopSwitchId(request.getSwitchId());\n+                handleRequest(key, commandContext, flowRequest);\n+            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ0MDc1NA==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r542440754", "createdAt": "2020-12-14T14:47:26Z", "author": {"login": "rozdy"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowUpdateService.java", "diffHunk": "@@ -143,8 +141,12 @@ public void handleCreateFlowLoopRequest(String key, CommandContext commandContex\n         Optional<Flow> flow = flowRepository.findById(request.getFlowId());\n         if (flow.isPresent()) {\n             FlowRequest flowRequest = RequestedFlowMapper.INSTANCE.toFlowRequest(flow.get());\n-            flowRequest.setLoopSwitchId(request.getSwitchId());\n-            handleRequest(key, commandContext, flowRequest);\n+            if (flowRequest.getLoopSwitchId() == null) {\n+                flowRequest.setLoopSwitchId(request.getSwitchId());\n+                handleRequest(key, commandContext, flowRequest);\n+            } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3NTA4OQ=="}, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzIxMTM1OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowUpdateService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo1NDoxMFrOICe_xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NzozM1rOIFT9kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3NTkxMA==", "bodyText": "\"found\"?", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r539475910", "createdAt": "2020-12-09T16:54:10Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowUpdateService.java", "diffHunk": "@@ -205,6 +207,13 @@ private Message buildFlowNotFoundErrorMessage(String flowId, CommandContext comm\n         return new ErrorMessage(error, commandContext.getCreateTime(), commandContext.getCorrelationId());\n     }\n \n+    private Message buildFlowAlreadyLoopedErrorMessage(FlowRequest flow, CommandContext commandContext) {\n+        String description = String.format(\"Flow is already looped on switch '%s'\", flow.getLoopSwitchId());\n+        ErrorData error = new ErrorData(ErrorType.UNPROCESSABLE_REQUEST,\n+                String.format(\"Can't create flow loop on '%s' found\", flow.getFlowId()), description);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ0MDg0OA==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r542440848", "createdAt": "2020-12-14T14:47:33Z", "author": {"login": "rozdy"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/service/FlowUpdateService.java", "diffHunk": "@@ -205,6 +207,13 @@ private Message buildFlowNotFoundErrorMessage(String flowId, CommandContext comm\n         return new ErrorMessage(error, commandContext.getCreateTime(), commandContext.getCorrelationId());\n     }\n \n+    private Message buildFlowAlreadyLoopedErrorMessage(FlowRequest flow, CommandContext commandContext) {\n+        String description = String.format(\"Flow is already looped on switch '%s'\", flow.getLoopSwitchId());\n+        ErrorData error = new ErrorData(ErrorType.UNPROCESSABLE_REQUEST,\n+                String.format(\"Can't create flow loop on '%s' found\", flow.getFlowId()), description);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3NTkxMA=="}, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzIyNTU1OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/validation/FlowValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo1Njo0N1rOICfIGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0Nzo0MFrOIFT9-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3ODA0Mg==", "bodyText": "flow is not used anymore.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r539478042", "createdAt": "2020-12-09T16:56:47Z", "author": {"login": "surabujin"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/validation/FlowValidator.java", "diffHunk": "@@ -105,22 +105,18 @@ public void validate(RequestedFlow flow, Set<String> bulkUpdateFlowIds)\n     public void validate(Flow flow, RequestedFlow requestedFlow, Set<String> bulkUpdateFlowIds)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ0MDk1Mg==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r542440952", "createdAt": "2020-12-14T14:47:40Z", "author": {"login": "rozdy"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/validation/FlowValidator.java", "diffHunk": "@@ -105,22 +105,18 @@ public void validate(RequestedFlow flow, Set<String> bulkUpdateFlowIds)\n     public void validate(Flow flow, RequestedFlow requestedFlow, Set<String> bulkUpdateFlowIds)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3ODA0Mg=="}, "originalCommit": {"oid": "c493520917997e22c7ffa77e4ba01219bda7b8a2"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTQzNDkzOnYy", "diffSide": "RIGHT", "path": "src-java/stats-topology/stats-storm-topology/src/main/java/org/openkilda/wfm/topology/stats/metrics/FlowMetricGenBolt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODo1ODo1MFrOIFgolA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODo1ODo1MFrOIFgolA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0ODQ2OA==", "bodyText": "ugly look", "url": "https://github.com/telstra/open-kilda/pull/3892#discussion_r542648468", "createdAt": "2020-12-14T18:58:50Z", "author": {"login": "nikitamarchenko"}, "path": "src-java/stats-topology/stats-storm-topology/src/main/java/org/openkilda/wfm/topology/stats/metrics/FlowMetricGenBolt.java", "diffHunk": "@@ -64,7 +65,8 @@ protected void handleInput(Tuple input) throws Exception {\n \n     private void emit(FlowStatsEntry entry, long timestamp, @Nonnull SwitchId switchId,\n                       @Nullable CacheFlowEntry flowEntry) throws FlowCookieException {\n-        boolean isFlowSegmentEntry = new Cookie(entry.getCookie()).getType() == CookieType.SERVICE_OR_FLOW_SEGMENT;\n+        boolean isFlowSegmentEntry = new Cookie(entry.getCookie()).getType() == CookieType.SERVICE_OR_FLOW_SEGMENT\n+                && !new FlowSegmentCookie(entry.getCookie()).isLooped();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80c859b84d6bf077491536b5d36fc93325c6a95"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2342, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}