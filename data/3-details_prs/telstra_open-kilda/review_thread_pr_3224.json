{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NzU0NDU2", "number": 3224, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzozMToxNFrODhhjVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNDo0MDoxMFrODkrVqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDc5MzE3OnYy", "diffSide": "RIGHT", "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/model/FlowDto.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzozMToxNFrOFsTViA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzo0MjozNVrOFsTuGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk5ODQ3Mg==", "bodyText": "why is it array, not list?", "url": "https://github.com/telstra/open-kilda/pull/3224#discussion_r381998472", "createdAt": "2020-02-20T13:31:14Z", "author": {"login": "timofei-durakov"}, "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/model/FlowDto.java", "diffHunk": "@@ -164,6 +164,9 @@\n     @JsonProperty(\"path_computation_strategy\")\n     private PathComputationStrategy pathComputationStrategy;\n \n+    @JsonProperty(\"diverse_with\")\n+    private String[] diverseWith;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a78fb16916cf4ff191847272402c3b7fb726756c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNDc2MQ==", "bodyText": "Changed to Set.", "url": "https://github.com/telstra/open-kilda/pull/3224#discussion_r382004761", "createdAt": "2020-02-20T13:42:35Z", "author": {"login": "dpoltavets"}, "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/model/FlowDto.java", "diffHunk": "@@ -164,6 +164,9 @@\n     @JsonProperty(\"path_computation_strategy\")\n     private PathComputationStrategy pathComputationStrategy;\n \n+    @JsonProperty(\"diverse_with\")\n+    private String[] diverseWith;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk5ODQ3Mg=="}, "originalCommit": {"oid": "a78fb16916cf4ff191847272402c3b7fb726756c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Nzg1Mzg2OnYy", "diffSide": "RIGHT", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/common/actions/FlowProcessingAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNDo0MDoxMFrOFxIceA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMToyNToyMVrOFyP6Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA2MjkwNA==", "bodyText": "Does it make sense to fetch a collection of Flow entities and then return just flow ids? Please, consider a new method in the repository.", "url": "https://github.com/telstra/open-kilda/pull/3224#discussion_r387062904", "createdAt": "2020-03-03T14:40:10Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/common/actions/FlowProcessingAction.java", "diffHunk": "@@ -101,4 +101,11 @@ protected boolean isRemoveCustomerPortSharedCatchRule(String flowId,\n \n         return flowIds.size() == 1 && flowIds.iterator().next().equals(flowId);\n     }\n+\n+    protected Set<String> getDiverseWithFlowIds(Flow flow) {\n+        return flowRepository.findByGroupId(flow.getGroupId()).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7517e2cab3ab821c4bf0c79ee088ae47d223e2f5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMzgxNQ==", "bodyText": "Fixed.", "url": "https://github.com/telstra/open-kilda/pull/3224#discussion_r388233815", "createdAt": "2020-03-05T11:25:21Z", "author": {"login": "dpoltavets"}, "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/common/actions/FlowProcessingAction.java", "diffHunk": "@@ -101,4 +101,11 @@ protected boolean isRemoveCustomerPortSharedCatchRule(String flowId,\n \n         return flowIds.size() == 1 && flowIds.iterator().next().equals(flowId);\n     }\n+\n+    protected Set<String> getDiverseWithFlowIds(Flow flow) {\n+        return flowRepository.findByGroupId(flow.getGroupId()).stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA2MjkwNA=="}, "originalCommit": {"oid": "7517e2cab3ab821c4bf0c79ee088ae47d223e2f5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1988, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}