{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTcyNDA3", "number": 3680, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMjo1NFrOEYdusg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxNDoyMlrOEYdwsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDg4MzcwOnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMjo1NFrOHA0EGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwOTo0NDo1N1rOHBhyLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTA2NQ==", "bodyText": "it just feels that we should save the old values and do a proper comparison here", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r470615065", "createdAt": "2020-08-14T13:12:54Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -940,6 +940,17 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n             it.source.vlanId == newVlanId\n         }\n \n+        and: \"Flow history shows actual info into stateBefore and stateAfter sections\"\n+        def flowHistory = northbound.getFlowHistory(flow.flowId)\n+        with(flowHistory.last().dumps.find { it.type == \"stateBefore\" }){\n+            it.sourcePort != newPortNumber\n+            it.sourceVlan != newVlanId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240ede6e2c1646689c834fa996a3f0e1c677f0c7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2NDE0Mg==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r471364142", "createdAt": "2020-08-17T09:44:57Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -940,6 +940,17 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n             it.source.vlanId == newVlanId\n         }\n \n+        and: \"Flow history shows actual info into stateBefore and stateAfter sections\"\n+        def flowHistory = northbound.getFlowHistory(flow.flowId)\n+        with(flowHistory.last().dumps.find { it.type == \"stateBefore\" }){\n+            it.sourcePort != newPortNumber\n+            it.sourceVlan != newVlanId", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTA2NQ=="}, "originalCommit": {"oid": "240ede6e2c1646689c834fa996a3f0e1c677f0c7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDg4ODgxOnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxNDoyMlrOHA0HPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwOTo0NTowOFrOHBhyqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTg2OA==", "bodyText": "same. You can easily do it if instead of updating original flow you update a copy of it.\ndef updatedFlow = flow.jacksonCopy().tap {...", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r470615868", "createdAt": "2020-08-14T13:14:22Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -104,13 +104,45 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         }\n \n         when: \"Update the created flow\"\n-        flowHelperV2.updateFlow(flow.flowId, flow.tap { it.description = it.description + \"updated\" })\n+        def oldPathCompStrategy = PathComputationStrategy.LATENCY.toString()\n+        def newPathCompStrategy = PathComputationStrategy.COST.toString()\n+        flowHelperV2.updateFlow(flow.flowId, flow.tap {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240ede6e2c1646689c834fa996a3f0e1c677f0c7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2NDI2NA==", "bodyText": "thx, fixed", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r471364264", "createdAt": "2020-08-17T09:45:08Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -104,13 +104,45 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         }\n \n         when: \"Update the created flow\"\n-        flowHelperV2.updateFlow(flow.flowId, flow.tap { it.description = it.description + \"updated\" })\n+        def oldPathCompStrategy = PathComputationStrategy.LATENCY.toString()\n+        def newPathCompStrategy = PathComputationStrategy.COST.toString()\n+        flowHelperV2.updateFlow(flow.flowId, flow.tap {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTg2OA=="}, "originalCommit": {"oid": "240ede6e2c1646689c834fa996a3f0e1c677f0c7"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1799, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}