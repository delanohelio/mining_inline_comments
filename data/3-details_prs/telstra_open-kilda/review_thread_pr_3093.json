{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MTIwMDM0", "number": 3093, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDowMDo0MVrODdn-mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDowMDo0MVrODdn-mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzkwMjk5OnYy", "diffSide": "RIGHT", "path": "services/wfm/src/main/java/org/openkilda/wfm/share/service/SpeakerFlowSegmentRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDowMDo0MVrOFmVWBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjo0ODowMVrOFx1MFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTczOTkwOA==", "bodyText": "Why do we allow to build flow segment requests for \"null\" path?", "url": "https://github.com/telstra/open-kilda/pull/3093#discussion_r375739908", "createdAt": "2020-02-06T10:00:41Z", "author": {"login": "sergii-iakovenko"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/share/service/SpeakerFlowSegmentRequestBuilder.java", "diffHunk": "@@ -103,22 +103,21 @@ public SpeakerFlowSegmentRequestBuilder(FlowResourcesManager resourcesManager) {\n \n         List<FlowSegmentRequestFactory> requests = new ArrayList<>();\n         requests.addAll(makePathRequests(\n-                path, context, encapsulation, doIngress, doTransit, doEgress));\n+                flow, path, context, encapsulation, doIngress, doTransit, doEgress));\n         if (oppositePath != null) {\n-            if (!flow.isOneSwitchFlow() && oppositePath != null) {\n+            if (!flow.isOneSwitchFlow()) {\n                 encapsulation = getEncapsulation(\n                         flow.getEncapsulationType(), oppositePath.getPathId(), path.getPathId());\n             }\n             requests.addAll(makePathRequests(\n-                    oppositePath, context, encapsulation, doIngress, doTransit, doEgress));\n+                    flow, oppositePath, context, encapsulation, doIngress, doTransit, doEgress));\n         }\n         return requests;\n     }\n \n     private List<FlowSegmentRequestFactory> makePathRequests(\n-            @NonNull FlowPath path, CommandContext context, FlowTransitEncapsulation encapsulation,\n+            Flow flow, FlowPath path, CommandContext context, FlowTransitEncapsulation encapsulation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0095184f6861762cf996ab7005a3420a8aa5fda"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5NTk4OA==", "bodyText": "We don't. This is a private method, I have doubts regarding the usefulness of @NonNull annotations for private methods.", "url": "https://github.com/telstra/open-kilda/pull/3093#discussion_r387795988", "createdAt": "2020-03-04T16:48:01Z", "author": {"login": "surabujin"}, "path": "services/wfm/src/main/java/org/openkilda/wfm/share/service/SpeakerFlowSegmentRequestBuilder.java", "diffHunk": "@@ -103,22 +103,21 @@ public SpeakerFlowSegmentRequestBuilder(FlowResourcesManager resourcesManager) {\n \n         List<FlowSegmentRequestFactory> requests = new ArrayList<>();\n         requests.addAll(makePathRequests(\n-                path, context, encapsulation, doIngress, doTransit, doEgress));\n+                flow, path, context, encapsulation, doIngress, doTransit, doEgress));\n         if (oppositePath != null) {\n-            if (!flow.isOneSwitchFlow() && oppositePath != null) {\n+            if (!flow.isOneSwitchFlow()) {\n                 encapsulation = getEncapsulation(\n                         flow.getEncapsulationType(), oppositePath.getPathId(), path.getPathId());\n             }\n             requests.addAll(makePathRequests(\n-                    oppositePath, context, encapsulation, doIngress, doTransit, doEgress));\n+                    flow, oppositePath, context, encapsulation, doIngress, doTransit, doEgress));\n         }\n         return requests;\n     }\n \n     private List<FlowSegmentRequestFactory> makePathRequests(\n-            @NonNull FlowPath path, CommandContext context, FlowTransitEncapsulation encapsulation,\n+            Flow flow, FlowPath path, CommandContext context, FlowTransitEncapsulation encapsulation,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTczOTkwOA=="}, "originalCommit": {"oid": "d0095184f6861762cf996ab7005a3420a8aa5fda"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2164, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}