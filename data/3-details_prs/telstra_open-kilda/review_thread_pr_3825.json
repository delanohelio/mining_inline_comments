{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MzE1OTIw", "number": 3825, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODoxMToyNlrOE1inyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1MTowNFrOE1mflg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTc3MjI0OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODoxMToyNlrOHt3o3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMToyOToyMVrOHt_Dag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg1OTU0OA==", "bodyText": "should be read from config", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517859548", "createdAt": "2020-11-05T08:11:26Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -31,8 +35,12 @@ Main purpose is to detect ISL failure on switch level, which is times faster tha\n controller-involved discovery mechanism\"\"\")\n @Tags([HARDWARE])\n class BfdSpec extends HealthCheckSpecification {\n+    @Autowired\n+    GrpcService grpc\n     @Shared\n     BfdProperties defaultBfdProps = new BfdProperties(350, (short)3)\n+    @Shared\n+    Integer bfdLogPortDelta = 1000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk4MTAzNA==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517981034", "createdAt": "2020-11-05T11:29:21Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -31,8 +35,12 @@ Main purpose is to detect ISL failure on switch level, which is times faster tha\n controller-involved discovery mechanism\"\"\")\n @Tags([HARDWARE])\n class BfdSpec extends HealthCheckSpecification {\n+    @Autowired\n+    GrpcService grpc\n     @Shared\n     BfdProperties defaultBfdProps = new BfdProperties(350, (short)3)\n+    @Shared\n+    Integer bfdLogPortDelta = 1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg1OTU0OA=="}, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjM4NTI2OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo0NToyN1rOHt9hqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTo0Mzo1OFrOHt_jXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjAxMQ==", "bodyText": "def swAddress = northbound.getSwitch(it.dpId).address and remove L85-86", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517956011", "createdAt": "2020-11-05T10:45:27Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk3MjEyNw==", "bodyText": "I would like to leave it as is.\nThese variables are reused in L158 and L165\nIt allows us to reduce the number of requests to northbound.", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517972127", "createdAt": "2020-11-05T11:13:10Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjAxMQ=="}, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk4OTIxMg==", "bodyText": "ah, didn't notice", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517989212", "createdAt": "2020-11-05T11:43:58Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjAxMQ=="}, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjM4ODI3OnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo0NjoxNlrOHt9jmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTowOTowNlrOHt-X1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjUwNA==", "bodyText": "def swLogPort = swPort + bfdLogPortDelta and remove L83-84", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517956504", "createdAt": "2020-11-05T10:46:16Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress\n+            def swPort = sw.dpId == isl.srcSwitch.dpId ? isl.srcPort : isl.dstPort\n+            def swLogPort = sw.dpId == isl.srcSwitch.dpId ? srcSwLogPort : dstSwLogPort", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2OTg3Ng==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517969876", "createdAt": "2020-11-05T11:09:06Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress\n+            def swPort = sw.dpId == isl.srcSwitch.dpId ? isl.srcPort : isl.dstPort\n+            def swLogPort = sw.dpId == isl.srcSwitch.dpId ? srcSwLogPort : dstSwLogPort", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjUwNA=="}, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQwNjYyOnYy", "diffSide": "RIGHT", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1MTowNFrOHt9vTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTowOToxN1rOHt-YSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1OTUwMw==", "bodyText": "please do #3754 of full ticket url. Searching project by just a number is painful", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517959503", "createdAt": "2020-11-05T10:51:04Z", "author": {"login": "rtretyak"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -248,6 +290,24 @@ class BfdSpec extends HealthCheckSpecification {\n             assert northbound.getLink(isl.reversed).state == IslChangeType.FAILED\n         }\n \n+        and: \"BFD logical ports are deleted\"\n+        when: \"Get isl source port\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        grpc.getSwitchLogicalPortConfig(srcSwitchAddress, srcSwLogPort)\n+\n+        then: \"Human readable error is returned, because it was deleted while removing BFD session.\"\n+        def e = thrown(HttpServerErrorException)  // issue 3754", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2OTk5NA==", "bodyText": "fixed", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517969994", "createdAt": "2020-11-05T11:09:17Z", "author": {"login": "andriidovhan"}, "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -248,6 +290,24 @@ class BfdSpec extends HealthCheckSpecification {\n             assert northbound.getLink(isl.reversed).state == IslChangeType.FAILED\n         }\n \n+        and: \"BFD logical ports are deleted\"\n+        when: \"Get isl source port\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        grpc.getSwitchLogicalPortConfig(srcSwitchAddress, srcSwLogPort)\n+\n+        then: \"Human readable error is returned, because it was deleted while removing BFD session.\"\n+        def e = thrown(HttpServerErrorException)  // issue 3754", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1OTUwMw=="}, "originalCommit": {"oid": "fe599324ff50124720f0aa05c2b5d3721484062f"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2263, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}