{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjg5MjUx", "number": 3861, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMToyOToyNFrOFUeHBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMVQyMzo0MzoyMFrOFU_LFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3MDA5MTU2OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/FlowValidationHubBolt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMToyOToyNFrOIcgILQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMToyOToyNFrOIcgILQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc1NzQyMQ==", "bodyText": "should we set deferedShutdownEvent = null here?", "url": "https://github.com/telstra/open-kilda/pull/3861#discussion_r566757421", "createdAt": "2021-01-29T11:29:24Z", "author": {"login": "niksv"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/FlowValidationHubBolt.java", "diffHunk": "@@ -62,7 +68,24 @@ public FlowValidationHubBolt(Config config, PersistenceManager persistenceManage\n     @Override\n     public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {\n         super.prepare(stormConf, context, collector);\n-        service = new FlowValidationHubService(persistenceManager, flowResourcesConfig);\n+        service = new FlowValidationHubService(persistenceManager, flowResourcesConfig,\n+                new FlowValidationHubCarrierImpl(null));\n+    }\n+\n+    @Override\n+    protected void handleLifeCycleEvent(LifecycleEvent event) {\n+        if (event.getSignal().equals(Signal.SHUTDOWN)) {\n+            if (service.deactivate()) {\n+                emit(ZkStreams.ZK.toString(), getCurrentTuple(), new Values(event, getCommandContext()));\n+            } else {\n+                deferedShutdownEvent = event;\n+            }\n+        } else if (event.getSignal().equals(Signal.START)) {\n+            service.activate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fa00fdbc091a6912569243362108017e05ea66"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3MDA5MTg4OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowMeterModifyHubService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMToyOTozMFrOIcgIYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMToyOTozMFrOIcgIYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc1NzQ3Mw==", "bodyText": "can be replaced with\nactive = false;\nreturn fsms.isEmpty();", "url": "https://github.com/telstra/open-kilda/pull/3861#discussion_r566757473", "createdAt": "2021-01-29T11:29:30Z", "author": {"login": "niksv"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowMeterModifyHubService.java", "diffHunk": "@@ -110,6 +112,26 @@ private void process(FlowMeterModifyFsm fsm) {\n \n         if (exitStates.contains(fsm.getCurrentState())) {\n             fsms.remove(fsm.getKey());\n+            if (fsms.isEmpty() && !active) {\n+                defaultCarrier.sendInactive();\n+            }\n         }\n     }\n+\n+\n+    /**\n+     * Deactivates service.\n+     */\n+    public boolean deactivate() {\n+        active = false;\n+        if (fsms.isEmpty()) {\n+            return true;\n+        }\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fa00fdbc091a6912569243362108017e05ea66"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3NTQ5ODYwOnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/NbWorkerTopology.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMVQyMzozMjoyNFrOIdNnPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMVQyMzozMjoyNFrOIdNnPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzUwMjY1Mw==", "bodyText": "Does it make sense to introduce a dedicated \"build\" method instead of repeating \"getZkTopoName(), getConfig().getBlueGreenMode()\" each time?", "url": "https://github.com/telstra/open-kilda/pull/3861#discussion_r567502653", "createdAt": "2021-01-31T23:32:24Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/NbWorkerTopology.java", "diffHunk": "@@ -239,45 +260,58 @@ public StormTopology createTopology() {\n                 .shuffleGrouping(SWITCHES_BOLT_NAME, StreamType.DISCO.toString())\n                 .shuffleGrouping(FEATURE_TOGGLES_BOLT_NAME, FeatureTogglesBolt.STREAM_NOTIFICATION_ID);\n \n-        KafkaBolt kafkaNbBolt = buildKafkaBolt(topologyConfig.getKafkaNorthboundTopic());\n+        KafkaBolt kafkaNbBolt = buildKafkaBolt(topologyConfig.getKafkaNorthboundTopic(),\n+                getZkTopoName(), getConfig().getBlueGreenMode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fa00fdbc091a6912569243362108017e05ea66"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3NTUwODcxOnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/FlowValidationHubBolt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMVQyMzo0MzoyMFrOIdNsWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMVQyMzo0MzoyMFrOIdNsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzUwMzk2Mw==", "bodyText": "Could we introduce a default constructor instead of passing null? Currently, it's ambiguous and not clear why null.", "url": "https://github.com/telstra/open-kilda/pull/3861#discussion_r567503963", "createdAt": "2021-01-31T23:43:20Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/FlowValidationHubBolt.java", "diffHunk": "@@ -62,7 +68,24 @@ public FlowValidationHubBolt(Config config, PersistenceManager persistenceManage\n     @Override\n     public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {\n         super.prepare(stormConf, context, collector);\n-        service = new FlowValidationHubService(persistenceManager, flowResourcesConfig);\n+        service = new FlowValidationHubService(persistenceManager, flowResourcesConfig,\n+                new FlowValidationHubCarrierImpl(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fa00fdbc091a6912569243362108017e05ea66"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2296, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}