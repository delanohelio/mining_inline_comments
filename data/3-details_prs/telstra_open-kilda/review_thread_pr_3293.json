{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MTY4MjU1", "number": 3293, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoxODo0NlrODoTfBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOToxMjoyM1rODqs6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTg4ODY4OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/FlowOperationsBolt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoxODo0NlrOF2xVRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoxODo0NlrOF2xVRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3NTY4Nw==", "bodyText": "I think error message is wrong.\nconnected devices", "url": "https://github.com/telstra/open-kilda/pull/3293#discussion_r392975687", "createdAt": "2020-03-16T12:18:46Z", "author": {"login": "niksv"}, "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/FlowOperationsBolt.java", "diffHunk": "@@ -237,6 +243,25 @@ public void init() {\n         return Collections.singletonList(response);\n     }\n \n+    private List<FlowResponse> processFlowReadRequest(FlowReadRequest readRequest) {\n+        try {\n+            Flow f = flowOperationsService.getFlow(readRequest.getFlowId());\n+            FlowDto dto = FlowMapper.INSTANCE.map(f);\n+            FlowResponse response = new FlowResponse(dto);\n+            return Collections.singletonList(response);\n+        } catch (FlowNotFoundException e) {\n+            throw new MessageException(ErrorType.NOT_FOUND, e.getMessage(),\n+                    \"Could not get connected devices for non existent flow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c218f069a3ad42fe25f13a02f31addcdca74fa3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTg5MzE5OnYy", "diffSide": "RIGHT", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/FlowControllerV2.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoyMDoxMFrOF2xX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoyMDoxMFrOF2xX9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3NjM3Mw==", "bodyText": "flow-id please use flow_id like in other V2 API", "url": "https://github.com/telstra/open-kilda/pull/3293#discussion_r392976373", "createdAt": "2020-03-16T12:20:10Z", "author": {"login": "niksv"}, "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/FlowControllerV2.java", "diffHunk": "@@ -78,6 +81,31 @@\n         return flowService.deleteFlowV2(flowId);\n     }\n \n+    /**\n+     * Gets flow.\n+     *\n+     * @param flowId        flow id\n+     * @return flow\n+     */\n+    @ApiOperation(value = \"Gets flow\", response = FlowResponsePayload.class)\n+    @GetMapping(value = \"/{flow-id:.+}\")\n+    @ResponseStatus(HttpStatus.OK)\n+    public CompletableFuture<FlowResponseV2> getFlow(@PathVariable(name = \"flow-id\") String flowId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c218f069a3ad42fe25f13a02f31addcdca74fa3"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzY3MTIyOnYy", "diffSide": "RIGHT", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/FlowControllerV2.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDoxNDo1N1rOF3-TCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDoxNDo1N1rOF3-TCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIzNjY4MQ==", "bodyText": "FlowResponseV2", "url": "https://github.com/telstra/open-kilda/pull/3293#discussion_r394236681", "createdAt": "2020-03-18T10:14:57Z", "author": {"login": "rtretyak"}, "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/FlowControllerV2.java", "diffHunk": "@@ -78,6 +82,43 @@\n         return flowService.deleteFlowV2(flowId);\n     }\n \n+    /**\n+     * Gets flow.\n+     *\n+     * @param flowId        flow id\n+     * @return flow\n+     */\n+    @ApiOperation(value = \"Gets flow\", response = FlowResponsePayload.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d839f8563ef8b8fac55238a5dd7965bfff6c308"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzY3MjA2OnYy", "diffSide": "RIGHT", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/FlowControllerV2.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDoxNToxM1rOF3-TnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDoxNToxM1rOF3-TnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIzNjgyOA==", "bodyText": "FlowResponseV2", "url": "https://github.com/telstra/open-kilda/pull/3293#discussion_r394236828", "createdAt": "2020-03-18T10:15:13Z", "author": {"login": "rtretyak"}, "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/FlowControllerV2.java", "diffHunk": "@@ -78,6 +82,43 @@\n         return flowService.deleteFlowV2(flowId);\n     }\n \n+    /**\n+     * Gets flow.\n+     *\n+     * @param flowId        flow id\n+     * @return flow\n+     */\n+    @ApiOperation(value = \"Gets flow\", response = FlowResponsePayload.class)\n+    @GetMapping(value = \"/{flow_id:.+}\")\n+    @ResponseStatus(HttpStatus.OK)\n+    public CompletableFuture<FlowResponseV2> getFlow(@PathVariable(name = \"flow_id\") String flowId) {\n+        return flowService.getFlowV2(flowId);\n+    }\n+\n+    /**\n+     * Dumps all flows. Dumps all flows with specific status if specified.\n+     *\n+     * @return list of flow\n+     */\n+    @ApiOperation(value = \"Dumps all flows\", response = FlowResponsePayload.class, responseContainer = \"List\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d839f8563ef8b8fac55238a5dd7965bfff6c308"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDk4OTg1OnYy", "diffSide": "RIGHT", "path": "src-java/nbworker-topology/nbworker-messaging/src/main/java/org/openkilda/messaging/nbtopology/request/FlowReadRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTowMjoyM1rOF6mnWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTowMjoyM1rOF6mnWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5NDM5Mg==", "bodyText": "nit: as per the convention, it should be \"flow_id\"", "url": "https://github.com/telstra/open-kilda/pull/3293#discussion_r396994392", "createdAt": "2020-03-24T09:02:23Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/nbworker-topology/nbworker-messaging/src/main/java/org/openkilda/messaging/nbtopology/request/FlowReadRequest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.messaging.nbtopology.request;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.EqualsAndHashCode;\n+import lombok.Value;\n+\n+/**\n+ * Represents flow read northbound request.\n+ */\n+@Value\n+@EqualsAndHashCode(callSuper = false)\n+public class FlowReadRequest extends FlowsBaseRequest {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @JsonProperty(\"flowid\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2d1c095fb949b6ab3fe710ba56af82bace6585"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTAyNjExOnYy", "diffSide": "RIGHT", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOToxMjoyM1rOF6m-FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOToxMjoyM1rOF6m-FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAwMDIxMg==", "bodyText": "nit: does it make sense to have a dedicated mapper for PathStatus?", "url": "https://github.com/telstra/open-kilda/pull/3293#discussion_r397000212", "createdAt": "2020-03-24T09:12:23Z", "author": {"login": "sergii-iakovenko"}, "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java", "diffHunk": "@@ -215,9 +219,13 @@ default String encodeFlowState(FlowState state) {\n         return state.getState();\n     }\n \n+    @Mapping(target = \"mainPath\", source = \"mainFlowPathStatus\")\n+    @Mapping(target = \"protectedPath\", source = \"protectedFlowPathStatus\")\n+    PathStatus map(FlowStatusDetails flowStatusDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2d1c095fb949b6ab3fe710ba56af82bace6585"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2010, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}