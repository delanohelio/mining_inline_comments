{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTQ1ODc1", "number": 1236, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDo0MDoxOFrODbxD1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDo0MDoxOFrODbxD1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDQxOTQzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/AlwaysEncrypted/AESetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDo0MDoxOFrOFjcRog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDo0MDoxOFrOFjcRog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcwNzc0Ng==", "bodyText": "whats the localhost check for?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1236#discussion_r372707746", "createdAt": "2020-01-30T00:40:18Z", "author": {"login": "ulvii"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/AlwaysEncrypted/AESetup.java", "diffHunk": "@@ -169,33 +147,71 @@ public AESetup(String serverName, String url, String protocol) throws Exception\n             \"PlainDecimal decimal(30)\", \"PlainNumeric numeric(30)\"};\n \n     /**\n-     * Create connection, statement and generate path of resource file\n+     * This provides the arguments (serverName, enclaveAttestationUrl, enclaveAttestationProtocol) for the parameterized\n+     * tests using MethodSource parameters\n      * \n+     * @return\n      * @throws Exception\n      */\n-    @BeforeAll\n-    public static void setupAE() throws Exception {\n+    public static String[][] enclaveParams() throws Exception {\n+        setup();\n+\n+        String[][] param = new String[AbstractTest.enclaveServer.length][3];\n+\n+        for (int i = 0; i < enclaveServer.length; i++) {\n+            param[i][0] = enclaveServer[i];\n+            param[i][1] = null != enclaveAttestationUrl ? enclaveAttestationUrl[i] : null;\n+            param[i][2] = null != enclaveAttestationProtocol ? enclaveAttestationProtocol[i] : null;\n+        }\n+\n+        return param;\n+    }\n+\n+    /**\n+     * Get the AE connection string\n+     * \n+     * @param serverName\n+     * @param url\n+     * @param protocol\n+     */\n+    void setAEConnectionString(String serverName, String url, String protocol) {\n         // skip CI unix tests with localhost servers\n         if (!connectionString.substring(Constants.JDBC_PREFIX.length()).split(Constants.SEMI_COLON)[0]\n-                .contains(\"localhost\") && null != enclaveServer) {\n+                .contains(\"localhost\") && null != serverName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5053086e1170a867585da93fbaa8ba05c4a86f2f"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1189, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}