{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MTc0MTAz", "number": 1421, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowNzoxNVrOEhYOiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowNzoxNVrOEhYOiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDM1NDAzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/BulkCopyRowSetTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowNzoxNVrOHOqYvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToxNzo0OFrOHOqtTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNjU3Mg==", "bodyText": "Need to read from the table here to make sure the data is inserted correctly.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1421#discussion_r485136572", "createdAt": "2020-09-08T19:07:15Z", "author": {"login": "ulvii"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/BulkCopyRowSetTest.java", "diffHunk": "@@ -71,18 +73,44 @@ public void testBulkCopyFloatRowSet() throws SQLException {\n         }\r\n     }\r\n \r\n+    @Test\r\n+    public void testBulkCopyJapaneseCollation() throws SQLException {\r\n+        try (Connection con = getConnection(); Statement stmt = connection.createStatement();\r\n+                SQLServerBulkCopy bulkCopy = new SQLServerBulkCopy(con);) {\r\n+            RowSetFactory rsf = RowSetProvider.newFactory();\r\n+            CachedRowSet crs = rsf.createCachedRowSet();\r\n+            RowSetMetaData rsmd = new RowSetMetaDataImpl();\r\n+            rsmd.setColumnCount(1);\r\n+            rsmd.setColumnName(1, \"c1\");\r\n+            rsmd.setColumnType(1, java.sql.Types.VARCHAR);\r\n+            rsmd.setTableName(1, tableName2);\r\n+\r\n+            crs.setMetaData(rsmd);\r\n+            crs.moveToInsertRow();\r\n+            crs.updateString(\"c1\", \"\u3042\u3042\");\r\n+            crs.insertRow();\r\n+            crs.moveToCurrentRow();\r\n+\r\n+            bulkCopy.setDestinationTableName(tableName2);\r\n+            bulkCopy.writeToServer(crs);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "775516e9b32294c1dfe4e91a8288b01f54dc7930"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MTgzOQ==", "bodyText": "Thanks, updated.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1421#discussion_r485141839", "createdAt": "2020-09-08T19:17:48Z", "author": {"login": "peterbae"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/BulkCopyRowSetTest.java", "diffHunk": "@@ -71,18 +73,44 @@ public void testBulkCopyFloatRowSet() throws SQLException {\n         }\r\n     }\r\n \r\n+    @Test\r\n+    public void testBulkCopyJapaneseCollation() throws SQLException {\r\n+        try (Connection con = getConnection(); Statement stmt = connection.createStatement();\r\n+                SQLServerBulkCopy bulkCopy = new SQLServerBulkCopy(con);) {\r\n+            RowSetFactory rsf = RowSetProvider.newFactory();\r\n+            CachedRowSet crs = rsf.createCachedRowSet();\r\n+            RowSetMetaData rsmd = new RowSetMetaDataImpl();\r\n+            rsmd.setColumnCount(1);\r\n+            rsmd.setColumnName(1, \"c1\");\r\n+            rsmd.setColumnType(1, java.sql.Types.VARCHAR);\r\n+            rsmd.setTableName(1, tableName2);\r\n+\r\n+            crs.setMetaData(rsmd);\r\n+            crs.moveToInsertRow();\r\n+            crs.updateString(\"c1\", \"\u3042\u3042\");\r\n+            crs.insertRow();\r\n+            crs.moveToCurrentRow();\r\n+\r\n+            bulkCopy.setDestinationTableName(tableName2);\r\n+            bulkCopy.writeToServer(crs);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNjU3Mg=="}, "originalCommit": {"oid": "775516e9b32294c1dfe4e91a8288b01f54dc7930"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1161, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}