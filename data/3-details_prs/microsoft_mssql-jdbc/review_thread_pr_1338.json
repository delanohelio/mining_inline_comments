{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTE5NTkz", "number": 1338, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMjozNDozN1rOEFNISQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMDoxNzo0MFrOEFN36A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODkzNDQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/resultset/DataClassificationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMjozNDozN1rOGjTMmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTo1Nzo1OFrOGl-McQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2Nzg2Nw==", "bodyText": "I think Azure now has DataClassification support. Could you remov Azure tags from tests and check if they pass?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439667867", "createdAt": "2020-06-12T22:34:37Z", "author": {"login": "ulvii"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/resultset/DataClassificationTest.java", "diffHunk": "@@ -10,13 +10,19 @@\n import java.sql.Statement;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ2OTQ4OQ==", "bodyText": "? yes it's supported and had been removed and tested. The only place that has these tags is in the negative test", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r442469489", "createdAt": "2020-06-18T19:57:58Z", "author": {"login": "lilgreenbird"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/resultset/DataClassificationTest.java", "diffHunk": "@@ -10,13 +10,19 @@\n import java.sql.Statement;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2Nzg2Nw=="}, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTAzNzY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzo1ODoxMVrOGjUK3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzo1ODoxMVrOGjUK3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4MzgwNQ==", "bodyText": "Make values() static array for better performance. See #1065 for reference.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439683805", "createdAt": "2020-06-12T23:58:11Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java", "diffHunk": "@@ -455,6 +455,35 @@ public String toString() {\n }\n \n \n+enum SensitivityRank {\n+    NOT_DEFINED(-1),\n+    NONE(0),\n+    LOW(10),\n+    MEDIUM(20),\n+    HIGH(30),\n+    CRITICAL(40);\n+\n+    private int rank;\n+\n+    private SensitivityRank(int rank) {\n+        this.rank = rank;\n+    }\n+\n+    public int getValue() {\n+        return rank;\n+    }\n+\n+    static boolean isValid(int rank) throws SQLServerException {\n+        for (SensitivityRank r : SensitivityRank.values()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTA1MTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/StreamColumns.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMDoxMjoxMFrOGjUTEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTozMDo1M1rOGl9Q2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NTkwNg==", "bodyText": "If getServerSupportedDataClassificationVersion is 1, the driver will still read the rank. Don't we want to read rank only if the version is at least 2?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439685906", "createdAt": "2020-06-13T00:12:10Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/StreamColumns.java", "diffHunk": "@@ -259,55 +259,73 @@ private SensitivityClassification processDataClassification(TDSReader tdsReader)\n         SensitivityClassification sensitivityClassification = null;\n \n         // get the label count\n-        int numLabels = tdsReader.readUnsignedShort();\n-        List<Label> labels = new ArrayList<Label>(numLabels);\n+        int sensitivityLabelCount = tdsReader.readUnsignedShort();\n+        List<Label> sensitivityLabels = new ArrayList<Label>(sensitivityLabelCount);\n \n-        for (int i = 0; i < numLabels; i++) {\n-            labels.add(readSensitivityLabel(tdsReader));\n+        for (int i = 0; i < sensitivityLabelCount; i++) {\n+            sensitivityLabels.add(readSensitivityLabel(tdsReader));\n         }\n \n         // get the information type count\n-        int numInformationTypes = tdsReader.readUnsignedShort();\n+        int informationTypeCount = tdsReader.readUnsignedShort();\n \n-        List<InformationType> informationTypes = new ArrayList<InformationType>(numInformationTypes);\n-        for (int i = 0; i < numInformationTypes; i++) {\n+        List<InformationType> informationTypes = new ArrayList<InformationType>(informationTypeCount);\n+        for (int i = 0; i < informationTypeCount; i++) {\n             informationTypes.add(readSensitivityInformationType(tdsReader));\n         }\n \n+        int sensitivityRank = SensitivityRank.NOT_DEFINED.getValue();\n+        if (TDS.MAX_SUPPORTED_DATA_CLASSIFICATION_VERSION <= tdsReader.getServerSupportedDataClassificationVersion()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwOTQ3Nw==", "bodyText": "No, it looks like if getServerSupportedDataClassificationVersion is 1, then we won't read the rank because 2 <= 1 is false?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r441909477", "createdAt": "2020-06-18T00:52:33Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/StreamColumns.java", "diffHunk": "@@ -259,55 +259,73 @@ private SensitivityClassification processDataClassification(TDSReader tdsReader)\n         SensitivityClassification sensitivityClassification = null;\n \n         // get the label count\n-        int numLabels = tdsReader.readUnsignedShort();\n-        List<Label> labels = new ArrayList<Label>(numLabels);\n+        int sensitivityLabelCount = tdsReader.readUnsignedShort();\n+        List<Label> sensitivityLabels = new ArrayList<Label>(sensitivityLabelCount);\n \n-        for (int i = 0; i < numLabels; i++) {\n-            labels.add(readSensitivityLabel(tdsReader));\n+        for (int i = 0; i < sensitivityLabelCount; i++) {\n+            sensitivityLabels.add(readSensitivityLabel(tdsReader));\n         }\n \n         // get the information type count\n-        int numInformationTypes = tdsReader.readUnsignedShort();\n+        int informationTypeCount = tdsReader.readUnsignedShort();\n \n-        List<InformationType> informationTypes = new ArrayList<InformationType>(numInformationTypes);\n-        for (int i = 0; i < numInformationTypes; i++) {\n+        List<InformationType> informationTypes = new ArrayList<InformationType>(informationTypeCount);\n+        for (int i = 0; i < informationTypeCount; i++) {\n             informationTypes.add(readSensitivityInformationType(tdsReader));\n         }\n \n+        int sensitivityRank = SensitivityRank.NOT_DEFINED.getValue();\n+        if (TDS.MAX_SUPPORTED_DATA_CLASSIFICATION_VERSION <= tdsReader.getServerSupportedDataClassificationVersion()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NTkwNg=="}, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ1NDIzMw==", "bodyText": "yes, what @peterbae said", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r442454233", "createdAt": "2020-06-18T19:30:53Z", "author": {"login": "lilgreenbird"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/StreamColumns.java", "diffHunk": "@@ -259,55 +259,73 @@ private SensitivityClassification processDataClassification(TDSReader tdsReader)\n         SensitivityClassification sensitivityClassification = null;\n \n         // get the label count\n-        int numLabels = tdsReader.readUnsignedShort();\n-        List<Label> labels = new ArrayList<Label>(numLabels);\n+        int sensitivityLabelCount = tdsReader.readUnsignedShort();\n+        List<Label> sensitivityLabels = new ArrayList<Label>(sensitivityLabelCount);\n \n-        for (int i = 0; i < numLabels; i++) {\n-            labels.add(readSensitivityLabel(tdsReader));\n+        for (int i = 0; i < sensitivityLabelCount; i++) {\n+            sensitivityLabels.add(readSensitivityLabel(tdsReader));\n         }\n \n         // get the information type count\n-        int numInformationTypes = tdsReader.readUnsignedShort();\n+        int informationTypeCount = tdsReader.readUnsignedShort();\n \n-        List<InformationType> informationTypes = new ArrayList<InformationType>(numInformationTypes);\n-        for (int i = 0; i < numInformationTypes; i++) {\n+        List<InformationType> informationTypes = new ArrayList<InformationType>(informationTypeCount);\n+        for (int i = 0; i < informationTypeCount; i++) {\n             informationTypes.add(readSensitivityInformationType(tdsReader));\n         }\n \n+        int sensitivityRank = SensitivityRank.NOT_DEFINED.getValue();\n+        if (TDS.MAX_SUPPORTED_DATA_CLASSIFICATION_VERSION <= tdsReader.getServerSupportedDataClassificationVersion()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NTkwNg=="}, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTA1NjQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMDoxNzo0MFrOGjUWAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMDoxNzo0MFrOGjUWAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NjY1OA==", "bodyText": "This is a breaking change! I suggest to create another constructor instead.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439686658", "createdAt": "2020-06-13T00:17:40Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java", "diffHunk": "@@ -19,10 +20,13 @@\n      *        Label as received from SQL Server for this SensitivityProperty\n      * @param informationType\n      *        InformationType as received from SQL Server for this SensitivityProperty\n+     * @param sensitivityRank\n+     *        sensitivity rank as received from SQL Server for this SensitivityProperty\n      */\n-    public SensitivityProperty(Label label, InformationType informationType) {\n+    public SensitivityProperty(Label label, InformationType informationType, int sensitivityRank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1096, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}