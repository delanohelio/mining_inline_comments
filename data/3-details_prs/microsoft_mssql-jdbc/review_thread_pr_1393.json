{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NTIxNTE1", "number": 1393, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzo1MDo1MVrOEc0Odw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDoyOToyM1rOEc2oaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjUxMjU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/callablestatement/CallableStatementTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzo1MDo1MVrOHHk0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzo1MDo1MVrOHHk0yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcwNTQxNg==", "bodyText": "Please keep the imports as it is.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1393#discussion_r477705416", "createdAt": "2020-08-26T23:50:51Z", "author": {"login": "ulvii"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/callablestatement/CallableStatementTest.java", "diffHunk": "@@ -3,13 +3,12 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.fail;\n \n-import java.sql.CallableStatement;\n-import java.sql.Connection;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.sql.Statement;\n-import java.sql.Types;\n+import java.sql.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e47fdeb17b64059a17b826d47c126b736d07d196"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjU5NTYwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/callablestatement/CallableStatementTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDowMDoxNlrOHHlrjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDowMDoxNlrOHHlrjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcxOTQzOQ==", "bodyText": "Make sure to drop this procedure in cleanup() method.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1393#discussion_r477719439", "createdAt": "2020-08-27T00:00:16Z", "author": {"login": "ulvii"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/callablestatement/CallableStatementTest.java", "diffHunk": "@@ -207,4 +248,11 @@ private static void createInputParamsProcedure(Statement stmt) throws SQLExcepti\n \n         stmt.execute(sql);\n     }\n+\n+    private static void createGetObjectLocalDateTimeProcedure(Statement stmt) throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e47fdeb17b64059a17b826d47c126b736d07d196"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjY2NTg5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/callablestatement/CallableStatementTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDowNzowN1rOHHmbLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDowNzowN1rOHHmbLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzczMTYyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void getObjectAsLocalDateTime() throws SQLException {\n          \n          \n            \n                public void testGetObjectAsLocalDateTime() throws SQLException {", "url": "https://github.com/microsoft/mssql-jdbc/pull/1393#discussion_r477731629", "createdAt": "2020-08-27T00:07:07Z", "author": {"login": "ulvii"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/callablestatement/CallableStatementTest.java", "diffHunk": "@@ -123,6 +125,45 @@ public void getSetNullWithTypeVarchar() throws SQLException {\n         }\n     }\n \n+\n+    /**\n+     * Tests getObject(n, java.time.LocalDateTime.class).\n+     *\n+     * @throws SQLException\n+     */\n+    @Test\n+    public void getObjectAsLocalDateTime() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e47fdeb17b64059a17b826d47c126b736d07d196"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjkwNjY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerCallableStatement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDoyOToyM1rOHHo-Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDoyOToyM1rOHHo-Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzc3MzMxOQ==", "bodyText": "While you're at it, could you also copy over the code for OffsetDateTime and OffsetTime from SQLServerResultSet?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1393#discussion_r477773319", "createdAt": "2020-08-27T00:29:23Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerCallableStatement.java", "diffHunk": "@@ -740,6 +741,20 @@ public Object getObject(int index) throws SQLServerException {\n             returnValue = getTime(index);\n         } else if (type == java.sql.Timestamp.class) {\n             returnValue = getTimestamp(index);\n+        } else if (type == java.time.LocalDateTime.class || type == java.time.LocalDate.class\n+                || type == java.time.LocalTime.class) {\n+            java.time.LocalDateTime ldt = getLocalDateTime(index);\n+            if (null == ldt) {\n+                returnValue = null;\n+            } else {\n+                if (type == java.time.LocalDateTime.class) {\n+                    returnValue = ldt;\n+                } else if (type == java.time.LocalDate.class) {\n+                    returnValue = ldt.toLocalDate();\n+                } else {\n+                    returnValue = ldt.toLocalTime();\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c274f47208ad38e942fbfcd3de7ec84e25beacbc"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1138, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}