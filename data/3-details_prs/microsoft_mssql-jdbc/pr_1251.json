{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTg1NTEy", "number": 1251, "title": "Fix bracket escaping in Util.parseUrl()", "bodyText": "Fixes #1188", "createdAt": "2020-02-04T18:27:09Z", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251", "merged": true, "mergeCommit": {"oid": "ff55ef43ec5a9338743a0452a0cc6c30cca09901"}, "closed": true, "closedAt": "2020-03-27T23:38:15Z", "author": {"login": "peterbae"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBFymYAH2gAyMzcwOTg1NTEyOjFiNGM3YjYwYjBjYTc5MDM2ODk4ODkwM2RkN2U3OTIxMWU4OGViMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR4mt1AFqTM4MzIzNzg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b4c7b60b0ca790368988903dd7e79211e88eb30", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/1b4c7b60b0ca790368988903dd7e79211e88eb30", "committedDate": "2020-02-04T18:24:48Z", "message": "github 1188"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/5b1fc02b3f7f222edaedfbc6e550635242294536", "committedDate": "2020-02-04T18:26:36Z", "message": "remove unnecessary method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NTc5OTY5", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#pullrequestreview-358579969", "createdAt": "2020-02-13T21:55:24Z", "commit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1NToyNFrOFpk7LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1NToyNFrOFpk7LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MDkwOA==", "bodyText": "just nit-picking...instead of so many ident levels why not just &&?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#discussion_r379140908", "createdAt": "2020-02-13T21:55:24Z", "author": {"login": "lilgreenbird"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/Util.java", "diffHunk": "@@ -416,29 +416,42 @@ else if (ch == ':')\n                     break;\n                 }\n                 case inEscapedValueStart: {\n-                    if (ch == '}') {\n-                        // no trimming use the value as it is.\n-                        name = SQLServerDriver.getNormalizedPropertyName(name, logger);\n-                        if (null != name) {\n-                            if (logger.isLoggable(Level.FINE)) {\n-                                if (!name.equals(SQLServerDriverStringProperty.USER.toString())\n-                                        && !name.equals(SQLServerDriverStringProperty.PASSWORD.toString()))\n-                                    logger.fine(\"Property:\" + name + \" Value:\" + value);\n-                            }\n-                            p.put(name, value);\n-                        }\n-\n-                        name = \"\";\n-                        value = \"\";\n-                        // to eat the spaces until the ; potentially we could do without the state but\n-                        // it would not be clean\n-                        state = inEscapedValueEnd;\n-                    } else {\n+                    // check for escaped }.\n+                    // when we see a }, first check to see if this is before the end of the string to avoid index out of range exception\n+                    // then check if the character immediately after is also a }.\n+                    // if it is, then we have a }}, which is not the closing of the escaped state.\n+                    if (ch == '}' && i + 1 <= tmpUrl.trim().length() && tmpUrl.charAt(i + 1) == '}') {\n                         builder = new StringBuilder();\n                         builder.append(value);\n                         builder.append(ch);\n                         value = builder.toString();\n+                        i++; // escaped }} into a }, so increment the counter once more\n                         // same state\n+                    } else {\n+                        if (ch == '}') {\n+                            // no trimming use the value as it is.\n+                            name = SQLServerDriver.getNormalizedPropertyName(name, logger);\n+                            if (null != name) {\n+                                if (logger.isLoggable(Level.FINE)) {\n+                                    if (!name.equals(SQLServerDriverStringProperty.USER.toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTQwNTAz", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#pullrequestreview-361540503", "createdAt": "2020-02-20T00:40:49Z", "commit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDo0MDo1MFrOFr8yXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDo0MDo1MFrOFr8yXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyOTAyMg==", "bodyText": "Use multi line comments here.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#discussion_r381629022", "createdAt": "2020-02-20T00:40:50Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/Util.java", "diffHunk": "@@ -416,29 +416,42 @@ else if (ch == ':')\n                     break;\n                 }\n                 case inEscapedValueStart: {\n-                    if (ch == '}') {\n-                        // no trimming use the value as it is.\n-                        name = SQLServerDriver.getNormalizedPropertyName(name, logger);\n-                        if (null != name) {\n-                            if (logger.isLoggable(Level.FINE)) {\n-                                if (!name.equals(SQLServerDriverStringProperty.USER.toString())\n-                                        && !name.equals(SQLServerDriverStringProperty.PASSWORD.toString()))\n-                                    logger.fine(\"Property:\" + name + \" Value:\" + value);\n-                            }\n-                            p.put(name, value);\n-                        }\n-\n-                        name = \"\";\n-                        value = \"\";\n-                        // to eat the spaces until the ; potentially we could do without the state but\n-                        // it would not be clean\n-                        state = inEscapedValueEnd;\n-                    } else {\n+                    // check for escaped }.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTQzMDc3", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#pullrequestreview-361543077", "createdAt": "2020-02-20T00:48:27Z", "commit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDo0ODoyN1rOFr87Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDo0ODoyN1rOFr87Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYzMTI2Ng==", "bodyText": "trim() should be removed here, preceding white spaces in connection string would make i smaller than tmpUrl.trim().length().", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#discussion_r381631266", "createdAt": "2020-02-20T00:48:27Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/Util.java", "diffHunk": "@@ -416,29 +416,42 @@ else if (ch == ':')\n                     break;\n                 }\n                 case inEscapedValueStart: {\n-                    if (ch == '}') {\n-                        // no trimming use the value as it is.\n-                        name = SQLServerDriver.getNormalizedPropertyName(name, logger);\n-                        if (null != name) {\n-                            if (logger.isLoggable(Level.FINE)) {\n-                                if (!name.equals(SQLServerDriverStringProperty.USER.toString())\n-                                        && !name.equals(SQLServerDriverStringProperty.PASSWORD.toString()))\n-                                    logger.fine(\"Property:\" + name + \" Value:\" + value);\n-                            }\n-                            p.put(name, value);\n-                        }\n-\n-                        name = \"\";\n-                        value = \"\";\n-                        // to eat the spaces until the ; potentially we could do without the state but\n-                        // it would not be clean\n-                        state = inEscapedValueEnd;\n-                    } else {\n+                    // check for escaped }.\n+                    // when we see a }, first check to see if this is before the end of the string to avoid index out of range exception\n+                    // then check if the character immediately after is also a }.\n+                    // if it is, then we have a }}, which is not the closing of the escaped state.\n+                    if (ch == '}' && i + 1 <= tmpUrl.trim().length() && tmpUrl.charAt(i + 1) == '}') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1fc02b3f7f222edaedfbc6e550635242294536"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2fb4cd30e37dfac8da6a34b270d5e0738d59434", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/f2fb4cd30e37dfac8da6a34b270d5e0738d59434", "committedDate": "2020-03-21T02:59:05Z", "message": "Merge branch 'dev' of https://github.com/Microsoft/mssql-jdbc into github-1188"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b7a9a5bb9950d9937b2fe8f5f95eea830cee9a9", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/8b7a9a5bb9950d9937b2fe8f5f95eea830cee9a9", "committedDate": "2020-03-22T20:49:26Z", "message": "change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b34749545a1da75d32d9eafaa360e5403d21c35", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/8b34749545a1da75d32d9eafaa360e5403d21c35", "committedDate": "2020-03-23T05:00:47Z", "message": "changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca6b2b09f634a0d045017b84c8a388e3de05bfd", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/7ca6b2b09f634a0d045017b84c8a388e3de05bfd", "committedDate": "2020-03-23T05:06:09Z", "message": "more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjI5MTE4", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#pullrequestreview-382229118", "createdAt": "2020-03-26T17:15:02Z", "commit": {"oid": "7ca6b2b09f634a0d045017b84c8a388e3de05bfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjE0MDc4", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#pullrequestreview-383214078", "createdAt": "2020-03-27T21:36:41Z", "commit": {"oid": "7ca6b2b09f634a0d045017b84c8a388e3de05bfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjM3ODcz", "url": "https://github.com/microsoft/mssql-jdbc/pull/1251#pullrequestreview-383237873", "createdAt": "2020-03-27T22:39:46Z", "commit": {"oid": "7ca6b2b09f634a0d045017b84c8a388e3de05bfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2671, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}