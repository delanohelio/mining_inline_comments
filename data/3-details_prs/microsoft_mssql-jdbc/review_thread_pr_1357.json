{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzkxNzYx", "number": 1357, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToyNFrOEHsjsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjoyMzoxN1rOEHv8Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTA1NTIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToyNFrOGnNgeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToyNFrOGnNgeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2ODk1Mg==", "bodyText": "I know it was like this originally, but we might as well add brackets to this if statement as well.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1357#discussion_r443768952", "createdAt": "2020-06-22T19:09:24Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "diffHunk": "@@ -2665,12 +2681,13 @@ private void connectHelper(ServerPortPlaceHolder serverInfo, int timeOutSliceInM\n \n         // if the timeout is infinite slices are infinite too.\n         tdsChannel = new TDSChannel(this);\n+        InetSocketAddress inetSocketAddress;\n         if (0 == timeOutFullInSeconds)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fa50b94d528668f5eb4cc9ebd4e89f480c603"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTU3Nzg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/IOBuffer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjowOTozM1rOGnSqtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjowOTozM1rOGnSqtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1MzQ5Mw==", "bodyText": "Can you add brackets around the boolean expression just for readability.\naddr = (null != cacheEntry) ? cacheEntry : addr;", "url": "https://github.com/microsoft/mssql-jdbc/pull/1357#discussion_r443853493", "createdAt": "2020-06-22T22:09:33Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/IOBuffer.java", "diffHunk": "@@ -2645,6 +2650,14 @@ private Socket getDefaultSocket(String hostName, int portNumber, int timeoutInMi\n         // cannot be resolved, but that InetSocketAddress(host, port) does not - it sets\n         // the returned InetSocketAddress as unresolved.\n         InetSocketAddress addr = new InetSocketAddress(hostName, portNumber);\n+        if (addr.isUnresolved()) {\n+            if (logger.isLoggable(Level.FINER)) {\n+                logger.finer(this.toString() + \"Failed to resolve host name: \" + hostName\n+                        + \". Using IP address from DNS cache.\");\n+            }\n+            InetSocketAddress cacheEntry = SQLServerConnection.getDNSEntry(hostName);\n+            addr = null != cacheEntry ? cacheEntry : addr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fa50b94d528668f5eb4cc9ebd4e89f480c603"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTU5Nzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjoxODowNlrOGnS3Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMTo1MDozNlrOGnWfYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1NjY1MA==", "bodyText": "I know this might be a readability issue, but it's possible to format well and change this to a ternary since it's an if condition attempting to assign a variable.\nInetSocketAddress inetSocketAddress = (0 == timeOutFullInSeconds) ? tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), 0, useParallel,useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);\n                                                                  : tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), timeOutSliceInMillis, useParallel, useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);\n\nMight be even better to use an if statement to determine the effective timeout since it's the only parameter changed.\nint effectiveTimeoutValue = (0 == timeOutFullInSeconds) ? 0 : timeOutSliceInMillis;\nInetSocketAddress inetSocketAddress = tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), effectiveTimeoutValue, useParallel,useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);", "url": "https://github.com/microsoft/mssql-jdbc/pull/1357#discussion_r443856650", "createdAt": "2020-06-22T22:18:06Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "diffHunk": "@@ -2665,12 +2681,13 @@ private void connectHelper(ServerPortPlaceHolder serverInfo, int timeOutSliceInM\n \n         // if the timeout is infinite slices are infinite too.\n         tdsChannel = new TDSChannel(this);\n+        InetSocketAddress inetSocketAddress;\n         if (0 == timeOutFullInSeconds)\n-            tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), 0, useParallel, useTnir,\n-                    isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);\n-        else\n-            tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), timeOutSliceInMillis, useParallel,\n+            inetSocketAddress = tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), 0, useParallel,\n                     useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);\n+        else\n+            inetSocketAddress = tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(),\n+                    timeOutSliceInMillis, useParallel, useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fa50b94d528668f5eb4cc9ebd4e89f480c603"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNjEyOQ==", "bodyText": "hmm I think more clear if we just do this since that's the only thing that changed:\ninetSocketAddress = tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), (0 == timeOutFillInSeconds) ? 0 : timeOutSliceInMillis,  useParallel, useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);", "url": "https://github.com/microsoft/mssql-jdbc/pull/1357#discussion_r443916129", "createdAt": "2020-06-23T01:50:36Z", "author": {"login": "lilgreenbird"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "diffHunk": "@@ -2665,12 +2681,13 @@ private void connectHelper(ServerPortPlaceHolder serverInfo, int timeOutSliceInM\n \n         // if the timeout is infinite slices are infinite too.\n         tdsChannel = new TDSChannel(this);\n+        InetSocketAddress inetSocketAddress;\n         if (0 == timeOutFullInSeconds)\n-            tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), 0, useParallel, useTnir,\n-                    isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);\n-        else\n-            tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), timeOutSliceInMillis, useParallel,\n+            inetSocketAddress = tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(), 0, useParallel,\n                     useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);\n+        else\n+            inetSocketAddress = tdsChannel.open(serverInfo.getServerName(), serverInfo.getPortNumber(),\n+                    timeOutSliceInMillis, useParallel, useTnir, isTnirFirstAttempt, timeOutsliceInMillisForFullTimeout);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1NjY1MA=="}, "originalCommit": {"oid": "f36fa50b94d528668f5eb4cc9ebd4e89f480c603"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTYwOTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjoyMzoxN1rOGnS-Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjoyMzoxN1rOGnS-Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1ODQzOA==", "bodyText": "Same readability suggestion as above for boolean expression in ternary.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1357#discussion_r443858438", "createdAt": "2020-06-22T22:23:17Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java", "diffHunk": "@@ -685,6 +687,13 @@ boolean getServerSupportsDataClassification() {\n         return serverSupportsDataClassification;\n     }\n \n+    private boolean serverSupportsDNSCaching = false;\n+    private static ConcurrentHashMap<String, InetSocketAddress> dnsCache = null;\n+\n+    static InetSocketAddress getDNSEntry(String key) {\n+        return null != dnsCache ? dnsCache.get(key) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fa50b94d528668f5eb4cc9ebd4e89f480c603"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1105, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}