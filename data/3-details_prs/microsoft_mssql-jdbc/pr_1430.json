{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MzQyMjE0", "number": 1430, "title": "Retain error information in SQLServerPreparedStatement.getMetaData exceptions", "bodyText": "Fixes a bug in SQLServerPreparedStatement.buildExecuteMetaData which\ncaused the SqlState as returned from the server error to be discarded in\nthrown exceptions. The SqlState information is useful for application\nlevel error handling.\nNo tests are provided, as I can't get the test harness to run in my\nlocal environment. However, here are steps to reproduce the 'bad'\nexception with no included SqlState:\nConnection conn = null;     // Fill in with SqlServer connection.\nconn.prepareStatement(\"s\");\nconn.getMetaData();         // Throws exception without SqlState.", "createdAt": "2020-09-17T01:12:39Z", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430", "merged": true, "mergeCommit": {"oid": "a4977143d2bb81e06a3a38570d2709393a97b78d"}, "closed": true, "closedAt": "2020-10-13T22:53:00Z", "author": {"login": "danburkert"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJmdwhgH2gAyNDg4MzQyMjE0OjhjZjFjNTVhZTAzMzFhY2E2NmU2ODEyZGU0MTk4NDdjY2UxOGUwOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSQoV2gFqTUwNzg4MjU3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092", "author": {"user": {"login": "danburkert", "name": "Dan Burkert"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/8cf1c55ae0331aca66e6812de419847cce18e092", "committedDate": "2020-09-17T01:11:27Z", "message": "Retain error information in SQLServerPreparedStatement.getMetaData exceptions\n\nFixes a bug in SQLServerPreparedStatement.buildExecuteMetaData which\ncaused the SqlState as returned from the server error to be discarded in\nthrown exceptions. The SqlState information is useful for application\nlevel error handling.\n\nNo tests are provided, as I can't get the test harness to run in my\nlocal environment. However, here are steps to reproduce the 'bad' exception\nwith no included SqlState:\n\n```java\nConnection conn = null;     // Fill in with SqlServer connection.\nconn.prepareStatement(\"s\");\nconn.getMetaData();         // Throws exception without SqlState.\n```"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzQ4NzIw", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#pullrequestreview-497748720", "createdAt": "2020-09-28T17:28:47Z", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyODo0OFrOHZImyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyODo0OFrOHZImyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExNzQ0OA==", "bodyText": "Is adding SQLTimeoutException necessary here? Could you explain this a bit?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#discussion_r496117448", "createdAt": "2020-09-28T17:28:48Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerPreparedStatement.java", "diffHunk": "@@ -1050,7 +1050,7 @@ else if (needsPrepare)\n     }\n \n     @Override\n-    public final java.sql.ResultSetMetaData getMetaData() throws SQLServerException {\n+    public final java.sql.ResultSetMetaData getMetaData() throws SQLServerException, SQLTimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjkzOTY1", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#pullrequestreview-500693965", "createdAt": "2020-10-01T20:28:19Z", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoyODoyMFrOHbZxMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoyODoyMFrOHbZxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5NTc5Mg==", "bodyText": "We're only catching a subset of exceptions possibly thrown from this class (SQLException -> SQLServerException) now, but we should also catch the other exceptions that could be thrown from here.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#discussion_r498495792", "createdAt": "2020-10-01T20:28:20Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerPreparedStatement.java", "diffHunk": "@@ -1080,21 +1080,18 @@ else if (needsPrepare)\n      * @throws SQLServerException\n      * @return the result set containing the meta data\n      */\n-    private ResultSet buildExecuteMetaData() throws SQLServerException {\n+    private SQLServerResultSet buildExecuteMetaData() throws SQLServerException, SQLTimeoutException {\n         String fmtSQL = userSQL;\n \n-        ResultSet emptyResultSet = null;\n+        SQLServerResultSet emptyResultSet = null;\n         try {\n             fmtSQL = replaceMarkerWithNull(fmtSQL);\n             internalStmt = (SQLServerStatement) connection.createStatement();\n             emptyResultSet = internalStmt.executeQueryInternal(\"set fmtonly on \" + fmtSQL + \"\\nset fmtonly off\");\n-        } catch (SQLException sqle) {\n+        } catch (SQLServerException sqle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDQ1NDA4", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#pullrequestreview-502445408", "createdAt": "2020-10-05T21:49:01Z", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjYyODI2", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#pullrequestreview-507662826", "createdAt": "2020-10-13T17:13:57Z", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzE2OTgy", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#pullrequestreview-507716982", "createdAt": "2020-10-13T18:24:47Z", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODgyNTcx", "url": "https://github.com/microsoft/mssql-jdbc/pull/1430#pullrequestreview-507882571", "createdAt": "2020-10-13T22:50:26Z", "commit": {"oid": "8cf1c55ae0331aca66e6812de419847cce18e092"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2641, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}