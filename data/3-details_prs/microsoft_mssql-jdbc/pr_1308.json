{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTQ1NDY3", "number": 1308, "title": "MSI expiry date format fix for Azure Functions", "bodyText": "Fixes issue #1135.\nThe format in which the expires_on property is sent to the driver from Azure server used to be in the form of a string, but starting from the latest API version (2019-08-01), this value is now an integer value, which is consistent across all regions and operating systems (Windows/Linux).\nNote that this fix only applies to retrieving access tokens for MSI authentication from Azure Functions (and Azure Web Apps), and it doesn't affect the usual Azure IMDS routine for MSI authentication.", "createdAt": "2020-04-09T17:12:59Z", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308", "merged": true, "mergeCommit": {"oid": "3b4f0a20623ea57bfaf02deb2117b0cb7daac001"}, "closed": true, "closedAt": "2020-04-30T18:16:48Z", "author": {"login": "peterbae"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV_mOoAH2gAyNDAxNTQ1NDY3OjdiMWUxOTM3ODVjMWM2MjQ1OGVhNDIyZTU1MjFjNzhkNWZjMmM2ZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccxFQVgFqTQwMzc1ODQ0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b1e193785c1c62458ea422e5521c78d5fc2c6e3", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/7b1e193785c1c62458ea422e5521c78d5fc2c6e3", "committedDate": "2020-04-09T17:04:16Z", "message": "msi change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTkwNzc3", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#pullrequestreview-390990777", "createdAt": "2020-04-09T17:27:55Z", "commit": {"oid": "7b1e193785c1c62458ea422e5521c78d5fc2c6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoyNzo1NVrOGDiWYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoyNzo1NVrOGDiWYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTY5OA==", "bodyText": "int startIndex_ATX = isAzureFunction ? result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER.length() : result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER.length();\n                    \nStringBuilder sb = new StringBuilder(result);\nString accessTokenExpiry = sb.subString(startIndex_ATX, sb.indexOf(\"\\\"\", startIndex_ATX + 1));\ncal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\nSee if we can just use StringBuilder from the beginning instead of a string. I think it's not really possible to go directly from a Reader to a StringBuilder, but lets try to switch to StringBuilder as soon as we can because I see most of these operations are fully supported and identical to StringBuilder APIs.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#discussion_r406361698", "createdAt": "2020-04-09T17:27:55Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerSecurityUtility.java", "diffHunk": "@@ -324,30 +318,23 @@ static SqlFedAuthToken getMSIAuthToken(String resource, String msiClientId) thro\n \r\n                     Calendar cal = new Calendar.Builder().setInstant(new Date()).build();\r\n \r\n+                    int startIndex_ATX;\r\n+\r\n+                    // Fetch expires_on\r\n                     if (isAzureFunction) {\r\n-                        // Fetch expires_on\r\n-                        int startIndex_ATX = result\r\n+                        startIndex_ATX = result\r\n                                 .indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER)\r\n                                 + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER.length();\r\n-                        String accessTokenExpiry = result.substring(startIndex_ATX,\r\n-                                result.indexOf(\"\\\"\", startIndex_ATX + 1));\r\n-                        if (connectionlogger.isLoggable(Level.FINER)) {\r\n-                            connectionlogger.finer(\"MSI auth token expires on: \" + accessTokenExpiry);\r\n-                        }\r\n-\r\n-                        DateFormat df = new SimpleDateFormat(\r\n-                                ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_DATE_FORMAT);\r\n-                        cal = new Calendar.Builder().setInstant(df.parse(accessTokenExpiry)).build();\r\n                     } else {\r\n-                        // Fetch expires_in\r\n-                        int startIndex_ATX = result\r\n+                        startIndex_ATX = result\r\n                                 .indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER)\r\n                                 + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER.length();\r\n-                        String accessTokenExpiry = result.substring(startIndex_ATX,\r\n-                                result.indexOf(\"\\\"\", startIndex_ATX + 1));\r\n-                        cal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\r\n                     }\r\n \r\n+                    String accessTokenExpiry = result.substring(startIndex_ATX,\r\n+                            result.indexOf(\"\\\"\", startIndex_ATX + 1));\r\n+                    cal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b1e193785c1c62458ea422e5521c78d5fc2c6e3"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9faea27e586e6d4c4810e1c8aa29891533bd4ac", "author": {"user": {"login": "peterbae", "name": "Peter Bae"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/e9faea27e586e6d4c4810e1c8aa29891533bd4ac", "committedDate": "2020-04-13T18:15:59Z", "message": "use stringbuilder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTAyNDQz", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#pullrequestreview-393502443", "createdAt": "2020-04-15T06:59:30Z", "commit": {"oid": "e9faea27e586e6d4c4810e1c8aa29891533bd4ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjczNDcw", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#pullrequestreview-402273470", "createdAt": "2020-04-28T23:07:35Z", "commit": {"oid": "e9faea27e586e6d4c4810e1c8aa29891533bd4ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNzU4NDQ0", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#pullrequestreview-403758444", "createdAt": "2020-04-30T18:07:03Z", "commit": {"oid": "e9faea27e586e6d4c4810e1c8aa29891533bd4ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2509, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}