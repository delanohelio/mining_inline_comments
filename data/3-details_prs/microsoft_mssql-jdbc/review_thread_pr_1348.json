{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTEwODY1", "number": 1348, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo1ODo1MVrOEDoAAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoyNzoxMFrOEEX2lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjM2NTQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo1ODo1MVrOGgwMFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo1ODo1MVrOGgwMFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5NzE0Mg==", "bodyText": "missing a semicolon after ORDINAL_POSITION. This could be relevant later.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r436997142", "createdAt": "2020-06-08T20:58:51Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -637,7 +638,9 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     + \"CASE SS_IS_COMPUTED WHEN 0 THEN 'NO' WHEN 1 THEN 'YES' WHEN '' THEN '' END AS IS_GENERATEDCOLUMN, \"\n                     + \"SS_IS_SPARSE, SS_IS_COLUMN_SET, SS_UDT_CATALOG_NAME, SS_UDT_SCHEMA_NAME, SS_UDT_ASSEMBLY_TYPE_NAME,\"\n                     + \"SS_XML_SCHEMACOLLECTION_CATALOG_NAME, SS_XML_SCHEMACOLLECTION_SCHEMA_NAME, SS_XML_SCHEMACOLLECTION_NAME \"\n-                    + \"FROM @mssqljdbc_temp_sp_columns_result;\";\n+                    + \"FROM @mssqljdbc_temp_sp_columns_result \"\n+\n+                    + \"ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37fd1a553291e8059eb34b71c0c784b9d2a235d3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjM5MzY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTowODowM1rOGgweDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTowODowM1rOGgweDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwMTc0Mg==", "bodyText": "This line and the line below should be on the same line?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r437001742", "createdAt": "2020-06-08T21:08:03Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -637,7 +638,9 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     + \"CASE SS_IS_COMPUTED WHEN 0 THEN 'NO' WHEN 1 THEN 'YES' WHEN '' THEN '' END AS IS_GENERATEDCOLUMN, \"\n                     + \"SS_IS_SPARSE, SS_IS_COLUMN_SET, SS_UDT_CATALOG_NAME, SS_UDT_SCHEMA_NAME, SS_UDT_ASSEMBLY_TYPE_NAME,\"\n                     + \"SS_XML_SCHEMACOLLECTION_CATALOG_NAME, SS_XML_SCHEMACOLLECTION_SCHEMA_NAME, SS_XML_SCHEMACOLLECTION_NAME \"\n-                    + \"FROM @mssqljdbc_temp_sp_columns_result;\";\n+                    + \"FROM @mssqljdbc_temp_sp_columns_result \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37fd1a553291e8059eb34b71c0c784b9d2a235d3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjM5NTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTowODozNlrOGgwfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTowODozNlrOGgwfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwMjAxNg==", "bodyText": "combine this line and the line below", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r437002016", "createdAt": "2020-06-08T21:08:36Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -738,6 +741,8 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     boolean isFirstRow = true; // less expensive than continuously checking isFirst()\n                     while (rs.next()) {\n                         if (!isFirstRow) {\n+                            azureDwSelectBuilder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37fd1a553291e8059eb34b71c0c784b9d2a235d3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzI5NDk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzo1NzoxMlrOGhgU6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzo1NzoxMlrOGhgU6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4NTgzMg==", "bodyText": "Wouldn't this append ORDER BY  after every row?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r437785832", "createdAt": "2020-06-09T23:57:12Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -738,6 +741,8 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     boolean isFirstRow = true; // less expensive than continuously checking isFirst()\n                     while (rs.next()) {\n                         if (!isFirstRow) {\n+                            azureDwSelectBuilder\n+                                    .append(\" ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37fd1a553291e8059eb34b71c0c784b9d2a235d3"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDIwNTY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoyNzoxMFrOGh8_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoyNzoxMFrOGh8_2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1NTU3OA==", "bodyText": "Can you explain this, isn't the ORDER BY clause covered above? This 0 length check is meant to return an empty resultset if the user's query returned no results; added for consistency with normal SQL Server.\nEdit: nvm, I see why you need this.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r438255578", "createdAt": "2020-06-10T16:27:10Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -746,7 +747,10 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n \n                     if (0 == azureDwSelectBuilder.length()) {\n                         azureDwSelectBuilder.append(generateAzureDWEmptyRS(getColumnsDWColumns));\n+                    } else {\n+                        azureDwSelectBuilder.append(\" ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3879bf8d2d1ce672691f6438f059331f246811ad"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1101, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}