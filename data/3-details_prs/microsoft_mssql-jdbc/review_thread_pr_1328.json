{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMzE0NDcy", "number": 1328, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowNjo0OVrOD-x2EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzoxMjoyMlrOD_BKmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU0OTYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowNjo0OVrOGZFvIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowNjo0OVrOGZFvIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MTU3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            year = Util.parseInt(s, 0, firstDash, 10);\n          \n          \n            \n                            year = Integer.parseInt(s.subSequence(0, firstDash).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428961570", "createdAt": "2020-05-21T23:06:49Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -614,9 +614,9 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         if (firstDash > 0 && secondDash > 0 && secondDash < dividingSpace - 1) {\n             if (firstDash == YEAR_LENGTH && (secondDash - firstDash > 1 && secondDash - firstDash <= MONTH_LENGTH + 1)\n                     && (dividingSpace - secondDash > 1 && dividingSpace - secondDash <= DAY_LENGTH + 1)) {\n-                year = Integer.parseInt(s, 0, firstDash, 10);\n-                month = Integer.parseInt(s, firstDash + 1, secondDash, 10);\n-                day = Integer.parseInt(s, secondDash + 1, dividingSpace, 10);\n+                year = Util.parseInt(s, 0, firstDash, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU1MDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowNzoxN1rOGZFvnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowNzoxN1rOGZFvnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MTY5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            month = Util.parseInt(s, firstDash + 1, secondDash, 10);\n          \n          \n            \n                            month = Integer.parseInt(s.subSequence(firstDash + 1, secondDash).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428961695", "createdAt": "2020-05-21T23:07:17Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -614,9 +614,9 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         if (firstDash > 0 && secondDash > 0 && secondDash < dividingSpace - 1) {\n             if (firstDash == YEAR_LENGTH && (secondDash - firstDash > 1 && secondDash - firstDash <= MONTH_LENGTH + 1)\n                     && (dividingSpace - secondDash > 1 && dividingSpace - secondDash <= DAY_LENGTH + 1)) {\n-                year = Integer.parseInt(s, 0, firstDash, 10);\n-                month = Integer.parseInt(s, firstDash + 1, secondDash, 10);\n-                day = Integer.parseInt(s, secondDash + 1, dividingSpace, 10);\n+                year = Util.parseInt(s, 0, firstDash, 10);\n+                month = Util.parseInt(s, firstDash + 1, secondDash, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU1MTY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowODowOVrOGZFwfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzowODowOVrOGZFwfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MTkxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            day = Util.parseInt(s, secondDash + 1, dividingSpace, 10);\n          \n          \n            \n                            day = Integer.parseInt(s.subSequence(secondDash + 1, dividingSpace).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428961916", "createdAt": "2020-05-21T23:08:09Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -614,9 +614,9 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         if (firstDash > 0 && secondDash > 0 && secondDash < dividingSpace - 1) {\n             if (firstDash == YEAR_LENGTH && (secondDash - firstDash > 1 && secondDash - firstDash <= MONTH_LENGTH + 1)\n                     && (dividingSpace - secondDash > 1 && dividingSpace - secondDash <= DAY_LENGTH + 1)) {\n-                year = Integer.parseInt(s, 0, firstDash, 10);\n-                month = Integer.parseInt(s, firstDash + 1, secondDash, 10);\n-                day = Integer.parseInt(s, secondDash + 1, dividingSpace, 10);\n+                year = Util.parseInt(s, 0, firstDash, 10);\n+                month = Util.parseInt(s, firstDash + 1, secondDash, 10);\n+                day = Util.parseInt(s, secondDash + 1, dividingSpace, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU1ODIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMTozN1rOGZF0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMTozN1rOGZF0mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2Mjk3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        hour = Util.parseInt(s, dividingSpace + 1, firstColon, 10);\n          \n          \n            \n                        hour = Integer.parseInt(s.subSequence(dividingSpace + 1, firstColon).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428962971", "createdAt": "2020-05-21T23:11:37Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -630,16 +630,16 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         // Convert the time; default missing nanos\n         int len = s.length();\n         if (firstColon > 0 && secondColon > 0 && secondColon < len - 1) {\n-            hour = Integer.parseInt(s, dividingSpace + 1, firstColon, 10);\n-            minute = Integer.parseInt(s, firstColon + 1, secondColon, 10);\n+            hour = Util.parseInt(s, dividingSpace + 1, firstColon, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU1OTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMjoxNVrOGZF1WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMjoxNVrOGZF1WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MzE2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        minute = Util.parseInt(s, firstColon + 1, secondColon, 10);\n          \n          \n            \n                        minute = Integer.parseInt(s.subSequence(firstColon + 1, secondColon).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428963161", "createdAt": "2020-05-21T23:12:15Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -630,16 +630,16 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         // Convert the time; default missing nanos\n         int len = s.length();\n         if (firstColon > 0 && secondColon > 0 && secondColon < len - 1) {\n-            hour = Integer.parseInt(s, dividingSpace + 1, firstColon, 10);\n-            minute = Integer.parseInt(s, firstColon + 1, secondColon, 10);\n+            hour = Util.parseInt(s, dividingSpace + 1, firstColon, 10);\n+            minute = Util.parseInt(s, firstColon + 1, secondColon, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU2MDc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMjo0OVrOGZF2Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMjo0OVrOGZF2Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MzM1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            second = Util.parseInt(s, secondColon + 1, period, 10);\n          \n          \n            \n                            second = Integer.parseInt(s.subSequence(secondColon + 1, period).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428963354", "createdAt": "2020-05-21T23:12:49Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -630,16 +630,16 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         // Convert the time; default missing nanos\n         int len = s.length();\n         if (firstColon > 0 && secondColon > 0 && secondColon < len - 1) {\n-            hour = Integer.parseInt(s, dividingSpace + 1, firstColon, 10);\n-            minute = Integer.parseInt(s, firstColon + 1, secondColon, 10);\n+            hour = Util.parseInt(s, dividingSpace + 1, firstColon, 10);\n+            minute = Util.parseInt(s, firstColon + 1, secondColon, 10);\n             if (period > 0 && period < len - 1) {\n-                second = Integer.parseInt(s, secondColon + 1, period, 10);\n+                second = Util.parseInt(s, secondColon + 1, period, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU2MjY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMzo1MVrOGZF3KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxMzo1MVrOGZF3KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MzYyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            int tmpNanos = Util.parseInt(s, period + 1, len, 10);\n          \n          \n            \n                            int tmpNanos = Integer.parseInt(s.subSequence(period + 1, len).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428963624", "createdAt": "2020-05-21T23:13:51Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -630,16 +630,16 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         // Convert the time; default missing nanos\n         int len = s.length();\n         if (firstColon > 0 && secondColon > 0 && secondColon < len - 1) {\n-            hour = Integer.parseInt(s, dividingSpace + 1, firstColon, 10);\n-            minute = Integer.parseInt(s, firstColon + 1, secondColon, 10);\n+            hour = Util.parseInt(s, dividingSpace + 1, firstColon, 10);\n+            minute = Util.parseInt(s, firstColon + 1, secondColon, 10);\n             if (period > 0 && period < len - 1) {\n-                second = Integer.parseInt(s, secondColon + 1, period, 10);\n+                second = Util.parseInt(s, secondColon + 1, period, 10);\n                 int nanoPrecision = len - (period + 1);\n                 if (nanoPrecision > 9)\n                     throw new java.lang.IllegalArgumentException(formatError);\n                 if (!Character.isDigit(s.charAt(period + 1)))\n                     throw new java.lang.IllegalArgumentException(formatError);\n-                int tmpNanos = Integer.parseInt(s, period + 1, len, 10);\n+                int tmpNanos = Util.parseInt(s, period + 1, len, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU2MzM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxNDoxOVrOGZF3kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxNDoxOVrOGZF3kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MzczMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            second = Util.parseInt(s, secondColon + 1, len, 10);\n          \n          \n            \n                            second = Integer.parseInt(s.subSequence(secondColon + 1, len).toString());", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428963731", "createdAt": "2020-05-21T23:14:19Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -648,7 +648,7 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n             } else if (period > 0) {\n                 throw new java.lang.IllegalArgumentException(formatError);\n             } else {\n-                second = Integer.parseInt(s, secondColon + 1, len, 10);\n+                second = Util.parseInt(s, secondColon + 1, len, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU2NDEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/Util.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxNDo0N1rOGZF4EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoxNDo0N1rOGZF4EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2Mzg1Nw==", "bodyText": "Once you commit the suggestions above, you can delete this method.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r428963857", "createdAt": "2020-05-21T23:14:47Z", "author": {"login": "ulvii"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/Util.java", "diffHunk": "@@ -1032,6 +1033,90 @@ static String convertInputStreamToString(java.io.InputStream is) throws IOExcept\n         }\n         return result.toString();\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447cfdc2794862f0d30c68ca2e4e02c93f15db28"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mzk4NDU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo0NTo1MFrOGZdejQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo0NTo1MFrOGZdejQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1MDU0MQ==", "bodyText": "Is there a reason why we're using subSequence(int,int) here instead of subString(int,int)? It seems like subSequence actually uses subString underneath and the only major difference is that it returns a CharSequence instead of a String. Considering it seems we want a String anyways, lets just use subString(int,int).", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429350541", "createdAt": "2020-05-22T16:45:50Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/DDC.java", "diffHunk": "@@ -614,9 +614,9 @@ private static LocalDateTime parseStringIntoLDT(String s) {\n         if (firstDash > 0 && secondDash > 0 && secondDash < dividingSpace - 1) {\n             if (firstDash == YEAR_LENGTH && (secondDash - firstDash > 1 && secondDash - firstDash <= MONTH_LENGTH + 1)\n                     && (dividingSpace - secondDash > 1 && dividingSpace - secondDash <= DAY_LENGTH + 1)) {\n-                year = Integer.parseInt(s, 0, firstDash, 10);\n-                month = Integer.parseInt(s, firstDash + 1, secondDash, 10);\n-                day = Integer.parseInt(s, secondDash + 1, dividingSpace, 10);\n+                year = Integer.parseInt(s.subSequence(0, firstDash).toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mzk5ODI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerColumnEncryptionAzureKeyVaultProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo0OToyNVrOGZdnXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToyMjoyMlrOGZhn2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1Mjc5OA==", "bodyText": "endpoints.trim().length() > 0 would be more performant than an isEmpty() check.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429352798", "createdAt": "2020-05-22T16:49:25Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerColumnEncryptionAzureKeyVaultProvider.java", "diffHunk": "@@ -667,7 +667,7 @@ public boolean verifyColumnMasterKeyMetadata(String masterKeyPath, boolean allow\n         boolean append = true;\n         if (null != mssqlJdbcProperties) {\n             String endpoints = mssqlJdbcProperties.getProperty(AKV_TRUSTED_ENDPOINTS_KEYWORD);\n-            if (null != endpoints && !endpoints.isBlank()) {\n+            if (null != endpoints && !endpoints.trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxODQ1Ng==", "bodyText": "more readable and minimal difference", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429418456", "createdAt": "2020-05-22T19:22:22Z", "author": {"login": "lilgreenbird"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerColumnEncryptionAzureKeyVaultProvider.java", "diffHunk": "@@ -667,7 +667,7 @@ public boolean verifyColumnMasterKeyMetadata(String masterKeyPath, boolean allow\n         boolean append = true;\n         if (null != mssqlJdbcProperties) {\n             String endpoints = mssqlJdbcProperties.getProperty(AKV_TRUSTED_ENDPOINTS_KEYWORD);\n-            if (null != endpoints && !endpoints.isBlank()) {\n+            if (null != endpoints && !endpoints.trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1Mjc5OA=="}, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDA0Nzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerCertificateUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzowNzo0MlrOGZeHKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToyODo0N1rOGZhwyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2MDkzNw==", "bodyText": "Is this really necessary, the Oracle Java docs say rewind() is inherited from Buffer since Java SE7.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429360937", "createdAt": "2020-05-22T17:07:42Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerCertificateUtils.java", "diffHunk": "@@ -153,22 +154,23 @@ private static PrivateKey loadPrivateKeyFromPVK(String keyPath,\n         ByteBuffer buffer = ByteBuffer.allocate((int) f.length());\r\n         try (FileInputStream in = new FileInputStream(f)) {\r\n             in.getChannel().read(buffer);\r\n-            buffer.order(ByteOrder.LITTLE_ENDIAN).rewind();\r\n+            ((Buffer) buffer.order(ByteOrder.LITTLE_ENDIAN)).rewind();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4NDY2Mg==", "bodyText": "I'm curious about this one as well. Does Java try to use the Java 9 version of rewind from ByteBuffer without this cast?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429384662", "createdAt": "2020-05-22T18:01:53Z", "author": {"login": "peterbae"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerCertificateUtils.java", "diffHunk": "@@ -153,22 +154,23 @@ private static PrivateKey loadPrivateKeyFromPVK(String keyPath,\n         ByteBuffer buffer = ByteBuffer.allocate((int) f.length());\r\n         try (FileInputStream in = new FileInputStream(f)) {\r\n             in.getChannel().read(buffer);\r\n-            buffer.order(ByteOrder.LITTLE_ENDIAN).rewind();\r\n+            ((Buffer) buffer.order(ByteOrder.LITTLE_ENDIAN)).rewind();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2MDkzNw=="}, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMDc0Nw==", "bodyText": "yes that is the reason, ByteBuffer doesn't have this method so it will throw a NoSuchMethodError", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429420747", "createdAt": "2020-05-22T19:28:47Z", "author": {"login": "lilgreenbird"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerCertificateUtils.java", "diffHunk": "@@ -153,22 +154,23 @@ private static PrivateKey loadPrivateKeyFromPVK(String keyPath,\n         ByteBuffer buffer = ByteBuffer.allocate((int) f.length());\r\n         try (FileInputStream in = new FileInputStream(f)) {\r\n             in.getChannel().read(buffer);\r\n-            buffer.order(ByteOrder.LITTLE_ENDIAN).rewind();\r\n+            ((Buffer) buffer.order(ByteOrder.LITTLE_ENDIAN)).rewind();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2MDkzNw=="}, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDA1OTc3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsStreamingTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzoxMjoyM1rOGZeOkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzoxMjoyM1rOGZeOkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2MjgzMg==", "bodyText": "There should be an unclosed resource warning here, but since I wrote this test I can address it in the LOBs PR or a separate PR.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1328#discussion_r429362832", "createdAt": "2020-05-22T17:12:23Z", "author": {"login": "rene-ye"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsStreamingTest.java", "diffHunk": "@@ -145,8 +146,7 @@ public void testClobsVarcharASCII() throws SQLException, IOException {\n                         Clob c = rs.getClob(2);\r\n                         assertEquals(c.length(), lob_data.get(index).length());\r\n                         try (InputStream is = c.getAsciiStream();\r\n-                                Scanner s = new Scanner(is, java.nio.charset.StandardCharsets.US_ASCII)\r\n-                                        .useDelimiter(\"\\\\A\")) {\r\n+                                Scanner s = new Scanner(is, \"US-ASCII\").useDelimiter(\"\\\\A\")) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31268e8e79574b6f4e8530a4355a622b6d7dfc8"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1081, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}