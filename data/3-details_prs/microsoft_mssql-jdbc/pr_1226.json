{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MTU5NjQ3", "number": 1226, "title": "Fixed errors identified by Semmle", "bodyText": "", "createdAt": "2020-01-03T23:57:11Z", "url": "https://github.com/microsoft/mssql-jdbc/pull/1226", "merged": true, "mergeCommit": {"oid": "75a235eeafc631e30c73b18f5a3802ee5029cc8a"}, "closed": true, "closedAt": "2020-01-09T18:25:47Z", "author": {"login": "lilgreenbird"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb22UQHAH2gAyMzU5MTU5NjQ3OmM3ODBjZWQ1YmY1NDcxYjE1ZTJkMzk1ZDAwMGMzNjM0ZDI5OWMyNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4tuhlAFqTM0MDcwNDA5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c780ced5bf5471b15e2d395d000c3634d299c263", "author": {"user": {"login": "lilgreenbird", "name": "lilgreenbird"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/c780ced5bf5471b15e2d395d000c3634d299c263", "committedDate": "2020-01-03T22:43:50Z", "message": "fixes from Semmle scan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5baa6365bb9b92a5406be9c495ab8a06c604c1e", "author": {"user": {"login": "lilgreenbird", "name": "lilgreenbird"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/e5baa6365bb9b92a5406be9c495ab8a06c604c1e", "committedDate": "2020-01-03T23:48:01Z", "message": "fixes from Semmle scan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NTc4NDUx", "url": "https://github.com/microsoft/mssql-jdbc/pull/1226#pullrequestreview-339578451", "createdAt": "2020-01-07T23:50:11Z", "commit": {"oid": "e5baa6365bb9b92a5406be9c495ab8a06c604c1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMzo1MDoxMVrOFbJOkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMzo1MDoxMVrOFbJOkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAwNzA1Nw==", "bodyText": "I don't really think this is a relevant check, but a better way would be to catch the array index out of bounds exception and rethrow.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1226#discussion_r364007057", "createdAt": "2020-01-07T23:50:11Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/IOBuffer.java", "diffHunk": "@@ -3776,7 +3776,14 @@ void writeString(String value) throws SQLServerException {\n             while (bytesCopied < bytesToCopy) {\n                 char ch = value.charAt(charsCopied++);\n                 valueBytes[bytesCopied++] = (byte) ((ch >> 0) & 0xFF);\n-                valueBytes[bytesCopied++] = (byte) ((ch >> 8) & 0xFF);\n+\n+                if (bytesCopied > bytesToCopy) {\n+                    MessageFormat form = new MessageFormat(SQLServerException.getErrString(\"R_indexOutOfRange\"));\n+                    Object[] msgArgs = {bytesCopied};\n+                    error(form.format(msgArgs), SQLState.DATA_EXCEPTION_NOT_SPECIFIC, DriverError.NOT_SET);\n+                }\n+                valueBytes[bytesCopied] = (byte) ((ch >> 8) & 0xFF);\n+                bytesCopied++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5baa6365bb9b92a5406be9c495ab8a06c604c1e"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NTg3ODQy", "url": "https://github.com/microsoft/mssql-jdbc/pull/1226#pullrequestreview-339587842", "createdAt": "2020-01-08T00:22:34Z", "commit": {"oid": "e5baa6365bb9b92a5406be9c495ab8a06c604c1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDoyMjozNFrOFbJtBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDoyMjozNFrOFbJtBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNDg1NA==", "bodyText": "Same here, if we're really worried this may cause an out of index access then we can catch and rethrow it.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1226#discussion_r364014854", "createdAt": "2020-01-08T00:22:34Z", "author": {"login": "rene-ye"}, "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerXAResource.java", "diffHunk": "@@ -845,8 +845,19 @@ public void forget(Xid xid) throws XAException {\n                 power = power * 256;\n             }\n             offset += 4;\n-            int gid_len = (r.bData[offset++] & 0x00FF);\n-            int bid_len = (r.bData[offset++] & 0x00FF);\n+            int gid_len = (r.bData[offset] & 0x00FF);\n+            if (offset++ > r.bData.length) {\n+                MessageFormat form = new MessageFormat(SQLServerException.getErrString(\"R_indexOutOfRange\"));\n+                Object[] msgArgs = {offset};\n+                XAException xex = new XAException(form.format(msgArgs));\n+                xex.errorCode = XAException.XAER_RMERR;\n+                if (xaLogger.isLoggable(Level.FINER))\n+                    xaLogger.finer(toString() + \" exception:\" + xex);\n+                throw xex;\n+            }\n+            int bid_len = (r.bData[offset] & 0x00FF);\n+            offset++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5baa6365bb9b92a5406be9c495ab8a06c604c1e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e1645412504a492514126f4b5faee8ee5f714d8", "author": {"user": {"login": "lilgreenbird", "name": "lilgreenbird"}}, "url": "https://github.com/microsoft/mssql-jdbc/commit/9e1645412504a492514126f4b5faee8ee5f714d8", "committedDate": "2020-01-08T01:08:29Z", "message": "review updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNzA0MDk4", "url": "https://github.com/microsoft/mssql-jdbc/pull/1226#pullrequestreview-340704098", "createdAt": "2020-01-09T17:51:14Z", "commit": {"oid": "9e1645412504a492514126f4b5faee8ee5f714d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2653, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}