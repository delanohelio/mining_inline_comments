{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MzIxNjY4", "number": 1368, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo0NDo1OVrOEI71fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo0NTozNVrOEI72RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODA0NDE1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo0NDo1OVrOGpM5XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoyNDowMVrOGsgW0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw==", "bodyText": "should we check if AE is enabled to see which error it should be?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r445856093", "createdAt": "2020-06-25T21:44:59Z", "author": {"login": "lilgreenbird"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -201,7 +202,8 @@ else if (lobClass == Blob.class)\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n+                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwODY5NQ==", "bodyText": "The only really good way is to check the connection string, and that's honestly pretty hacky and I don't want to add the extra logic when the test doesn't really care if AE is on or off.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r447808695", "createdAt": "2020-06-30T16:16:26Z", "author": {"login": "rene-ye"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -201,7 +202,8 @@ else if (lobClass == Blob.class)\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n+                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, "originalCommit": {"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5Mjk3Ng==", "bodyText": "yeah I did that in PR 1371, we should agree to do the same thing, if we're not going to check then I'll remove that from that PR too", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r447992976", "createdAt": "2020-06-30T21:35:14Z", "author": {"login": "lilgreenbird"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -201,7 +202,8 @@ else if (lobClass == Blob.class)\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n+                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, "originalCommit": {"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyOTI3OA==", "bodyText": "I'm ok with not checking, it doesn't have to be consistent persay.", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r449229278", "createdAt": "2020-07-02T19:37:42Z", "author": {"login": "rene-ye"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -201,7 +202,8 @@ else if (lobClass == Blob.class)\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n+                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, "originalCommit": {"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMDY1Nw==", "bodyText": "use ds.getColumnEncryptionSetting() as per discussion", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r449320657", "createdAt": "2020-07-03T00:24:01Z", "author": {"login": "lilgreenbird"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -201,7 +202,8 @@ else if (lobClass == Blob.class)\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n+                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, "originalCommit": {"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODA0NjEyOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo0NTozNVrOGpM6jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo0NTozNVrOGpM6jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjM5Nw==", "bodyText": "why?", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r445856397", "createdAt": "2020-06-25T21:45:35Z", "author": {"login": "lilgreenbird"}, "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -41,6 +41,7 @@\n import org.junit.runner.RunWith;\n \n import com.microsoft.sqlserver.jdbc.RandomUtil;\n+import com.microsoft.sqlserver.jdbc.SQLServerConnection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1116, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}