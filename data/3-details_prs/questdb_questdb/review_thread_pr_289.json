{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTUwNzUw", "number": 289, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1MzowNFrOD9UrNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo0NDozNVrOD9bQqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI4NDY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1MzowNFrOGWv4EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1MzowNFrOGWv4EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNjI1Ng==", "bodyText": "We need more tests.\nWhat happens here is what I've written about in email - if order by has non-literal columns, advice must be empty. We must not give selective advice to the sub=query", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426506256", "createdAt": "2020-05-18T09:53:04Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "diffHunk": "@@ -1163,10 +1163,12 @@ private int getIndexOfTableForColumn(QueryModel model, CharSequence column, int\n             return orderByAdvice;\n         }\n \n-        CharSequenceObjHashMap<CharSequence> map = model.getAliasToColumnNameMap();\n+        CharSequenceObjHashMap<QueryColumn> map = model.getAliasToColumnMap();\n         for (int i = 0; i < len; i++) {\n-            orderByAdvice.add(nextLiteral(map.get(orderBy.getQuick(i).token)));\n-\n+            QueryColumn queryColumn = map.get(orderBy.getQuick(i).token);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bd71959d406e39a75f7576a54cf36021732cc7c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI5MzMxOnYy", "diffSide": "LEFT", "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1NToxNFrOGWv9Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoxNTo0MlrOGW5LYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNzYwMw==", "bodyText": "we should probably keep that - advice must not have unresolvable columns", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426507603", "createdAt": "2020-05-18T09:55:14Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -1870,7 +1870,6 @@ private RecordCursorFactory generateTableQuery(\n                         // we can only deal with 'order by symbol, timestamp' at best\n                         // skip this optimisation if order by is more extensive\n                         final int columnIndex = metadata.getColumnIndexQuiet(model.getOrderByAdvice().getQuick(0).token);\n-                        assert columnIndex > -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bd71959d406e39a75f7576a54cf36021732cc7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY1ODY1Nw==", "bodyText": "done", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426658657", "createdAt": "2020-05-18T14:15:42Z", "author": {"login": "jaugsburger"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -1870,7 +1870,6 @@ private RecordCursorFactory generateTableQuery(\n                         // we can only deal with 'order by symbol, timestamp' at best\n                         // skip this optimisation if order by is more extensive\n                         final int columnIndex = metadata.getColumnIndexQuiet(model.getOrderByAdvice().getQuick(0).token);\n-                        assert columnIndex > -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNzYwMw=="}, "originalCommit": {"oid": "2bd71959d406e39a75f7576a54cf36021732cc7c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI5NDQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlKeywords.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1NTozMlrOGWv-Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoxNTo1MFrOGW5LzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNzc5MQ==", "bodyText": "we probably do not need these methods anymore?", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426507791", "createdAt": "2020-05-18T09:55:32Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlKeywords.java", "diffHunk": "@@ -642,4 +642,37 @@ public static boolean isColumnKeyword(CharSequence tok) {\n                 && (tok.charAt(i++) | 32) == 'm'\n                 && (tok.charAt(i) | 32) == 'n';\n     }\n+\n+    public static boolean isMaxKeyword(CharSequence tok) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bd71959d406e39a75f7576a54cf36021732cc7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY1ODc2NQ==", "bodyText": "done", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426658765", "createdAt": "2020-05-18T14:15:50Z", "author": {"login": "jaugsburger"}, "path": "core/src/main/java/io/questdb/griffin/SqlKeywords.java", "diffHunk": "@@ -642,4 +642,37 @@ public static boolean isColumnKeyword(CharSequence tok) {\n                 && (tok.charAt(i++) | 32) == 'm'\n                 && (tok.charAt(i) | 32) == 'n';\n     }\n+\n+    public static boolean isMaxKeyword(CharSequence tok) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNzc5MQ=="}, "originalCommit": {"oid": "2bd71959d406e39a75f7576a54cf36021732cc7c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzM1NzE5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo0MzowMVrOGW6Wqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo0MzowMVrOGW6Wqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY3NzkzMQ==", "bodyText": "lets do in-place clear() and break", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426677931", "createdAt": "2020-05-18T14:43:01Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "diffHunk": "@@ -1163,10 +1163,19 @@ private int getIndexOfTableForColumn(QueryModel model, CharSequence column, int\n             return orderByAdvice;\n         }\n \n-        CharSequenceObjHashMap<CharSequence> map = model.getAliasToColumnNameMap();\n+        CharSequenceObjHashMap<QueryColumn> map = model.getAliasToColumnMap();\n+        boolean clearOrderByAdvice = false;\n         for (int i = 0; i < len; i++) {\n-            orderByAdvice.add(nextLiteral(map.get(orderBy.getQuick(i).token)));\n-\n+            QueryColumn queryColumn = map.get(orderBy.getQuick(i).token);\n+            if (queryColumn.getAst().type == ExpressionNode.LITERAL) {\n+                orderByAdvice.add(nextLiteral(queryColumn.getAst().token));\n+            } else {\n+                clearOrderByAdvice = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf33c91db455f6a56e842c6d8a1634bfc456bd1a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzM2MzYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo0NDozNVrOGW6a1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo0NDozNVrOGW6a1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY3ODk5Ng==", "bodyText": "Perhaps this one in place too, i feel it would be less confusing. This is after looking where the boolean is being set", "url": "https://github.com/questdb/questdb/pull/289#discussion_r426678996", "createdAt": "2020-05-18T14:44:35Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -1839,13 +1845,18 @@ private RecordCursorFactory generateTableQuery(\n                     }\n \n                     if (orderByKeyColumn) {\n+                        metadata.setTimestampIndex(-1);\n                         if (model.getOrderByDirectionAdvice().getQuick(0) == QueryModel.ORDER_DIRECTION_ASCENDING) {\n                             symbolValueList.sort(Chars.CHAR_SEQUENCE_COMPARATOR);\n                         } else {\n                             symbolValueList.sort(Chars.CHAR_SEQUENCE_COMPARATOR_DESC);\n                         }\n                     }\n \n+                    if (clearTimestampIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf33c91db455f6a56e842c6d8a1634bfc456bd1a"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2275, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}