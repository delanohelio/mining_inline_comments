{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MDIxMjYx", "number": 347, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMzo0MFrOEBcfXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyMTo0NlrOEBcp_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTUwODEzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/cutlass/http/processors/TextQueryProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMzo0MFrOGdS62w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyMjoyNlrOGdTNMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MTg2Nw==", "bodyText": "comparison to MAX_VALUE seems redundant", "url": "https://github.com/questdb/questdb/pull/347#discussion_r433371867", "createdAt": "2020-06-01T17:13:40Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/http/processors/TextQueryProcessor.java", "diffHunk": "@@ -361,6 +361,10 @@ private boolean parseUrl(\n             skip = 0;\n         }\n \n+        if (configuration.getMaxQueryResponseRowLimit() != Long.MAX_VALUE && (stop - skip) > configuration.getMaxQueryResponseRowLimit()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d69da73001e3a2edfd773538b5a25cae30e3f481"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3NjU2MA==", "bodyText": "I would also try to use min/max functions, in case Java can JIT those without branches", "url": "https://github.com/questdb/questdb/pull/347#discussion_r433376560", "createdAt": "2020-06-01T17:22:26Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/http/processors/TextQueryProcessor.java", "diffHunk": "@@ -361,6 +361,10 @@ private boolean parseUrl(\n             skip = 0;\n         }\n \n+        if (configuration.getMaxQueryResponseRowLimit() != Long.MAX_VALUE && (stop - skip) > configuration.getMaxQueryResponseRowLimit()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MTg2Nw=="}, "originalCommit": {"oid": "d69da73001e3a2edfd773538b5a25cae30e3f481"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTUxNDI0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlCompiler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxNToyOFrOGdS-sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxNToyOFrOGdS-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3Mjg0OA==", "bodyText": "This is going to be hard to trace in multi-user environment. Compiled model for what SQL? Which FD?", "url": "https://github.com/questdb/questdb/pull/347#discussion_r433372848", "createdAt": "2020-06-01T17:15:28Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCompiler.java", "diffHunk": "@@ -1106,6 +1106,7 @@ private CompiledQuery compileUsingModel(SqlExecutionContext executionContext) th\n         ExecutionModel executionModel = compileExecutionModel(executionContext);\n         switch (executionModel.getModelType()) {\n             case ExecutionModel.QUERY:\n+                LOG.info().$(\"Compiled model: \").$((QueryModel) executionModel).$();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d69da73001e3a2edfd773538b5a25cae30e3f481"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTUzMzE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/cutlass/http/processors/JsonQueryProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyMTowN1rOGdTKfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyMTowN1rOGdTKfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3NTg3MA==", "bodyText": "it would be useful to track network usage per connection to try to find offenders. When total usage goes up, what do we do?\nlog structure is \"action done/doing [context_variable=value, context_variable2=value, ....]\"", "url": "https://github.com/questdb/questdb/pull/347#discussion_r433375870", "createdAt": "2020-06-01T17:21:07Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/http/processors/JsonQueryProcessor.java", "diffHunk": "@@ -264,7 +264,7 @@ protected static void header(\n     }\n \n     private static void readyForNextRequest(HttpConnectionContext context) {\n-        LOG.debug().$(\"all sent [fd=\").$(context.getFd()).$(']').$();\n+        LOG.info().$(\"Request complete, \").$(context.getTotalBytesSent()).$(\" bytes sent [fd=\").$(context.getFd()).$(']').$();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d69da73001e3a2edfd773538b5a25cae30e3f481"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTUzNTM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/cutlass/http/processors/JsonQueryProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyMTo0NlrOGdTL2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyNDoxN1rOGdTQ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3NjIxOA==", "bodyText": "same, comparison to MAX_VALUE is redundant", "url": "https://github.com/questdb/questdb/pull/347#discussion_r433376218", "createdAt": "2020-06-01T17:21:46Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/http/processors/JsonQueryProcessor.java", "diffHunk": "@@ -405,6 +405,10 @@ private boolean parseUrl(\n             skip = 0;\n         }\n \n+        if (configuration.getMaxQueryResponseRowLimit() != Long.MAX_VALUE && (stop - skip) > configuration.getMaxQueryResponseRowLimit()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d69da73001e3a2edfd773538b5a25cae30e3f481"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3NzUyMQ==", "bodyText": "Thats true, but most of the time maxQueryResponseRowLimit will be  Long.MAX_VALUE, I wanted to avoid the additional subtraction", "url": "https://github.com/questdb/questdb/pull/347#discussion_r433377521", "createdAt": "2020-06-01T17:24:17Z", "author": {"login": "patrickSpaceSurfer"}, "path": "core/src/main/java/io/questdb/cutlass/http/processors/JsonQueryProcessor.java", "diffHunk": "@@ -405,6 +405,10 @@ private boolean parseUrl(\n             skip = 0;\n         }\n \n+        if (configuration.getMaxQueryResponseRowLimit() != Long.MAX_VALUE && (stop - skip) > configuration.getMaxQueryResponseRowLimit()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3NjIxOA=="}, "originalCommit": {"oid": "d69da73001e3a2edfd773538b5a25cae30e3f481"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2204, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}