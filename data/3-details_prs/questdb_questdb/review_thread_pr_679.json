{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMjk4MDAx", "number": 679, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MDo0NVrOEzVHZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MzowN1rOEzVMEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjU4Nzg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MDo0NVrOHqfGQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MDo0NVrOHqfGQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMTc0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    // against metadat of the slave the context is assigned to\n          \n          \n            \n                                    // against metadata of the slave the context is assigned to", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514311745", "createdAt": "2020-10-29T14:40:45Z", "author": {"login": "mpsq"}, "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "diffHunk": "@@ -443,18 +443,30 @@ private void analyseEquals(QueryModel parent, ExpressionNode node) throws SqlExc\n                         // single table reference\n                         jc.slaveIndex = lhi;\n                         addWhereNode(parent, lhi, node);\n-                    } else {\n+                    } else if (lhi < rhi){\n+                        // we must align \"a\" nodes with slave index\n+                        // compiler will always be checking \"a\" columns\n+                        // against metadat of the slave the context is assigned to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjU5OTM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MzowMFrOHqfNfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MzowMFrOHqfNfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMzU5OQ==", "bodyText": "remove comment?", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514313599", "createdAt": "2020-10-29T14:43:00Z", "author": {"login": "mpsq"}, "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "diffHunk": "@@ -261,6 +261,8 @@ private Function getIfElseFunction(\n         return CaseCommon.getCaseFunction(position, returnType, picker, argsToPoke);\n     }\n \n+//    private", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjU5OTg1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MzowN1rOHqfN2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToyMToyN1rOHqhFfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMzY4OA==", "bodyText": "is that change intended?", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514313688", "createdAt": "2020-10-29T14:43:07Z", "author": {"login": "mpsq"}, "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "diffHunk": "@@ -240,9 +240,9 @@ private Function getIfElseFunction(\n                 throw SqlException.$(args.getQuick(3).getPosition(), \"duplicate branch\");\n             }\n \n-            if (elseBranch != null) {\n-                throw SqlException.$(elseBranch.getPosition(), \"duplicate boolean values\");\n-            }\n+//            if (elseBranch != null) {\n+//                throw SqlException.$(elseBranch.getPosition(), \"duplicate boolean values\");\n+//            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0NDMxNg==", "bodyText": "Yep, it is. Although we have two-state boolean, PG have three-state one and they have syntax such as\ncase x\n  when true then 1\n  when false then 0\n  else null\nend\nthat we have to support.", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514344316", "createdAt": "2020-10-29T15:21:27Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "diffHunk": "@@ -240,9 +240,9 @@ private Function getIfElseFunction(\n                 throw SqlException.$(args.getQuick(3).getPosition(), \"duplicate branch\");\n             }\n \n-            if (elseBranch != null) {\n-                throw SqlException.$(elseBranch.getPosition(), \"duplicate boolean values\");\n-            }\n+//            if (elseBranch != null) {\n+//                throw SqlException.$(elseBranch.getPosition(), \"duplicate boolean values\");\n+//            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMzY4OA=="}, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2147, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}