{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczOTAwNjIy", "number": 566, "title": "PG wire - bound parameters in nodejs fix #290", "bodyText": "", "createdAt": "2020-08-26T13:17:54Z", "url": "https://github.com/questdb/questdb/pull/566", "merged": true, "mergeCommit": {"oid": "002f0141ff6c02fa0a218e3241893ad39667035b"}, "closed": true, "closedAt": "2020-08-27T07:57:37Z", "author": {"login": "jaugsburger"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdB0m53gH2gAyNDczOTAwNjIyOmZiNDRiMDBjNTgyNzAyNmNiM2NjZWQ5ZDU0ZTQ3MTlkOWE2NDQ4YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdC7rWdAFqTQ3NjQ3NDM5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb44b00c5827026cb3cced9d54e4719d9a6448ae", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/fb44b00c5827026cb3cced9d54e4719d9a6448ae", "committedDate": "2020-08-23T21:08:43Z", "message": "PG Wire - flush message support, inferring parameter types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "283c534d85522d6f12b43aff60e66afbee0a59c5", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/283c534d85522d6f12b43aff60e66afbee0a59c5", "committedDate": "2020-08-24T11:13:33Z", "message": "PG Wire - fixed text/binary format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3987680a323fc8dd2e32901e1f67d7cf5583c54", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/c3987680a323fc8dd2e32901e1f67d7cf5583c54", "committedDate": "2020-08-26T12:39:40Z", "message": "PG Wire - removed commented code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NTMyMDM3", "url": "https://github.com/questdb/questdb/pull/566#pullrequestreview-475532037", "createdAt": "2020-08-26T14:13:37Z", "commit": {"oid": "c3987680a323fc8dd2e32901e1f67d7cf5583c54"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoxMzozOFrOHHOJ_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoxNDozOVrOHHONIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzNDAxNQ==", "bodyText": "This method is introduced but not tested. How does this map to PG type?", "url": "https://github.com/questdb/questdb/pull/566#discussion_r477334015", "createdAt": "2020-08-26T14:13:38Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/pgwire/PGConnectionContext.java", "diffHunk": "@@ -518,6 +540,12 @@ private void appendByteColumn(Record record, int columnIndex) {\n         responseAsciiSink.putLenEx(a);\n     }\n \n+    private void appendCharColumn(Record record, int columnIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3987680a323fc8dd2e32901e1f67d7cf5583c54"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzNDUxMQ==", "bodyText": "inferParameterType() is liable to return -1, which is not handled and not tested either.", "url": "https://github.com/questdb/questdb/pull/566#discussion_r477334511", "createdAt": "2020-08-26T14:14:19Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/pgwire/PGConnectionContext.java", "diffHunk": "@@ -690,11 +702,50 @@ private void bindVariables(\n                 throw BadProtocolException.INSTANCE;\n             }\n             ensureData(lo, valueLen, msgLimit, j);\n+            //infer type if needed\n+            if (inferTypes) {\n+                int pgType = inferParameterType(lo, valueLen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3987680a323fc8dd2e32901e1f67d7cf5583c54"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzNDgxNg==", "bodyText": "tests don't get here", "url": "https://github.com/questdb/questdb/pull/566#discussion_r477334816", "createdAt": "2020-08-26T14:14:39Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/cutlass/pgwire/PGConnectionContext.java", "diffHunk": "@@ -817,6 +868,16 @@ private CharSequence getStatementName(long lo, long hi) throws BadProtocolExcept\n         return statementName;\n     }\n \n+    private int inferParameterType(long lo, int valueLen) {\n+        for (int i = 0; i < typeManager.getProbeCount(); i++) {\n+            TypeAdapter typeAdapter = typeManager.getProbe(i);\n+            if (typeAdapter.probe(parameterHolder.of(lo, lo + valueLen))) {\n+                return typeOids.get(typeAdapter.getType());\n+            }\n+        }\n+        return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3987680a323fc8dd2e32901e1f67d7cf5583c54"}, "originalPosition": 214}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c58ec2c6aa0e4b3fa8eadf35940c2e0c1bc33f3", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/7c58ec2c6aa0e4b3fa8eadf35940c2e0c1bc33f3", "committedDate": "2020-08-26T22:06:24Z", "message": "PG Wire - PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NDc0Mzk2", "url": "https://github.com/questdb/questdb/pull/566#pullrequestreview-476474396", "createdAt": "2020-08-27T07:56:50Z", "commit": {"oid": "7c58ec2c6aa0e4b3fa8eadf35940c2e0c1bc33f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3195, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}