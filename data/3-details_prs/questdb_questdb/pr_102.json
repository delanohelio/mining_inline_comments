{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDIyMDA4", "number": 102, "title": "Round half even", "bodyText": "feat: round_half_even() implementation", "createdAt": "2020-01-07T14:44:37Z", "url": "https://github.com/questdb/questdb/pull/102", "merged": true, "mergeCommit": {"oid": "a8598682ffee42358c78d4386d64b5f30f5a88ff"}, "closed": true, "closedAt": "2020-01-07T17:30:30Z", "author": {"login": "TheTanc"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4AlfJAH2gAyMzYwMDIyMDA4OmFhNGIwMjEwM2VhYzM2MGQyNzk2NTYxZGU2M2E2MGZiZjU2ZTU5M2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4EOIygFqTMzOTI4MTMyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aa4b02103eac360d2796561de63a60fbf56e593d", "author": {"user": {"login": "TheTanc", "name": null}}, "url": "https://github.com/questdb/questdb/commit/aa4b02103eac360d2796561de63a60fbf56e593d", "committedDate": "2020-01-07T13:15:38Z", "message": "feat: round_half_even() implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e575f1ca42c5f7f9dc0d4ace56c53517b6297bbb", "author": {"user": {"login": "TheTanc", "name": null}}, "url": "https://github.com/questdb/questdb/commit/e575f1ca42c5f7f9dc0d4ace56c53517b6297bbb", "committedDate": "2020-01-07T13:58:48Z", "message": "feat: adding tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f55ce60aff93eb064c56f43458e27e3043827b45", "author": {"user": {"login": "TheTanc", "name": null}}, "url": "https://github.com/questdb/questdb/commit/f55ce60aff93eb064c56f43458e27e3043827b45", "committedDate": "2020-01-07T14:43:03Z", "message": "feat: removing unnecessary branches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce077acb798b817516a12d4f55c2fc3805106ddf", "author": {"user": {"login": "TheTanc", "name": null}}, "url": "https://github.com/questdb/questdb/commit/ce077acb798b817516a12d4f55c2fc3805106ddf", "committedDate": "2020-01-07T15:09:31Z", "message": "feat: adding boundary tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MjgxMzI2", "url": "https://github.com/questdb/questdb/pull/102#pullrequestreview-339281326", "createdAt": "2020-01-07T14:48:19Z", "commit": {"oid": "f55ce60aff93eb064c56f43458e27e3043827b45"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDo0ODoxOVrOFa7gYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDo0ODoxOVrOFa7gYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc4MjI0MQ==", "bodyText": "to round half to even we need to add 2 to the scale.  Pow2max is 14. According to the check scale = 15 is allowed., this will fail down the line because 15+2 > 14", "url": "https://github.com/questdb/questdb/pull/102#discussion_r363782241", "createdAt": "2020-01-07T14:48:19Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/engine/functions/math/RoundHalfEvenDoubleFunctionFactory.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*******************************************************************************\n+ *     ___                  _   ____  ____\n+ *    / _ \\ _   _  ___  ___| |_|  _ \\| __ )\n+ *   | | | | | | |/ _ \\/ __| __| | | |  _ \\\n+ *   | |_| | |_| |  __/\\__ \\ |_| |_| | |_) |\n+ *    \\__\\_\\\\__,_|\\___||___/\\__|____/|____/\n+ *\n+ *  Copyright (c) 2014-2019 Appsicle\n+ *  Copyright (c) 2019-2020 QuestDB\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ ******************************************************************************/\n+\n+package io.questdb.griffin.engine.functions.math;\n+\n+import io.questdb.cairo.CairoConfiguration;\n+import io.questdb.cairo.sql.Function;\n+import io.questdb.cairo.sql.Record;\n+import io.questdb.griffin.FunctionFactory;\n+import io.questdb.griffin.engine.functions.BinaryFunction;\n+import io.questdb.griffin.engine.functions.DoubleFunction;\n+import io.questdb.griffin.engine.functions.UnaryFunction;\n+import io.questdb.griffin.engine.functions.constants.DoubleConstant;\n+import io.questdb.std.Numbers;\n+import io.questdb.std.NumericException;\n+import io.questdb.std.ObjList;\n+\n+public class RoundHalfEvenDoubleFunctionFactory implements FunctionFactory {\n+    @Override\n+    public String getSignature() {\n+        return \"round_half_even(DI)\";\n+    }\n+\n+    @Override\n+    public Function newInstance(ObjList<Function> args, int position, CairoConfiguration configuration) {\n+        Function scale = args.getQuick(1);\n+        if (scale.isConstant()) {\n+            int scaleValue = scale.getInt(null);\n+            if (scaleValue != Numbers.INT_NaN) {\n+                if (scaleValue > -1 && scaleValue < Numbers.pow10max + 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f55ce60aff93eb064c56f43458e27e3043827b45"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3335, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}