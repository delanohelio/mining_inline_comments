{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTY4MzA3", "number": 348, "title": "feature(griffin) - LT JOIN ", "bodyText": "", "createdAt": "2020-06-01T19:24:54Z", "url": "https://github.com/questdb/questdb/pull/348", "merged": true, "mergeCommit": {"oid": "5fc5d90327894f857f3bb4caad207573968e69f1"}, "closed": true, "closedAt": "2020-06-04T10:25:33Z", "author": {"login": "jaugsburger"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcm8h7ZAH2gAyNDI2MTY4MzA3OjM2ZWRlNjNhMjZhZGVjOTI1NmEzYTNmZDk2ZWNlYzk4ZGY5YWJiZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn7c4-gFqTQyNDMwNjk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "36ede63a26adec9256a3a3fd96ecec98df9abbdb", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/36ede63a26adec9256a3a3fd96ecec98df9abbdb", "committedDate": "2020-06-01T09:06:34Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d0697a758d0b4c0657aa003eed4cdf19b55ed0e", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/1d0697a758d0b4c0657aa003eed4cdf19b55ed0e", "committedDate": "2020-06-01T11:16:01Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2a3bdbf4101bb2f86e632539d05f1d745971604", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/d2a3bdbf4101bb2f86e632539d05f1d745971604", "committedDate": "2020-06-01T17:55:10Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a811f4fe34f239a7904e62dc7e43674b323cf8ec", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/a811f4fe34f239a7904e62dc7e43674b323cf8ec", "committedDate": "2020-06-01T19:40:33Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e0180a0bb02ad32bf85906fcadcf2a41a61cfe9", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/6e0180a0bb02ad32bf85906fcadcf2a41a61cfe9", "committedDate": "2020-06-01T20:48:23Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c35b3c935d0051aaff3691a9b7246f27935f200", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/0c35b3c935d0051aaff3691a9b7246f27935f200", "committedDate": "2020-06-02T09:00:09Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb7aa3df057f6db6453b323a70c8ae5e0649e20a", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/cb7aa3df057f6db6453b323a70c8ae5e0649e20a", "committedDate": "2020-06-02T11:01:09Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDI3Mjky", "url": "https://github.com/questdb/questdb/pull/348#pullrequestreview-423427292", "createdAt": "2020-06-03T10:37:04Z", "commit": {"oid": "cb7aa3df057f6db6453b323a70c8ae5e0649e20a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozNzowNFrOGeWFDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozOTowM1rOGeWJTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3MjIwNw==", "bodyText": "This is similar to asof join. Can we make factory constructor a functional interface? These factories take the same args. This way we can remove code duplication", "url": "https://github.com/questdb/questdb/pull/348#discussion_r434472207", "createdAt": "2020-06-03T10:37:04Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -242,6 +267,133 @@ private RecordCursorFactory createFullFatAsOfJoin(\n         return master;\n     }\n \n+    @NotNull\n+    private RecordCursorFactory createFullFatLtJoin(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb7aa3df057f6db6453b323a70c8ae5e0649e20a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3MjQ5Mw==", "bodyText": "this is good candidate for a list lookup and branch removal", "url": "https://github.com/questdb/questdb/pull/348#discussion_r434472493", "createdAt": "2020-06-03T10:37:36Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -1607,7 +1803,7 @@ private RecordCursorFactory generateTableQuery(\n                 throw e;\n             }\n \n-            boolean requiresTimestamp = model.getJoinType() == QueryModel.JOIN_ASOF || model.getJoinType() == QueryModel.JOIN_CROSS;\n+            boolean requiresTimestamp = model.getJoinType() == QueryModel.JOIN_ASOF || model.getJoinType() == QueryModel.JOIN_CROSS || model.getJoinType() == QueryModel.JOIN_LT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb7aa3df057f6db6453b323a70c8ae5e0649e20a"}, "originalPosition": 222}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3MzI5Mg==", "bodyText": "another list lookup, also feels that for implied timestamp we should use same joins that participate in requiredTimestamp just above. Do you mind checking why CROSS join isn't present here?", "url": "https://github.com/questdb/questdb/pull/348#discussion_r434473292", "createdAt": "2020-06-03T10:39:03Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "diffHunk": "@@ -609,7 +609,7 @@ private void createImpliedDependencies(QueryModel parent) {\n         JoinContext jc;\n         for (int i = 0, n = models.size(); i < n; i++) {\n             QueryModel m = models.getQuick(i);\n-            if (m.getJoinType() == QueryModel.JOIN_ASOF || m.getJoinType() == QueryModel.JOIN_SPLICE) {\n+            if (m.getJoinType() == QueryModel.JOIN_ASOF || m.getJoinType() == QueryModel.JOIN_SPLICE || m.getJoinType() == QueryModel.JOIN_LT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb7aa3df057f6db6453b323a70c8ae5e0649e20a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b48ea73934c21d47565900a2392588263f2ff64", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/8b48ea73934c21d47565900a2392588263f2ff64", "committedDate": "2020-06-03T11:35:03Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjAxMTI5", "url": "https://github.com/questdb/questdb/pull/348#pullrequestreview-423601129", "createdAt": "2020-06-03T14:18:18Z", "commit": {"oid": "8b48ea73934c21d47565900a2392588263f2ff64"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxODoxOFrOGeeEFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxODoxOFrOGeeEFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMzAyOQ==", "bodyText": "could we make this a static final variable? Annoyingly this is an allocating call in java", "url": "https://github.com/questdb/questdb/pull/348#discussion_r434603029", "createdAt": "2020-06-03T14:18:18Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -753,14 +627,15 @@ private RecordCursorFactory generateJoins(QueryModel model, SqlExecutionContext\n                                     );\n                                 }\n                             } else {\n-                                master = createFullFatAsOfJoin(\n+                                master = createFullFatJoin(\n                                         master,\n                                         masterMetadata,\n                                         masterAlias,\n                                         slave,\n                                         slaveMetadata,\n                                         slaveModel.getName(),\n-                                        slaveModel.getJoinKeywordPosition()\n+                                        slaveModel.getJoinKeywordPosition(),\n+                                        SqlCodeGenerator::createFullFatAsOfJoin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b48ea73934c21d47565900a2392588263f2ff64"}, "originalPosition": 184}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5aae4d46b07c7c39cdfe6b3ca1ca52b77ad223a", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/a5aae4d46b07c7c39cdfe6b3ca1ca52b77ad223a", "committedDate": "2020-06-03T19:13:45Z", "message": "test for milli Timestamp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e98e8ff8c9c17160cc4c61c054c458241776b936", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/e98e8ff8c9c17160cc4c61c054c458241776b936", "committedDate": "2020-06-03T20:53:43Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDg3MDMy", "url": "https://github.com/questdb/questdb/pull/348#pullrequestreview-424087032", "createdAt": "2020-06-04T04:05:25Z", "commit": {"oid": "e98e8ff8c9c17160cc4c61c054c458241776b936"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowNToyNVrOGe1FxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowNToyNVrOGe1FxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MDI5Mw==", "bodyText": "I mean sparse array. I wouldn't think loop is faster than || comparison. Probably not. Using sparse array lookup will look like:\nboolean requiresTimeatamp = joinsRequiringTimestamp[model.getJoinType()];", "url": "https://github.com/questdb/questdb/pull/348#discussion_r434980293", "createdAt": "2020-06-04T04:05:25Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -1953,6 +2028,15 @@ private RecordCursorFactory generateTableQuery(\n         }\n     }\n \n+    private boolean requiresTimestamp(int joinType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98e8ff8c9c17160cc4c61c054c458241776b936"}, "originalPosition": 166}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04862822c59ee73961211e6930791920626c5fe4", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/04862822c59ee73961211e6930791920626c5fe4", "committedDate": "2020-06-04T08:40:13Z", "message": "fix(griffin) - lt join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MzA2OTYy", "url": "https://github.com/questdb/questdb/pull/348#pullrequestreview-424306962", "createdAt": "2020-06-04T10:25:06Z", "commit": {"oid": "04862822c59ee73961211e6930791920626c5fe4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3220, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}