{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMjk4MDAx", "number": 679, "title": "Kafka jdbc fix", "bodyText": "", "createdAt": "2020-10-29T14:01:36Z", "url": "https://github.com/questdb/questdb/pull/679", "merged": true, "mergeCommit": {"oid": "74eb8dfdcc4530d4e218c8ba2814b9930736939b"}, "closed": true, "closedAt": "2020-10-30T10:19:49Z", "author": {"login": "bluestreak01"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXSrDygFqTUxOTY5NzI1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXj61ZAFqTUyMDUyNzI3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Njk3MjU3", "url": "https://github.com/questdb/questdb/pull/679#pullrequestreview-519697257", "createdAt": "2020-10-29T14:02:49Z", "commit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzM3MDEy", "url": "https://github.com/questdb/questdb/pull/679#pullrequestreview-519737012", "createdAt": "2020-10-29T14:39:59Z", "commit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MDo0NVrOHqfGQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0MzowN1rOHqfN2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMTc0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    // against metadat of the slave the context is assigned to\n          \n          \n            \n                                    // against metadata of the slave the context is assigned to", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514311745", "createdAt": "2020-10-29T14:40:45Z", "author": {"login": "mpsq"}, "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "diffHunk": "@@ -443,18 +443,30 @@ private void analyseEquals(QueryModel parent, ExpressionNode node) throws SqlExc\n                         // single table reference\n                         jc.slaveIndex = lhi;\n                         addWhereNode(parent, lhi, node);\n-                    } else {\n+                    } else if (lhi < rhi){\n+                        // we must align \"a\" nodes with slave index\n+                        // compiler will always be checking \"a\" columns\n+                        // against metadat of the slave the context is assigned to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMzU5OQ==", "bodyText": "remove comment?", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514313599", "createdAt": "2020-10-29T14:43:00Z", "author": {"login": "mpsq"}, "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "diffHunk": "@@ -261,6 +261,8 @@ private Function getIfElseFunction(\n         return CaseCommon.getCaseFunction(position, returnType, picker, argsToPoke);\n     }\n \n+//    private", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxMzY4OA==", "bodyText": "is that change intended?", "url": "https://github.com/questdb/questdb/pull/679#discussion_r514313688", "createdAt": "2020-10-29T14:43:07Z", "author": {"login": "mpsq"}, "path": "core/src/main/java/io/questdb/griffin/engine/functions/conditional/SwitchFunctionFactory.java", "diffHunk": "@@ -240,9 +240,9 @@ private Function getIfElseFunction(\n                 throw SqlException.$(args.getQuick(3).getPosition(), \"duplicate branch\");\n             }\n \n-            if (elseBranch != null) {\n-                throw SqlException.$(elseBranch.getPosition(), \"duplicate boolean values\");\n-            }\n+//            if (elseBranch != null) {\n+//                throw SqlException.$(elseBranch.getPosition(), \"duplicate boolean values\");\n+//            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e29325bcbf42ed2810a5c3ad62723c85165e7"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9d49ecaa2ae3bba7f3dd49b5db69cf2c4465233", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/f9d49ecaa2ae3bba7f3dd49b5db69cf2c4465233", "committedDate": "2020-10-30T07:48:41Z", "message": "chore(griffin): kafka jdbc wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bef4205844ceac197ace4b37a244c201d0c45b6", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/0bef4205844ceac197ace4b37a244c201d0c45b6", "committedDate": "2020-10-30T07:48:41Z", "message": "fix(kafka): fixed all syntax issues with metadata SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f53aad0ef75480d5e4ec3a5464346b916dfe6f53", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/f53aad0ef75480d5e4ec3a5464346b916dfe6f53", "committedDate": "2020-10-30T07:48:42Z", "message": "chore(kafka): introduced \"E'str'\", fixed stack overflow in joins, homogenized PG metadata catalogue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fee830ec12fdf4cf1d2accdeaa7ce296a53c8265", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/fee830ec12fdf4cf1d2accdeaa7ce296a53c8265", "committedDate": "2020-10-30T07:48:42Z", "message": "chore(kafka): prepare for parsing array dereference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55fb314489c94e992a9c9b9aa96912a83d02ccad", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/55fb314489c94e992a9c9b9aa96912a83d02ccad", "committedDate": "2020-10-30T07:48:42Z", "message": "feat(griffin): support for array dereference in expression parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6724bce632fb1639bcc56ac04df0df920ed3e7cb", "author": {"user": null}, "url": "https://github.com/questdb/questdb/commit/6724bce632fb1639bcc56ac04df0df920ed3e7cb", "committedDate": "2020-10-30T07:48:42Z", "message": "fix(griffin) - support postgres types for kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "508852e7a7ddeab6df1dd7675c5320bcc2ffb745", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/508852e7a7ddeab6df1dd7675c5320bcc2ffb745", "committedDate": "2020-10-30T07:48:42Z", "message": "feat(griffin): a lot of things done, please read description\n\n- refactored function cache to parse function signature only once and support array types\n- refactored function parser to use function descriptor instead of parsing string again\n- refactored function parser to match array types correctly\n- refactored function parser not to create constants prematurely but create constant once against to level function. This leads to fewer allocations\n- added generic StrArrayFunction and introduced [] operator for dereferencing string arrays\n- created \"current_schemas\" function that is required for PG metadata\n- fixed memory leak in PGJobContext\n- created and tested \"replace(string, from, to)\" function for string arguments. It is required by PG metadata queries. Added tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95100932b885c16f6b5961be5066db4c6821b82f", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/95100932b885c16f6b5961be5066db4c6821b82f", "committedDate": "2020-10-30T07:48:42Z", "message": "feat(griffin): implemented \"function call\" dereference, e.g. f().x in ExpressionParser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e6965863e558195721412ac7fb266ab1ae8a366", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/5e6965863e558195721412ac7fb266ab1ae8a366", "committedDate": "2020-10-30T07:48:42Z", "message": "Update core/src/main/java/io/questdb/griffin/SqlOptimiser.java\n\nCo-authored-by: M\u00e9ril <meril.pilon@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5efb0c0577fd0a8da51986ceea514e654188682e", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/5efb0c0577fd0a8da51986ceea514e654188682e", "committedDate": "2020-10-30T07:48:42Z", "message": "feat(griffin): added ability to execute SQL in select clause (doesn't make sense? read details)\n\nPostgresSQL metadata SQLs sometimes look like:\n\n```sql\nselect a, (select a,n,c from x).n, c from y\n```\n\nWe now support this sort of query and resolve '.n' to column name in the cursor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be6dbfaae34489e0b54fe1878e9b3ba16859509d", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/be6dbfaae34489e0b54fe1878e9b3ba16859509d", "committedDate": "2020-10-30T08:20:46Z", "message": "fix: fixed tests broken by new JDK release"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4d98d9cd2359857e3603870cb91a3c31a4d2788", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/c4d98d9cd2359857e3603870cb91a3c31a4d2788", "committedDate": "2020-10-29T15:21:56Z", "message": "Update core/src/main/java/io/questdb/griffin/SqlOptimiser.java\n\nCo-authored-by: M\u00e9ril <meril.pilon@gmail.com>"}, "afterCommit": {"oid": "be6dbfaae34489e0b54fe1878e9b3ba16859509d", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/be6dbfaae34489e0b54fe1878e9b3ba16859509d", "committedDate": "2020-10-30T08:20:46Z", "message": "fix: fixed tests broken by new JDK release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a80ac42889b683f13dce2a0af60b4da60916c45", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/0a80ac42889b683f13dce2a0af60b4da60916c45", "committedDate": "2020-10-30T08:51:38Z", "message": "fix: fixed the underlying issue, which caused timezone tests to break"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d412fc354477446f89ab2908874b860c2fd0abc", "author": {"user": {"login": "bluestreak01", "name": "Vlad Ilyushchenko"}}, "url": "https://github.com/questdb/questdb/commit/1d412fc354477446f89ab2908874b860c2fd0abc", "committedDate": "2020-10-30T09:18:39Z", "message": "fix: moved timezone1 tests to PST, EST still changed between JDKs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNTE4Mzg4", "url": "https://github.com/questdb/questdb/pull/679#pullrequestreview-520518388", "createdAt": "2020-10-30T09:55:50Z", "commit": {"oid": "0a80ac42889b683f13dce2a0af60b4da60916c45"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNTI3Mjc2", "url": "https://github.com/questdb/questdb/pull/679#pullrequestreview-520527276", "createdAt": "2020-10-30T10:08:26Z", "commit": {"oid": "1d412fc354477446f89ab2908874b860c2fd0abc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3150, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}