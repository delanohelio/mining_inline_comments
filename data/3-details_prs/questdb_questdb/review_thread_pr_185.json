{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NzAxNDEy", "number": 185, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzoyNzoxMlrODzlb3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzoyNzoxMlrODzlb3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDE3MzA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzoyNzoxMlrOGIG1ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMDo0Mzo0OVrOGIOWUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1Mzc2NQ==", "bodyText": "I've been thinking that avg() should have the option of using ksum and nsum.", "url": "https://github.com/questdb/questdb/pull/185#discussion_r411153765", "createdAt": "2020-04-20T07:27:12Z", "author": {"login": "jaugsburger"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -427,6 +431,20 @@ private RecordCursorFactory createSpliceJoin(\n                     vafList.add(new SumTimestampVectorAggregateFunction(ast.rhs.position, columnIndex));\n                     continue;\n                 }\n+            } else if (isSingleColumnFunction(ast, \"ksum\")) {\n+                final int columnIndex = metadata.getColumnIndex(ast.rhs.token);\n+                final int type = metadata.getColumnType(columnIndex);\n+                if (type == ColumnType.DOUBLE) {\n+                    vafList.add(new KSumDoubleVectorAggregateFunction(ast.rhs.position, columnIndex, workerCount));\n+                    continue;\n+                }\n+            } else if (isSingleColumnFunction(ast, \"nsum\")) {\n+                final int columnIndex = metadata.getColumnIndex(ast.rhs.token);\n+                final int type = metadata.getColumnType(columnIndex);\n+                if (type == ColumnType.DOUBLE) {\n+                    vafList.add(new NSumDoubleVectorAggregateFunction(ast.rhs.position, columnIndex, workerCount));\n+                    continue;\n+                }\n             } else if (isSingleColumnFunction(ast, \"avg\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "771bada6476ba0d1174ce1570ca5d216d2c2e3b4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI3Njg4MA==", "bodyText": "Yep, i agree. This PR is quite large as it is. I feel it would make sense to add avg() impls later.", "url": "https://github.com/questdb/questdb/pull/185#discussion_r411276880", "createdAt": "2020-04-20T10:43:49Z", "author": {"login": "bluestreak01"}, "path": "core/src/main/java/io/questdb/griffin/SqlCodeGenerator.java", "diffHunk": "@@ -427,6 +431,20 @@ private RecordCursorFactory createSpliceJoin(\n                     vafList.add(new SumTimestampVectorAggregateFunction(ast.rhs.position, columnIndex));\n                     continue;\n                 }\n+            } else if (isSingleColumnFunction(ast, \"ksum\")) {\n+                final int columnIndex = metadata.getColumnIndex(ast.rhs.token);\n+                final int type = metadata.getColumnType(columnIndex);\n+                if (type == ColumnType.DOUBLE) {\n+                    vafList.add(new KSumDoubleVectorAggregateFunction(ast.rhs.position, columnIndex, workerCount));\n+                    continue;\n+                }\n+            } else if (isSingleColumnFunction(ast, \"nsum\")) {\n+                final int columnIndex = metadata.getColumnIndex(ast.rhs.token);\n+                final int type = metadata.getColumnType(columnIndex);\n+                if (type == ColumnType.DOUBLE) {\n+                    vafList.add(new NSumDoubleVectorAggregateFunction(ast.rhs.position, columnIndex, workerCount));\n+                    continue;\n+                }\n             } else if (isSingleColumnFunction(ast, \"avg\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1Mzc2NQ=="}, "originalCommit": {"oid": "771bada6476ba0d1174ce1570ca5d216d2c2e3b4"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2254, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}