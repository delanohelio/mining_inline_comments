{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODY2NDUz", "number": 488, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo0ODowNVrOEL2p0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo0ODowNVrOEL2p0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODY1MjMyOnYy", "diffSide": "RIGHT", "path": "ui/src/telemetry/process.worker.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo0ODowNVrOGtoKww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODoxODoyMlrOGtz5Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5NzIxOQ==", "bodyText": "We should change telemetry table structure to have created as timestamp. This will enable this SQL to become:\ntelemetry where created > '2020-06-29T21:46:32.973Z'\nwith designated timestamp the above SQL will become couple of orders of magnitude more efficient", "url": "https://github.com/questdb/questdb/pull/488#discussion_r450497219", "createdAt": "2020-07-06T21:48:05Z", "author": {"login": "bluestreak01"}, "path": "ui/src/telemetry/process.worker.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import { API, Table } from \"./constants\"\n+\n+import type { WorkerPayloadShape } from \"types\"\n+import { fetchApi } from \"utils\"\n+import * as QuestDB from \"utils/questdb\"\n+\n+const start = async (payload: WorkerPayloadShape) => {\n+  const quest = new QuestDB.Client(payload.host)\n+\n+  const result = await quest.queryRaw(`\n+    SELECT *\n+      FROM ${Table.MAIN}\n+      WHERE created > to_date('${payload.lastUpdated}', 'yyyy-MM-ddTHH:mm:ss.SSSZ')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c970b81d7ea85299b233b566c2f461eff4cd4b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4OTM0Mw==", "bodyText": "Sounds good :)", "url": "https://github.com/questdb/questdb/pull/488#discussion_r450689343", "createdAt": "2020-07-07T08:18:22Z", "author": {"login": "mpsq"}, "path": "ui/src/telemetry/process.worker.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import { API, Table } from \"./constants\"\n+\n+import type { WorkerPayloadShape } from \"types\"\n+import { fetchApi } from \"utils\"\n+import * as QuestDB from \"utils/questdb\"\n+\n+const start = async (payload: WorkerPayloadShape) => {\n+  const quest = new QuestDB.Client(payload.host)\n+\n+  const result = await quest.queryRaw(`\n+    SELECT *\n+      FROM ${Table.MAIN}\n+      WHERE created > to_date('${payload.lastUpdated}', 'yyyy-MM-ddTHH:mm:ss.SSSZ')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5NzIxOQ=="}, "originalCommit": {"oid": "73c970b81d7ea85299b233b566c2f461eff4cd4b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2165, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}