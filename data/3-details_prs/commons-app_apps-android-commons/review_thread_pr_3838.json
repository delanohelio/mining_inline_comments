{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDU4MjIz", "number": 3838, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozMDozNVrOEH6PrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo0NjoxNlrOEIuZXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzI5NzcyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/wikidata/model/WikidataSetClaim.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozMDozNVrOGnjN0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowOTo1OVrOGnwezQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNDYyNw==", "bodyText": "This is a Statement_partial though not as partial", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r444124627", "createdAt": "2020-06-23T10:30:35Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/model/WikidataSetClaim.kt", "diffHunk": "@@ -0,0 +1,30 @@\n+package fr.free.nrw.commons.wikidata.model\n+\n+import com.google.gson.annotations.SerializedName\n+import fr.free.nrw.commons.wikidata.WikidataProperties\n+import org.wikipedia.wikidata.Snak_partial\n+\n+data class WikidataSetClaim(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dda047543c159de6d13d736bdc11ffeda20201"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MTk2NQ==", "bodyText": "Thanks for pointing me to Statement_partial. I have updated the PR.", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r444341965", "createdAt": "2020-06-23T16:09:59Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/model/WikidataSetClaim.kt", "diffHunk": "@@ -0,0 +1,30 @@\n+package fr.free.nrw.commons.wikidata.model\n+\n+import com.google.gson.annotations.SerializedName\n+import fr.free.nrw.commons.wikidata.WikidataProperties\n+import org.wikipedia.wikidata.Snak_partial\n+\n+data class WikidataSetClaim(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNDYyNw=="}, "originalCommit": {"oid": "01dda047543c159de6d13d736bdc11ffeda20201"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzI5ODY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/OkHttpConnectionFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozMDo1MFrOGnjOYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozMDo1MFrOGnjOYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNDc3MA==", "bodyText": "revert", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r444124770", "createdAt": "2020-06-23T10:30:50Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/OkHttpConnectionFactory.java", "diffHunk": "@@ -41,7 +41,7 @@ private static OkHttpClient createClient() {\n \n     private static HttpLoggingInterceptor getLoggingInterceptor() {\n         final HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor()\n-            .setLevel(Level.BASIC);\n+            .setLevel(Level.BODY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dda047543c159de6d13d736bdc11ffeda20201"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzMwODE5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozNDowNVrOGnjUZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozNDowNVrOGnjUZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNjMwOQ==", "bodyText": "We can delete this log", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r444126309", "createdAt": "2020-06-23T10:34:05Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "diffHunk": "@@ -127,29 +135,40 @@ private void onAddCaptionResponse(Long fileEntityId, MwPostResponse response) {\n     }\n   }\n \n-  public void createImageClaim(@Nullable final WikidataPlace wikidataPlace, final UploadResult imageUpload) {\n+  public void createClaim(@Nullable final WikidataPlace wikidataPlace, final String fileName, final\n+  HashMap<String, String> captions) {\n     if (!(directKvStore.getBoolean(\"Picture_Has_Correct_Location\", true))) {\n-      Timber.d(\"Image location and nearby place location mismatched, so Wikidata item won't be edited\");\n+      Timber\n+          .d(\"Image location and nearby place location mismatched, so Wikidata item won't be edited\");\n       return;\n     }\n-    editWikidataImageProperty(wikidataPlace, imageUpload);\n+    addImageAndMediaLegends(wikidataPlace, fileName, captions);\n   }\n \n-  @SuppressLint(\"CheckResult\")\n-  private void editWikidataImageProperty(final WikidataItem wikidataItem, final UploadResult imageUpload) {\n-    wikidataClient.createImageClaim(wikidataItem, String.format(\"\\\"%s\\\"\", imageUpload.getFilename()))\n-        .flatMap(revisionId -> {\n-          if (revisionId != -1) {\n-            return wikidataClient.addEditTag(revisionId, COMMONS_APP_TAG, COMMONS_APP_EDIT_REASON);\n-          }\n-          throw new RuntimeException(\"Unable to edit wikidata item\");\n-        })\n-        .subscribeOn(Schedulers.io())\n+  public void addImageAndMediaLegends(final WikidataItem wikidataItem, final String fileName,\n+      HashMap<String, String> captions) {\n+    Snak_partial p18 = new Snak_partial(\"value\", WikidataProperties.IMAGE.getPropertyName(),\n+        new ValueString(fileName.replace(\"File:\", \"\")));\n+\n+    List<Snak_partial> snaks = new ArrayList<>();\n+    for (String key : captions.keySet()) {\n+      snaks.add(new Snak_partial(\"value\",\n+          WikidataProperties.MEDIA_LEGENDS.getPropertyName(), new DataValue.MonoLingualText_partial(\n+          new WikiBaseMonolingualTextValue(captions.get(key), key))));\n+    }\n+\n+    String id = wikidataItem.getId() + \"$\" + UUID.randomUUID().toString();\n+    WikidataSetClaim claim = new WikidataSetClaim(p18, id, snaks);\n+\n+    Timber.d(\"Claim object is %s\", gson.toJson(claim));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dda047543c159de6d13d736bdc11ffeda20201"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzM0Nzk0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo0NjozMlrOGnjtlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo0NjozMlrOGnjtlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzMjc1Ng==", "bodyText": "inside the loop the value in the map is used so iterating the entryset would be better.\nThis could also be made to more resemble how EditClaim works where the construction of the object bears resemblance to the json but y'know optional", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r444132756", "createdAt": "2020-06-23T10:46:32Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "diffHunk": "@@ -127,29 +135,40 @@ private void onAddCaptionResponse(Long fileEntityId, MwPostResponse response) {\n     }\n   }\n \n-  public void createImageClaim(@Nullable final WikidataPlace wikidataPlace, final UploadResult imageUpload) {\n+  public void createClaim(@Nullable final WikidataPlace wikidataPlace, final String fileName, final\n+  HashMap<String, String> captions) {\n     if (!(directKvStore.getBoolean(\"Picture_Has_Correct_Location\", true))) {\n-      Timber.d(\"Image location and nearby place location mismatched, so Wikidata item won't be edited\");\n+      Timber\n+          .d(\"Image location and nearby place location mismatched, so Wikidata item won't be edited\");\n       return;\n     }\n-    editWikidataImageProperty(wikidataPlace, imageUpload);\n+    addImageAndMediaLegends(wikidataPlace, fileName, captions);\n   }\n \n-  @SuppressLint(\"CheckResult\")\n-  private void editWikidataImageProperty(final WikidataItem wikidataItem, final UploadResult imageUpload) {\n-    wikidataClient.createImageClaim(wikidataItem, String.format(\"\\\"%s\\\"\", imageUpload.getFilename()))\n-        .flatMap(revisionId -> {\n-          if (revisionId != -1) {\n-            return wikidataClient.addEditTag(revisionId, COMMONS_APP_TAG, COMMONS_APP_EDIT_REASON);\n-          }\n-          throw new RuntimeException(\"Unable to edit wikidata item\");\n-        })\n-        .subscribeOn(Schedulers.io())\n+  public void addImageAndMediaLegends(final WikidataItem wikidataItem, final String fileName,\n+      HashMap<String, String> captions) {\n+    Snak_partial p18 = new Snak_partial(\"value\", WikidataProperties.IMAGE.getPropertyName(),\n+        new ValueString(fileName.replace(\"File:\", \"\")));\n+\n+    List<Snak_partial> snaks = new ArrayList<>();\n+    for (String key : captions.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dda047543c159de6d13d736bdc11ffeda20201"}, "originalPosition": 195}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTg0MjIyOnYy", "diffSide": "RIGHT", "path": "data-client/src/main/java/org/wikipedia/wikidata/DataValue.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo0NjoxNlrOGo3C2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzowNDo1OVrOGpD3SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5ODA3Mw==", "bodyText": "If we have achieved full mapping of this data value then we can get rid of the _partial suffix, my intention with them was \"I have no idea if this is absolutely the true network model\"", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r445498073", "createdAt": "2020-06-25T11:46:16Z", "author": {"login": "macgills"}, "path": "data-client/src/main/java/org/wikipedia/wikidata/DataValue.kt", "diffHunk": "@@ -87,7 +87,7 @@ sealed class DataValue(val type: String) {\n     //        \"language\": \"ko\"\n     //    }\n     //    }\n-    class MonoLingualText_partial() : DataValue(TYPE) {\n+    class MonoLingualText_partial(val value: WikiBaseMonolingualTextValue) : DataValue(TYPE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67bdc9e87668ccef0272d8224bf1989fa71768a0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcwODEwNQ==", "bodyText": "Updated.", "url": "https://github.com/commons-app/apps-android-commons/pull/3838#discussion_r445708105", "createdAt": "2020-06-25T17:04:59Z", "author": {"login": "maskaravivek"}, "path": "data-client/src/main/java/org/wikipedia/wikidata/DataValue.kt", "diffHunk": "@@ -87,7 +87,7 @@ sealed class DataValue(val type: String) {\n     //        \"language\": \"ko\"\n     //    }\n     //    }\n-    class MonoLingualText_partial() : DataValue(TYPE) {\n+    class MonoLingualText_partial(val value: WikiBaseMonolingualTextValue) : DataValue(TYPE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5ODA3Mw=="}, "originalCommit": {"oid": "67bdc9e87668ccef0272d8224bf1989fa71768a0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4369, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}