{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNDg4NjQz", "number": 3877, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDo1NzowMlrOEUj3lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDo1NzowMlrOEUj3lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTk0NjQ3OnYy", "diffSide": "RIGHT", "path": "app/src/test/kotlin/fr/free/nrw/commons/nearby/CheckboxTriStatesTest.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDo1NzowMlrOG61JfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzozMDoyNVrOG65lWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0MTM3Mg==", "bodyText": "Hi @neslihanturan , could we get brief Javadocs for each of the tests please? Happy to merge when that is done. :)", "url": "https://github.com/commons-app/apps-android-commons/pull/3877#discussion_r464341372", "createdAt": "2020-08-03T10:57:02Z", "author": {"login": "misaochan"}, "path": "app/src/test/kotlin/fr/free/nrw/commons/nearby/CheckboxTriStatesTest.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package fr.free.nrw.commons.nearby\n+\n+import android.widget.CompoundButton\n+import androidx.test.core.app.ApplicationProvider\n+import com.nhaarman.mockitokotlin2.verify\n+import com.nhaarman.mockitokotlin2.verifyNoMoreInteractions\n+import fr.free.nrw.commons.TestCommonsApplication\n+import fr.free.nrw.commons.location.LatLng\n+import fr.free.nrw.commons.nearby.CheckBoxTriStates.CHECKED\n+import fr.free.nrw.commons.nearby.CheckBoxTriStates.UNCHECKED\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.mockito.Mock\n+import org.mockito.MockitoAnnotations\n+import org.robolectric.RobolectricTestRunner\n+import org.robolectric.annotation.Config\n+\n+@RunWith(RobolectricTestRunner::class)\n+@Config(sdk = [21], application = TestCommonsApplication::class)\n+class CheckBoxTriStatesTest {\n+    @Mock\n+    internal lateinit var callback: CheckBoxTriStates.Callback\n+    @Mock\n+    internal lateinit var onCheckChangeListener: CompoundButton.OnCheckedChangeListener\n+    private lateinit var checkBoxTriStates: CheckBoxTriStates\n+\n+    /**\n+     * initial setup\n+     */\n+    @Before\n+    @Throws(Exception::class)\n+    fun setUp() {\n+        MockitoAnnotations.initMocks(this)\n+        checkBoxTriStates = CheckBoxTriStates(ApplicationProvider.getApplicationContext())\n+        checkBoxTriStates.setCallback(callback)\n+        checkBoxTriStates.setOnCheckedChangeListener(onCheckChangeListener)\n+    }\n+\n+    @Test\n+    fun testSetStateWhenSameState() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e3b564d7903753e9646640ec736b5216d67882"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQxNDA0Mw==", "bodyText": "Done @misaochan :)", "url": "https://github.com/commons-app/apps-android-commons/pull/3877#discussion_r464414043", "createdAt": "2020-08-03T13:30:25Z", "author": {"login": "neslihanturan"}, "path": "app/src/test/kotlin/fr/free/nrw/commons/nearby/CheckboxTriStatesTest.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package fr.free.nrw.commons.nearby\n+\n+import android.widget.CompoundButton\n+import androidx.test.core.app.ApplicationProvider\n+import com.nhaarman.mockitokotlin2.verify\n+import com.nhaarman.mockitokotlin2.verifyNoMoreInteractions\n+import fr.free.nrw.commons.TestCommonsApplication\n+import fr.free.nrw.commons.location.LatLng\n+import fr.free.nrw.commons.nearby.CheckBoxTriStates.CHECKED\n+import fr.free.nrw.commons.nearby.CheckBoxTriStates.UNCHECKED\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.mockito.Mock\n+import org.mockito.MockitoAnnotations\n+import org.robolectric.RobolectricTestRunner\n+import org.robolectric.annotation.Config\n+\n+@RunWith(RobolectricTestRunner::class)\n+@Config(sdk = [21], application = TestCommonsApplication::class)\n+class CheckBoxTriStatesTest {\n+    @Mock\n+    internal lateinit var callback: CheckBoxTriStates.Callback\n+    @Mock\n+    internal lateinit var onCheckChangeListener: CompoundButton.OnCheckedChangeListener\n+    private lateinit var checkBoxTriStates: CheckBoxTriStates\n+\n+    /**\n+     * initial setup\n+     */\n+    @Before\n+    @Throws(Exception::class)\n+    fun setUp() {\n+        MockitoAnnotations.initMocks(this)\n+        checkBoxTriStates = CheckBoxTriStates(ApplicationProvider.getApplicationContext())\n+        checkBoxTriStates.setCallback(callback)\n+        checkBoxTriStates.setOnCheckedChangeListener(onCheckChangeListener)\n+    }\n+\n+    @Test\n+    fun testSetStateWhenSameState() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0MTM3Mg=="}, "originalCommit": {"oid": "26e3b564d7903753e9646640ec736b5216d67882"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4270, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}