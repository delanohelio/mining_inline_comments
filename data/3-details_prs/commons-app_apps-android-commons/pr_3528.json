{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjgzMDI0", "number": 3528, "title": "#3524 Convert SpinnerLanguagesAdapter to kotlin - converted to kotlin", "bodyText": "Description (required)\nFixes ##3524 Convert SpinnerLanguagesAdapter to kotlin\nWhat changes did you make and why?\nConverted to kotlin for easier merging to structured data\nTests performed (required)\nTested betaDebug on Nexus5X with API level 8.1.0.", "createdAt": "2020-03-16T14:40:09Z", "url": "https://github.com/commons-app/apps-android-commons/pull/3528", "merged": true, "mergeCommit": {"oid": "cd2d5301753ca090880831af9df3849bec781cef"}, "closed": true, "closedAt": "2020-03-17T11:06:57Z", "author": {"login": "macgills"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOPIPeAH2gAyMzg5MjgzMDI0OjBhMDE0MGVjZmI0MDNjYTAwOWRiOWNiMjNlZTZiM2FhMGRiNGM1ZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOgsdqgFqTM3NTkzNDU3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff", "author": {"user": {"login": "macgills", "name": "Se\u00e1n Mac Gillicuddy"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff", "committedDate": "2020-03-16T14:38:36Z", "message": "#3524 Convert SpinnerLanguagesAdapter to kotlin - converted to kotlin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjgxMjgw", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#pullrequestreview-375281280", "createdAt": "2020-03-16T14:40:13Z", "commit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODYyMjc1", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#pullrequestreview-375862275", "createdAt": "2020-03-17T09:25:00Z", "commit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToyNTowMFrOF3T7zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToyODo1NlrOF3UFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU0MjYwNA==", "bodyText": "Unnecessary whitespace?", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#discussion_r393542604", "createdAt": "2020-03-17T09:25:00Z", "author": {"login": "misaochan"}, "path": "app/src/main/java/fr/free/nrw/commons/upload/SpinnerLanguagesAdapter.kt", "diffHunk": "@@ -0,0 +1,105 @@\n+package fr.free.nrw.commons.upload\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ArrayAdapter\n+import androidx.annotation.LayoutRes\n+import androidx.core.os.ConfigurationCompat\n+import fr.free.nrw.commons.R\n+import fr.free.nrw.commons.utils.BiMap\n+import fr.free.nrw.commons.utils.LangCodeUtils\n+import kotlinx.android.extensions.LayoutContainer\n+import kotlinx.android.synthetic.main.row_item_languages_spinner.*\n+import org.apache.commons.lang3.StringUtils\n+import java.util.*\n+\n+class SpinnerLanguagesAdapter constructor(\n+    context: Context,\n+    private val selectedLanguages: BiMap<*, String>\n+) : ArrayAdapter<Any?>(context, -1) {\n+\n+    private val languageNamesList: List<String>\n+    private val languageCodesList: List<String>\n+\n+    init {\n+        val sortedLanguages =\n+            Locale.getAvailableLocales().map(::Language).sortedBy { it.locale.displayName }\n+        languageNamesList = sortedLanguages.map { it.locale.displayName }\n+        languageCodesList = sortedLanguages.map { it.locale.language }\n+    }\n+\n+    var selectedLangCode = \"\"\n+\n+    override fun isEnabled(position: Int) = languageCodesList[position].let {\n+        it.isNotEmpty() && !(selectedLanguages.containsKey(it) || it == selectedLangCode)\n+    }\n+\n+    override fun getCount() = languageNamesList.size\n+\n+    override fun getDropDownView(position: Int, convertView: View?, parent: ViewGroup) =\n+        (convertView ?: parent.inflate(R.layout.row_item_languages_spinner).also {\n+            it.tag = DropDownViewHolder(it)\n+        }).apply {\n+            (tag as DropDownViewHolder).init(\n+                languageCodesList[position],\n+                languageNamesList[position],\n+                selectedLanguages,\n+                selectedLangCode\n+            )\n+        }\n+\n+    override fun getView(position: Int, convertView: View?, parent: ViewGroup) =\n+        (convertView ?: parent.inflate(R.layout.row_item_languages_spinner).also {\n+            it.tag = SpinnerViewHolder(it)\n+        }).apply { (tag as SpinnerViewHolder).init(languageCodesList[position]) }\n+\n+    class SpinnerViewHolder(override val containerView: View) : LayoutContainer {\n+        fun init(languageCode: String) {\n+            LangCodeUtils.fixLanguageCode(languageCode).let {\n+                tv_language.text = if (it.length > 2) it.take(2) else it\n+            }\n+        }\n+    }\n+\n+    class DropDownViewHolder(override val containerView: View) : LayoutContainer {\n+        fun init(\n+            languageCode: String,\n+            languageName: String,\n+            selectedLanguages: BiMap<*, String>,\n+            selectedLangCode: String\n+        ) {\n+            tv_language.isEnabled =\n+                !(selectedLanguages.containsKey(languageCode) && languageCode != selectedLangCode)\n+            if (languageCode.isEmpty()) {\n+                tv_language.text = StringUtils.capitalize(languageName)\n+                tv_language.textAlignment = View.TEXT_ALIGNMENT_CENTER\n+            } else {\n+                tv_language.text =\n+                    \"${StringUtils.capitalize(languageName)}\" +\n+                            \" [${LangCodeUtils.fixLanguageCode(languageCode)}]\"\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU0MzgzMw==", "bodyText": "Could we get Javadocs for new classes please? They should definitely have been in the original to begin with, but we have to start somewhere - if we are rewriting an entire class I think it is a good time to start including Javadocs as well.", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#discussion_r393543833", "createdAt": "2020-03-17T09:26:57Z", "author": {"login": "misaochan"}, "path": "app/src/main/java/fr/free/nrw/commons/upload/SpinnerLanguagesAdapter.kt", "diffHunk": "@@ -0,0 +1,105 @@\n+package fr.free.nrw.commons.upload\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ArrayAdapter\n+import androidx.annotation.LayoutRes\n+import androidx.core.os.ConfigurationCompat\n+import fr.free.nrw.commons.R\n+import fr.free.nrw.commons.utils.BiMap\n+import fr.free.nrw.commons.utils.LangCodeUtils\n+import kotlinx.android.extensions.LayoutContainer\n+import kotlinx.android.synthetic.main.row_item_languages_spinner.*\n+import org.apache.commons.lang3.StringUtils\n+import java.util.*\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU0Mzk3MA==", "bodyText": "Unnecessary whitespace?", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#discussion_r393543970", "createdAt": "2020-03-17T09:27:12Z", "author": {"login": "misaochan"}, "path": "app/src/main/java/fr/free/nrw/commons/upload/SpinnerLanguagesAdapter.kt", "diffHunk": "@@ -0,0 +1,105 @@\n+package fr.free.nrw.commons.upload\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ArrayAdapter\n+import androidx.annotation.LayoutRes\n+import androidx.core.os.ConfigurationCompat\n+import fr.free.nrw.commons.R\n+import fr.free.nrw.commons.utils.BiMap\n+import fr.free.nrw.commons.utils.LangCodeUtils\n+import kotlinx.android.extensions.LayoutContainer\n+import kotlinx.android.synthetic.main.row_item_languages_spinner.*\n+import org.apache.commons.lang3.StringUtils\n+import java.util.*\n+\n+class SpinnerLanguagesAdapter constructor(\n+    context: Context,\n+    private val selectedLanguages: BiMap<*, String>\n+) : ArrayAdapter<Any?>(context, -1) {\n+\n+    private val languageNamesList: List<String>\n+    private val languageCodesList: List<String>\n+\n+    init {\n+        val sortedLanguages =\n+            Locale.getAvailableLocales().map(::Language).sortedBy { it.locale.displayName }\n+        languageNamesList = sortedLanguages.map { it.locale.displayName }\n+        languageCodesList = sortedLanguages.map { it.locale.language }\n+    }\n+\n+    var selectedLangCode = \"\"\n+\n+    override fun isEnabled(position: Int) = languageCodesList[position].let {\n+        it.isNotEmpty() && !(selectedLanguages.containsKey(it) || it == selectedLangCode)\n+    }\n+\n+    override fun getCount() = languageNamesList.size\n+\n+    override fun getDropDownView(position: Int, convertView: View?, parent: ViewGroup) =\n+        (convertView ?: parent.inflate(R.layout.row_item_languages_spinner).also {\n+            it.tag = DropDownViewHolder(it)\n+        }).apply {\n+            (tag as DropDownViewHolder).init(\n+                languageCodesList[position],\n+                languageNamesList[position],\n+                selectedLanguages,\n+                selectedLangCode\n+            )\n+        }\n+\n+    override fun getView(position: Int, convertView: View?, parent: ViewGroup) =\n+        (convertView ?: parent.inflate(R.layout.row_item_languages_spinner).also {\n+            it.tag = SpinnerViewHolder(it)\n+        }).apply { (tag as SpinnerViewHolder).init(languageCodesList[position]) }\n+\n+    class SpinnerViewHolder(override val containerView: View) : LayoutContainer {\n+        fun init(languageCode: String) {\n+            LangCodeUtils.fixLanguageCode(languageCode).let {\n+                tv_language.text = if (it.length > 2) it.take(2) else it\n+            }\n+        }\n+    }\n+\n+    class DropDownViewHolder(override val containerView: View) : LayoutContainer {\n+        fun init(\n+            languageCode: String,\n+            languageName: String,\n+            selectedLanguages: BiMap<*, String>,\n+            selectedLangCode: String\n+        ) {\n+            tv_language.isEnabled =\n+                !(selectedLanguages.containsKey(languageCode) && languageCode != selectedLangCode)\n+            if (languageCode.isEmpty()) {\n+                tv_language.text = StringUtils.capitalize(languageName)\n+                tv_language.textAlignment = View.TEXT_ALIGNMENT_CENTER\n+            } else {\n+                tv_language.text =\n+                    \"${StringUtils.capitalize(languageName)}\" +\n+                            \" [${LangCodeUtils.fixLanguageCode(languageCode)}]\"\n+            }\n+\n+        }\n+    }\n+\n+    fun getLanguageCode(position: Int): String {\n+        return languageCodesList[position]\n+    }\n+\n+    fun getIndexOfUserDefaultLocale(context: Context): Int {\n+        return languageCodesList.indexOf(context.locale.language)\n+    }\n+\n+    fun getIndexOfLanguageCode(languageCode: String): Int {\n+        return languageCodesList.indexOf(languageCode)\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU0NTA0OA==", "bodyText": "Does our codestyle mandate a specific line length? I find that this sort of formatting tends to hinder readability instead of helping it, but if the codestyle itself specifies this then I could be wrong.", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#discussion_r393545048", "createdAt": "2020-03-17T09:28:56Z", "author": {"login": "misaochan"}, "path": "app/src/main/java/fr/free/nrw/commons/upload/SpinnerLanguagesAdapter.kt", "diffHunk": "@@ -0,0 +1,105 @@\n+package fr.free.nrw.commons.upload\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ArrayAdapter\n+import androidx.annotation.LayoutRes\n+import androidx.core.os.ConfigurationCompat\n+import fr.free.nrw.commons.R\n+import fr.free.nrw.commons.utils.BiMap\n+import fr.free.nrw.commons.utils.LangCodeUtils\n+import kotlinx.android.extensions.LayoutContainer\n+import kotlinx.android.synthetic.main.row_item_languages_spinner.*\n+import org.apache.commons.lang3.StringUtils\n+import java.util.*\n+\n+class SpinnerLanguagesAdapter constructor(\n+    context: Context,\n+    private val selectedLanguages: BiMap<*, String>\n+) : ArrayAdapter<Any?>(context, -1) {\n+\n+    private val languageNamesList: List<String>\n+    private val languageCodesList: List<String>\n+\n+    init {\n+        val sortedLanguages =\n+            Locale.getAvailableLocales().map(::Language).sortedBy { it.locale.displayName }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0140ecfb403ca009db9cb23ee6b3aa0db4c5ff"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81096dc9628e632d4d2cc2c89133c570b1ef8769", "author": {"user": {"login": "macgills", "name": "Se\u00e1n Mac Gillicuddy"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/81096dc9628e632d4d2cc2c89133c570b1ef8769", "committedDate": "2020-03-17T10:22:54Z", "message": "#3524 Convert SpinnerLanguagesAdapter to kotlin - add KDoc - rework logic - format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTM0NTcx", "url": "https://github.com/commons-app/apps-android-commons/pull/3528#pullrequestreview-375934571", "createdAt": "2020-03-17T11:06:33Z", "commit": {"oid": "81096dc9628e632d4d2cc2c89133c570b1ef8769"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 437, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}