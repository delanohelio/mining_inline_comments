{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NzE5ODU3", "number": 3621, "title": "Converted DialogUtil to Kotlin", "bodyText": "Description\nWork in Progress\nPartially Fixes #747\nTests performed\nTested betaDebug on Google Pixel 2 with API level 29.", "createdAt": "2020-04-04T20:10:27Z", "url": "https://github.com/commons-app/apps-android-commons/pull/3621", "merged": true, "mergeCommit": {"oid": "e341e77c8ecad955871e498270abe56eaa34173a"}, "closed": true, "closedAt": "2020-04-15T08:34:35Z", "author": {"login": "madhurgupta10"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUbPCpAH2gAyMzk4NzE5ODU3OjFmNDE1ZThmMmQ5ZTRiZjBiZWVhMzZlMTQ5MmI5MTg3NmE4Y2VlZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXz5kpgFqTM5MzU2NTk0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/1f415e8f2d9e4bf0beea36e1492b91876a8ceee2", "committedDate": "2020-04-04T20:08:26Z", "message": "Converted DialogUtil to Kotlin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzMwODkz", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-387730893", "createdAt": "2020-04-04T20:10:30Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDUzMjI4", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388053228", "createdAt": "2020-04-06T08:55:11Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NToxMVrOGBN9UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NToxMVrOGBN9UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMDQ0OA==", "bodyText": "inline this variable", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403930448", "createdAt": "2020-04-06T08:55:11Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDU0MTU5", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388054159", "createdAt": "2020-04-06T08:56:19Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NjoxOVrOGBOAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NjoxOVrOGBOAKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMTE3OA==", "bodyText": "we don't need stringUtils here, there is an isBlank extension function on String", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403931178", "createdAt": "2020-04-06T08:56:19Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDU0ODQ4", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388054848", "createdAt": "2020-04-06T08:57:12Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NzoxM1rOGBOCWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NzoxM1rOGBOCWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMTczNw==", "bodyText": "positive/negativeButtonText can be on the same line as the function call", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403931737", "createdAt": "2020-04-06T08:57:13Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDU1Mzk5", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388055399", "createdAt": "2020-04-06T08:57:56Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1Nzo1NlrOGBOEMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1Nzo1NlrOGBOEMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMjIwOA==", "bodyText": "Kotlin style is when parameters can't fit on a line then each one gets its own line", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403932208", "createdAt": "2020-04-06T08:57:56Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDU3NDY2", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388057466", "createdAt": "2020-04-06T09:00:35Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMDozNlrOGBOLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMDozNlrOGBOLHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMzk4MA==", "bodyText": "this is not really using the Builder pattern correctly, a Builder returns itself for every method call so you can chain them eg\nAlertDialog.Builder(activity)\n.setTitle(title)\n.setMessage(message)\n.create()\n\nI also regularly favor using apply so I can omit the . calls", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403933980", "createdAt": "2020-04-06T09:00:36Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+     */\n+    private fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        // If the custom view already has a parent, there is already a dialog showing with the view\n+        // This happens for on resume - return to avoid creating a second dialog - the first one\n+        // will still show\n+\n+        val builder = AlertDialog.Builder(activity)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDU4ODM0", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388058834", "createdAt": "2020-04-06T09:02:28Z", "commit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMjoyOFrOGBOPPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMjoyOFrOGBOPPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzNTAzOQ==", "bodyText": "I don't see any nullability handling in this file, I believe people pass nulls frequently to the listeners, this may cause an illegalStateException", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403935039", "createdAt": "2020-04-06T09:02:28Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bab74e8333d98312726f26713adc9c7dc9e2e097", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/bab74e8333d98312726f26713adc9c7dc9e2e097", "committedDate": "2020-04-06T10:29:47Z", "message": "Kotlin syntax and standard changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f54224e9cbe44c03ecb424f8fb0762e53a5bc83c", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/f54224e9cbe44c03ecb424f8fb0762e53a5bc83c", "committedDate": "2020-04-06T10:30:51Z", "message": "Removed ;"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84bf5e2786e39401bb6c07731bbdfe6797b7133c", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/84bf5e2786e39401bb6c07731bbdfe6797b7133c", "committedDate": "2020-04-06T10:32:30Z", "message": "Added missing null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "706f983ee8fd6761e872d958b59ae66176d1a9a7", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/706f983ee8fd6761e872d958b59ae66176d1a9a7", "committedDate": "2020-04-06T10:36:49Z", "message": "Added missing null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTU2MjI0", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-388156224", "createdAt": "2020-04-06T11:23:31Z", "commit": {"oid": "706f983ee8fd6761e872d958b59ae66176d1a9a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMToyMzozMlrOGBTMhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMToyMzozMlrOGBTMhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAxNjI2Mw==", "bodyText": "dialogs automatically dismiss when you press any of their buttons", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r404016263", "createdAt": "2020-04-06T11:23:32Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,179 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        val builder = AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+        }\n+        if (positiveButtonText.isBlank()) {\n+            builder.setPositiveButton(positiveButtonText) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "706f983ee8fd6761e872d958b59ae66176d1a9a7"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90e40d83c48d95087813be4fafc4eb1cdaa6586f", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/90e40d83c48d95087813be4fafc4eb1cdaa6586f", "committedDate": "2020-04-06T12:50:56Z", "message": "Removed unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/887cca56b511509e63e61bbd1cdce3889f533f32", "committedDate": "2020-04-09T09:35:03Z", "message": "Reduced functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNjQxOTQ5", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-390641949", "createdAt": "2020-04-09T09:40:57Z", "commit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0MDo1N1rOGDRV5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0MDo1N1rOGDRV5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4MzA0Nw==", "bodyText": "the boolean was fine not Nullable because false was a sensible default", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406083047", "createdAt": "2020-04-09T09:40:57Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },\n+        negativeButtonText: String? = let { \"\" },\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean? = let { false }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb89725c5cc400186a27ee3c8ff9c88f4417363b", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/cb89725c5cc400186a27ee3c8ff9c88f4417363b", "committedDate": "2020-04-09T09:41:54Z", "message": "added let to customView"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNjQzNTQ4", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-390643548", "createdAt": "2020-04-09T09:43:11Z", "commit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0MzoxMVrOGDRa0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0MzoxMVrOGDRa0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NDMwNA==", "bodyText": "should be String? = null because null is an okay default, this may not have been set by a caller.\nThis let usage is quite confusing, this doesn't compile, right?", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406084304", "createdAt": "2020-04-09T09:43:11Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5ddf767fc74ab5f6f9ce26ef00388142aadcec9", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/f5ddf767fc74ab5f6f9ce26ef00388142aadcec9", "committedDate": "2020-04-09T09:43:40Z", "message": "reverted \"let\" changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97f6f8a6e6b109da325d605cb4c40f5193b7f161", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/97f6f8a6e6b109da325d605cb4c40f5193b7f161", "committedDate": "2020-04-09T09:48:39Z", "message": "reverted \"let\" changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNjY5Mzk0", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-390669394", "createdAt": "2020-04-09T10:20:55Z", "commit": {"oid": "97f6f8a6e6b109da325d605cb4c40f5193b7f161"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMDoyMDo1NVrOGDSucA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMDoyMDo1NVrOGDSucA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNTcxMg==", "bodyText": "you don't have to check isBlank, you were only checking that previously because that was your default value.\nLets talk about let.\n\ndocs\ninline fun <T, R> T.let(block: (T) -> R): R\nlets break it down, T.let this means that anything of Type T has a function called let, T is generic so all objects have a let function\nblock: (T) -> R let accepts a parameter called block, what this parameter is is a function. that takes a T (T) and returns an R ->R. The easiest way to supply a function in kotlin is just to write { }. We want a function that takes a T so we can write an exampleFunction\n\"myString\".let({ myStringAsAVariable -> print(myStringAsAVariable )})\n\nbut there are some kotlin features to make this less annoying to write.\nif the last paramter of a function is another function then we can put it outside the (), when the only parameter is a function we can also omit the () altogether\n\"myString\".let() { myStringAsAVariable -> print(myStringAsAVariable ) }\n\"myString\".let { myStringAsAVariable -> print(myStringAsAVariable ) }\n\nwhen you only have 1 parameter to a lambda ie myStringAsAVariable you don't even need to declare it and can instead reference it as it\n\"myString\".let{ print(it) }", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406105712", "createdAt": "2020-04-09T10:20:55Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,171 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                if (positiveButtonText.isBlank()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f6f8a6e6b109da325d605cb4c40f5193b7f161"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5dbafb5e057d267f018b57d70171b36a7cc9fb3", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/f5dbafb5e057d267f018b57d70171b36a7cc9fb3", "committedDate": "2020-04-09T10:32:35Z", "message": "removed if-statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzQ5MDc1", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-390749075", "createdAt": "2020-04-09T12:32:16Z", "commit": {"oid": "f5dbafb5e057d267f018b57d70171b36a7cc9fb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozMjoxNlrOGDWrsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozMjoxNlrOGDWrsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MDU0NA==", "bodyText": "as per the previous explanation you can just say setPositiveButton(it) here", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406170544", "createdAt": "2020-04-09T12:32:16Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5dbafb5e057d267f018b57d70171b36a7cc9fb3"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/759dd60658406f6bb1e294c9f7fa42d1c81233e3", "committedDate": "2020-04-09T12:55:03Z", "message": "replaced with \"it\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzg1MDIx", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-390785021", "createdAt": "2020-04-09T13:21:16Z", "commit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyMToxNlrOGDYYtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyMToxNlrOGDYYtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5ODQ1Mg==", "bodyText": "This is quite broken. Only 1 of these methods actually calls this, the others just call themselves in an infinite loop and then would overflow the stack probably", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406198452", "createdAt": "2020-04-09T13:21:16Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aa5d2e7fe95d3e62a84b950747be3880e8f046f", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/0aa5d2e7fe95d3e62a84b950747be3880e8f046f", "committedDate": "2020-04-09T13:50:42Z", "message": "fixed overflow error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f66abb1658eca678d7ac69edefe89dfd5efc4df", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/2f66abb1658eca678d7ac69edefe89dfd5efc4df", "committedDate": "2020-04-13T11:25:00Z", "message": "Function rename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMDk0MTQ0", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-392094144", "createdAt": "2020-04-13T11:30:58Z", "commit": {"oid": "2f66abb1658eca678d7ac69edefe89dfd5efc4df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTozMDo1OVrOGEj_Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTozMDo1OVrOGEj_Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQzNzEzMQ==", "bodyText": "with named arguments you can omit specifying an argument if it is the same as the default value", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407437131", "createdAt": "2020-04-13T11:30:59Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,169 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        createAndShowDialogSafely(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f66abb1658eca678d7ac69edefe89dfd5efc4df"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac6b771ab46a87d51a2a3c44f7e5f42f1d8cdd37", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/ac6b771ab46a87d51a2a3c44f7e5f42f1d8cdd37", "committedDate": "2020-04-13T11:46:54Z", "message": "Used named arguments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6d27adfe0d257813c4ec3f6f82bded9ac986fde", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/c6d27adfe0d257813c4ec3f6f82bded9ac986fde", "committedDate": "2020-04-13T12:23:11Z", "message": "Fix Typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTMwMjkx", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-392130291", "createdAt": "2020-04-13T13:03:59Z", "commit": {"oid": "c6d27adfe0d257813c4ec3f6f82bded9ac986fde"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzowMzo1OVrOGEl2eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzowMzo1OVrOGEl2eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ2NzY0MQ==", "bodyText": "we can fit these clicklisteners on one line if your remove the types from the lambda eg\nsetNegativeButton(it) { _, _ -> onNegativeBtnClick?.run() }", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407467641", "createdAt": "2020-04-13T13:03:59Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,166 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            negativeButtonText = negativeButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick,\n+            customView = customView,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    private fun createAndShowDialogSafely(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable? = null,\n+        onNegativeBtnClick: Runnable? = null,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                setPositiveButton(it) { _: DialogInterface, _: Int ->\n+                    onPositiveBtnClick?.run()\n+                }\n+            }\n+            negativeButtonText?.let {\n+                setNegativeButton(it) { _: DialogInterface, _: Int ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6d27adfe0d257813c4ec3f6f82bded9ac986fde"}, "originalPosition": 160}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTMwODE2", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-392130816", "createdAt": "2020-04-13T13:05:10Z", "commit": {"oid": "c6d27adfe0d257813c4ec3f6f82bded9ac986fde"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/593e99e768e8ee6bdbde1185f7dd35172c41334a", "committedDate": "2020-04-13T13:24:14Z", "message": "single lined"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODExOTQ2", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-392811946", "createdAt": "2020-04-14T10:46:58Z", "commit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0Njo1OFrOGFI8ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0Njo1OFrOGFI8ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MjYwMg==", "bodyText": "null is passed here which would cause a crash", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408042602", "createdAt": "2020-04-14T10:46:58Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eee902ea4defdde0a15f19975e0f9929eda973b3", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/eee902ea4defdde0a15f19975e0f9929eda973b3", "committedDate": "2020-04-14T10:54:23Z", "message": "Update DialogUtil.kt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODM0OTUy", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-392834952", "createdAt": "2020-04-14T11:23:58Z", "commit": {"oid": "eee902ea4defdde0a15f19975e0f9929eda973b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyMzo1OFrOGFKHLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyMzo1OFrOGFKHLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTc0Mg==", "bodyText": "whoops, nearly missed this, the default for this should be true I believe", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408061742", "createdAt": "2020-04-14T11:23:58Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        negativeButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            negativeButtonText = negativeButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick,\n+            customView = customView,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    private fun createAndShowDialogSafely(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable? = null,\n+        onNegativeBtnClick: Runnable? = null,\n+        customView: View? = null,\n+        cancelable: Boolean = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee902ea4defdde0a15f19975e0f9929eda973b3"}, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad6f5eb0adcda603623fe70fed56bc30a39cef83", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/ad6f5eb0adcda603623fe70fed56bc30a39cef83", "committedDate": "2020-04-14T18:39:23Z", "message": "Merge remote-tracking branch 'upstream/master' into kotlin-conv"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a785ab9d08b22a91bba5fbf8196dbbea152a4df", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/0a785ab9d08b22a91bba5fbf8196dbbea152a4df", "committedDate": "2020-04-14T19:29:35Z", "message": "Merge branch 'kotlin-conv' of https://github.com/madhurgupta10/apps-android-commons into kotlin-conv"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5483e878b87f46899fc596d9aa1ec59fe0a0863", "author": {"user": {"login": "madhurgupta10", "name": "Madhur Gupta"}}, "url": "https://github.com/commons-app/apps-android-commons/commit/c5483e878b87f46899fc596d9aa1ec59fe0a0863", "committedDate": "2020-04-14T19:32:00Z", "message": "changed default value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTY1OTQy", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#pullrequestreview-393565942", "createdAt": "2020-04-15T08:34:23Z", "commit": {"oid": "c5483e878b87f46899fc596d9aa1ec59fe0a0863"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 666, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}