{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4Mzc5MDky", "number": 3872, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MzoyMFrOEOC0pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToyODozNFrOEOLcYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTYxNzY1OnYy", "diffSide": "RIGHT", "path": "app/src/test/kotlin/fr/free/nrw/commons/leaderboard/LeaderboardApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MzoyMFrOGw-rQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MzoyMFrOGw-rQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTcxMg==", "bodyText": "As a javadoc here, please say what class (or what method of what class) is being tested. Thanks!", "url": "https://github.com/commons-app/apps-android-commons/pull/3872#discussion_r454011712", "createdAt": "2020-07-13T23:43:20Z", "author": {"login": "nicolas-raoul"}, "path": "app/src/test/kotlin/fr/free/nrw/commons/leaderboard/LeaderboardApiTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package fr.free.nrw.commons.leaderboard;\n+\n+import com.google.gson.Gson;\n+import fr.free.nrw.commons.profile.leaderboard.LeaderboardResponse;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Request.Builder;\n+import okhttp3.Response;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class LeaderboardApiTest {\n+\n+    MockWebServer server;\n+    private static final String TEST_USERNAME = \"user\";\n+    private static final String TEST_AVATAR = \"avatar\";\n+    private static final int TEST_USER_RANK = 1;\n+    private static final int TEST_USER_COUNT = 0;\n+\n+    private static final String FILE_NAME = \"leaderboard_sample_response.json\";\n+    private static final String ENDPOINT = \"/leaderboard.py\";\n+\n+    @Before\n+    public void initTest() {\n+        server = new MockWebServer();\n+    }\n+\n+    @Before\n+    public void setUp() throws Exception {\n+\n+        String testResponseBody = convertStreamToString(getClass().getClassLoader().getResourceAsStream(FILE_NAME));\n+\n+        server.enqueue(new MockResponse().setBody(testResponseBody));\n+        server.start();\n+    }\n+\n+    private static String convertStreamToString(InputStream is) throws Exception {\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(is));\n+        StringBuilder sb = new StringBuilder();\n+        String line;\n+        while ((line = reader.readLine()) != null) {\n+            sb.append(line).append(\"\\n\");\n+        }\n+        reader.close();\n+        return sb.toString();\n+    }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce30c8f1f3c94cd304de05ec578b4e64332d6995"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzAzMDA4OnYy", "diffSide": "RIGHT", "path": "app/src/test/kotlin/fr/free/nrw/commons/leaderboard/LeaderboardApiTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToyODozNFrOGxLwnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToyODozNFrOGxLwnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNjA3OQ==", "bodyText": "Please add Javadocs for all new classes that you create :) This applies for methods as well, although we tend to allow exceptions for simple methods like getters and setters.", "url": "https://github.com/commons-app/apps-android-commons/pull/3872#discussion_r454226079", "createdAt": "2020-07-14T09:28:34Z", "author": {"login": "misaochan"}, "path": "app/src/test/kotlin/fr/free/nrw/commons/leaderboard/LeaderboardApiTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package fr.free.nrw.commons.leaderboard;\n+\n+import com.google.gson.Gson;\n+import fr.free.nrw.commons.profile.leaderboard.LeaderboardResponse;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Request.Builder;\n+import okhttp3.Response;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce30c8f1f3c94cd304de05ec578b4e64332d6995"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4268, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}