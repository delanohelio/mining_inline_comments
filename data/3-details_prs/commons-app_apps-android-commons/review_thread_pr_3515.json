{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MjY3MDAx", "number": 3515, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDowMDoyOFrODoQnJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMjoyOVrODpCCYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTQxNzk5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDowMDoyOFrOF2svGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDowMToyN1rOF2sxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwMDM3Ng==", "bodyText": "why was this added?", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r392900376", "createdAt": "2020-03-16T10:00:28Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsFragment.java", "diffHunk": "@@ -77,6 +79,8 @@\n     @Inject OkHttpJsonApiClient okHttpJsonApiClient;\n     @Inject CampaignsPresenter presenter;\n     @Inject LocationServiceManager locationManager;\n+    @Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20af16f758d2a0c629524a8e0a2a1f947c08061d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwMDkxOQ==", "bodyText": "Yes, I should remove it, the presenter is doing the job", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r392900919", "createdAt": "2020-03-16T10:01:27Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsFragment.java", "diffHunk": "@@ -77,6 +79,8 @@\n     @Inject OkHttpJsonApiClient okHttpJsonApiClient;\n     @Inject CampaignsPresenter presenter;\n     @Inject LocationServiceManager locationManager;\n+    @Inject", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwMDM3Ng=="}, "originalCommit": {"oid": "20af16f758d2a0c629524a8e0a2a1f947c08061d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTQyMjI0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDowMTo0MFrOF2sxrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDowMjoyNFrOF2szRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwMTAzNg==", "bodyText": "This is now default visibility?", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r392901036", "createdAt": "2020-03-16T10:01:40Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n-    private int position;\n+    int position;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20af16f758d2a0c629524a8e0a2a1f947c08061d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwMTQ0Ng==", "bodyText": "My bad, it should be private, I deleted it and re-added it, forgot to add the access-specifier", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r392901446", "createdAt": "2020-03-16T10:02:24Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n-    private int position;\n+    int position;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwMTAzNg=="}, "originalCommit": {"oid": "20af16f758d2a0c629524a8e0a2a1f947c08061d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTk1MTY3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjowMzo0OVrOF3ZPZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoxMDo0NVrOF3ZdIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyOTU0MA==", "bodyText": "this should probably be else", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393629540", "createdAt": "2020-03-17T12:03:49Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n     }\n \n-    public void init(int position, DisplayableContribution contribution) {\n-        ApplicationlessInjection.getInstance(itemView.getContext())\n-                .getCommonsApplicationComponent().inject(this);\n+    public void init(int position, Contribution contribution) {\n+        this.contribution=contribution;\n         this.position=position;\n-        this.contribution = contribution;\n-        fetchAndDisplayThumbnail(contribution);\n+        String imageSource = contribution.thumbUrl;\n+        if (TextUtils.isEmpty(imageSource)) {\n+            imageSource =\n+                contribution.getLocalUri() != null ? contribution.getLocalUri().toString()\n+                    : null;\n+        }\n+        if (!TextUtils.isEmpty(imageSource)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5980c6586b025f2b4378ef01cde5b44dd62755"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzMDY4Nw==", "bodyText": "oh nope, I am wrong nvm", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393630687", "createdAt": "2020-03-17T12:05:55Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n     }\n \n-    public void init(int position, DisplayableContribution contribution) {\n-        ApplicationlessInjection.getInstance(itemView.getContext())\n-                .getCommonsApplicationComponent().inject(this);\n+    public void init(int position, Contribution contribution) {\n+        this.contribution=contribution;\n         this.position=position;\n-        this.contribution = contribution;\n-        fetchAndDisplayThumbnail(contribution);\n+        String imageSource = contribution.thumbUrl;\n+        if (TextUtils.isEmpty(imageSource)) {\n+            imageSource =\n+                contribution.getLocalUri() != null ? contribution.getLocalUri().toString()\n+                    : null;\n+        }\n+        if (!TextUtils.isEmpty(imageSource)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyOTU0MA=="}, "originalCommit": {"oid": "ad5980c6586b025f2b4378ef01cde5b44dd62755"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzMjcwNQ==", "bodyText": "to make this easier to read I would suggest not immediately assigning to imageSource, maybe a method String imageSource = chooseImageSource(contribution.thumbUrl, contribution.getLocalUri())", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393632705", "createdAt": "2020-03-17T12:10:04Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n     }\n \n-    public void init(int position, DisplayableContribution contribution) {\n-        ApplicationlessInjection.getInstance(itemView.getContext())\n-                .getCommonsApplicationComponent().inject(this);\n+    public void init(int position, Contribution contribution) {\n+        this.contribution=contribution;\n         this.position=position;\n-        this.contribution = contribution;\n-        fetchAndDisplayThumbnail(contribution);\n+        String imageSource = contribution.thumbUrl;\n+        if (TextUtils.isEmpty(imageSource)) {\n+            imageSource =\n+                contribution.getLocalUri() != null ? contribution.getLocalUri().toString()\n+                    : null;\n+        }\n+        if (!TextUtils.isEmpty(imageSource)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyOTU0MA=="}, "originalCommit": {"oid": "ad5980c6586b025f2b4378ef01cde5b44dd62755"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzMzA1OA==", "bodyText": "Sounds good, will make the changes", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393633058", "createdAt": "2020-03-17T12:10:45Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n     }\n \n-    public void init(int position, DisplayableContribution contribution) {\n-        ApplicationlessInjection.getInstance(itemView.getContext())\n-                .getCommonsApplicationComponent().inject(this);\n+    public void init(int position, Contribution contribution) {\n+        this.contribution=contribution;\n         this.position=position;\n-        this.contribution = contribution;\n-        fetchAndDisplayThumbnail(contribution);\n+        String imageSource = contribution.thumbUrl;\n+        if (TextUtils.isEmpty(imageSource)) {\n+            imageSource =\n+                contribution.getLocalUri() != null ? contribution.getLocalUri().toString()\n+                    : null;\n+        }\n+        if (!TextUtils.isEmpty(imageSource)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyOTU0MA=="}, "originalCommit": {"oid": "ad5980c6586b025f2b4378ef01cde5b44dd62755"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTk4NDMyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoxNDowNVrOF3ZjwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoxNDowNVrOF3ZjwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNDc1Mg==", "bodyText": ".setProgressiveRenderingEnabled(true).setProgressiveRenderingEnabled(true) so nice you said it twice", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393634752", "createdAt": "2020-03-17T12:14:05Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +33,33 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n     }\n \n-    public void init(int position, DisplayableContribution contribution) {\n-        ApplicationlessInjection.getInstance(itemView.getContext())\n-                .getCommonsApplicationComponent().inject(this);\n+    public void init(int position, Contribution contribution) {\n+        this.contribution=contribution;\n         this.position=position;\n-        this.contribution = contribution;\n-        fetchAndDisplayThumbnail(contribution);\n+        String imageSource = contribution.thumbUrl;\n+        if (TextUtils.isEmpty(imageSource)) {\n+            imageSource =\n+                contribution.getLocalUri() != null ? contribution.getLocalUri().toString()\n+                    : null;\n+        }\n+        if (!TextUtils.isEmpty(imageSource)) {\n+            final ImageRequest imageRequest =\n+                ImageRequestBuilder.newBuilderWithSource(Uri.parse(imageSource)).setProgressiveRenderingEnabled(true).setProgressiveRenderingEnabled(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5980c6586b025f2b4378ef01cde5b44dd62755"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDM1MDQ3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1MzowMlrOF3dNxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDozMjozNlrOF3e-Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NDY2MA==", "bodyText": "default visibility", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393694660", "createdAt": "2020-03-17T13:53:02Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -35,25 +39,35 @@\n \n     private int position;\n     private Contribution contribution;\n+    Random random =new Random();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7e042c19cb7c27745a38e9583f9466863da325a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NDgyOA==", "bodyText": "not spaced to codestyle either", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393694828", "createdAt": "2020-03-17T13:53:17Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -35,25 +39,35 @@\n \n     private int position;\n     private Contribution contribution;\n+    Random random =new Random();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NDY2MA=="}, "originalCommit": {"oid": "c7e042c19cb7c27745a38e9583f9466863da325a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NTYzNw==", "bodyText": "Done, stupid of me to miss these", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393695637", "createdAt": "2020-03-17T13:54:27Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -35,25 +39,35 @@\n \n     private int position;\n     private Contribution contribution;\n+    Random random =new Random();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NDY2MA=="}, "originalCommit": {"oid": "c7e042c19cb7c27745a38e9583f9466863da325a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyMzM5OA==", "bodyText": "happens to the best of us, ctral+alt+shift+l will expose the reformat dialog so you can select vcs changed text, don't think it'll work now tho", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393723398", "createdAt": "2020-03-17T14:32:36Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -35,25 +39,35 @@\n \n     private int position;\n     private Contribution contribution;\n+    Random random =new Random();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NDY2MA=="}, "originalCommit": {"oid": "c7e042c19cb7c27745a38e9583f9466863da325a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDM2MjEzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1NTo0MVrOF3dVKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1ODo1M1rOF3ddyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NjU1Mg==", "bodyText": "don't do this, return the value when it is correct, you don't need a variable this can all collapse into a ternary if you so choose", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393696552", "createdAt": "2020-03-17T13:55:41Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -96,6 +110,25 @@ public void init(int position, Contribution contribution) {\n         }\n     }\n \n+    /**\n+     * Returns the image source for the image view, first preference is given to thumbUrl if that is\n+     * null, moves to local uri and if both are null return null\n+     *\n+     * @param thumbUrl\n+     * @param localUri\n+     * @return\n+     */\n+    @Nullable\n+    private String chooseImageSource(String thumbUrl, Uri localUri) {\n+        String imageSource = thumbUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7e042c19cb7c27745a38e9583f9466863da325a"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5ODc2Mg==", "bodyText": "Done", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393698762", "createdAt": "2020-03-17T13:58:53Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -96,6 +110,25 @@ public void init(int position, Contribution contribution) {\n         }\n     }\n \n+    /**\n+     * Returns the image source for the image view, first preference is given to thumbUrl if that is\n+     * null, moves to local uri and if both are null return null\n+     *\n+     * @param thumbUrl\n+     * @param localUri\n+     * @return\n+     */\n+    @Nullable\n+    private String chooseImageSource(String thumbUrl, Uri localUri) {\n+        String imageSource = thumbUrl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NjU1Mg=="}, "originalCommit": {"oid": "c7e042c19cb7c27745a38e9583f9466863da325a"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDM4NDk2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDowMToxOFrOF3dkOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDowMzo0NlrOF3drJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMDQwOA==", "bodyText": "I am a huge nitpicker, I apologise.\nFor these scenarios I generally put each value that is returned on its own line\ncondition ? value :\n  condition ? value :\n    value\n\nfeel free to ignore", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393700408", "createdAt": "2020-03-17T14:01:18Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -120,13 +120,8 @@ public void init(int position, Contribution contribution) {\n      */\n     @Nullable\n     private String chooseImageSource(String thumbUrl, Uri localUri) {\n-        String imageSource = thumbUrl;\n-        if (TextUtils.isEmpty(imageSource)) {\n-            imageSource =\n-                localUri != null ? localUri.toString()\n-                    : null;\n-        }\n-        return imageSource;\n+        return !TextUtils.isEmpty(thumbUrl) ? thumbUrl : (localUri != null ? localUri.toString()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjE4MA==", "bodyText": "Fair point, added :)", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393702180", "createdAt": "2020-03-17T14:03:46Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -120,13 +120,8 @@ public void init(int position, Contribution contribution) {\n      */\n     @Nullable\n     private String chooseImageSource(String thumbUrl, Uri localUri) {\n-        String imageSource = thumbUrl;\n-        if (TextUtils.isEmpty(imageSource)) {\n-            imageSource =\n-                localUri != null ? localUri.toString()\n-                    : null;\n-        }\n-        return imageSource;\n+        return !TextUtils.isEmpty(thumbUrl) ? thumbUrl : (localUri != null ? localUri.toString()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMDQwOA=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDM5OTEzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDowNDozN1rOF3dtkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDoyMjo0MVrOF3egvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw==", "bodyText": "Do we need a cache? was there performance issues in your testing?\nI don't think ColorDrawables are that expensive but android can always surprise ya.", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393702803", "createdAt": "2020-03-17T14:04:37Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMzgzNA==", "bodyText": "I did not see a performance issue to be honest but creating new Drawables in onBind, imagine it for 1000 contributions, I thought cache should be okay, anyway this one won't harm, its a small one with 5 entries", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393703834", "createdAt": "2020-03-17T14:06:05Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwNTk4Mg==", "bodyText": "I am pretty sure android already creates thousands of ColorDrawables,  whenever you set the color of a view.\nIt is not like this is a bitmap, I think this might be over-engineering", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393705982", "createdAt": "2020-03-17T14:09:09Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwNjUxNw==", "bodyText": "Can say that, but do you really think caching like 5 drawables would harm? And I would not compare with how android would manage thousands of drawables, I am sure they would have released objects when not needed", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393706517", "createdAt": "2020-03-17T14:09:54Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwODU2Mw==", "bodyText": "I think it is unnecessary, If we were to go around doing unnecessary things that do no harm then the code would be littered and the intention that much harder to read.\nSolving problems that exist is plenty hard, no need to invent ones that don't exist.", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393708563", "createdAt": "2020-03-17T14:12:46Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMTE4MA==", "bodyText": "I doubt this hinders the readability, I am okay to remove this, I just don't see a point like this should be the reason. Anyways if you anyways insist so much, I will do it.", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393711180", "createdAt": "2020-03-17T14:16:23Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMzU1OA==", "bodyText": "It hinders the readability, it adds an extra mental burden to the reader and if someone was to come along and see this cache implemented they would rightly assume these are expensive objects and great care must be used when handling them.\nThe best code is written with the backspace key.", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393713558", "createdAt": "2020-03-17T14:19:34Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxNTkwMg==", "bodyText": "Done :)", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393715902", "createdAt": "2020-03-17T14:22:41Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,43 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();\n+    private HashMap<Integer,ColorDrawable> drawablesCache=new HashMap();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n+        populateDrawableCache();\n+    }\n+    \n+    /**\n+     * Cache's the drawables to be shown as image placeholders\n+     */\n+    private void populateDrawableCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMjgwMw=="}, "originalCommit": {"oid": "1f306c4c77c0fc2183d46e7954a57c22112867e9"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDYwMTUzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MDoxNlrOF3fwbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MDoxNlrOF3fwbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNjMwMQ==", "bodyText": "formatting in this file is still not correct, no space around operators", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393736301", "createdAt": "2020-03-17T14:50:16Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,32 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random =new Random();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00ab4f20da4da8f563f2f00f7d4d1d3af775c5e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDYwNTYyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MToxMFrOF3fzLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MToxMFrOF3fzLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNzAwNw==", "bodyText": "also you can remove the brackets here", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393737007", "createdAt": "2020-03-17T14:51:10Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -104,40 +100,18 @@ public void init(int position, DisplayableContribution contribution) {\n     }\n \n     /**\n-     * This method fetches the thumbnail url from file name\n-     * If the thumbnail url is present in cache, then it is used otherwise API call is made to fetch the thumbnail\n-     * This can be removed once #2904 is in place and contribution contains all metadata beforehand\n-     * @param contribution\n+     * Returns the image source for the image view, first preference is given to thumbUrl if that is\n+     * null, moves to local uri and if both are null return null\n+     *\n+     * @param thumbUrl\n+     * @param localUri\n+     * @return\n      */\n-    private void fetchAndDisplayThumbnail(DisplayableContribution contribution) {\n-        String keyForLRUCache = contribution.getFilename();\n-        String cacheUrl = thumbnailCache.get(keyForLRUCache);\n-        if (!StringUtils.isBlank(cacheUrl)) {\n-            imageView.setImageURI(cacheUrl);\n-            return;\n-        }\n-\n-        imageView.setBackground(null);\n-        if ((contribution.getState() != Contribution.STATE_COMPLETED) && FileUtils.fileExists(\n-                contribution.getLocalUri())) {\n-            imageView.setImageURI(contribution.getLocalUri());\n-        } else {\n-            Timber.d(\"Fetching thumbnail for %s\", contribution.getFilename());\n-            Disposable disposable = mediaDataExtractor\n-                    .getMediaFromFileName(contribution.getFilename())\n-                    .subscribeOn(Schedulers.io())\n-                    .observeOn(AndroidSchedulers.mainThread())\n-                    .subscribe(media -> {\n-                        thumbnailCache.put(keyForLRUCache, media.getThumbUrl());\n-                        imageView.setImageURI(media.getThumbUrl());\n-                    });\n-            compositeDisposable.add(disposable);\n-        }\n-\n-    }\n-\n-    public void clear() {\n-        compositeDisposable.clear();\n+    @Nullable\n+    private String chooseImageSource(String thumbUrl, Uri localUri) {\n+        return !TextUtils.isEmpty(thumbUrl) ? thumbUrl :\n+            (localUri != null ? localUri.toString() :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00ab4f20da4da8f563f2f00f7d4d1d3af775c5e"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDYxNTUxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MzozMlrOF3f5xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1ODoyNlrOF3gH1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczODY5Mg==", "bodyText": "View recycling is kind of the point of a Recyclerview. I am very hesitant to approve this.", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393738692", "createdAt": "2020-03-17T14:53:32Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "diffHunk": "@@ -108,6 +109,7 @@ private void initRecyclerView() {\n         }\n \n         rvContributionsList.setAdapter(adapter);\n+        rvContributionsList.setItemViewCacheSize(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00ab4f20da4da8f563f2f00f7d4d1d3af775c5e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczOTY3Ng==", "bodyText": "Yes yes, of course I was gonna revert this commit(if you see the commit message), just added this to see if this would solve Nes's issue so that we can create a separate issue to discuss how to improve performance", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393739676", "createdAt": "2020-03-17T14:54:54Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "diffHunk": "@@ -108,6 +109,7 @@ private void initRecyclerView() {\n         }\n \n         rvContributionsList.setAdapter(adapter);\n+        rvContributionsList.setItemViewCacheSize(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczODY5Mg=="}, "originalCommit": {"oid": "f00ab4f20da4da8f563f2f00f7d4d1d3af775c5e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MDExNg==", "bodyText": "Although this does not entirely nullify the recycler view's job", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393740116", "createdAt": "2020-03-17T14:55:30Z", "author": {"login": "ashishkumar468"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "diffHunk": "@@ -108,6 +109,7 @@ private void initRecyclerView() {\n         }\n \n         rvContributionsList.setAdapter(adapter);\n+        rvContributionsList.setItemViewCacheSize(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczODY5Mg=="}, "originalCommit": {"oid": "f00ab4f20da4da8f563f2f00f7d4d1d3af775c5e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MjI5Mg==", "bodyText": "No but it is in the name", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r393742292", "createdAt": "2020-03-17T14:58:26Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "diffHunk": "@@ -108,6 +109,7 @@ private void initRecyclerView() {\n         }\n \n         rvContributionsList.setAdapter(adapter);\n+        rvContributionsList.setItemViewCacheSize(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczODY5Mg=="}, "originalCommit": {"oid": "f00ab4f20da4da8f563f2f00f7d4d1d3af775c5e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUxNTg2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMjoyOVrOF38uiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMjoyOVrOF38uiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxMDk1NQ==", "bodyText": "this isn't formatted", "url": "https://github.com/commons-app/apps-android-commons/pull/3515#discussion_r394210955", "createdAt": "2020-03-18T09:32:29Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -41,32 +37,32 @@\n     @BindView(R.id.contributionProgress) ProgressBar progressView;\n     @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n \n-    @Inject\n-    MediaDataExtractor mediaDataExtractor;\n-\n-    @Inject\n-    @Named(\"thumbnail-cache\")\n-    LruCache<String, String> thumbnailCache;\n-\n-    private DisplayableContribution contribution;\n-    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n     private int position;\n+    private Contribution contribution;\n+    private Random random = new Random();\n \n     ContributionViewHolder(View parent, Callback callback) {\n         super(parent);\n         ButterKnife.bind(this, parent);\n         this.callback=callback;\n     }\n \n-    public void init(int position, DisplayableContribution contribution) {\n-        ApplicationlessInjection.getInstance(itemView.getContext())\n-                .getCommonsApplicationComponent().inject(this);\n+    public void init(int position, Contribution contribution) {\n+        this.contribution=contribution;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae6f8cc894dcc1a30b8658e80027f10720e8848c"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4199, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}