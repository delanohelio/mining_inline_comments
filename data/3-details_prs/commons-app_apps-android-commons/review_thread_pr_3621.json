{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NzE5ODU3", "number": 3621, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NToxMVrODvB9uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyMzo1OFrODxmbIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjQxODUxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NToxMVrOGBN9UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDozMzoxM1rOGBRlcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMDQ0OA==", "bodyText": "inline this variable", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403930448", "createdAt": "2020-04-06T08:55:11Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk4OTg3Mw==", "bodyText": "Done!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403989873", "createdAt": "2020-04-06T10:33:13Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMDQ0OA=="}, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjQyMjk4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NjoxOVrOGBOAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDozMzozNVrOGBRmUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMTE3OA==", "bodyText": "we don't need stringUtils here, there is an isBlank extension function on String", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403931178", "createdAt": "2020-04-06T08:56:19Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk5MDA5Ng==", "bodyText": "Done!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403990096", "createdAt": "2020-04-06T10:33:35Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMTE3OA=="}, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjQyNjUwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NzoxM1rOGBOCWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1NzoxM1rOGBOCWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMTczNw==", "bodyText": "positive/negativeButtonText can be on the same line as the function call", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403931737", "createdAt": "2020-04-06T08:57:13Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjQyOTM0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1Nzo1NlrOGBOEMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1Nzo1NlrOGBOEMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMjIwOA==", "bodyText": "Kotlin style is when parameters can't fit on a line then each one gets its own line", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403932208", "createdAt": "2020-04-06T08:57:56Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjQ0MDM4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMDozNlrOGBOLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjo1MToyMlrOGBWLWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMzk4MA==", "bodyText": "this is not really using the Builder pattern correctly, a Builder returns itself for every method call so you can chain them eg\nAlertDialog.Builder(activity)\n.setTitle(title)\n.setMessage(message)\n.create()\n\nI also regularly favor using apply so I can omit the . calls", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403933980", "createdAt": "2020-04-06T09:00:36Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+     */\n+    private fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        // If the custom view already has a parent, there is already a dialog showing with the view\n+        // This happens for on resume - return to avoid creating a second dialog - the first one\n+        // will still show\n+\n+        val builder = AlertDialog.Builder(activity)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwMTU1Mg==", "bodyText": "this is not really using the Builder pattern correctly, a Builder returns itself for every method call so you can chain them eg\nAlertDialog.Builder(activity)\n.setTitle(title)\n.setMessage(message)\n.create()\n\n\nIf I understood correctly, this should be the correct way?\nval builder = AlertDialog.Builder(activity).apply {\n            setTitle(title)\n            setMessage(message)\n            setView(customView)\n            setCancelable(cancelable)\n            setPositiveButton(positiveButtonText) { dialogInterface: DialogInterface, _: Int ->\n                dialogInterface.dismiss()\n                onPositiveBtnClick?.run()\n            }\n            setNegativeButton(negativeButtonText) { dialogInterface: DialogInterface, _: Int ->\n                dialogInterface.dismiss()\n                onNegativeBtnClick?.run()\n            }\n        }\n        showSafely(activity, builder.create())", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r404001552", "createdAt": "2020-04-06T10:54:46Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+     */\n+    private fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        // If the custom view already has a parent, there is already a dialog showing with the view\n+        // This happens for on resume - return to avoid creating a second dialog - the first one\n+        // will still show\n+\n+        val builder = AlertDialog.Builder(activity)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMzk4MA=="}, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAxNTUyNQ==", "bodyText": "That is how I want it to look, yes. I might even omit the builder variable altogether, just calling create after the apply block is closed", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r404015525", "createdAt": "2020-04-06T11:22:07Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+     */\n+    private fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        // If the custom view already has a parent, there is already a dialog showing with the view\n+        // This happens for on resume - return to avoid creating a second dialog - the first one\n+        // will still show\n+\n+        val builder = AlertDialog.Builder(activity)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMzk4MA=="}, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA2NTExMw==", "bodyText": "Done!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r404065113", "createdAt": "2020-04-06T12:51:22Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable\n+    ) {\n+        val builder = AlertDialog.Builder(activity)\n+        builder.setTitle(title)\n+        builder.setMessage(message)\n+        if (!StringUtils.isBlank(positiveButtonText)) {\n+            builder.setPositiveButton(\n+                positiveButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onPositiveBtnClick.run()\n+            }\n+        }\n+        if (!StringUtils.isBlank(negativeButtonText)) {\n+            builder.setNegativeButton(\n+                negativeButtonText\n+            ) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()\n+                onNegativeBtnClick.run()\n+            }\n+        }\n+        val dialog = builder.create()\n+        showSafely(activity, dialog)\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+    */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity, title: String, message: String, onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    /*\n+    Shows alert dialog with custom view\n+     */\n+    private fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable,\n+        onNegativeBtnClick: Runnable,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        // If the custom view already has a parent, there is already a dialog showing with the view\n+        // This happens for on resume - return to avoid creating a second dialog - the first one\n+        // will still show\n+\n+        val builder = AlertDialog.Builder(activity)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMzk4MA=="}, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjQ0Njc1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMjoyOFrOGBOPPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTowMjoyOFrOGBOPPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzNTAzOQ==", "bodyText": "I don't see any nullability handling in this file, I believe people pass nulls frequently to the listeners, this may cause an illegalStateException", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r403935039", "createdAt": "2020-04-06T09:02:28Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,175 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import org.apache.commons.lang3.StringUtils\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity, dialog: Dialog) {\n+        val isActivityDestroyed = activity.isDestroyed\n+        if (activity.isFinishing || isActivityDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f415e8f2d9e4bf0beea36e1492b91876a8ceee2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjk2MTcyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMToyMzozMlrOGBTMhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMToyMzozMlrOGBTMhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAxNjI2Mw==", "bodyText": "dialogs automatically dismiss when you press any of their buttons", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r404016263", "createdAt": "2020-04-06T11:23:32Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,179 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        val builder = AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+        }\n+        if (positiveButtonText.isBlank()) {\n+            builder.setPositiveButton(positiveButtonText) { dialogInterface: DialogInterface, _: Int ->\n+                dialogInterface.dismiss()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "706f983ee8fd6761e872d958b59ae66176d1a9a7"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDA2Mzg1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0MDo1N1rOGDRV5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0Mzo1OVrOGDRcoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4MzA0Nw==", "bodyText": "the boolean was fine not Nullable because false was a sensible default", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406083047", "createdAt": "2020-04-09T09:40:57Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },\n+        negativeButtonText: String? = let { \"\" },\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean? = let { false }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NDc2OQ==", "bodyText": "@macgills Changes made! Thanks", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406084769", "createdAt": "2020-04-09T09:43:59Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },\n+        negativeButtonText: String? = let { \"\" },\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean? = let { false }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4MzA0Nw=="}, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDA3MTU0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo0MzoxMVrOGDRa0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwOTo1MzowOVrOGDRxOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NDMwNA==", "bodyText": "should be String? = null because null is an okay default, this may not have been set by a caller.\nThis let usage is quite confusing, this doesn't compile, right?", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406084304", "createdAt": "2020-04-09T09:43:11Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NzMxNw==", "bodyText": "I am not familiar with let in Kotlin \ud83d\ude05 It did actually compiled for me but I have made the changes!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406087317", "createdAt": "2020-04-09T09:48:27Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NDMwNA=="}, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA5MDA0Mg==", "bodyText": "@macgills I don't know if this is the right thing to do here\npositiveButtonText?.let {\n                if (positiveButtonText.isBlank()) {\n                    setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n                        onPositiveBtnClick?.run()\n                    }\n                }\n            }", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406090042", "createdAt": "2020-04-09T09:53:09Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -104,65 +95,76 @@ object DialogUtil {\n         )\n     }\n \n-    /*\n-    Shows alert dialog with custom view\n-     */\n-    private fun showAlertDialog(\n+    @JvmStatic\n+    fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        negativeButtonText: String,\n+        positiveButtonText: String?,\n         onPositiveBtnClick: Runnable?,\n-        onNegativeBtnClick: Runnable?,\n-        customView: View?,\n-        cancelable: Boolean\n+        cancellable: Boolean\n     ) {\n-        // If the custom view already has a parent, there is already a dialog showing with the view\n-        // This happens for on resume - return to avoid creating a second dialog - the first one\n-        // will still show\n-        if (customView?.parent != null) {\n-            return\n-        }\n-\n-        showSafely(activity, AlertDialog.Builder(activity).apply {\n-            setTitle(title)\n-            setMessage(message)\n-            setView(customView)\n-            setCancelable(cancelable)\n-            setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->\n-                onPositiveBtnClick?.run()\n-            }\n-            setNegativeButton(negativeButtonText) { _: DialogInterface, _: Int ->\n-                onNegativeBtnClick?.run()\n-            }\n-        }.create())\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n     }\n \n     /**\n-     * show a dialog with just a positive button\n+     * show a dialog\n      * @param activity\n      * @param title\n      * @param message\n      * @param positiveButtonText\n-     * @param positiveButtonClick\n-     * @param cancellable\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n      */\n     @JvmStatic\n     fun showAlertDialog(\n         activity: Activity,\n         title: String,\n         message: String,\n-        positiveButtonText: String,\n-        positiveButtonClick: Runnable?,\n-        cancellable: Boolean\n+        positiveButtonText: String? = let { \"\" },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NDMwNA=="}, "originalCommit": {"oid": "887cca56b511509e63e61bbd1cdce3889f533f32"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDIwNjg1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMDoyMDo1NVrOGDSucA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMDoyNToyNFrOGDS3hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNTcxMg==", "bodyText": "you don't have to check isBlank, you were only checking that previously because that was your default value.\nLets talk about let.\n\ndocs\ninline fun <T, R> T.let(block: (T) -> R): R\nlets break it down, T.let this means that anything of Type T has a function called let, T is generic so all objects have a let function\nblock: (T) -> R let accepts a parameter called block, what this parameter is is a function. that takes a T (T) and returns an R ->R. The easiest way to supply a function in kotlin is just to write { }. We want a function that takes a T so we can write an exampleFunction\n\"myString\".let({ myStringAsAVariable -> print(myStringAsAVariable )})\n\nbut there are some kotlin features to make this less annoying to write.\nif the last paramter of a function is another function then we can put it outside the (), when the only parameter is a function we can also omit the () altogether\n\"myString\".let() { myStringAsAVariable -> print(myStringAsAVariable ) }\n\"myString\".let { myStringAsAVariable -> print(myStringAsAVariable ) }\n\nwhen you only have 1 parameter to a lambda ie myStringAsAVariable you don't even need to declare it and can instead reference it as it\n\"myString\".let{ print(it) }", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406105712", "createdAt": "2020-04-09T10:20:55Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,171 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                if (positiveButtonText.isBlank()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f6f8a6e6b109da325d605cb4c40f5193b7f161"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwODAzOA==", "bodyText": "@macgills Thanks a lot now I understand the use of let.", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406108038", "createdAt": "2020-04-09T10:25:24Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,171 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                if (positiveButtonText.isBlank()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNTcxMg=="}, "originalCommit": {"oid": "97f6f8a6e6b109da325d605cb4c40f5193b7f161"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDYyMjMzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozMjoxNlrOGDWrsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjo1MzoyMVrOGDXYDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MDU0NA==", "bodyText": "as per the previous explanation you can just say setPositiveButton(it) here", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406170544", "createdAt": "2020-04-09T12:32:16Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5dbafb5e057d267f018b57d70171b36a7cc9fb3"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE4MTkwMA==", "bodyText": "@macgills Thanks for pointing it out!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406181900", "createdAt": "2020-04-09T12:53:21Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                setPositiveButton(positiveButtonText) { _: DialogInterface, _: Int ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MDU0NA=="}, "originalCommit": {"oid": "f5dbafb5e057d267f018b57d70171b36a7cc9fb3"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDc5NTUyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyMToxNlrOGDYYtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTozMTowOVrOGEhqRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5ODQ1Mg==", "bodyText": "This is quite broken. Only 1 of these methods actually calls this, the others just call themselves in an infinite loop and then would overflow the stack probably", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406198452", "createdAt": "2020-04-09T13:21:16Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDg4OA==", "bodyText": "My bad, I thought if I skipped the parms then the default value will automatically be picked and the function will be called but now I see my mistake.", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406214888", "createdAt": "2020-04-09T13:44:54Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5ODQ1Mg=="}, "originalCommit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMzU2MQ==", "bodyText": "@macgills I have made the changes. This is the first conversion PR and I am learning kotlin so wasn't smooth but next PRs will be smooth \ud83d\ude05", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r406833561", "createdAt": "2020-04-10T16:25:51Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5ODQ1Mg=="}, "originalCommit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5MjQ0Mg==", "bodyText": "It is a learning exercise, don't worry", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407392442", "createdAt": "2020-04-13T09:14:00Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5ODQ1Mg=="}, "originalCommit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5ODk4Mg==", "bodyText": "We did want to take advantage of the default arguments so your instincts were correct. It is because all these methods have the same name that this didn't work out. We could fix this by simply renaming the internal private method to createAndShowDialogSafely.\nThe API of this function is still unfortunately quite difficult to work with but this is because everything is calling it from java after all. I think my current design on kiwix is good from the api perspective, if you have curiosity about what this can be like in kotlin then I would suggest a quick read of AlertDialogShower, KiwixDialog which allow the showing of a dialog to be as simple as\ndialogShower.show(StopDownload, { downloader.cancelDownload(it.downloadId) })\n\nTo be clear this is not saying you have to rewrite this class to look like those classes, that would be out of scope for this ticket", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407398982", "createdAt": "2020-04-13T09:31:09Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,167 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        showAlertDialog(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            onPositiveBtnClick,\n+            cancellable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    @JvmStatic\n+    fun showAlertDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5ODQ1Mg=="}, "originalCommit": {"oid": "759dd60658406f6bb1e294c9f7fa42d1c81233e3"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTMyNjE3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTozMDo1OVrOGEj_Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo0NzowNFrOGEkRbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQzNzEzMQ==", "bodyText": "with named arguments you can omit specifying an argument if it is the same as the default value", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407437131", "createdAt": "2020-04-13T11:30:59Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,169 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        createAndShowDialogSafely(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f66abb1658eca678d7ac69edefe89dfd5efc4df"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0MTc3NQ==", "bodyText": "Thanks, Changed made!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407441775", "createdAt": "2020-04-13T11:47:04Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,169 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            positiveButtonText,\n+            negativeButtonText,\n+            onPositiveBtnClick,\n+            onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity,\n+            title,\n+            message,\n+            activity.getString(R.string.yes),\n+            activity.getString(R.string.no),\n+            onPositiveBtnClick,\n+            onNegativeBtnClick,\n+            customView,\n+            cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancellable: Boolean\n+    ) {\n+        createAndShowDialogSafely(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQzNzEzMQ=="}, "originalCommit": {"oid": "2f66abb1658eca678d7ac69edefe89dfd5efc4df"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTUzNTQzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzowMzo1OVrOGEl2eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzoyNDozNVrOGEmXmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ2NzY0MQ==", "bodyText": "we can fit these clicklisteners on one line if your remove the types from the lambda eg\nsetNegativeButton(it) { _, _ -> onNegativeBtnClick?.run() }", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407467641", "createdAt": "2020-04-13T13:03:59Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,166 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            negativeButtonText = negativeButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick,\n+            customView = customView,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    private fun createAndShowDialogSafely(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable? = null,\n+        onNegativeBtnClick: Runnable? = null,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                setPositiveButton(it) { _: DialogInterface, _: Int ->\n+                    onPositiveBtnClick?.run()\n+                }\n+            }\n+            negativeButtonText?.let {\n+                setNegativeButton(it) { _: DialogInterface, _: Int ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6d27adfe0d257813c4ec3f6f82bded9ac986fde"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ3NjEyMw==", "bodyText": "Done!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r407476123", "createdAt": "2020-04-13T13:24:35Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,166 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.content.DialogInterface\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            negativeButtonText = negativeButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick,\n+            customView = customView,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    private fun createAndShowDialogSafely(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable? = null,\n+        onNegativeBtnClick: Runnable? = null,\n+        customView: View? = null,\n+        cancelable: Boolean = false\n+    ) {\n+\n+        /* If the custom view already has a parent, there is already a dialog showing with the view\n+         * This happens for on resume - return to avoid creating a second dialog - the first one\n+         * will still show\n+         */\n+        if (customView?.parent != null) {\n+            return\n+        }\n+\n+        showSafely(activity, AlertDialog.Builder(activity).apply {\n+            setTitle(title)\n+            setMessage(message)\n+            setView(customView)\n+            setCancelable(cancelable)\n+            positiveButtonText?.let {\n+                setPositiveButton(it) { _: DialogInterface, _: Int ->\n+                    onPositiveBtnClick?.run()\n+                }\n+            }\n+            negativeButtonText?.let {\n+                setNegativeButton(it) { _: DialogInterface, _: Int ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ2NzY0MQ=="}, "originalCommit": {"oid": "c6d27adfe0d257813c4ec3f6f82bded9ac986fde"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzI0MzYzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0Njo1OFrOGFI8ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToxODo1MVrOGFJ9RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MjYwMg==", "bodyText": "null is passed here which would cause a crash", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408042602", "createdAt": "2020-04-14T10:46:58Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MzA4NA==", "bodyText": "Please review the call sites and change the nullability of parameters to fit the use case", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408043084", "createdAt": "2020-04-14T10:47:52Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MjYwMg=="}, "originalCommit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0OTg5Ng==", "bodyText": "Done!", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408049896", "createdAt": "2020-04-14T11:00:33Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MjYwMg=="}, "originalCommit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1OTIwNA==", "bodyText": "The nullability is still not really where I want it, take for example\n    @JvmStatic\n    fun showAlertDialog(\n        activity: Activity,\n        title: String,\n        message: String,\n        onPositiveBtnClick: Runnable?,\n        onNegativeBtnClick: Runnable?\n    ) \n\nand its 1 usage\nDialogUtil.showAlertDialog(getActivity(),\n                getString(R.string.upload_nearby_place_found_title),\n                String.format(Locale.getDefault(),\n                        getString(R.string.upload_nearby_place_found_description),\n                        place.getName()),\n                () -> {\n                    etTitle.setText(place.getName());\n                    Description description = new Description();\n                    description.setLanguageCode(\"en\");\n                    description.setDescriptionText(place.getLongDescription());\n                    descriptions = Arrays.asList(description);\n                    setDescriptionsInAdapter(descriptions);\n                },\n                () -> {\n\n                });\n\nonPositiveBtnClick: Runnable? this is not true because this is never null\nonNegativeBtnClick: Runnable? this parameter shouldn't even exist\nI suppose this is getting a bit more than \"conversion\" if we are altering the callsites overmuch but I want to hammer home the point that making non nullable things nullable weakens our knowledge of the system from a type perspective. This method's intention is\n\"show a Yes/No Dialog with a positive action\", to make the action nullable feels awkward. If this method were used somewhere else with a null positive action then I would be okay with it because it would then be \"show a Yes/No Dialog with an optional positive action\" but the definition and the usage are at odds with one another.\nAnyway enough rambling, I am good to merge.", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408059204", "createdAt": "2020-04-14T11:18:51Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String,\n+        negativeButtonText: String,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MjYwMg=="}, "originalCommit": {"oid": "593e99e768e8ee6bdbde1185f7dd35172c41334a"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzM2MzUyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyMzo1OFrOGFKHLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTozMjoyNFrOGFdyjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTc0Mg==", "bodyText": "whoops, nearly missed this, the default for this should be true I believe", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408061742", "createdAt": "2020-04-14T11:23:58Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        negativeButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            negativeButtonText = negativeButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick,\n+            customView = customView,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    private fun createAndShowDialogSafely(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable? = null,\n+        onNegativeBtnClick: Runnable? = null,\n+        customView: View? = null,\n+        cancelable: Boolean = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee902ea4defdde0a15f19975e0f9929eda973b3"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4NDE0MA==", "bodyText": "Thanks for pointing it out", "url": "https://github.com/commons-app/apps-android-commons/pull/3621#discussion_r408384140", "createdAt": "2020-04-14T19:32:24Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/utils/DialogUtil.kt", "diffHunk": "@@ -0,0 +1,161 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import android.app.Dialog\n+import android.view.View\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DialogUtil {\n+    /**\n+     * Shows a dialog safely.\n+     * @param activity the activity\n+     * @param dialog the dialog to be shown\n+     */\n+    private fun showSafely(activity: Activity?, dialog: Dialog?) {\n+\n+        if (activity == null || dialog == null) {\n+            Timber.d(\"Show called with null activity / dialog. Ignoring.\")\n+            return\n+        }\n+\n+        if (activity.isFinishing || activity.isDestroyed) {\n+            Timber.e(\"Activity is not running. Could not show dialog. \")\n+            return\n+        }\n+        try {\n+            dialog.show()\n+        } catch (e: IllegalStateException) {\n+            Timber.e(e, \"Could not show dialog.\")\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        negativeButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            negativeButtonText = negativeButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        onPositiveBtnClick: Runnable?,\n+        onNegativeBtnClick: Runnable?,\n+        customView: View?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = activity.getString(R.string.yes),\n+            negativeButtonText = activity.getString(R.string.no),\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            onNegativeBtnClick = onNegativeBtnClick,\n+            customView = customView,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    @JvmStatic\n+    fun showAlertDialog(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String?,\n+        onPositiveBtnClick: Runnable?,\n+        cancelable: Boolean\n+    ) {\n+        createAndShowDialogSafely(\n+            activity = activity,\n+            title = title,\n+            message = message,\n+            positiveButtonText = positiveButtonText,\n+            onPositiveBtnClick = onPositiveBtnClick,\n+            cancelable = cancelable\n+        )\n+    }\n+\n+    /**\n+     * show a dialog\n+     * @param activity\n+     * @param title\n+     * @param message\n+     * @param positiveButtonText\n+     * @param negativeButtonText\n+     * @param onPositiveBtnClick\n+     * @param onNegativeBtnClick\n+     * @param customView\n+     * @param cancelable\n+     */\n+    private fun createAndShowDialogSafely(\n+        activity: Activity,\n+        title: String,\n+        message: String,\n+        positiveButtonText: String? = null,\n+        negativeButtonText: String? = null,\n+        onPositiveBtnClick: Runnable? = null,\n+        onNegativeBtnClick: Runnable? = null,\n+        customView: View? = null,\n+        cancelable: Boolean = false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTc0Mg=="}, "originalCommit": {"oid": "eee902ea4defdde0a15f19975e0f9929eda973b3"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4396, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}