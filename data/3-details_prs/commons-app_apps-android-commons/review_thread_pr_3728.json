{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTQyNTA0", "number": 3728, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo0NjozMlrOD8zlBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoxMTowNlrOD80EEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDg2MjEzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo0NjozMlrOGV-CWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNTo0MVrOGV_RlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4OTY5MA==", "bodyText": "agh static lists! I would be very concerned about ConcurrentModification, this is not thread safe for ArrayList.\nMaybe a CopyOnWriteArrayList would be best here? I am really not sure without diving deeper", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r425689690", "createdAt": "2020-05-15T09:46:32Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyController.java", "diffHunk": "@@ -255,4 +226,18 @@ public NearbyPlacesInfo loadAttractionsFromLocation(LatLng curLatLng, LatLng sea\n         public LatLng curLatLng; // Current location when this places are populated\n         public LatLng searchLatLng; // Search location for finding this places\n     }\n+\n+    /**\n+     * Updates makerLabelList item isBookmarked value\n+     * @param place place which is bookmarked\n+     * @param isBookmarked true is bookmarked, false if bookmark removed\n+     */\n+    public static void updateMarkerLabelListBookmark(Place place, boolean isBookmarked) {\n+        for (ListIterator<MarkerPlaceGroup> iter = markerLabelList.listIterator(); iter.hasNext();) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwOTk3Mw==", "bodyText": "Hmmm actually I think copyOnWrite iterators don't allow modification... maybe we can mark the methods that update the list @MainThread which I am assuming is the assumption that keeps this working?", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r425709973", "createdAt": "2020-05-15T10:25:41Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyController.java", "diffHunk": "@@ -255,4 +226,18 @@ public NearbyPlacesInfo loadAttractionsFromLocation(LatLng curLatLng, LatLng sea\n         public LatLng curLatLng; // Current location when this places are populated\n         public LatLng searchLatLng; // Search location for finding this places\n     }\n+\n+    /**\n+     * Updates makerLabelList item isBookmarked value\n+     * @param place place which is bookmarked\n+     * @param isBookmarked true is bookmarked, false if bookmark removed\n+     */\n+    public static void updateMarkerLabelListBookmark(Place place, boolean isBookmarked) {\n+        for (ListIterator<MarkerPlaceGroup> iter = markerLabelList.listIterator(); iter.hasNext();) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4OTY5MA=="}, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDg5NTUyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/nearby/fragments/NearbyParentFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1Njo1MlrOGV-XSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1Njo1MlrOGV-XSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5NTA1MQ==", "bodyText": "all of these don't need 2 execution branches on isBookmarked, a ternary will make it look all the nicer\nvectorDrawable = VectorDrawableCompat.create(\n                    getContext().getResources(), \n                    isBookmarked ? R.drawable.ic_custom_map_marker_green_bookmarked : R.drawable.ic_custom_map_marker_green,\n                    getContext().getTheme()\n                );\n\nand we are repeating this vector creation a lot too I'd propose\nvectorDrawable(  isBookmarked \n? R.drawable.ic_custom_map_marker_green_bookmarked \n: R.drawable.ic_custom_map_marker_green)\n\nhmm actually all this logic does is choose a drawable really, maybe just a method to do that?\nprivate @DrawableRes Int getIconFor(Place place, Boolean isBookmarked)", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r425695051", "createdAt": "2020-05-15T09:56:52Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/fragments/NearbyParentFragment.java", "diffHunk": "@@ -1175,22 +1176,41 @@ public void updateMarker(boolean isBookmarked, Place place, @Nullable fr.free.nr\n         addPlaceToNearbyList(place);\n \n         VectorDrawableCompat vectorDrawable;\n-        if (isBookmarked) {\n-            vectorDrawable = VectorDrawableCompat.create(\n-                    getContext().getResources(), R.drawable.ic_custom_bookmark_marker, getContext().getTheme()\n-            );\n-        } else if (!place.pic.trim().isEmpty()) {\n-            vectorDrawable = VectorDrawableCompat.create( // Means place has picture\n-                    getContext().getResources(), R.drawable.ic_custom_map_marker_green, getContext().getTheme()\n-            );\n+        if (!place.pic.trim().isEmpty()) {\n+            if (isBookmarked) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDkwMjc1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/nearby/presenter/NearbyParentFragmentPresenter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1ODo1OVrOGV-bww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1ODo1OVrOGV-bww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5NjE5NQ==", "bodyText": "do we need these logs?", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r425696195", "createdAt": "2020-05-15T09:58:59Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/presenter/NearbyParentFragmentPresenter.java", "diffHunk": "@@ -308,10 +309,14 @@ public void updateMapMarkersToController(List<NearbyBaseMarker> nearbyBaseMarker\n         for (int i = 0; i < nearbyBaseMarkers.size(); i++) {\n             NearbyBaseMarker nearbyBaseMarker = nearbyBaseMarkers.get(i);\n             NearbyController.markerLabelList.add(\n-                    new MarkerPlaceGroup(nearbyBaseMarkers.get(i).getMarker(), bookmarkLocationDao.findBookmarkLocation(nearbyBaseMarkers.get(i).getPlace()), nearbyBaseMarker.getPlace()));\n+                    new MarkerPlaceGroup(nearbyBaseMarker.getMarker(), bookmarkLocationDao.findBookmarkLocation(nearbyBaseMarker.getPlace()), nearbyBaseMarker.getPlace()));\n             //TODO: fix bookmark location\n             NearbyController.markerExistsMap.put((nearbyBaseMarkers.get(i).getPlace().hasWikidataLink()), nearbyBaseMarkers.get(i).getMarker());\n             NearbyController.markerNeedPicMap.put(((nearbyBaseMarkers.get(i).getPlace().pic == null) ? true : false), nearbyBaseMarkers.get(i).getMarker());\n+            Log.d(\"deneme5\",\"pics:\"+nearbyBaseMarkers.get(i).getPlace().pic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDkxMDY1OnYy", "diffSide": "RIGHT", "path": "app/src/main/res/layout/item_place.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDowMTozMFrOGV-g3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDowMTozMFrOGV-g3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5NzUwMg==", "bodyText": "Is Left what we want? Start is generally what should be used, also these other attributes are confused, you shouldn't specify left and start", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r425697502", "createdAt": "2020-05-15T10:01:30Z", "author": {"login": "macgills"}, "path": "app/src/main/res/layout/item_place.xml", "diffHunk": "@@ -6,13 +6,22 @@\n     android:focusableInTouchMode=\"true\"\n     android:minHeight=\"@dimen/large_height\">\n \n+    <ImageView\n+      android:id=\"@+id/bookmarkButtonImage\"\n+      android:layout_width=\"wrap_content\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_margin=\"@dimen/standard_gap\"\n+      android:tint=\"?attr/rowButtonColor\"\n+      app:srcCompat=\"@drawable/ic_round_star_border_24px\" />\n+\n     <com.facebook.drawee.view.SimpleDraweeView\n         android:id=\"@+id/icon\"\n         android:layout_width=\"@dimen/dimen_40\"\n         android:layout_height=\"@dimen/dimen_40\"\n         android:layout_marginLeft=\"@dimen/standard_gap\"\n         android:layout_marginStart=\"@dimen/standard_gap\"\n         android:layout_marginTop=\"@dimen/standard_gap\"\n+        android:layout_alignLeft=\"@id/bookmarkButtonImage\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk0MTYwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyFilterSearchRecyclerViewAdapter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoxMTowNlrOGV-0Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0NzowOVrOGW37uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwMjQ5NQ==", "bodyText": "So this should be completely unnecessary, enums are inherently ordered.\nThis is the culprit in Label, mucking up ordering\npublic static final Map<String, Label> TEXT_TO_DESCRIPTION\n            = new HashMap<>(Label.values().length);\n\n    static {\n        for (Label label : values()) {\n            TEXT_TO_DESCRIPTION.put(label.text, label);\n        }\n    }\n\nThis map doesn't need to exist, the only usage is when constructing this class. A list can be created out of Label.values()\nAlso you could have directly referenced the bookmark eg labels.indexOf(Label.BOOKMARK)", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r425702495", "createdAt": "2020-05-15T10:11:06Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyFilterSearchRecyclerViewAdapter.java", "diffHunk": "@@ -120,6 +121,8 @@ protected FilterResults performFiltering(CharSequence constraint) {\n                 }\n \n                 if (constraint == null || constraint.length() == 0) {\n+                    // set my bookmarks as the first item\n+                    Collections.swap(labels, 0 , labels.indexOf(Label.fromText(\"BOOKMARK\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNTQ5NA==", "bodyText": "Hmm, but this map is actually useful to get label from text:\n        Label label = TEXT_TO_DESCRIPTION.get(text);", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r426635494", "createdAt": "2020-05-18T13:43:03Z", "author": {"login": "neslihanturan"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyFilterSearchRecyclerViewAdapter.java", "diffHunk": "@@ -120,6 +121,8 @@ protected FilterResults performFiltering(CharSequence constraint) {\n                 }\n \n                 if (constraint == null || constraint.length() == 0) {\n+                    // set my bookmarks as the first item\n+                    Collections.swap(labels, 0 , labels.indexOf(Label.fromText(\"BOOKMARK\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwMjQ5NQ=="}, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzODI2NA==", "bodyText": "tch, I must have had read access off in my find usages without realising.\nTEXT_TO_DESCRIPTION isn't needed as the input to this adapter because values suits just fine and we don't need to do a swap", "url": "https://github.com/commons-app/apps-android-commons/pull/3728#discussion_r426638264", "createdAt": "2020-05-18T13:47:09Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/nearby/NearbyFilterSearchRecyclerViewAdapter.java", "diffHunk": "@@ -120,6 +121,8 @@ protected FilterResults performFiltering(CharSequence constraint) {\n                 }\n \n                 if (constraint == null || constraint.length() == 0) {\n+                    // set my bookmarks as the first item\n+                    Collections.swap(labels, 0 , labels.indexOf(Label.fromText(\"BOOKMARK\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwMjQ5NQ=="}, "originalCommit": {"oid": "a45cf040c3c500365269e700db3b38267f7259ae"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4345, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}