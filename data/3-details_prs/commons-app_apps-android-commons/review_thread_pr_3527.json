{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjY1NzI5", "number": 3527, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoyNzo1OVrODoW78Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo0NjowM1rODooOKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjQ1NDI1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/Contribution.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoyNzo1OVrOF224bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowMzozMlrOF29p1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2NjYwNg==", "bodyText": "Why is it public when it has a getter and a setter?", "url": "https://github.com/commons-app/apps-android-commons/pull/3527#discussion_r393066606", "createdAt": "2020-03-16T14:27:59Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/Contribution.java", "diffHunk": "@@ -68,6 +68,7 @@ public Contribution createFromParcel(Parcel parcel) {\n     public String decimalCoords;\n     public boolean isMultiple;\n     public String wikiDataEntityId;\n+    public String p18Value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ca94073711f10b79427934739d25988f2088645"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3NzU1Ng==", "bodyText": "Very true, sorry \u0131 just ctrl+D from previous line, will fix it ASAP:)", "url": "https://github.com/commons-app/apps-android-commons/pull/3527#discussion_r393177556", "createdAt": "2020-03-16T17:03:32Z", "author": {"login": "neslihanturan"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/Contribution.java", "diffHunk": "@@ -68,6 +68,7 @@ public Contribution createFromParcel(Parcel parcel) {\n     public String decimalCoords;\n     public boolean isMultiple;\n     public String wikiDataEntityId;\n+    public String p18Value;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2NjYwNg=="}, "originalCommit": {"oid": "9ca94073711f10b79427934739d25988f2088645"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTI4NjE2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo0NjowM1rOF3SmgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDowMDo0OFrOF3VOlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyMDc2OQ==", "bodyText": "This log is lying, this isn't \"not null\" it is \"not blank\"(to borrow the expression from the kotlin standard library), if this method accepts null values for the p18 then this is a guaranteed NPE", "url": "https://github.com/commons-app/apps-android-commons/pull/3527#discussion_r393520769", "createdAt": "2020-03-17T08:46:03Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "diffHunk": "@@ -64,6 +64,11 @@ public void createClaimWithLogging(String wikidataEntityId, String fileName) {\n             return;\n         }\n \n+        if (!p18Value.trim().isEmpty()) {\n+            Timber.d(\"Skipping creation of claim as p18Value is not null, we won't override existing image\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "286823566b49b3240ce5cc36c0bb3fa574af7fdf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzMzEwOA==", "bodyText": "Yeah, fixed:) it is never null, empty or value", "url": "https://github.com/commons-app/apps-android-commons/pull/3527#discussion_r393533108", "createdAt": "2020-03-17T09:08:14Z", "author": {"login": "neslihanturan"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "diffHunk": "@@ -64,6 +64,11 @@ public void createClaimWithLogging(String wikidataEntityId, String fileName) {\n             return;\n         }\n \n+        if (!p18Value.trim().isEmpty()) {\n+            Timber.d(\"Skipping creation of claim as p18Value is not null, we won't override existing image\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyMDc2OQ=="}, "originalCommit": {"oid": "286823566b49b3240ce5cc36c0bb3fa574af7fdf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1MjYzOA==", "bodyText": "Excellent, please mark the parameter @NonNull", "url": "https://github.com/commons-app/apps-android-commons/pull/3527#discussion_r393552638", "createdAt": "2020-03-17T09:42:17Z", "author": {"login": "macgills"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "diffHunk": "@@ -64,6 +64,11 @@ public void createClaimWithLogging(String wikidataEntityId, String fileName) {\n             return;\n         }\n \n+        if (!p18Value.trim().isEmpty()) {\n+            Timber.d(\"Skipping creation of claim as p18Value is not null, we won't override existing image\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyMDc2OQ=="}, "originalCommit": {"oid": "286823566b49b3240ce5cc36c0bb3fa574af7fdf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU2Mzc5Ng==", "bodyText": "Done @macgills thanks a lot:)", "url": "https://github.com/commons-app/apps-android-commons/pull/3527#discussion_r393563796", "createdAt": "2020-03-17T10:00:48Z", "author": {"login": "neslihanturan"}, "path": "app/src/main/java/fr/free/nrw/commons/wikidata/WikidataEditService.java", "diffHunk": "@@ -64,6 +64,11 @@ public void createClaimWithLogging(String wikidataEntityId, String fileName) {\n             return;\n         }\n \n+        if (!p18Value.trim().isEmpty()) {\n+            Timber.d(\"Skipping creation of claim as p18Value is not null, we won't override existing image\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyMDc2OQ=="}, "originalCommit": {"oid": "286823566b49b3240ce5cc36c0bb3fa574af7fdf"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4211, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}