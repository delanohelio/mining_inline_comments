{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Mjk4OTkw", "number": 3881, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwODozMDoxMlrOESIDoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwODozMDo0NVrOESIDzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDQxODI0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/mwapi/OkHttpJsonApiClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwODozMDoxMlrOG3Kitw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMzowNjo0M1rOG3SPCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NzU5MQ==", "bodyText": "We can probably remove this log line", "url": "https://github.com/commons-app/apps-android-commons/pull/3881#discussion_r460497591", "createdAt": "2020-07-26T08:30:12Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/mwapi/OkHttpJsonApiClient.java", "diffHunk": "@@ -65,32 +65,32 @@ public OkHttpJsonApiClient(OkHttpClient okHttpClient,\n   }\n \n   @NonNull\n-  public Single<LeaderboardResponse> getLeaderboard(String userName, String duration, String category, String limit, String offset) {\n+  public Observable<LeaderboardResponse> getLeaderboard(String userName, String duration, String category, String limit, String offset) {\n     final String fetchLeaderboardUrlTemplate = wikiMediaTestToolforgeUrl\n         + \"/leaderboard.py\";\n-    return Single.fromCallable(() -> {\n-      String url = String.format(Locale.ENGLISH,\n-          fetchLeaderboardUrlTemplate,\n-          userName,\n-          duration,\n-          category,\n-          limit,\n-          offset);\n-      HttpUrl.Builder urlBuilder = HttpUrl.parse(url).newBuilder();\n-      urlBuilder.addQueryParameter(\"user\", userName);\n-      urlBuilder.addQueryParameter(\"duration\", duration);\n-      urlBuilder.addQueryParameter(\"category\", category);\n-      urlBuilder.addQueryParameter(\"limit\", limit);\n-      urlBuilder.addQueryParameter(\"offset\", offset);\n-      Timber.i(\"Url %s\", urlBuilder.toString());\n-      Request request = new Request.Builder()\n-          .url(urlBuilder.toString())\n-          .build();\n+    String url = String.format(Locale.ENGLISH,\n+        fetchLeaderboardUrlTemplate,\n+        userName,\n+        duration,\n+        category,\n+        limit,\n+        offset);\n+    HttpUrl.Builder urlBuilder = HttpUrl.parse(url).newBuilder();\n+    urlBuilder.addQueryParameter(\"user\", userName);\n+    urlBuilder.addQueryParameter(\"duration\", duration);\n+    urlBuilder.addQueryParameter(\"category\", category);\n+    urlBuilder.addQueryParameter(\"limit\", limit);\n+    urlBuilder.addQueryParameter(\"offset\", offset);\n+    Timber.i(\"Url %s\", urlBuilder.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68682a95663156a960796aa0cd750639f0466bc3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMzYyNg==", "bodyText": "Okay", "url": "https://github.com/commons-app/apps-android-commons/pull/3881#discussion_r460623626", "createdAt": "2020-07-27T03:06:43Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/mwapi/OkHttpJsonApiClient.java", "diffHunk": "@@ -65,32 +65,32 @@ public OkHttpJsonApiClient(OkHttpClient okHttpClient,\n   }\n \n   @NonNull\n-  public Single<LeaderboardResponse> getLeaderboard(String userName, String duration, String category, String limit, String offset) {\n+  public Observable<LeaderboardResponse> getLeaderboard(String userName, String duration, String category, String limit, String offset) {\n     final String fetchLeaderboardUrlTemplate = wikiMediaTestToolforgeUrl\n         + \"/leaderboard.py\";\n-    return Single.fromCallable(() -> {\n-      String url = String.format(Locale.ENGLISH,\n-          fetchLeaderboardUrlTemplate,\n-          userName,\n-          duration,\n-          category,\n-          limit,\n-          offset);\n-      HttpUrl.Builder urlBuilder = HttpUrl.parse(url).newBuilder();\n-      urlBuilder.addQueryParameter(\"user\", userName);\n-      urlBuilder.addQueryParameter(\"duration\", duration);\n-      urlBuilder.addQueryParameter(\"category\", category);\n-      urlBuilder.addQueryParameter(\"limit\", limit);\n-      urlBuilder.addQueryParameter(\"offset\", offset);\n-      Timber.i(\"Url %s\", urlBuilder.toString());\n-      Request request = new Request.Builder()\n-          .url(urlBuilder.toString())\n-          .build();\n+    String url = String.format(Locale.ENGLISH,\n+        fetchLeaderboardUrlTemplate,\n+        userName,\n+        duration,\n+        category,\n+        limit,\n+        offset);\n+    HttpUrl.Builder urlBuilder = HttpUrl.parse(url).newBuilder();\n+    urlBuilder.addQueryParameter(\"user\", userName);\n+    urlBuilder.addQueryParameter(\"duration\", duration);\n+    urlBuilder.addQueryParameter(\"category\", category);\n+    urlBuilder.addQueryParameter(\"limit\", limit);\n+    urlBuilder.addQueryParameter(\"offset\", offset);\n+    Timber.i(\"Url %s\", urlBuilder.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NzU5MQ=="}, "originalCommit": {"oid": "68682a95663156a960796aa0cd750639f0466bc3"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDQxODY5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/profile/leaderboard/DataSourceClass.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwODozMDo0NVrOG3Ki7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzo0MDoxMVrOG4jdlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NzY0NA==", "bodyText": "Define these as constants.", "url": "https://github.com/commons-app/apps-android-commons/pull/3881#discussion_r460497644", "createdAt": "2020-07-26T08:30:45Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/profile/leaderboard/DataSourceClass.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package fr.free.nrw.commons.profile.leaderboard;\n+\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.LOADED;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.LOADING;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.PAGE_SIZE;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.START_OFFSET;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.paging.PageKeyedDataSource;\n+import fr.free.nrw.commons.auth.SessionManager;\n+import fr.free.nrw.commons.mwapi.OkHttpJsonApiClient;\n+import io.reactivex.disposables.CompositeDisposable;\n+import java.util.Objects;\n+import timber.log.Timber;\n+\n+public class DataSourceClass extends PageKeyedDataSource<Integer, LeaderboardList> {\n+\n+    private OkHttpJsonApiClient okHttpJsonApiClient;\n+    private SessionManager sessionManager;\n+    private MutableLiveData<String> progressLiveStatus;\n+    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n+\n+    public DataSourceClass(OkHttpJsonApiClient okHttpJsonApiClient,SessionManager sessionManager) {\n+        this.okHttpJsonApiClient = okHttpJsonApiClient;\n+        this.sessionManager = sessionManager;\n+        progressLiveStatus = new MutableLiveData<>();\n+    }\n+\n+\n+    public MutableLiveData<String> getProgressLiveStatus() {\n+        return progressLiveStatus;\n+    }\n+\n+    @Override\n+    public void loadInitial(@NonNull LoadInitialParams<Integer> params,\n+        @NonNull LoadInitialCallback<Integer, LeaderboardList> callback) {\n+\n+        compositeDisposable.add(okHttpJsonApiClient\n+                .getLeaderboard(Objects.requireNonNull(sessionManager.getCurrentAccount()).name,\n+                    \"all_time\", \"upload\", String.valueOf(PAGE_SIZE), String.valueOf(START_OFFSET))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68682a95663156a960796aa0cd750639f0466bc3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMzc2Nw==", "bodyText": "I plan to move these as constants when I implement the filters, will it be okay if we leave them as hardcoded for now?", "url": "https://github.com/commons-app/apps-android-commons/pull/3881#discussion_r460623767", "createdAt": "2020-07-27T03:07:22Z", "author": {"login": "madhurgupta10"}, "path": "app/src/main/java/fr/free/nrw/commons/profile/leaderboard/DataSourceClass.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package fr.free.nrw.commons.profile.leaderboard;\n+\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.LOADED;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.LOADING;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.PAGE_SIZE;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.START_OFFSET;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.paging.PageKeyedDataSource;\n+import fr.free.nrw.commons.auth.SessionManager;\n+import fr.free.nrw.commons.mwapi.OkHttpJsonApiClient;\n+import io.reactivex.disposables.CompositeDisposable;\n+import java.util.Objects;\n+import timber.log.Timber;\n+\n+public class DataSourceClass extends PageKeyedDataSource<Integer, LeaderboardList> {\n+\n+    private OkHttpJsonApiClient okHttpJsonApiClient;\n+    private SessionManager sessionManager;\n+    private MutableLiveData<String> progressLiveStatus;\n+    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n+\n+    public DataSourceClass(OkHttpJsonApiClient okHttpJsonApiClient,SessionManager sessionManager) {\n+        this.okHttpJsonApiClient = okHttpJsonApiClient;\n+        this.sessionManager = sessionManager;\n+        progressLiveStatus = new MutableLiveData<>();\n+    }\n+\n+\n+    public MutableLiveData<String> getProgressLiveStatus() {\n+        return progressLiveStatus;\n+    }\n+\n+    @Override\n+    public void loadInitial(@NonNull LoadInitialParams<Integer> params,\n+        @NonNull LoadInitialCallback<Integer, LeaderboardList> callback) {\n+\n+        compositeDisposable.add(okHttpJsonApiClient\n+                .getLeaderboard(Objects.requireNonNull(sessionManager.getCurrentAccount()).name,\n+                    \"all_time\", \"upload\", String.valueOf(PAGE_SIZE), String.valueOf(START_OFFSET))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NzY0NA=="}, "originalCommit": {"oid": "68682a95663156a960796aa0cd750639f0466bc3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1NDQ1NQ==", "bodyText": "It's OK for now if you don't forget to fix them soon :-)", "url": "https://github.com/commons-app/apps-android-commons/pull/3881#discussion_r461954455", "createdAt": "2020-07-28T23:40:11Z", "author": {"login": "nicolas-raoul"}, "path": "app/src/main/java/fr/free/nrw/commons/profile/leaderboard/DataSourceClass.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package fr.free.nrw.commons.profile.leaderboard;\n+\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.LOADED;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.LOADING;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.PAGE_SIZE;\n+import static fr.free.nrw.commons.profile.leaderboard.LeaderboardConstants.START_OFFSET;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.paging.PageKeyedDataSource;\n+import fr.free.nrw.commons.auth.SessionManager;\n+import fr.free.nrw.commons.mwapi.OkHttpJsonApiClient;\n+import io.reactivex.disposables.CompositeDisposable;\n+import java.util.Objects;\n+import timber.log.Timber;\n+\n+public class DataSourceClass extends PageKeyedDataSource<Integer, LeaderboardList> {\n+\n+    private OkHttpJsonApiClient okHttpJsonApiClient;\n+    private SessionManager sessionManager;\n+    private MutableLiveData<String> progressLiveStatus;\n+    private CompositeDisposable compositeDisposable = new CompositeDisposable();\n+\n+    public DataSourceClass(OkHttpJsonApiClient okHttpJsonApiClient,SessionManager sessionManager) {\n+        this.okHttpJsonApiClient = okHttpJsonApiClient;\n+        this.sessionManager = sessionManager;\n+        progressLiveStatus = new MutableLiveData<>();\n+    }\n+\n+\n+    public MutableLiveData<String> getProgressLiveStatus() {\n+        return progressLiveStatus;\n+    }\n+\n+    @Override\n+    public void loadInitial(@NonNull LoadInitialParams<Integer> params,\n+        @NonNull LoadInitialCallback<Integer, LeaderboardList> callback) {\n+\n+        compositeDisposable.add(okHttpJsonApiClient\n+                .getLeaderboard(Objects.requireNonNull(sessionManager.getCurrentAccount()).name,\n+                    \"all_time\", \"upload\", String.valueOf(PAGE_SIZE), String.valueOf(START_OFFSET))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NzY0NA=="}, "originalCommit": {"oid": "68682a95663156a960796aa0cd750639f0466bc3"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4272, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}