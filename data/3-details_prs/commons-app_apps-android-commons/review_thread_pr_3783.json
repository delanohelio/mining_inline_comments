{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzEyMzM3", "number": 3783, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOToyMjo1M1rOEBfA9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NjowNlrOEFo28g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTkyMTgyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOToyMjo1M1rOGdXBqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNToyOTowN1rOGe2VBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzOTE0NA==", "bodyText": "The web provides an option to copy both the thumb and full image when it comes to using images in wikis. The corresponding Wiki codes suggested are:\n\n[[File:Title.jpg|thumb|Title]]\nOR\n[[File:Title.jpg|M\u00fcnster, St.-Paulus-Dom, Altarinsel -- 2019 -- 3815-9]]\n\nExample:\n\nSource file\nIt would be nice if we could provide the users with both the wikicode and give them an option to choose from them. Alternatively, as we're concerned about usage of the image in a Wiki article, I think it makes sense to copy the wikicode for the \"thumbnail\" image rather than the wikicode for the full image.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r433439144", "createdAt": "2020-06-01T19:22:53Z", "author": {"login": "sivaraam"}, "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "diffHunk": "@@ -518,6 +518,14 @@ public void setCoordinates(@Nullable final LatLng coordinates) {\n         this.coordinates = coordinates;\n     }\n \n+    /**\n+     * Returns wikicode to use the media file on a MediaWiki site\n+     * @return\n+     */\n+    public String getWikiCode() {\n+        return String.format(\"[[File:%s|%s]]\", filename, filename);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "786fec6a6fd12c5b3cd503eebb95caa8025f9847"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ5MTc5Mg==", "bodyText": "Thanks for the suggestion @sivaraam. cc: @misaochan to confirm which approach she prefers.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r433491792", "createdAt": "2020-06-01T21:09:25Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "diffHunk": "@@ -518,6 +518,14 @@ public void setCoordinates(@Nullable final LatLng coordinates) {\n         this.coordinates = coordinates;\n     }\n \n+    /**\n+     * Returns wikicode to use the media file on a MediaWiki site\n+     * @return\n+     */\n+    public String getWikiCode() {\n+        return String.format(\"[[File:%s|%s]]\", filename, filename);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzOTE0NA=="}, "originalCommit": {"oid": "786fec6a6fd12c5b3cd503eebb95caa8025f9847"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc2MDk1NQ==", "bodyText": "Alternatively, as we're concerned about usage of the image in a Wiki article, I think it makes sense to copy the wikicode for the \"thumbnail\" image rather than the wikicode for the full image.\n\nI agree with the thumbnail approach, pictures are almost always displayed as thumbnails in wiki articles AFAIK.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r433760955", "createdAt": "2020-06-02T09:58:50Z", "author": {"login": "misaochan"}, "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "diffHunk": "@@ -518,6 +518,14 @@ public void setCoordinates(@Nullable final LatLng coordinates) {\n         this.coordinates = coordinates;\n     }\n \n+    /**\n+     * Returns wikicode to use the media file on a MediaWiki site\n+     * @return\n+     */\n+    public String getWikiCode() {\n+        return String.format(\"[[File:%s|%s]]\", filename, filename);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzOTE0NA=="}, "originalCommit": {"oid": "786fec6a6fd12c5b3cd503eebb95caa8025f9847"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMDU4MA==", "bodyText": "I have updated the code to use thumbnail.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r435000580", "createdAt": "2020-06-04T05:29:07Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "diffHunk": "@@ -518,6 +518,14 @@ public void setCoordinates(@Nullable final LatLng coordinates) {\n         this.coordinates = coordinates;\n     }\n \n+    /**\n+     * Returns wikicode to use the media file on a MediaWiki site\n+     * @return\n+     */\n+    public String getWikiCode() {\n+        return String.format(\"[[File:%s|%s]]\", filename, filename);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzOTE0NA=="}, "originalCommit": {"oid": "786fec6a6fd12c5b3cd503eebb95caa8025f9847"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODI4NzAyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowMDoxN1rOGepVnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzo0MjozMFrOGe0xMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4Nzc0MA==", "bodyText": "I wonder why the caption text is same as the filename. The following is the wiki syntax for a thumb image suggested by the web version of Commons:\n[[File:Title.jpg|thumb|Title]]\nSo, it's not good for the caption to be the filename as it might include the file extension and such.\nSome useful references:\n\nWikipedia:Images - Wikipedia\nWikipedia:Manual of Style/Images - Wikipedia", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r434787740", "createdAt": "2020-06-03T19:00:17Z", "author": {"login": "sivaraam"}, "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "diffHunk": "@@ -518,6 +518,14 @@ public void setCoordinates(@Nullable final LatLng coordinates) {\n         this.coordinates = coordinates;\n     }\n \n+    /**\n+     * Returns wikicode to use the media file on a MediaWiki site\n+     * @return\n+     */\n+    public String getWikiCode() {\n+        return String.format(\"[[File:%s|thumb|%s]]\", filename, filename);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43a2e6c929a4fd20fff9a09af612eeb56e3b2a86"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3NTAyNw==", "bodyText": "@sivaraam Thanks for pointing it out. I have updated it to use the thumbnail title.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r434975027", "createdAt": "2020-06-04T03:42:30Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/Media.java", "diffHunk": "@@ -518,6 +518,14 @@ public void setCoordinates(@Nullable final LatLng coordinates) {\n         this.coordinates = coordinates;\n     }\n \n+    /**\n+     * Returns wikicode to use the media file on a MediaWiki site\n+     * @return\n+     */\n+    public String getWikiCode() {\n+        return String.format(\"[[File:%s|thumb|%s]]\", filename, filename);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4Nzc0MA=="}, "originalCommit": {"oid": "43a2e6c929a4fd20fff9a09af612eeb56e3b2a86"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTE2NTg4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjozMzozM1rOGhynUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoyOToxOVrOGj723Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4NTQ1OA==", "bodyText": "I think this method should be located in Contribution itself, or can be called as a utility method too. Because we may need to learn ifMediaExistsOnWikipediaPage in any other parts of the code (which we will, to display todo list to user we will need to question this from MediaDetails ie.). Moving thing method to somewhere else can increase modularity.\nIdeally there may be a method with return type of boolean just to answer if media exist on wikipedia page or not. Currently it does more thing than just checking.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r438085458", "createdAt": "2020-06-10T12:33:33Z", "author": {"login": "neslihanturan"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -22,147 +24,202 @@\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.CompositeDisposable;\n import io.reactivex.schedulers.Schedulers;\n+import org.wikipedia.dataclient.WikiSite;\n import timber.log.Timber;\n \n public class ContributionViewHolder extends RecyclerView.ViewHolder {\n \n-    private final Callback callback;\n-    @BindView(R.id.contributionImage)\n-    SimpleDraweeView imageView;\n-    @BindView(R.id.contributionTitle) TextView titleView;\n-    @BindView(R.id.contributionState) TextView stateView;\n-    @BindView(R.id.contributionSequenceNumber) TextView seqNumView;\n-    @BindView(R.id.contributionProgress) ProgressBar progressView;\n-    @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n-\n-\n-    private int position;\n-    private Contribution contribution;\n-    private final CompositeDisposable compositeDisposable = new CompositeDisposable();\n-    private final MediaClient mediaClient;\n-\n-    ContributionViewHolder(final View parent, final Callback callback,\n-        final MediaClient mediaClient) {\n-        super(parent);\n-        this.mediaClient = mediaClient;\n-        ButterKnife.bind(this, parent);\n-        this.callback=callback;\n-    }\n+  private final Callback callback;\n+  @BindView(R.id.contributionImage)\n+  SimpleDraweeView imageView;\n+  @BindView(R.id.contributionTitle)\n+  TextView titleView;\n+  @BindView(R.id.contributionState)\n+  TextView stateView;\n+  @BindView(R.id.contributionSequenceNumber)\n+  TextView seqNumView;\n+  @BindView(R.id.contributionProgress)\n+  ProgressBar progressView;\n+  @BindView(R.id.image_options)\n+  RelativeLayout imageOptions;\n+  @BindView(R.id.wikipediaButton)\n+  ImageButton addToWikipediaButton;\n+  @BindView(R.id.retryButton)\n+  ImageButton retryButton;\n+  @BindView(R.id.cancelButton)\n+  ImageButton cancelButton;\n \n-    public void init(final int position, final Contribution contribution) {\n-        this.contribution = contribution;\n-        fetchAndDisplayCaption(contribution);\n-        this.position = position;\n-        final String imageSource = chooseImageSource(contribution.getThumbUrl(), contribution.getLocalUri());\n-        if (!TextUtils.isEmpty(imageSource)) {\n-            final ImageRequest imageRequest =\n-                ImageRequestBuilder.newBuilderWithSource(Uri.parse(imageSource))\n-                    .setProgressiveRenderingEnabled(true)\n-                    .build();\n-            imageView.setImageRequest(imageRequest);\n-        }\n \n-        seqNumView.setText(String.valueOf(position + 1));\n-        seqNumView.setVisibility(View.VISIBLE);\n-\n-        switch (contribution.getState()) {\n-            case Contribution.STATE_COMPLETED:\n-                stateView.setVisibility(View.GONE);\n-                progressView.setVisibility(View.GONE);\n-                failedImageOptions.setVisibility(View.GONE);\n-                stateView.setText(\"\");\n-                break;\n-            case Contribution.STATE_QUEUED:\n-                stateView.setVisibility(View.VISIBLE);\n-                progressView.setVisibility(View.GONE);\n-                stateView.setText(R.string.contribution_state_queued);\n-                failedImageOptions.setVisibility(View.GONE);\n-                break;\n-            case Contribution.STATE_IN_PROGRESS:\n-                stateView.setVisibility(View.GONE);\n-                progressView.setVisibility(View.VISIBLE);\n-                failedImageOptions.setVisibility(View.GONE);\n-                final long total = contribution.getDataLength();\n-                final long transferred = contribution.getTransferred();\n-                if (transferred == 0 || transferred >= total) {\n-                    progressView.setIndeterminate(true);\n-                } else {\n-                    progressView.setProgress((int)(((double)transferred / (double)total) * 100));\n-                }\n-                break;\n-            case Contribution.STATE_FAILED:\n-                stateView.setVisibility(View.VISIBLE);\n-                stateView.setText(R.string.contribution_state_failed);\n-                progressView.setVisibility(View.GONE);\n-                failedImageOptions.setVisibility(View.VISIBLE);\n-                break;\n-        }\n+  private int position;\n+  private Contribution contribution;\n+  private final CompositeDisposable compositeDisposable = new CompositeDisposable();\n+  private final MediaClient mediaClient;\n+\n+  ContributionViewHolder(final View parent, final Callback callback,\n+      final MediaClient mediaClient) {\n+    super(parent);\n+    this.mediaClient = mediaClient;\n+    ButterKnife.bind(this, parent);\n+    this.callback = callback;\n+  }\n+\n+  public void init(final int position, final Contribution contribution) {\n+    this.contribution = contribution;\n+    fetchAndDisplayCaption(contribution);\n+    this.position = position;\n+    final String imageSource = chooseImageSource(contribution.getThumbUrl(),\n+        contribution.getLocalUri());\n+    if (!TextUtils.isEmpty(imageSource)) {\n+      final ImageRequest imageRequest =\n+          ImageRequestBuilder.newBuilderWithSource(Uri.parse(imageSource))\n+              .setProgressiveRenderingEnabled(true)\n+              .build();\n+      imageView.setImageRequest(imageRequest);\n     }\n \n-    /**\n-     * In contributions first we show the title for the image stored in cache,\n-     * then we fetch captions associated with the image and replace title on the thumbnail with caption\n-     *\n-     * @param contribution\n-     */\n-    private void fetchAndDisplayCaption(final Contribution contribution) {\n-        if ((contribution.getState() != Contribution.STATE_COMPLETED)) {\n-            titleView.setText(contribution.getDisplayTitle());\n+    seqNumView.setText(String.valueOf(position + 1));\n+    seqNumView.setVisibility(View.VISIBLE);\n+\n+    switch (contribution.getState()) {\n+      case Contribution.STATE_COMPLETED:\n+        stateView.setVisibility(View.GONE);\n+        progressView.setVisibility(View.GONE);\n+        imageOptions.setVisibility(View.GONE);\n+        stateView.setText(\"\");\n+        checkIfMediaExistsOnWikipediaPage(contribution);\n+        break;\n+      case Contribution.STATE_QUEUED:\n+        stateView.setVisibility(View.VISIBLE);\n+        progressView.setVisibility(View.GONE);\n+        stateView.setText(R.string.contribution_state_queued);\n+        imageOptions.setVisibility(View.GONE);\n+        break;\n+      case Contribution.STATE_IN_PROGRESS:\n+        stateView.setVisibility(View.GONE);\n+        progressView.setVisibility(View.VISIBLE);\n+        imageOptions.setVisibility(View.GONE);\n+        final long total = contribution.getDataLength();\n+        final long transferred = contribution.getTransferred();\n+        if (transferred == 0 || transferred >= total) {\n+          progressView.setIndeterminate(true);\n         } else {\n-            final String pageId = contribution.getPageId();\n-            if (pageId != null) {\n-                Timber.d(\"Fetching caption for %s\", contribution.getFilename());\n-                final String wikibaseMediaId = PAGE_ID_PREFIX\n-                    + pageId; // Create Wikibase media id from the page id. Example media id: M80618155 for https://commons.wikimedia.org/wiki/File:Tantanmen.jpeg with has the pageid 80618155\n-                compositeDisposable.add(mediaClient.getCaptionByWikibaseIdentifier(wikibaseMediaId)\n-                    .subscribeOn(Schedulers.io())\n-                    .observeOn(AndroidSchedulers.mainThread())\n-                    .subscribe(subscriber -> {\n-                        if (!subscriber.trim().equals(MediaClient.NO_CAPTION)) {\n-                            titleView.setText(subscriber);\n-                        } else {\n-                            titleView.setText(contribution.getDisplayTitle());\n-                        }\n-                    }));\n-            } else {\n-                titleView.setText(contribution.getDisplayTitle());\n-            }\n+          progressView.setProgress((int) (((double) transferred / (double) total) * 100));\n         }\n+        break;\n+      case Contribution.STATE_FAILED:\n+        stateView.setVisibility(View.VISIBLE);\n+        stateView.setText(R.string.contribution_state_failed);\n+        progressView.setVisibility(View.GONE);\n+        imageOptions.setVisibility(View.VISIBLE);\n+        break;\n     }\n+  }\n \n-    /**\n-     * Returns the image source for the image view, first preference is given to thumbUrl if that is\n-     * null, moves to local uri and if both are null return null\n-     *\n-     * @param thumbUrl\n-     * @param localUri\n-     * @return\n-     */\n-    @Nullable\n-    private String chooseImageSource(final String thumbUrl, final Uri localUri) {\n-        return !TextUtils.isEmpty(thumbUrl) ? thumbUrl :\n-            localUri != null ? localUri.toString() :\n-                null;\n+  /**\n+   * In contributions first we show the title for the image stored in cache, then we fetch captions\n+   * associated with the image and replace title on the thumbnail with caption\n+   *\n+   * @param contribution\n+   */\n+  private void fetchAndDisplayCaption(final Contribution contribution) {\n+    if ((contribution.getState() != Contribution.STATE_COMPLETED)) {\n+      titleView.setText(contribution.getDisplayTitle());\n+    } else {\n+      final String pageId = contribution.getPageId();\n+      if (pageId != null) {\n+        Timber.d(\"Fetching caption for %s\", contribution.getFilename());\n+        final String wikibaseMediaId = PAGE_ID_PREFIX\n+            + pageId; // Create Wikibase media id from the page id. Example media id: M80618155 for https://commons.wikimedia.org/wiki/File:Tantanmen.jpeg with has the pageid 80618155\n+        compositeDisposable.add(mediaClient.getCaptionByWikibaseIdentifier(wikibaseMediaId)\n+            .subscribeOn(Schedulers.io())\n+            .observeOn(AndroidSchedulers.mainThread())\n+            .subscribe(subscriber -> {\n+              if (!subscriber.trim().equals(MediaClient.NO_CAPTION)) {\n+                titleView.setText(subscriber);\n+              } else {\n+                titleView.setText(contribution.getDisplayTitle());\n+              }\n+            }));\n+      } else {\n+        titleView.setText(contribution.getDisplayTitle());\n+      }\n     }\n+  }\n \n-    /**\n-     * Retry upload when it is failed\n-     */\n-    @OnClick(R.id.retryButton)\n-    public void retryUpload() {\n-        callback.retryUpload(contribution);\n+  /**\n+   * Checks if a media exists on the corresponding Wikipedia article Currently the check is made for\n+   * the device's current language Wikipedia\n+   *\n+   * @param contribution\n+   */\n+  private void checkIfMediaExistsOnWikipediaPage(final Contribution contribution) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "754473d1429577fafd42ea73a068a2867e00e8db"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDA0NQ==", "bodyText": "@neslihanturan The method is already part of MediaClient and it returns a Single<Boolean>. In the view holder, I am just calling mediaClient.doesPageContainMedia(wikipediaArticle) and doing view manipulations.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r440334045", "createdAt": "2020-06-15T17:29:19Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionViewHolder.java", "diffHunk": "@@ -22,147 +24,202 @@\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.CompositeDisposable;\n import io.reactivex.schedulers.Schedulers;\n+import org.wikipedia.dataclient.WikiSite;\n import timber.log.Timber;\n \n public class ContributionViewHolder extends RecyclerView.ViewHolder {\n \n-    private final Callback callback;\n-    @BindView(R.id.contributionImage)\n-    SimpleDraweeView imageView;\n-    @BindView(R.id.contributionTitle) TextView titleView;\n-    @BindView(R.id.contributionState) TextView stateView;\n-    @BindView(R.id.contributionSequenceNumber) TextView seqNumView;\n-    @BindView(R.id.contributionProgress) ProgressBar progressView;\n-    @BindView(R.id.failed_image_options) LinearLayout failedImageOptions;\n-\n-\n-    private int position;\n-    private Contribution contribution;\n-    private final CompositeDisposable compositeDisposable = new CompositeDisposable();\n-    private final MediaClient mediaClient;\n-\n-    ContributionViewHolder(final View parent, final Callback callback,\n-        final MediaClient mediaClient) {\n-        super(parent);\n-        this.mediaClient = mediaClient;\n-        ButterKnife.bind(this, parent);\n-        this.callback=callback;\n-    }\n+  private final Callback callback;\n+  @BindView(R.id.contributionImage)\n+  SimpleDraweeView imageView;\n+  @BindView(R.id.contributionTitle)\n+  TextView titleView;\n+  @BindView(R.id.contributionState)\n+  TextView stateView;\n+  @BindView(R.id.contributionSequenceNumber)\n+  TextView seqNumView;\n+  @BindView(R.id.contributionProgress)\n+  ProgressBar progressView;\n+  @BindView(R.id.image_options)\n+  RelativeLayout imageOptions;\n+  @BindView(R.id.wikipediaButton)\n+  ImageButton addToWikipediaButton;\n+  @BindView(R.id.retryButton)\n+  ImageButton retryButton;\n+  @BindView(R.id.cancelButton)\n+  ImageButton cancelButton;\n \n-    public void init(final int position, final Contribution contribution) {\n-        this.contribution = contribution;\n-        fetchAndDisplayCaption(contribution);\n-        this.position = position;\n-        final String imageSource = chooseImageSource(contribution.getThumbUrl(), contribution.getLocalUri());\n-        if (!TextUtils.isEmpty(imageSource)) {\n-            final ImageRequest imageRequest =\n-                ImageRequestBuilder.newBuilderWithSource(Uri.parse(imageSource))\n-                    .setProgressiveRenderingEnabled(true)\n-                    .build();\n-            imageView.setImageRequest(imageRequest);\n-        }\n \n-        seqNumView.setText(String.valueOf(position + 1));\n-        seqNumView.setVisibility(View.VISIBLE);\n-\n-        switch (contribution.getState()) {\n-            case Contribution.STATE_COMPLETED:\n-                stateView.setVisibility(View.GONE);\n-                progressView.setVisibility(View.GONE);\n-                failedImageOptions.setVisibility(View.GONE);\n-                stateView.setText(\"\");\n-                break;\n-            case Contribution.STATE_QUEUED:\n-                stateView.setVisibility(View.VISIBLE);\n-                progressView.setVisibility(View.GONE);\n-                stateView.setText(R.string.contribution_state_queued);\n-                failedImageOptions.setVisibility(View.GONE);\n-                break;\n-            case Contribution.STATE_IN_PROGRESS:\n-                stateView.setVisibility(View.GONE);\n-                progressView.setVisibility(View.VISIBLE);\n-                failedImageOptions.setVisibility(View.GONE);\n-                final long total = contribution.getDataLength();\n-                final long transferred = contribution.getTransferred();\n-                if (transferred == 0 || transferred >= total) {\n-                    progressView.setIndeterminate(true);\n-                } else {\n-                    progressView.setProgress((int)(((double)transferred / (double)total) * 100));\n-                }\n-                break;\n-            case Contribution.STATE_FAILED:\n-                stateView.setVisibility(View.VISIBLE);\n-                stateView.setText(R.string.contribution_state_failed);\n-                progressView.setVisibility(View.GONE);\n-                failedImageOptions.setVisibility(View.VISIBLE);\n-                break;\n-        }\n+  private int position;\n+  private Contribution contribution;\n+  private final CompositeDisposable compositeDisposable = new CompositeDisposable();\n+  private final MediaClient mediaClient;\n+\n+  ContributionViewHolder(final View parent, final Callback callback,\n+      final MediaClient mediaClient) {\n+    super(parent);\n+    this.mediaClient = mediaClient;\n+    ButterKnife.bind(this, parent);\n+    this.callback = callback;\n+  }\n+\n+  public void init(final int position, final Contribution contribution) {\n+    this.contribution = contribution;\n+    fetchAndDisplayCaption(contribution);\n+    this.position = position;\n+    final String imageSource = chooseImageSource(contribution.getThumbUrl(),\n+        contribution.getLocalUri());\n+    if (!TextUtils.isEmpty(imageSource)) {\n+      final ImageRequest imageRequest =\n+          ImageRequestBuilder.newBuilderWithSource(Uri.parse(imageSource))\n+              .setProgressiveRenderingEnabled(true)\n+              .build();\n+      imageView.setImageRequest(imageRequest);\n     }\n \n-    /**\n-     * In contributions first we show the title for the image stored in cache,\n-     * then we fetch captions associated with the image and replace title on the thumbnail with caption\n-     *\n-     * @param contribution\n-     */\n-    private void fetchAndDisplayCaption(final Contribution contribution) {\n-        if ((contribution.getState() != Contribution.STATE_COMPLETED)) {\n-            titleView.setText(contribution.getDisplayTitle());\n+    seqNumView.setText(String.valueOf(position + 1));\n+    seqNumView.setVisibility(View.VISIBLE);\n+\n+    switch (contribution.getState()) {\n+      case Contribution.STATE_COMPLETED:\n+        stateView.setVisibility(View.GONE);\n+        progressView.setVisibility(View.GONE);\n+        imageOptions.setVisibility(View.GONE);\n+        stateView.setText(\"\");\n+        checkIfMediaExistsOnWikipediaPage(contribution);\n+        break;\n+      case Contribution.STATE_QUEUED:\n+        stateView.setVisibility(View.VISIBLE);\n+        progressView.setVisibility(View.GONE);\n+        stateView.setText(R.string.contribution_state_queued);\n+        imageOptions.setVisibility(View.GONE);\n+        break;\n+      case Contribution.STATE_IN_PROGRESS:\n+        stateView.setVisibility(View.GONE);\n+        progressView.setVisibility(View.VISIBLE);\n+        imageOptions.setVisibility(View.GONE);\n+        final long total = contribution.getDataLength();\n+        final long transferred = contribution.getTransferred();\n+        if (transferred == 0 || transferred >= total) {\n+          progressView.setIndeterminate(true);\n         } else {\n-            final String pageId = contribution.getPageId();\n-            if (pageId != null) {\n-                Timber.d(\"Fetching caption for %s\", contribution.getFilename());\n-                final String wikibaseMediaId = PAGE_ID_PREFIX\n-                    + pageId; // Create Wikibase media id from the page id. Example media id: M80618155 for https://commons.wikimedia.org/wiki/File:Tantanmen.jpeg with has the pageid 80618155\n-                compositeDisposable.add(mediaClient.getCaptionByWikibaseIdentifier(wikibaseMediaId)\n-                    .subscribeOn(Schedulers.io())\n-                    .observeOn(AndroidSchedulers.mainThread())\n-                    .subscribe(subscriber -> {\n-                        if (!subscriber.trim().equals(MediaClient.NO_CAPTION)) {\n-                            titleView.setText(subscriber);\n-                        } else {\n-                            titleView.setText(contribution.getDisplayTitle());\n-                        }\n-                    }));\n-            } else {\n-                titleView.setText(contribution.getDisplayTitle());\n-            }\n+          progressView.setProgress((int) (((double) transferred / (double) total) * 100));\n         }\n+        break;\n+      case Contribution.STATE_FAILED:\n+        stateView.setVisibility(View.VISIBLE);\n+        stateView.setText(R.string.contribution_state_failed);\n+        progressView.setVisibility(View.GONE);\n+        imageOptions.setVisibility(View.VISIBLE);\n+        break;\n     }\n+  }\n \n-    /**\n-     * Returns the image source for the image view, first preference is given to thumbUrl if that is\n-     * null, moves to local uri and if both are null return null\n-     *\n-     * @param thumbUrl\n-     * @param localUri\n-     * @return\n-     */\n-    @Nullable\n-    private String chooseImageSource(final String thumbUrl, final Uri localUri) {\n-        return !TextUtils.isEmpty(thumbUrl) ? thumbUrl :\n-            localUri != null ? localUri.toString() :\n-                null;\n+  /**\n+   * In contributions first we show the title for the image stored in cache, then we fetch captions\n+   * associated with the image and replace title on the thumbnail with caption\n+   *\n+   * @param contribution\n+   */\n+  private void fetchAndDisplayCaption(final Contribution contribution) {\n+    if ((contribution.getState() != Contribution.STATE_COMPLETED)) {\n+      titleView.setText(contribution.getDisplayTitle());\n+    } else {\n+      final String pageId = contribution.getPageId();\n+      if (pageId != null) {\n+        Timber.d(\"Fetching caption for %s\", contribution.getFilename());\n+        final String wikibaseMediaId = PAGE_ID_PREFIX\n+            + pageId; // Create Wikibase media id from the page id. Example media id: M80618155 for https://commons.wikimedia.org/wiki/File:Tantanmen.jpeg with has the pageid 80618155\n+        compositeDisposable.add(mediaClient.getCaptionByWikibaseIdentifier(wikibaseMediaId)\n+            .subscribeOn(Schedulers.io())\n+            .observeOn(AndroidSchedulers.mainThread())\n+            .subscribe(subscriber -> {\n+              if (!subscriber.trim().equals(MediaClient.NO_CAPTION)) {\n+                titleView.setText(subscriber);\n+              } else {\n+                titleView.setText(contribution.getDisplayTitle());\n+              }\n+            }));\n+      } else {\n+        titleView.setText(contribution.getDisplayTitle());\n+      }\n     }\n+  }\n \n-    /**\n-     * Retry upload when it is failed\n-     */\n-    @OnClick(R.id.retryButton)\n-    public void retryUpload() {\n-        callback.retryUpload(contribution);\n+  /**\n+   * Checks if a media exists on the corresponding Wikipedia article Currently the check is made for\n+   * the device's current language Wikipedia\n+   *\n+   * @param contribution\n+   */\n+  private void checkIfMediaExistsOnWikipediaPage(final Contribution contribution) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4NTQ1OA=="}, "originalCommit": {"oid": "754473d1429577fafd42ea73a068a2867e00e8db"}, "originalPosition": 258}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDE5MDM0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/OkHttpConnectionFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNDoyNTowM1rOGjdaaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjo0NjoxMVrOGjeK-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNTI0Mw==", "bodyText": "I believe this should be reverted before this PR gets merged.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r439835243", "createdAt": "2020-06-14T14:25:03Z", "author": {"login": "sivaraam"}, "path": "app/src/main/java/fr/free/nrw/commons/OkHttpConnectionFactory.java", "diffHunk": "@@ -41,7 +41,7 @@ private static OkHttpClient createClient() {\n \n     private static HttpLoggingInterceptor getLoggingInterceptor() {\n         final HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor()\n-            .setLevel(Level.BASIC);\n+            .setLevel(Level.BODY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7911f11bf669a9969c6c9335da435624f828a226"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NzY3NA==", "bodyText": "Updated.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r439847674", "createdAt": "2020-06-14T16:46:11Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/OkHttpConnectionFactory.java", "diffHunk": "@@ -41,7 +41,7 @@ private static OkHttpClient createClient() {\n \n     private static HttpLoggingInterceptor getLoggingInterceptor() {\n         final HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor()\n-            .setLevel(Level.BASIC);\n+            .setLevel(Level.BODY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNTI0Mw=="}, "originalCommit": {"oid": "7911f11bf669a9969c6c9335da435624f828a226"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDE5MjAyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNDoyNzoxNFrOGjdbRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjo0NTo1OVrOGjeK5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNTQ2MA==", "bodyText": "I think we agree that the user shouldn't be directed to the editor anymore. So, we can stop appending #/editor/0.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r439835460", "createdAt": "2020-06-14T14:27:14Z", "author": {"login": "sivaraam"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "diffHunk": "@@ -224,6 +270,23 @@ public int getTotalMediaCount() {\n     return adapter.getItemCount();\n   }\n \n+  /**\n+   * Open the editor for the language Wikipedia\n+   *\n+   * @param contribution\n+   */\n+  @Override\n+  public void onConfirmClicked(@Nullable Contribution contribution, boolean copyWikicode) {\n+    if(copyWikicode) {\n+      String wikicode = contribution.getWikiCode();\n+      Utils.copy(\"wikicode\", wikicode, getContext());\n+    }\n+\n+    final String url = languageWikipediaSite.mobileUrl() + \"/wiki/\" + contribution.getWikidataPlace()\n+        .getWikipediaPageTitle() + \"#/editor/0\";\n+    Utils.handleWebUrl(getContext(), Uri.parse(url));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7911f11bf669a9969c6c9335da435624f828a226"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NzY1Mw==", "bodyText": "Updated.", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r439847653", "createdAt": "2020-06-14T16:45:59Z", "author": {"login": "maskaravivek"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/ContributionsListFragment.java", "diffHunk": "@@ -224,6 +270,23 @@ public int getTotalMediaCount() {\n     return adapter.getItemCount();\n   }\n \n+  /**\n+   * Open the editor for the language Wikipedia\n+   *\n+   * @param contribution\n+   */\n+  @Override\n+  public void onConfirmClicked(@Nullable Contribution contribution, boolean copyWikicode) {\n+    if(copyWikicode) {\n+      String wikicode = contribution.getWikiCode();\n+      Utils.copy(\"wikicode\", wikicode, getContext());\n+    }\n+\n+    final String url = languageWikipediaSite.mobileUrl() + \"/wiki/\" + contribution.getWikidataPlace()\n+        .getWikipediaPageTitle() + \"#/editor/0\";\n+    Utils.handleWebUrl(getContext(), Uri.parse(url));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNTQ2MA=="}, "originalCommit": {"oid": "7911f11bf669a9969c6c9335da435624f828a226"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzQ3NzYyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/fr/free/nrw/commons/contributions/WikipedaiInstructionsDialogFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NjowNlrOGj8vVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NjowNlrOGj8vVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODUwMA==", "bodyText": "A typo in the class name:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class WikipedaiInstructionsDialogFragment : DialogFragment() {\n          \n          \n            \n            class WikipediaInstructionsDialogFragment : DialogFragment() {", "url": "https://github.com/commons-app/apps-android-commons/pull/3783#discussion_r440348500", "createdAt": "2020-06-15T17:56:06Z", "author": {"login": "sivaraam"}, "path": "app/src/main/java/fr/free/nrw/commons/contributions/WikipedaiInstructionsDialogFragment.kt", "diffHunk": "@@ -0,0 +1,72 @@\n+package fr.free.nrw.commons.contributions\n+\n+import android.net.Uri\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.view.WindowManager\n+import androidx.fragment.app.DialogFragment\n+import fr.free.nrw.commons.R\n+import fr.free.nrw.commons.Utils\n+import fr.free.nrw.commons.upload.SimilarImageDialogFragment\n+import kotlinx.android.synthetic.main.dialog_add_to_wikipedia_instructions.*\n+import org.wikipedia.dataclient.WikiSite\n+import javax.inject.Inject\n+\n+/**\n+ * Dialog fragment for displaying instructions for editing wikipedia\n+ */\n+class WikipedaiInstructionsDialogFragment : DialogFragment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "191593d5e716af014186b01d5d7f7523cd474361"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4365, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}