{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODk4MDk5", "number": 10594, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoxNToxMlrODY9-bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoxNToxMlrODY9-bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTA3ODIyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/coders/coders.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoxNToxMlrOFfIRow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODowOTo1MlrOFhHwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NTc2Mw==", "bodyText": "Should ParamWindowedValueCoder.from_runner_api_parameter also get the @staticmethod decorator?", "url": "https://github.com/apache/beam/pull/10594#discussion_r368185763", "createdAt": "2020-01-18T00:15:12Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/coders/coders.py", "diffHunk": "@@ -1014,6 +1015,7 @@ def to_runner_api_parameter(self, context):\n     else:\n       return super(TupleCoder, self).to_runner_api_parameter(context)\n \n+  @staticmethod\n   @Coder.register_urn(common_urns.coders.KV.urn, None)\n   def from_runner_api_parameter(unused_payload, components, unused_context):\n     return TupleCoder(components)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7324c3e224ca5bc5b361cdff341042d2bbba0be"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NDM1Nw==", "bodyText": "fixed", "url": "https://github.com/apache/beam/pull/10594#discussion_r370274357", "createdAt": "2020-01-23T18:09:52Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/coders/coders.py", "diffHunk": "@@ -1014,6 +1015,7 @@ def to_runner_api_parameter(self, context):\n     else:\n       return super(TupleCoder, self).to_runner_api_parameter(context)\n \n+  @staticmethod\n   @Coder.register_urn(common_urns.coders.KV.urn, None)\n   def from_runner_api_parameter(unused_payload, components, unused_context):\n     return TupleCoder(components)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NTc2Mw=="}, "originalCommit": {"oid": "a7324c3e224ca5bc5b361cdff341042d2bbba0be"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2369, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}