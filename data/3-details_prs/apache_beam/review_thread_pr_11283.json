{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjY0OTgy", "number": 11283, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyNToxNlrODtvbtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyNToxNlrODtvbtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg5NjU0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/pipeline.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyNToxNlrOF_WIGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMTowMTozMVrOF_X2BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NzEzMQ==", "bodyText": "Should this be under the experiment flag instead, so that we don't inadvertently break anyone?", "url": "https://github.com/apache/beam/pull/11283#discussion_r401967131", "createdAt": "2020-04-01T23:25:16Z", "author": {"login": "rohdesamuel"}, "path": "sdks/python/apache_beam/pipeline.py", "diffHunk": "@@ -671,7 +671,11 @@ def apply(\n         # If the user wants the old implementation of always generated\n         # PCollection output ids, then set the tag to None first, then count up\n         # from 1.\n-        tag = len(current.outputs) if None in current.outputs else None\n+        base = tag\n+        counter = 0\n+        while tag in current.outputs:\n+          counter += 1\n+          tag = '%s_%d' % (base, counter)\n         current.add_output(result, tag)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339a862c99c8fa842908eee111c0d2536ee5f3d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5NTI2OA==", "bodyText": "I am relatively confident in this change, as it preserves the essential characteristic (that output names are unique) and defaults to the same thing for all single-output transforms. However, I have added the opt-out you had originally with a note just in case.", "url": "https://github.com/apache/beam/pull/11283#discussion_r401995268", "createdAt": "2020-04-02T01:01:31Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/pipeline.py", "diffHunk": "@@ -671,7 +671,11 @@ def apply(\n         # If the user wants the old implementation of always generated\n         # PCollection output ids, then set the tag to None first, then count up\n         # from 1.\n-        tag = len(current.outputs) if None in current.outputs else None\n+        base = tag\n+        counter = 0\n+        while tag in current.outputs:\n+          counter += 1\n+          tag = '%s_%d' % (base, counter)\n         current.add_output(result, tag)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NzEzMQ=="}, "originalCommit": {"oid": "339a862c99c8fa842908eee111c0d2536ee5f3d4"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1598, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}