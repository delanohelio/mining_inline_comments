{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNDgxOTAy", "number": 11564, "title": "[Beam-9679] Add Core Transforms section / ParDo lesson to the Go SDK katas", "bodyText": "This pull request adds a section related to Core Transforms with one Map transforms lesson to the Go SDK katas.  It patterns after the existing Java katas:\n\nParDo\nParDo OneToMany\nParDo struct\n\nI would like to request @henryken and @lostluck to review this pull request.  Thank you for allowing me to be part of this project.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-29T04:28:40Z", "url": "https://github.com/apache/beam/pull/11564", "merged": true, "mergeCommit": {"oid": "e6fb32e34c37ee6319b2ee55f81f1dd6f1a0d690"}, "closed": true, "closedAt": "2020-05-07T23:03:22Z", "author": {"login": "damondouglas"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcY5EBngH2gAyNDEwNDgxOTAyOjI5OTJkMGIzZjRhMzNhODFkNGNkMWVhOTc3YjdjNTYzZjAzNWZkNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceKYEYgH2gAyNDEwNDgxOTAyOjA5OWM0MmI1ZmVkMTNhMGM0MTgwMjBiMmJiM2RjZDZkZDgwMjhhOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2992d0b3f4a33a81d4cd1ea977b7c563f035fd69", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/2992d0b3f4a33a81d4cd1ea977b7c563f035fd69", "committedDate": "2020-04-18T17:09:15Z", "message": "Scaffold Core Transforms Map lesson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22976ed02b7ec31b895b3932717f48929e8eb1b8", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/22976ed02b7ec31b895b3932717f48929e8eb1b8", "committedDate": "2020-04-18T17:28:43Z", "message": "Write Core Transforms Map ParDoTtask information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ee6eebd816239293e691aec12fe785aeb71893f", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3ee6eebd816239293e691aec12fe785aeb71893f", "committedDate": "2020-04-18T17:35:26Z", "message": "Write Core Transforms Map ParDo OneToMany task information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "505943560222309246fc366ab49e77074f6c105e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/505943560222309246fc366ab49e77074f6c105e", "committedDate": "2020-04-18T17:39:34Z", "message": "Write Core Transforms Map MapElements task information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f3c4aa926b51ec0947ccc23a8d1f9261e29ffbe", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4f3c4aa926b51ec0947ccc23a8d1f9261e29ffbe", "committedDate": "2020-04-18T17:43:26Z", "message": "Write Core Transforms Map FlatMapElements task information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5656c5bc645913dba1fe3add29ba602c54e8280", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c5656c5bc645913dba1fe3add29ba602c54e8280", "committedDate": "2020-04-18T18:54:30Z", "message": "Create Core Transforms Map ParDo task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac8ede334f9aa28c8bd46ba352d648053490507e", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/ac8ede334f9aa28c8bd46ba352d648053490507e", "committedDate": "2020-04-18T19:23:56Z", "message": "Change placeholder_text to TODO()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffab1398c277a1e8f92c15e3ecdd146a4c9335f3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/ffab1398c277a1e8f92c15e3ecdd146a4c9335f3", "committedDate": "2020-04-21T03:31:47Z", "message": "WIP: complete ParDo OneToMany, MapElements tasks without placeholder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20955003f21c5c7a508cb45d1abb201d6f44fa88", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/20955003f21c5c7a508cb45d1abb201d6f44fa88", "committedDate": "2020-04-25T20:05:28Z", "message": "Remove reduntant test files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73346865ad9560b8b76d7185ea18ff1f25d542f4", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/73346865ad9560b8b76d7185ea18ff1f25d542f4", "committedDate": "2020-04-25T20:09:04Z", "message": "Add answer placeholder for ParDo OneToMany"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9488c756abe49ff4d4fa9900936fd0711d7fce5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d9488c756abe49ff4d4fa9900936fd0711d7fce5", "committedDate": "2020-04-25T20:10:46Z", "message": "Add answer placeholder for MapElements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d588724aeaccbc060da654ac8f10c43a9dbac5b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1d588724aeaccbc060da654ac8f10c43a9dbac5b", "committedDate": "2020-04-25T21:05:28Z", "message": "Reorganize and edit task information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1464883909e1e42ae56d3980e8f91a7f1930f4c", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d1464883909e1e42ae56d3980e8f91a7f1930f4c", "committedDate": "2020-04-25T21:05:47Z", "message": "Complete MapElements task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca29422be70c0d06e57eeb918905b41b97f7d138", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/ca29422be70c0d06e57eeb918905b41b97f7d138", "committedDate": "2020-04-25T21:42:18Z", "message": "Create FlatMapElements task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33498e5afc991484a4dabbb849e494cc0d9e10bf", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/33498e5afc991484a4dabbb849e494cc0d9e10bf", "committedDate": "2020-04-25T21:54:51Z", "message": "Make go.sum invisible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7beada6aab2f2b12005dc43b5fa1d6bdfc0916f0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7beada6aab2f2b12005dc43b5fa1d6bdfc0916f0", "committedDate": "2020-04-25T22:00:12Z", "message": "Add main to MapElements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500ff71ebc7173f18aa0b44af6c62fc568bc7937", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/500ff71ebc7173f18aa0b44af6c62fc568bc7937", "committedDate": "2020-04-25T22:03:10Z", "message": "Edit namings to be consistent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04", "committedDate": "2020-04-29T03:52:51Z", "message": "Move placeholders to be more legible"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNTcyMDcw", "url": "https://github.com/apache/beam/pull/11564#pullrequestreview-403572070", "createdAt": "2020-04-30T14:24:46Z", "commit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyNDo0NlrOGOrvcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNTozOTozMlrOGOvDXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0OTkwNA==", "bodyText": "I'd prefer to just use t.Error(err).\nThe current formatting prints out something that is not intuitive? e.g.\nApplyTransform(\"{2: int/int[varintz] GLO}\") = panic: value -300 present, but not expected", "url": "https://github.com/apache/beam/pull/11564#discussion_r418049904", "createdAt": "2020-04-30T14:24:46Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/test/task_test.go", "diffHunk": "@@ -0,0 +1,49 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package test\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/passert\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/ptest\"\n+\t\"pardo/pkg/task\"\n+\t\"testing\"\n+)\n+\n+func TestApplyTransform(t *testing.T) {\n+\tp, s := beam.NewPipelineWithRoot()\n+\ttests := []struct {\n+\t\tinput beam.PCollection\n+\t\twant []interface{}\n+\t}{\n+\t\t{\n+\t\t\tinput: beam.Create(s, -1, -2, -3, -4, -5),\n+\t\t\twant: []interface{}{-10, -20, -30, -40, -50},\n+\t\t},\n+\t\t{\n+\t\t\tinput: beam.Create(s, 1, 2, 3, 4, 5),\n+\t\t\twant: []interface{}{10, 20, 30, 40, 50},\n+\t\t},\n+\t}\n+\tfor _, tt := range tests {\n+\t\tgot := task.ApplyTransform(s, tt.input)\n+\t\tpassert.Equals(s, got, tt.want...)\n+\t\tif err := ptest.Run(p); err != nil {\n+\t\t\tt.Errorf(\"ApplyTransform(\\\"%v\\\") = %v\", tt.input, err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1MTEwNw==", "bodyText": "I think one input is probably sufficient.\nBoth inputs are not fundamentally different.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418051107", "createdAt": "2020-04-30T14:26:22Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/test/task_test.go", "diffHunk": "@@ -0,0 +1,49 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package test\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/passert\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/ptest\"\n+\t\"pardo/pkg/task\"\n+\t\"testing\"\n+)\n+\n+func TestApplyTransform(t *testing.T) {\n+\tp, s := beam.NewPipelineWithRoot()\n+\ttests := []struct {\n+\t\tinput beam.PCollection\n+\t\twant []interface{}\n+\t}{\n+\t\t{\n+\t\t\tinput: beam.Create(s, -1, -2, -3, -4, -5),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1NTcxMg==", "bodyText": "I would prefer to separate the Create into its own line to make it clear as a pipeline.\nAnd can we rename 'col' to 'output'?\nnumbers := beam.Create(s, 1, 2, 3, 4, 5)\noutput := task.ApplyTransform(s, numbers)", "url": "https://github.com/apache/beam/pull/11564#discussion_r418055712", "createdAt": "2020-04-30T14:32:39Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/cmd/main.go", "diffHunk": "@@ -0,0 +1,41 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/debug\"\n+\t\"pardo/pkg/task\"\n+)\n+\n+func main() {\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\n+\tcol := task.ApplyTransform(s, beam.Create(s, 1, 2, 3, 4, 5))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1ODY4OQ==", "bodyText": "Can we rename the function to 'multiplyBy10Fn\"?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418058689", "createdAt": "2020-04-30T14:36:41Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,25 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import \"github.com/apache/beam/sdks/go/pkg/beam\"\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\tprocessFn := func(element int) int {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MTc2OA==", "bodyText": "I see another lesson using module function instead of local variable.\nShall we extract it as a module function for consistency?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418061768", "createdAt": "2020-04-30T14:40:42Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,25 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import \"github.com/apache/beam/sdks/go/pkg/beam\"\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\tprocessFn := func(element int) int {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MjU1OA==", "bodyText": "I think one input is probably sufficient.\nBoth inputs are not fundamentally different.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418062558", "createdAt": "2020-04-30T14:41:49Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/test/task_test.go", "diffHunk": "@@ -0,0 +1,48 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package test\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/passert\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/ptest\"\n+\t\"pardo_onetomany/pkg/task\"\n+\t\"testing\"\n+)\n+\n+func TestTask(t *testing.T) {\n+\tp, s := beam.NewPipelineWithRoot()\n+\ttests := []struct {\n+\t\tinput beam.PCollection\n+\t\twant []interface{}\n+\t}{\n+\t\t{\n+\t\t\tinput: beam.Create(s, \"Hello Beam\", \"It is awesome\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MzY3MA==", "bodyText": "I'd prefer to just use t.Error(err).\nThe current formatting prints out something that is not intuitive? e.g.\nApplyTransform(\"{2: string/string[string] GLO}\") = panic: value Itx present, but not expected", "url": "https://github.com/apache/beam/pull/11564#discussion_r418063670", "createdAt": "2020-04-30T14:43:24Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/test/task_test.go", "diffHunk": "@@ -0,0 +1,48 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package test\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/passert\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/ptest\"\n+\t\"pardo_onetomany/pkg/task\"\n+\t\"testing\"\n+)\n+\n+func TestTask(t *testing.T) {\n+\tp, s := beam.NewPipelineWithRoot()\n+\ttests := []struct {\n+\t\tinput beam.PCollection\n+\t\twant []interface{}\n+\t}{\n+\t\t{\n+\t\t\tinput: beam.Create(s, \"Hello Beam\", \"It is awesome\"),\n+\t\t\twant: []interface{}{\"Hello\", \"Beam\", \"It\", \"is\", \"awesome\"},\n+\t\t},\n+\t\t{\n+\t\t\tinput: beam.Create(s, \"Hello Beam. It is awesome.\"),\n+\t\t\twant: []interface{}{\"Hello\", \"Beam.\", \"It\", \"is\", \"awesome.\"},\n+\t\t},\n+\t}\n+\tfor _, tt := range tests {\n+\t\tgot := task.ApplyTransform(s, tt.input)\n+\t\tpassert.Equals(s, got, tt.want...)\n+\t\tif err := ptest.Run(p); err != nil {\n+\t\t\tt.Errorf(\"ApplyTransform(\\\"%v\\\") = %v\", tt.input, err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2NTkwMQ==", "bodyText": "Can we rename the function to 'tokenizeFn\"?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418065901", "createdAt": "2020-04-30T14:46:10Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,33 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"strings\"\n+)\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\treturn beam.ParDo(s, processFn, input)\n+}\n+\n+func processFn(input string, emit func(out string)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2NzM0Mg==", "bodyText": "I would prefer to separate the Create into its own line to make it clear as a pipeline.\nAnd can we rename 'col' to 'output'?\nsentences:= beam.Create(s, \"Hello Beam\", \"It is awesome\")\noutput := task.ApplyTransform(s, sentences)", "url": "https://github.com/apache/beam/pull/11564#discussion_r418067342", "createdAt": "2020-04-30T14:48:03Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/cmd/main.go", "diffHunk": "@@ -0,0 +1,39 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/debug\"\n+\t\"pardo_onetomany/pkg/task\"\n+)\n+\n+func main() {\n+\tp, s := beam.NewPipelineWithRoot()\n+\n+\tcol := task.ApplyTransform(s, beam.Create(s, \"Hello Beam\", \"It is awesome\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2OTc0MA==", "bodyText": "I would prefer to separate the Create into its own line to make it clear as a pipeline.\nAnd can we rename 'col' to 'output'?\nnumbers := beam.Create(s, 1, 2, 3, 4, 5)\noutput := task.ApplyTransform(s, numbers)", "url": "https://github.com/apache/beam/pull/11564#discussion_r418069740", "createdAt": "2020-04-30T14:51:21Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/cmd/main.go", "diffHunk": "@@ -0,0 +1,39 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/debug\"\n+\t\"mapelements/pkg/task\"\n+)\n+\n+func main() {\n+\tp, s := beam.NewPipelineWithRoot()\n+\n+\tcol := task.ApplyTransform(s, beam.Create(s, 1, 2, 3, 4, 5))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3MDExNw==", "bodyText": "I think one input is probably sufficient.\nBoth inputs are not fundamentally different.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418070117", "createdAt": "2020-04-30T14:51:52Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/test/task_test.go", "diffHunk": "@@ -0,0 +1,48 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package test\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/passert\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/ptest\"\n+\t\"mapelements/pkg/task\"\n+\t\"testing\"\n+)\n+\n+func TestTask(t *testing.T) {\n+\tp, s := beam.NewPipelineWithRoot()\n+\ttests := []struct {\n+\t\tinput beam.PCollection\n+\t\twant []interface{}\n+\t}{\n+\t\t{\n+\t\t\tinput: beam.Create(s, -1, -2, -3, -4, -5),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3MDMwMQ==", "bodyText": "I'd prefer to just use t.Error(err).\nThe current formatting prints out something that is not intuitive? e.g.\nApplyTransform(\"{2: int/int[varintz] GLO}\") = panic: value -300 present, but not expected", "url": "https://github.com/apache/beam/pull/11564#discussion_r418070301", "createdAt": "2020-04-30T14:52:09Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/test/task_test.go", "diffHunk": "@@ -0,0 +1,48 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package test\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/passert\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/testing/ptest\"\n+\t\"mapelements/pkg/task\"\n+\t\"testing\"\n+)\n+\n+func TestTask(t *testing.T) {\n+\tp, s := beam.NewPipelineWithRoot()\n+\ttests := []struct {\n+\t\tinput beam.PCollection\n+\t\twant []interface{}\n+\t}{\n+\t\t{\n+\t\t\tinput: beam.Create(s, -1, -2, -3, -4, -5),\n+\t\t\twant: []interface{}{-5, -10, -15, -20, -25},\n+\t\t},\n+\t\t{\n+\t\t\tinput: beam.Create(s, 1, 2, 3, 4, 5),\n+\t\t\twant: []interface{}{5, 10, 15, 20, 25},\n+\t\t},\n+\t}\n+\tfor _, tt := range tests {\n+\t\tgot := task.ApplyTransform(s, tt.input)\n+\t\tpassert.Equals(s, got, tt.want...)\n+\t\tif err := ptest.Run(p); err != nil {\n+\t\t\tt.Errorf(\"ApplyTransform(\\\"%v\\\") = %v\", tt.input, err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3MjkyMg==", "bodyText": "I'd prefer to name this lesson \"ParDo Struct\".\nSince there is no MapElements construct in Go, we don't need to mimic the Java version.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418072922", "createdAt": "2020-04-30T14:55:37Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/task.md", "diffHunk": "@@ -0,0 +1,34 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+# Mapping Elements using structs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5NDU1Nw==", "bodyText": "I'd suggest having the empty struct revealed for the students. They can then fill in the struct body.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418094557", "createdAt": "2020-04-30T15:25:51Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,33 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import \"github.com/apache/beam/sdks/go/pkg/beam\"\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\tprocessFn := &multiplyByFn{\n+\t\tFactor: 5,\n+\t}\n+\treturn beam.ParDo(s, processFn, input)\n+}\n+\n+type multiplyByFn struct {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5NTI0MA==", "bodyText": "I'd suggest having the empty ProcessElement function revealed for the students. They can then fill in the function body.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418095240", "createdAt": "2020-04-30T15:26:47Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,33 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import \"github.com/apache/beam/sdks/go/pkg/beam\"\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\tprocessFn := &multiplyByFn{\n+\t\tFactor: 5,\n+\t}\n+\treturn beam.ParDo(s, processFn, input)\n+}\n+\n+type multiplyByFn struct {\n+\tFactor int\n+}\n+\n+func (f *multiplyByFn) ProcessElement(input int) int {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5NjE5Mg==", "bodyText": "Would rather have this inline similar to the example given.\nhttps://github.com/apache/beam/blob/master/sdks/go/examples/contains/contains.go#L48", "url": "https://github.com/apache/beam/pull/11564#discussion_r418096192", "createdAt": "2020-04-30T15:28:09Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/MapElements/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,33 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import \"github.com/apache/beam/sdks/go/pkg/beam\"\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\tprocessFn := &multiplyByFn{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEwNDE1Nw==", "bodyText": "I think we don't need this task. This is essentially the same as \"ParDo Struct\" and it's also not a FlatMap.", "url": "https://github.com/apache/beam/pull/11564#discussion_r418104157", "createdAt": "2020-04-30T15:39:32Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/FlatMapElements/task.md", "diffHunk": "@@ -0,0 +1,31 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+In this kata, we continue the use of a DoFn struct to map a single element into multiple elements", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d26a56e0a4d3201edfb4fd202d6a116e7cdc04"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/9c5d3b28de33f846415215c58d9d7e1cfc01e29b", "committedDate": "2020-05-01T02:44:40Z", "message": "Update per PR review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MDQ3MTc3", "url": "https://github.com/apache/beam/pull/11564#pullrequestreview-404047177", "createdAt": "2020-05-01T07:09:17Z", "commit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzowOToxN1rOGPDsIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzoxODozNFrOGPDzmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MjI3Mw==", "bodyText": "Can maybe slightly rename to \"ParDo Struct\"?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418442273", "createdAt": "2020-05-01T07:09:17Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/lesson-info.yaml", "diffHunk": "@@ -20,5 +20,4 @@\n content:\n - ParDo\n - ParDo OneToMany\n-- MapElements\n-- FlatMapElements\n+- ParDo struct", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MzA0Mw==", "bodyText": "The \"* 10\" is not covered by the answer placeholder. Is it intentional?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418443043", "createdAt": "2020-05-01T07:13:07Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/pkg/task/task.go", "diffHunk": "@@ -18,8 +18,9 @@ package task\n import \"github.com/apache/beam/sdks/go/pkg/beam\"\n \n func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n-\tprocessFn := func(element int) int {\n-\t\treturn element * 10\n-\t}\n-\treturn beam.ParDo(s, processFn, input)\n+\treturn beam.ParDo(s, multiplyBy10Fn, input)\n }\n+\n+func multiplyBy10Fn(element int) int {\n+\treturn element * 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MzUyMA==", "bodyText": "How about having the whole \"&multiplyByFn{...}\" be part of the answer placeholder?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418443520", "createdAt": "2020-05-01T07:15:22Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo struct/pkg/task/task.go", "diffHunk": "@@ -18,10 +18,7 @@ package task\n import \"github.com/apache/beam/sdks/go/pkg/beam\"\n \n func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n-\tprocessFn := &multiplyByFn{\n-\t\tFactor: 5,\n-\t}\n-\treturn beam.ParDo(s, processFn, input)\n+\treturn beam.ParDo(s, &multiplyByFn{Factor: 5}, input)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MzgxNw==", "bodyText": "Can we have the ParDo mentioned, e.g. \"ParDo - using a struct as a DoFn\"?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418443817", "createdAt": "2020-05-01T07:16:45Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo struct/task.md", "diffHunk": "@@ -16,10 +16,10 @@\n     specific language governing permissions and limitations\n     under the License.\n -->\n-# Mapping Elements using structs\n+# Using a struct as a DoFn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0NDE4NA==", "bodyText": "The answer placeholder(s) seems weird here. Maybe it requires a fix?\nOr alternatively, we can use a similar answer placeholder as in the \"ParDo\" task, i.e. having just empty \"fund ApplyTransforms\"?", "url": "https://github.com/apache/beam/pull/11564#discussion_r418444184", "createdAt": "2020-05-01T07:18:34Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/pkg/task/task.go", "diffHunk": "@@ -21,10 +21,10 @@ import (\n )\n \n func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n-\treturn beam.ParDo(s, processFn, input)\n+\treturn beam.ParDo(s, tokenizeFn, input)\n }\n \n-func processFn(input string, emit func(out string)) {\n+func tokenizeFn(input string, emit func(out string)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "373adc23c134d633f42f8e3ed89e29a8fa565bd0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/373adc23c134d633f42f8e3ed89e29a8fa565bd0", "committedDate": "2020-05-03T18:54:10Z", "message": "Change task name and placeholder coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb2c30568e561f7f2410b4d09d8ed0736f93b04", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1bb2c30568e561f7f2410b4d09d8ed0736f93b04", "committedDate": "2020-05-03T18:56:44Z", "message": "Change task title"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzQxNjUx", "url": "https://github.com/apache/beam/pull/11564#pullrequestreview-404741651", "createdAt": "2020-05-04T06:54:39Z", "commit": {"oid": "1bb2c30568e561f7f2410b4d09d8ed0736f93b04"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNjo1NDozOVrOGP0b9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNjo1NjowM1rOGP0d0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI0MDk0OQ==", "bodyText": "This looks good now", "url": "https://github.com/apache/beam/pull/11564#discussion_r419240949", "createdAt": "2020-05-04T06:54:39Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/pkg/task/task.go", "diffHunk": "@@ -21,10 +21,10 @@ import (\n )\n \n func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n-\treturn beam.ParDo(s, processFn, input)\n+\treturn beam.ParDo(s, tokenizeFn, input)\n }\n \n-func processFn(input string, emit func(out string)) {\n+func tokenizeFn(input string, emit func(out string)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0NDE4NA=="}, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI0MTQyNw==", "bodyText": "This seems to have an issue now. There is no placeholder at all. And the task description doesn't load properly.\nCould it be because the directory name needs to be renamed to \"ParDo Struct\" with capital S?", "url": "https://github.com/apache/beam/pull/11564#discussion_r419241427", "createdAt": "2020-05-04T06:56:03Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Map/ParDo struct/pkg/task/task.go", "diffHunk": "@@ -18,10 +18,7 @@ package task\n import \"github.com/apache/beam/sdks/go/pkg/beam\"\n \n func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n-\tprocessFn := &multiplyByFn{\n-\t\tFactor: 5,\n-\t}\n-\treturn beam.ParDo(s, processFn, input)\n+\treturn beam.ParDo(s, &multiplyByFn{Factor: 5}, input)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MzUyMA=="}, "originalCommit": {"oid": "9c5d3b28de33f846415215c58d9d7e1cfc01e29b"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98275426b335ae7cc6ea9726ab47374fb3fe65e2", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/98275426b335ae7cc6ea9726ab47374fb3fe65e2", "committedDate": "2020-05-04T14:03:02Z", "message": "Delete and recreate ParDo Struct"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjI1NTE3", "url": "https://github.com/apache/beam/pull/11564#pullrequestreview-405225517", "createdAt": "2020-05-04T18:09:00Z", "commit": {"oid": "98275426b335ae7cc6ea9726ab47374fb3fe65e2"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowOTowMVrOGQMCuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoxNzowNlrOGQMV5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNzcwNQ==", "bodyText": "DoFns are generally a specific thing, so an article is handy.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              with <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#hdr-DoFns\">\n          \n          \n            \n              with a <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#hdr-DoFns\">", "url": "https://github.com/apache/beam/pull/11564#discussion_r419627705", "createdAt": "2020-05-04T18:09:01Z", "author": {"login": "lostluck"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/task.md", "diffHunk": "@@ -0,0 +1,32 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+\n+# ParDo - One to Many\n+\n+In the previous kata we learned that ParDo maps a single element into another element.\n+In this kata we will map a single element into many by splitting a sentence into words.\n+\n+**Kata:** Please write a ParDo that maps each input sentence into words tokenized by whitespace (\" \").\n+\n+<div class=\"hint\">\n+  Use <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#ParDo\">\n+  ParDo</a>\n+  with <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#hdr-DoFns\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98275426b335ae7cc6ea9726ab47374fb3fe65e2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODg3NA==", "bodyText": "Consider using the qualifed import name, like they'd see in their Go code (eg. beam.ParDo) , rather than just the single method. It would look odd to other languages, but the generally explicit package/provenance of identifiers is a hallmark of Go.", "url": "https://github.com/apache/beam/pull/11564#discussion_r419628874", "createdAt": "2020-05-04T18:10:57Z", "author": {"login": "lostluck"}, "path": "learning/katas/go/Core Transforms/Map/ParDo OneToMany/task.md", "diffHunk": "@@ -0,0 +1,32 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+\n+# ParDo - One to Many\n+\n+In the previous kata we learned that ParDo maps a single element into another element.\n+In this kata we will map a single element into many by splitting a sentence into words.\n+\n+**Kata:** Please write a ParDo that maps each input sentence into words tokenized by whitespace (\" \").\n+\n+<div class=\"hint\">\n+  Use <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#ParDo\">\n+  ParDo</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98275426b335ae7cc6ea9726ab47374fb3fe65e2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzMjYxNQ==", "bodyText": "A possible adjacent task/step is converting a func DoFn into a Structural DoFn. Yes, this is relatively simple, but from a learning standpoint, it makes the distinction pretty clear, while not asking users too much else that might conflate with it.  (eg. Getting the wrong idea that funcs must be 1:1 vs 1:many/none, vs structs etc).\nNot necessary to do it in this PR.", "url": "https://github.com/apache/beam/pull/11564#discussion_r419632615", "createdAt": "2020-05-04T18:17:06Z", "author": {"login": "lostluck"}, "path": "learning/katas/go/Core Transforms/Map/ParDo/task.md", "diffHunk": "@@ -0,0 +1,39 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+\n+# ParDo\n+\n+ParDo is a Beam transform for generic parallel processing. The ParDo processing paradigm is similar to the \u201cMap\u201d \n+phase of a Map/Shuffle/Reduce-style algorithm: a ParDo transform considers each element in the input PCollection,\n+performs some processing function (your user code) on that element, and emits zero, one, or multiple elements to an \n+output PCollection.\n+\n+**Kata:** Please write a simple ParDo that maps the input element by multiplying it by 10.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98275426b335ae7cc6ea9726ab47374fb3fe65e2"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c8e3db4c6b73e2e3f0a778c20de42b994e77412", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/5c8e3db4c6b73e2e3f0a778c20de42b994e77412", "committedDate": "2020-05-04T22:05:53Z", "message": "Update learning/katas/go/Core Transforms/Map/ParDo OneToMany/task.md\n\nCo-authored-by: Robert Burke <lostluck@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDM3NTY4", "url": "https://github.com/apache/beam/pull/11564#pullrequestreview-405437568", "createdAt": "2020-05-05T00:41:53Z", "commit": {"oid": "5c8e3db4c6b73e2e3f0a778c20de42b994e77412"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "099c42b5fed13a0c418020b2bb3dcd6dd8028a92", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/099c42b5fed13a0c418020b2bb3dcd6dd8028a92", "committedDate": "2020-05-05T02:09:09Z", "message": "Upload course updates to stepik"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4080, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}