{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDQzMDIz", "number": 13484, "title": "[BEAM-11207] Return valid error on job failures", "bodyText": "The 'err' object was being overridden by the output of newUniversalPipelineResult. As a result, the user was not able to catch any job errors.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-04T10:34:32Z", "url": "https://github.com/apache/beam/pull/13484", "merged": true, "mergeCommit": {"oid": "196fd9df56bddc51f538cf29ccd605ecd1da2bc4"}, "closed": true, "closedAt": "2020-12-08T16:57:28Z", "author": {"login": "kamilwu"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi1fg3gH2gAyNTMyNDQzMDIzOjFkODE1OTI3OWRmMjljNzNjNjY5YmZmOTVkNTdkODMxZmZkNzg1OTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkNJMZgFqTU0NzQzNDE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1d8159279df29c73c669bff95d57d831ffd78599", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/1d8159279df29c73c669bff95d57d831ffd78599", "committedDate": "2020-12-04T10:50:03Z", "message": "[BEAM-11207] Return valid error on job failures\n\nThe 'err' object was being overridden by the output of newUniversalPipelineResult. As a result, the user was not able to catch any job errors."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f5b43d2459e26c0fc79ed343176388a1a0b69d3", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/5f5b43d2459e26c0fc79ed343176388a1a0b69d3", "committedDate": "2020-12-04T10:33:18Z", "message": "[BEAM-11075] Return valid error on job failures\n\nThe 'err' object was being overridden by the output of newUniversalPipelineResult. As a result, the user was not able to catch any job errors."}, "afterCommit": {"oid": "1d8159279df29c73c669bff95d57d831ffd78599", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/1d8159279df29c73c669bff95d57d831ffd78599", "committedDate": "2020-12-04T10:50:03Z", "message": "[BEAM-11207] Return valid error on job failures\n\nThe 'err' object was being overridden by the output of newUniversalPipelineResult. As a result, the user was not able to catch any job errors."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Mzk4Njc3", "url": "https://github.com/apache/beam/pull/13484#pullrequestreview-545398677", "createdAt": "2020-12-05T03:19:02Z", "commit": {"oid": "1d8159279df29c73c669bff95d57d831ffd78599"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMzoxOTowMlrOH_o9LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMzoxOTozOFrOH_o9lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5MzM1Ng==", "bodyText": "In Go, there's no reason to try to have a single return, or maintain an else.\nIn Go, prefer having the happiest path have the least indentation, and strive to return to that lowest level. Simply return, and avoid the extra indentation of an else.\nAn if else block implies that either clause can be executed and those possibilities need to be kept in mind when reading later code. If the if returns (or continues, or breaks, as appropriate), there's no need for an else, as the code in the If never interacts with anything after it.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tres, presultErr := newUniversalPipelineResult(ctx, jobID, client)\n          \n          \n            \n            \tif presultErr != nil {\n          \n          \n            \n            \t\tif err != nil {\n          \n          \n            \n            \t\t\treturn presult, errors.Wrap(err, presultErr.Error())\n          \n          \n            \n            \t\t} else {\n          \n          \n            \n            \t\t\treturn presult, presultErr\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t} else {\n          \n          \n            \n            \t\tpresult = res\n          \n          \n            \n            \t}\n          \n          \n            \n            \tres, presultErr := newUniversalPipelineResult(ctx, jobID, client)\n          \n          \n            \n            \tif presultErr != nil {\n          \n          \n            \n            \t\tif err != nil {\n          \n          \n            \n            \t\t\treturn presult, errors.Wrap(err, presultErr.Error())\n          \n          \n            \n            \t\t} \n          \n          \n            \n            \t\treturn presult, presultErr\n          \n          \n            \n            \t} \n          \n          \n            \n            \treturn res, err\n          \n      \n    \n    \n  \n\nThis in combination with my other suggestion below to remove the other line.", "url": "https://github.com/apache/beam/pull/13484#discussion_r536493356", "createdAt": "2020-12-05T03:19:02Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/runners/universal/runnerlib/execute.go", "diffHunk": "@@ -94,11 +94,16 @@ func Execute(ctx context.Context, p *pipepb.Pipeline, endpoint string, opt *JobO\n \t}\n \terr = WaitForCompletion(ctx, client, jobID)\n \n-\tres, err := newUniversalPipelineResult(ctx, jobID, client)\n-\tif err != nil {\n-\t\treturn presult, err\n+\tres, presultErr := newUniversalPipelineResult(ctx, jobID, client)\n+\tif presultErr != nil {\n+\t\tif err != nil {\n+\t\t\treturn presult, errors.Wrap(err, presultErr.Error())\n+\t\t} else {\n+\t\t\treturn presult, presultErr\n+\t\t}\n+\t} else {\n+\t\tpresult = res\n \t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8159279df29c73c669bff95d57d831ffd78599"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5MzQ2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \treturn presult, err\n          \n          \n            \n            }\n          \n          \n            \n            }\n          \n      \n    \n    \n  \n\ncleanup of the old return that doesn't need to be preserved.", "url": "https://github.com/apache/beam/pull/13484#discussion_r536493460", "createdAt": "2020-12-05T03:19:38Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/runners/universal/runnerlib/execute.go", "diffHunk": "@@ -94,11 +94,16 @@ func Execute(ctx context.Context, p *pipepb.Pipeline, endpoint string, opt *JobO\n \t}\n \terr = WaitForCompletion(ctx, client, jobID)\n \n-\tres, err := newUniversalPipelineResult(ctx, jobID, client)\n-\tif err != nil {\n-\t\treturn presult, err\n+\tres, presultErr := newUniversalPipelineResult(ctx, jobID, client)\n+\tif presultErr != nil {\n+\t\tif err != nil {\n+\t\t\treturn presult, errors.Wrap(err, presultErr.Error())\n+\t\t} else {\n+\t\t\treturn presult, presultErr\n+\t\t}\n+\t} else {\n+\t\tpresult = res\n \t}\n-\tpresult = res\n \n \treturn presult, err\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8159279df29c73c669bff95d57d831ffd78599"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cde2b317dc69b4cccab801d111badc2cf1c4cc9c", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/cde2b317dc69b4cccab801d111badc2cf1c4cc9c", "committedDate": "2020-12-07T10:52:49Z", "message": "fix: remove unnecessary else blocks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NDM0MTc2", "url": "https://github.com/apache/beam/pull/13484#pullrequestreview-547434176", "createdAt": "2020-12-08T16:57:19Z", "commit": {"oid": "cde2b317dc69b4cccab801d111badc2cf1c4cc9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4318, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}