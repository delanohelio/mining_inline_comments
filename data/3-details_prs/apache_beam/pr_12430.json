{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NjY4NjUx", "number": 12430, "title": "[BEAM-10303] Scale progress with respect to windows observation.", "bodyText": "This PR scales the progress when observing windows.\nr: @lukecwik\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-07-30T23:28:21Z", "url": "https://github.com/apache/beam/pull/12430", "merged": true, "mergeCommit": {"oid": "314caa86d3ba609322dd8cf11dfc156236af88d4"}, "closed": true, "closedAt": "2020-08-15T04:35:26Z", "author": {"login": "boyuanzz"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7ZTqXgFqTQ2MDM1NDUxOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-5AlkgBqjM2NTcyODM3NTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzU0NTE4", "url": "https://github.com/apache/beam/pull/12430#pullrequestreview-460354518", "createdAt": "2020-08-03T21:31:15Z", "commit": {"oid": "261fbf42f36ba5929fe88c6d07504d2e96714638"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTozMToxNVrOG7JY9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTo1MjoxN1rOG7J6UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY3MzAxNA==", "bodyText": "nit: here and below around line 558\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  (HandlesSplits) Iterables.get(mainOutputConsumers, 0);\n          \n          \n            \n                                  (HandlesSplits) Iterables.getOnlyElement(mainOutputConsumers);", "url": "https://github.com/apache/beam/pull/12430#discussion_r464673014", "createdAt": "2020-08-03T21:31:15Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -515,6 +515,9 @@\n               && Iterables.get(mainOutputConsumers, 0) instanceof HandlesSplits) {\n             mainInputConsumer =\n                 new SplittableFnDataReceiver() {\n+                  private final HandlesSplits splitDelegate =\n+                      (HandlesSplits) Iterables.get(mainOutputConsumers, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261fbf42f36ba5929fe88c6d07504d2e96714638"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY4MTU1Mw==", "bodyText": "Should we register this with addProgressRequestCallback so we generate monitoring infos?\nI'm not sure if truncate should be using the downstream progress as part of its calculation when reporting it as a monitoring info. I know that this differs from how we calculate the progress/split point for the SplittableFnDataReceiver since the singular fraction needs to take into account the downstream progress accurately.\nI was always envisioning that work completed/work remaining for the monitoring infos always represented the local knowledge of work and didn't take into account any downstream/upstream knowledge. We can avoid this issue if we merge this logic into the getProgress method around line 533.", "url": "https://github.com/apache/beam/pull/12430#discussion_r464681553", "createdAt": "2020-08-03T21:52:17Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -1029,7 +1040,27 @@ public double getProgress() {\n   private Progress getProgress() {\n     synchronized (splitLock) {\n       if (currentTracker instanceof RestrictionTracker.HasProgress) {\n-        return ((HasProgress) currentTracker).getProgress();\n+        Progress progress = ((HasProgress) currentTracker).getProgress();\n+        double totalWork = progress.getWorkCompleted() + progress.getWorkRemaining();\n+        double completed =\n+            totalWork * currentWindowIterator.previousIndex() + progress.getWorkCompleted();\n+        double remaining =\n+            totalWork * (currentElement.getWindows().size() - currentWindowIterator.nextIndex())\n+                + progress.getWorkRemaining();\n+        return Progress.from(completed, remaining);\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private Progress getProgressFromWindowObservingTruncate(double elementCompleted) {\n+    synchronized (splitLock) {\n+      if (currentWindowIterator != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261fbf42f36ba5929fe88c6d07504d2e96714638"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "261fbf42f36ba5929fe88c6d07504d2e96714638", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/261fbf42f36ba5929fe88c6d07504d2e96714638", "committedDate": "2020-07-31T21:28:08Z", "message": "Truncate handles progress when observing windows."}, "afterCommit": {"oid": "d7dda980b650e2636318715367c8d0d4aa94de17", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d7dda980b650e2636318715367c8d0d4aa94de17", "committedDate": "2020-08-04T19:20:36Z", "message": "Scale progress with respect to windows observation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDg2Nzk4", "url": "https://github.com/apache/beam/pull/12430#pullrequestreview-463486798", "createdAt": "2020-08-07T17:34:54Z", "commit": {"oid": "d7dda980b650e2636318715367c8d0d4aa94de17"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNDo1NFrOG9iOsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozODowNFrOG9iUhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NzEzOQ==", "bodyText": "This should be the stop index since splitting limits the current window iterator so the progress will be wrong after a split happens.", "url": "https://github.com/apache/beam/pull/12430#discussion_r467177139", "createdAt": "2020-08-07T17:34:54Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -1029,12 +1040,35 @@ public double getProgress() {\n   private Progress getProgress() {\n     synchronized (splitLock) {\n       if (currentTracker instanceof RestrictionTracker.HasProgress) {\n-        return ((HasProgress) currentTracker).getProgress();\n+        return scaleProgress(\n+            ((HasProgress) currentTracker).getProgress(),\n+            currentWindowIterator.previousIndex(),\n+            currentElement.getWindows().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7dda980b650e2636318715367c8d0d4aa94de17"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODQxMg==", "bodyText": "totalWork -> totalWorkPerWindow", "url": "https://github.com/apache/beam/pull/12430#discussion_r467178412", "createdAt": "2020-08-07T17:37:40Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -1029,12 +1040,35 @@ public double getProgress() {\n   private Progress getProgress() {\n     synchronized (splitLock) {\n       if (currentTracker instanceof RestrictionTracker.HasProgress) {\n-        return ((HasProgress) currentTracker).getProgress();\n+        return scaleProgress(\n+            ((HasProgress) currentTracker).getProgress(),\n+            currentWindowIterator.previousIndex(),\n+            currentElement.getWindows().size());\n       }\n     }\n     return null;\n   }\n \n+  private Progress getProgressFromWindowObservingTruncate(double elementCompleted) {\n+    synchronized (splitLock) {\n+      if (currentWindowIterator != null) {\n+        return scaleProgress(\n+            Progress.from(elementCompleted, 1 - elementCompleted),\n+            currentWindowIterator.previousIndex(),\n+            currentElement.getWindows().size());\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private Progress scaleProgress(Progress progress, int completedWindowIndex, int windowCount) {\n+    double totalWork = progress.getWorkCompleted() + progress.getWorkRemaining();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7dda980b650e2636318715367c8d0d4aa94de17"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODYzMA==", "bodyText": "For the future:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Progress scaleProgress(Progress progress, int completedWindowIndex, int windowCount) {\n          \n          \n            \n              private Progress scaleProgress(Progress progress, int currentWindowIndex, int stopWindowIndex) {\n          \n      \n    \n    \n  \n\nNote that it is important that it isn't the number of completed windows but the current window index otherwise the math doesn't work out.", "url": "https://github.com/apache/beam/pull/12430#discussion_r467178630", "createdAt": "2020-08-07T17:38:04Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -1029,12 +1040,35 @@ public double getProgress() {\n   private Progress getProgress() {\n     synchronized (splitLock) {\n       if (currentTracker instanceof RestrictionTracker.HasProgress) {\n-        return ((HasProgress) currentTracker).getProgress();\n+        return scaleProgress(\n+            ((HasProgress) currentTracker).getProgress(),\n+            currentWindowIterator.previousIndex(),\n+            currentElement.getWindows().size());\n       }\n     }\n     return null;\n   }\n \n+  private Progress getProgressFromWindowObservingTruncate(double elementCompleted) {\n+    synchronized (splitLock) {\n+      if (currentWindowIterator != null) {\n+        return scaleProgress(\n+            Progress.from(elementCompleted, 1 - elementCompleted),\n+            currentWindowIterator.previousIndex(),\n+            currentElement.getWindows().size());\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private Progress scaleProgress(Progress progress, int completedWindowIndex, int windowCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7dda980b650e2636318715367c8d0d4aa94de17"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NzY1NDY0", "url": "https://github.com/apache/beam/pull/12430#pullrequestreview-467765464", "createdAt": "2020-08-14T17:57:19Z", "commit": {"oid": "dc839163a6d273addd7322d37bf157150409eafe"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo1NzoyMFrOHA9qfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo1NzoyMFrOHA9qfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc3MjM0OA==", "bodyText": "nit: make the method static", "url": "https://github.com/apache/beam/pull/12430#discussion_r470772348", "createdAt": "2020-08-14T17:57:20Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -1029,12 +1048,36 @@ public double getProgress() {\n   private Progress getProgress() {\n     synchronized (splitLock) {\n       if (currentTracker instanceof RestrictionTracker.HasProgress) {\n-        return ((HasProgress) currentTracker).getProgress();\n+        return scaleProgress(\n+            ((HasProgress) currentTracker).getProgress(),\n+            currentWindowIterator.previousIndex(),\n+            windowStopIndex);\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private Progress getProgressFromWindowObservingTruncate(double elementCompleted) {\n+    synchronized (splitLock) {\n+      if (currentWindow != null) {\n+        return scaleProgress(\n+            Progress.from(elementCompleted, 1 - elementCompleted),\n+            currentWindowIterator.previousIndex(),\n+            windowStopIndex);\n       }\n     }\n     return null;\n   }\n \n+  private Progress scaleProgress(Progress progress, int currentWindowIndex, int stopWindowIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc839163a6d273addd7322d37bf157150409eafe"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a76edaa9582ac433a5f28c3b409d139134f5a8e1", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a76edaa9582ac433a5f28c3b409d139134f5a8e1", "committedDate": "2020-08-14T18:34:27Z", "message": "Scale progress with respect to windows observation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc839163a6d273addd7322d37bf157150409eafe", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/dc839163a6d273addd7322d37bf157150409eafe", "committedDate": "2020-08-07T21:42:24Z", "message": "Fix bugs whe computing progress."}, "afterCommit": {"oid": "a76edaa9582ac433a5f28c3b409d139134f5a8e1", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a76edaa9582ac433a5f28c3b409d139134f5a8e1", "committedDate": "2020-08-14T18:34:27Z", "message": "Scale progress with respect to windows observation."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3645, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}