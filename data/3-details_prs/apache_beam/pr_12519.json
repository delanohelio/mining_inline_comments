{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NzE3MTU5", "number": 12519, "title": "[BEAM-10670] Make Read execute as a splittable DoFn by default for the Java DirectRunner.", "bodyText": "Thank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-10T20:33:14Z", "url": "https://github.com/apache/beam/pull/12519", "merged": true, "mergeCommit": {"oid": "c720f2a34653a7d81e7dcad45bbdc7c6aa12bdb5"}, "closed": true, "closedAt": "2020-08-15T20:14:35Z", "author": {"login": "lukecwik"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9oYFHAFqTQ2NDU2ODQ5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-7q85AFqTQ2Nzg4OTY3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTY4NDk4", "url": "https://github.com/apache/beam/pull/12519#pullrequestreview-464568498", "createdAt": "2020-08-10T20:34:57Z", "commit": {"oid": "341c649e8f5b41d35425e4fa91af98a5e82a5f46"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDozNDo1N1rOG-e2jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDozNzozN1rOG-e7zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE3MDM4Mw==", "bodyText": "This is effectively a duplicate of AvroIOTest$SimpleTests.testReadDisplayData and doesn't need to a be a validates runner test since it doesn't run a pipeline.", "url": "https://github.com/apache/beam/pull/12519#discussion_r468170383", "createdAt": "2020-08-10T20:34:57Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java", "diffHunk": "@@ -1494,26 +1488,5 @@ public void testAvroSinkShardedWrite() throws Exception {\n     }\n     // TODO: for Write only, test withSuffix,\n     // withShardNameTemplate and withoutSharding.\n-\n-    @Test\n-    @Category(ValidatesRunner.class)\n-    public void testPrimitiveReadDisplayData() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341c649e8f5b41d35425e4fa91af98a5e82a5f46"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE3MTU0MA==", "bodyText": "(here and below) This was previously throwing the top level exception but DirectRunner wraps ParDo exceptions with PipelineExecutionException but BoundedSource/UnboundedSource used a different code path and hence a different exception handling path.", "url": "https://github.com/apache/beam/pull/12519#discussion_r468171540", "createdAt": "2020-08-10T20:37:16Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/TFRecordIOTest.java", "diffHunk": "@@ -209,15 +208,13 @@ public void testWriteTwo() throws Exception {\n   @Test\n   @Category(NeedsRunner.class)\n   public void testReadInvalidRecord() throws Exception {\n-    expectedException.expect(IllegalStateException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341c649e8f5b41d35425e4fa91af98a5e82a5f46"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE3MTcyNg==", "bodyText": "Effectively a duplicate of testReadDisplayData just above.", "url": "https://github.com/apache/beam/pull/12519#discussion_r468171726", "createdAt": "2020-08-10T20:37:37Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/TextIOReadTest.java", "diffHunk": "@@ -495,24 +487,6 @@ public void testReadDisplayData() {\n       assertThat(displayData, hasDisplayItem(\"compressionType\", BZIP2.toString()));\n     }\n \n-    @Test\n-    @Category(ValidatesRunner.class)\n-    public void testPrimitiveReadDisplayData() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341c649e8f5b41d35425e4fa91af98a5e82a5f46"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDI3NzI5", "url": "https://github.com/apache/beam/pull/12519#pullrequestreview-465427729", "createdAt": "2020-08-11T21:04:09Z", "commit": {"oid": "e62a7365c91d8158af19a6a92a250a60c7b0dc17"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMTowNDowOVrOG_JLmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToyNzoyMlrOG_J2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg2Mzg5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * contain any primitive reads.\n          \n          \n            \n               * contain any primitive reads when use_deprecated_read is not specified.", "url": "https://github.com/apache/beam/pull/12519#discussion_r468863898", "createdAt": "2020-08-11T21:04:09Z", "author": {"login": "boyuanzz"}, "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SplittableParDo.java", "diffHunk": "@@ -630,4 +635,38 @@ public void tearDown() {\n       invoker = null;\n     }\n   }\n+\n+  /**\n+   * Throws an {@link IllegalArgumentException} if the pipeline contains any primitive read\n+   * transforms that have not been expanded to be executed as {@link DoFn splittable DoFns}.\n+   */\n+  public static void validateNoPrimitiveReads(Pipeline pipeline) {\n+    pipeline.traverseTopologically(new ValidateNoPrimitiveReads());\n+  }\n+\n+  /**\n+   * A {@link org.apache.beam.sdk.Pipeline.PipelineVisitor} that ensures that the pipeline does not\n+   * contain any primitive reads.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e62a7365c91d8158af19a6a92a250a60c7b0dc17"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg2NjM1OA==", "bodyText": "Is it possible to make beam_fn_api_use_deprecated_read and use_deprecated_read into one use_deprecated_read since they seem to the same.", "url": "https://github.com/apache/beam/pull/12519#discussion_r468866358", "createdAt": "2020-08-11T21:09:31Z", "author": {"login": "boyuanzz"}, "path": "runners/direct-java/src/main/java/org/apache/beam/runners/direct/DirectRunner.java", "diffHunk": "@@ -179,6 +180,11 @@ public DirectPipelineResult run(Pipeline pipeline) {\n \n       DisplayDataValidator.validatePipeline(pipeline);\n       DisplayDataValidator.validateOptions(options);\n+      // TODO(BEAM-10670): Remove the deprecated Read and make the splittable DoFn the only option.\n+      if (!(ExperimentalOptions.hasExperiment(options, \"beam_fn_api_use_deprecated_read\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e62a7365c91d8158af19a6a92a250a60c7b0dc17"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MzY3MA==", "bodyText": "Can we add one block to test using use_deprecated_read  ?", "url": "https://github.com/apache/beam/pull/12519#discussion_r468873670", "createdAt": "2020-08-11T21:24:58Z", "author": {"login": "boyuanzz"}, "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/SplittableParDoTest.java", "diffHunk": "@@ -167,4 +180,55 @@ public void testBoundednessForUnboundedFn() {\n                 \"unbounded to unbounded\", makeUnboundedCollection(pipeline), unboundedFn)\n             .isBounded());\n   }\n+\n+  private static class FakeBoundedSource extends BoundedSource<String> {\n+    @Override\n+    public List<? extends BoundedSource<String>> split(\n+        long desiredBundleSizeBytes, PipelineOptions options) throws Exception {\n+      return Collections.singletonList(this);\n+    }\n+\n+    @Override\n+    public long getEstimatedSizeBytes(PipelineOptions options) throws Exception {\n+      return 0;\n+    }\n+\n+    @Override\n+    public BoundedReader<String> createReader(PipelineOptions options) throws IOException {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public Coder<String> getOutputCoder() {\n+      return StringUtf8Coder.of();\n+    }\n+  }\n+\n+  @Test\n+  public void testValidateThatThereAreNoPrimitiveReads() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e62a7365c91d8158af19a6a92a250a60c7b0dc17"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NDgwOQ==", "bodyText": "Is it because we have checkDone now?", "url": "https://github.com/apache/beam/pull/12519#discussion_r468874809", "createdAt": "2020-08-11T21:27:22Z", "author": {"login": "boyuanzz"}, "path": "runners/core-java/src/main/java/org/apache/beam/runners/core/OutputAndTimeBoundedSplittableProcessElementInvoker.java", "diffHunk": "@@ -211,10 +211,6 @@ public FinishBundleContext finishBundleContext(DoFn<InputT, OutputT> doFn) {\n     KV<RestrictionT, KV<Instant, WatermarkEstimatorStateT>> residual =\n         processContext.getTakenCheckpoint();\n     if (cont.shouldResume()) {\n-      checkState(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e62a7365c91d8158af19a6a92a250a60c7b0dc17"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90c249ab424d706d23c0650cdf03d570f2676eca", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/90c249ab424d706d23c0650cdf03d570f2676eca", "committedDate": "2020-08-12T17:45:25Z", "message": "fixup! Fix passing forward the self-checkpoint from the UnboundedSource to respect the contract of tryClaim"}, "afterCommit": {"oid": "b3d52f16690ad8b42dd188f4f081da81e04a07f4", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/b3d52f16690ad8b42dd188f4f081da81e04a07f4", "committedDate": "2020-08-14T20:52:15Z", "message": "[BEAM-10670] Make Read execute as a splittable DoFn by default for the Java DirectRunner."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e7c4ca207074ee98568be9469cadd141ad9cc6d", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/2e7c4ca207074ee98568be9469cadd141ad9cc6d", "committedDate": "2020-08-14T20:55:16Z", "message": "[BEAM-10670] Make Read execute as a splittable DoFn by default for the Java DirectRunner."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3d52f16690ad8b42dd188f4f081da81e04a07f4", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/b3d52f16690ad8b42dd188f4f081da81e04a07f4", "committedDate": "2020-08-14T20:52:15Z", "message": "[BEAM-10670] Make Read execute as a splittable DoFn by default for the Java DirectRunner."}, "afterCommit": {"oid": "2e7c4ca207074ee98568be9469cadd141ad9cc6d", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/2e7c4ca207074ee98568be9469cadd141ad9cc6d", "committedDate": "2020-08-14T20:55:16Z", "message": "[BEAM-10670] Make Read execute as a splittable DoFn by default for the Java DirectRunner."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3ODg5Njcx", "url": "https://github.com/apache/beam/pull/12519#pullrequestreview-467889671", "createdAt": "2020-08-14T21:40:42Z", "commit": {"oid": "2e7c4ca207074ee98568be9469cadd141ad9cc6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3437, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}