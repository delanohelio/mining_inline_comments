{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjkwNTkz", "number": 12328, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyMDoyMlrOERHrqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyMDoyMlrOERHrqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzg3MTE0OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/transforms/python/aggregation/combinevalues.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyMDoyMlrOG1qBxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODoyNjozOVrOG2WgXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjI5NQ==", "bodyText": "Can you add a sentence here that briefly explains saturation arithmetic?", "url": "https://github.com/apache/beam/pull/12328#discussion_r458916295", "createdAt": "2020-07-22T16:20:22Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/transforms/python/aggregation/combinevalues.md", "diffHunk": "@@ -0,0 +1,230 @@\n+---\n+title: \"CombineValues\"\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+# CombineValues\n+\n+{{< localstorage language language-py >}}\n+\n+{{< button-pydoc path=\"apache_beam.transforms.core\" class=\"CombineValues\" >}}\n+\n+Combines an iterable of values in a keyed collection of elements.\n+\n+See more information in the [Beam Programming Guide](/documentation/programming-guide/#combine).\n+\n+## Examples\n+\n+In the following examples, we create a pipeline with a `PCollection` of produce.\n+Then, we apply `CombineValues` in multiple ways to combine the keyed values in the `PCollection`.\n+\n+`CombineValues` accepts a function that takes an `iterable` of elements as an input, and combines them to return a single element.\n+`CombineValues` expects a keyed `PCollection` of elements, where the value is an iterable of elements to be combined.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2683184d6af19dc0da00377a8359f524c7e8f551"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY0NTAyMA==", "bodyText": "Sure, I added an explanation in the second example that is where the saturated sum is introduced.", "url": "https://github.com/apache/beam/pull/12328#discussion_r459645020", "createdAt": "2020-07-23T18:26:39Z", "author": {"login": "davidcavazos"}, "path": "website/www/site/content/en/documentation/transforms/python/aggregation/combinevalues.md", "diffHunk": "@@ -0,0 +1,230 @@\n+---\n+title: \"CombineValues\"\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+# CombineValues\n+\n+{{< localstorage language language-py >}}\n+\n+{{< button-pydoc path=\"apache_beam.transforms.core\" class=\"CombineValues\" >}}\n+\n+Combines an iterable of values in a keyed collection of elements.\n+\n+See more information in the [Beam Programming Guide](/documentation/programming-guide/#combine).\n+\n+## Examples\n+\n+In the following examples, we create a pipeline with a `PCollection` of produce.\n+Then, we apply `CombineValues` in multiple ways to combine the keyed values in the `PCollection`.\n+\n+`CombineValues` accepts a function that takes an `iterable` of elements as an input, and combines them to return a single element.\n+`CombineValues` expects a keyed `PCollection` of elements, where the value is an iterable of elements to be combined.\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjI5NQ=="}, "originalCommit": {"oid": "2683184d6af19dc0da00377a8359f524c7e8f551"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 895, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}