{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTAxMzky", "number": 13345, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwMTo0NDowNVrOE45iDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwMTo0NDowNVrOE45iDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDk4MzE2OnYy", "diffSide": "RIGHT", "path": "sdks/java/harness/src/test/java/org/apache/beam/fn/harness/logging/BeamFnLoggingClientTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwMTo0NDowNVrOHzF5qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzowOTowNFrOH0IvFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzMzNjEwNA==", "bodyText": "Out of time for today, but I just noticed this can happen in other tests as well. For example in this run we see the same flake in testWhenServerHangsUpEarlyThatClientIsAbleCleanup\nLeaving a note here so I remember to fix it later", "url": "https://github.com/apache/beam/pull/13345#discussion_r523336104", "createdAt": "2020-11-14T01:44:05Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/harness/src/test/java/org/apache/beam/fn/harness/logging/BeamFnLoggingClientTest.java", "diffHunk": "@@ -146,20 +147,25 @@ public void testLogging() throws Exception {\n               apiServiceDescriptor,\n               (Endpoints.ApiServiceDescriptor descriptor) -> channel);\n \n+      // Keep a strong reference to the loggers in this block. Otherwise the call to client.close()\n+      // removes the only reference and the logger may get GC'd (BEAM-4136).\n+      Logger rootLogger = LogManager.getLogManager().getLogger(\"\");\n+      Logger configuredLogger = LogManager.getLogManager().getLogger(\"ConfiguredLogger\");\n+\n       // Ensure that log levels were correctly set.\n-      assertEquals(Level.OFF, LogManager.getLogManager().getLogger(\"\").getLevel());\n-      assertEquals(Level.FINE, LogManager.getLogManager().getLogger(\"ConfiguredLogger\").getLevel());\n+      assertEquals(Level.OFF, rootLogger.getLevel());\n+      assertEquals(Level.FINE, configuredLogger.getLevel());\n \n       // Should be filtered because the default log level override is OFF\n-      LogManager.getLogManager().getLogger(\"\").log(FILTERED_RECORD);\n+      rootLogger.log(FILTERED_RECORD);\n       // Should not be filtered because the default log level override for ConfiguredLogger is DEBUG\n-      LogManager.getLogManager().getLogger(\"ConfiguredLogger\").log(TEST_RECORD);\n-      LogManager.getLogManager().getLogger(\"ConfiguredLogger\").log(TEST_RECORD_WITH_EXCEPTION);\n+      configuredLogger.log(TEST_RECORD);\n+      configuredLogger.log(TEST_RECORD_WITH_EXCEPTION);\n       client.close();\n \n       // Verify that after close, log levels are reset.\n-      assertEquals(Level.INFO, LogManager.getLogManager().getLogger(\"\").getLevel());\n-      assertNull(LogManager.getLogManager().getLogger(\"ConfiguredLogger\").getLevel());\n+      assertEquals(Level.INFO, rootLogger.getLevel());\n+      assertNull(configuredLogger.getLevel());\n \n       assertTrue(clientClosedStream.get());\n       assertTrue(channel.isShutdown());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "700ed4c65eabb9299e46a23e52fc6ce105808c93"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzMTEyNw==", "bodyText": "ok I fixed the other tests as well, PTAL", "url": "https://github.com/apache/beam/pull/13345#discussion_r524431127", "createdAt": "2020-11-16T17:09:04Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/harness/src/test/java/org/apache/beam/fn/harness/logging/BeamFnLoggingClientTest.java", "diffHunk": "@@ -146,20 +147,25 @@ public void testLogging() throws Exception {\n               apiServiceDescriptor,\n               (Endpoints.ApiServiceDescriptor descriptor) -> channel);\n \n+      // Keep a strong reference to the loggers in this block. Otherwise the call to client.close()\n+      // removes the only reference and the logger may get GC'd (BEAM-4136).\n+      Logger rootLogger = LogManager.getLogManager().getLogger(\"\");\n+      Logger configuredLogger = LogManager.getLogManager().getLogger(\"ConfiguredLogger\");\n+\n       // Ensure that log levels were correctly set.\n-      assertEquals(Level.OFF, LogManager.getLogManager().getLogger(\"\").getLevel());\n-      assertEquals(Level.FINE, LogManager.getLogManager().getLogger(\"ConfiguredLogger\").getLevel());\n+      assertEquals(Level.OFF, rootLogger.getLevel());\n+      assertEquals(Level.FINE, configuredLogger.getLevel());\n \n       // Should be filtered because the default log level override is OFF\n-      LogManager.getLogManager().getLogger(\"\").log(FILTERED_RECORD);\n+      rootLogger.log(FILTERED_RECORD);\n       // Should not be filtered because the default log level override for ConfiguredLogger is DEBUG\n-      LogManager.getLogManager().getLogger(\"ConfiguredLogger\").log(TEST_RECORD);\n-      LogManager.getLogManager().getLogger(\"ConfiguredLogger\").log(TEST_RECORD_WITH_EXCEPTION);\n+      configuredLogger.log(TEST_RECORD);\n+      configuredLogger.log(TEST_RECORD_WITH_EXCEPTION);\n       client.close();\n \n       // Verify that after close, log levels are reset.\n-      assertEquals(Level.INFO, LogManager.getLogManager().getLogger(\"\").getLevel());\n-      assertNull(LogManager.getLogManager().getLogger(\"ConfiguredLogger\").getLevel());\n+      assertEquals(Level.INFO, rootLogger.getLevel());\n+      assertNull(configuredLogger.getLevel());\n \n       assertTrue(clientClosedStream.get());\n       assertTrue(channel.isShutdown());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzMzNjEwNA=="}, "originalCommit": {"oid": "700ed4c65eabb9299e46a23e52fc6ce105808c93"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2810, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}