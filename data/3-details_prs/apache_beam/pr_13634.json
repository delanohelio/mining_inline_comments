{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Njc3MDEx", "number": 13634, "title": "[BEAM-11532] Fix edge case in merge where left_on and right_on contain equivalent column names", "bodyText": "Post-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-30T00:00:03Z", "url": "https://github.com/apache/beam/pull/13634", "merged": true, "mergeCommit": {"oid": "cec16b662d4e8b9eb757b3782cb9c49bb62e576a"}, "closed": true, "closedAt": "2020-12-30T20:57:04Z", "author": {"login": "TheNeuralBit"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrDXWgAH2gAyNTQ2Njc3MDExOjg1MjQ4MGVmZGFhMWIwZWFiZDhmNTAzNTU4MWZjMDRhMzdmZGRlZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrUcI-gFqTU2MDE3MzQ5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "852480efdaa1b0eabd8f5035581fc04a37fddefc", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/852480efdaa1b0eabd8f5035581fc04a37fddefc", "committedDate": "2020-12-29T23:31:12Z", "message": "Fix merge with same name column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28926bdb4fa7f47a3e6b48f0a91b6f2312e04a5e", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/28926bdb4fa7f47a3e6b48f0a91b6f2312e04a5e", "committedDate": "2020-12-29T23:35:12Z", "message": "Fix error when merging with implicit on"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c318c11f5d51ae5dc5ff12920be96ac41ba3970", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/1c318c11f5d51ae5dc5ff12920be96ac41ba3970", "committedDate": "2020-12-29T23:35:27Z", "message": "Remove unnecessary py3 check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTQxOTIw", "url": "https://github.com/apache/beam/pull/13634#pullrequestreview-560141920", "createdAt": "2020-12-30T17:41:51Z", "commit": {"oid": "1c318c11f5d51ae5dc5ff12920be96ac41ba3970"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNzo0MTo1MlrOIMyCqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxODoxMTozMVrOIMyjHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI3MzcwNw==", "bodyText": "Thanks for the cleanup \ud83d\udc4d", "url": "https://github.com/apache/beam/pull/13634#discussion_r550273707", "createdAt": "2020-12-30T17:41:52Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/frames_test.py", "diffHunk": "@@ -124,7 +124,6 @@ def test_groupby(self):\n \n     self._run_test(lambda df: df.groupby(['second', 'A']).sum(), df)\n \n-  @unittest.skipIf(sys.version_info <= (3, ), 'differing signature')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c318c11f5d51ae5dc5ff12920be96ac41ba3970"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI3NzIxMg==", "bodyText": "Can we split test_merge_same_key into separate test methods for each invocation of _run_test?", "url": "https://github.com/apache/beam/pull/13634#discussion_r550277212", "createdAt": "2020-12-30T17:53:49Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/frames_test.py", "diffHunk": "@@ -152,6 +151,45 @@ def test_merge(self):\n           df1,\n           df2)\n \n+  def test_merge_same_key(self):\n+    df1 = pd.DataFrame({\n+        'key': ['foo', 'bar', 'baz', 'foo'], 'value': [1, 2, 3, 5]\n+    })\n+    df2 = pd.DataFrame({\n+        'key': ['foo', 'bar', 'baz', 'foo'], 'value': [5, 6, 7, 8]\n+    })\n+    with beam.dataframe.allow_non_parallel_operations():\n+      self._run_test(\n+          lambda df1,\n+          df2: df1.merge(df2, on='key').rename(index=lambda x: '*').sort_values(\n+              ['value_x', 'value_y']),\n+          df1,\n+          df2)\n+      self._run_test(\n+          lambda df1,\n+          df2: df1.merge(df2, on='key', suffixes=('_left', '_right')).rename(\n+              index=lambda x: '*').sort_values(['value_left', 'value_right']),\n+          df1,\n+          df2)\n+\n+    df1 = pd.DataFrame({'a': ['foo', 'bar'], 'b': [1, 2]})\n+    df2 = pd.DataFrame({'a': ['foo', 'baz'], 'c': [3, 4]})\n+\n+    with beam.dataframe.allow_non_parallel_operations():\n+      self._run_test(\n+          lambda df1,\n+          df2: df1.merge(df2, how='left', on='a').rename(index=lambda x: '*').\n+          sort_values(['b', 'c']),\n+          df1,\n+          df2)\n+      # Test without specifying 'on'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c318c11f5d51ae5dc5ff12920be96ac41ba3970"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI3ODEzMg==", "bodyText": "Nit: Why two newlines, shouldn't it just be one?", "url": "https://github.com/apache/beam/pull/13634#discussion_r550278132", "createdAt": "2020-12-30T17:56:59Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1218,15 +1219,32 @@ def merge(\n     merged = frame_base.DeferredFrame.wrap(\n         expressions.ComputedExpression(\n             'merge',\n-            lambda left, right: left.merge(\n-                right, left_index=True, right_index=True, **kwargs),\n+            lambda left, right: left.merge(right,\n+                                           left_index=True,\n+                                           right_index=True,\n+                                           suffixes=suffixes,\n+                                           **kwargs),\n             [indexed_left._expr, indexed_right._expr],\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=partitionings.Index()))\n \n     if left_index or right_index:\n       return merged\n     else:\n+      common_cols = set(left_on).intersection(right_on)\n+      if len(common_cols):\n+        # When merging on the same column name from both dfs, merged will have\n+        # two duplicate columns, one with lsuffix and one with rsuffix.\n+        # Normally pandas de-dupes these into a single column with no suffix.\n+        # This replicates that logic by dropping the _right_ dupe, and removing\n+        # the suffix from the _left_ dupe.\n+        lsuffix, rsuffix = suffixes\n+        merged = merged.drop(\n+            columns=[f'{col}{rsuffix}' for col in common_cols])\n+        merged = merged.rename(\n+            columns={f'{col}{lsuffix}': col for col in common_cols})\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c318c11f5d51ae5dc5ff12920be96ac41ba3970"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4MjAxMg==", "bodyText": "What if {col}{rsuffix} or {col}{lsuffix} already exists in the input?", "url": "https://github.com/apache/beam/pull/13634#discussion_r550282012", "createdAt": "2020-12-30T18:11:31Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1218,15 +1219,32 @@ def merge(\n     merged = frame_base.DeferredFrame.wrap(\n         expressions.ComputedExpression(\n             'merge',\n-            lambda left, right: left.merge(\n-                right, left_index=True, right_index=True, **kwargs),\n+            lambda left, right: left.merge(right,\n+                                           left_index=True,\n+                                           right_index=True,\n+                                           suffixes=suffixes,\n+                                           **kwargs),\n             [indexed_left._expr, indexed_right._expr],\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=partitionings.Index()))\n \n     if left_index or right_index:\n       return merged\n     else:\n+      common_cols = set(left_on).intersection(right_on)\n+      if len(common_cols):\n+        # When merging on the same column name from both dfs, merged will have\n+        # two duplicate columns, one with lsuffix and one with rsuffix.\n+        # Normally pandas de-dupes these into a single column with no suffix.\n+        # This replicates that logic by dropping the _right_ dupe, and removing\n+        # the suffix from the _left_ dupe.\n+        lsuffix, rsuffix = suffixes\n+        merged = merged.drop(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c318c11f5d51ae5dc5ff12920be96ac41ba3970"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "281501546af1ee45c84c355b435557fbbe745feb", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/281501546af1ee45c84c355b435557fbbe745feb", "committedDate": "2020-12-30T19:10:50Z", "message": "Drop column prior to merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTczNDk4", "url": "https://github.com/apache/beam/pull/13634#pullrequestreview-560173498", "createdAt": "2020-12-30T19:24:49Z", "commit": {"oid": "281501546af1ee45c84c355b435557fbbe745feb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4290, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}