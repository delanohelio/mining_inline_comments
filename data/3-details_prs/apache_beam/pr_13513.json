{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDA0ODUx", "number": 13513, "title": "[Beam-11002] Fixes BufferOverflowException in XMLReader", "bodyText": "Fixing java.nio.BufferOverflowException in getFirstOccurenceOfRecordElement method of XMLReader\n\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-09T19:15:03Z", "url": "https://github.com/apache/beam/pull/13513", "merged": true, "mergeCommit": {"oid": "9c6922976cc2a5c6a2ef836c1986ff769cda99a5"}, "closed": true, "closedAt": "2020-12-17T17:23:03Z", "author": {"login": "Romster"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkilyGgH2gAyNTM1NDA0ODUxOjAxN2IzYzUyNjNhNmQ0ZGNhNmQ4YjVlNjliNGVjOGQwMTMzNTk4MWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnG5pugFqTU1NDgyMDk1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "017b3c5263a6d4dca6d8b5e69b4ec8d01335981d", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/017b3c5263a6d4dca6d8b5e69b4ec8d01335981d", "committedDate": "2020-12-09T17:56:33Z", "message": "[BEAM-11002] Added a test method reproducing BufferOverflowException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5987fdc021a3a778cb0c3f449012e913ea14a3a", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c5987fdc021a3a778cb0c3f449012e913ea14a3a", "committedDate": "2020-12-09T19:04:56Z", "message": "[BEAM-11002] Fixed BufferOverflowException in XMLReader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMjg2ODE3", "url": "https://github.com/apache/beam/pull/13513#pullrequestreview-553286817", "createdAt": "2020-12-16T01:52:48Z", "commit": {"oid": "c5987fdc021a3a778cb0c3f449012e913ea14a3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTo1Mjo0OVrOIGoDVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTo1Mjo0OVrOIGoDVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxODU4MQ==", "bodyText": "Why is bytesToWrite not equal to charBytes.length?\nI believe we are trying to check that:\nif (charBytes.length <= buf.remaining() instead of if (bytesToWrite > BUF_SIZE) ?", "url": "https://github.com/apache/beam/pull/13513#discussion_r543818581", "createdAt": "2020-12-16T01:52:49Z", "author": {"login": "aaltay"}, "path": "sdks/java/io/xml/src/main/java/org/apache/beam/sdk/io/xml/XmlSource.java", "diffHunk": "@@ -281,7 +283,15 @@ private long getFirstOccurenceOfRecordElement(\n               break outer;\n             } else {\n               // Matching was unsuccessful. Reset the buffer to include bytes read for the char.\n-              ByteBuffer newbuf = ByteBuffer.allocate(BUF_SIZE);\n+              int bytesToWrite = buf.remaining() + charBytes.length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5987fdc021a3a778cb0c3f449012e913ea14a3a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzQ0NTY2", "url": "https://github.com/apache/beam/pull/13513#pullrequestreview-553344566", "createdAt": "2020-12-16T04:15:08Z", "commit": {"oid": "c5987fdc021a3a778cb0c3f449012e913ea14a3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNDoxNTowOFrOIGuTtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNDoxNTowOFrOIGuTtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzkyMTA3OA==", "bodyText": "I think your input here does not conform to the format required by the Xml source that is defined here: https://github.com/apache/beam/blob/master/sdks/java/io/xml/src/main/java/org/apache/beam/sdk/io/xml/XmlIO.java#L68\nSpecifically it has to be of the following format.\n<root>\n<record> ... </record>\n<record> ... </record>\n<record> ... </record>\n...\n<record> ... </record>\n</root>\n\nBut you have additional element: <trainTags><trainTag></trainTag> ... <trainTag></trainTag></trainTags>\nWere you able to reproduce the issue when the input conforms to the required format ?", "url": "https://github.com/apache/beam/pull/13513#discussion_r543921078", "createdAt": "2020-12-16T04:15:08Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/xml/src/test/java/org/apache/beam/sdk/io/xml/XmlSourceTest.java", "diffHunk": "@@ -873,6 +881,46 @@ public void testSplitAtFractionExhaustiveSingleByte() throws Exception {\n     assertSplitAtFractionExhaustive(source, options);\n   }\n \n+  @Test\n+  public void testNoBufferOverflowThrown() throws IOException {\n+    // The magicNumber was found imperatively and will be different for different xml content.\n+    // Test with the current setup causes BufferOverflow in\n+    // XMLReader#getFirstOccurenceOfRecordElement method,\n+    // if the specific corner case is not handled\n+    final int magicNumber = 183;\n+    StringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5987fdc021a3a778cb0c3f449012e913ea14a3a"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76f78136b537a0f5fec736011fa05a49d576b9fc", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/76f78136b537a0f5fec736011fa05a49d576b9fc", "committedDate": "2020-12-16T13:38:05Z", "message": "[BEAM-11002] Test testNoBufferOverflowThrown uses TestPipeline + test input is refactored"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjYwMjQw", "url": "https://github.com/apache/beam/pull/13513#pullrequestreview-554260240", "createdAt": "2020-12-17T03:48:32Z", "commit": {"oid": "76f78136b537a0f5fec736011fa05a49d576b9fc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzo0ODozM1rOIHja2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzo0OTozOFrOIHjcNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5MTI1OQ==", "bodyText": "Probably expand comment to following.\n\"The number of bytes to push to the buffer might be larger than BUF_SIZE due to additional 'charBytes'.\"", "url": "https://github.com/apache/beam/pull/13513#discussion_r544791259", "createdAt": "2020-12-17T03:48:33Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/xml/src/main/java/org/apache/beam/sdk/io/xml/XmlSource.java", "diffHunk": "@@ -281,7 +283,15 @@ private long getFirstOccurenceOfRecordElement(\n               break outer;\n             } else {\n               // Matching was unsuccessful. Reset the buffer to include bytes read for the char.\n-              ByteBuffer newbuf = ByteBuffer.allocate(BUF_SIZE);\n+              int bytesToWrite = buf.remaining() + charBytes.length;\n+              ByteBuffer newbuf;\n+              if (bytesToWrite > BUF_SIZE) {\n+                // Avoiding buffer overflow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76f78136b537a0f5fec736011fa05a49d576b9fc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5MTYwNw==", "bodyText": "Add a comment.\n\"We have to reset the size of the buffer to 'BUF_SIZE' to prevent it from infinitely increasing.\"", "url": "https://github.com/apache/beam/pull/13513#discussion_r544791607", "createdAt": "2020-12-17T03:49:38Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/xml/src/main/java/org/apache/beam/sdk/io/xml/XmlSource.java", "diffHunk": "@@ -320,7 +330,12 @@ private long getFirstOccurenceOfRecordElement(\n             recordStartBytesMatched = true;\n           }\n         }\n-        buf.clear();\n+        if (bufSizeChanged) {\n+          buf = ByteBuffer.allocate(BUF_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76f78136b537a0f5fec736011fa05a49d576b9fc"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74eb5eef8a51809626d74226e91436b57b69e1c6", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/74eb5eef8a51809626d74226e91436b57b69e1c6", "committedDate": "2020-12-17T08:08:17Z", "message": "[BEAM-11002] Added some more comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODIwOTU0", "url": "https://github.com/apache/beam/pull/13513#pullrequestreview-554820954", "createdAt": "2020-12-17T17:22:41Z", "commit": {"oid": "74eb5eef8a51809626d74226e91436b57b69e1c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4383, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}