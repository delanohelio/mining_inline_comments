{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTc0NDkz", "number": 13209, "title": "[BEAM-9615] Add schema coders and tests.", "bodyText": "Adds some currently demo schema coders and tests for struct types. Does not \"hook them up\" for use at this time, which will happen in a subsequent PR, with an override setting to allow for migration.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-27T23:23:04Z", "url": "https://github.com/apache/beam/pull/13209", "merged": true, "mergeCommit": {"oid": "8b9e01510894a0f6aa581b6d972d2b00b81b90ce"}, "closed": true, "closedAt": "2020-10-29T19:24:10Z", "author": {"login": "lostluck"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWxQGPAH2gAyNTExMTc0NDkzOjcxYTc0NTljZTRlZWMzMGJjZmFkNzI2YTQ1ZTg1ZjViOWI4MmI2ODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXXQl7AH2gAyNTExMTc0NDkzOmE5MzA5NzBlZDNjNDUzMDFkMmEwYzU1YjIzMmVjNzBhMjY1M2RjZGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71a7459ce4eec30bcfad726a45e85f5b9b82b686", "author": {"user": {"login": "lostluck", "name": "Robert Burke"}}, "url": "https://github.com/apache/beam/commit/71a7459ce4eec30bcfad726a45e85f5b9b82b686", "committedDate": "2020-10-27T23:06:30Z", "message": "[BEAM-9615] Add schema coders and tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MzU4ODc5", "url": "https://github.com/apache/beam/pull/13209#pullrequestreview-519358879", "createdAt": "2020-10-29T06:18:22Z", "commit": {"oid": "71a7459ce4eec30bcfad726a45e85f5b9b82b686"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjoxODoyMlrOHqMsAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjoxODoyMlrOHqMsAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAxMDExNQ==", "bodyText": "Is the %v in the format string supposed to be the error? It reads like it's meant to output the expected decoded value (i.e. test).", "url": "https://github.com/apache/beam/pull/13209#discussion_r514010115", "createdAt": "2020-10-29T06:18:22Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/coder_test.go", "diffHunk": "@@ -75,46 +134,51 @@ func TestCoders(t *testing.T) {\n \t\t1,\n \t\ttrue,\n \t\t\"a string\",\n-\t\tmap[int64]string{1: \"one\", 11: \"oneone\", 21: \"twoone\", 1211: \"onetwooneone\"},\n+\t\tmap[int64]string{1: \"one\", 11: \"oneone\", 21: \"twoone\", 1211: \"onetwooneone\"}, // (not supported by custom type registration)\n \t\tstruct {\n \t\t\tA int\n \t\t\tB *string\n \t\t\tC bool\n \t\t}{4, &ptrString, false},\n-\t\t[...]int64{1, 2, 3, 4, 5}, // array\n+\t\t[...]int64{1, 2, 3, 4, 5}, // array (not supported by custom type registration)\n \t\t[]int64{1, 2, 3, 4, 5},    // slice\n \t\tstruct {\n \t\t\tA []int\n \t\t\tB [3]int\n \t\t}{A: []int{1, 2, 3}, B: [...]int{4, 5, 6}},\n+\t\t[...]struct{ A int }{{1}, {2}, {3}, {4}, {5}},\n+\t\t[]struct{ B int }{{1}, {2}, {3}, {4}, {5}},\n+\t\tregTestType{[4]int{4, 2, 4, 2}},\n \t}\n \n \tfor _, test := range tests {\n-\t\tvar results []string\n-\t\trt := reflect.TypeOf(test)\n-\t\tenc := NewElementEncoder(rt)\n-\t\tfor i := 0; i < 10; i++ {\n-\t\t\tvar buf bytes.Buffer\n-\t\t\tif err := enc.Encode(test, &buf); err != nil {\n-\t\t\t\tt.Fatalf(\"Failed to encode %v: %v\", tests, err)\n+\t\tt.Run(fmt.Sprintf(\"%T\", test), func(t *testing.T) {\n+\t\t\tvar results []string\n+\t\t\trt := reflect.TypeOf(test)\n+\t\t\tenc := NewElementEncoder(rt)\n+\t\t\tfor i := 0; i < 10; i++ {\n+\t\t\t\tvar buf bytes.Buffer\n+\t\t\t\tif err := enc.Encode(test, &buf); err != nil {\n+\t\t\t\t\tt.Fatalf(\"Failed to encode %v: %v\", test, err)\n+\t\t\t\t}\n+\t\t\t\tresults = append(results, string(buf.Bytes()))\n \t\t\t}\n-\t\t\tresults = append(results, string(buf.Bytes()))\n-\t\t}\n-\t\tfor i, d := range results {\n-\t\t\tif d != results[0] {\n-\t\t\t\tt.Errorf(\"coder not deterministic: encoding %d not the same as the first encoding: %v != %v \", i, d, results[0])\n+\t\t\tfor i, d := range results {\n+\t\t\t\tif d != results[0] {\n+\t\t\t\t\tt.Errorf(\"coder not deterministic: encoding %d not the same as the first encoding: %v != %v \", i, d, results[0])\n+\t\t\t\t}\n \t\t\t}\n-\t\t}\n \n-\t\tdec := NewElementDecoder(rt)\n-\t\tbuf := bytes.NewBuffer([]byte(results[0]))\n-\t\tdecoded, err := dec.Decode(buf)\n-\t\tif err != nil {\n-\t\t\tt.Fatalf(\"Failed to decode: %v\", err)\n-\t\t}\n+\t\t\tdec := NewElementDecoder(rt)\n+\t\t\tbuf := bytes.NewBuffer([]byte(results[0]))\n+\t\t\tdecoded, err := dec.Decode(buf)\n+\t\t\tif err != nil {\n+\t\t\t\tt.Fatalf(\"Failed to decode: %q, into %v\", results[0], err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71a7459ce4eec30bcfad726a45e85f5b9b82b686"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a930970ed3c45301d2a0c55b232ec70a2653dcdc", "author": {"user": {"login": "lostluck", "name": "Robert Burke"}}, "url": "https://github.com/apache/beam/commit/a930970ed3c45301d2a0c55b232ec70a2653dcdc", "committedDate": "2020-10-29T19:23:26Z", "message": "Remove \"into\" typo."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1775, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}