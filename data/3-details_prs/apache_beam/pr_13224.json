{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTMxMTI4", "number": 13224, "title": "[BEAM-9547] Auto-populate any unimplemented methods/properties with not_implemented_method", "bodyText": "This PR primarily adds an @populate_not_implemented(pandas_type) annotation for use on our Deferred pandas types. It automatically populates any missing methods and properties with not_implemented_method. This has a couple of benefits:\n\nIt's more helpful for our users, directing them to BEAM-9547\nReduces the number of failing tests, getting us closer to running this continuously\nIt gives us a frequency count for unimplemented methods in the user guide test:\n\n4619 total test cases:\n  0 skipped (0.0%)\n  784 NotImplementedError (17.0%)\n    223 NameError following NotImplementedError (28.4%)\n    26 'resample' is not yet supported (BEAM-9547) (3.3%)\n    24 'rolling' is not yet supported (BEAM-9547) (3.1%)\n    22 'cat' is not yet supported (BEAM-9547) (2.8%)\n    22 'apply' is not yet supported (BEAM-9547) (2.8%)\n    21 'loc' is not yet supported (BEAM-9547) (2.7%)\n    20 'reindex' is not yet supported (BEAM-9547) (2.6%)\n    19 'dt' is not yet supported (BEAM-9547) (2.4%)\n    17 'interpolate' is not yet supported (BEAM-9547) (2.2%)\n    16 'sort_index' is not yet supported (BEAM-9547) (2.0%)\n    16 'loc.setitem' is not yet supported (BEAM-9547) (2.0%)\n    15 'iloc' is not yet supported (BEAM-9547) (1.9%)\n    13 'mean' is not yet supported (BEAM-9547) (1.7%)\n    13 '__getitem__' is not yet supported (BEAM-9547) (1.7%)\n    12 GroupBy.agg currently only supports callable arguments (1.5%)\n    11 'ndim' is not yet supported (BEAM-9547) (1.4%)\n    11 'describe' is not yet supported (BEAM-9547) (1.4%)\n    11 'sample' is not yet supported (BEAM-9547) (1.4%)\n    9 <class 'str'> (1.1%)\n    9 'duplicated' is not yet supported (BEAM-9547) (1.1%)\n\n<omitted for brevity>\n\n  432 apache_beam.dataframe.frame_base.WontImplementError (9.4%)\n    190 NameError following apache_beam.dataframe.frame_base.WontImplementError (44.0%)\n    65 order-sensitive (15.0%)\n    35 non-deferred (8.1%)\n    30 non-deferred value (6.9%)\n    26 order sensitive (6.0%)\n    22 Conversion to a non-deferred a numpy array. (5.1%)\n    17 non-lazy (3.9%)\n    16 Use iloc or loc with integer slices. (3.7%)\n    13 iloc.setitem (3.0%)\n    8 non-deferred column values (1.9%)\n    4 deprecated (0.9%)\n    3 random access files (0.7%)\n    1 scalar value (0.2%)\n    1 plot (0.2%)\n    1 others must be None, Series, or List[Series]. List[str] is not supported. (0.2%)\n  1011 failed (21.9%)\n  2392 passed (51.8%)\n\nThe PR also includes a change to doctests.py to correctly distinguish between NotImplemented and WontImplement when both are allowed, as well as some minor compliance changes, in separate commits.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-29T19:58:40Z", "url": "https://github.com/apache/beam/pull/13224", "merged": true, "mergeCommit": {"oid": "b5ca192dc5404238b4806f544a7fa06381db6476"}, "closed": true, "closedAt": "2020-11-03T00:30:46Z", "author": {"login": "TheNeuralBit"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYo6HhAFqTUyMTg4NzI1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYrgcDAH2gAyNTEyNTMxMTI4OjgwYjUyOWI3MmIxOGZlMDRkYmZjMWIzYTFkMDRhYWQ5OGNjZmYzN2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODg3MjU3", "url": "https://github.com/apache/beam/pull/13224#pullrequestreview-521887257", "createdAt": "2020-11-02T18:22:09Z", "commit": {"oid": "bae399f863e68183bd145ddec902ceb186b63242"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoyMjowOVrOHsQkPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODozMDo0NFrOHsQ2zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3MDgxMw==", "bodyText": "This was intentionally 'plot' for better summarization (e.g. to see that x% of methods that we won't implement are due to them being plotting). A traceback would point to the actual method used. But if we want to be more specific, that's OK too.", "url": "https://github.com/apache/beam/pull/13224#discussion_r516170813", "createdAt": "2020-11-02T18:22:09Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1391,30 +1397,22 @@ def _is_associative(func):\n       and func.__module__ in ('numpy', 'builtins'))\n \n \n+\n+@populate_not_implemented(pd.core.groupby.generic.DataFrameGroupBy)\n class _DeferredGroupByCols(frame_base.DeferredFrame):\n   # It's not clear that all of these make sense in Pandas either...\n   agg = aggregate = frame_base._elementwise_method('agg')\n   any = frame_base._elementwise_method('any')\n   all = frame_base._elementwise_method('all')\n-  apply = frame_base.not_implemented_method('apply')\n-  backfill = bfill = frame_base.not_implemented_method('backfill')\n   boxplot = frame_base.wont_implement_method('plot')\n-  corr = frame_base.not_implemented_method('corr')\n-  corrwith = frame_base.not_implemented_method('corrwith')\n-  cov = frame_base.not_implemented_method('cov')\n-  cumcount = cummax = cummin = cumprod = cumsum = (\n-      frame_base.not_implemented_method('cum*'))\n   describe = frame_base.wont_implement_method('describe')\n   diff = frame_base._elementwise_method('diff')\n-  dtypes = frame_base.not_implemented_method('dtypes')\n-  expanding = frame_base.not_implemented_method('expanding')\n-  ffill = frame_base.not_implemented_method('ffill')\n   fillna = frame_base._elementwise_method('fillna')\n   filter = frame_base._elementwise_method('filter')\n   first = frame_base.wont_implement_method('order sensitive')\n   get_group = frame_base._elementwise_method('group')\n   head = frame_base.wont_implement_method('order sensitive')\n-  hist = frame_base.wont_implement_method('plot')\n+  hist = frame_base.wont_implement_method('hist')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bae399f863e68183bd145ddec902ceb186b63242"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NTU2NA==", "bodyText": "Nice cleanup, this is much better.", "url": "https://github.com/apache/beam/pull/13224#discussion_r516175564", "createdAt": "2020-11-02T18:30:44Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/doctests.py", "diffHunk": "@@ -253,27 +251,37 @@ def sort_and_normalize(text):\n \n   @property\n   def _seen_error(self):\n-    return self._seen_wont_implement or self._seen_not_implemented\n+    return self._last_error is not None\n \n   def check_output(self, want, got, optionflags):\n     # When an error occurs check_output is called with want=example.exc_msg,\n     # and got=exc_msg\n-    if got.startswith(WONT_IMPLEMENT) and (want.startswith(WONT_IMPLEMENT) or\n-                                           want.startswith(NOT_IMPLEMENTED)):\n-      self._seen_wont_implement = True\n-      return True\n-    elif got.startswith(NOT_IMPLEMENTED) and want.startswith(NOT_IMPLEMENTED):\n-      self._seen_not_implemented = True\n-      return True\n-    elif got.startswith('NameError') and self._seen_error:\n-      # After raising WontImplementError or NotImplementError,\n-      # ignore a NameError.\n-      # This allows us to gracefully skip tests like\n-      #    >>> res = df.unsupported_operation()\n-      #    >>> check(res)\n-      return True\n-    else:\n-      self.reset()\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a5d0a65f0a0a98db7777278aa4343c549df016"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d57762a336d8c23f1641ee869cb009ebaf78d4", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/a9d57762a336d8c23f1641ee869cb009ebaf78d4", "committedDate": "2020-11-02T20:21:21Z", "message": "order-sensitive -> wont implement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1539a7ae2219debc9c64a95b2576576968c1db85", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/1539a7ae2219debc9c64a95b2576576968c1db85", "committedDate": "2020-11-02T20:21:21Z", "message": "plot is a property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2466634d0e71bd40110632102c5c3452e09a496", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/d2466634d0e71bd40110632102c5c3452e09a496", "committedDate": "2020-11-02T20:21:21Z", "message": "match, fullmatch are elementwise"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "265a83e7ca044b200c5024d1f2f6e7ef34e336fa", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/265a83e7ca044b200c5024d1f2f6e7ef34e336fa", "committedDate": "2020-11-02T20:22:58Z", "message": "Raise NotImplementedError for all unimplemented methods/properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da0fe801f5256d10cfba38425242101293c4af10", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/da0fe801f5256d10cfba38425242101293c4af10", "committedDate": "2020-11-02T20:23:01Z", "message": "Correctly distinguish between NotImplemented and WontImplement when both are allowed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5524735cb806e051c8a45476475d8be933d268a", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/c5524735cb806e051c8a45476475d8be933d268a", "committedDate": "2020-11-02T20:23:01Z", "message": "hist -> plot"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e72b6d93e05ebe7febde1c24958f23205543583c", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/e72b6d93e05ebe7febde1c24958f23205543583c", "committedDate": "2020-11-02T20:20:23Z", "message": "hist -> plot"}, "afterCommit": {"oid": "c5524735cb806e051c8a45476475d8be933d268a", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/c5524735cb806e051c8a45476475d8be933d268a", "committedDate": "2020-11-02T20:23:01Z", "message": "hist -> plot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc2a16b47c6048d39d8d3e26d85703eeab59909d", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/bc2a16b47c6048d39d8d3e26d85703eeab59909d", "committedDate": "2020-11-02T20:39:06Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80b529b72b18fe04dbfc1b3a1d04aad98ccff37d", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/80b529b72b18fe04dbfc1b3a1d04aad98ccff37d", "committedDate": "2020-11-02T21:32:46Z", "message": "lint"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1817, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}