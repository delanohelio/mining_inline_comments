{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjgxOTMw", "number": 12195, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDozMDoxOVrOEPZDfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo0MjowNlrOEPZK6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTc0NTg5OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDozMDoxOVrOGzE91Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDozMDoxOVrOGzE91Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxMTkyNQ==", "bodyText": "It's nice to include trigger command in the message (easy to rerun if needed). How about:\nChicago Taxi Example on Dataflow (\"Run Chicago Taxi on Dataflow\")", "url": "https://github.com/apache/beam/pull/12195#discussion_r456211925", "createdAt": "2020-07-17T04:30:19Z", "author": {"login": "tvalentyn"}, "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')\n             switches('-PgcsRoot=gs://temp-storage-for-perf-tests/chicago-taxi')\n+            switches(\"-PpipelineOptions=\\\"${LoadTestsBuilder.parseOptions(pipelineOptions)}\\\"\")\n         }\n     }\n }\n \n+PostcommitJobBuilder.postCommitJob(\n+    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n+    'Run Chicago Taxi on Dataflow',\n+    'Google Cloud Dataflow Runner Chicago Taxi Example',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTc2NDgyOnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo0MjowMVrOGzFIsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMDoyNDoyOFrOG0d-zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcwNw==", "bodyText": "Can we switch this to Py3?", "url": "https://github.com/apache/beam/pull/12195#discussion_r456214707", "createdAt": "2020-07-17T04:42:01Z", "author": {"login": "tvalentyn"}, "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MjEwMw==", "bodyText": "There's a jira for this: https://issues.apache.org/jira/browse/BEAM-9154. As far as I remember there was something that prevented us from switching to Py3. Not sure if it's still relevant.", "url": "https://github.com/apache/beam/pull/12195#discussion_r457552103", "createdAt": "2020-07-20T16:48:53Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcwNw=="}, "originalCommit": {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MDM0OA==", "bodyText": "We should move this suite to Py3 as we are actively discussing dropping Py2 support, and these suites will stop working.", "url": "https://github.com/apache/beam/pull/12195#discussion_r457670348", "createdAt": "2020-07-20T20:24:28Z", "author": {"login": "tvalentyn"}, "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcwNw=="}, "originalCommit": {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTc2NDg5OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo0MjowNlrOGzFIwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjo0MDozMlrOG0WdNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcyMA==", "bodyText": "With CronJobBuilder and PostcommitJobBuilder, do we run these test as frequent as specified by Cron config or more frequently (as often as new commits come in) ?", "url": "https://github.com/apache/beam/pull/12195#discussion_r456214720", "createdAt": "2020-07-17T04:42:06Z", "author": {"login": "tvalentyn"}, "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')\n             switches('-PgcsRoot=gs://temp-storage-for-perf-tests/chicago-taxi')\n+            switches(\"-PpipelineOptions=\\\"${LoadTestsBuilder.parseOptions(pipelineOptions)}\\\"\")\n         }\n     }\n }\n \n+PostcommitJobBuilder.postCommitJob(\n+    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n+    'Run Chicago Taxi on Dataflow',\n+    'Google Cloud Dataflow Runner Chicago Taxi Example',\n+    this\n+) {\n+    chicagoTaxiJob(delegate)\n+}\n+\n CronJobBuilder.cronJob(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NzA2MQ==", "bodyText": "As frequent as specified by Cron only.\n\n  \n    \n      beam/.test-infra/jenkins/CronJobBuilder.groovy\n    \n    \n         Line 47\n      in\n      0fc74c0\n    \n    \n    \n    \n\n        \n          \n           commonJobProperties.setAutoJob(delegate, cronPattern, 'builds@beam.apache.org', false, true) \n        \n    \n  \n\n\nThe fourth parameter, triggerOnCommit, is set to False here, which means that the job is not triggered when new commits come in.", "url": "https://github.com/apache/beam/pull/12195#discussion_r457547061", "createdAt": "2020-07-20T16:40:32Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')\n             switches('-PgcsRoot=gs://temp-storage-for-perf-tests/chicago-taxi')\n+            switches(\"-PpipelineOptions=\\\"${LoadTestsBuilder.parseOptions(pipelineOptions)}\\\"\")\n         }\n     }\n }\n \n+PostcommitJobBuilder.postCommitJob(\n+    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n+    'Run Chicago Taxi on Dataflow',\n+    'Google Cloud Dataflow Runner Chicago Taxi Example',\n+    this\n+) {\n+    chicagoTaxiJob(delegate)\n+}\n+\n CronJobBuilder.cronJob(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcyMA=="}, "originalCommit": {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1095, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}