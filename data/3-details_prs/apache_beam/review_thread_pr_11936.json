{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjQ0NDMz", "number": 11936, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTozNTowN1rOEDoqqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTowMjoyMFrOED7EUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjQ3NDY3OnYy", "diffSide": "RIGHT", "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTozNTowN1rOGgxQ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1NDowM1rOGhOGfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxNDczOA==", "bodyText": "Space between Per and Key please. \"PerKey\" isn't anything at all, but we're describing that we're combining values per key. here and throughout.", "url": "https://github.com/apache/beam/pull/11936#discussion_r437014738", "createdAt": "2020-06-08T21:35:07Z", "author": {"login": "lostluck"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+# Combine - Combine PerKey", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NDcwMQ==", "bodyText": "It's this way in both the Java and Python task descriptions.  I don't mind deviating so perhaps just \"Combine per key\" as the header?", "url": "https://github.com/apache/beam/pull/11936#discussion_r437054701", "createdAt": "2020-06-08T23:25:47Z", "author": {"login": "damondouglas"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+# Combine - Combine PerKey", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxNDczOA=="}, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4NzIyOA==", "bodyText": "The Combine PerKey is taken from the Java SDK and the Beam programming guide. Maybe for Go we can use CombinePerKey as per the SDK?", "url": "https://github.com/apache/beam/pull/11936#discussion_r437487228", "createdAt": "2020-06-09T14:54:03Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+# Combine - Combine PerKey", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxNDczOA=="}, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjU0ODMwOnYy", "diffSide": "RIGHT", "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjowMzowM1rOGgx-Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1NzoxM1rOGhOP3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyNjM5NQ==", "bodyText": "There are no \"subclasses\" in Go.", "url": "https://github.com/apache/beam/pull/11936#discussion_r437026395", "createdAt": "2020-06-08T22:03:03Z", "author": {"login": "lostluck"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+# Combine - Combine PerKey\n+\n+After creating a keyed PCollection (for example, by using a GroupByKey transform), a common pattern \n+is to combine the collection of values associated with each key into a single, merged value. This \n+pattern of a GroupByKey followed by merging the collection of values is equivalent to Combine \n+PerKey transform. The combine function you supply to Combine PerKey must be an associative \n+reduction function or a subclass of CombineFn.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NjAyOQ==", "bodyText": "Apologies, I missed that.  Would it be clear if we just remove \"or a subclass of CombineFn\" such that the full sentence reads:  \"The combine function you supply to beam.CombinePerKey must be an associative reduction function\"?", "url": "https://github.com/apache/beam/pull/11936#discussion_r437056029", "createdAt": "2020-06-08T23:30:26Z", "author": {"login": "damondouglas"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+# Combine - Combine PerKey\n+\n+After creating a keyed PCollection (for example, by using a GroupByKey transform), a common pattern \n+is to combine the collection of values associated with each key into a single, merged value. This \n+pattern of a GroupByKey followed by merging the collection of values is equivalent to Combine \n+PerKey transform. The combine function you supply to Combine PerKey must be an associative \n+reduction function or a subclass of CombineFn.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyNjM5NQ=="}, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4OTYzMQ==", "bodyText": "I took most of the task descriptions from the Beam programming guide. This kind of revision would be a good start to be adopted for the actual Go guide.", "url": "https://github.com/apache/beam/pull/11936#discussion_r437489631", "createdAt": "2020-06-09T14:57:13Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/task.md", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+# Combine - Combine PerKey\n+\n+After creating a keyed PCollection (for example, by using a GroupByKey transform), a common pattern \n+is to combine the collection of values associated with each key into a single, merged value. This \n+pattern of a GroupByKey followed by merging the collection of values is equivalent to Combine \n+PerKey transform. The combine function you supply to Combine PerKey must be an associative \n+reduction function or a subclass of CombineFn.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyNjM5NQ=="}, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQ4NDI2OnYy", "diffSide": "RIGHT", "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/pkg/task/task.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTowMToxMVrOGhOb6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTowMToxMVrOGhOb6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ5MjcxMg==", "bodyText": "Would score1, score2 be better than left, right?", "url": "https://github.com/apache/beam/pull/11936#discussion_r437492712", "createdAt": "2020-06-09T15:01:11Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,30 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import \"github.com/apache/beam/sdks/go/pkg/beam\"\n+\n+const (\n+\tPlayer1 = \"Player 1\"\n+\tPlayer2 = \"Player 2\"\n+\tPlayer3 = \"Player 3\"\n+)\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\treturn beam.CombinePerKey(s, func(left, right int) int {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQ4OTQ3OnYy", "diffSide": "RIGHT", "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/cmd/main.go", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTowMjoyMFrOGhOfSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTozMzo0OVrOGhQbog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ5MzU3Ng==", "bodyText": "I'm not familiar with the Go SDK.\nIs this not possible by using a simple beam.Create?", "url": "https://github.com/apache/beam/pull/11936#discussion_r437493576", "createdAt": "2020-06-09T15:02:20Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/cmd/main.go", "diffHunk": "@@ -0,0 +1,49 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"combine_perkey/pkg/task\"\n+\t\"context\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/debug\"\n+)\n+\n+func main() {\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\n+\tinput := beam.ParDo(s, func(_ []byte, emit func(string, int)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUxOTMxNA==", "bodyText": "KV's can't be created directly in the Go SDK at this time.  They need to be emitted from a DoFn like this.", "url": "https://github.com/apache/beam/pull/11936#discussion_r437519314", "createdAt": "2020-06-09T15:25:30Z", "author": {"login": "lostluck"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/cmd/main.go", "diffHunk": "@@ -0,0 +1,49 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"combine_perkey/pkg/task\"\n+\t\"context\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/debug\"\n+)\n+\n+func main() {\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\n+\tinput := beam.ParDo(s, func(_ []byte, emit func(string, int)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ5MzU3Ng=="}, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyNTQxMA==", "bodyText": "Noted. Thanks.", "url": "https://github.com/apache/beam/pull/11936#discussion_r437525410", "createdAt": "2020-06-09T15:33:49Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/Combine PerKey/cmd/main.go", "diffHunk": "@@ -0,0 +1,49 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"combine_perkey/pkg/task\"\n+\t\"context\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/debug\"\n+)\n+\n+func main() {\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\n+\tinput := beam.ParDo(s, func(_ []byte, emit func(string, int)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ5MzU3Ng=="}, "originalCommit": {"oid": "a6ab9eb0f77ff69ff6647ff8c1cb1f1302995410"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3629, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}