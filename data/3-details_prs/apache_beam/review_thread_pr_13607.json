{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NjkzNTUy", "number": 13607, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQyMjoxNjoxM1rOFZIeCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQyMjoxNjoxM1rOFZIeCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxODk3NDgzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/stager.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQyMjoxNjoxM1rOIjhSuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQxOTozNDoyM1rOIk0OrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDExNjUzOQ==", "bodyText": "Also fail for unknown type URNs ?", "url": "https://github.com/apache/beam/pull/13607#discussion_r574116539", "createdAt": "2021-02-10T22:16:13Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/runners/portability/stager.py", "diffHunk": "@@ -114,10 +117,48 @@ def get_sdk_package_name():\n         Returns the PyPI package name to be staged.\"\"\"\n     return names.BEAM_PACKAGE_NAME\n \n+  @staticmethod\n+  def _create_file_stage_to_artifact(local_path, staged_name):\n+    return beam_runner_api_pb2.ArtifactInformation(\n+        type_urn=common_urns.artifact_types.FILE.urn,\n+        type_payload=beam_runner_api_pb2.ArtifactFilePayload(\n+            path=local_path).SerializeToString(),\n+        role_urn=common_urns.artifact_roles.STAGING_TO.urn,\n+        role_payload=beam_runner_api_pb2.ArtifactStagingToRolePayload(\n+            staged_name=staged_name).SerializeToString())\n+\n+  @staticmethod\n+  def _create_file_pip_requirements_artifact(local_path):\n+    return beam_runner_api_pb2.ArtifactInformation(\n+        type_urn=common_urns.artifact_types.FILE.urn,\n+        type_payload=beam_runner_api_pb2.ArtifactFilePayload(\n+            path=local_path).SerializeToString(),\n+        role_urn=common_urns.artifact_roles.PIP_REQUIREMENTS_FILE.urn)\n+\n+  @staticmethod\n+  def extract_staging_tuple_iter(\n+      artifacts: List[beam_runner_api_pb2.ArtifactInformation]):\n+    for artifact in artifacts:\n+      if artifact.type_urn == common_urns.artifact_types.FILE.urn:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e06168643c6108ff44955ca3e8e3db56dc6469"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ3NTM3Mw==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13607#discussion_r575475373", "createdAt": "2021-02-12T19:34:23Z", "author": {"login": "ihji"}, "path": "sdks/python/apache_beam/runners/portability/stager.py", "diffHunk": "@@ -114,10 +117,48 @@ def get_sdk_package_name():\n         Returns the PyPI package name to be staged.\"\"\"\n     return names.BEAM_PACKAGE_NAME\n \n+  @staticmethod\n+  def _create_file_stage_to_artifact(local_path, staged_name):\n+    return beam_runner_api_pb2.ArtifactInformation(\n+        type_urn=common_urns.artifact_types.FILE.urn,\n+        type_payload=beam_runner_api_pb2.ArtifactFilePayload(\n+            path=local_path).SerializeToString(),\n+        role_urn=common_urns.artifact_roles.STAGING_TO.urn,\n+        role_payload=beam_runner_api_pb2.ArtifactStagingToRolePayload(\n+            staged_name=staged_name).SerializeToString())\n+\n+  @staticmethod\n+  def _create_file_pip_requirements_artifact(local_path):\n+    return beam_runner_api_pb2.ArtifactInformation(\n+        type_urn=common_urns.artifact_types.FILE.urn,\n+        type_payload=beam_runner_api_pb2.ArtifactFilePayload(\n+            path=local_path).SerializeToString(),\n+        role_urn=common_urns.artifact_roles.PIP_REQUIREMENTS_FILE.urn)\n+\n+  @staticmethod\n+  def extract_staging_tuple_iter(\n+      artifacts: List[beam_runner_api_pb2.ArtifactInformation]):\n+    for artifact in artifacts:\n+      if artifact.type_urn == common_urns.artifact_types.FILE.urn:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDExNjUzOQ=="}, "originalCommit": {"oid": "06e06168643c6108ff44955ca3e8e3db56dc6469"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2447, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}