{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDIxNzM3", "number": 11870, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMTo1MDowNVrOEBhpXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMTo1MDowNVrOEBhpXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDM1Mjk0OnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/testing/passert/count.go", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMTo1MDowNVrOGdbT2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMToxNTo0NlrOGiLUTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwOTMzOA==", "bodyText": "Can the Sum transform be re-used instead?", "url": "https://github.com/apache/beam/pull/11870#discussion_r433509338", "createdAt": "2020-06-01T21:50:05Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/testing/passert/count.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package passert\n+\n+import (\n+\t\"fmt\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/typex\"\n+)\n+\n+func Count(s beam.Scope, col beam.PCollection, name string, count int) {\n+\ts = s.Scope(fmt.Sprintf(\"passert.Count(%v)\", name))\n+\n+\tif typex.IsKV(col.Type()) {\n+\t\tcol = beam.DropKey(s, col)\n+\t}\n+\tcounted := beam.Combine(s, &elmCountCombineFn{}, col)\n+\tEquals(s, counted, count)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843bf37bac13405326980cd46ef40727275dcf45"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwMTM4Mg==", "bodyText": "I think it could, and I considered it, but the error message isn't too helpful either (better than equals though). I added a ParDo0 with a custom error message which I think ends up being the most user-friendly.", "url": "https://github.com/apache/beam/pull/11870#discussion_r438401382", "createdAt": "2020-06-10T20:52:22Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/testing/passert/count.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package passert\n+\n+import (\n+\t\"fmt\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/typex\"\n+)\n+\n+func Count(s beam.Scope, col beam.PCollection, name string, count int) {\n+\ts = s.Scope(fmt.Sprintf(\"passert.Count(%v)\", name))\n+\n+\tif typex.IsKV(col.Type()) {\n+\t\tcol = beam.DropKey(s, col)\n+\t}\n+\tcounted := beam.Combine(s, &elmCountCombineFn{}, col)\n+\tEquals(s, counted, count)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwOTMzOA=="}, "originalCommit": {"oid": "843bf37bac13405326980cd46ef40727275dcf45"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTA1Mw==", "bodyText": "I meant passert.Sum.  Sorry that should have been clearer.", "url": "https://github.com/apache/beam/pull/11870#discussion_r438411053", "createdAt": "2020-06-10T21:12:04Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/testing/passert/count.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package passert\n+\n+import (\n+\t\"fmt\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/typex\"\n+)\n+\n+func Count(s beam.Scope, col beam.PCollection, name string, count int) {\n+\ts = s.Scope(fmt.Sprintf(\"passert.Count(%v)\", name))\n+\n+\tif typex.IsKV(col.Type()) {\n+\t\tcol = beam.DropKey(s, col)\n+\t}\n+\tcounted := beam.Combine(s, &elmCountCombineFn{}, col)\n+\tEquals(s, counted, count)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwOTMzOA=="}, "originalCommit": {"oid": "843bf37bac13405326980cd46ef40727275dcf45"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5MDE5MA==", "bodyText": "I thought so, that's what I was referring to. The error message in passert.Sum (while better than passert.Equals) is still a bit unclear, just because it specifically mentions passert.Sum instead of passert.Count.", "url": "https://github.com/apache/beam/pull/11870#discussion_r438490190", "createdAt": "2020-06-11T01:15:46Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/testing/passert/count.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package passert\n+\n+import (\n+\t\"fmt\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/typex\"\n+)\n+\n+func Count(s beam.Scope, col beam.PCollection, name string, count int) {\n+\ts = s.Scope(fmt.Sprintf(\"passert.Count(%v)\", name))\n+\n+\tif typex.IsKV(col.Type()) {\n+\t\tcol = beam.DropKey(s, col)\n+\t}\n+\tcounted := beam.Combine(s, &elmCountCombineFn{}, col)\n+\tEquals(s, counted, count)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwOTMzOA=="}, "originalCommit": {"oid": "843bf37bac13405326980cd46ef40727275dcf45"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3742, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}