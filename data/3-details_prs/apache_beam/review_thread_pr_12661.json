{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNzU0MjYw", "number": 12661, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMDo1MjowMFrOEcWbKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjo1MDowN1rOEcxu8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MTYyOTg0OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMDo1MjowMFrOHG1UGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowNTozNVrOHHNydw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjkyNzAwMA==", "bodyText": "It's a little unorthodox to pass a configuration object to a PTransform rather than configure it directly via withXYZ calls.\nWhy did you choose to define ExportGcs.Options rather than make the ExportGcs class hold its own configuration?\nI can think of one benefit - It seems that you can define multiple ExportGCS.Options and pass them down a PTransform to execute multiple exports. Did you have this in mind?", "url": "https://github.com/apache/beam/pull/12661#discussion_r476927000", "createdAt": "2020-08-26T00:52:00Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +230,26 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @return the export\n+   * @see ExportGcs\n+   */\n+  public static ExportGcs exportResourcesToGcs(ExportGcs.Options exportOptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74ef80d93e793c5b8bde1bbb21ad5bb9a2fd8d3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNzk5MQ==", "bodyText": "Export FHIR resources doesn't have many options like import so I moved those config into ExportGcs class.", "url": "https://github.com/apache/beam/pull/12661#discussion_r477327991", "createdAt": "2020-08-26T14:05:35Z", "author": {"login": "trucleduc"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +230,26 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @return the export\n+   * @see ExportGcs\n+   */\n+  public static ExportGcs exportResourcesToGcs(ExportGcs.Options exportOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjkyNzAwMA=="}, "originalCommit": {"oid": "d74ef80d93e793c5b8bde1bbb21ad5bb9a2fd8d3"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjA2NzMwOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMjo1NDo0MlrOHG55mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowNTo0NlrOHHNy_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjEzOA==", "bodyText": "I think it's better to add a bit more details here, e.g. the format of an FHIR store name, and the GCS URI prefix etc.", "url": "https://github.com/apache/beam/pull/12661#discussion_r477002138", "createdAt": "2020-08-26T02:54:42Z", "author": {"login": "lastomato"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +222,19 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @param fhirStore the fhir store", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76234f0021e20ccd64aa90470e66e187d1e2749"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyODEyNA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12661#discussion_r477328124", "createdAt": "2020-08-26T14:05:46Z", "author": {"login": "trucleduc"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +222,19 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @param fhirStore the fhir store", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjEzOA=="}, "originalCommit": {"oid": "e76234f0021e20ccd64aa90470e66e187d1e2749"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjA3MjE5OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMjo1NzoyMlrOHG58bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowNzowMVrOHHN2Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjg2MA==", "bodyText": "We might want to add some tests for this. You can find a few examples added by Jacob previously.", "url": "https://github.com/apache/beam/pull/12661#discussion_r477002860", "createdAt": "2020-08-26T02:57:22Z", "author": {"login": "lastomato"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -1175,4 +1190,94 @@ public void executeBundles(ProcessContext context) {\n       }\n     }\n   }\n+\n+  /** Export FHIR resources from a FHIR store to new line delimited json files on GCS. */\n+  public static class ExportGcs extends PTransform<PBegin, ExportGcs.Result> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76234f0021e20ccd64aa90470e66e187d1e2749"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyODk3OA==", "bodyText": "Tests added. But I don't have permission on the testing project to run it. In the meantime, I wrote another script to test on my own project (not in this commit but identical to the test) and it worked fine.", "url": "https://github.com/apache/beam/pull/12661#discussion_r477328978", "createdAt": "2020-08-26T14:07:01Z", "author": {"login": "trucleduc"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -1175,4 +1190,94 @@ public void executeBundles(ProcessContext context) {\n       }\n     }\n   }\n+\n+  /** Export FHIR resources from a FHIR store to new line delimited json files on GCS. */\n+  public static class ExportGcs extends PTransform<PBegin, ExportGcs.Result> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjg2MA=="}, "originalCommit": {"oid": "e76234f0021e20ccd64aa90470e66e187d1e2749"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjEwNDE5OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjo1MDowN1rOHHgmJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzowOToyOFrOHHhgLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNjEzNA==", "bodyText": "If you support valueproviders internally, you can add another method exportResourcesToGcs that receives ValueProvider<String> types - this will enable users to use them with themplates", "url": "https://github.com/apache/beam/pull/12661#discussion_r477636134", "createdAt": "2020-08-26T22:50:07Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +222,21 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @param fhirStore the fhir store, in the format:\n+   *     projects/project_id/locations/location_id/datasets/dataset_id/fhirStores/fhir_store_id\n+   * @param exportGcsUriPrefix the destination GCS dir, in the format:\n+   *     gs://YOUR_BUCKET_NAME/path/to/a/dir\n+   * @return the export\n+   * @see ExportGcs\n+   */\n+  public static ExportGcs exportResourcesToGcs(String fhirStore, String exportGcsUriPrefix) {\n+    return new ExportGcs(\n+        StaticValueProvider.of(fhirStore), StaticValueProvider.of(exportGcsUriPrefix));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3016e2edaa0c6b5e49365e7d91073707149d3d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY1MDg0MQ==", "bodyText": "Nice. Thanks for catching. We indeed want to use this as a template :-)", "url": "https://github.com/apache/beam/pull/12661#discussion_r477650841", "createdAt": "2020-08-26T23:09:20Z", "author": {"login": "trucleduc"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +222,21 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @param fhirStore the fhir store, in the format:\n+   *     projects/project_id/locations/location_id/datasets/dataset_id/fhirStores/fhir_store_id\n+   * @param exportGcsUriPrefix the destination GCS dir, in the format:\n+   *     gs://YOUR_BUCKET_NAME/path/to/a/dir\n+   * @return the export\n+   * @see ExportGcs\n+   */\n+  public static ExportGcs exportResourcesToGcs(String fhirStore, String exportGcsUriPrefix) {\n+    return new ExportGcs(\n+        StaticValueProvider.of(fhirStore), StaticValueProvider.of(exportGcsUriPrefix));\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNjEzNA=="}, "originalCommit": {"oid": "2c3016e2edaa0c6b5e49365e7d91073707149d3d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY1MDk5MQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12661#discussion_r477650991", "createdAt": "2020-08-26T23:09:28Z", "author": {"login": "trucleduc"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/FhirIO.java", "diffHunk": "@@ -220,6 +222,21 @@ public static Import importResources(\n     return new Import(fhirStore, tempDir, deadLetterDir, contentStructure);\n   }\n \n+  /**\n+   * Export resources to GCS. Intended for use on non-empty FHIR stores\n+   *\n+   * @param fhirStore the fhir store, in the format:\n+   *     projects/project_id/locations/location_id/datasets/dataset_id/fhirStores/fhir_store_id\n+   * @param exportGcsUriPrefix the destination GCS dir, in the format:\n+   *     gs://YOUR_BUCKET_NAME/path/to/a/dir\n+   * @return the export\n+   * @see ExportGcs\n+   */\n+  public static ExportGcs exportResourcesToGcs(String fhirStore, String exportGcsUriPrefix) {\n+    return new ExportGcs(\n+        StaticValueProvider.of(fhirStore), StaticValueProvider.of(exportGcsUriPrefix));\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNjEzNA=="}, "originalCommit": {"oid": "2c3016e2edaa0c6b5e49365e7d91073707149d3d"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 564, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}