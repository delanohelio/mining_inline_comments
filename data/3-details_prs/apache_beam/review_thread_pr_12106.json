{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNzg3MDI4", "number": 12106, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjoyOToxNlrOEMQ-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NToxM1rOETa5aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjk2NDE0OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjoyOToxNlrOGuR1hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjoyOToxNlrOGuR1hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3OTkwOA==", "bodyText": "I would move this to a String constant. Also probably add a reference to here: https://cloud.google.com/bigquery/docs/error-messages", "url": "https://github.com/apache/beam/pull/12106#discussion_r451179908", "createdAt": "2020-07-07T22:29:16Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();\n+                          }\n+                          if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n+                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzAyMzIyOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjo1NTo0NFrOGuSYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0Mzo0N1rOGuos-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4ODg5NQ==", "bodyText": "Why are we performing an extra retry here ?", "url": "https://github.com/apache/beam/pull/12106#discussion_r451188895", "createdAt": "2020-07-07T22:55:44Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1NDU1NQ==", "bodyText": "I have changed it to throw the exception directly and changed the corresponding unit test.", "url": "https://github.com/apache/beam/pull/12106#discussion_r451554555", "createdAt": "2020-07-08T13:43:47Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4ODg5NQ=="}, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzAyMzc5OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjo1NjowMlrOGuSY-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjo1NjowMlrOGuSY-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4ODk4NA==", "bodyText": "Ditto regarding the extra retry.", "url": "https://github.com/apache/beam/pull/12106#discussion_r451188984", "createdAt": "2020-07-07T22:56:02Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();\n+                          }\n+                          if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n+                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {\n+                            return insert.execute().getInsertErrors();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzA1NTIxOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMzoxMDo1NFrOGuSrVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjoxMDoxNlrOGuVmzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw==", "bodyText": "How do these exceptions extend both GoogleJsonResponseException and IOException ?", "url": "https://github.com/apache/beam/pull/12106#discussion_r451193687", "createdAt": "2020-07-07T23:10:54Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMzQwOA==", "bodyText": "GoogleJsonResponseException extends HttpResponseException and HttpResponseException extends IOException", "url": "https://github.com/apache/beam/pull/12106#discussion_r451213408", "createdAt": "2020-07-08T00:18:57Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw=="}, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNzM2Mg==", "bodyText": "Thanks. In that case let's simplify this to following.\nif (!(e instanceof GoogleJsonResponseException)) {\nreturn null;\n}\nGoogleJsonResponseException jsonCause = (GoogleJsonResponseException) e;\n...", "url": "https://github.com/apache/beam/pull/12106#discussion_r451237362", "createdAt": "2020-07-08T01:53:38Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw=="}, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MTY3Nw==", "bodyText": "Yup, that should work better.", "url": "https://github.com/apache/beam/pull/12106#discussion_r451241677", "createdAt": "2020-07-08T02:10:16Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw=="}, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzA1ODM0OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMzoxMjoyM1rOGuStKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0MzowN1rOGuorHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5NDE1NA==", "bodyText": "Please add a unit test for this method.", "url": "https://github.com/apache/beam/pull/12106#discussion_r451194154", "createdAt": "2020-07-07T23:12:23Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {\n+        jsonCause = (GoogleJsonResponseException) eCause;\n+      } else {\n+        return null;\n+      }\n+      GoogleJsonError jsonError = jsonCause.getDetails();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1NDA3OA==", "bodyText": "Test added", "url": "https://github.com/apache/beam/pull/12106#discussion_r451554078", "createdAt": "2020-07-08T13:43:07Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {\n+        jsonCause = (GoogleJsonResponseException) eCause;\n+      } else {\n+        return null;\n+      }\n+      GoogleJsonError jsonError = jsonCause.getDetails();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5NDE1NA=="}, "originalCommit": {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzM3NTQwOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjoxNDowOVrOGuVqng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjoyMToxM1rOGuVxcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MjY1NA==", "bodyText": "We can further simplify :)\nprotected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\nif (!(e instanceof GoogleJsonResponseException)) {\nreturn null;\n}\nGoogleJsonError jsonError = ((GoogleJsonResponseException) e).getDetails();\n...", "url": "https://github.com/apache/beam/pull/12106#discussion_r451242654", "createdAt": "2020-07-08T02:14:09Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +906,19 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "498ed60a8becb2696c0e5ecbf1bc7b0e64fc4dd2"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0NDQwMA==", "bodyText": "True, I have further simplified the method.", "url": "https://github.com/apache/beam/pull/12106#discussion_r451244400", "createdAt": "2020-07-08T02:21:13Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +906,19 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MjY1NA=="}, "originalCommit": {"oid": "498ed60a8becb2696c0e5ecbf1bc7b0e64fc4dd2"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODM1OTkxOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODoxNDoxOVrOG3t-BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODoxNDoxOVrOG3t-BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODAyMQ==", "bodyText": "Please create and link a jira ticket for this TODO.", "url": "https://github.com/apache/beam/pull/12106#discussion_r461078021", "createdAt": "2020-07-27T18:14:19Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -805,6 +810,19 @@ public void deleteDataset(String projectId, String datasetId)\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            throw e;\n+                          }\n+                          /**\n+                           * TODO:Check for quotaExceededError The check will be replaced by", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODQ3NTMwOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0NzowMlrOG3vFmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0NzowMlrOG3vFmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjM0NA==", "bodyText": "This will silently ignore the exception. Please check whether the expected exception is actually thrown like: https://github.com/apache/beam/blob/master/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java#L316", "url": "https://github.com/apache/beam/pull/12106#discussion_r461096344", "createdAt": "2020-07-27T18:47:02Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -687,22 +689,26 @@ public void testInsertOtherRetry() throws Throwable {\n \n     DatasetServiceImpl dataService =\n         new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n-    dataService.insertAll(\n-        ref,\n-        rows,\n-        null,\n-        BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n-        new MockSleeper(),\n-        InsertRetryPolicy.alwaysRetry(),\n-        null,\n-        null,\n-        false,\n-        false,\n-        false);\n-    verify(response, times(2)).getStatusCode();\n-    verify(response, times(2)).getContent();\n-    verify(response, times(2)).getContentType();\n-    expectedLogs.verifyInfo(\"BigQuery insertAll error, retrying:\");\n+    try {\n+      dataService.insertAll(\n+          ref,\n+          rows,\n+          null,\n+          BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n+          new MockSleeper(),\n+          InsertRetryPolicy.alwaysRetry(),\n+          null,\n+          null,\n+          false,\n+          false,\n+          false);\n+    } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODQ3ODk3OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0ODoxM1rOG3vH9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0ODoxM1rOG3vH9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5Njk0OA==", "bodyText": "Please modify the comment accordingly.", "url": "https://github.com/apache/beam/pull/12106#discussion_r461096948", "createdAt": "2020-07-27T18:48:13Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -670,7 +672,7 @@ public void testInsertFailsGracefully() throws Exception {\n    * non-quota-exceeded attempts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODQ4MTExOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0ODo0OFrOG3vJOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0ODo0OFrOG3vJOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzI3NA==", "bodyText": "Please modify the method name accordingly.", "url": "https://github.com/apache/beam/pull/12106#discussion_r461097274", "createdAt": "2020-07-27T18:48:48Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -670,7 +672,7 @@ public void testInsertFailsGracefully() throws Exception {\n    * non-quota-exceeded attempts.\n    */\n   @Test\n-  public void testInsertOtherRetry() throws Throwable {\n+  public void testInsertOtherRetry() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODQ4OTcwOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo1MToxNFrOG3vOkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToxNDo1MVrOG3z1zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0MA==", "bodyText": "What happens if getErrors returns two or more elements?", "url": "https://github.com/apache/beam/pull/12106#discussion_r461098640", "createdAt": "2020-07-27T18:51:14Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -909,6 +927,15 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      if (!(e instanceof GoogleJsonResponseException)) {\n+        return null;\n+      }\n+      GoogleJsonError jsonError = ((GoogleJsonResponseException) e).getDetails();\n+      GoogleJsonError.ErrorInfo errorInfo = Iterables.getFirst(jsonError.getErrors(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NDIyMQ==", "bodyText": "Only return the first element ErrorInfo. This is according to the logic and comment of getErrorInfo() from ApiErrorExtractor.", "url": "https://github.com/apache/beam/pull/12106#discussion_r461174221", "createdAt": "2020-07-27T21:14:51Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -909,6 +927,15 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      if (!(e instanceof GoogleJsonResponseException)) {\n+        return null;\n+      }\n+      GoogleJsonError jsonError = ((GoogleJsonResponseException) e).getDetails();\n+      GoogleJsonError.ErrorInfo errorInfo = Iterables.getFirst(jsonError.getErrors(), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0MA=="}, "originalCommit": {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzcyMDY1OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOToyNjowMlrOG5G3cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDozNDoxMFrOG5JIUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDUxMw==", "bodyText": "I think it looks better to use thrown.expect and thrown.expectMessage instead of assertTrue with instanceof.", "url": "https://github.com/apache/beam/pull/12106#discussion_r462534513", "createdAt": "2020-07-29T19:26:02Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -733,26 +734,29 @@ public void testInsertOtherRetry() throws Throwable {\n     when(response.getContent())\n         .thenReturn(toStream(errorWithReasonAndStatus(\"actually forbidden\", 403)))\n         .thenReturn(toStream(new TableDataInsertAllResponse()));\n-\n-    DatasetServiceImpl dataService =\n-        new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n-    dataService.insertAll(\n-        ref,\n-        rows,\n-        null,\n-        BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n-        TEST_BACKOFF,\n-        new MockSleeper(),\n-        InsertRetryPolicy.alwaysRetry(),\n-        null,\n-        null,\n-        false,\n-        false,\n-        false);\n-    verify(response, times(2)).getStatusCode();\n-    verify(response, times(2)).getContent();\n-    verify(response, times(2)).getContentType();\n-    expectedLogs.verifyInfo(\"BigQuery insertAll error, retrying:\");\n+    try {\n+      DatasetServiceImpl dataService =\n+          new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n+      dataService.insertAll(\n+          ref,\n+          rows,\n+          null,\n+          BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n+          TEST_BACKOFF,\n+          new MockSleeper(),\n+          InsertRetryPolicy.alwaysRetry(),\n+          null,\n+          null,\n+          false,\n+          false,\n+          false);\n+      fail();\n+    } catch (RuntimeException e) {\n+      assertTrue(e instanceof RuntimeException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e6469094e9cdffc6a6dc19ca3206780d8e3dfe"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3MTYwMg==", "bodyText": "I have changed it to use thrown.", "url": "https://github.com/apache/beam/pull/12106#discussion_r462571602", "createdAt": "2020-07-29T20:34:10Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -733,26 +734,29 @@ public void testInsertOtherRetry() throws Throwable {\n     when(response.getContent())\n         .thenReturn(toStream(errorWithReasonAndStatus(\"actually forbidden\", 403)))\n         .thenReturn(toStream(new TableDataInsertAllResponse()));\n-\n-    DatasetServiceImpl dataService =\n-        new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n-    dataService.insertAll(\n-        ref,\n-        rows,\n-        null,\n-        BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n-        TEST_BACKOFF,\n-        new MockSleeper(),\n-        InsertRetryPolicy.alwaysRetry(),\n-        null,\n-        null,\n-        false,\n-        false,\n-        false);\n-    verify(response, times(2)).getStatusCode();\n-    verify(response, times(2)).getContent();\n-    verify(response, times(2)).getContentType();\n-    expectedLogs.verifyInfo(\"BigQuery insertAll error, retrying:\");\n+    try {\n+      DatasetServiceImpl dataService =\n+          new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n+      dataService.insertAll(\n+          ref,\n+          rows,\n+          null,\n+          BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n+          TEST_BACKOFF,\n+          new MockSleeper(),\n+          InsertRetryPolicy.alwaysRetry(),\n+          null,\n+          null,\n+          false,\n+          false,\n+          false);\n+      fail();\n+    } catch (RuntimeException e) {\n+      assertTrue(e instanceof RuntimeException);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDUxMw=="}, "originalCommit": {"oid": "d7e6469094e9cdffc6a6dc19ca3206780d8e3dfe"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Nzk5MDgwOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NToxM1rOG5Jfbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0OTowN1rOG5JnBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzUxOA==", "bodyText": "TODO(BEAM-10584): Check for QUOTA_EXCEEDED error will be replaced by", "url": "https://github.com/apache/beam/pull/12106#discussion_r462577518", "createdAt": "2020-07-29T20:45:13Z", "author": {"login": "ihji"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -806,6 +811,19 @@ public void deleteDataset(String projectId, String datasetId)\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            throw e;\n+                          }\n+                          /**\n+                           * TODO:Check for quotaExceededError The check will be replaced by", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a64c492891b3f40d836b2a7acc2a45e291dd3e7b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3OTQ2MQ==", "bodyText": "Jira issue added", "url": "https://github.com/apache/beam/pull/12106#discussion_r462579461", "createdAt": "2020-07-29T20:49:07Z", "author": {"login": "danielxjd"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -806,6 +811,19 @@ public void deleteDataset(String projectId, String datasetId)\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            throw e;\n+                          }\n+                          /**\n+                           * TODO:Check for quotaExceededError The check will be replaced by", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzUxOA=="}, "originalCommit": {"oid": "a64c492891b3f40d836b2a7acc2a45e291dd3e7b"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3355, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}