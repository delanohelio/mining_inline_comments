{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNjIyNzEz", "number": 12289, "title": "[BEAM-10341] Support drain in Python SDK", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-07-17T00:19:36Z", "url": "https://github.com/apache/beam/pull/12289", "merged": true, "mergeCommit": {"oid": "f841d605ca98be58f242e8e079dd010da60477f4"}, "closed": true, "closedAt": "2020-07-18T23:17:49Z", "author": {"login": "boyuanzz"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc18MpPgFqTQ1MDk5NjI3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2AklQgBqjM1NjA1NTQ4OTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTk2Mjc0", "url": "https://github.com/apache/beam/pull/12289#pullrequestreview-450996274", "createdAt": "2020-07-17T23:01:53Z", "commit": {"oid": "85969b248b4dda63b094643fc8cddb38bf14eb24"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowMTo1M1rOGzjPbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowNDoyNlrOGzjRrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcwNzk1MA==", "bodyText": "Please fix the type, after #12275 it is:\nOptional[Tuple[Iterable[SdfSplitResultsPrimary], Iterable[SdfSplitResultsResidual]]", "url": "https://github.com/apache/beam/pull/12289#discussion_r456707950", "createdAt": "2020-07-17T23:01:53Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,32 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+    self.sdf_process_op = None\n+    self.consumers_count = 0\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.current_element_progress()\n+\n+  def try_split(self, fraction_of_remainder):  # type: (...) -> Optional[Any]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85969b248b4dda63b094643fc8cddb38bf14eb24"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcwODUyNg==", "bodyText": "We shouldn't need to record which is the sdf_process_op, we should be able to use self.receivers[0].try_split and self.receivers[0].current_element_progress regardless. It will only forward the split/progress if there is exactly one consumer and it supports splitting.", "url": "https://github.com/apache/beam/pull/12289#discussion_r456708526", "createdAt": "2020-07-17T23:04:26Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,32 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+    self.sdf_process_op = None\n+    self.consumers_count = 0\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.current_element_progress()\n+\n+  def try_split(self, fraction_of_remainder):  # type: (...) -> Optional[Any]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.try_split(fraction_of_remainder)\n+\n+  def add_receiver(self, operation, output_index=0):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85969b248b4dda63b094643fc8cddb38bf14eb24"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85969b248b4dda63b094643fc8cddb38bf14eb24", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/85969b248b4dda63b094643fc8cddb38bf14eb24", "committedDate": "2020-07-17T04:05:31Z", "message": "Only forward split/progress when the only consumer is splittable."}, "afterCommit": {"oid": "03c640af93d9bfde6cbc2670eff42bbb6bc44971", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/03c640af93d9bfde6cbc2670eff42bbb6bc44971", "committedDate": "2020-07-18T00:45:28Z", "message": "Address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDI4ODcy", "url": "https://github.com/apache/beam/pull/12289#pullrequestreview-451028872", "createdAt": "2020-07-18T03:57:52Z", "commit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1Nzo1MlrOGzlgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1OTowM1rOGzlg8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTA2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return self.consumers[0][0].current_element_progress()\n          \n          \n            \n                return self.receivers[0].current_element_progress()\n          \n      \n    \n    \n  \n\nWe should be relying on the ConsumerSet to properly forward the split/progress call. See:\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 150\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def current_element_progress(self): \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 198\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def try_split(self, fraction_of_remainder):", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745063", "createdAt": "2020-07-18T03:57:52Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,20 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    return self.consumers[0][0].current_element_progress()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTA3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return self.consumers[0][0].try_split(fraction_of_remainder)\n          \n          \n            \n                return self.receivers[0].try_split(fraction_of_remainder)\n          \n      \n    \n    \n  \n\nWe should be relying on the ConsumerSet to properly forward the split/progress call. See:\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 150\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def current_element_progress(self): \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 198\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def try_split(self, fraction_of_remainder):", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745075", "createdAt": "2020-07-18T03:58:10Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,20 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    return self.consumers[0][0].current_element_progress()\n+\n+  def try_split(\n+      self, fraction_of_remainder\n+  ):  # type: (...) -> Optional[Tuple[Iterable[SdfSplitResultsPrimary], Iterable[SdfSplitResultsResidual]]]\n+    return self.consumers[0][0].try_split(fraction_of_remainder)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTIwMw==", "bodyText": "Lets not add this URN until we are sure with internal testing with Dataflow just in case we find that we need to fix/change something.", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745203", "createdAt": "2020-07-18T03:59:03Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/transforms/environments.py", "diffHunk": "@@ -595,6 +595,7 @@ def _python_sdk_capabilities_iter():\n   yield common_urns.protocols.LEGACY_PROGRESS_REPORTING.urn\n   yield common_urns.protocols.WORKER_STATUS.urn\n   yield 'beam:version:sdk_base:' + DockerEnvironment.default_docker_image()\n+  yield common_urns.sdf_components.TRUNCATE_SIZED_RESTRICTION.urn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4decedd9cb6e8e4eef3a41a349a44466eea50f06", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4decedd9cb6e8e4eef3a41a349a44466eea50f06", "committedDate": "2020-07-18T04:17:44Z", "message": "Insert TruncateSizedRestriction when pipeline starts to drain."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/8e0c42fa89c0d6a53c9f53228b842bd5622e3764", "committedDate": "2020-07-18T03:09:29Z", "message": "Fix cython build."}, "afterCommit": {"oid": "4decedd9cb6e8e4eef3a41a349a44466eea50f06", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4decedd9cb6e8e4eef3a41a349a44466eea50f06", "committedDate": "2020-07-18T04:17:44Z", "message": "Insert TruncateSizedRestriction when pipeline starts to drain."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4148, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}