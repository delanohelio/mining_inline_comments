{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTYyNjUx", "number": 13006, "title": "[BEAM-10670] Make Read use SDF by default. Override in runners.", "bodyText": "We add a PTransform override which converts to a new primitive read transform updating the existing read translation logic to only apply to this new primitive read and not to Read.Bounded/Read.Unbounded.\nA good chunk of this change is fixing up test expectations since the expansion is always using SDF now.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-02T22:33:00Z", "url": "https://github.com/apache/beam/pull/13006", "merged": true, "mergeCommit": {"oid": "82cfa2921b1a32260c92cb0f64f7ee9f648133b4"}, "closed": true, "closedAt": "2020-10-05T23:23:25Z", "author": {"login": "lukecwik"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOtvTLAH2gAyNDk3MTYyNjUxOjgwYWVmZGQyMDllNjMzZDI0NmQ4MDhhY2E5NzczNTA5ZjZlOGYxOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPrUJCgFqTUwMjQ1ODAwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "80aefdd209e633d246d808aca9773509f6e8f19b", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/80aefdd209e633d246d808aca9773509f6e8f19b", "committedDate": "2020-10-02T22:29:34Z", "message": "[BEAM-10670] Make Read use SDF by default. Override in runners."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDkzMzg5", "url": "https://github.com/apache/beam/pull/13006#pullrequestreview-501493389", "createdAt": "2020-10-02T23:25:29Z", "commit": {"oid": "80aefdd209e633d246d808aca9773509f6e8f19b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDk0MzU3", "url": "https://github.com/apache/beam/pull/13006#pullrequestreview-501494357", "createdAt": "2020-10-02T23:29:56Z", "commit": {"oid": "80aefdd209e633d246d808aca9773509f6e8f19b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMzoyOTo1NlrOHb963g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMzozMDoyMVrOHb97Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA4ODA5NA==", "bodyText": "To clarify: this change makes it so instead of rejecting primitive reads the function is a noop?", "url": "https://github.com/apache/beam/pull/13006#discussion_r499088094", "createdAt": "2020-10-02T23:29:56Z", "author": {"login": "kennknowles"}, "path": "runners/samza/src/main/java/org/apache/beam/runners/samza/SamzaRunner.java", "diffHunk": "@@ -107,7 +107,7 @@ public PortablePipelineResult runPortablePipeline(RunnerApi.Pipeline pipeline) {\n \n   @Override\n   public SamzaPipelineResult run(Pipeline pipeline) {\n-    SplittableParDo.validateNoPrimitiveReads(pipeline);\n+    SplittableParDo.convertReadBasedSplittableDoFnsToPrimitiveReadsIfNecessary(pipeline);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aefdd209e633d246d808aca9773509f6e8f19b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA4ODE3MA==", "bodyText": "I was trying to figure out where the failure came from and I would assume here but I don't understand why.", "url": "https://github.com/apache/beam/pull/13006#discussion_r499088170", "createdAt": "2020-10-02T23:30:21Z", "author": {"login": "kennknowles"}, "path": "runners/samza/src/main/java/org/apache/beam/runners/samza/translation/ReadTranslator.java", "diffHunk": "@@ -54,9 +54,9 @@ public void translate(\n     final PCollection<T> output = ctx.getOutput(transform);\n     final Coder<WindowedValue<T>> coder = SamzaCoders.of(output);\n     final Source<?> source =\n-        transform instanceof Read.Unbounded\n-            ? ((Read.Unbounded) transform).getSource()\n-            : ((Read.Bounded) transform).getSource();\n+        transform instanceof SplittableParDo.PrimitiveBoundedRead", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aefdd209e633d246d808aca9773509f6e8f19b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "098817e10c7ec6d7edc7cef2f9d5a5078fd6d3fe", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/098817e10c7ec6d7edc7cef2f9d5a5078fd6d3fe", "committedDate": "2020-10-05T16:44:53Z", "message": "fixup! Fix unit test failures that were missed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9108d3bf943d8bbe63be704f9b7b0c48af49b401", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/9108d3bf943d8bbe63be704f9b7b0c48af49b401", "committedDate": "2020-10-05T17:02:28Z", "message": "[BEAM-10670] Don't start/finish bundles when there are no timers that are ready."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjk4Mzk1", "url": "https://github.com/apache/beam/pull/13006#pullrequestreview-502298395", "createdAt": "2020-10-05T18:07:15Z", "commit": {"oid": "9108d3bf943d8bbe63be704f9b7b0c48af49b401"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowNzoxNVrOHcoHlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowODozMlrOHcoKJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3OTQ3OA==", "bodyText": "I believe this should be controlled by the runner choosing to invoke the method, not by a global flag. It can have the same status as other runner-internal overrides, like GBK via GBKO.\nIf you really believe it should be a flag, it should be the runner that reads the flag and decides what to do. This utility library should not change its behavior based on pipeline options. Only runners should opt in to particular behaviors.", "url": "https://github.com/apache/beam/pull/13006#discussion_r499779478", "createdAt": "2020-10-05T18:07:15Z", "author": {"login": "kennknowles"}, "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SplittableParDo.java", "diffHunk": "@@ -638,43 +644,161 @@ public void tearDown() {\n   }\n \n   /**\n-   * Throws an {@link IllegalArgumentException} if the pipeline contains any primitive read\n-   * transforms that have not been expanded to be executed as {@link DoFn splittable DoFns} as long\n-   * as the experiment {@code use_deprecated_read} is not specified.\n+   * Converts {@link Read} based Splittable DoFn expansions to primitive reads implemented by {@link\n+   * PrimitiveBoundedRead} and {@link PrimitiveUnboundedRead} if either the experiment {@code\n+   * use_deprecated_read} or {@code beam_fn_api_use_deprecated_read} are specified.\n+   *\n+   * <p>TODO(BEAM-10670): Remove the primitive Read and make the splittable DoFn the only option.\n+   */\n+  public static void convertReadBasedSplittableDoFnsToPrimitiveReadsIfNecessary(Pipeline pipeline) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9108d3bf943d8bbe63be704f9b7b0c48af49b401"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4MDEzNQ==", "bodyText": "For a runner that previously rejected all primitive reads, isn't it better to leave that runner alone and still reject all primitive reads?\n(here and elsewhere)", "url": "https://github.com/apache/beam/pull/13006#discussion_r499780135", "createdAt": "2020-10-05T18:08:32Z", "author": {"login": "kennknowles"}, "path": "runners/samza/src/main/java/org/apache/beam/runners/samza/SamzaRunner.java", "diffHunk": "@@ -107,7 +107,7 @@ public PortablePipelineResult runPortablePipeline(RunnerApi.Pipeline pipeline) {\n \n   @Override\n   public SamzaPipelineResult run(Pipeline pipeline) {\n-    SplittableParDo.validateNoPrimitiveReads(pipeline);\n+    SplittableParDo.convertReadBasedSplittableDoFnsToPrimitiveReadsIfNecessary(pipeline);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA4ODA5NA=="}, "originalCommit": {"oid": "80aefdd209e633d246d808aca9773509f6e8f19b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd4190df0cdb39244ee43950ab3f3727b6352954", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/fd4190df0cdb39244ee43950ab3f3727b6352954", "committedDate": "2020-10-05T19:56:07Z", "message": "fixup! Fix spotbugs/checkstyle warning"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDU4MDA1", "url": "https://github.com/apache/beam/pull/13006#pullrequestreview-502458005", "createdAt": "2020-10-05T22:14:01Z", "commit": {"oid": "fd4190df0cdb39244ee43950ab3f3727b6352954"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2274, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}