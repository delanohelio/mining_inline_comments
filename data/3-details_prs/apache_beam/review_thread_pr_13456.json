{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjgyNTg0", "number": 13456, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMTo1MDoxOVrOE_akrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzowNjoxN1rOFDLpGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTMxMTE2OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMTo1MDoxOVrOH9HJVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMTo1MDoxOVrOH9HJVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg0MjI2Mg==", "bodyText": "It is a bit spartan. Maybe add a little bit of a story, or thank a people who contributed etc.\nI will defer to Rose for the review.", "url": "https://github.com/apache/beam/pull/13456#discussion_r533842262", "createdAt": "2020-12-02T01:50:19Z", "author": {"login": "aaltay"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2640f98ace086bdb76234d57b24024cdcc1b1514"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjUxMzk5OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowNzo0N1rOH9lOyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzoxNDo0M1rOH--61w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNTE3OQ==", "bodyText": "Summarize the goals of SDF, romanticize it, and tell users why they should be excited to use the new feature. Some questions you should answer here:\n\nWhy should I prefer SDF over the 'old' I/O connectors? (new capabilities? better perf? cleaner api?)\nIs it worth migrating my existing i/o connector to SDF? Why?\nWhat's next for SDFs? (optional)\nWhy did it take 3 years to do this? (optional)\nIs there a specific place/component/label to report bugs? (optional)\n\nThese details may duplicate content from the other blog posts but that is fine. A high level, short summary, of them would help me avoid having to sift through the links.", "url": "https://github.com/apache/beam/pull/13456#discussion_r534335179", "createdAt": "2020-12-02T17:07:47Z", "author": {"login": "tysonjh"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Now Splittable DoFn is ready to use. Try out building your Splittable DoFn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2640f98ace086bdb76234d57b24024cdcc1b1514"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwNDYzMQ==", "bodyText": "Just updated the blog with more details. Would you like to take another look?", "url": "https://github.com/apache/beam/pull/13456#discussion_r535804631", "createdAt": "2020-12-04T03:14:43Z", "author": {"login": "boyuanzz"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Now Splittable DoFn is ready to use. Try out building your Splittable DoFn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNTE3OQ=="}, "originalCommit": {"oid": "2640f98ace086bdb76234d57b24024cdcc1b1514"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk3NDEzOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoxMzozMVrOIBAzYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoxMzozMVrOIBAzYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzMjY0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            implementation to a splittable DoFn.\n          \n          \n            \n            implementation to a splittable DoFn.\n          \n          \n            \n            \n          \n          \n            \n            **Go Examples**\n          \n          \n            \n             *  [textio.ReadSdf](https://github.com/apache/beam/blob/ce190e11332469ea59b6c9acf16ee7c673ccefdd/sdks/go/pkg/beam/io/textio/sdf.go#L40) implements reading from text files using a splittable DoFn.\n          \n      \n    \n    \n  \n\n**", "url": "https://github.com/apache/beam/pull/13456#discussion_r537932640", "createdAt": "2020-12-08T00:13:31Z", "author": {"login": "lostluck"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,85 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify\n+  the topic and partition you want to read from during pipeline construction time. There is no way\n+  for `UnboundedSource`/`BoundedSource` to accept topics and partitions as inputs during execution\n+  time. But it's native to Splittable DoFn.\n+* Splittable DoFn fits in as any node on a pipeline freely with the ability of splitting.\n+  - `UnboundedSource`/`BoundedSource` has to be the root node of the pipeline to gain performance\n+  benefits from splitting strategies, which limits many real-world usages. This is no longer a limit\n+  for a Splittable DoFn.\n+\n+As Splittable DoFn is now ready to use with all the mentioned improvements, it is the recommended\n+way to build the new I/O connectors.Try out building your own Splittable DoFn by following the\n+[programming guide](https://beam.apache.org/documentation/programming-guide/#splittable-dofns). We\n+have provided tones of common utility classes such as common types of `RestrictionTracker` and\n+`WatermarkEstimator` in Beam SDK, which will help you onboard easily. As for the existing I/O\n+connectors, we have wrapped `UnboundedSource` and `BoundedSource` implementations into Splittable\n+DoFns, yet we still encourage developers to convert `UnboundedSource`/`BoundedSource` into actual\n+Splittable DoFn implementation to gain more performance benefits.\n+\n+Many thanks to every contributor who brought this highly expected design into the data processing\n+world. We are really excited to see that users benefit from Splittable DoFn.\n+\n+At the end, hope you enjoy exploring some real-world Splittable DoFn examples.\n+\n+## Real world Splittable DoFn examples\n+\n+**Java Examples**\n+\n+* [Kafka](https://github.com/apache/beam/blob/571338b0cc96e2e80f23620fe86de5c92dffaccc/sdks/java/io/kafka/src/main/java/org/apache/beam/sdk/io/kafka/ReadFromKafkaDoFn.java#L118):\n+An I/O connector for [Apache Kafka](https://kafka.apache.org/)\n+(an open-source distributed event streaming platform).\n+* [Watch](https://github.com/apache/beam/blob/571338b0cc96e2e80f23620fe86de5c92dffaccc/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Watch.java#L787):\n+Uses a polling function producing a growing set of outputs for each input until a per-input\n+termination condition is met.\n+* [Parquet](https://github.com/apache/beam/blob/571338b0cc96e2e80f23620fe86de5c92dffaccc/sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java#L365):\n+An I/O connector for [Apache Parquet](https://parquet.apache.org/)\n+(an open-source columnar storage format).\n+* [HL7v2](https://github.com/apache/beam/blob/6fdde4f4eab72b49b10a8bb1cb3be263c5c416b5/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/healthcare/HL7v2IO.java#L493):\n+An I/O connector for HL7v2 messages (a clinical messaging format that provides data about events\n+that occur inside an organization) part of\n+[Google\u2019s Cloud Healthcare API](https://cloud.google.com/healthcare).\n+* [BoundedSource wrapper](https://github.com/apache/beam/blob/571338b0cc96e2e80f23620fe86de5c92dffaccc/sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java#L248):\n+A wrapper which converts an existing [BoundedSource](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/io/BoundedSource.html)\n+implementation to a splittable DoFn.\n+* [UnboundedSource wrapper](https://github.com/apache/beam/blob/571338b0cc96e2e80f23620fe86de5c92dffaccc/sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java#L432):\n+A wrapper which converts an existing [UnboundedSource](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/io/UnboundedSource.html)\n+implementation to a splittable DoFn.\n+\n+**Python Examples**\n+* [BoundedSourceWrapper](https://github.com/apache/beam/blob/571338b0cc96e2e80f23620fe86de5c92dffaccc/sdks/python/apache_beam/io/iobase.py#L1375):\n+A wrapper which converts an existing [BoundedSource](https://beam.apache.org/releases/pydoc/current/apache_beam.io.iobase.html#apache_beam.io.iobase.BoundedSource)\n+implementation to a splittable DoFn.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8078ad0bfb0ed433f74d09de8dc4fedd072fcc14"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzIxOTAzOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMTo0MTo0NlrOIBC5Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTozOToxNVrOICqs-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2Njg1NA==", "bodyText": "I think an additional sentence here outlining the goal of the blog post would help. Something like:\n\"Thanks to the hard work of many contributors, we are pleased to announce that Splittable DoFn is ready for use in all Beam SDKs starting in version 2.XX.\"", "url": "https://github.com/apache/beam/pull/13456#discussion_r537966854", "createdAt": "2020-12-08T01:41:46Z", "author": {"login": "youngoli"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NjA0MQ==", "bodyText": "+1", "url": "https://github.com/apache/beam/pull/13456#discussion_r539456041", "createdAt": "2020-12-09T16:30:21Z", "author": {"login": "tysonjh"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2Njg1NA=="}, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2MjgyMg==", "bodyText": "This blog is titled with Splittable DoFn in Apache Beam is Ready to Use. Does it help on this purpose?", "url": "https://github.com/apache/beam/pull/13456#discussion_r539562822", "createdAt": "2020-12-09T18:54:04Z", "author": {"login": "boyuanzz"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2Njg1NA=="}, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0NDc1NA==", "bodyText": "It's moreso to help the flow of the post. It makes sense to go background info -> main point -> details. Plus, from my experience it's relatively common for articles/blog posts to restate the title. So while the title is great, I still think having this sentence helps.", "url": "https://github.com/apache/beam/pull/13456#discussion_r539644754", "createdAt": "2020-12-09T21:01:52Z", "author": {"login": "youngoli"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2Njg1NA=="}, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2NzcwNw==", "bodyText": "Thanks! Just updated the blog.", "url": "https://github.com/apache/beam/pull/13456#discussion_r539667707", "createdAt": "2020-12-09T21:39:15Z", "author": {"login": "boyuanzz"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2Njg1NA=="}, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzA1ODgxOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyNjoxOFrOICdkYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyNjoxOFrOICdkYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1MjUxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            way to build the new I/O connectors.Try out building your own Splittable DoFn by following the\n          \n          \n            \n            way to build the new I/O connectors. Try out building your own Splittable DoFn by following the", "url": "https://github.com/apache/beam/pull/13456#discussion_r539452514", "createdAt": "2020-12-09T16:26:18Z", "author": {"login": "tysonjh"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify\n+  the topic and partition you want to read from during pipeline construction time. There is no way\n+  for `UnboundedSource`/`BoundedSource` to accept topics and partitions as inputs during execution\n+  time. But it's native to Splittable DoFn.\n+* Splittable DoFn fits in as any node on a pipeline freely with the ability of splitting.\n+  - `UnboundedSource`/`BoundedSource` has to be the root node of the pipeline to gain performance\n+  benefits from splitting strategies, which limits many real-world usages. This is no longer a limit\n+  for a Splittable DoFn.\n+\n+As Splittable DoFn is now ready to use with all the mentioned improvements, it is the recommended\n+way to build the new I/O connectors.Try out building your own Splittable DoFn by following the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzA2MzIzOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyNzowM1rOICdnFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyNzowM1rOICdnFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1MzIwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            have provided tones of common utility classes such as common types of `RestrictionTracker` and\n          \n          \n            \n            have provided tonnes of common utility classes such as common types of `RestrictionTracker` and", "url": "https://github.com/apache/beam/pull/13456#discussion_r539453206", "createdAt": "2020-12-09T16:27:03Z", "author": {"login": "tysonjh"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify\n+  the topic and partition you want to read from during pipeline construction time. There is no way\n+  for `UnboundedSource`/`BoundedSource` to accept topics and partitions as inputs during execution\n+  time. But it's native to Splittable DoFn.\n+* Splittable DoFn fits in as any node on a pipeline freely with the ability of splitting.\n+  - `UnboundedSource`/`BoundedSource` has to be the root node of the pipeline to gain performance\n+  benefits from splitting strategies, which limits many real-world usages. This is no longer a limit\n+  for a Splittable DoFn.\n+\n+As Splittable DoFn is now ready to use with all the mentioned improvements, it is the recommended\n+way to build the new I/O connectors.Try out building your own Splittable DoFn by following the\n+[programming guide](https://beam.apache.org/documentation/programming-guide/#splittable-dofns). We\n+have provided tones of common utility classes such as common types of `RestrictionTracker` and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzA2OTYwOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyODoxMVrOICdq-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyODoxMVrOICdq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NDIwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Many thanks to every contributor who brought this highly expected design into the data processing\n          \n          \n            \n            Many thanks to every contributor who brought this highly anticipated design into the data processing\n          \n      \n    \n    \n  \n\nI think this is what you mean?", "url": "https://github.com/apache/beam/pull/13456#discussion_r539454202", "createdAt": "2020-12-09T16:28:11Z", "author": {"login": "tysonjh"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify\n+  the topic and partition you want to read from during pipeline construction time. There is no way\n+  for `UnboundedSource`/`BoundedSource` to accept topics and partitions as inputs during execution\n+  time. But it's native to Splittable DoFn.\n+* Splittable DoFn fits in as any node on a pipeline freely with the ability of splitting.\n+  - `UnboundedSource`/`BoundedSource` has to be the root node of the pipeline to gain performance\n+  benefits from splitting strategies, which limits many real-world usages. This is no longer a limit\n+  for a Splittable DoFn.\n+\n+As Splittable DoFn is now ready to use with all the mentioned improvements, it is the recommended\n+way to build the new I/O connectors.Try out building your own Splittable DoFn by following the\n+[programming guide](https://beam.apache.org/documentation/programming-guide/#splittable-dofns). We\n+have provided tones of common utility classes such as common types of `RestrictionTracker` and\n+`WatermarkEstimator` in Beam SDK, which will help you onboard easily. As for the existing I/O\n+connectors, we have wrapped `UnboundedSource` and `BoundedSource` implementations into Splittable\n+DoFns, yet we still encourage developers to convert `UnboundedSource`/`BoundedSource` into actual\n+Splittable DoFn implementation to gain more performance benefits.\n+\n+Many thanks to every contributor who brought this highly expected design into the data processing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzA3NzIzOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyOTozNFrOICdvew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyOTozNFrOICdvew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NTM1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            At the end, hope you enjoy exploring some real-world Splittable DoFn examples.\n          \n          \n            \n            Below are some real-world Splittable DoFn examples for you to explore.", "url": "https://github.com/apache/beam/pull/13456#discussion_r539455355", "createdAt": "2020-12-09T16:29:34Z", "author": {"login": "tysonjh"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,88 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify\n+  the topic and partition you want to read from during pipeline construction time. There is no way\n+  for `UnboundedSource`/`BoundedSource` to accept topics and partitions as inputs during execution\n+  time. But it's native to Splittable DoFn.\n+* Splittable DoFn fits in as any node on a pipeline freely with the ability of splitting.\n+  - `UnboundedSource`/`BoundedSource` has to be the root node of the pipeline to gain performance\n+  benefits from splitting strategies, which limits many real-world usages. This is no longer a limit\n+  for a Splittable DoFn.\n+\n+As Splittable DoFn is now ready to use with all the mentioned improvements, it is the recommended\n+way to build the new I/O connectors.Try out building your own Splittable DoFn by following the\n+[programming guide](https://beam.apache.org/documentation/programming-guide/#splittable-dofns). We\n+have provided tones of common utility classes such as common types of `RestrictionTracker` and\n+`WatermarkEstimator` in Beam SDK, which will help you onboard easily. As for the existing I/O\n+connectors, we have wrapped `UnboundedSource` and `BoundedSource` implementations into Splittable\n+DoFns, yet we still encourage developers to convert `UnboundedSource`/`BoundedSource` into actual\n+Splittable DoFn implementation to gain more performance benefits.\n+\n+Many thanks to every contributor who brought this highly expected design into the data processing\n+world. We are really excited to see that users benefit from Splittable DoFn.\n+\n+At the end, hope you enjoy exploring some real-world Splittable DoFn examples.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c334d6623630c462d985c291c2185a05b6f72"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODc3MDI5OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjo1NToxOFrOICtQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjo1NToxOFrOICtQzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwOTY0Nw==", "bodyText": "I think we talk about this I/O as one word in the docs? \"KafkaIO\"?", "url": "https://github.com/apache/beam/pull/13456#discussion_r539709647", "createdAt": "2020-12-09T22:55:18Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,91 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Now we are pleased to announce that Splittable DoFn is ready for use in Beam Python/Java/Go SDKs\n+starting in version 2.25.0.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ae2ab459e9e19e680b1e6ff52a96253fcb4a22"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODc4NDI0OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjo1OToxOVrOICtYkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjo1OToxOVrOICtYkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcxMTYzMw==", "bodyText": "I think this sentence is fine here, but I'd move it to the beginning of the post. Get to the announcement immediately and then explain the context.\nAlso, if you define the abbreviation Splittable DoFn (SDF), you can use it throughout the post to make it easier to read. Up to you how you want to talk about it :)\n\"We are pleased to announce that Splittable DoFn (SDF) is ready for use in the Beam Python, Java, and Go SDKs for versions 2.25.0 and later.\"", "url": "https://github.com/apache/beam/pull/13456#discussion_r539711633", "createdAt": "2020-12-09T22:59:19Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,91 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Now we are pleased to announce that Splittable DoFn is ready for use in Beam Python/Java/Go SDKs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ae2ab459e9e19e680b1e6ff52a96253fcb4a22"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODgwNzkzOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzowNjoxN1rOICtlaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzowNjoxN1rOICtlaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcxNDkyMw==", "bodyText": "Replace \"native\" with \"built-in\" (if that what you mean)\nhttps://developers.google.com/style/word-list#letter-n", "url": "https://github.com/apache/beam/pull/13456#discussion_r539714923", "createdAt": "2020-12-09T23:06:17Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/splittable-do-fn-is-available.md", "diffHunk": "@@ -0,0 +1,91 @@\n+---\n+title:  \"Splittable DoFn in Apache Beam is Ready to Use\"\n+date:   2020-12-16 00:00:01 -0800\n+categories:\n+  - blog\n+aliases:\n+  - /blog/2020/12/16/splittable-do-fn-is-available.html\n+authors:\n+  - boyuanzz\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In 2017, [Splittable DoFn Blog Post](https://beam.apache.org/blog/splittable-do-fn/) proposed\n+to build [Splittable DoFn](https://s.apache.org/splittable-do-fn) APIs as the new recommended way of\n+building I/O connectors. Splittable DoFn is a generalization of `DoFn` that gives it the core\n+capabilities of `Source` while retaining `DoFn`'s syntax, flexibility, modularity, and ease of\n+coding. Thus, it becomes much easier to develop complex I/O connectors with simpler and reusable\n+code.\n+\n+Now we are pleased to announce that Splittable DoFn is ready for use in Beam Python/Java/Go SDKs\n+starting in version 2.25.0.\n+\n+Splittable DoFn has three advantages over the existing `UnboundedSource` and `BoundedSource`:\n+* Splittable DoFn provides a unified set of APIs to handle both unbounded and bounded cases.\n+* Splittable DoFn enables reading from source descriptors dynamically.\n+  - Taking Kafka IO as an example, within `UnboundedSource`/`BoundedSource` API, you must specify\n+  the topic and partition you want to read from during pipeline construction time. There is no way\n+  for `UnboundedSource`/`BoundedSource` to accept topics and partitions as inputs during execution\n+  time. But it's native to Splittable DoFn.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ae2ab459e9e19e680b1e6ff52a96253fcb4a22"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2707, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}