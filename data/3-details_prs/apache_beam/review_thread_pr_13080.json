{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODcxNTcz", "number": 13080, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo0ODo1NFrOEs05hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMTozMzoyNVrOEs1VeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5NDkzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo0ODo1NFrOHgRwtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMTozMDowOVrOHgSWWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzQ3OQ==", "bodyText": "\"Background caching job\" -> \"Background source recording job\". Please check all occurrences.", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607479", "createdAt": "2020-10-13T00:48:54Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -19,21 +19,21 @@\n \n For internal use only; no backwards-compatibility guarantees.\n \n-A background caching job is a job that captures events for all capturable\n+A background caching job is a job that records events for all recordable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYxNzExMw==", "bodyText": "Switched to background source recording jobs for all the comments.", "url": "https://github.com/apache/beam/pull/13080#discussion_r503617113", "createdAt": "2020-10-13T01:30:09Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -19,21 +19,21 @@\n \n For internal use only; no backwards-compatibility guarantees.\n \n-A background caching job is a job that captures events for all capturable\n+A background caching job is a job that records events for all recordable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzQ3OQ=="}, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5NTgzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo0OToyN1rOHgRxOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMTozMDo1MVrOHgSW-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzYwOA==", "bodyText": "recording", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607608", "createdAt": "2020-10-13T00:49:27Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -19,21 +19,21 @@\n \n For internal use only; no backwards-compatibility guarantees.\n \n-A background caching job is a job that captures events for all capturable\n+A background caching job is a job that records events for all recordable\n sources of a given pipeline. With Interactive Beam, one such job is started when\n a pipeline run happens (which produces a main job in contrast to the background\n caching job) and meets the following conditions:\n \n-  #. The pipeline contains capturable sources, configured through\n-     interactive_beam.options.capturable_sources.\n+  #. The pipeline contains recordable sources, configured through\n+     interactive_beam.options.recordable_sources.\n   #. No such background job is running.\n   #. No such background job has completed successfully and the cached events are\n-     still valid (invalidated when capturable sources change in the pipeline).\n+     still valid (invalidated when recordable sources change in the pipeline).\n \n Once started, the background caching job runs asynchronously until it hits some\n-capture limit configured in interactive_beam.options. Meanwhile, the main job\n+record limit configured in interactive_beam.options. Meanwhile, the main job", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYxNzI3Mw==", "bodyText": "Switched from record to recording", "url": "https://github.com/apache/beam/pull/13080#discussion_r503617273", "createdAt": "2020-10-13T01:30:51Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -19,21 +19,21 @@\n \n For internal use only; no backwards-compatibility guarantees.\n \n-A background caching job is a job that captures events for all capturable\n+A background caching job is a job that records events for all recordable\n sources of a given pipeline. With Interactive Beam, one such job is started when\n a pipeline run happens (which produces a main job in contrast to the background\n caching job) and meets the following conditions:\n \n-  #. The pipeline contains capturable sources, configured through\n-     interactive_beam.options.capturable_sources.\n+  #. The pipeline contains recordable sources, configured through\n+     interactive_beam.options.recordable_sources.\n   #. No such background job is running.\n   #. No such background job has completed successfully and the cached events are\n-     still valid (invalidated when capturable sources change in the pipeline).\n+     still valid (invalidated when recordable sources change in the pipeline).\n \n Once started, the background caching job runs asynchronously until it hits some\n-capture limit configured in interactive_beam.options. Meanwhile, the main job\n+record limit configured in interactive_beam.options. Meanwhile, the main job", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzYwOA=="}, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5Njc5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDowNVrOHgRxuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDowNVrOHgRxuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzczNg==", "bodyText": "recording", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607736", "createdAt": "2020-10-13T00:50:05Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -56,7 +56,7 @@ class BackgroundCachingJob(object):\n   \"\"\"A simple abstraction that controls necessary components of a timed and\n   space limited background caching job.\n \n-  A background caching job successfully completes source data capture in 2\n+  A background caching job successfully completes source data record in 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5NzEyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDoxNlrOHgRx6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDoxNlrOHgRx6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzc4NQ==", "bodyText": "recording", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607785", "createdAt": "2020-10-13T00:50:16Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -165,9 +165,9 @@ def is_background_caching_job_needed(user_pipeline):\n   # If this is True, we can invalidate a previous done/running job if there is\n   # one.\n   cache_changed = is_source_to_cache_changed(user_pipeline)\n-  # When capture replay is disabled, cache is always needed for capturable\n+  # When record replay is disabled, cache is always needed for recordable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5Nzc4OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDo0M1rOHgRyRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDo0M1rOHgRyRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzg3OA==", "bodyText": "enable_recording_replay", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607878", "createdAt": "2020-10-13T00:50:43Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -165,9 +165,9 @@ def is_background_caching_job_needed(user_pipeline):\n   # If this is True, we can invalidate a previous done/running job if there is\n   # one.\n   cache_changed = is_source_to_cache_changed(user_pipeline)\n-  # When capture replay is disabled, cache is always needed for capturable\n+  # When record replay is disabled, cache is always needed for recordable\n   # sources (if any).\n-  if need_cache and not ie.current_env().options.enable_capture_replay:\n+  if need_cache and not ie.current_env().options.enable_record_replay:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5Nzk1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDo1NlrOHgRyZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MDo1NlrOHgRyZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzkwOA==", "bodyText": "recording_duration", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607908", "createdAt": "2020-10-13T00:50:56Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -301,13 +301,13 @@ def sizeof_fmt(num, suffix='B'):\n             'In order to have a deterministic replay, a segment of data will '\n             'be recorded from all sources for %s seconds or until a total of '\n             '%s have been written to disk.',\n-            options.capture_duration.total_seconds(),\n-            sizeof_fmt(options.capture_size_limit))\n+            options.record_duration.total_seconds(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5ODA4OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MTowNVrOHgRygw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MTowNVrOHgRygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNzkzOQ==", "bodyText": "recording_size_limit", "url": "https://github.com/apache/beam/pull/13080#discussion_r503607939", "createdAt": "2020-10-13T00:51:05Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -301,13 +301,13 @@ def sizeof_fmt(num, suffix='B'):\n             'In order to have a deterministic replay, a segment of data will '\n             'be recorded from all sources for %s seconds or until a total of '\n             '%s have been written to disk.',\n-            options.capture_duration.total_seconds(),\n-            sizeof_fmt(options.capture_size_limit))\n+            options.record_duration.total_seconds(),\n+            sizeof_fmt(options.record_size_limit))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM5OTcxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MjowMFrOHgRzfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDo1MjowMFrOHgRzfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwODE5MA==", "bodyText": "enable_recording_replay. Basically, if \"capture\" is used as a noun, change it to \"recording\" instead of \"record\", since \"record\" used as a noun usually means an individual record instead of the act of recording. Please check all occurrences.", "url": "https://github.com/apache/beam/pull/13080#discussion_r503608190", "createdAt": "2020-10-13T00:52:00Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -52,98 +53,116 @@\n class Options(interactive_options.InteractiveOptions):\n   \"\"\"Options that guide how Interactive Beam works.\"\"\"\n   @property\n-  def enable_capture_replay(self):\n-    \"\"\"Whether replayable source data capture should be replayed for multiple\n-    PCollection evaluations and pipeline runs as long as the data captured is\n+  def enable_record_replay(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac9772ee7a0b985e2642740e2f5165d4482539fb"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDQ2NjQ5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMTozMzoyNVrOHgSZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMTo1Mzo0OFrOHgSrjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYxNzg1NA==", "bodyText": "background source recording job", "url": "https://github.com/apache/beam/pull/13080#discussion_r503617854", "createdAt": "2020-10-13T01:33:25Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -91,23 +91,23 @@ def recordable_sources(self):\n     return self.capture_control._capturable_sources\n \n   @property\n-  def record_duration(self):\n-    \"\"\"The data record of sources ends as soon as the background caching job\n+  def recording_duration(self):\n+    \"\"\"The data recording of sources ends as soon as the background caching job", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ede36b4bda68503217862450b1c1975234da37"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyMjU0MQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13080#discussion_r503622541", "createdAt": "2020-10-13T01:53:48Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -91,23 +91,23 @@ def recordable_sources(self):\n     return self.capture_control._capturable_sources\n \n   @property\n-  def record_duration(self):\n-    \"\"\"The data record of sources ends as soon as the background caching job\n+  def recording_duration(self):\n+    \"\"\"The data recording of sources ends as soon as the background caching job", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYxNzg1NA=="}, "originalCommit": {"oid": "06ede36b4bda68503217862450b1c1975234da37"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2953, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}