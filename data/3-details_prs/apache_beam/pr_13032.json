{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTYwNTEw", "number": 13032, "title": "[BEAM-11034] Avoid build-up of stateful garbage collection timers for\u2026", "bodyText": "\u2026 GlobalWindow.\nSuch cleanup timers are not needed on the GlobalWindow for DoFn without\n@onWindowExpiration. It is a common pattern for users to use the global\nwindow for stateful processing for full control using state and timers.\nHowever if this is done for stages with unbounded keyspaces, the gc\ntimers build up indefinitely.\nPlease add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-07T10:52:25Z", "url": "https://github.com/apache/beam/pull/13032", "merged": true, "mergeCommit": {"oid": "4d4be219ab151871ebf23849481724e6ad0318d0"}, "closed": true, "closedAt": "2020-10-07T22:07:37Z", "author": {"login": "scwhittle"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQK5LuAH2gAyNDk5MTYwNTEwOmQ5ZmYzMGI3ZjJhOWEwMGU4YzlkMzI3YzIxNzExY2I5OTYwZGExNWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR2ZNAgFqTUwNjc1NDg1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d9ff30b7f2a9a00e8c9d327c21711cb9960da15e", "author": {"user": {"login": "scwhittle", "name": null}}, "url": "https://github.com/apache/beam/commit/d9ff30b7f2a9a00e8c9d327c21711cb9960da15e", "committedDate": "2020-10-07T11:01:32Z", "message": "[BEAM-11034] Avoid build-up of stateful garbage collection timers for GlobalWindow.\n\nSuch cleanup timers are not needed on the GlobalWindow for DoFn without\n@onWindowExpiration. It is a common pattern for users to use the global\nwindow for stateful processing for full control using state and timers.\nHowever if this is done for stages with unbounded keyspaces, the gc\ntimers build up indefinitely."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08d944b7c6168802ffc90748622285da24933b0d", "author": {"user": {"login": "scwhittle", "name": null}}, "url": "https://github.com/apache/beam/commit/08d944b7c6168802ffc90748622285da24933b0d", "committedDate": "2020-10-07T10:24:40Z", "message": "[BEAM-11034] Avoid build-up of stateful garbage collection timers for GlobalWindow.\n\nSuch cleanup timers are not needed on the GlobalWindow for DoFn without\n@onWindowExpiration. It is a common pattern for users to use the global\nwindow for stateful processing for full control using state and timers.\nHowever if this is done for stages with unbounded keyspaces, the gc\ntimers build up indefinitely."}, "afterCommit": {"oid": "d9ff30b7f2a9a00e8c9d327c21711cb9960da15e", "author": {"user": {"login": "scwhittle", "name": null}}, "url": "https://github.com/apache/beam/commit/d9ff30b7f2a9a00e8c9d327c21711cb9960da15e", "committedDate": "2020-10-07T11:01:32Z", "message": "[BEAM-11034] Avoid build-up of stateful garbage collection timers for GlobalWindow.\n\nSuch cleanup timers are not needed on the GlobalWindow for DoFn without\n@onWindowExpiration. It is a common pattern for users to use the global\nwindow for stateful processing for full control using state and timers.\nHowever if this is done for stages with unbounded keyspaces, the gc\ntimers build up indefinitely."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDMzMzQ3", "url": "https://github.com/apache/beam/pull/13032#pullrequestreview-504033347", "createdAt": "2020-10-07T15:57:56Z", "commit": {"oid": "d9ff30b7f2a9a00e8c9d327c21711cb9960da15e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDQ4NDEx", "url": "https://github.com/apache/beam/pull/13032#pullrequestreview-504048411", "createdAt": "2020-10-07T16:14:17Z", "commit": {"oid": "d9ff30b7f2a9a00e8c9d327c21711cb9960da15e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzU0ODUz", "url": "https://github.com/apache/beam/pull/13032#pullrequestreview-506754853", "createdAt": "2020-10-12T16:16:20Z", "commit": {"oid": "d9ff30b7f2a9a00e8c9d327c21711cb9960da15e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoxNjoyMVrOHgFGxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoxNjoyMVrOHgFGxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMDEzMw==", "bodyText": "Re-reading the bug and thinking about your comments, can we eliminate this condition and invoke from some onDrain method?", "url": "https://github.com/apache/beam/pull/13032#discussion_r503400133", "createdAt": "2020-10-12T16:16:21Z", "author": {"login": "kennknowles"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/SimpleParDoFn.java", "diffHunk": "@@ -486,14 +487,23 @@ private void processTimers(\n     for (W window : windowsToCleanup) {\n       // The stepContext is the thing that know if it is batch or streaming, hence\n       // whether state needs to be cleaned up or will simply be discarded so the\n-      // timer can be ignored\n-\n+      // timer can be ignored.\n       Instant cleanupTime = earliestAllowableCleanupTime(window, windowingStrategy);\n-      // if DoFn has OnWindowExpiration then set holds for system timer.\n-      Instant cleanupOutputTimestamp =\n-          fnSignature.onWindowExpiration() == null ? cleanupTime : cleanupTime.minus(1L);\n-      stepContext.setStateCleanupTimer(\n-          CLEANUP_TIMER_ID, window, windowCoder, cleanupTime, cleanupOutputTimestamp);\n+      // Set a cleanup timer for state at the end of the window to trigger onWindowExpiration and\n+      // garbage collect state. We avoid doing this for the global window if there is no window\n+      // expiration set as the state will be up when the pipeline terminates. Setting the timer\n+      // leads to a unbounded growth of timers for pipelines with many unique keys in the global\n+      // window.\n+      if (cleanupTime.isBefore(GlobalWindow.INSTANCE.maxTimestamp())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ff30b7f2a9a00e8c9d327c21711cb9960da15e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2342, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}