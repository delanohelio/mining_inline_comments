{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDcwMjk2", "number": 10843, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMzo1OToxMVrODg5WoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMzo1OToxMVrODg5WoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODIwNzA1OnYy", "diffSide": "RIGHT", "path": "sdks/go/container/boot.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMzo1OToxMVrOFrWx1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMDoxNzoxNVrOFrXFfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAwNjI5NQ==", "bodyText": "Shall we add default values for all the ports so that we avoid passing them whole together in future.", "url": "https://github.com/apache/beam/pull/10843#discussion_r381006295", "createdAt": "2020-02-18T23:59:11Z", "author": {"login": "angoenka"}, "path": "sdks/go/container/boot.go", "diffHunk": "@@ -46,29 +46,42 @@ func main() {\n \tif *id == \"\" {\n \t\tlog.Fatal(\"No id provided.\")\n \t}\n+\tif *provisionEndpoint == \"\" {\n+\t\tlog.Fatal(\"No provision endpoint provided.\")\n+\t}\n+\n+\tctx := grpcx.WriteWorkerID(context.Background(), *id)\n+\n+\tinfo, err := provision.Info(ctx, *provisionEndpoint)\n+\tif err != nil {\n+\t\tlog.Fatalf(\"Failed to obtain provisioning information: %v\", err)\n+\t}\n+\tlog.Printf(\"Provision info:\\n%v\", info)\n+\n+\t// TODO(BEAM-8201): Simplify once flags are no longer used.\n+\tif info.GetLoggingEndpoint().GetUrl() != \"\" {\n+\t\t*loggingEndpoint = info.GetLoggingEndpoint().GetUrl()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7269b2989d78076b02007751d5e3fde51ba5e692"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAxMTMyNg==", "bodyText": "Never mind, I overlooked the empty default.", "url": "https://github.com/apache/beam/pull/10843#discussion_r381011326", "createdAt": "2020-02-19T00:17:15Z", "author": {"login": "angoenka"}, "path": "sdks/go/container/boot.go", "diffHunk": "@@ -46,29 +46,42 @@ func main() {\n \tif *id == \"\" {\n \t\tlog.Fatal(\"No id provided.\")\n \t}\n+\tif *provisionEndpoint == \"\" {\n+\t\tlog.Fatal(\"No provision endpoint provided.\")\n+\t}\n+\n+\tctx := grpcx.WriteWorkerID(context.Background(), *id)\n+\n+\tinfo, err := provision.Info(ctx, *provisionEndpoint)\n+\tif err != nil {\n+\t\tlog.Fatalf(\"Failed to obtain provisioning information: %v\", err)\n+\t}\n+\tlog.Printf(\"Provision info:\\n%v\", info)\n+\n+\t// TODO(BEAM-8201): Simplify once flags are no longer used.\n+\tif info.GetLoggingEndpoint().GetUrl() != \"\" {\n+\t\t*loggingEndpoint = info.GetLoggingEndpoint().GetUrl()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAwNjI5NQ=="}, "originalCommit": {"oid": "7269b2989d78076b02007751d5e3fde51ba5e692"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1992, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}