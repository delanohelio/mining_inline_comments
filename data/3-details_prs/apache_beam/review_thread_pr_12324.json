{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzOTYzODY5", "number": 12324, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo1NzozNFrOEQvEPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo1NzozNFrOEQvEPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTgzODA3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/coders/standard_coders_test.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo1NzozNFrOG1DhlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozMjoyN1rOG1Exeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4NTQ2MA==", "bodyText": "As I understand we can't use the result of ATOMIC_TYPE_TO_PRIMITIVE[schema_pb2.BYTES] because it would result in x = bytes('abc') which would raise an error?", "url": "https://github.com/apache/beam/pull/12324#discussion_r458285460", "createdAt": "2020-07-21T17:57:34Z", "author": {"login": "piotr-szuberski"}, "path": "sdks/python/apache_beam/coders/standard_coders_test.py", "diffHunk": "@@ -81,7 +81,10 @@ def attribute_parser_from_type(type_):\n     # TODO: This should be exhaustive\n     type_info = type_.WhichOneof(\"type_info\")\n     if type_info == \"atomic_type\":\n-      return schemas.ATOMIC_TYPE_TO_PRIMITIVE[type_.atomic_type]\n+      if type_.atomic_type == schema_pb2.BYTES:\n+        return lambda x: x.encode(\"utf-8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6938799d1d4bc5c44843fa86256570395a66ee4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNTkxNA==", "bodyText": "That's right. This is basically the same as the logic here:\n\n  \n    \n      beam/sdks/python/apache_beam/coders/standard_coders_test.py\n    \n    \n        Lines 118 to 121\n      in\n      3b0ba73\n    \n    \n    \n    \n\n        \n          \n           'beam:coder:bytes:v1': lambda x: x.encode('utf-8'), \n        \n\n        \n          \n           'beam:coder:bool:v1': lambda x: x, \n        \n\n        \n          \n           'beam:coder:string_utf8:v1': lambda x: x, \n        \n\n        \n          \n           'beam:coder:varint:v1': lambda x: x, \n        \n    \n  \n\n\nI have a TODO in the code to unify these paths but haven't gotten around to it yet.", "url": "https://github.com/apache/beam/pull/12324#discussion_r458305914", "createdAt": "2020-07-21T18:32:27Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/coders/standard_coders_test.py", "diffHunk": "@@ -81,7 +81,10 @@ def attribute_parser_from_type(type_):\n     # TODO: This should be exhaustive\n     type_info = type_.WhichOneof(\"type_info\")\n     if type_info == \"atomic_type\":\n-      return schemas.ATOMIC_TYPE_TO_PRIMITIVE[type_.atomic_type]\n+      if type_.atomic_type == schema_pb2.BYTES:\n+        return lambda x: x.encode(\"utf-8\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4NTQ2MA=="}, "originalCommit": {"oid": "c6938799d1d4bc5c44843fa86256570395a66ee4"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 890, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}