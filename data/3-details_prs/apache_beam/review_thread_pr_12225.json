{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjUyODIx", "number": 12225, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDo1Mzo0M1rOEN2uLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxMjo0NFrOEN3P1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTYzNTAwOnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDo1Mzo0M1rOGwsNdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzozODo0MlrOGwy2pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwOTE3NQ==", "bodyText": "pwd is a bit unclear as a parameter name.", "url": "https://github.com/apache/beam/pull/12225#discussion_r453709175", "createdAt": "2020-07-13T14:53:43Z", "author": {"login": "tysonjh"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "diffHunk": "@@ -90,9 +91,14 @@\n \n   @Override\n   protected List<MatchResult> match(List<String> specs) throws IOException {\n+    return match(new File(\".\").getAbsolutePath(), specs);\n+  }\n+\n+  @VisibleForTesting\n+  List<MatchResult> match(String pwd, List<String> specs) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc22394883439694b4f15163c91dce503ab84351"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgxODAyMA==", "bodyText": "Changed to baseDir", "url": "https://github.com/apache/beam/pull/12225#discussion_r453818020", "createdAt": "2020-07-13T17:38:42Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "diffHunk": "@@ -90,9 +91,14 @@\n \n   @Override\n   protected List<MatchResult> match(List<String> specs) throws IOException {\n+    return match(new File(\".\").getAbsolutePath(), specs);\n+  }\n+\n+  @VisibleForTesting\n+  List<MatchResult> match(String pwd, List<String> specs) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwOTE3NQ=="}, "originalCommit": {"oid": "bc22394883439694b4f15163c91dce503ab84351"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTcyMTE4OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxMjo0NFrOGwtDbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0NzowMlrOGwzJ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMjk5MA==", "bodyText": "Can you change the relativeFile name to something else? It may actually be an absolute file and that would be confusing.", "url": "https://github.com/apache/beam/pull/12225#discussion_r453722990", "createdAt": "2020-07-13T15:12:44Z", "author": {"login": "tysonjh"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "diffHunk": "@@ -223,12 +229,22 @@ private MatchResult matchOne(String spec) throws IOException {\n     // it considers it an invalid file system pattern. We should use\n     // new File(spec) to avoid such validation.\n     // See https://bugs.openjdk.java.net/browse/JDK-8197918\n-    final File file = new File(spec);\n+    // However, new File(parent, child) resolves absolute `child` in a system-dependent\n+    // way that is generally incorrect, for example new File($PWD, \"/tmp/foo\") resolves\n+    // to $PWD/tmp/foo on many systems, unlike Paths.get($PWD).resolve(\"/tmp/foo\") which\n+    // correctly resolves to \"/tmp/foo\". We add just this one piece of logic here, without\n+    // switching to Paths which could require a rewrite of this module to support\n+    // both Windows and correct file resolution.\n+    // The root cause is that globs are not files but we are using file manipulation libraries\n+    // to work with them.\n+    final File relativeFile = new File(spec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc22394883439694b4f15163c91dce503ab84351"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgyMjkzMw==", "bodyText": "Renamed to specAsFile since basically it is just cramming the string into a File object, and renamed file into absoluteFile since it is now rooted in a base directory unless it was already absolute.", "url": "https://github.com/apache/beam/pull/12225#discussion_r453822933", "createdAt": "2020-07-13T17:47:02Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "diffHunk": "@@ -223,12 +229,22 @@ private MatchResult matchOne(String spec) throws IOException {\n     // it considers it an invalid file system pattern. We should use\n     // new File(spec) to avoid such validation.\n     // See https://bugs.openjdk.java.net/browse/JDK-8197918\n-    final File file = new File(spec);\n+    // However, new File(parent, child) resolves absolute `child` in a system-dependent\n+    // way that is generally incorrect, for example new File($PWD, \"/tmp/foo\") resolves\n+    // to $PWD/tmp/foo on many systems, unlike Paths.get($PWD).resolve(\"/tmp/foo\") which\n+    // correctly resolves to \"/tmp/foo\". We add just this one piece of logic here, without\n+    // switching to Paths which could require a rewrite of this module to support\n+    // both Windows and correct file resolution.\n+    // The root cause is that globs are not files but we are using file manipulation libraries\n+    // to work with them.\n+    final File relativeFile = new File(spec);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMjk5MA=="}, "originalCommit": {"oid": "bc22394883439694b4f15163c91dce503ab84351"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1022, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}