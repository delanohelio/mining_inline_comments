{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMzUzODA5", "number": 11609, "title": "[BEAM-9887] Throw IllegalArgumentException when building Row with logical types with Invalid input", "bodyText": "schema.logicaltypes.FixedBytes logical type expects an argument - the length of the byte[].\nWhen an invalid input value (with length < expectedLength) is provided while building the Row with FixedBytes logical type, IllegalArgumentException is expected. But, the Exception is not thrown. The below code illustrates the behaviour:\n Schema schema = Schema.builder().addLogicalTypeField(\"char\", FixedBytes.of(10)).build();\n byte[] byteArray = {1, 2, 3, 4, 5};\n Row row = Row.withSchema(schema).withFieldValue(\"char\", byteArray).build();\n System.out.println(Arrays.toString(row.getLogicalTypeValue(\"char\", byte[].class)));\n\nThe above code prints \"[1, 2, 3, 4, 5]\" with length 5 to the console, whereas the expected length of FixedBytes, is 10.\nThis PR fixes the issue.\nNegative and Positive Test for FixedBytes Logical type are added.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-05T07:37:40Z", "url": "https://github.com/apache/beam/pull/11609", "merged": true, "mergeCommit": {"oid": "b0932f22fab7cde80f0d32e25ca4ffa8c1bc2307"}, "closed": true, "closedAt": "2020-05-11T19:18:21Z", "author": {"login": "rahul8383"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceTHm7gBqjMzMDM5NTU2MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcedmrLABqjMzMDY0OTM3Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eab9420c108e05b5bc56632dec56ba83655735ca", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/eab9420c108e05b5bc56632dec56ba83655735ca", "committedDate": "2020-05-05T07:33:30Z", "message": "[BEAM-9887] Expected Exception when building Row with logical types with Invalid input"}, "afterCommit": {"oid": "5687c878cd7d6285446f7c914ab2bfdce12d8061", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/5687c878cd7d6285446f7c914ab2bfdce12d8061", "committedDate": "2020-05-05T12:17:54Z", "message": "Fix failed BeamComplexTypeTest.testNullDatetimeFields Test to handle null values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTUzMjU2", "url": "https://github.com/apache/beam/pull/11609#pullrequestreview-405953256", "createdAt": "2020-05-05T16:25:26Z", "commit": {"oid": "5687c878cd7d6285446f7c914ab2bfdce12d8061"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDcwMTgx", "url": "https://github.com/apache/beam/pull/11609#pullrequestreview-406070181", "createdAt": "2020-05-05T18:58:25Z", "commit": {"oid": "5687c878cd7d6285446f7c914ab2bfdce12d8061"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1ODoyNVrOGQ3Upw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTowMDowN1rOGQ3YSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNjgwNw==", "bodyText": "Could you add a test like this but with addValues?", "url": "https://github.com/apache/beam/pull/11609#discussion_r420336807", "createdAt": "2020-05-05T18:58:25Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/logicaltypes/LogicalTypesTest.java", "diffHunk": "@@ -97,4 +99,19 @@ public void testNanosDuration() {\n     assertEquals(duration, row.getLogicalTypeValue(0, NanosDuration.class));\n     assertEquals(durationAsRow, row.getBaseValue(0, Row.class));\n   }\n+\n+  @Test(expected = IllegalArgumentException.class)\n+  public void testFixedBytesIllegalArgument() {\n+    Schema schema = Schema.builder().addLogicalTypeField(\"char\", FixedBytes.of(10)).build();\n+    byte[] byteArrayWithLengthFive = {1, 2, 3, 4, 5};\n+    Row row = Row.withSchema(schema).withFieldValue(\"char\", byteArrayWithLengthFive).build();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5687c878cd7d6285446f7c914ab2bfdce12d8061"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNzczNw==", "bodyText": "Since these tests are really checking Row's verification, I think they would be better in RowTest. Could you move them there?", "url": "https://github.com/apache/beam/pull/11609#discussion_r420337737", "createdAt": "2020-05-05T19:00:07Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/logicaltypes/LogicalTypesTest.java", "diffHunk": "@@ -97,4 +99,19 @@ public void testNanosDuration() {\n     assertEquals(duration, row.getLogicalTypeValue(0, NanosDuration.class));\n     assertEquals(durationAsRow, row.getBaseValue(0, Row.class));\n   }\n+\n+  @Test(expected = IllegalArgumentException.class)\n+  public void testFixedBytesIllegalArgument() {\n+    Schema schema = Schema.builder().addLogicalTypeField(\"char\", FixedBytes.of(10)).build();\n+    byte[] byteArrayWithLengthFive = {1, 2, 3, 4, 5};\n+    Row row = Row.withSchema(schema).withFieldValue(\"char\", byteArrayWithLengthFive).build();\n+  }\n+\n+  @Test\n+  public void testFixedBytes() {\n+    Schema schema = Schema.builder().addLogicalTypeField(\"char\", FixedBytes.of(10)).build();\n+    byte[] byteArray = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n+    Row row = Row.withSchema(schema).withFieldValue(\"char\", byteArray).build();\n+    assertTrue(Arrays.equals(byteArray, row.getLogicalTypeValue(\"char\", byte[].class)));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5687c878cd7d6285446f7c914ab2bfdce12d8061"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5687c878cd7d6285446f7c914ab2bfdce12d8061", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/5687c878cd7d6285446f7c914ab2bfdce12d8061", "committedDate": "2020-05-05T12:17:54Z", "message": "Fix failed BeamComplexTypeTest.testNullDatetimeFields Test to handle null values"}, "afterCommit": {"oid": "7e4e266bd2382f28beb00dbbf4d2a321ec2b17d6", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/7e4e266bd2382f28beb00dbbf4d2a321ec2b17d6", "committedDate": "2020-05-06T00:22:15Z", "message": "Fix failed BeamComplexTypeTest.testNullDatetimeFields Test to handle null values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa350fe65028bf93e8404285f0fdc1925003b0b", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/2aa350fe65028bf93e8404285f0fdc1925003b0b", "committedDate": "2020-05-06T00:32:32Z", "message": "[BEAM-9887] Expected Exception when building Row with logical types with Invalid input"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4566de4f4083f3066b3e129feffdec4f43a06c50", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/4566de4f4083f3066b3e129feffdec4f43a06c50", "committedDate": "2020-05-06T00:32:52Z", "message": "Fix failed BeamComplexTypeTest.testNullDatetimeFields Test to handle null values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e4e266bd2382f28beb00dbbf4d2a321ec2b17d6", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/7e4e266bd2382f28beb00dbbf4d2a321ec2b17d6", "committedDate": "2020-05-06T00:22:15Z", "message": "Fix failed BeamComplexTypeTest.testNullDatetimeFields Test to handle null values"}, "afterCommit": {"oid": "4566de4f4083f3066b3e129feffdec4f43a06c50", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/4566de4f4083f3066b3e129feffdec4f43a06c50", "committedDate": "2020-05-06T00:32:52Z", "message": "Fix failed BeamComplexTypeTest.testNullDatetimeFields Test to handle null values"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4840, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}