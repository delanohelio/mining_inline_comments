{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMzM5Mjc5", "number": 10529, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzozMDoyMVrODqQnwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzozMTo1N1rODqQpWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjM5MTA2OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzozMDoyMVrOF55X8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDoyNzoxN1rOF7Uq_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzE2OA==", "bodyText": "We want to switch this metadata to use options. However you are translating proto option names directly to field names, which means there's no guarantee that these other options won't conflict. Maybe prefix all of these options with something to prevent potential conflict?", "url": "https://github.com/apache/beam/pull/10529#discussion_r396253168", "createdAt": "2020-03-23T07:30:21Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -205,10 +205,12 @@ static Schema getSchema(Descriptors.Descriptor descriptor) {\n         // Store proto field number in metadata.\n         FieldType fieldType =\n             withMetaData(beamFieldTypeFromProtoField(fieldDescriptor), fieldDescriptor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1ODE1MA==", "bodyText": "We want to switch this metadata to use options. However you are translating proto option names directly to field names, which means there's no guarantee that these other options won't conflict. Maybe prefix all of these options with something to prevent potential conflict?\n\nWhat about beam:option:proto:, that would make an proto option vptech.data.v1.description into beam:option:proto:vptech.data.v1.description. Making it a URI format\nbeam:option : fixed prefix for options, proto : for the extension (will be avro for avro), vptech.data.v1 package of the extension and desciption the proto extension field.", "url": "https://github.com/apache/beam/pull/10529#discussion_r396258150", "createdAt": "2020-03-23T07:43:21Z", "author": {"login": "alexvanboxel"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -205,10 +205,12 @@ static Schema getSchema(Descriptors.Descriptor descriptor) {\n         // Store proto field number in metadata.\n         FieldType fieldType =\n             withMetaData(beamFieldTypeFromProtoField(fieldDescriptor), fieldDescriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzE2OA=="}, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5MTgyMg==", "bodyText": "I think Reuven was referring to the metadata that's added in withMetaData, since that's the \"special\" proto metadata", "url": "https://github.com/apache/beam/pull/10529#discussion_r396791822", "createdAt": "2020-03-23T22:21:15Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -205,10 +205,12 @@ static Schema getSchema(Descriptors.Descriptor descriptor) {\n         // Store proto field number in metadata.\n         FieldType fieldType =\n             withMetaData(beamFieldTypeFromProtoField(fieldDescriptor), fieldDescriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzE2OA=="}, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk3NzgxMw==", "bodyText": "Is it, I don't think so... because I told Reuven I would do metadata after this. Still I think it's a good idea... and with your comment I want to revise the URI:\n\nbeam:option:proto:field:vptech.data.v1.description for a proto field option\nbeam:option:proto:message:vptech.data.v1.description for a proto message option\nbeam:option:proto:meta:number for a proto field number\nbeam:option:proto:meta:type_name for a proto type name\n\nWDYT?", "url": "https://github.com/apache/beam/pull/10529#discussion_r396977813", "createdAt": "2020-03-24T08:33:38Z", "author": {"login": "alexvanboxel"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -205,10 +205,12 @@ static Schema getSchema(Descriptors.Descriptor descriptor) {\n         // Store proto field number in metadata.\n         FieldType fieldType =\n             withMetaData(beamFieldTypeFromProtoField(fieldDescriptor), fieldDescriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzE2OA=="}, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NDI1Mg==", "bodyText": "I don't want to force all Beam option names to have a prefix - I think that's the wrong approach. I'm suggesting that we create well-known prefixes for these proto options (when translated to Beam options), so we can distinguish them from other options. The prefixes you suggested sound fine to me.", "url": "https://github.com/apache/beam/pull/10529#discussion_r397464252", "createdAt": "2020-03-24T21:12:42Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -205,10 +205,12 @@ static Schema getSchema(Descriptors.Descriptor descriptor) {\n         // Store proto field number in metadata.\n         FieldType fieldType =\n             withMetaData(beamFieldTypeFromProtoField(fieldDescriptor), fieldDescriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzE2OA=="}, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0ODk5MQ==", "bodyText": "Now all the options are prefix. I moved the removal of the metadata to another ticket, because it's more involved:\n[BEAM-9604] BIP-1: Remove schema metadata usage for Protobuf extension", "url": "https://github.com/apache/beam/pull/10529#discussion_r397748991", "createdAt": "2020-03-25T10:27:17Z", "author": {"login": "alexvanboxel"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -205,10 +205,12 @@ static Schema getSchema(Descriptors.Descriptor descriptor) {\n         // Store proto field number in metadata.\n         FieldType fieldType =\n             withMetaData(beamFieldTypeFromProtoField(fieldDescriptor), fieldDescriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzE2OA=="}, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjM5NTE1OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzozMTo1N1rOF55abQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzozMTo1N1rOF55abQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MzgwNQ==", "bodyText": "As mentioned above, I think we should add a well-known prefix here.", "url": "https://github.com/apache/beam/pull/10529#discussion_r396253805", "createdAt": "2020-03-23T07:31:57Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslator.java", "diffHunk": "@@ -352,4 +354,49 @@ private static FieldType beamFieldTypeFromSingularProtoField(\n     }\n     return fieldType;\n   }\n+\n+  private static Schema.Options getFieldOptions(FieldDescriptor fieldDescriptor) {\n+    return getOptions(fieldDescriptor.getOptions().getAllFields());\n+  }\n+\n+  private static Schema.Options getSchemaOptions(Descriptors.Descriptor descriptor) {\n+    return getOptions(descriptor.getOptions().getAllFields());\n+  }\n+\n+  private static Schema.Options getOptions(Map<FieldDescriptor, Object> allFields) {\n+    Schema.Options.Builder optionsBuilder = Schema.Options.builder();\n+    for (Map.Entry<FieldDescriptor, Object> entry : allFields.entrySet()) {\n+      FieldDescriptor fieldDescriptor = entry.getKey();\n+      FieldType fieldType = beamFieldTypeFromProtoField(fieldDescriptor);\n+\n+      switch (fieldType.getTypeName()) {\n+        case BYTE:\n+        case BYTES:\n+        case INT16:\n+        case INT32:\n+        case INT64:\n+        case DECIMAL:\n+        case FLOAT:\n+        case DOUBLE:\n+        case STRING:\n+        case BOOLEAN:\n+        case LOGICAL_TYPE:\n+        case ROW:\n+        case ARRAY:\n+        case ITERABLE:\n+          Field field = Field.of(\"OPTION\", fieldType);\n+          ProtoDynamicMessageSchema schema = ProtoDynamicMessageSchema.forSchema(Schema.of(field));\n+          optionsBuilder.setOption(\n+              fieldDescriptor.getFullName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5f3bf34fc4d84ff4d004805214e48d9d171add7"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2289, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}