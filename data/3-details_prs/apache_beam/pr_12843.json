{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2OTM2NzU3", "number": 12843, "title": "[BEAM-10895] Support UNNEST an (possibly nested) array field of an struct column", "bodyText": "Currently Beam ZetaSQL only support UNNEST an array column of a table:\ne.g. SELECT * FROM table, UNNEST(table.array_col)\nFrom the ZetaSQL spec, UNNEST should also work on (possibly nested) array field of an struct column:\ne.g. 1: SELECT * FROM table, UNNEST(table.struct_col.array_field)\ne.g. 2: SELECT * FROM table, UNNEST(table.struct_col.struct_field.array_field)\n...\nThis PR gets queries like above working.\nr: @amaliujia @apilloud\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-14T23:07:31Z", "url": "https://github.com/apache/beam/pull/12843", "merged": true, "mergeCommit": {"oid": "8cb6d9dc1b6569407deb4258e02c0d76d3cf3aa4"}, "closed": true, "closedAt": "2020-09-17T02:43:28Z", "author": {"login": "robinyqiu"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI7dQXgH2gAyNDg2OTM2NzU3OjQ2ZmJmZjAyYmU2NmQ5NjdkZjUxNTZmNWYwNTZiYmE4YWVkZjZhMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJnxrngFqTQ5MDIwNDczOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "46fbff02be66d967df5156f5f056bba8aedf6a23", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/46fbff02be66d967df5156f5f056bba8aedf6a23", "committedDate": "2020-09-14T23:04:59Z", "message": "Support UNNEST an (possibly nested) array field of an struct column"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTI4MjA5", "url": "https://github.com/apache/beam/pull/12843#pullrequestreview-489128209", "createdAt": "2020-09-15T21:41:45Z", "commit": {"oid": "46fbff02be66d967df5156f5f056bba8aedf6a23"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTo0MTo0NVrOHSVuHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTo0MTo0NVrOHSVuHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk5MjI4Ng==", "bodyText": "So it looks like guaranteed to have nested row except for the last index? If not better to add validation here.", "url": "https://github.com/apache/beam/pull/12843#discussion_r488992286", "createdAt": "2020-09-15T21:41:45Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/rel/BeamUnnestRel.java", "diffHunk": "@@ -111,31 +112,41 @@ public RelWriter explainTerms(RelWriter pw) {\n       Schema joinedSchema = CalciteUtils.toSchema(getRowType());\n \n       return outer\n-          .apply(ParDo.of(new UnnestFn(joinedSchema, unnestIndex)))\n+          .apply(ParDo.of(new UnnestFn(joinedSchema, unnestIndices)))\n           .setRowSchema(joinedSchema);\n     }\n   }\n \n   private static class UnnestFn extends DoFn<Row, Row> {\n \n     private final Schema outputSchema;\n-    private final int unnestIndex;\n+    private final List<Integer> unnestIndices;\n \n-    private UnnestFn(Schema outputSchema, int unnestIndex) {\n+    private UnnestFn(Schema outputSchema, List<Integer> unnestIndices) {\n       this.outputSchema = outputSchema;\n-      this.unnestIndex = unnestIndex;\n+      this.unnestIndices = unnestIndices;\n     }\n \n     @ProcessElement\n     public void process(@Element Row row, OutputReceiver<Row> out) {\n-\n-      @Nullable Collection<Object> rawValues = row.getArray(unnestIndex);\n+      Row rowWithArrayField = row;\n+      Schema schemaWithArrayField = outputSchema;\n+      for (int i = unnestIndices.size() - 1; i > 0; i--) {\n+        rowWithArrayField = rowWithArrayField.getRow(unnestIndices.get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46fbff02be66d967df5156f5f056bba8aedf6a23"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjA0NzM5", "url": "https://github.com/apache/beam/pull/12843#pullrequestreview-490204739", "createdAt": "2020-09-17T02:43:07Z", "commit": {"oid": "46fbff02be66d967df5156f5f056bba8aedf6a23"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2757, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}