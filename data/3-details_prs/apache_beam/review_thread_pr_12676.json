{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODQyNzk4", "number": 12676, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1MDowNlrOEbyfhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1MDowNlrOEbyfhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTc0Mjc5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/frames.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1MDowNlrOHF7G6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1MDowNlrOHF7G6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk3MzM1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      'aggregate',\n          \n          \n            \n                      'set_index',", "url": "https://github.com/apache/beam/pull/12676#discussion_r475973354", "createdAt": "2020-08-24T23:50:06Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -261,15 +261,21 @@ def __setitem__(self, key, value):\n     else:\n       raise NotImplementedError(key)\n \n+  @frame_base.args_to_kwargs(pd.DataFrame)\n+  @frame_base.populate_defaults(pd.DataFrame)\n+  @frame_base.maybe_inplace\n   def set_index(self, keys, **kwargs):\n     if isinstance(keys, str):\n       keys = [keys]\n     if not set(keys).issubset(self._expr.proxy().columns):\n       raise NotImplementedError(keys)\n-    return self._elementwise(\n-        lambda df: df.set_index(keys, **kwargs),\n-        'set_index',\n-        inplace=kwargs.get('inplace', False))\n+    return frame_base.DeferredFrame.wrap(\n+      expressions.ComputedExpression(\n+          'aggregate',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3deba24d690d8910a30b76f4d8281fd268d18528"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 577, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}