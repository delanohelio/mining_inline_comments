{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MTk3OTQy", "number": 12531, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0MzowOVrOEXWyvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0MzowOVrOEXWyvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTI2MTQyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/worker/bundle_processor.py", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0MzowOVrOG_GoxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODo1NDoyNVrOG_YIJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMjIxMw==", "bodyText": "Can we only use fire_timestamp as hold_timestamp when in event time domain?", "url": "https://github.com/apache/beam/pull/12531#discussion_r468822213", "createdAt": "2020-08-11T19:43:09Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/runners/worker/bundle_processor.py", "diffHunk": "@@ -647,7 +647,7 @@ def set(self, ts):\n         windows=(self._window, ),\n         clear_bit=False,\n         fire_timestamp=ts,\n-        hold_timestamp=self._input_timestamp,\n+        hold_timestamp=ts,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24a2dcef255232012b7bfb29dcee70d3667e89b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2ODg2Ng==", "bodyText": "Do you mean to keep the input timestamp if we have a processing time timer?\nAs far as I'm concerned, the hold/output timestamp is only relevant for event time timers. Processing timers do not operate in event time and thus do not respect this timestamp, no matter what it is set to. Unless there is a good reason for introducing this conditional behavior, I'd keep it as-is.", "url": "https://github.com/apache/beam/pull/12531#discussion_r469068866", "createdAt": "2020-08-12T07:45:26Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/runners/worker/bundle_processor.py", "diffHunk": "@@ -647,7 +647,7 @@ def set(self, ts):\n         windows=(self._window, ),\n         clear_bit=False,\n         fire_timestamp=ts,\n-        hold_timestamp=self._input_timestamp,\n+        hold_timestamp=ts,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMjIxMw=="}, "originalCommit": {"oid": "b24a2dcef255232012b7bfb29dcee70d3667e89b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3MzkwMQ==", "bodyText": "Also noting that having the fire timestamp as the output timestamp is consistent with the Java reference implementation.", "url": "https://github.com/apache/beam/pull/12531#discussion_r469073901", "createdAt": "2020-08-12T07:54:35Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/runners/worker/bundle_processor.py", "diffHunk": "@@ -647,7 +647,7 @@ def set(self, ts):\n         windows=(self._window, ),\n         clear_bit=False,\n         fire_timestamp=ts,\n-        hold_timestamp=self._input_timestamp,\n+        hold_timestamp=ts,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMjIxMw=="}, "originalCommit": {"oid": "b24a2dcef255232012b7bfb29dcee70d3667e89b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwODc3Mg==", "bodyText": "Just saw the thread on the mailing list. I didn't know that the behavior for processing timers is different. I'm unsure whether that makes sense but I'll adjust it to be consistent with Java.", "url": "https://github.com/apache/beam/pull/12531#discussion_r469108772", "createdAt": "2020-08-12T08:54:25Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/runners/worker/bundle_processor.py", "diffHunk": "@@ -647,7 +647,7 @@ def set(self, ts):\n         windows=(self._window, ),\n         clear_bit=False,\n         fire_timestamp=ts,\n-        hold_timestamp=self._input_timestamp,\n+        hold_timestamp=ts,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMjIxMw=="}, "originalCommit": {"oid": "b24a2dcef255232012b7bfb29dcee70d3667e89b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 636, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}