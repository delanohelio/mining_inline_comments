{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMzEzNDg2", "number": 11591, "title": "[BEAM-9801] [cherry-pick] Pass in fire timestamp to timer callback", "bodyText": "Cherry-pick of #11492.\nI had to resolve a minor merge conflict between 325e0f1 and 8de324f.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-01T21:46:41Z", "url": "https://github.com/apache/beam/pull/11591", "merged": true, "mergeCommit": {"oid": "fe15aecd618e0a76960eca76ebc5d17b899b293c"}, "closed": true, "closedAt": "2020-05-04T08:50:38Z", "author": {"login": "ibzib"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdIwlyAH2gAyNDEyMzEzNDg2OjMyNWUwZjExZjBhOGY5NmNmZTBlMWFlZmZmMmExM2I1ODgwNDVkMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd7fKDgFqTQwNDgwNTUzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "325e0f11f0a8f96cfe0e1aefff2a13b588045d08", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/325e0f11f0a8f96cfe0e1aefff2a13b588045d08", "committedDate": "2020-05-01T21:42:12Z", "message": "[BEAM-9801] Pass in fire timestamp and pane info to timer callback\n\nPass in the timestamp to avoid:\n\n```\nINFO:apache_beam.utils.subprocess_server:Caused by: java.lang.RuntimeException: Error received from SDK harness for instruction 4: Traceback (most recent call last):\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 245, in _execute\nINFO:apache_beam.utils.subprocess_server: response = task()\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 302, in <lambda>\nINFO:apache_beam.utils.subprocess_server: lambda: self.create_worker().do_instruction(request), request)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 471, in do_instruction\nINFO:apache_beam.utils.subprocess_server: getattr(request, request_type), request.instruction_id)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 506, in process_bundle\nINFO:apache_beam.utils.subprocess_server: bundle_processor.process_bundle(instruction_id))\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/bundle_processor.py\", line 910, in process_bundle\nINFO:apache_beam.utils.subprocess_server: element.timer_family_id, timer_data)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/operations.py\", line 688, in process_timer\nINFO:apache_beam.utils.subprocess_server: timer_data.fire_timestamp)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 990, in process_user_timer\nINFO:apache_beam.utils.subprocess_server: self._reraise_augmented(exn)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 1043, in _reraise_augmented\nINFO:apache_beam.utils.subprocess_server: raise_with_traceback(new_exn)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 988, in process_user_timer\nINFO:apache_beam.utils.subprocess_server: self.do_fn_invoker.invoke_user_timer(timer_spec, key, window, timestamp)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 517, in invoke_user_timer\nINFO:apache_beam.utils.subprocess_server: self.user_state_context, key, window, timestamp))\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 1093, in process_outputs\nINFO:apache_beam.utils.subprocess_server: for result in results:\nINFO:apache_beam.utils.subprocess_server: File \"/Users/max/Dev/beam/sdks/python/apache_beam/testing/load_tests/pardo_test.py\", line 185, in process_timer\nINFO:apache_beam.utils.subprocess_server: timer.set(0)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/bundle_processor.py\", line 589, in set\nINFO:apache_beam.utils.subprocess_server: self._timer_coder_impl.encode_to_stream(timer, self._output_stream, True)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/coders/coder_impl.py\", line 651, in encode_to_stream\nINFO:apache_beam.utils.subprocess_server: value.hold_timestamp, out, True)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/coders/coder_impl.py\", line 608, in encode_to_stream\nINFO:apache_beam.utils.subprocess_server: millis = value.micros // 1000\nINFO:apache_beam.utils.subprocess_server:AttributeError: 'NoneType' object has no attribute 'micros' [while running 'GenerateLoad']\n```"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990b4eeb887287a91a4cbc8c490acdf595730aef", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/990b4eeb887287a91a4cbc8c490acdf595730aef", "committedDate": "2020-05-01T21:42:43Z", "message": "[BEAM-9733] Repeatedly fire in batch mode until there are no more timers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDIyNTUy", "url": "https://github.com/apache/beam/pull/11591#pullrequestreview-404422552", "createdAt": "2020-05-01T22:01:36Z", "commit": {"oid": "990b4eeb887287a91a4cbc8c490acdf595730aef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowMTozNlrOGPW30Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowMTozNlrOGPW30Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjU2MQ==", "bodyText": "Doesn't it make sense to make this change in batch as well for spark/flink in FlinkExecutableStageFunction and SparkExecutableStageFunction?\nAny watermark based timers should continue to be eligible and continue to fire while in batch while the processing time timers should be dropped.", "url": "https://github.com/apache/beam/pull/11591#discussion_r418756561", "createdAt": "2020-05-01T22:01:36Z", "author": {"login": "lukecwik"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkExecutableStageFunction.java", "diffHunk": "@@ -247,25 +247,27 @@ public void reduce(Iterable<WindowedValue<InputT>> iterable, Collector<RawUnionV\n     timerInternals.advanceSynchronizedProcessingTime(BoundedWindow.TIMESTAMP_MAX_VALUE);\n \n     // Now we fire the timers and process elements generated by timers (which may be timers itself)\n-    try (RemoteBundle bundle =\n-        stageBundleFactory.getBundle(\n-            receiverFactory, timerReceiverFactory, stateRequestHandler, progressHandler)) {\n-\n-      PipelineTranslatorUtils.fireEligibleTimers(\n-          timerInternals,\n-          (KV<String, String> transformAndTimerId, Timer<?> timerValue) -> {\n-            FnDataReceiver<Timer> fnTimerReceiver =\n-                bundle.getTimerReceivers().get(transformAndTimerId);\n-            Preconditions.checkNotNull(\n-                fnTimerReceiver, \"No FnDataReceiver found for %s\", transformAndTimerId);\n-            try {\n-              fnTimerReceiver.accept(timerValue);\n-            } catch (Exception e) {\n-              throw new RuntimeException(\n-                  String.format(Locale.ENGLISH, \"Failed to process timer: %s\", timerValue));\n-            }\n-          },\n-          currentTimerKey);\n+    while (timerInternals.hasPendingTimers()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "990b4eeb887287a91a4cbc8c490acdf595730aef"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e716ddd5e1d6a436a257358f989ea23560d91c8", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/5e716ddd5e1d6a436a257358f989ea23560d91c8", "committedDate": "2020-05-02T11:05:22Z", "message": "[BEAM-9733] Spark: Repeatedly fire in batch mode until there are no more timers"}, "afterCommit": {"oid": "309f2d6706f6cd520f1cffd2fb9627233bf7b612", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/309f2d6706f6cd520f1cffd2fb9627233bf7b612", "committedDate": "2020-05-02T11:36:46Z", "message": "[BEAM-9733] Spark: Repeatedly fire in batch mode until there are no more timers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "309f2d6706f6cd520f1cffd2fb9627233bf7b612", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/309f2d6706f6cd520f1cffd2fb9627233bf7b612", "committedDate": "2020-05-02T11:36:46Z", "message": "[BEAM-9733] Spark: Repeatedly fire in batch mode until there are no more timers"}, "afterCommit": {"oid": "990b4eeb887287a91a4cbc8c490acdf595730aef", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/990b4eeb887287a91a4cbc8c490acdf595730aef", "committedDate": "2020-05-01T21:42:43Z", "message": "[BEAM-9733] Repeatedly fire in batch mode until there are no more timers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9c8ef3d256757ccaca33af75b677354df974814", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/f9c8ef3d256757ccaca33af75b677354df974814", "committedDate": "2020-05-03T17:54:29Z", "message": "Merge pull request #11595: [BEAM-9801] Fire timers set within timers in Spark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4769008e958e80e4336c0edcaad30d6d02cd698d", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/4769008e958e80e4336c0edcaad30d6d02cd698d", "committedDate": "2020-05-03T17:54:33Z", "message": "[BEAM-9874] Support clearing timers in portable batch mode (Spark/Flink)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0ODA1NTMx", "url": "https://github.com/apache/beam/pull/11591#pullrequestreview-404805531", "createdAt": "2020-05-04T08:48:19Z", "commit": {"oid": "4769008e958e80e4336c0edcaad30d6d02cd698d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4144, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}