{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjcxNDYw", "number": 12137, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjozMjo0NVrOEKYTkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjozMjo0NVrOEKYTkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzE5NDQxOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/rabbitmq/src/test/java/org/apache/beam/sdk/io/rabbitmq/RabbitMqIOTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjozMjo0NVrOGrYh8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjozMjo0NVrOGrYh8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0Mzg1Ng==", "bodyText": "nit: I doubt this matters because you only add elements to the received list. but might be safer style to use the same reference instead of calling getReceived() 3 times. Which ensures the exact same snapshot. Up to you if you want to change it.", "url": "https://github.com/apache/beam/pull/12137#discussion_r448143856", "createdAt": "2020-07-01T06:32:45Z", "author": {"login": "ajamato"}, "path": "sdks/java/io/rabbitmq/src/test/java/org/apache/beam/sdk/io/rabbitmq/RabbitMqIOTest.java", "diffHunk": "@@ -396,18 +394,18 @@ public void testWriteQueue() throws Exception {\n       connection = connectionFactory.newConnection();\n       channel = connection.createChannel();\n       channel.queueDeclare(\"TEST\", true, false, false, null);\n-      Consumer consumer = new RabbitMqTestUtils.TestConsumer(channel, received);\n+      RabbitMqTestUtils.TestConsumer consumer = new RabbitMqTestUtils.TestConsumer(channel);\n       channel.basicConsume(\"TEST\", true, consumer);\n \n       p.run();\n \n-      while (received.size() < maxNumRecords) {\n+      while (consumer.getReceived().size() < maxNumRecords) {\n         Thread.sleep(500);\n       }\n \n-      assertEquals(maxNumRecords, received.size());\n+      assertEquals(maxNumRecords, consumer.getReceived().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b871f4ae0fbb6bddddbd4bc2d8791d748c0d3cb"}, "originalPosition": 110}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3404, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}