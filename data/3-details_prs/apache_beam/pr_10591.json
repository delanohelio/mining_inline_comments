{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODk3Nzk2", "number": 10591, "title": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"", "bodyText": "abc.ABCMeta has been removed from this class with a fixme (BEAM-2685), which\nmeans there' no longer any runtime checking of @abc.abstractmethod. However,\nmypy still performs abc.abtractmethod/property checks even if a class does\nnot use abc.ABCMeta (this is a feature that lets you avoid using metaclasses).\nThe problem arises because the beam code is doing a lot of dynamic patching of\nto_runner_api_parameter (see register_pickle_urn), which mypy cannot track, so\nit believes this method is missing.\nWe comment out @abc.abstractmethod, to disable the mypy checks (it's already\ndisabled at runtime by virtue of an earlier change to remove abc.ABCMeta).\nWe change the method to raise NotImplementedError to inform pylint not to trust\nits return value (None) and to get some degree of runtime checking.\nThis is a followup to #9056.\nR: @robertwb\nR: @udim\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-15T00:11:42Z", "url": "https://github.com/apache/beam/pull/10591", "merged": true, "mergeCommit": {"oid": "f7c2e6eb76e0ce7b8d98ed9d4468b4edccf48d87"}, "closed": true, "closedAt": "2020-01-30T01:07:57Z", "author": {"login": "chadrik"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb88zZtAFqTM0NjkyMjYxNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_P9UxgFqTM1MDUyOTAxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTIyNjE2", "url": "https://github.com/apache/beam/pull/10591#pullrequestreview-346922616", "createdAt": "2020-01-22T21:40:50Z", "commit": {"oid": "9cf850e0bd24568fe088a9c226e410a5fde17c2d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMTo0MDo1MFrOFgr8Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMTo0MDo1MFrOFgr8Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODY4Mg==", "bodyText": "Please add a comment here as to why (mypy vs. dynamic patching).", "url": "https://github.com/apache/beam/pull/10591#discussion_r369818682", "createdAt": "2020-01-22T21:40:50Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/utils/urns.py", "diffHunk": "@@ -68,14 +69,14 @@ class RunnerApiFn(object):\n \n   _known_urns = {}  # type: Dict[str, Tuple[Optional[type], ConstructorFn]]\n \n-  @abc.abstractmethod\n+  # @abc.abstractmethod", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cf850e0bd24568fe088a9c226e410a5fde17c2d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eabc7c08c52420f09319244d98c2555dd3bf516c", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/eabc7c08c52420f09319244d98c2555dd3bf516c", "committedDate": "2020-01-22T23:32:59Z", "message": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"\n\nabc.ABCMeta has been removed from this class with a fixme (BEAM-2685), which\nmeans there' no longer any runtime checking of @abc.abstractmethod. However,\nmypy still performs abc.abtractmethod/property checks even if a class does\nnot use abc.ABCMeta (this is a feature that lets you avoid using metaclasses).\n\nThe problem arises because the beam code is doing a lot of dynamic patching of\nto_runner_api_parameter (see register_pickle_urn), which mypy cannot track, so\nit believes this method is missing.\n\nWe comment out @abc.abstractmethod, to disable the mypy checks (it's already\ndisabled at runtime by virtue of an earlier change to remove abc.ABCMeta).\nWe change the method to raise NotImplementedError to inform pylint not to trust\nits return value (None) and to get some degree of runtime checking."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cf850e0bd24568fe088a9c226e410a5fde17c2d", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/9cf850e0bd24568fe088a9c226e410a5fde17c2d", "committedDate": "2020-01-15T00:06:24Z", "message": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"\n\nabc.ABCMeta has been removed from this class with a fixme (BEAM-2685), which\nmeans there' no longer any runtime checking of @abc.abstractmethod. However,\nmypy still performs abc.abtractmethod/property checks even if a class does\nnot use abc.ABCMeta (this is a feature that lets you avoid using metaclasses).\n\nThe problem arises because the beam code is doing a lot of dynamic patching of\nto_runner_api_parameter (see register_pickle_urn), which mypy cannot track, so\nit believes this method is missing.\n\nWe comment out @abc.abstractmethod, to disable the mypy checks (it's already\ndisabled at runtime by virtue of an earlier change to remove abc.ABCMeta).\nWe change the method to raise NotImplementedError to inform pylint not to trust\nits return value (None) and to get some degree of runtime checking."}, "afterCommit": {"oid": "eabc7c08c52420f09319244d98c2555dd3bf516c", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/eabc7c08c52420f09319244d98c2555dd3bf516c", "committedDate": "2020-01-22T23:32:59Z", "message": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"\n\nabc.ABCMeta has been removed from this class with a fixme (BEAM-2685), which\nmeans there' no longer any runtime checking of @abc.abstractmethod. However,\nmypy still performs abc.abtractmethod/property checks even if a class does\nnot use abc.ABCMeta (this is a feature that lets you avoid using metaclasses).\n\nThe problem arises because the beam code is doing a lot of dynamic patching of\nto_runner_api_parameter (see register_pickle_urn), which mypy cannot track, so\nit believes this method is missing.\n\nWe comment out @abc.abstractmethod, to disable the mypy checks (it's already\ndisabled at runtime by virtue of an earlier change to remove abc.ABCMeta).\nWe change the method to raise NotImplementedError to inform pylint not to trust\nits return value (None) and to get some degree of runtime checking."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNTI5MDEy", "url": "https://github.com/apache/beam/pull/10591#pullrequestreview-350529012", "createdAt": "2020-01-30T01:07:43Z", "commit": {"oid": "eabc7c08c52420f09319244d98c2555dd3bf516c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3808, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}