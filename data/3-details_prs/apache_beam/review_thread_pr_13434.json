{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjUzNTU3", "number": 13434, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTozMzoxMFrOFAf8NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzo0MjozOFrOFOQwug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDY3NjM2OnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTozMzoxMFrOH-1LrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTozMzoxMFrOH-1LrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY0NTEwMA==", "bodyText": "As discussed on the list, we specifically don't want to use these for resource preferences.", "url": "https://github.com/apache/beam/pull/13434#discussion_r535645100", "createdAt": "2020-12-03T21:33:10Z", "author": {"login": "robertwb"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -188,6 +188,13 @@ message PTransform {\n   // Transforms that are required to be implemented by a runner must omit this.\n   // All other transforms are required to specify this.\n   string environment_id = 7;\n+\n+  // (Optional) A map from URNs designating a type of annotation, to the\n+  // annotation in binary format. For example, an annotation could indicate\n+  // that this PTransform has specific resource preferences.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7182b154385312282cec6aa8eb1375f914396"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTMwOTMwOnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOToxNDowMFrOH_ec0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOToxNDowMFrOH_ec0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMyMTIzMg==", "bodyText": "I think we should add \"Therefore annotations MUST NOT be used for metadata that can affect correct execution of the transform.\" to to be unambiguous about the intent around this rule. It's easier to relax restrictions than to tighten them up later.", "url": "https://github.com/apache/beam/pull/13434#discussion_r536321232", "createdAt": "2020-12-04T19:14:00Z", "author": {"login": "lostluck"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -188,6 +188,13 @@ message PTransform {\n   // Transforms that are required to be implemented by a runner must omit this.\n   // All other transforms are required to specify this.\n   string environment_id = 7;\n+\n+  // (Optional) A map from URNs designating a type of annotation, to the\n+  // annotation in binary format. For example, an annotation could indicate\n+  // that this PTransform has specific resource preferences.\n+  //\n+  // A runner MAY ignore types of annotations it doesn't understand.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7182b154385312282cec6aa8eb1375f914396"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTgwNjQwOnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/core/graph/fn.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxOTo1MToyM1rOIRkvoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxOTo1MToyM1rOIRkvoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI5ODcyMQ==", "bodyText": "Indirect is a package function, not a method on Value. You'll need to change this up with\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\taf := val.Indirect().FieldByName(\"Annotations\")\n          \n          \n            \n            \t\taf := reflect.Indirect(val).FieldByName(\"Annotations\")\n          \n      \n    \n    \n  \n\nhttps://golang.org/pkg/reflect/#Indirect", "url": "https://github.com/apache/beam/pull/13434#discussion_r555298721", "createdAt": "2021-01-11T19:51:23Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/graph/fn.go", "diffHunk": "@@ -104,6 +106,14 @@ func NewFn(fn interface{}) (*Fn, error) {\n \n \tcase reflect.Struct:\n \t\tmethods := make(map[string]*funcx.Fn)\n+\t\tannotations := make(map[string][]byte)\n+\t\taf := val.Indirect().FieldByName(\"Annotations\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9bf8649e53f7598540c7e42ed5335bb9ded366"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDk0NDgzOnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/core/graph/fn.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzozMTo0NlrOIS6iEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzozMTo0NlrOIS6iEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwNDI3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \treturn f.methods[finishBundleName]f\n          \n          \n            \n            \treturn f.methods[finishBundleName]", "url": "https://github.com/apache/beam/pull/13434#discussion_r556704274", "createdAt": "2021-01-13T17:31:46Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/graph/fn.go", "diffHunk": "@@ -232,7 +242,7 @@ func (f *DoFn) ProcessElementFn() *funcx.Fn {\n \n // FinishBundleFn returns the \"FinishBundle\" function, if present.\n func (f *DoFn) FinishBundleFn() *funcx.Fn {\n-\treturn f.methods[finishBundleName]\n+\treturn f.methods[finishBundleName]f", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ee7784356e42c76cde55b075e3e19ed2464e238"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDk5MDAyOnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/pardo_test.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzo0MjozOFrOIS69ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzo0MjozOFrOIS69ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcxMTMwNg==", "bodyText": "Consider using an Impulse instead, which simplifies the pipe to just the 2 transforms. The element would then be input _ []byte since impulse is traditionally ignored.)\nHowever, I'm not going to worry about it at this juncture, since it would not meaningfully shrink the PR.", "url": "https://github.com/apache/beam/pull/13434#discussion_r556711306", "createdAt": "2021-01-13T17:42:38Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/pardo_test.go", "diffHunk": "@@ -61,3 +71,65 @@ func TestFormatParDoError(t *testing.T) {\n \t\tt.Errorf(\"formatParDoError(testFunction,2,1) = %v, want = %v\", got, want)\n \t}\n }\n+\n+func TestAnnotations(t *testing.T) {\n+\tm := make(map[string][]byte)\n+\tm[\"privacy_property\"] = []byte(\"differential_privacy\")\n+\tdoFn := &AnnotationsFn{Annotations: m}\n+\n+\tp := NewPipeline()\n+\ts := p.Root()\n+\n+\tvalues := [2]int{0, 1}\n+\tcol := CreateList(s, values)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0af4813a368097e1ac659b08accebdaf1e8d12e8"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2674, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}