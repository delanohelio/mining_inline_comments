{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTExNDYw", "number": 11090, "title": "[BEAM-9470] :sdks:java:io:kinesis:test is flaky", "bodyText": "This PR:\n\nFixes a race condition in ShardReadersPoolTest.shouldCallRateLimitPolicy() that was causing intermittent failures.\nModifies ShardReadersPool to ensure that rateLimitPolicy.onSuccess() will always be called when it should be.\nr: @aromanenko-dev\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-10T03:00:25Z", "url": "https://github.com/apache/beam/pull/11090", "merged": true, "mergeCommit": {"oid": "ff3eb69e36346a16deb0a4dd7d5bd6b8ed36f0c7"}, "closed": true, "closedAt": "2020-03-19T12:46:02Z", "author": {"login": "jfarr"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMTynFgFqTM3MjAzMTU4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPLTaFAFqTM3NzY4MzQ1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDMxNTg3", "url": "https://github.com/apache/beam/pull/11090#pullrequestreview-372031587", "createdAt": "2020-03-10T14:56:39Z", "commit": {"oid": "a600145bd91e6fc5f09f6e2967d80fb833e3611d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDo1NjozOVrOF0StLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDo1NjozOVrOF0StLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3Njc0OQ==", "bodyText": "Would you share your thought on in why customRateLimitPolicy did not take [d] even when it took [a, b] and [c]?\nI'd like to know more about the problem in \"the order of concurrent operations\" in this test case.\nhttps://builds.apache.org/job/beam_PreCommit_Java_Commit/10277/testReport/junit/org.apache.beam.sdk.io.kinesis/ShardReadersPoolTest/shouldCallRateLimitPolicy/\n\nArgument(s) are different! Wanted:\ncustomRateLimitPolicy.onSuccess(\n[d]\n);\n-> at org.apache.beam.sdk.io.kinesis.ShardReadersPoolTest.shouldCallRateLimitPolicy(ShardReadersPoolTest.java:330)", "url": "https://github.com/apache/beam/pull/11090#discussion_r390376749", "createdAt": "2020-03-10T14:56:39Z", "author": {"login": "suztomo"}, "path": "sdks/java/io/kinesis/src/test/java/org/apache/beam/sdk/io/kinesis/ShardReadersPoolTest.java", "diffHunk": "@@ -324,10 +325,15 @@ public void shouldCallRateLimitPolicy()\n       }\n     }\n \n+    ArgumentCaptor<List<KinesisRecord>> recordsCaptor = ArgumentCaptor.forClass(List.class);\n+    verify(customRateLimitPolicy, atLeastOnce()).onSuccess(recordsCaptor.capture());\n+    List<List<KinesisRecord>> capturedRecords = recordsCaptor.getAllValues();\n+    assertThat(capturedRecords).contains(\n+        ImmutableList.of(a, b),\n+        singletonList(c),\n+        singletonList(d),\n+        Collections.emptyList()\n+    );\n     verify(customRateLimitPolicy).onThrottle(same(e));\n-    verify(customRateLimitPolicy).onSuccess(eq(ImmutableList.of(a, b)));\n-    verify(customRateLimitPolicy).onSuccess(eq(singletonList(c)));\n-    verify(customRateLimitPolicy).onSuccess(eq(singletonList(d)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a600145bd91e6fc5f09f6e2967d80fb833e3611d"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b73cc84be1cc4e5e745c73a341064c4e81b45f74", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/b73cc84be1cc4e5e745c73a341064c4e81b45f74", "committedDate": "2020-03-11T01:27:02Z", "message": "spotless apply"}, "afterCommit": {"oid": "a5c1521ecb61b9b365ed26d0c3d856f6591ee52e", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/a5c1521ecb61b9b365ed26d0c3d856f6591ee52e", "committedDate": "2020-03-11T01:27:55Z", "message": "fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5c1521ecb61b9b365ed26d0c3d856f6591ee52e", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/a5c1521ecb61b9b365ed26d0c3d856f6591ee52e", "committedDate": "2020-03-11T01:27:55Z", "message": "fix flaky unit test in :sdks:java:io:kinesis"}, "afterCommit": {"oid": "9df4e258ffb21160e511c7234ed75bf0ce2c1ed5", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/9df4e258ffb21160e511c7234ed75bf0ce2c1ed5", "committedDate": "2020-03-11T01:36:46Z", "message": "[BEAM-9470] fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5a11317f7ac7787e088365c70dad2b38651bb54", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/a5a11317f7ac7787e088365c70dad2b38651bb54", "committedDate": "2020-03-12T03:53:45Z", "message": "fix potential postcondition violation"}, "afterCommit": {"oid": "3da0d2d32d7d472e3b1dac18ecd1f914cb905afd", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/3da0d2d32d7d472e3b1dac18ecd1f914cb905afd", "committedDate": "2020-03-12T03:54:19Z", "message": "[BEAM-9470] fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7be59d5df3ff04b0cc92c1d5c4faf3a274bf4875", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/7be59d5df3ff04b0cc92c1d5c4faf3a274bf4875", "committedDate": "2020-03-12T21:30:36Z", "message": "fix race condition"}, "afterCommit": {"oid": "2d5d83b21c2931c817b569567aa651ca02be14a8", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/2d5d83b21c2931c817b569567aa651ca02be14a8", "committedDate": "2020-03-12T21:31:30Z", "message": "[BEAM-9470] fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe1f34635de9ce3adac638b4f5924844f7e4e7b5", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/fe1f34635de9ce3adac638b4f5924844f7e4e7b5", "committedDate": "2020-03-12T21:53:56Z", "message": "add comment"}, "afterCommit": {"oid": "570243d2debec1cc52ad2f3f7ebafccc58ca1f9f", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/570243d2debec1cc52ad2f3f7ebafccc58ca1f9f", "committedDate": "2020-03-12T21:54:38Z", "message": "[BEAM-9470] fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Mzk5ODI3", "url": "https://github.com/apache/beam/pull/11090#pullrequestreview-375399827", "createdAt": "2020-03-16T16:49:25Z", "commit": {"oid": "570243d2debec1cc52ad2f3f7ebafccc58ca1f9f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjo0OToyNlrOF287Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjo1MTo0N1rOF29BOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2NTU3NA==", "bodyText": "Do we really need to pass an empty list of records if it's happen to receive from shardRecordsIterator.readNextBatch()?", "url": "https://github.com/apache/beam/pull/11090#discussion_r393165574", "createdAt": "2020-03-16T16:49:26Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/kinesis/src/main/java/org/apache/beam/sdk/io/kinesis/ShardReadersPool.java", "diffHunk": "@@ -126,9 +126,21 @@ void startReadingShards(Iterable<ShardRecordsIterator> shardRecordsIterators) {\n   private void readLoop(ShardRecordsIterator shardRecordsIterator, RateLimitPolicy rateLimiter) {\n     while (poolOpened.get()) {\n       try {\n-        List<KinesisRecord> kinesisRecords;\n         try {\n-          kinesisRecords = shardRecordsIterator.readNextBatch();\n+          List<KinesisRecord> kinesisRecords = shardRecordsIterator.readNextBatch();\n+          try {\n+            for (KinesisRecord kinesisRecord : kinesisRecords) {\n+              recordsQueue.put(kinesisRecord);\n+              numberOfRecordsInAQueueByShard.get(kinesisRecord.getShardId()).incrementAndGet();\n+            }\n+          } finally {\n+            // One of the paths into this finally block is recordsQueue.put() throwing\n+            // InterruptedException so we should check the thread's interrupted status before\n+            // calling onSuccess().\n+            if (!Thread.currentThread().isInterrupted()) {\n+              rateLimiter.onSuccess(kinesisRecords);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570243d2debec1cc52ad2f3f7ebafccc58ca1f9f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2NzE2Mg==", "bodyText": "Don't you think that rateLimiter should not be shared across different reader threads?", "url": "https://github.com/apache/beam/pull/11090#discussion_r393167162", "createdAt": "2020-03-16T16:51:47Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/kinesis/src/main/java/org/apache/beam/sdk/io/kinesis/ShardReadersPool.java", "diffHunk": "@@ -126,9 +126,21 @@ void startReadingShards(Iterable<ShardRecordsIterator> shardRecordsIterators) {\n   private void readLoop(ShardRecordsIterator shardRecordsIterator, RateLimitPolicy rateLimiter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570243d2debec1cc52ad2f3f7ebafccc58ca1f9f"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9110f3126889e6d000e8cd2df9ab594358d4394d", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/9110f3126889e6d000e8cd2df9ab594358d4394d", "committedDate": "2020-03-19T02:08:45Z", "message": "[BEAM-9470] fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c8eaeea58a540fd528e86a7760d9fb7ee474cd5", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/7c8eaeea58a540fd528e86a7760d9fb7ee474cd5", "committedDate": "2020-03-19T02:08:05Z", "message": "javadoc"}, "afterCommit": {"oid": "9110f3126889e6d000e8cd2df9ab594358d4394d", "author": {"user": {"login": "jfarr1-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/9110f3126889e6d000e8cd2df9ab594358d4394d", "committedDate": "2020-03-19T02:08:45Z", "message": "[BEAM-9470] fix flaky unit test in :sdks:java:io:kinesis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NjgzNDU4", "url": "https://github.com/apache/beam/pull/11090#pullrequestreview-377683458", "createdAt": "2020-03-19T12:45:06Z", "commit": {"oid": "9110f3126889e6d000e8cd2df9ab594358d4394d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3129, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}