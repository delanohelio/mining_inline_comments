{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDM3NjY5", "number": 10662, "title": "[BEAM-9169] [ZetaSQL] Use custom escape method for unparsing", "bodyText": "StringEscapeUtils.escapeJava escapes /, thus creating an invalid ZetaSQL string.\nMore about what GoogleSQL expects to be escaped can be found here: https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#string-and-bytes-literals\nR: @apilloud\nCC: @robinyqiu\nCC: @amaliujia\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-22T20:02:06Z", "url": "https://github.com/apache/beam/pull/10662", "merged": true, "mergeCommit": {"oid": "92ff85cf98b28b5d2206f87d99f43dc46e7ec5ae"}, "closed": true, "closedAt": "2020-01-24T20:58:37Z", "author": {"login": "11moon11"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb87XrlgH2gAyMzY2MDM3NjY5OjhhMzVmNDA4ZjY0MGQwNGMzOGFkNmUyYTQ5N2QzMDQxMGIzYmZmMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9SHrLgH2gAyMzY2MDM3NjY5OjU5NDI3OTVhODk4ODFjNzFjYjMzMjcyOWFmYjA0NTJjOTAzZGY5NjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32", "author": {"user": {"login": "11moon11", "name": "Kirill Kozlov"}}, "url": "https://github.com/apache/beam/commit/8a35f408f640d04c38ad6e2a497d30410b3bff32", "committedDate": "2020-01-22T20:00:39Z", "message": "Use custom escape method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NjE2NTg0", "url": "https://github.com/apache/beam/pull/10662#pullrequestreview-347616584", "createdAt": "2020-01-23T21:22:57Z", "commit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyMjo1N1rOFhNERQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyMzozOVrOFhNFeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTQxMw==", "bodyText": "nit: this function doesn't provide much value, just inline this?", "url": "https://github.com/apache/beam/pull/10662#discussion_r370361413", "createdAt": "2020-01-23T21:22:57Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -69,6 +91,10 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     return super.toSql(program, rex);\n   }\n \n+  private static String escapeForZetaSql(String input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTcyMg==", "bodyText": "Can you open a JIRA for this?", "url": "https://github.com/apache/beam/pull/10662#discussion_r370361722", "createdAt": "2020-01-23T21:23:39Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -34,10 +38,28 @@\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeFamily;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeName;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.util.BitString;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.commons.lang.StringEscapeUtils;\n \n public class BeamSqlUnparseContext extends SqlImplementor.SimpleContext {\n \n+  // More about escape sequences here:\n+  // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical\n+  // No need to escape: \\`, \\?, \\v, \\a, \\ooo, \\xhh (since this in not a thing in Java)\n+  // TODO: Move away from deprecated classes.\n+  // TODO: Escaping single quotes, SqlCharStringLiteral (produced by SqlLiteral.createCharString)\n+  // introduces extra.\n+  private static final CharSequenceTranslator ESCAPE_FOR_ZETA_SQL =\n+      // ZetaSQL specific:\n+      new LookupTranslator(\n+              new String[][] {\n+                {\"\\\"\", \"\\\\\\\"\"},\n+                {\"\\\\\", \"\\\\\\\\\"},\n+              })\n+          // \\b, \\n, \\t, \\f, \\r\n+          .with(new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()))\n+          // TODO: Add support for \\Uhhhhhhhh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5942795a89881c71cb332729afb0452c903df962", "author": {"user": {"login": "11moon11", "name": "Kirill Kozlov"}}, "url": "https://github.com/apache/beam/commit/5942795a89881c71cb332729afb0452c903df962", "committedDate": "2020-01-23T22:30:59Z", "message": "Inline, link JIRA"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3582, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}