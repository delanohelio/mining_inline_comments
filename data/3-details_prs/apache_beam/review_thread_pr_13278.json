{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2OTY5MzY2", "number": 13278, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTowMToyMVrOE2PPcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTowMToyMVrOE2PPcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzA4Mjc0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/io.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTowMToyMVrOHu9cDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxMDo0MFrOHu9qZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwMzE1MQ==", "bodyText": "Will not_implemented_method work here? It's wrapper takes a self parameter:\n\n  \n    \n      beam/sdks/python/apache_beam/dataframe/frame_base.py\n    \n    \n         Line 317\n      in\n      174d2b6\n    \n    \n    \n    \n\n        \n          \n           def wrapper(self, *args, **kwargs):", "url": "https://github.com/apache/beam/pull/13278#discussion_r519003151", "createdAt": "2020-11-06T21:01:21Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/io.py", "diffHunk": "@@ -131,6 +131,11 @@ def _binary_writer(format):\n read_hdf = to_hdf = frame_base.wont_implement_method('random access files')\n \n \n+for name in dir(pd):\n+  if name.startswith('read_') and name not in globals():\n+    globals()[name] = frame_base.not_implemented_method(name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c58721655cc24846c7621d712aee128c0eda9a22"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNjgyMg==", "bodyText": "Good point. Updated to not require self.", "url": "https://github.com/apache/beam/pull/13278#discussion_r519006822", "createdAt": "2020-11-06T21:10:40Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/io.py", "diffHunk": "@@ -131,6 +131,11 @@ def _binary_writer(format):\n read_hdf = to_hdf = frame_base.wont_implement_method('random access files')\n \n \n+for name in dir(pd):\n+  if name.startswith('read_') and name not in globals():\n+    globals()[name] = frame_base.not_implemented_method(name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwMzE1MQ=="}, "originalCommit": {"oid": "c58721655cc24846c7621d712aee128c0eda9a22"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2723, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}