{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODcwNDE2", "number": 13342, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo1NDozN1rOE42S8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTo0MDoxMlrOE5i7Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDQ1Mjk4OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo1NDozN1rOHzAzFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0NjowMVrOH10L7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MjUwMA==", "bodyText": "I noticed that we loop over this. But the gradle property uses a comma-separated list of artifacts. Is this just a mistake or is the idea to have a bunch of separate lists that are checked separately?", "url": "https://github.com/apache/beam/pull/13342#discussion_r523252500", "createdAt": "2020-11-13T21:54:37Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1OTc1OA==", "bodyText": "Comman-separated list: Linkage Checker analyzes a dependency graph generated from the list of artifact, as if a project depends on the list of artifacts. For example, running Linkage Checker for \"io.grpc:grpc-context:1.23.0,com.google.guava:guava:28.0-jre\", checks a dependency graph of a pseudo project that depends on the two artifacts.\nSpace-separated list: different invocation of Linkage Checker.\nI will improve documentation / comments regarding this.", "url": "https://github.com/apache/beam/pull/13342#discussion_r524359758", "createdAt": "2020-11-16T15:37:39Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MjUwMA=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU5NjgzMg==", "bodyText": "Yes, I understand what the comma-separated list and space-separated list do. I just don't understand why we use both. I trust that there is a good reason, but I do not know it. Like if you had two subsets of artifacts that are not expected to work together?\nI would expect that we do want to run all the GCP modules together with the core SDK and, separately, run all the hadoop modules together with the core SDK, etc. Or maybe we just run them all together.\nSo my proposal would be to drop the space-separated and only keep the comma-separated logic. But like I said, I trust there is a reason. So I am just making this proposal so you can tell me why it does not work.", "url": "https://github.com/apache/beam/pull/13342#discussion_r524596832", "createdAt": "2020-11-16T21:21:42Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MjUwMA=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ2NTc2OA==", "bodyText": "I just don't understand why we use both.\n\nIn general, running Linkage Check with multiple artifact may hide linkage errors that exist in dependencies of the one of the individual artifacts. (This is the reason to use space-separated list.)\nOn the other hand, running Linkage Checker with multiple artifacts is quicker than running Linkage Checker for individual artifacts one by one.", "url": "https://github.com/apache/beam/pull/13342#discussion_r525465768", "createdAt": "2020-11-17T20:00:28Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MjUwMA=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MTU5Nw==", "bodyText": "Approving this PR. I see this PR is not dropping the space-separated list.", "url": "https://github.com/apache/beam/pull/13342#discussion_r526191597", "createdAt": "2020-11-18T15:46:01Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MjUwMA=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUxODcwOnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoxODoxOFrOHzBbQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoxODoxOFrOHzBbQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2Mjc4Ng==", "bodyText": "This is so it can be run from a different branch than either of the changes. For example I used this to test this branch. More generally, this is helpful to test any changes to the script. We can run them against known other refs with changes.", "url": "https://github.com/apache/beam/pull/13342#discussion_r523262786", "createdAt": "2020-11-13T22:18:18Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUxOTQ4OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoxODozN1rOHzBbuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoxODozN1rOHzBbuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2MjkwNQ==", "bodyText": "I guess these should actually get rev-parse to check that they are different hashes.", "url": "https://github.com/apache/beam/pull/13342#discussion_r523262905", "createdAt": "2020-11-13T22:18:37Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUyMzY3OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMDoxNlrOHzBd-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMDoxNlrOHzBd-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2MzQ4Mg==", "bodyText": "We could also possibly do a smarter check using git status or ./gradlew model", "url": "https://github.com/apache/beam/pull/13342#discussion_r523263482", "createdAt": "2020-11-13T22:20:16Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUyNDY3OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMDo0OFrOHzBepg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMDo0OFrOHzBepg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2MzY1NA==", "bodyText": "Have a space-separated list of comma-separated lists seems weird. I kept it, but maybe we can simplify?", "url": "https://github.com/apache/beam/pull/13342#discussion_r523263654", "createdAt": "2020-11-13T22:20:48Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)\n+function cleanup() {\n+  git checkout $STARTING_REF\n+}\n+trap cleanup EXIT\n+\n+echo \"Comparing linkage of artifact lists $ARTIFACT_LISTS using baseline $BASELINE_REF and proposal $PROPOSED_REF\"\n+\n+OUTPUT_DIR=build/linkagecheck\n+mkdir -p $OUTPUT_DIR\n+\n ACCUMULATED_RESULT=0\n \n function runLinkageCheck () {\n-  COMMIT=$1\n-  BRANCH=$2\n-  MODE=$3 # \"baseline\" or \"validate\"\n-  for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+  MODE=$1 # \"baseline\" or \"validate\"\n \n-    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+  for ARTIFACT_LIST in $ARTIFACT_LISTS; do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUyODc5OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMjo0MVrOHzBhCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMjo0MVrOHzBhCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDI2Ng==", "bodyText": "The only nontrivial shared code between runLinkageCheck baseline and runLinkageCheck validate is the loop over the artifact lists. So if we didn't need the loop, we may as well just inline the functions.", "url": "https://github.com/apache/beam/pull/13342#discussion_r523264266", "createdAt": "2020-11-13T22:22:41Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -88,29 +102,25 @@ function runLinkageCheck () {\n     fi\n \n     set +e\n-    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT ${BASELINE_OPTION} :checkJavaLinkage\n+    set -x\n+    ./gradlew -Ppublishing -PskipCheckerFramework -PjavaLinkageArtifactIds=$ARTIFACT_LIST ${BASELINE_OPTION} :checkJavaLinkage\n     RESULT=$?\n     set -e\n+    set +x\n     if [ \"$MODE\" = \"validate\" ]; then\n       echo \"`date`:\" \"Done: ${RESULT}\"\n       ACCUMULATED_RESULT=$((ACCUMULATED_RESULT | RESULT))\n     fi\n   done\n }\n \n+echo \"Establishing baseline linkage for $(git rev-parse --abbrev-ref $BASELINE_REF)\"\n+git -c advice.detachedHead=false checkout $BASELINE_REF\n+runLinkageCheck baseline", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUzMDc2OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMzozOFrOHzBiTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNToxODozNFrOH057tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDU5MQ==", "bodyText": "This would be cleaner if the checkLinkage task just put something in build/reports/linkageChecker and this script copied it out to a temp dir for the purpose of comparison.", "url": "https://github.com/apache/beam/pull/13342#discussion_r523264591", "createdAt": "2020-11-13T22:23:38Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)\n+function cleanup() {\n+  git checkout $STARTING_REF\n+}\n+trap cleanup EXIT\n+\n+echo \"Comparing linkage of artifact lists $ARTIFACT_LISTS using baseline $BASELINE_REF and proposal $PROPOSED_REF\"\n+\n+OUTPUT_DIR=build/linkagecheck\n+mkdir -p $OUTPUT_DIR\n+\n ACCUMULATED_RESULT=0\n \n function runLinkageCheck () {\n-  COMMIT=$1\n-  BRANCH=$2\n-  MODE=$3 # \"baseline\" or \"validate\"\n-  for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+  MODE=$1 # \"baseline\" or \"validate\"\n \n-    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+  for ARTIFACT_LIST in $ARTIFACT_LISTS; do\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT_LISTS}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT_LIST}.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MzQwOA==", "bodyText": "Would you elaborate on the benefit of using a temp dir, rather than the build/linkagecheck directory?\nCurrent:\n\ncheckJavaLinkage with baseline mode writes the baseline XML to build/linkagecheck.\ncheckJavaLinkage with validate mode reads the baseline XML to filter existing errors.", "url": "https://github.com/apache/beam/pull/13342#discussion_r524373408", "createdAt": "2020-11-16T15:54:18Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)\n+function cleanup() {\n+  git checkout $STARTING_REF\n+}\n+trap cleanup EXIT\n+\n+echo \"Comparing linkage of artifact lists $ARTIFACT_LISTS using baseline $BASELINE_REF and proposal $PROPOSED_REF\"\n+\n+OUTPUT_DIR=build/linkagecheck\n+mkdir -p $OUTPUT_DIR\n+\n ACCUMULATED_RESULT=0\n \n function runLinkageCheck () {\n-  COMMIT=$1\n-  BRANCH=$2\n-  MODE=$3 # \"baseline\" or \"validate\"\n-  for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+  MODE=$1 # \"baseline\" or \"validate\"\n \n-    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+  for ARTIFACT_LIST in $ARTIFACT_LISTS; do\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT_LISTS}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT_LIST}.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDU5MQ=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU5MzE4MQ==", "bodyText": "It is a stylistic \"nit\" really. My expectation of gradle commands is that they operate on the current source tree. There are exceptions, sure. But my thinking was:\n\n:checkJavaLinkage always writes to build/linkagecheck and the report is the linkage report for the current state of the worktree.\nbeam-linkage-check.sh operates at level above that. It produces the above file for two separate states of the source tree and compares them.\n\nIt is not that important. Just recording my thoughts so we can discuss the script a bit.", "url": "https://github.com/apache/beam/pull/13342#discussion_r524593181", "createdAt": "2020-11-16T21:18:28Z", "author": {"login": "kennknowles"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)\n+function cleanup() {\n+  git checkout $STARTING_REF\n+}\n+trap cleanup EXIT\n+\n+echo \"Comparing linkage of artifact lists $ARTIFACT_LISTS using baseline $BASELINE_REF and proposal $PROPOSED_REF\"\n+\n+OUTPUT_DIR=build/linkagecheck\n+mkdir -p $OUTPUT_DIR\n+\n ACCUMULATED_RESULT=0\n \n function runLinkageCheck () {\n-  COMMIT=$1\n-  BRANCH=$2\n-  MODE=$3 # \"baseline\" or \"validate\"\n-  for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+  MODE=$1 # \"baseline\" or \"validate\"\n \n-    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+  for ARTIFACT_LIST in $ARTIFACT_LISTS; do\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT_LISTS}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT_LIST}.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDU5MQ=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzNzE3NQ==", "bodyText": "Thank you for explanation. The setup came from my preference of handling XML files in Java rather than in shell scripts. (The operation is simple. Linkage Checker is just calculating the difference of two Sets.)", "url": "https://github.com/apache/beam/pull/13342#discussion_r525237175", "createdAt": "2020-11-17T15:18:34Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)\n+function cleanup() {\n+  git checkout $STARTING_REF\n+}\n+trap cleanup EXIT\n+\n+echo \"Comparing linkage of artifact lists $ARTIFACT_LISTS using baseline $BASELINE_REF and proposal $PROPOSED_REF\"\n+\n+OUTPUT_DIR=build/linkagecheck\n+mkdir -p $OUTPUT_DIR\n+\n ACCUMULATED_RESULT=0\n \n function runLinkageCheck () {\n-  COMMIT=$1\n-  BRANCH=$2\n-  MODE=$3 # \"baseline\" or \"validate\"\n-  for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+  MODE=$1 # \"baseline\" or \"validate\"\n \n-    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+  for ARTIFACT_LIST in $ARTIFACT_LISTS; do\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT_LISTS}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT_LIST}.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDU5MQ=="}, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4Nzc2Mjk4OnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTozOTo1M1rOH0EfJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTozOTo1M1rOH0EfJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2MTUwOQ==", "bodyText": "Nice enhancement.", "url": "https://github.com/apache/beam/pull/13342#discussion_r524361509", "createdAt": "2020-11-16T15:39:53Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4Nzc2NDkxOnYy", "diffSide": "RIGHT", "path": "sdks/java/build-tools/beam-linkage-check.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTo0MDoxMlrOH0EgSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTo0MDoxMlrOH0EgSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2MTgwMA==", "bodyText": "Nice!", "url": "https://github.com/apache/beam/pull/13342#discussion_r524361800", "createdAt": "2020-11-16T15:40:12Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -36,46 +36,60 @@ set -o pipefail\n set -e\n \n # These default artifacts are common causes of linkage errors.\n-ARTIFACTS=\"beam-sdks-java-core\n-  beam-sdks-java-io-google-cloud-platform\n-  beam-runners-google-cloud-dataflow-java\n-  beam-sdks-java-io-hadoop-format\"\n-\n-if [ ! -z \"$1\" ]; then\n-  ARTIFACTS=$1\n+DEFAULT_ARTIFACT_LISTS=\" \\\n+  beam-sdks-java-core \\\n+  beam-sdks-java-io-google-cloud-platform \\\n+  beam-runners-google-cloud-dataflow-java \\\n+  beam-sdks-java-io-hadoop-format \\\n+\"\n+\n+BASELINE_REF=$1\n+PROPOSED_REF=$2\n+ARTIFACT_LISTS=$3\n+\n+if [ -z \"$ARTIFACT_LISTS\" ]; then\n+  ARTIFACT_LISTS=$DEFAULT_ARTIFACT_LISTS\n fi\n \n-BRANCH_NAME=$(git symbolic-ref --short HEAD)\n+if [ -z \"$BASELINE_REF\" ] || [ -z \"$PROPOSED_REF\" ] || [ -z \"$ARTIFACT_LISTS\" ] ; then\n+  echo \"Usage: $0 <baseline ref> <proposed ref> [artifact lists]\"\n+  exit 1\n+fi\n \n if [ ! -d buildSrc ]; then\n-  echo \"Please run this script in the Beam project root:\"\n-  echo \"  /bin/bash sdks/java/build-tools/beam-linkage-check.sh\"\n-  exit 1\n+  echo \"Directory 'buildSrc' not found. Please run this script from the root directory of a clone of the Beam git repo.\"\n fi\n \n-if [ \"$BRANCH_NAME\" = \"master\" ]; then\n-  echo \"Please run this script on a branch other than master\"\n+if [ \"$BASELINE_REF\" = \"$PROPOSED_REF\" ]; then\n+  echo \"Baseline and proposed refs are identical; cannot compare their linkage errors!\"\n   exit 1\n fi\n \n-OUTPUT_DIR=build/linkagecheck\n-mkdir -p $OUTPUT_DIR\n-\n if [ ! -z \"$(git diff)\" ]; then\n   echo \"Uncommited change detected. Please commit changes and ensure 'git diff' is empty.\"\n   exit 1\n fi\n \n+STARTING_REF=$(git rev-parse --abbrev-ref HEAD)\n+function cleanup() {\n+  git checkout $STARTING_REF\n+}\n+trap cleanup EXIT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98a15ab4b63c53a8c34c9969b244fe5e439864e"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2807, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}