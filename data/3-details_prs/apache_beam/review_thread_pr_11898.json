{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODIyMjkz", "number": 11898, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMDo0OFrOEB6zDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjozOVrOEB61Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ3Mzc1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMDo0OFrOGeDz3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoyMzo0NlrOGeHJbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3Mjg5NA==", "bodyText": "gcs_location is not a pipeline option. It's a constructor argument. Can you error out as such?", "url": "https://github.com/apache/beam/pull/11898#discussion_r434172894", "createdAt": "2020-06-02T21:00:48Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1702,7 +1702,8 @@ def _get_destination_uri(self, temp_location):\n       logging.debug(\"gcs_location is empty, using temp_location instead\")\n     else:\n       raise ValueError(\n-          '{} requires a GCS location to be provided'.format(\n+          '{} requires a GCS location to be provided. Neither option'\n+          '--gcs_location nor the fallback --temp_location is set.'.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0399f71cf14ecabe7e73b6cd596325bb7ff2ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxMjI0Nw==", "bodyText": "Thanks for the correction, Pablo!\nIt looks like that Java and Python handles the usage of temp location for bigquery io differently.\nJava's Read only uses and validates tempLocation but Write takes customGcsLocation and falls back to tempLocation.\nPython's Read takes gcs_location and falls back to temp_location while Write takes custom_gcs_temp_location and falls back to temp_location.\nIt seems that Java's Read should also allow specifying a gcsLocation.", "url": "https://github.com/apache/beam/pull/11898#discussion_r434212247", "createdAt": "2020-06-02T22:35:32Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1702,7 +1702,8 @@ def _get_destination_uri(self, temp_location):\n       logging.debug(\"gcs_location is empty, using temp_location instead\")\n     else:\n       raise ValueError(\n-          '{} requires a GCS location to be provided'.format(\n+          '{} requires a GCS location to be provided. Neither option'\n+          '--gcs_location nor the fallback --temp_location is set.'.format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3Mjg5NA=="}, "originalCommit": {"oid": "0a0399f71cf14ecabe7e73b6cd596325bb7ff2ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODE3OA==", "bodyText": "hm yeah this was done after the fact. Perhaps file a JIRA to do this, and maybe assign to me. : ) - or Reuven", "url": "https://github.com/apache/beam/pull/11898#discussion_r434218178", "createdAt": "2020-06-02T22:53:36Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1702,7 +1702,8 @@ def _get_destination_uri(self, temp_location):\n       logging.debug(\"gcs_location is empty, using temp_location instead\")\n     else:\n       raise ValueError(\n-          '{} requires a GCS location to be provided'.format(\n+          '{} requires a GCS location to be provided. Neither option'\n+          '--gcs_location nor the fallback --temp_location is set.'.format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3Mjg5NA=="}, "originalCommit": {"oid": "0a0399f71cf14ecabe7e73b6cd596325bb7ff2ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNzU2NA==", "bodyText": "Thanks, created BEAM-10182 for this.", "url": "https://github.com/apache/beam/pull/11898#discussion_r434227564", "createdAt": "2020-06-02T23:23:46Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1702,7 +1702,8 @@ def _get_destination_uri(self, temp_location):\n       logging.debug(\"gcs_location is empty, using temp_location instead\")\n     else:\n       raise ValueError(\n-          '{} requires a GCS location to be provided'.format(\n+          '{} requires a GCS location to be provided. Neither option'\n+          '--gcs_location nor the fallback --temp_location is set.'.format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3Mjg5NA=="}, "originalCommit": {"oid": "0a0399f71cf14ecabe7e73b6cd596325bb7ff2ea"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ3ODIyOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjoxMlrOGeD2lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjoxMlrOGeD2lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzU5MA==", "bodyText": "Java also has the ability to provide a custom gcs location. Can you document it as well?\n\n  \n    \n      beam/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java\n    \n    \n        Lines 2314 to 2317\n      in\n      0a0399f\n    \n    \n    \n    \n\n        \n          \n           public Write<T> withCustomGcsTempLocation(ValueProvider<String> customGcsTempLocation) { \n        \n\n        \n          \n             checkArgument(customGcsTempLocation != null, \"customGcsTempLocation can not be null\"); \n        \n\n        \n          \n             return toBuilder().setCustomGcsTempLocation(customGcsTempLocation).build(); \n        \n\n        \n          \n           }", "url": "https://github.com/apache/beam/pull/11898#discussion_r434173590", "createdAt": "2020-06-02T21:02:12Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "diffHunk": "@@ -941,7 +941,8 @@ public void validate(PipelineOptions options) {\n         String tempLocation = bqOptions.getTempLocation();\n         checkArgument(\n             !Strings.isNullOrEmpty(tempLocation),\n-            \"BigQueryIO.Read needs a GCS temp location to store temp files.\");\n+            \"BigQueryIO.Read needs a GCS temp location to store temp files.\"\n+                + \"This can be set with option --tempLocation.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0399f71cf14ecabe7e73b6cd596325bb7ff2ea"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ3OTU5OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BatchLoads.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjozOVrOGeD3dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjozOVrOGeD3dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzgxNQ==", "bodyText": "Please document customGcs location method as well. Thanks!", "url": "https://github.com/apache/beam/pull/11898#discussion_r434173815", "createdAt": "2020-06-02T21:02:39Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BatchLoads.java", "diffHunk": "@@ -243,7 +243,8 @@ public void validate(PipelineOptions options) {\n     }\n     checkArgument(\n         !Strings.isNullOrEmpty(tempLocation),\n-        \"BigQueryIO.Write needs a GCS temp location to store temp files.\");\n+        \"BigQueryIO.Write needs a GCS temp location to store temp files.\"\n+            + \"This can be set with option --tempLocation.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0399f71cf14ecabe7e73b6cd596325bb7ff2ea"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3594, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}