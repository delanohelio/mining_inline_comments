{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MzA5MTc0", "number": 13188, "title": "[BEAM-11108] Add a version of TextIO implemented via SDF.", "bodyText": "Pretty straightforward. Read and ReadSdf should be functionally identical, and likewise for ReadAll and ReadAllSdf.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-24T02:17:35Z", "url": "https://github.com/apache/beam/pull/13188", "merged": true, "mergeCommit": {"oid": "ce190e11332469ea59b6c9acf16ee7c673ccefdd"}, "closed": true, "closedAt": "2020-10-29T06:28:09Z", "author": {"login": "youngoli"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVi5W4AH2gAyNTA5MzA5MTc0OjQxZTUyMzA3ODgzYjE5NWVlMWQxYWI3ZWE0ZmMzMDQ0MGE2ZDQzNWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXLOucAH2gAyNTA5MzA5MTc0OmMxYmQ3MDkzOTc2MjI3YTYzYzIwOGY2OTc4YmMxOWU3MjczYzc0ZDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/41e52307883b195ee1d1ab7ea4fc30440a6d435b", "committedDate": "2020-10-24T03:49:04Z", "message": "[BEAM-11108] Add a version of TextIO implemented via SDF.\n\nPretty straightforward. Read and ReadSdf should be functionally identical, and likewise for ReadAll and ReadAllSdf."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14045e8de69b39d06c5e356ae781ef0a7e60e80b", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/14045e8de69b39d06c5e356ae781ef0a7e60e80b", "committedDate": "2020-10-24T02:15:28Z", "message": "[BEAM-11108] Add a version of TextIO implemented via SDF.\n\nPretty straightforward. Read and ReadSdf should be functionally identical, and likewise for ReadAll and ReadAllSdf.\n\nNOTE: This current commit has a change that should not be merged, in textio.go, for testing on Jenkins."}, "afterCommit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/41e52307883b195ee1d1ab7ea4fc30440a6d435b", "committedDate": "2020-10-24T03:49:04Z", "message": "[BEAM-11108] Add a version of TextIO implemented via SDF.\n\nPretty straightforward. Read and ReadSdf should be functionally identical, and likewise for ReadAll and ReadAllSdf."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTI1NDE1", "url": "https://github.com/apache/beam/pull/13188#pullrequestreview-516925415", "createdAt": "2020-10-26T15:55:32Z", "commit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1NTozMlrOHoWZGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1NTozMlrOHoWZGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3MTk2Mg==", "bodyText": "I'm a little surprised this change shouldn't be submitted?", "url": "https://github.com/apache/beam/pull/13188#discussion_r512071962", "createdAt": "2020-10-26T15:55:32Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/io/textio/textio.go", "diffHunk": "@@ -104,7 +104,7 @@ func readFn(ctx context.Context, filename string, emit func(string)) error {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {\n-\t\t\treturn (err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTAwMDgw", "url": "https://github.com/apache/beam/pull/13188#pullrequestreview-517100080", "createdAt": "2020-10-26T19:17:40Z", "commit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOToxNzo0MFrOHoeuvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjo0OTo0N1rOHolPTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwODU3NQ==", "bodyText": "Notionally this kind of helper is a reason to have \"real\" SDF actuation on the Go Direct Runner, so testing the IOs is as simple as running a go direct pipeline.\nThat would be a good candidate for a separate JIRA on the topic as a subtask of  BEAM-11076 if it doesn't already work.", "url": "https://github.com/apache/beam/pull/13188#discussion_r512208575", "createdAt": "2020-10-26T19:17:40Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/io/textio/sdf_test.go", "diffHunk": "@@ -0,0 +1,63 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package textio\n+\n+import (\n+\t\"context\"\n+\t\"testing\"\n+)\n+\n+// TestReadSdf tests that readSdf successfully reads a test text file, and\n+// outputs the correct number of lines for it, even for an exceedingly long\n+// line.\n+func TestReadSdf(t *testing.T) {\n+\tf := \"../../../../data/textio_test.txt\"\n+\tf, size, err := sizeFn(context.Background(), f)\n+\tif err != nil {\n+\t\tt.Fatalf(\"sizing failed: %v\", err)\n+\t}\n+\n+\tlines := fakeReadSdfFn(t, f, size)\n+\twant := 1\n+\tif len(lines) != 1 {\n+\t\tt.Fatalf(\"received %v lines, want %v\", len(lines), want)\n+\t}\n+}\n+\n+// fakeReadSdfFn calls the methods in readSdfFn on a single input to simulate\n+// executing an SDF, and outputs all elements produced by that input.\n+func fakeReadSdfFn(t *testing.T, f string, size int64) []string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxNTIxMg==", "bodyText": "Consider adding a unit test, with the stated example, a \"real world\" example (largely with larger numbers involved, like the 64MB chunks used later in this PR), and edge cases, like exact splits, and off by 1 errors (both sides) etc (to validate that we don't somehow end up with 0 sized splits.)", "url": "https://github.com/apache/beam/pull/13188#discussion_r512315212", "createdAt": "2020-10-26T22:49:47Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/io/rtrackers/offsetrange/offsetrange.go", "diffHunk": "@@ -89,6 +89,28 @@ func (r Restriction) EvenSplits(num int64) (splits []Restriction) {\n \treturn splits\n }\n \n+// SizedSplits splits a restriction into multiple restrictions of the given\n+// size. If the restriction cannot be evenly split, the final restriction will\n+// be the remainder.\n+//\n+// Example: (0, 24) split into size 10s -> {(0, 10), (10, 20), (20, 24)}\n+//\n+// Size should be greater than 0. Otherwise there is no way to split the\n+// restriction and this function will return the original restriction.\n+func (r Restriction) SizedSplits(size int64) (splits []Restriction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e52307883b195ee1d1ab7ea4fc30440a6d435b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d290ea3e7dc8304193e446f1a6d1e3b7a79d224a", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/d290ea3e7dc8304193e446f1a6d1e3b7a79d224a", "committedDate": "2020-10-28T05:29:53Z", "message": "[BEAM-11108] Improved SDF TextIO and OffsetRange tests.\n\nPlus some fixup."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTc3NjI5", "url": "https://github.com/apache/beam/pull/13188#pullrequestreview-518977629", "createdAt": "2020-10-28T18:40:42Z", "commit": {"oid": "d290ea3e7dc8304193e446f1a6d1e3b7a79d224a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxODo0MDo0M1rOHp4eJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxODo0MDo0M1rOHp4eJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY3ODg4Nw==", "bodyText": "Consider adding an exact case too eg.\nStart 7, End 17\nsize 5\n{7, 12}, {12, 17}\nIIUC the implementation correctly.\nIf I understand the", "url": "https://github.com/apache/beam/pull/13188#discussion_r513678887", "createdAt": "2020-10-28T18:40:43Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/io/rtrackers/offsetrange/offsetrange_test.go", "diffHunk": "@@ -63,10 +63,87 @@ func TestRestriction_EvenSplits(t *testing.T) {\n \t\t\t\t\tt.Errorf(\"split restriction [%v, %v] has unexpected size. got: %v, want: %v or %v\",\n \t\t\t\t\t\tsplit.Start, split.End, size, min, min+1)\n \t\t\t\t}\n-\t\t\t\t// Check: All elements are still in a split restrictions. This\n-\t\t\t\t// logic assumes that the splits are returned in order which\n-\t\t\t\t// isn't guaranteed by EvenSplits, but this check is way easier\n-\t\t\t\t// with the assumption.\n+\t\t\t\t// Check: All elements are still in a split restriction and\n+\t\t\t\t// the restrictions are in the appropriate ascending order.\n+\t\t\t\tif split.Start != prevEnd {\n+\t\t\t\t\tt.Errorf(\"restriction range [%v, %v] missing after splits.\",\n+\t\t\t\t\t\tprevEnd, split.Start)\n+\t\t\t\t} else {\n+\t\t\t\t\tprevEnd = split.End\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif prevEnd != r.End {\n+\t\t\t\tt.Errorf(\"restriction range [%v, %v] missing after splits.\",\n+\t\t\t\t\tprevEnd, r.End)\n+\t\t\t}\n+\t\t})\n+\t}\n+}\n+\n+// TestRestriction_SizedSplits tests various splits and checks that they all\n+// follow the contract for SizedSplits. This means that all restrictions match\n+// the given size unless it is a remainder, and that each element is present\n+// in the split restrictions.\n+func TestRestriction_SizedSplits(t *testing.T) {\n+\ttests := []struct {\n+\t\trest Restriction\n+\t\tsize int64\n+\t\twant []Restriction\n+\t}{\n+\t\t{\n+\t\t\trest: Restriction{Start: 0, End: 11},\n+\t\t\tsize: 5,\n+\t\t\twant: []Restriction{{0, 5}, {5, 10}, {10, 11}},\n+\t\t},\n+\t\t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d290ea3e7dc8304193e446f1a6d1e3b7a79d224a"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1bd7093976227a63c208f6978bc19e7273c74d7", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/c1bd7093976227a63c208f6978bc19e7273c74d7", "committedDate": "2020-10-29T05:22:32Z", "message": "[BEAM-11108] Fixup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4968, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}