{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjI0OTUx", "number": 11607, "title": "[BEAM-9430] Fixes the bounds of initial watermark set to estimators instead of raising an error", "bodyText": "Fixes the bounds of initial watermark set to estimators instead of raising an error.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-04T22:48:25Z", "url": "https://github.com/apache/beam/pull/11607", "merged": true, "mergeCommit": {"oid": "b3bc3191ac9e89a6bbb2837a514580e4d4649a7a"}, "closed": true, "closedAt": "2020-05-14T18:46:39Z", "author": {"login": "chamikaramj"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcew09dABqjMzMTA1ODQ1NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchQXwqgFqTQxMTk5NzA4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "091914a8cdbd83454b490ae34cc9240c4466e446", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/091914a8cdbd83454b490ae34cc9240c4466e446", "committedDate": "2020-05-04T22:33:09Z", "message": "Updates the watermark estimators to make sure the returned watermark is within bounds"}, "afterCommit": {"oid": "479c875704d575c488de252ee7d3f370171064b7", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/479c875704d575c488de252ee7d3f370171064b7", "committedDate": "2020-05-06T22:56:50Z", "message": "Fixes the bounds of initial watermark set to estimators instead of raising an error."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODczMDgx", "url": "https://github.com/apache/beam/pull/11607#pullrequestreview-407873081", "createdAt": "2020-05-07T22:11:07Z", "commit": {"oid": "479c875704d575c488de252ee7d3f370171064b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjoxMTowN1rOGSSG-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjoxMTowN1rOGSSG-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgyNDI0OA==", "bodyText": "The bounds are wrong, they should be BoundedWindow.TIMESTAMP_MIN_VALUE and BoundedWindow.TIMESTAMP_MAX_VALUE. This could have been the issue with the timestamp being out of range. If that is the case then I would rather keep the bounds as they were and make setWatermark more restrictive. We should also update the javadoc for setWatermark/currentWatermark (on the interfaces) saying that the value must always be within these bounds.\nI think it makes more sense keep the restriction here and also make the restriction within setWatermark as well so the user gets an error when setting it.", "url": "https://github.com/apache/beam/pull/11607#discussion_r421824248", "createdAt": "2020-05-07T22:11:07Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/splittabledofn/WatermarkEstimators.java", "diffHunk": "@@ -37,14 +37,16 @@\n     private Instant lastReportedWatermark;\n \n     public Manual(Instant watermark) {\n-      this.watermark = checkNotNull(watermark, \"watermark must not be null.\");\n-      if (watermark.isBefore(GlobalWindow.TIMESTAMP_MIN_VALUE)\n-          || watermark.isAfter(GlobalWindow.TIMESTAMP_MAX_VALUE)) {\n-        throw new IllegalArgumentException(\n-            String.format(\n-                \"Provided watermark %s must be within bounds [%s, %s].\",\n-                watermark, GlobalWindow.TIMESTAMP_MIN_VALUE, GlobalWindow.TIMESTAMP_MAX_VALUE));\n+      checkNotNull(watermark, \"watermark must not be null.\");\n+\n+      // Making sure that the watermark is within bounds.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479c875704d575c488de252ee7d3f370171064b7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27353436387d03116dd682da4a75f25854bfae56", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/27353436387d03116dd682da4a75f25854bfae56", "committedDate": "2020-05-14T00:37:00Z", "message": "Ensures that watermark passed to estimator is within bounds.\n\nAlso updates WatermarkEstimator and the test to link to correct class when using constants."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "479c875704d575c488de252ee7d3f370171064b7", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/479c875704d575c488de252ee7d3f370171064b7", "committedDate": "2020-05-06T22:56:50Z", "message": "Fixes the bounds of initial watermark set to estimators instead of raising an error."}, "afterCommit": {"oid": "27353436387d03116dd682da4a75f25854bfae56", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/27353436387d03116dd682da4a75f25854bfae56", "committedDate": "2020-05-14T00:37:00Z", "message": "Ensures that watermark passed to estimator is within bounds.\n\nAlso updates WatermarkEstimator and the test to link to correct class when using constants."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzkyMzU4", "url": "https://github.com/apache/beam/pull/11607#pullrequestreview-411392358", "createdAt": "2020-05-14T00:45:04Z", "commit": {"oid": "27353436387d03116dd682da4a75f25854bfae56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0NTowNFrOGVIT2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0NTowNFrOGVIT2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwOTQzNQ==", "bodyText": "How about moving to parent scope and making static so we can share this method in all three estimators?", "url": "https://github.com/apache/beam/pull/11607#discussion_r424809435", "createdAt": "2020-05-14T00:45:04Z", "author": {"login": "ihji"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/splittabledofn/WatermarkEstimators.java", "diffHunk": "@@ -37,18 +37,23 @@\n     private Instant lastReportedWatermark;\n \n     public Manual(Instant watermark) {\n+      validateWatermark(watermark);\n       this.watermark = checkNotNull(watermark, \"watermark must not be null.\");\n-      if (watermark.isBefore(GlobalWindow.TIMESTAMP_MIN_VALUE)\n-          || watermark.isAfter(GlobalWindow.TIMESTAMP_MAX_VALUE)) {\n+    }\n+\n+    private void validateWatermark(Instant watermark) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27353436387d03116dd682da4a75f25854bfae56"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c", "committedDate": "2020-05-14T01:06:08Z", "message": "Moves the validator to parent."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDE2OTI4", "url": "https://github.com/apache/beam/pull/11607#pullrequestreview-411416928", "createdAt": "2020-05-14T02:06:21Z", "commit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjowNjoyMVrOGVJlFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjowNjoyMVrOGVJlFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMDIyOA==", "bodyText": "I was thinking that this logic would be where we call setWatermark above on line 510\nNote that the initial watermark estimate state is current element timestamp which is always between MIN and MAX timestamp values.", "url": "https://github.com/apache/beam/pull/11607#discussion_r424830228", "createdAt": "2020-05-14T02:06:21Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -537,6 +538,12 @@ public Instant getInitialWatermarkEstimatorState(@Timestamp Instant currentEleme\n     @NewWatermarkEstimator\n     public WatermarkEstimators.Manual newWatermarkEstimator(\n         @WatermarkEstimatorState Instant watermarkEstimatorState) {\n+      // Making sure that the watermark is within bounds.\n+      if (watermarkEstimatorState.isBefore(BoundedWindow.TIMESTAMP_MIN_VALUE)) {\n+        watermarkEstimatorState = BoundedWindow.TIMESTAMP_MIN_VALUE;\n+      } else if (watermarkEstimatorState.isAfter(BoundedWindow.TIMESTAMP_MAX_VALUE)) {\n+        watermarkEstimatorState = BoundedWindow.TIMESTAMP_MAX_VALUE;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDE5MDg5", "url": "https://github.com/apache/beam/pull/11607#pullrequestreview-411419089", "createdAt": "2020-05-14T02:13:22Z", "commit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjoxMzoyMlrOGVJr_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjoxMzoyMlrOGVJr_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMTk5OA==", "bodyText": "It makes more sense to add this method to BoundedWindow as it should apply to a lot more places then just WatermarkEstimators.", "url": "https://github.com/apache/beam/pull/11607#discussion_r424831998", "createdAt": "2020-05-14T02:13:22Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/splittabledofn/WatermarkEstimator.java", "diffHunk": "@@ -44,4 +45,19 @@\n    * <p>The state returned must not be mutated.\n    */\n   WatermarkEstimatorStateT getState();\n+\n+  /**\n+   * Validates that a given watermark is within timestamp min and max bounds.\n+   *\n+   * @param watermark watermark to validate\n+   */\n+  static void ensureWatermarkWithinBounds(Instant watermark) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f8ca4477dd138b1a0687d4748b3ceedef7d105", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/11f8ca4477dd138b1a0687d4748b3ceedef7d105", "committedDate": "2020-05-14T16:31:31Z", "message": "Addresses reviewer comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68fe7c1131db39f05c7527ee05ef85d9403b70cc", "author": {"user": {"login": "chamikaramj", "name": "Chamikara Jayalath"}}, "url": "https://github.com/apache/beam/commit/68fe7c1131db39f05c7527ee05ef85d9403b70cc", "committedDate": "2020-05-14T16:45:47Z", "message": "Addresses reviewer comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTk0Nzg0", "url": "https://github.com/apache/beam/pull/11607#pullrequestreview-411994784", "createdAt": "2020-05-14T16:47:01Z", "commit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjo0NzowMVrOGVlQbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjo0NzozOVrOGVlR9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MzY5NA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/11607#discussion_r425283694", "createdAt": "2020-05-14T16:47:01Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/splittabledofn/WatermarkEstimator.java", "diffHunk": "@@ -44,4 +45,19 @@\n    * <p>The state returned must not be mutated.\n    */\n   WatermarkEstimatorStateT getState();\n+\n+  /**\n+   * Validates that a given watermark is within timestamp min and max bounds.\n+   *\n+   * @param watermark watermark to validate\n+   */\n+  static void ensureWatermarkWithinBounds(Instant watermark) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMTk5OA=="}, "originalCommit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4NDA4NQ==", "bodyText": "Added to both.", "url": "https://github.com/apache/beam/pull/11607#discussion_r425284085", "createdAt": "2020-05-14T16:47:39Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -537,6 +538,12 @@ public Instant getInitialWatermarkEstimatorState(@Timestamp Instant currentEleme\n     @NewWatermarkEstimator\n     public WatermarkEstimators.Manual newWatermarkEstimator(\n         @WatermarkEstimatorState Instant watermarkEstimatorState) {\n+      // Making sure that the watermark is within bounds.\n+      if (watermarkEstimatorState.isBefore(BoundedWindow.TIMESTAMP_MIN_VALUE)) {\n+        watermarkEstimatorState = BoundedWindow.TIMESTAMP_MIN_VALUE;\n+      } else if (watermarkEstimatorState.isAfter(BoundedWindow.TIMESTAMP_MAX_VALUE)) {\n+        watermarkEstimatorState = BoundedWindow.TIMESTAMP_MAX_VALUE;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMDIyOA=="}, "originalCommit": {"oid": "78c4eb0dfb8f91c1020a85ba2ef514a240beaa9c"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTk3MDg2", "url": "https://github.com/apache/beam/pull/11607#pullrequestreview-411997086", "createdAt": "2020-05-14T16:50:01Z", "commit": {"oid": "68fe7c1131db39f05c7527ee05ef85d9403b70cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4830, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}