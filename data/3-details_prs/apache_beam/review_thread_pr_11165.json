{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzEzOTIw", "number": 11165, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDozOTo1OFrODpq4RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0NzoxMVrODprAyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDIwNzQxOnYy", "diffSide": "RIGHT", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDozOTo1OFrOF4_mow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOToyMjozMFrOF5gf0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNjY1OQ==", "bodyText": "Please define string constants and then validate that they match in the static initializer. This allows for the string constants to be used in switch/case statements since they are compile time constants.\nI have pr/11162 which duplicates this effort, which ever goes in second needs to get updated.", "url": "https://github.com/apache/beam/pull/11165#discussion_r395306659", "createdAt": "2020-03-19T20:39:58Z", "author": {"login": "lukecwik"}, "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java", "diffHunk": "@@ -124,6 +124,15 @@\n   public static final String SPLITTABLE_PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS_URN =\n       \"beam:transform:sdf_process_sized_element_and_restrictions:v1\";\n \n+  public static final String REQUIRES_STATEFUL_PROCESSING_URN =\n+      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_STATEFUL_PROCESSING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6072eb4d68f25c31871f64f493d42096c2e6b025"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0NTU4NA==", "bodyText": "That's unfortunate, but I see the pattern. Have to be vigilant to prevent bugs. (Unlikely that these'll be used in switch statements, but consistency is good.)", "url": "https://github.com/apache/beam/pull/11165#discussion_r395845584", "createdAt": "2020-03-20T19:22:30Z", "author": {"login": "robertwb"}, "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java", "diffHunk": "@@ -124,6 +124,15 @@\n   public static final String SPLITTABLE_PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS_URN =\n       \"beam:transform:sdf_process_sized_element_and_restrictions:v1\";\n \n+  public static final String REQUIRES_STATEFUL_PROCESSING_URN =\n+      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_STATEFUL_PROCESSING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNjY1OQ=="}, "originalCommit": {"oid": "6072eb4d68f25c31871f64f493d42096c2e6b025"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDIyMDkzOnYy", "diffSide": "RIGHT", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0NDoxMVrOF4_u_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0NDoxMVrOF4_u_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwODc5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  public void process(ProcessContext ctxt) {}CreateExecutableStageNodeFunction.java\n          \n          \n            \n                                  public void process(ProcessContext ctxt) {}", "url": "https://github.com/apache/beam/pull/11165#discussion_r395308799", "createdAt": "2020-03-19T20:44:11Z", "author": {"login": "lukecwik"}, "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java", "diffHunk": "@@ -115,7 +115,7 @@ public void getEnvironmentPTransform() throws IOException {\n             ParDo.of(\n                     new DoFn<String, String>() {\n                       @ProcessElement\n-                      public void process(ProcessContext ctxt) {}\n+                      public void process(ProcessContext ctxt) {}CreateExecutableStageNodeFunction.java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6072eb4d68f25c31871f64f493d42096c2e6b025"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDIyODc1OnYy", "diffSide": "RIGHT", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0Njo1OVrOF4_0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0Njo1OVrOF4_0SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxMDE1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Components components, Collection<String> requirements, String newIdPrefix) {\n          \n          \n            \n                  Components components, @Nullable Collection<String> requirements, String newIdPrefix) {", "url": "https://github.com/apache/beam/pull/11165#discussion_r395310152", "createdAt": "2020-03-19T20:46:59Z", "author": {"login": "lukecwik"}, "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java", "diffHunk": "@@ -86,25 +91,30 @@ public static SdkComponents create(RunnerApi.Components components) {\n   }\n \n   public static SdkComponents create(PipelineOptions options) {\n-    SdkComponents sdkComponents = new SdkComponents(RunnerApi.Components.getDefaultInstance(), \"\");\n+    SdkComponents sdkComponents =\n+        new SdkComponents(RunnerApi.Components.getDefaultInstance(), null, \"\");\n     PortablePipelineOptions portablePipelineOptions = options.as(PortablePipelineOptions.class);\n     sdkComponents.registerEnvironment(\n         Environments.createOrGetDefaultEnvironment(portablePipelineOptions));\n     return sdkComponents;\n   }\n \n-  private SdkComponents(RunnerApi.Components components, String newIdPrefix) {\n+  private SdkComponents(\n+      Components components, Collection<String> requirements, String newIdPrefix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6072eb4d68f25c31871f64f493d42096c2e6b025"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDIyOTIyOnYy", "diffSide": "RIGHT", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0NzoxMVrOF4_0pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDo0NzoxMVrOF4_0pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxMDI0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void mergeFrom(RunnerApi.Components components, Collection<String> requirements) {\n          \n          \n            \n              public void mergeFrom(RunnerApi.Components components, @Nullable Collection<String> requirements) {", "url": "https://github.com/apache/beam/pull/11165#discussion_r395310246", "createdAt": "2020-03-19T20:47:11Z", "author": {"login": "lukecwik"}, "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java", "diffHunk": "@@ -86,25 +91,30 @@ public static SdkComponents create(RunnerApi.Components components) {\n   }\n \n   public static SdkComponents create(PipelineOptions options) {\n-    SdkComponents sdkComponents = new SdkComponents(RunnerApi.Components.getDefaultInstance(), \"\");\n+    SdkComponents sdkComponents =\n+        new SdkComponents(RunnerApi.Components.getDefaultInstance(), null, \"\");\n     PortablePipelineOptions portablePipelineOptions = options.as(PortablePipelineOptions.class);\n     sdkComponents.registerEnvironment(\n         Environments.createOrGetDefaultEnvironment(portablePipelineOptions));\n     return sdkComponents;\n   }\n \n-  private SdkComponents(RunnerApi.Components components, String newIdPrefix) {\n+  private SdkComponents(\n+      Components components, Collection<String> requirements, String newIdPrefix) {\n     this.newIdPrefix = newIdPrefix;\n+    this.requirements = new HashSet<>();\n \n     if (components == null) {\n-      return;\n+      if (requirements != null) {\n+        this.requirements.addAll(requirements);\n+      }\n+    } else {\n+      mergeFrom(components, requirements);\n     }\n-\n-    mergeFrom(components);\n   }\n \n   /** Merge Components proto into this SdkComponents instance. */\n-  public void mergeFrom(RunnerApi.Components components) {\n+  public void mergeFrom(RunnerApi.Components components, Collection<String> requirements) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6072eb4d68f25c31871f64f493d42096c2e6b025"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1690, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}