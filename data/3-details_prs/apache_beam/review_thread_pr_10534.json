{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNjQyMjg0", "number": 10534, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzoyODowNlrODW7fvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDowNTozOVrODZxjWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzcwMDQ0OnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzoyODowNlrOFb9xgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMDowMzowMlrOFcB3nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2Nzk3MA==", "bodyText": "This was the missing piece. Without this, we can't make progress when a timer has fired.", "url": "https://github.com/apache/beam/pull/10534#discussion_r364867970", "createdAt": "2020-01-09T17:28:06Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -1171,6 +1173,8 @@ private void cancelPendingTimerById(String contextTimerId) throws Exception {\n     void cleanupPendingTimer(TimerData timer) {\n       try {\n         pendingTimersById.remove(getContextTimerId(timer.getTimerId(), timer.getNamespace()));\n+        // Always update watermark hold after a timer has been fired or removed\n+        updateWatermarkHold();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "609c9c45a4038ae4bac7c3409865b54aee948b78"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkyMzg5MA==", "bodyText": "Thanks!  I didn't put a call here, because the way the code is structured that would result in two calls to updateWatermarkHold every time you set a timer. Would it be sufficient to add the call in fireTimer, as it appears that's that path we missed.", "url": "https://github.com/apache/beam/pull/10534#discussion_r364923890", "createdAt": "2020-01-09T19:37:17Z", "author": {"login": "reuvenlax"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -1171,6 +1173,8 @@ private void cancelPendingTimerById(String contextTimerId) throws Exception {\n     void cleanupPendingTimer(TimerData timer) {\n       try {\n         pendingTimersById.remove(getContextTimerId(timer.getTimerId(), timer.getNamespace()));\n+        // Always update watermark hold after a timer has been fired or removed\n+        updateWatermarkHold();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2Nzk3MA=="}, "originalCommit": {"oid": "609c9c45a4038ae4bac7c3409865b54aee948b78"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkzNTA3MQ==", "bodyText": "Yes, that's right. My first thought was to add it in fireTimer, but then I thought I could simplify it further. That led to the duplicate update call when you set the timer. Looks like we have just update the hold on set, delete, and fire, and not for cleanup.", "url": "https://github.com/apache/beam/pull/10534#discussion_r364935071", "createdAt": "2020-01-09T20:03:02Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -1171,6 +1173,8 @@ private void cancelPendingTimerById(String contextTimerId) throws Exception {\n     void cleanupPendingTimer(TimerData timer) {\n       try {\n         pendingTimersById.remove(getContextTimerId(timer.getTimerId(), timer.getNamespace()));\n+        // Always update watermark hold after a timer has been fired or removed\n+        updateWatermarkHold();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2Nzk3MA=="}, "originalCommit": {"oid": "609c9c45a4038ae4bac7c3409865b54aee948b78"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzUyODU4OnYy", "diffSide": "RIGHT", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDowNTozOVrOFgWhng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDowODoxMlrOFgWn3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NzgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Instant currentOutputTimestamp = null;\n          \n          \n            \n                @Nullable private Instant currentOutputTimestamp;", "url": "https://github.com/apache/beam/pull/10534#discussion_r369467806", "createdAt": "2020-01-22T10:05:39Z", "author": {"login": "mxm"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -805,6 +805,7 @@ public void tearDown() {\n     private final Instant currentTimestamp;\n     private final Duration allowedLateness;\n     private final WindowedValue<?> currentElementOrTimer;\n+    private Instant currentOutputTimestamp = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8aa244895d55d0d0c1da0971c2b1696c42632b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2OTQwNg==", "bodyText": "Nit: non-final fields are null by default. The annotation probably helps to indicate the default null value.", "url": "https://github.com/apache/beam/pull/10534#discussion_r369469406", "createdAt": "2020-01-22T10:08:12Z", "author": {"login": "mxm"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -805,6 +805,7 @@ public void tearDown() {\n     private final Instant currentTimestamp;\n     private final Duration allowedLateness;\n     private final WindowedValue<?> currentElementOrTimer;\n+    private Instant currentOutputTimestamp = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NzgwNg=="}, "originalCommit": {"oid": "ec8aa244895d55d0d0c1da0971c2b1696c42632b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2296, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}