{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NjE0MDI2", "number": 11739, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MTo1MVrOD9eRnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MTo1MVrOD9eRnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg1NzU3OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MTo1MVrOGW_TSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTozMjoxMVrOGeuWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODk4NQ==", "bodyText": "It might be better to follow-up with the PR author as to why they added .setIsBoundedInternal(IsBounded.UNBOUNDED) instead and have different variants of runners execute the test (batch/streaming/...).", "url": "https://github.com/apache/beam/pull/11739#discussion_r426758985", "createdAt": "2020-05-18T16:41:51Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java", "diffHunk": "@@ -3539,6 +3539,7 @@ public void onTimer() {}\n     @Category({\n       ValidatesRunner.class,\n       UsesTimersInParDo.class,\n+      UsesUnboundedPCollections.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c50c03331a2941d32ce4449547f1af1c4d77b3a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODMwOA==", "bodyText": "I think it was so that it would run on a streaming runner (especially the Dataflow runner). ValidatesRunner tests that use TestStream don't run on Dataflow today I believe, and we have several other places in our test codebase where this pattern is used.", "url": "https://github.com/apache/beam/pull/11739#discussion_r432878308", "createdAt": "2020-05-30T18:51:26Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java", "diffHunk": "@@ -3539,6 +3539,7 @@ public void onTimer() {}\n     @Category({\n       ValidatesRunner.class,\n       UsesTimersInParDo.class,\n+      UsesUnboundedPCollections.class,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODk4NQ=="}, "originalCommit": {"oid": "2c50c03331a2941d32ce4449547f1af1c4d77b3a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwNjE4Mg==", "bodyText": "I split the test into batch and streaming variants, PTAL", "url": "https://github.com/apache/beam/pull/11739#discussion_r433506182", "createdAt": "2020-06-01T21:42:08Z", "author": {"login": "ibzib"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java", "diffHunk": "@@ -3539,6 +3539,7 @@ public void onTimer() {}\n     @Category({\n       ValidatesRunner.class,\n       UsesTimersInParDo.class,\n+      UsesUnboundedPCollections.class,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODk4NQ=="}, "originalCommit": {"oid": "2c50c03331a2941d32ce4449547f1af1c4d77b3a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg2OTkzOQ==", "bodyText": "ping @lukecwik @reuvenlax", "url": "https://github.com/apache/beam/pull/11739#discussion_r434869939", "createdAt": "2020-06-03T21:32:11Z", "author": {"login": "ibzib"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java", "diffHunk": "@@ -3539,6 +3539,7 @@ public void onTimer() {}\n     @Category({\n       ValidatesRunner.class,\n       UsesTimersInParDo.class,\n+      UsesUnboundedPCollections.class,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODk4NQ=="}, "originalCommit": {"oid": "2c50c03331a2941d32ce4449547f1af1c4d77b3a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3794, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}