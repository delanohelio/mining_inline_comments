{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MDA1NTE1", "number": 12733, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0NDo0N1rOEePITw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTozOToyM1rOEfX_Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTQwNjIzOnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/ExecutableStageDoFnOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0NDo0N1rOHJx1Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0NDo0N1rOHJx1Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxNTY3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // Check if the final watermark was triggered to perform state cleanup for global window\n          \n          \n            \n                  if (potentialOutputWatermark == Long.MAX_VALUE\n          \n          \n            \n                      && currentOutputWatermark < Long.MAX_VALUE\n          \n          \n            \n                      && isStateful) {\n          \n          \n            \n                    cleanupGlobalWindowState();\n          \n          \n            \n                  }\n          \n          \n            \n                  // Check if the final watermark was triggered to perform state cleanup for global window\n          \n          \n            \n                  if (potentialOutputWatermark > BoundedWindow.maxTimestamp().getMillis()\n          \n          \n            \n                      && currentOutputWatermark <= BoundedWindow.maxTimestamp().getMillis()) {\n          \n          \n            \n                    cleanupGlobalWindowState();\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nWould change the condition to specifically target the end of the global window. There is also no need to include the statefulness in the condition because if there is no state, it also won't be cleaned up.", "url": "https://github.com/apache/beam/pull/12733#discussion_r480015675", "createdAt": "2020-08-31T09:44:47Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/ExecutableStageDoFnOperator.java", "diffHunk": "@@ -592,12 +593,37 @@ public long applyOutputWatermarkHold(long currentOutputWatermark, long potential\n         return currentOutputWatermark;\n       }\n     } else {\n+      // Check if the final watermark was triggered to perform state cleanup for global window\n+      if (potentialOutputWatermark == Long.MAX_VALUE\n+          && currentOutputWatermark < Long.MAX_VALUE\n+          && isStateful) {\n+        cleanupGlobalWindowState();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5659941cbd6cc46748450fb08bf3491c7fc5ae67"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzM0MzU0OnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/ExecutableStageDoFnOperator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTozOToyM1rOHLnOKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTozOToyM1rOHLnOKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzODk4NA==", "bodyText": "This logic should be moved to DoFnOperator#emitWatermark. It can then also be simplified.", "url": "https://github.com/apache/beam/pull/12733#discussion_r481938984", "createdAt": "2020-09-02T09:39:23Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/ExecutableStageDoFnOperator.java", "diffHunk": "@@ -592,12 +593,35 @@ public long applyOutputWatermarkHold(long currentOutputWatermark, long potential\n         return currentOutputWatermark;\n       }\n     } else {\n+      // Check if the final watermark was triggered to perform state cleanup for global window\n+      if (potentialOutputWatermark > BoundedWindow.TIMESTAMP_MAX_VALUE.getMillis()\n+          && currentOutputWatermark <= BoundedWindow.TIMESTAMP_MAX_VALUE.getMillis()) {\n+        cleanupGlobalWindowState();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6f4a60edd3ed02839b5b37cdbb29ed137517fae"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 410, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}