{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzE5NTY5", "number": 11598, "title": "[BEAM-9877] Estimate sizes of group-by-key values behind a key lazily only.", "bodyText": "Perform lazy estimation only for such iterables since they can have enormous sizes and size estimates would cause reading the data multiple times.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-04T03:22:55Z", "url": "https://github.com/apache/beam/pull/11598", "merged": true, "mergeCommit": {"oid": "4d38e39f7087a5b2e98d5e8a0667a457dc4df080"}, "closed": true, "closedAt": "2020-05-04T18:50:19Z", "author": {"login": "tudorm"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd2dNkAH2gAyNDEyNzE5NTY5OjU3MzI4OWE4YThiY2YxOWRiOWZmNDg5YmJkODA0ZWIwZTNjMDIzNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceEBQQAFqTQwNTI1MTMwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "573289a8a8bcf19db9ff489bbd804eb0e3c02379", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/573289a8a8bcf19db9ff489bbd804eb0e3c02379", "committedDate": "2020-05-04T02:56:40Z", "message": "Do not attempt to estimate sizes of group-by-key values behind a key; such iterables can have enormous sizes and size estimates would cause reading the data multiple times.  Furthermore, the size of the entire group-by-key collection is already known precisely at read time (and encoded into corresponding counters), which means the estimation is in fact not only expensive but redundant and unnecessary."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cd43d16a907719048f722f16c7b37c846912dc5", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/0cd43d16a907719048f722f16c7b37c846912dc5", "committedDate": "2020-05-04T15:23:22Z", "message": "remove comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "497cd0302ddf04fefd83363d6cf6192b41fc937b", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/497cd0302ddf04fefd83363d6cf6192b41fc937b", "committedDate": "2020-05-04T17:17:51Z", "message": "Make BatchGroupAlsoByWindowViaIteratorsFn extend the ElementByteSizeObservableIterable so that size estimation is lazy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33091d223c5ea6811d97d919ea48251315ed6432", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/33091d223c5ea6811d97d919ea48251315ed6432", "committedDate": "2020-05-04T17:19:00Z", "message": "Make BatchGroupAlsoByWindowViaIteratorsFn extend the ElementByteSizeObservableIterable so that size estimation is lazy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62e4df74ff76f308353bf3049c097a3a3d288bcd", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/62e4df74ff76f308353bf3049c097a3a3d288bcd", "committedDate": "2020-05-04T17:23:26Z", "message": "revert changes to grouping shuffle reader and iterable like coder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc180dd97b4311df3db20186dd747aeff1325b2a", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/fc180dd97b4311df3db20186dd747aeff1325b2a", "committedDate": "2020-05-04T17:26:53Z", "message": "fix merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd9ab00aab02e20f6b19b57436b815fc372acee9", "author": {"user": {"login": "tudorm", "name": null}}, "url": "https://github.com/apache/beam/commit/dd9ab00aab02e20f6b19b57436b815fc372acee9", "committedDate": "2020-05-04T17:28:38Z", "message": "remove obsolete class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjUxMzAw", "url": "https://github.com/apache/beam/pull/11598#pullrequestreview-405251300", "createdAt": "2020-05-04T18:44:41Z", "commit": {"oid": "dd9ab00aab02e20f6b19b57436b815fc372acee9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODo0NDo0MVrOGQNWlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODo0NDo0MVrOGQNWlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0OTE3NA==", "bodyText": "It's odd that ElementByteSizeObservableIterable::iterator adds observers within the method body. I assume this is for historic reasons, since it doesn't seem to do anything now, and the comment documenting references a setObserver method that doesn't exist. Anyway, your change looks fine. But we should consider cleaning this up.\n\n  \n    \n      beam/sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ElementByteSizeObservableIterable.java\n    \n    \n        Lines 49 to 61\n      in\n      6453e85\n    \n    \n    \n    \n\n        \n          \n             /** \n        \n\n        \n          \n              * Returns a new iterator for this iterable. If an observer was set in a previous call to \n        \n\n        \n          \n              * setObserver(), it will observe the iterator returned. \n        \n\n        \n          \n              */ \n        \n\n        \n          \n             @Override \n        \n\n        \n          \n             public InputT iterator() { \n        \n\n        \n          \n               InputT iterator = createIterator(); \n        \n\n        \n          \n               for (Observer observer : observers) { \n        \n\n        \n          \n                 iterator.addObserver(observer); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               observers.clear(); \n        \n\n        \n          \n               return iterator; \n        \n\n        \n          \n             }", "url": "https://github.com/apache/beam/pull/11598#discussion_r419649174", "createdAt": "2020-05-04T18:44:41Z", "author": {"login": "ibzib"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/BatchGroupAlsoByWindowViaIteratorsFn.java", "diffHunk": "@@ -165,12 +168,17 @@ public WindowReiterable(\n     }\n \n     @Override\n-    public Reiterator<V> iterator() {\n+    public WindowReiterator<V> iterator() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd9ab00aab02e20f6b19b57436b815fc372acee9"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4819, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}