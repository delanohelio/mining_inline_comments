{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzU3MDg1", "number": 11179, "title": "[BEAM-3301] Bugfix in DoFn validation.", "bodyText": "Accidentally left a bug in DoFn validation. It was treating main inputs\nas if they could only be FnValues, when they could also be FnIter or\nFnReIter as well, such as in the case of a GBK or CoGBK, which meant\nvalid pipelines were failing validation. This fixes that.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-20T05:16:02Z", "url": "https://github.com/apache/beam/pull/11179", "merged": true, "mergeCommit": {"oid": "2f25e623668386dab122eaeca9b9e20b8b6ab57b"}, "closed": true, "closedAt": "2020-03-20T22:25:07Z", "author": {"login": "youngoli"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPZoWpgFqTM3ODIzOTUzMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPlxj3ABqjMxNTA2NjE4NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjM5NTMy", "url": "https://github.com/apache/beam/pull/11179#pullrequestreview-378239532", "createdAt": "2020-03-20T05:26:28Z", "commit": {"oid": "4c819e412fc0d8bb3b03f60235efa27af81bf58d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNToyNjoyOFrOF5IAZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNToyNjoyOFrOF5IAZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NDMyNg==", "bodyText": "No need to have this exported right now, since we can't make a breaking change later. It's only used in the same package. Let's not expand the user surface unless there are good user usages, as a broad API get confusing.\n\n\nIsKV would be a more precise name, since PCollections are a logical representation of all their data, not actually a source or a sink. They can represent KV type or they aren't.\n\n\nThis isn't checking if it's a KV type, it's checking if it's a Keyed type or not, since it's also checking if it's a CoGBK.\n\n\nSince this is only used in the one place, it's reasonable to move the conditional there instead of adding the one off helper method.\n\n\nI'm always willing to hear other opinions!", "url": "https://github.com/apache/beam/pull/11179#discussion_r395444326", "createdAt": "2020-03-20T05:26:28Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/pcollection.go", "diffHunk": "@@ -60,6 +60,12 @@ func (p PCollection) Type() FullType {\n \treturn p.n.Type()\n }\n \n+// OutputsKV returns whether the output of this PCollection are single value\n+// elements or KV pairs.\n+func (p PCollection) OutputsKV() bool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c819e412fc0d8bb3b03f60235efa27af81bf58d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NzQ3Njk1", "url": "https://github.com/apache/beam/pull/11179#pullrequestreview-378747695", "createdAt": "2020-03-20T19:10:41Z", "commit": {"oid": "4c819e412fc0d8bb3b03f60235efa27af81bf58d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOToxMDo0MVrOF5gLDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOToxMDo0MVrOF5gLDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0MDI3MA==", "bodyText": "...must be a value type..", "url": "https://github.com/apache/beam/pull/11179#discussion_r395840270", "createdAt": "2020-03-20T19:10:41Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/graph/fn.go", "diffHunk": "@@ -446,23 +444,16 @@ func validateMainInputs(fn *Fn, method *funcx.Fn, methodName string, numMainIn m\n \t\treturn err\n \t}\n \n-\t// Check that the first numMainIn inputs are not side inputs (Iters or\n-\t// ReIters). We aren't able to catch singleton side inputs here since\n-\t// they're indistinguishable from main inputs.\n-\tmainInputs := method.Param[pos : pos+int(numMainIn)]\n-\tfor i, p := range mainInputs {\n-\t\tif p.Kind != funcx.FnValue {\n-\t\t\terr := errors.Errorf(\"expected main input parameter but found \"+\n-\t\t\t\t\"side input parameter in position %v\",\n-\t\t\t\tpos+i)\n-\t\t\terr = errors.SetTopLevelMsgf(err,\n-\t\t\t\t\"Method %v in DoFn %v should have all main inputs before side inputs, \"+\n-\t\t\t\t\t\"but a side input (as Iter or ReIter) appears as parameter %v when a \"+\n-\t\t\t\t\t\"main input was expected.\",\n-\t\t\t\tmethodName, fn.Name(), pos+i)\n-\t\t\terr = errors.WithContextf(err, \"method %v\", methodName)\n-\t\t\treturn err\n-\t\t}\n+\t// Check that the first input is not an Iter or ReIter (those aren't valid\n+\t// as the first main input).\n+\tfirst := method.Param[pos].Kind\n+\tif first != funcx.FnValue {\n+\t\terr := errors.New(\"first main input parameter must be value type\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c819e412fc0d8bb3b03f60235efa27af81bf58d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78141f25c49682afae4e7c28a3d2532127834d6c", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/78141f25c49682afae4e7c28a3d2532127834d6c", "committedDate": "2020-03-20T19:35:11Z", "message": "[BEAM-3301] Bugfix in DoFn validation.\n\nAccidentally left a bug in DoFn validation. It was treating main inputs\nas if they could only be FnValues, when they could also be FnIter or\nFnReIter as well, such as in the case of a GBK or CoGBK, which meant\nvalid pipelines were failing validation. This fixes that."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0f3c60634d7677a181179204764683c6ab3bd43", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/f0f3c60634d7677a181179204764683c6ab3bd43", "committedDate": "2020-03-20T19:06:01Z", "message": "[BEAM-3301] Fixup"}, "afterCommit": {"oid": "78141f25c49682afae4e7c28a3d2532127834d6c", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/78141f25c49682afae4e7c28a3d2532127834d6c", "committedDate": "2020-03-20T19:35:11Z", "message": "[BEAM-3301] Bugfix in DoFn validation.\n\nAccidentally left a bug in DoFn validation. It was treating main inputs\nas if they could only be FnValues, when they could also be FnIter or\nFnReIter as well, such as in the case of a GBK or CoGBK, which meant\nvalid pipelines were failing validation. This fixes that."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2878, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}