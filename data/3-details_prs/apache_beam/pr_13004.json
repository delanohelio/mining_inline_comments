{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTM5Njc1", "number": 13004, "title": "[BEAM-7746] Get mypy passing on transforms", "bodyText": "Same as before, but this time for apache_beam.transforms\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-02T21:17:18Z", "url": "https://github.com/apache/beam/pull/13004", "merged": true, "mergeCommit": {"oid": "47a1c6fa209d3d35b7d056b431657bd50a49ca3f"}, "closed": true, "closedAt": "2020-10-15T16:59:36Z", "author": {"login": "chadrik"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOsubzgFqTUwMTQ1MzYwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPprBgABqjM4NDIyNjc3NjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDUzNjAx", "url": "https://github.com/apache/beam/pull/13004#pullrequestreview-501453601", "createdAt": "2020-10-02T21:18:42Z", "commit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMToxODo0M1rOHb74jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMToxODo0M1rOHb74jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1NDczMg==", "bodyText": "upgrading to the latest mypy lets us drop these", "url": "https://github.com/apache/beam/pull/13004#discussion_r499054732", "createdAt": "2020-10-02T21:18:43Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/transforms/combiners.py", "diffHunk": "@@ -968,13 +968,13 @@ def expand(self, pcoll):\n         return (\n             pcoll\n             | core.ParDo(self.add_timestamp).with_output_types(\n-                Tuple[T, TimestampType])  # type: ignore[misc]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDU0MDU0", "url": "https://github.com/apache/beam/pull/13004#pullrequestreview-501454054", "createdAt": "2020-10-02T21:19:45Z", "commit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMToxOTo0NVrOHb756A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMToxOTo0NVrOHb756A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1NTA4MA==", "bodyText": "I split these into two tests to avoid overwriting the same variable with different types, and it seemed better to test smaller units, regardless", "url": "https://github.com/apache/beam/pull/13004#discussion_r499055080", "createdAt": "2020-10-02T21:19:45Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -416,7 +416,7 @@ def test_tuple_combine_fn_without_defaults(self):\n                   max).with_common_input()).without_defaults())\n       assert_that(result, equal_to([(1, 7.0 / 4, 3)]))\n \n-  def test_to_list_and_to_dict(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDU1ODc2", "url": "https://github.com/apache/beam/pull/13004#pullrequestreview-501455876", "createdAt": "2020-10-02T21:23:54Z", "commit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMToyMzo1NFrOHb7_jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMToyMzo1NFrOHb7_jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1NjUyNQ==", "bodyText": "I added a base class so that I could have a return type for UserStateContext.get_timer().  Also see bundle_processor. OutputTimer (at the top of the PR).\nAn alternative to this would be to create a Protocol, but that seemed needlessly complex.", "url": "https://github.com/apache/beam/pull/13004#discussion_r499056525", "createdAt": "2020-10-02T21:23:54Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/transforms/userstate.py", "diffHunk": "@@ -305,23 +323,37 @@ def validate_stateful_dofn(dofn):\n                        (timer_spec, method_name, dofn))\n \n \n-class RuntimeTimer(object):\n+class BaseTimer(object):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "originalPosition": 152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc97fbe36b24faf30d559c12f4448d112a74d7a2", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/fc97fbe36b24faf30d559c12f4448d112a74d7a2", "committedDate": "2020-10-02T21:24:46Z", "message": "Update mypy to 0.782\n\nThis resolves a bunch of spurious errors in the transforms package which would otherwise need to be ignored."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/36724f74b7dd6157d3fdee7093cb2ef7d1c5388d", "committedDate": "2020-10-02T21:25:14Z", "message": "[BEAM-7746] Add type checking to transforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/dba4827d1ceb7034a2f778f5586513a36dc1b7d1", "committedDate": "2020-10-02T21:12:44Z", "message": "[BEAM-7746] Add type checking to transforms"}, "afterCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/36724f74b7dd6157d3fdee7093cb2ef7d1c5388d", "committedDate": "2020-10-02T21:25:14Z", "message": "[BEAM-7746] Add type checking to transforms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzA4NTAy", "url": "https://github.com/apache/beam/pull/13004#pullrequestreview-502308502", "createdAt": "2020-10-05T18:21:24Z", "commit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoyMToyNFrOHcolDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODozNjowN1rOHcpDPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NzAyMA==", "bodyText": "Nice? Does it cause any other issues?", "url": "https://github.com/apache/beam/pull/13004#discussion_r499787020", "createdAt": "2020-10-05T18:21:24Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/combiners.py", "diffHunk": "@@ -968,13 +968,13 @@ def expand(self, pcoll):\n         return (\n             pcoll\n             | core.ParDo(self.add_timestamp).with_output_types(\n-                Tuple[T, TimestampType])  # type: ignore[misc]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1NDczMg=="}, "originalCommit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NzkzNg==", "bodyText": "Is there any advantage to (untyped) typing.Callable?", "url": "https://github.com/apache/beam/pull/13004#discussion_r499787936", "createdAt": "2020-10-05T18:23:03Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/core.py", "diffHunk": "@@ -2394,8 +2399,8 @@ class GroupBy(PTransform):\n   \"\"\"\n   def __init__(\n       self,\n-      *fields,  # type: typing.Union[str, callable]\n-      **kwargs  # type: typing.Union[str, callable]\n+      *fields,  # type: typing.Union[str, typing.Callable]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4ODY0OQ==", "bodyText": "Is it possible to suppress the warning rather than take this branch at runtime-only (which feels odd)?", "url": "https://github.com/apache/beam/pull/13004#discussion_r499788649", "createdAt": "2020-10-05T18:24:29Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/core.py", "diffHunk": "@@ -2465,22 +2470,28 @@ def expand(self, pcoll):\n     return pcoll | Map(lambda x: (self._key_func()(x), x)) | GroupByKey()\n \n \n-_dynamic_named_tuple_cache = {}\n+_dynamic_named_tuple_cache = {\n+}  # type: typing.Dict[typing.Tuple[str, typing.Tuple[str, ...]], typing.Type[tuple]]\n \n \n def _dynamic_named_tuple(type_name, field_names):\n+  # type: (str, typing.Tuple[str, ...]) -> typing.Type[tuple]\n   cache_key = (type_name, field_names)\n   result = _dynamic_named_tuple_cache.get(cache_key)\n   if result is None:\n     import collections\n     result = _dynamic_named_tuple_cache[cache_key] = collections.namedtuple(\n         type_name, field_names)\n-    result.__reduce__ = lambda self: (\n-        _unpickle_dynamic_named_tuple, (type_name, field_names, tuple(self)))\n+    if not typing.TYPE_CHECKING:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4OTYwMg==", "bodyText": "It'll be good to actually start enforcing these type checks so they don't go out of date...", "url": "https://github.com/apache/beam/pull/13004#discussion_r499789602", "createdAt": "2020-10-05T18:26:12Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/environments.py", "diffHunk": "@@ -52,7 +55,7 @@\n from apache_beam.utils import proto_utils\n \n if TYPE_CHECKING:\n-  from apache_beam.options.pipeline_options import PortablePipelineOptions\n+  from apache_beam.options.pipeline_options import PortableOptions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MDkxNA==", "bodyText": "T?", "url": "https://github.com/apache/beam/pull/13004#discussion_r499790914", "createdAt": "2020-10-05T18:28:45Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/stats.py", "diffHunk": "@@ -426,14 +432,15 @@ def __next__(self):\n     return QuantileBufferIterator(self.elements, self.weighted, self.weight)\n \n \n-class _QuantileState(object):\n+class _QuantileState(Generic[T]):\n   \"\"\"\n   Compact summarization of a collection on which quantiles can be estimated.\n   \"\"\"\n-  min_val = None  # Holds smallest item in the list\n-  max_val = None  # Holds largest item in the list\n+  min_val = None  # type: Any  # Holds smallest item in the list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjE4NQ==", "bodyText": "This is good.", "url": "https://github.com/apache/beam/pull/13004#discussion_r499792185", "createdAt": "2020-10-05T18:31:02Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/userstate.py", "diffHunk": "@@ -305,23 +323,37 @@ def validate_stateful_dofn(dofn):\n                        (timer_spec, method_name, dofn))\n \n \n-class RuntimeTimer(object):\n+class BaseTimer(object):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1NjUyNQ=="}, "originalCommit": {"oid": "dba4827d1ceb7034a2f778f5586513a36dc1b7d1"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5Mjg5Mw==", "bodyText": "This should be a Coder[BoundedWindow].  We could even make WindowFn parameterized by the window type, and restrict this further.", "url": "https://github.com/apache/beam/pull/13004#discussion_r499792893", "createdAt": "2020-10-05T18:32:30Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/window.py", "diffHunk": "@@ -164,14 +168,19 @@ def merge(self, merge_context):\n     raise NotImplementedError\n \n   def is_merging(self):\n+    # type: () -> bool\n+\n     \"\"\"Returns whether this WindowFn merges windows.\"\"\"\n     return True\n \n   @abc.abstractmethod\n   def get_window_coder(self):\n+    # type: () -> coders.Coder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5NDc0OA==", "bodyText": "PythonFormatter needs another pass here.", "url": "https://github.com/apache/beam/pull/13004#discussion_r499794748", "createdAt": "2020-10-05T18:36:07Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/util.py", "diffHunk": "@@ -709,10 +710,10 @@ def expand(self, pcoll):\n     return (\n         pcoll\n         | 'AddRandomKeys' >> Map(lambda t: (random.getrandbits(32), t)).\n-        with_input_types(T).with_output_types(KeyedT)  # type: ignore[misc]\n+        with_input_types(T).with_output_types(KeyedT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36724f74b7dd6157d3fdee7093cb2ef7d1c5388d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35c8efabc1b50a6a41883635a7a3796f088c05ab", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/35c8efabc1b50a6a41883635a7a3796f088c05ab", "committedDate": "2020-10-05T20:15:55Z", "message": "fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d2e01fd32a6488f1b7312289282c3feeb4d6fde", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/0d2e01fd32a6488f1b7312289282c3feeb4d6fde", "committedDate": "2020-10-05T20:12:49Z", "message": "fixes"}, "afterCommit": {"oid": "35c8efabc1b50a6a41883635a7a3796f088c05ab", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/35c8efabc1b50a6a41883635a7a3796f088c05ab", "committedDate": "2020-10-05T20:15:55Z", "message": "fixes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2263, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}