{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjgzNjkz", "number": 11037, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMTozMDo0N1rODu8PEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozMToyNlrODvGv3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTQ3OTg0OnYy", "diffSide": "RIGHT", "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/translation/TransformTranslator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMTozMDo0N1rOGBFV0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMTozMDo0N1rOGBFV0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4OTI2NQ==", "bodyText": "I believe we should do the same thing in the streaming and batch portable pipeline translators as well.", "url": "https://github.com/apache/beam/pull/11037#discussion_r403789265", "createdAt": "2020-04-06T01:30:47Z", "author": {"login": "lukecwik"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/translation/TransformTranslator.java", "diffHunk": "@@ -695,8 +695,10 @@ public void evaluate(Reshuffle<K, V> transform, EvaluationContext context) {\n         final WindowedValue.WindowedValueCoder<KV<K, V>> wvCoder =\n             WindowedValue.FullWindowedValueCoder.of(coder, windowFn.windowCoder());\n \n+        int numPartitions =\n+            Math.max(context.getSparkContext().defaultParallelism(), inRDD.getNumPartitions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d2620749518eaa08ffcb046ea9bf31bed55ff7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzIwMjIzOnYy", "diffSide": "RIGHT", "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/translation/GroupCombineFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozMToyNlrOGBVdlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozNjoyOVrOGBo6eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1MzM5Ng==", "bodyText": "Can you please let this method how it was before and better, and do int numPartitions = Math.max(rdd.context().defaultParallelism(), rdd.getNumPartitions()); inside of it. That way you don't need to replicate the change in the different translators..", "url": "https://github.com/apache/beam/pull/11037#discussion_r404053396", "createdAt": "2020-04-06T12:31:26Z", "author": {"login": "iemejia"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/translation/GroupCombineFunctions.java", "diffHunk": "@@ -184,11 +184,11 @@\n \n   /** An implementation of {@link Reshuffle} for the Spark runner. */\n   public static <T> JavaRDD<WindowedValue<T>> reshuffle(\n-      JavaRDD<WindowedValue<T>> rdd, WindowedValueCoder<T> wvCoder) {\n+      JavaRDD<WindowedValue<T>> rdd, WindowedValueCoder<T> wvCoder, int numPartitions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d2620749518eaa08ffcb046ea9bf31bed55ff7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MjA5MA==", "bodyText": "@iemejia @lukecwik ok will do the changes. The only reason why I opted to change only the batch pipeline for Spark is that it is the only one I am in a position to thoroughly test for real. However, analysing the code suggests that changing all pipelines does not harm, so I'll go for the suggested changes.\nWill submit the squashed PR soon. In the meantime, thanks for the review.", "url": "https://github.com/apache/beam/pull/11037#discussion_r404372090", "createdAt": "2020-04-06T20:36:29Z", "author": {"login": "ecapoccia"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/translation/GroupCombineFunctions.java", "diffHunk": "@@ -184,11 +184,11 @@\n \n   /** An implementation of {@link Reshuffle} for the Spark runner. */\n   public static <T> JavaRDD<WindowedValue<T>> reshuffle(\n-      JavaRDD<WindowedValue<T>> rdd, WindowedValueCoder<T> wvCoder) {\n+      JavaRDD<WindowedValue<T>> rdd, WindowedValueCoder<T> wvCoder, int numPartitions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1MzM5Ng=="}, "originalCommit": {"oid": "b0d2620749518eaa08ffcb046ea9bf31bed55ff7"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1767, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}