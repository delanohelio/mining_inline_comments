{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTQ4MDA5", "number": 11357, "title": "[BEAM-7770] Add ReadAll transform for SolrIO", "bodyText": "This follows the ReadAll pattern style introduced on HBaseIO but for the case of non SDF based DoFn.\nR: @aromanenko-dev", "createdAt": "2020-04-09T00:39:40Z", "url": "https://github.com/apache/beam/pull/11357", "merged": true, "mergeCommit": {"oid": "5d88f77c68c8ba87ba61b9e052553f44f1b9f337"}, "closed": true, "closedAt": "2020-05-27T14:58:51Z", "author": {"login": "iemejia"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclDnoagFqTQxODIzNDI1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclakKvgFqTQxOTMwODQ4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjM0MjUy", "url": "https://github.com/apache/beam/pull/11357#pullrequestreview-418234252", "createdAt": "2020-05-26T12:10:27Z", "commit": {"oid": "a621c5d3335baebcfa98cb645c2a57f0597d8147"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoxMDoyOFrOGabVoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoxMDoyOFrOGabVoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2NDA2NQ==", "bodyText": "Is withReplicaInfo() required here? If yes, please, add a check.", "url": "https://github.com/apache/beam/pull/11357#discussion_r430364065", "createdAt": "2020-05-26T12:10:28Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java", "diffHunk": "@@ -364,36 +372,41 @@ Read withBatchSize(int batchSize) {\n       // by tuning batchSize when pipelines run.\n       checkArgument(\n           batchSize > 0 && batchSize < MAX_BATCH_SIZE,\n-          \"Valid values for batchSize are 1 (inclusize) to %s (exclusive), but was: %s \",\n+          \"Valid values for batchSize are 1 (inclusive) to %s (exclusive), but was: %s \",\n           MAX_BATCH_SIZE,\n           batchSize);\n       return builder().setBatchSize(batchSize).build();\n     }\n \n+    /** Read from a specific Replica (partition). */\n+    public Read withReplicaInfo(ReplicaInfo replicaInfo) {\n+      checkArgument(replicaInfo != null, \"replicaInfo can not be null\");\n+      return builder().setReplicaInfo(replicaInfo).build();\n+    }\n+\n     @Override\n     public PCollection<SolrDocument> expand(PBegin input) {\n       checkArgument(\n           getConnectionConfiguration() != null, \"withConnectionConfiguration() is required\");\n       checkArgument(getCollection() != null, \"from() is required\");\n-\n-      return input\n-          .apply(\"Create\", Create.of(this))\n-          .apply(\"Split\", ParDo.of(new SplitFn()))\n-          .apply(\"Reshuffle\", Reshuffle.viaRandomKey())\n-          .apply(\"Read\", ParDo.of(new ReadFn()));\n+      return input.apply(\"Create\", Create.of(this)).apply(\"ReadAll\", readAll());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a621c5d3335baebcfa98cb645c2a57f0597d8147"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63b4d3a27a5e6400cf8cf812bc46ed5350f36bde", "author": {"user": {"login": "iemejia", "name": "Isma\u00ebl Mej\u00eda"}}, "url": "https://github.com/apache/beam/commit/63b4d3a27a5e6400cf8cf812bc46ed5350f36bde", "committedDate": "2020-05-27T12:07:44Z", "message": "[BEAM-7770] Make ReplicaInfo part of Read on SolrIO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "author": {"user": {"login": "iemejia", "name": "Isma\u00ebl Mej\u00eda"}}, "url": "https://github.com/apache/beam/commit/61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "committedDate": "2020-05-27T12:30:34Z", "message": "[BEAM-7770] Add ReadAll transform for SolrIO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a621c5d3335baebcfa98cb645c2a57f0597d8147", "author": {"user": {"login": "iemejia", "name": "Isma\u00ebl Mej\u00eda"}}, "url": "https://github.com/apache/beam/commit/a621c5d3335baebcfa98cb645c2a57f0597d8147", "committedDate": "2020-04-09T00:36:48Z", "message": "[BEAM-7770] Add ReadAll transform for SolrIO"}, "afterCommit": {"oid": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "author": {"user": {"login": "iemejia", "name": "Isma\u00ebl Mej\u00eda"}}, "url": "https://github.com/apache/beam/commit/61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "committedDate": "2020-05-27T12:30:34Z", "message": "[BEAM-7770] Add ReadAll transform for SolrIO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MzA4NDgx", "url": "https://github.com/apache/beam/pull/11357#pullrequestreview-419308481", "createdAt": "2020-05-27T14:56:53Z", "commit": {"oid": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo1Njo1M1rOGbOlvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo1Njo1M1rOGbOlvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzc3NA==", "bodyText": "I believe we can improve this test in the future by reading with multiple Reads (the goal of adding readAll()) and check the content of read messages (not only count).", "url": "https://github.com/apache/beam/pull/11357#discussion_r431203774", "createdAt": "2020-05-27T14:56:53Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/solr/src/test/java/org/apache/beam/sdk/io/solr/SolrIOTest.java", "diffHunk": "@@ -155,6 +155,23 @@ public void testRead() throws Exception {\n     pipeline.run();\n   }\n \n+  @Test\n+  public void testReadAll() throws Exception {\n+    SolrIOTestUtils.insertTestDocuments(SOLR_COLLECTION, NUM_DOCS, solrClient);\n+\n+    PCollection<SolrDocument> output =\n+        pipeline\n+            .apply(\n+                Create.of(\n+                    SolrIO.read()\n+                        .withConnectionConfiguration(connectionConfiguration)\n+                        .from(SOLR_COLLECTION)\n+                        .withBatchSize(101)))\n+            .apply(SolrIO.readAll());\n+    PAssert.thatSingleton(output.apply(\"Count\", Count.globally())).isEqualTo(NUM_DOCS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4550, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}