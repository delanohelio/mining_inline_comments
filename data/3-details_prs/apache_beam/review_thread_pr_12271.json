{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzI5MTc0", "number": 12271, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzoxMDowMlrOEO8f7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1NjowMFrOEO8_bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTA2NzM1OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzoxMDowMlrOGyYfVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1Njo1MFrOGyZNoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzIyMw==", "bodyText": "Can we just call input.getDeclaringClass().getName() here?", "url": "https://github.com/apache/beam/pull/12271#discussion_r455483223", "createdAt": "2020-07-16T03:10:02Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java", "diffHunk": "@@ -74,16 +74,12 @@ public String apply(@Nonnull Method input) {\n         @Override\n         public String apply(@Nonnull Method input) {\n           return String.format(\n-              \"%s#%s\", CLASS_NAME.apply(input.getDeclaringClass()), METHOD_FORMATTER.apply(input));\n+              \"%s#%s\",\n+              ((Function<Class<?>, String>) Class::getName).apply(input.getDeclaringClass()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NTA3Mg==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12271#discussion_r455495072", "createdAt": "2020-07-16T03:56:50Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java", "diffHunk": "@@ -74,16 +74,12 @@ public String apply(@Nonnull Method input) {\n         @Override\n         public String apply(@Nonnull Method input) {\n           return String.format(\n-              \"%s#%s\", CLASS_NAME.apply(input.getDeclaringClass()), METHOD_FORMATTER.apply(input));\n+              \"%s#%s\",\n+              ((Function<Class<?>, String>) Class::getName).apply(input.getDeclaringClass()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzIyMw=="}, "originalCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTE0Nzk3OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1NjowMFrOGyZM8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1NjowMFrOGyZM8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDg5Nw==", "bodyText": "I asked the checkerframework folks for a better solution and they gave it: @KeyFor annotation.", "url": "https://github.com/apache/beam/pull/12271#discussion_r455494897", "createdAt": "2020-07-16T03:56:00Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java", "diffHunk": "@@ -609,24 +604,34 @@ public static void printHelp(PrintStream out, Class<? extends PipelineOptions> i\n           getRequiredGroupNamesToProperties(propertyNamesToGetters);\n \n       out.format(\"%s:%n\", currentIface.getName());\n-      prettyPrintDescription(out, currentIface.getAnnotation(Description.class));\n+      Description ifaceDescription = currentIface.getAnnotation(Description.class);\n+      if (ifaceDescription != null && ifaceDescription.value() != null) {\n+        prettyPrintDescription(out, ifaceDescription);\n+      }\n \n       out.println();\n \n       List<String> lists = Lists.newArrayList(propertyNamesToGetters.keySet());\n       lists.sort(String.CASE_INSENSITIVE_ORDER);\n       for (String propertyName : lists) {\n         Method method = propertyNamesToGetters.get(propertyName);\n+        assert method != null\n+            : \"@AssumeAssertion(nullness): method name previously extracted from iface\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1065, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}