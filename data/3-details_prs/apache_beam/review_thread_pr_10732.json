{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzM5NDcy", "number": 10732, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNjoxNlrODcLXGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0MToxMVrODcLmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODcyODU5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNjoxNlrOFkFmNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjowNToxM1rOFkZOKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4NDc1Nw==", "bodyText": "I believe we should use _ReadFromBigQuery when known_args.native is False", "url": "https://github.com/apache/beam/pull/10732#discussion_r373384757", "createdAt": "2020-01-31T09:26:16Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "diffHunk": "@@ -63,9 +63,15 @@ def run_bq_pipeline(argv=None):\n \n   # Note to future modifiers: Keep using BigQuerySource if known_args.native is\n   # True.\n-  data = p | 'read' >> beam.io.Read(beam.io.BigQuerySource(\n-      query=known_args.query, use_standard_sql=known_args.use_standard_sql,\n-      kms_key=kms_key))\n+  if known_args.native:\n+    data = p | 'read' >> beam.io.gcp.bigquery._ReadFromBigQuery(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcwNjI4MQ==", "bodyText": "Ah I feel so dumb. Thanks Kamil. Done.", "url": "https://github.com/apache/beam/pull/10732#discussion_r373706281", "createdAt": "2020-01-31T22:05:13Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "diffHunk": "@@ -63,9 +63,15 @@ def run_bq_pipeline(argv=None):\n \n   # Note to future modifiers: Keep using BigQuerySource if known_args.native is\n   # True.\n-  data = p | 'read' >> beam.io.Read(beam.io.BigQuerySource(\n-      query=known_args.query, use_standard_sql=known_args.use_standard_sql,\n-      kms_key=kms_key))\n+  if known_args.native:\n+    data = p | 'read' >> beam.io.gcp.bigquery._ReadFromBigQuery(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4NDc1Nw=="}, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc1MzkzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTozNTo1NlrOFkF19A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjowNToyMlrOFkZOZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4ODc4OA==", "bodyText": "We have to provide --project parameter explicitly. This is why Python36 PostCommit has failed I think.", "url": "https://github.com/apache/beam/pull/10732#discussion_r373388788", "createdAt": "2020-01-31T09:35:56Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "diffHunk": "@@ -63,9 +63,15 @@ def run_bq_pipeline(argv=None):\n \n   # Note to future modifiers: Keep using BigQuerySource if known_args.native is\n   # True.\n-  data = p | 'read' >> beam.io.Read(beam.io.BigQuerySource(\n-      query=known_args.query, use_standard_sql=known_args.use_standard_sql,\n-      kms_key=kms_key))\n+  if known_args.native:\n+    data = p | 'read' >> beam.io.gcp.bigquery._ReadFromBigQuery(\n+        query=known_args.query,\n+        use_standard_sql=known_args.use_standard_sql,\n+        kms_key=kms_key)\n+  else:\n+    data = p | 'read' >> beam.io.Read(beam.io.BigQuerySource(\n+        query=known_args.query, use_standard_sql=known_args.use_standard_sql,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcwNjM0Mw==", "bodyText": "Done. Thanks Kamil!", "url": "https://github.com/apache/beam/pull/10732#discussion_r373706343", "createdAt": "2020-01-31T22:05:22Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "diffHunk": "@@ -63,9 +63,15 @@ def run_bq_pipeline(argv=None):\n \n   # Note to future modifiers: Keep using BigQuerySource if known_args.native is\n   # True.\n-  data = p | 'read' >> beam.io.Read(beam.io.BigQuerySource(\n-      query=known_args.query, use_standard_sql=known_args.use_standard_sql,\n-      kms_key=kms_key))\n+  if known_args.native:\n+    data = p | 'read' >> beam.io.gcp.bigquery._ReadFromBigQuery(\n+        query=known_args.query,\n+        use_standard_sql=known_args.use_standard_sql,\n+        kms_key=kms_key)\n+  else:\n+    data = p | 'read' >> beam.io.Read(beam.io.BigQuerySource(\n+        query=known_args.query, use_standard_sql=known_args.use_standard_sql,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4ODc4OA=="}, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc2ODY1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0MToxMVrOFkF-xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOTo1NDo1MVrOFkrtZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MTA0NA==", "bodyText": "Maybe we should add a --native parameter? This would make switching between difference sources/sinks much easier.", "url": "https://github.com/apache/beam/pull/10732#discussion_r373391044", "createdAt": "2020-01-31T09:41:11Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -148,6 +148,7 @@ def test_big_query_legacy_sql(self):\n                   'output': self.output_table,\n                   'output_schema': DIALECT_OUTPUT_SCHEMA,\n                   'use_standard_sql': False,\n+                  'native': True,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcwNjU5MQ==", "bodyText": "a native parameter for BQ Sink? (_ReadFromBQ(native=False/True) - > expand depending on the parameter?)", "url": "https://github.com/apache/beam/pull/10732#discussion_r373706591", "createdAt": "2020-01-31T22:06:00Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -148,6 +148,7 @@ def test_big_query_legacy_sql(self):\n                   'output': self.output_table,\n                   'output_schema': DIALECT_OUTPUT_SCHEMA,\n                   'use_standard_sql': False,\n+                  'native': True,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MTA0NA=="}, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNjU1NQ==", "bodyText": "I though about something else (a native parameter for this test), but now I see it's already here: \n  \n    \n      beam/sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py\n    \n    \n         Line 55\n      in\n      2bd3c5c\n    \n    \n    \n    \n\n        \n          \n           parser.add_argument('--native', default=False, action='store_true', \n        \n    \n  \n\n\nso it's fine.", "url": "https://github.com/apache/beam/pull/10732#discussion_r374006555", "createdAt": "2020-02-03T09:49:50Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -148,6 +148,7 @@ def test_big_query_legacy_sql(self):\n                   'output': self.output_table,\n                   'output_schema': DIALECT_OUTPUT_SCHEMA,\n                   'use_standard_sql': False,\n+                  'native': True,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MTA0NA=="}, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwOTE4OQ==", "bodyText": "But your idea sounds good. I think we could even remove the underscore, set True as the default value of native and expose that transform to users (not in this PR though) WDYT?", "url": "https://github.com/apache/beam/pull/10732#discussion_r374009189", "createdAt": "2020-02-03T09:54:51Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -148,6 +148,7 @@ def test_big_query_legacy_sql(self):\n                   'output': self.output_table,\n                   'output_schema': DIALECT_OUTPUT_SCHEMA,\n                   'use_standard_sql': False,\n+                  'native': True,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MTA0NA=="}, "originalCommit": {"oid": "19c7665960fc4658e26dc55a33a719327f1e1688"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}