{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTE0MTg5", "number": 11355, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NDoxOFrODwNM4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyMzoyNFrODwjarQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODc0NTI5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NDoxOFrOGDE8mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NDoxOFrOGDE8mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3OTk2Mw==", "bodyText": "Debug options have has convenience method for lookup and adding experiments. We can use those instead of raw list.", "url": "https://github.com/apache/beam/pull/11355#discussion_r405879963", "createdAt": "2020-04-08T23:54:18Z", "author": {"login": "angoenka"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODc0NjA5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NDo0NFrOGDE9EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTozNDoxNFrOGDmkyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDA4MA==", "bodyText": "@pabloem Do we need to add BQ option here as well?", "url": "https://github.com/apache/beam/pull/11355#discussion_r405880080", "createdAt": "2020-04-08T23:54:44Z", "author": {"login": "angoenka"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []\n+    if 'use_runner_v2' in experiments:\n+      if not 'beam_fn_api' in experiments:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwODU2OQ==", "bodyText": "I think it makes sense to add it. 'use_beam_bq_sink'.", "url": "https://github.com/apache/beam/pull/11355#discussion_r406408569", "createdAt": "2020-04-09T18:50:47Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []\n+    if 'use_runner_v2' in experiments:\n+      if not 'beam_fn_api' in experiments:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDA4MA=="}, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwOTIxNA==", "bodyText": "can we do it for batch bq source as well? I don't think the UW can support the native BQ source...", "url": "https://github.com/apache/beam/pull/11355#discussion_r406409214", "createdAt": "2020-04-09T18:52:00Z", "author": {"login": "ananvay"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []\n+    if 'use_runner_v2' in experiments:\n+      if not 'beam_fn_api' in experiments:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDA4MA=="}, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyMzIyMw==", "bodyText": "The switch for BQ source is a little trickier. I am working on a follow up PR for that.", "url": "https://github.com/apache/beam/pull/11355#discussion_r406423223", "createdAt": "2020-04-09T19:19:00Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []\n+    if 'use_runner_v2' in experiments:\n+      if not 'beam_fn_api' in experiments:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDA4MA=="}, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzMDkyMw==", "bodyText": "okay, let's do it at least for the bq_sink then, as Pablo commented earlier.", "url": "https://github.com/apache/beam/pull/11355#discussion_r406430923", "createdAt": "2020-04-09T19:34:14Z", "author": {"login": "ananvay"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []\n+    if 'use_runner_v2' in experiments:\n+      if not 'beam_fn_api' in experiments:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDA4MA=="}, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODc0OTQzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NjozMFrOGDE_Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NjozMFrOGDE_Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDYwMg==", "bodyText": "We have a method apiclient.use_unified_worker. We can use that instead of checking it explicitly.\nAlso, we can simplify/remove that method if we sanitize the options here.", "url": "https://github.com/apache/beam/pull/11355#discussion_r405880602", "createdAt": "2020-04-08T23:56:30Z", "author": {"login": "angoenka"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -566,6 +572,17 @@ def run_pipeline(self, pipeline, options):\n     result.metric_results = self._metrics\n     return result\n \n+  def _maybe_add_unified_worker_missing_options(self, options):\n+    # set default beam_fn_api and use_unified_worker experiment if\n+    # 'use_runner_v2' experiment flag exists, no-op otherwise.\n+    experiments = options.view_as(DebugOptions).experiments or []\n+    if 'use_runner_v2' in experiments:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ece19a3cfe0697aa7a5d2ba02487cf91d9245d6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjM4NTA5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/internal/apiclient.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyMzoyNFrOGDoGNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyMzoyNFrOGDoGNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NTg2Mg==", "bodyText": "formatting issue", "url": "https://github.com/apache/beam/pull/11355#discussion_r406455862", "createdAt": "2020-04-09T20:23:24Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/dataflow/internal/apiclient.py", "diffHunk": "@@ -1014,16 +1014,13 @@ def _use_fnapi(pipeline_options):\n \n \n def _use_unified_worker(pipeline_options):\n-  if not _use_fnapi(pipeline_options):\n-    return False\n   debug_options = pipeline_options.view_as(DebugOptions)\n   use_unified_worker_flag = 'use_unified_worker'\n+  use_runner_v2_flag = 'use_runner_v2'\n \n-  if debug_options.lookup_experiment(use_unified_worker_flag):\n-    return debug_options.lookup_experiment(use_unified_worker_flag)\n-\n-  if debug_options.lookup_experiment('use_runner_v2'):\n-    debug_options.add_experiment(use_unified_worker_flag)\n+  if (debug_options.lookup_experiment(use_runner_v2_flag) and not\n+  debug_options.lookup_experiment(use_unified_worker_flag)):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d40ae9a097f5beb3a01d8ab3df7bf602b1b5bcd4"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1440, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}