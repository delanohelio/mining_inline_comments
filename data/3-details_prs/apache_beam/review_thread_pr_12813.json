{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MTgyMTAy", "number": 12813, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoxMDo0NlrOEiT0pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjo1ODowNVrOEinr4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDExODE0OnYy", "diffSide": "RIGHT", "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoxMDo0NlrOHQHeFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDozNTowM1rOHQN9ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTY1NA==", "bodyText": "It may help to allow user to specify a file path", "url": "https://github.com/apache/beam/pull/12813#discussion_r486661654", "createdAt": "2020-09-10T22:10:46Z", "author": {"login": "y1chi"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "diffHunk": "@@ -42,6 +42,9 @@\n   /** Where events come from. */\n   @JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;\n \n+  /** If {@literal true}, only generate events and write them to local file. */\n+  @JsonProperty public boolean generateInputFileOnly = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2Nzk3Mg==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12813#discussion_r486767972", "createdAt": "2020-09-11T04:35:03Z", "author": {"login": "leiyiz"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "diffHunk": "@@ -42,6 +42,9 @@\n   /** Where events come from. */\n   @JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;\n \n+  /** If {@literal true}, only generate events and write them to local file. */\n+  @JsonProperty public boolean generateInputFileOnly = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTY1NA=="}, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDExODcwOnYy", "diffSide": "RIGHT", "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkLauncher.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoxMTowMVrOHQHebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjo1Mzo1MlrOHQmeZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTc0Mg==", "bodyText": "is this needed?", "url": "https://github.com/apache/beam/pull/12813#discussion_r486661742", "createdAt": "2020-09-10T22:11:01Z", "author": {"login": "y1chi"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkLauncher.java", "diffHunk": "@@ -922,6 +922,11 @@ private void setupPubSubResources(long now) throws IOException {\n     switch (configuration.sourceType) {\n       case DIRECT:\n         source = sourceEventsFromSynthetic(p);\n+        if (configuration.generateInputFileOnly) {\n+          PCollection<Event> events = source;\n+          source = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2Mzc1MA==", "bodyText": "yeah, if the source is not set to null then the actual query body will get executed", "url": "https://github.com/apache/beam/pull/12813#discussion_r486663750", "createdAt": "2020-09-10T22:16:30Z", "author": {"login": "leiyiz"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkLauncher.java", "diffHunk": "@@ -922,6 +922,11 @@ private void setupPubSubResources(long now) throws IOException {\n     switch (configuration.sourceType) {\n       case DIRECT:\n         source = sourceEventsFromSynthetic(p);\n+        if (configuration.generateInputFileOnly) {\n+          PCollection<Event> events = source;\n+          source = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTc0Mg=="}, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2Njk2NA==", "bodyText": "this maybe the wrong place to put the branch, can't we swap out the steps after the source?", "url": "https://github.com/apache/beam/pull/12813#discussion_r486666964", "createdAt": "2020-09-10T22:24:13Z", "author": {"login": "y1chi"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkLauncher.java", "diffHunk": "@@ -922,6 +922,11 @@ private void setupPubSubResources(long now) throws IOException {\n     switch (configuration.sourceType) {\n       case DIRECT:\n         source = sourceEventsFromSynthetic(p);\n+        if (configuration.generateInputFileOnly) {\n+          PCollection<Event> events = source;\n+          source = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTc0Mg=="}, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgxMzMxMg==", "bodyText": "sorry that I might have came out wrong, the logic later down the line is that if the source is null, following steps of pipeline will not get added.\nsee this part", "url": "https://github.com/apache/beam/pull/12813#discussion_r486813312", "createdAt": "2020-09-11T06:58:59Z", "author": {"login": "leiyiz"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkLauncher.java", "diffHunk": "@@ -922,6 +922,11 @@ private void setupPubSubResources(long now) throws IOException {\n     switch (configuration.sourceType) {\n       case DIRECT:\n         source = sourceEventsFromSynthetic(p);\n+        if (configuration.generateInputFileOnly) {\n+          PCollection<Event> events = source;\n+          source = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTc0Mg=="}, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE2OTYzNw==", "bodyText": "I see, sounds good.", "url": "https://github.com/apache/beam/pull/12813#discussion_r487169637", "createdAt": "2020-09-11T16:53:52Z", "author": {"login": "y1chi"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkLauncher.java", "diffHunk": "@@ -922,6 +922,11 @@ private void setupPubSubResources(long now) throws IOException {\n     switch (configuration.sourceType) {\n       case DIRECT:\n         source = sourceEventsFromSynthetic(p);\n+        if (configuration.generateInputFileOnly) {\n+          PCollection<Event> events = source;\n+          source = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTc0Mg=="}, "originalCommit": {"oid": "57e6d88e227c5ad1b5ea1b61c8c064222ba7b743"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzM3MjUxOnYy", "diffSide": "RIGHT", "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjo1ODowNVrOHQmncA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDo1MzoxOVrOHQtjOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MTk1Mg==", "bodyText": "generateInputFilePathPrefix to be explicit?", "url": "https://github.com/apache/beam/pull/12813#discussion_r487171952", "createdAt": "2020-09-11T16:58:05Z", "author": {"login": "y1chi"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "diffHunk": "@@ -42,6 +42,9 @@\n   /** Where events come from. */\n   @JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;\n \n+  /** If provided, only generate events and write them to local file with this prefix. */\n+  @JsonProperty public String generateInputFileOnlyPrefix = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "009677318246ff5f0ff8370d8f3bf4ca40322343"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2Nzg2OA==", "bodyText": "maybe generateEventFilePathPrefix ?", "url": "https://github.com/apache/beam/pull/12813#discussion_r487267868", "createdAt": "2020-09-11T20:12:52Z", "author": {"login": "leiyiz"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "diffHunk": "@@ -42,6 +42,9 @@\n   /** Where events come from. */\n   @JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;\n \n+  /** If provided, only generate events and write them to local file with this prefix. */\n+  @JsonProperty public String generateInputFileOnlyPrefix = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MTk1Mg=="}, "originalCommit": {"oid": "009677318246ff5f0ff8370d8f3bf4ca40322343"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3Njk5Mw==", "bodyText": "SGTM", "url": "https://github.com/apache/beam/pull/12813#discussion_r487276993", "createdAt": "2020-09-11T20:33:15Z", "author": {"login": "y1chi"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "diffHunk": "@@ -42,6 +42,9 @@\n   /** Where events come from. */\n   @JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;\n \n+  /** If provided, only generate events and write them to local file with this prefix. */\n+  @JsonProperty public String generateInputFileOnlyPrefix = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MTk1Mg=="}, "originalCommit": {"oid": "009677318246ff5f0ff8370d8f3bf4ca40322343"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI4NTU2MQ==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12813#discussion_r487285561", "createdAt": "2020-09-11T20:53:19Z", "author": {"login": "leiyiz"}, "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/NexmarkConfiguration.java", "diffHunk": "@@ -42,6 +42,9 @@\n   /** Where events come from. */\n   @JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;\n \n+  /** If provided, only generate events and write them to local file with this prefix. */\n+  @JsonProperty public String generateInputFileOnlyPrefix = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MTk1Mg=="}, "originalCommit": {"oid": "009677318246ff5f0ff8370d8f3bf4ca40322343"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3285, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}