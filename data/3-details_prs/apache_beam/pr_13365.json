{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTkyODg4", "number": 13365, "title": "Kafka To Pub/Sub Template Blogpost", "bodyText": "Blog post with an announcement of the first Beam template.\n\nThe link to PR with the template\nThe link to JIRA issue\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-11-17T17:50:19Z", "url": "https://github.com/apache/beam/pull/13365", "merged": true, "mergeCommit": {"oid": "35a49d18279a59033244e13b9bed39f88cafbca0"}, "closed": true, "closedAt": "2021-01-20T16:53:06Z", "author": {"login": "KhaninArtur"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdddOWzAH2gAyNTIyNTkyODg4OjdhNDViNTU1NzJmZGQ3OTYzMDAzMjlkNTc2YWMwNjk2OTZiNjcxYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdx-6yZgH2gAyNTIyNTkyODg4OjM5YzEwMDllZmY5ZjczYmQ1ZGIwYzhlZjYxNzg3Yzc2ZmQ0N2M5NTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7a45b55572fdd796300329d576ac069696b671a5", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/7a45b55572fdd796300329d576ac069696b671a5", "committedDate": "2020-11-17T17:43:58Z", "message": "Added initial version of the blogpost"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/28147fa1f416336ac7ba69fde6fbc99ff4df5d4a", "committedDate": "2020-11-18T08:07:41Z", "message": "Update kafka-to-pubsub-template.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4ODQyMTI2", "url": "https://github.com/apache/beam/pull/13365#pullrequestreview-538842126", "createdAt": "2020-11-25T20:58:59Z", "commit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMDo1ODo1OVrOH6Dq5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMDo1ODo1OVrOH6Dq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYzOTU4OQ==", "bodyText": "Would not this be a Dataflow template?", "url": "https://github.com/apache/beam/pull/13365#discussion_r530639589", "createdAt": "2020-11-25T20:58:59Z", "author": {"login": "aaltay"}, "path": "website/www/site/content/en/blog/kafka-to-pubsub-template.md", "diffHunk": "@@ -0,0 +1,69 @@\n+---\n+layout: post\n+title:  \"Template to ingest data from Apache Kafka to Google Cloud Pub/Sub\"\n+date:   2020-10-28 00:00:01 -0800\n+categories:\n+  - blog\n+  - java\n+authors:\n+  - Ilya Kozyrev\n+  - Artur Khanin\n+  - Alex Kosolapov\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In this blog post we present an example template that creates a pipeline\n+to read data from a single or multiple topics from\n+[Apache Kafka](https://kafka.apache.org/) and write data into a topic\n+in [Google Pub/Sub](https://cloud.google.com/pubsub).\n+The template provides code examples to \n+implement simple yet powerful pipelines and also provides an out-of-the-box solution \n+that you can just _\"plug'n'play\"_. \n+\n+We hope you will find this template useful for setting up data pipelines between Kafka and Pub/Sub.\n+\n+# Template specs\n+\n+Supported data formats:\n+- Serializable plaintext formats, such as JSON\n+- [PubSubMessage](https://cloud.google.com/pubsub/docs/reference/rest/v1/PubsubMessage).\n+\n+Supported input source configurations:\n+- Single or multiple Apache Kafka bootstrap servers\n+- Apache Kafka SASL/SCRAM authentication over plaintext or SSL connection\n+- Secrets vault service [HashiCorp Vault](https://www.vaultproject.io/).\n+\n+Supported destination configuration:\n+- Single Google Pub/Sub topic.\n+\n+In a simple scenario, the template will create an Apache Beam pipeline that will read messages from a source Kafka server with a source topic, and stream the text messages into specified Pub/Sub destination topic. Other scenarios may need Kafka SASL/SCRAM authentication, that can be performed over plain text or SSL encrypted connection. The template supports using a single Kafka user account to authenticate in the provided source Kafka servers and topics. To support SASL authenticaton over SSL the template will need an SSL certificate location and access to a secrets vault service with Kafka username and password, currently supporting HashiCorp Vault.\n+\n+# Where can I run this template?\n+\n+There are two ways to execute the pipeline.\n+1. Locally. This way has many options - run directly from your IntelliJ, or create `.jar` file and run\n+it in the terminal, or use your favourite method.\n+2. In [Google Cloud](https://cloud.google.com/). Using Google Cloud [Dataflow](https://cloud.google.com/dataflow) with `gcloud`\n+command-line tool you can create a Flex Template out of this Beam template and execute it in Google Cloud Platform.\n+\n+The only difference between local and cloud execution is that **Flex version of this template doesn't support SSL configuration.**\n+\n+# Next Steps\n+Give this **first Beam template** a try, and let us know your feedback adding comments to [BEAM-11065 JIRA ticket](https://issues.apache.org/jira/browse/BEAM-11065) or sending an email in [this thread](https://lists.apache.org/thread.html/r8db90b3a1271188afb31ea52ccfed231f276f26ded3855d90084fe85%40%3Cdev.beam.apache.org%3E)!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODIwNDc2", "url": "https://github.com/apache/beam/pull/13365#pullrequestreview-563820476", "createdAt": "2021-01-07T20:57:18Z", "commit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMDo1NzoxOFrOIP8DXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMTowMzozNVrOIP8OFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU4MzQ1NA==", "bodyText": "I'd use \"plain text\" unless you specifically mean this phrase in the context of cryptography\nhttps://developers.google.com/style/word-list#plain-text", "url": "https://github.com/apache/beam/pull/13365#discussion_r553583454", "createdAt": "2021-01-07T20:57:18Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/kafka-to-pubsub-template.md", "diffHunk": "@@ -0,0 +1,69 @@\n+---\n+layout: post\n+title:  \"Template to ingest data from Apache Kafka to Google Cloud Pub/Sub\"\n+date:   2020-10-28 00:00:01 -0800\n+categories:\n+  - blog\n+  - java\n+authors:\n+  - Ilya Kozyrev\n+  - Artur Khanin\n+  - Alex Kosolapov\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In this blog post we present an example template that creates a pipeline\n+to read data from a single or multiple topics from\n+[Apache Kafka](https://kafka.apache.org/) and write data into a topic\n+in [Google Pub/Sub](https://cloud.google.com/pubsub).\n+The template provides code examples to \n+implement simple yet powerful pipelines and also provides an out-of-the-box solution \n+that you can just _\"plug'n'play\"_. \n+\n+We hope you will find this template useful for setting up data pipelines between Kafka and Pub/Sub.\n+\n+# Template specs\n+\n+Supported data formats:\n+- Serializable plaintext formats, such as JSON", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU4NDI5Ng==", "bodyText": "Suggesting adding a noun to make it easier to read--\"from a single topic or multiple topics\"", "url": "https://github.com/apache/beam/pull/13365#discussion_r553584296", "createdAt": "2021-01-07T20:59:06Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/kafka-to-pubsub-template.md", "diffHunk": "@@ -0,0 +1,69 @@\n+---\n+layout: post\n+title:  \"Template to ingest data from Apache Kafka to Google Cloud Pub/Sub\"\n+date:   2020-10-28 00:00:01 -0800\n+categories:\n+  - blog\n+  - java\n+authors:\n+  - Ilya Kozyrev\n+  - Artur Khanin\n+  - Alex Kosolapov\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In this blog post we present an example template that creates a pipeline\n+to read data from a single or multiple topics from", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU4NjE5OQ==", "bodyText": "Should we link to Flex Templates page? https://cloud.google.com/dataflow/docs/concepts/dataflow-templates", "url": "https://github.com/apache/beam/pull/13365#discussion_r553586199", "createdAt": "2021-01-07T21:03:35Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/kafka-to-pubsub-template.md", "diffHunk": "@@ -0,0 +1,69 @@\n+---\n+layout: post\n+title:  \"Template to ingest data from Apache Kafka to Google Cloud Pub/Sub\"\n+date:   2020-10-28 00:00:01 -0800\n+categories:\n+  - blog\n+  - java\n+authors:\n+  - Ilya Kozyrev\n+  - Artur Khanin\n+  - Alex Kosolapov\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In this blog post we present an example template that creates a pipeline\n+to read data from a single or multiple topics from\n+[Apache Kafka](https://kafka.apache.org/) and write data into a topic\n+in [Google Pub/Sub](https://cloud.google.com/pubsub).\n+The template provides code examples to \n+implement simple yet powerful pipelines and also provides an out-of-the-box solution \n+that you can just _\"plug'n'play\"_. \n+\n+We hope you will find this template useful for setting up data pipelines between Kafka and Pub/Sub.\n+\n+# Template specs\n+\n+Supported data formats:\n+- Serializable plaintext formats, such as JSON\n+- [PubSubMessage](https://cloud.google.com/pubsub/docs/reference/rest/v1/PubsubMessage).\n+\n+Supported input source configurations:\n+- Single or multiple Apache Kafka bootstrap servers\n+- Apache Kafka SASL/SCRAM authentication over plaintext or SSL connection\n+- Secrets vault service [HashiCorp Vault](https://www.vaultproject.io/).\n+\n+Supported destination configuration:\n+- Single Google Pub/Sub topic.\n+\n+In a simple scenario, the template will create an Apache Beam pipeline that will read messages from a source Kafka server with a source topic, and stream the text messages into specified Pub/Sub destination topic. Other scenarios may need Kafka SASL/SCRAM authentication, that can be performed over plain text or SSL encrypted connection. The template supports using a single Kafka user account to authenticate in the provided source Kafka servers and topics. To support SASL authenticaton over SSL the template will need an SSL certificate location and access to a secrets vault service with Kafka username and password, currently supporting HashiCorp Vault.\n+\n+# Where can I run this template?\n+\n+There are two ways to execute the pipeline.\n+1. Locally. This way has many options - run directly from your IntelliJ, or create `.jar` file and run\n+it in the terminal, or use your favourite method.\n+2. In [Google Cloud](https://cloud.google.com/). Using Google Cloud [Dataflow](https://cloud.google.com/dataflow) with `gcloud`\n+command-line tool you can create a Flex Template out of this Beam template and execute it in Google Cloud Platform.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28147fa1f416336ac7ba69fde6fbc99ff4df5d4a"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4e42a01aa1528e74f407602503308f96c1cf6c9", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/b4e42a01aa1528e74f407602503308f96c1cf6c9", "committedDate": "2021-01-15T15:26:39Z", "message": "Updated blog post regarding comments and added relevant information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfd97f1925a071595a986447410ead08d7a22294", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/bfd97f1925a071595a986447410ead08d7a22294", "committedDate": "2021-01-15T17:46:01Z", "message": "Fixed header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42b9e56d314f1693e76c16e244d109fa98b19ed4", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/42b9e56d314f1693e76c16e244d109fa98b19ed4", "committedDate": "2021-01-15T17:52:43Z", "message": "Added authors to authors.yml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf8404ea1bea39bbf6f6023b5341809abb3a61f5", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/bf8404ea1bea39bbf6f6023b5341809abb3a61f5", "committedDate": "2021-01-15T18:00:07Z", "message": "Merge branch 'master' into BlogpostKafkaToPubsub\n\n# Conflicts:\n#\twebsite/www/site/data/authors.yml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5Nzk2NjM2", "url": "https://github.com/apache/beam/pull/13365#pullrequestreview-569796636", "createdAt": "2021-01-16T01:30:55Z", "commit": {"oid": "bf8404ea1bea39bbf6f6023b5341809abb3a61f5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQwMTozMDo1NVrOIU2_9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQwMTozMDo1NVrOIU2_9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODc0MzU0MA==", "bodyText": "For 2.27.0 - I would suggest linking to https://beam.apache.org/blog/beam-2.27.0/ and adding a line item to that release post about this template.", "url": "https://github.com/apache/beam/pull/13365#discussion_r558743540", "createdAt": "2021-01-16T01:30:55Z", "author": {"login": "aaltay"}, "path": "website/www/site/content/en/blog/kafka-to-pubsub-example.md", "diffHunk": "@@ -0,0 +1,89 @@\n+---\n+layout: post\n+title:  \"Example to ingest data from Apache Kafka to Google Cloud Pub/Sub\"\n+date:   2021-01-15 00:00:01 -0800\n+categories:\n+  - blog\n+  - java\n+authors:\n+  - arturkhanin\n+  - ilyakozyrev\n+  - alexkosolapov\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In this blog post we present an example that creates a pipeline to read data from a single topic or\n+multiple topics from [Apache Kafka](https://kafka.apache.org/) and write data into a topic\n+in [Google Pub/Sub](https://cloud.google.com/pubsub). The example provides code samples to implement\n+simple yet powerful pipelines and also provides an out-of-the-box solution that you can just _\"\n+plug'n'play\"_.\n+\n+This end-to-end example is included\n+in [Apache Beam release 2.27](https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12319527&version=12349380)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf8404ea1bea39bbf6f6023b5341809abb3a61f5"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aec12296fdd4c9c5bc8639d524a1cac12a21f435", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/aec12296fdd4c9c5bc8639d524a1cac12a21f435", "committedDate": "2021-01-18T12:28:36Z", "message": "Added an item with this example to the 2.27 release post and linked to it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxODMzOTMw", "url": "https://github.com/apache/beam/pull/13365#pullrequestreview-571833930", "createdAt": "2021-01-20T03:03:54Z", "commit": {"oid": "aec12296fdd4c9c5bc8639d524a1cac12a21f435"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMzowMzo1NFrOIWq9aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMzowMzo1NFrOIWq9aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MzQzMw==", "bodyText": "Nit: You don't need any end punctuations for these list items.\nMore information here: https://developers.google.com/style/lists#numbered,-lettered,-and-bulleted-lists", "url": "https://github.com/apache/beam/pull/13365#discussion_r560643433", "createdAt": "2021-01-20T03:03:54Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/blog/kafka-to-pubsub-example.md", "diffHunk": "@@ -0,0 +1,89 @@\n+---\n+layout: post\n+title:  \"Example to ingest data from Apache Kafka to Google Cloud Pub/Sub\"\n+date:   2021-01-15 00:00:01 -0800\n+categories:\n+  - blog\n+  - java\n+authors:\n+  - arturkhanin\n+  - ilyakozyrev\n+  - alexkosolapov\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+\n+In this blog post we present an example that creates a pipeline to read data from a single topic or\n+multiple topics from [Apache Kafka](https://kafka.apache.org/) and write data into a topic\n+in [Google Pub/Sub](https://cloud.google.com/pubsub). The example provides code samples to implement\n+simple yet powerful pipelines and also provides an out-of-the-box solution that you can just _\"\n+plug'n'play\"_.\n+\n+This end-to-end example is included\n+in [Apache Beam release 2.27](https://beam.apache.org/blog/beam-2.27.0/)\n+and can be downloaded [here](https://beam.apache.org/get-started/downloads/#2270-2020-12-22).\n+\n+We hope you will find this example useful for setting up data pipelines between Kafka and Pub/Sub.\n+\n+# Example specs\n+\n+Supported data formats:\n+\n+- Serializable plain text formats, such as JSON\n+- [PubSubMessage](https://cloud.google.com/pubsub/docs/reference/rest/v1/PubsubMessage).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec12296fdd4c9c5bc8639d524a1cac12a21f435"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxODM0MjAx", "url": "https://github.com/apache/beam/pull/13365#pullrequestreview-571834201", "createdAt": "2021-01-20T03:04:32Z", "commit": {"oid": "aec12296fdd4c9c5bc8639d524a1cac12a21f435"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39c1009eff9f73bd5db0c8ef61787c76fd47c955", "author": {"user": {"login": "KhaninArtur", "name": "Artur Khanin"}}, "url": "https://github.com/apache/beam/commit/39c1009eff9f73bd5db0c8ef61787c76fd47c955", "committedDate": "2021-01-20T12:17:51Z", "message": "Removed redundant punctuation according to the style"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4924, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}