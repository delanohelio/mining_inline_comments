{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTY3NTQ3", "number": 12452, "title": "[BEAM-10623] Add workflow to run Beam python tests on Linux/Windows/Mac platforms", "bodyText": "Workflow run with python tests\nBefore merging\nBefore merging it is required to setup related secrets:\n\nGCP_TESTING_BUCKET -  beam-github-actions-tests\nGCP_PROJECT_ID -  apache-beam-testing\nGCP_REGION - us-central1\n\nBefore merging it Service Account should have elevated permissions:\n\nStorage Admin (roles/storage.admin)\nDataflow Admin (roles/dataflow.admin)\n\nit was requested in https://issues.apache.org/jira/browse/INFRA-20675\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-08-03T13:08:57Z", "url": "https://github.com/apache/beam/pull/12452", "merged": true, "mergeCommit": {"oid": "c99390ac21cf47d629f61fc58875f8fa4bb9002b"}, "closed": true, "closedAt": "2020-08-18T21:53:07Z", "author": {"login": "TobKed"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7av-kgFqTQ2MDQwMTY5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAIf2iABqjM2NjY4MjkzMjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDAxNjk2", "url": "https://github.com/apache/beam/pull/12452#pullrequestreview-460401696", "createdAt": "2020-08-03T23:29:15Z", "commit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoyOToxNVrOG7L5uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzozNjozN1rOG7MCZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ==", "bodyText": "Given the size of this run, maybe we can limit this to 'schedule' only. Do you know how long it takes to run this?", "url": "https://github.com/apache/beam/pull/12452#discussion_r464714169", "createdAt": "2020-08-03T23:29:15Z", "author": {"login": "aaltay"}, "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDgxNg==", "bodyText": "does sdist require wheel? If sdist contains binaries, are they compatible with other python version?", "url": "https://github.com/apache/beam/pull/12452#discussion_r464714816", "createdAt": "2020-08-03T23:31:21Z", "author": {"login": "aaltay"}, "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.7\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install wheels\n+        run: pip install wheel\n+      - name: Build source\n+        working-directory: ./sdks/python\n+        run: python setup.py sdist --formats=zip", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjAzNw==", "bodyText": "@KevinGG - assigned this jira to you.", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716037", "createdAt": "2020-08-03T23:35:24Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_runner_test.py", "diffHunk": "@@ -66,6 +66,7 @@ class InteractiveRunnerTest(unittest.TestCase):\n   def setUp(self):\n     ie.new_env()\n \n+  @unittest.skipIf(sys.platform == \"win32\", \"[BEAM-10627]\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjEyOQ==", "bodyText": "@tvalentyn - - assigned this jira to you.", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716129", "createdAt": "2020-08-03T23:35:40Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/portability/portable_runner_test.py", "diffHunk": "@@ -284,6 +284,7 @@ def create_options(self):\n     return options\n \n \n+@pytest.mark.skipif(sys.platform == \"win32\", reason=\"[BEAM-10625]\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjE5Nw==", "bodyText": "why are we using pytest here insted of unittest? @tvalentyn", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716197", "createdAt": "2020-08-03T23:35:56Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/portability/portable_runner_test.py", "diffHunk": "@@ -284,6 +284,7 @@ def create_options(self):\n     return options\n \n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA==", "bodyText": "@TheNeuralBit - - assigned this jira to you.", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716390", "createdAt": "2020-08-03T23:36:37Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/testing/datatype_inference_test.py", "diffHunk": "@@ -174,6 +175,7 @@ def test_infer_typehints_schema(self, _, data, schema):\n   @parameterized.expand([(d[\"name\"], d[\"data\"], d[\"pyarrow_schema\"])\n                          for d in TEST_DATA])\n   @unittest.skipIf(pa is None, \"PyArrow is not installed\")\n+  @unittest.skipIf(sys.platform == \"win32\", \"[BEAM-10624]\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTk5OTEz", "url": "https://github.com/apache/beam/pull/12452#pullrequestreview-460999913", "createdAt": "2020-08-04T16:57:53Z", "commit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjo1Nzo1M1rOG7pQoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjo1Nzo1M1rOG7pQoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5NTE2OA==", "bodyText": "Is it possible to extract py versions into a constant on top of the file so that we have to modify them in one place when we add/remove a version?", "url": "https://github.com/apache/beam/pull/12452#discussion_r465195168", "createdAt": "2020-08-04T16:57:53Z", "author": {"login": "tvalentyn"}, "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.7\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install wheels\n+        run: pip install wheel\n+      - name: Build source\n+        working-directory: ./sdks/python\n+        run: python setup.py sdist --formats=zip\n+      - name: Add checksums\n+        working-directory: ./sdks/python/dist\n+        run: |\n+          file=$(ls | grep .zip | head -n 1)\n+          sha512sum $file > ${file}.sha512\n+      - name: Unzip source\n+        working-directory: ./sdks/python\n+        run: unzip dist/$(ls dist | grep .zip | head -n 1)\n+      - name: Rename source directory\n+        working-directory: ./sdks/python\n+        run: mv $(ls | grep apache-beam) apache-beam-source\n+      - name: Upload compressed sources as artifacts\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: source_zip\n+          path: sdks/python/dist\n+\n+  python_unit_tests:\n+    name: 'Python Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        params: [\n+          {\"py_ver\": \"3.5\", \"tox_env\": \"py35\"},\n+          {\"py_ver\": \"3.6\", \"tox_env\": \"py36\"},\n+          {\"py_ver\": \"3.7\", \"tox_env\": \"py37\"},\n+          {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"},\n+        ]\n+        exclude:\n+          # TODO remove exclusion after issue with protobuf is solved\n+          # https://github.com/protocolbuffers/protobuf/issues/7765\n+          - os: windows-latest\n+            params: {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"}\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: ${{ matrix.params.py_ver }}\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install tox\n+        run: pip install tox\n+      - name: Run tests basic unix\n+        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}\n+      - name: Run tests basic windows\n+        if: startsWith(matrix.os, 'windows')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}-win\n+\n+  python_wordcount_direct_runner:\n+    name: 'Python Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python: [3.5, 3.6, 3.7, 3.8]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 122}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDEwNzIx", "url": "https://github.com/apache/beam/pull/12452#pullrequestreview-461010721", "createdAt": "2020-08-04T17:12:37Z", "commit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzoxMjozOFrOG7pxog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzo1ODozMFrOG7rZaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMzYxOA==", "bodyText": "Do actions allow to extract a common subroutine and call it from other actions? For example following steps seem to be repeated several times, and perhaps could be defined in one place:\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Install python\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python }}\n      - name: Get build dependencies\n        working-directory: ./sdks/python\n        run: pip install -r build-requirements.txt\n      - name: Install requirements\n        working-directory: ./sdks/python\n        run: pip install setuptools --upgrade && pip install -e .", "url": "https://github.com/apache/beam/pull/12452#discussion_r465203618", "createdAt": "2020-08-04T17:12:38Z", "author": {"login": "tvalentyn"}, "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.7\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install wheels\n+        run: pip install wheel\n+      - name: Build source\n+        working-directory: ./sdks/python\n+        run: python setup.py sdist --formats=zip\n+      - name: Add checksums\n+        working-directory: ./sdks/python/dist\n+        run: |\n+          file=$(ls | grep .zip | head -n 1)\n+          sha512sum $file > ${file}.sha512\n+      - name: Unzip source\n+        working-directory: ./sdks/python\n+        run: unzip dist/$(ls dist | grep .zip | head -n 1)\n+      - name: Rename source directory\n+        working-directory: ./sdks/python\n+        run: mv $(ls | grep apache-beam) apache-beam-source\n+      - name: Upload compressed sources as artifacts\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: source_zip\n+          path: sdks/python/dist\n+\n+  python_unit_tests:\n+    name: 'Python Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        params: [\n+          {\"py_ver\": \"3.5\", \"tox_env\": \"py35\"},\n+          {\"py_ver\": \"3.6\", \"tox_env\": \"py36\"},\n+          {\"py_ver\": \"3.7\", \"tox_env\": \"py37\"},\n+          {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"},\n+        ]\n+        exclude:\n+          # TODO remove exclusion after issue with protobuf is solved\n+          # https://github.com/protocolbuffers/protobuf/issues/7765\n+          - os: windows-latest\n+            params: {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"}\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: ${{ matrix.params.py_ver }}\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install tox\n+        run: pip install tox\n+      - name: Run tests basic unix\n+        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}\n+      - name: Run tests basic windows\n+        if: startsWith(matrix.os, 'windows')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}-win\n+\n+  python_wordcount_direct_runner:\n+    name: 'Python Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python: [3.5, 3.6, 3.7, 3.8]\n+        exclude:\n+          # TODO remove exclusion after issue with protobuf is solved\n+          # https://github.com/protocolbuffers/protobuf/issues/7765\n+          - os: windows-latest\n+            python: 3.8\n+    steps:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTY5MQ==", "bodyText": "What is the context of these changes?\n(note: it's would be better to have them in a separate commit and tag a JIRA in that commit).\nWill #12150 (comment) work?", "url": "https://github.com/apache/beam/pull/12452#discussion_r465209691", "createdAt": "2020-08-04T17:23:08Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/parquetio_test.py", "diffHunk": "@@ -296,8 +296,10 @@ def test_sink_transform_int96(self):\n               path, self.SCHEMA96, num_shards=1, shard_name_template='')\n \n   def test_sink_transform(self):\n-    with tempfile.NamedTemporaryFile() as dst:\n-      path = dst.name\n+    fd, path = tempfile.mkstemp()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDIzOA==", "bodyText": "Took a look and replied on the bug. It may be an issue in GRPC or the networking configuration of the Windows host that Github uses. I do not see this error in the test suite that we run internally (on Py2.7).\n@TobKed do you have a recommendation how Beam Devs could recreate the same environment as used by GitHub actions for the purposes of debugging a test  or run a single test via actions? It would be good to document this in our Actions users guide.\nThe goal is to minimize the feedback loop as much as possible.\nFeel free to reply on https://issues.apache.org/jira/browse/BEAM-10625 to keep this conversation in one place.", "url": "https://github.com/apache/beam/pull/12452#discussion_r465224238", "createdAt": "2020-08-04T17:47:56Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/runners/portability/portable_runner_test.py", "diffHunk": "@@ -284,6 +284,7 @@ def create_options(self):\n     return options\n \n \n+@pytest.mark.skipif(sys.platform == \"win32\", reason=\"[BEAM-10625]\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjEyOQ=="}, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDY4MA==", "bodyText": "use os.sep", "url": "https://github.com/apache/beam/pull/12452#discussion_r465224680", "createdAt": "2020-08-04T17:48:48Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/runners/worker/log_handler_test.py", "diffHunk": "@@ -87,7 +87,8 @@ def _verify_fn_log_handler(self, num_log_entries):\n         self.assertEqual(\n             '%s: %s' % (msg, num_received_log_entries), log_entry.message)\n         self.assertTrue(\n-            re.match(r'.*/log_handler_test.py:\\d+', log_entry.log_location),\n+            re.match(\n+                r'.*(/|\\\\)log_handler_test.py:\\d+', log_entry.log_location),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjA0NA==", "bodyText": "Pyarrow upgrade can be decoupled from dropping py2, unless we need code changes in Beam: \n  \n    \n      beam/sdks/python/setup.py\n    \n    \n         Line 157\n      in\n      5ded4ae\n    \n    \n    \n    \n\n        \n          \n           ('pyarrow>=0.15.1,<0.18.0; python_version >= \"3.0\" or '", "url": "https://github.com/apache/beam/pull/12452#discussion_r465226044", "createdAt": "2020-08-04T17:51:09Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/testing/datatype_inference_test.py", "diffHunk": "@@ -174,6 +175,7 @@ def test_infer_typehints_schema(self, _, data, schema):\n   @parameterized.expand([(d[\"name\"], d[\"data\"], d[\"pyarrow_schema\"])\n                          for d in TEST_DATA])\n   @unittest.skipIf(pa is None, \"PyArrow is not installed\")\n+  @unittest.skipIf(sys.platform == \"win32\", \"[BEAM-10624]\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjQ4Mg==", "bodyText": "Same comment as above - this approach is not intuitive.", "url": "https://github.com/apache/beam/pull/12452#discussion_r465226482", "createdAt": "2020-08-04T17:51:55Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/typehints/typecheck_test_py3.py", "diffHunk": "@@ -92,23 +93,29 @@ def test_wrapper_pass_through(self):\n     # We use a file to check the result because the MyDoFn instance passed is\n     # not the same one that actually runs in the pipeline (it is serialized\n     # here and deserialized in the worker).\n-    with tempfile.NamedTemporaryFile(mode='w+t') as f:\n-      dofn = MyDoFn(f.name)\n+\n+    fd, path = tempfile.mkstemp()\n+    try:\n+      os.close(fd)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyOTcxNw==", "bodyText": "Also, all actions workflow run in parallel, right? so it takes roughly the same time as running  a regular precommit? In such case we could consider running it on PR.", "url": "https://github.com/apache/beam/pull/12452#discussion_r465229717", "createdAt": "2020-08-04T17:57:39Z", "author": {"login": "tvalentyn"}, "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ=="}, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMDE4NA==", "bodyText": "Is this used anywhere?", "url": "https://github.com/apache/beam/pull/12452#discussion_r465230184", "createdAt": "2020-08-04T17:58:30Z", "author": {"login": "tvalentyn"}, "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d41dd7951c6b88d9b68cfb1d3edb117c2c058c5", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/0d41dd7951c6b88d9b68cfb1d3edb117c2c058c5", "committedDate": "2020-08-05T14:07:04Z", "message": "Improve regex in _verify_fn_log_handler"}, "afterCommit": {"oid": "b7883ffed7544cb6387ce03aad9fb248925e005f", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/b7883ffed7544cb6387ce03aad9fb248925e005f", "committedDate": "2020-08-05T15:29:09Z", "message": "Upload unit tests xml logs a artifacts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a600b5c6a0e227c2b17ba1d8aaa71207ad218f30", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/a600b5c6a0e227c2b17ba1d8aaa71207ad218f30", "committedDate": "2020-08-10T14:15:51Z", "message": "Use different GCS bucket for testing purposes"}, "afterCommit": {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/8ead399e48e62e65851122b778286a3cc0d8487e", "committedDate": "2020-08-10T18:48:58Z", "message": "Update documentation and workflow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MzAxMjUy", "url": "https://github.com/apache/beam/pull/12452#pullrequestreview-465301252", "createdAt": "2020-08-11T17:58:20Z", "commit": {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzo1ODoyMFrOG_DDGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoyMDo1MFrOG_D0hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MzQxOQ==", "bodyText": "Suggestion: Consider using Checks that GCP variables are set or Check GCP variables throughout.", "url": "https://github.com/apache/beam/pull/12452#discussion_r468763419", "createdAt": "2020-08-11T17:58:20Z", "author": {"login": "tvalentyn"}, "path": "CI.md", "diffHunk": "@@ -75,8 +75,28 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.\n+These variables are:\n+ * `GCP_PROJECT_ID` - ID of the Google Cloud project. Apache/Beam repository has it set to `apache-beam-testing`.\n+ * `GCP_REGION` - Region of the bucket and dataflow jobs. Apache/Beam repository has it set to `us-central1`.\n+ * `GCP_TESTING_BUCKET` - Name of the bucket where temporary files for Dataflow tests will be stored. Apache/Beam repository has it set to `beam-github-actions-tests`.\n+ * `GCP_SA_EMAIL` - Service account email address. This is usually of the format `<name>@<project-id>.iam.gserviceaccount.com`.\n+ * `GCP_SA_KEY` - Service account key. This key should be created and encoded as a Base64 string (eg. `cat my-key.json | base64` on macOS).\n+\n+Service Account shall have following permissions:\n+ * Storage Admin (roles/storage.admin)\n+ * Dataflow Admin (roles/dataflow.admin)\n+\n+### Workflows\n+\n+#### Build python source distribution and wheels - [build_wheels.yml](.github/workflows/build_wheels.yml)\n+\n | Job                                             | Description                                                                                                                                                                                                                                                        | Pull Request Run | Direct Push/Merge Run | Scheduled Run | Requires GCP Credentials |\n |-------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------|-----------------------|---------------|--------------------------|\n+| Check are GCP variables set                     | Checks are GCP variables are set. Jobs which required them depends on the output of this job.                                                                                                                                                                      | Yes              | Yes                   | Yes           | Yes/No                   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MzkwMg==", "bodyText": "nit: depend", "url": "https://github.com/apache/beam/pull/12452#discussion_r468763902", "createdAt": "2020-08-11T17:59:11Z", "author": {"login": "tvalentyn"}, "path": "CI.md", "diffHunk": "@@ -85,16 +105,15 @@ Those jobs often have matrix run strategy which runs several different variation\n | List files on Google Cloud Storage Bucket       | Lists files on GCS for verification purpose.                                                                                                                                                                                                                       | -                | Yes                   | Yes           | Yes                      |\n | Tag repo nightly                                | Tag repo with `nightly-master` tag if build python source distribution and python wheels finished successfully.                                                                                                                                                    | -                | -                     | Yes           | -                        |\n \n-### Google Cloud Platform Credentials\n-\n-Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n-to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.\n-These variables are:\n- * `GCP_SA_EMAIL` - Service account email address. This is usually of the format `<name>@<project-id>.iam.gserviceaccount.com`.\n- * `GCP_SA_KEY` - Service account key. This key should be created and encoded as a Base64 string (eg. `cat my-key.json | base64` on macOS).\n+#### Python tests - [python_tests.yml](.github/workflows/python_tests.yml)\n \n-Service Account shall have following permissions:\n- * Storage Object Admin (roles/storage.objectAdmin)\n+| Job                              | Description                                                                                                           | Pull Request Run | Direct Push/Merge Run | Scheduled Run | Requires GCP Credentials |\n+|----------------------------------|-----------------------------------------------------------------------------------------------------------------------|------------------|-----------------------|---------------|--------------------------|\n+| Check are GCP variables set      | Checks are GCP variables are set. Jobs which required them depends on the output of this job.                         | Yes              | Yes                   | Yes           | Yes/No                   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODI2NQ==", "bodyText": "For my education, which repository we refer to here? Also, I would not hard code existing values in documentation, since the source-of-truth may be updated, and documentation may not. You could say: For example apache-beam-testing instead.", "url": "https://github.com/apache/beam/pull/12452#discussion_r468768265", "createdAt": "2020-08-11T18:06:51Z", "author": {"login": "tvalentyn"}, "path": "CI.md", "diffHunk": "@@ -75,8 +75,28 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.\n+These variables are:\n+ * `GCP_PROJECT_ID` - ID of the Google Cloud project. Apache/Beam repository has it set to `apache-beam-testing`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODY5MA==", "bodyText": "nit: as [GitHub Secrets]", "url": "https://github.com/apache/beam/pull/12452#discussion_r468768690", "createdAt": "2020-08-11T18:07:40Z", "author": {"login": "tvalentyn"}, "path": "CI.md", "diffHunk": "@@ -75,8 +75,28 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3NjA3MA==", "bodyText": "Thanks. I forgot we are still on Py2, but very soon we can start removing Py2 support.\nWe actually defined this at least twice already.\n\n  \n    \n      beam/sdks/python/apache_beam/utils/subprocess_server_test.py\n    \n    \n         Line 39\n      in\n      0098eb6\n    \n    \n    \n    \n\n        \n          \n           class TemporaryDirectory: \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/testing/test_utils.py\n    \n    \n         Line 43\n      in\n      0098eb6\n    \n    \n    \n    \n\n        \n          \n           class TempDir(object): \n        \n    \n  \n\n\nFeel free to reuse one of them and add a comment # TODO(BEAM-8371): Use tempfile.TemporaryDirectory.", "url": "https://github.com/apache/beam/pull/12452#discussion_r468776070", "createdAt": "2020-08-11T18:20:50Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/testing/util.py", "diffHunk": "@@ -334,3 +335,19 @@ def open_shards(glob_pattern, mode='rt', encoding='utf-8'):\n         out_file.write(in_file.read())\n     concatenated_file_name = out_file.name\n   return io.open(concatenated_file_name, mode, encoding=encoding)\n+\n+\n+class TemporaryDirectory(object):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2ee132411253da4abae8b7bcab6b8751ce7fab2"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDUyNzE2", "url": "https://github.com/apache/beam/pull/12452#pullrequestreview-465452716", "createdAt": "2020-08-11T21:48:58Z", "commit": {"oid": "65a76680d284c27a878cb882c04cb9aafbd2aaad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65a76680d284c27a878cb882c04cb9aafbd2aaad", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/65a76680d284c27a878cb882c04cb9aafbd2aaad", "committedDate": "2020-08-11T21:04:37Z", "message": "Use existing Beam TemporaryDirectory context"}, "afterCommit": {"oid": "b2a88db50a86c5b0488e2005db4f923dbdf60bb8", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/b2a88db50a86c5b0488e2005db4f923dbdf60bb8", "committedDate": "2020-08-11T21:54:11Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2a88db50a86c5b0488e2005db4f923dbdf60bb8", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/b2a88db50a86c5b0488e2005db4f923dbdf60bb8", "committedDate": "2020-08-11T21:54:11Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}, "afterCommit": {"oid": "6d56be74776b61436e4024d8b859279bd3fa2d41", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/6d56be74776b61436e4024d8b859279bd3fa2d41", "committedDate": "2020-08-11T22:52:59Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d56be74776b61436e4024d8b859279bd3fa2d41", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/6d56be74776b61436e4024d8b859279bd3fa2d41", "committedDate": "2020-08-11T22:52:59Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}, "afterCommit": {"oid": "e7496028eec88e1f59489744266eb883a4dd7b03", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/e7496028eec88e1f59489744266eb883a4dd7b03", "committedDate": "2020-08-11T22:58:36Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7496028eec88e1f59489744266eb883a4dd7b03", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/e7496028eec88e1f59489744266eb883a4dd7b03", "committedDate": "2020-08-11T22:58:36Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}, "afterCommit": {"oid": "ad8f04c18aadaf756d4b2960792ba45ea26c8161", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/ad8f04c18aadaf756d4b2960792ba45ea26c8161", "committedDate": "2020-08-17T18:42:04Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0501123dda092e3a48b8c0679932f6a6cbe7e464", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/0501123dda092e3a48b8c0679932f6a6cbe7e464", "committedDate": "2020-08-18T15:10:49Z", "message": "[BEAM-10623] Add workflow to run python tests on Linux/Windows/Mac"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b19dc5618969195d64d74d426fa904e23530619", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/7b19dc5618969195d64d74d426fa904e23530619", "committedDate": "2020-08-18T15:10:53Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad8f04c18aadaf756d4b2960792ba45ea26c8161", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/ad8f04c18aadaf756d4b2960792ba45ea26c8161", "committedDate": "2020-08-17T18:42:04Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}, "afterCommit": {"oid": "7b19dc5618969195d64d74d426fa904e23530619", "author": {"user": {"login": "TobKed", "name": "Tobiasz K\u0119dzierski"}}, "url": "https://github.com/apache/beam/commit/7b19dc5618969195d64d74d426fa904e23530619", "committedDate": "2020-08-18T15:10:53Z", "message": "[BEAM-10624] dtype explicit for the numpy arrays"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3694, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}