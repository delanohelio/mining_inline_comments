{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTUyMjg3", "number": 13180, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDoxMDoyNVrOExXFNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDoxMDoyNVrOExXFNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTkzODQ1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/options/pipeline_options.py", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDoxMDoyNVrOHndFNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxODowNjozOFrOHnzYyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzMjk4Mw==", "bodyText": "You are correct that it's desirable to use a sort of namespace prefix. Perhaps --aws_ or --aws_s3_. What do you think?\nYou must know more than me about s3 and AWS - I wonder if aws_session_token, aws_secret_access_key, aws_access_key_id  in this context are specific for s3, or if they provide some sort of AWS-wide authentication?\nIf they're s3-specific, then maybe we should namespace them as aws_s3? Let me know what you think.", "url": "https://github.com/apache/beam/pull/13180#discussion_r511132983", "createdAt": "2020-10-23T20:10:25Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -1321,3 +1320,39 @@ def augment_options(cls, options):\n       for name, value in override.items():\n         setattr(options, name, value)\n     return options\n+\n+\n+class S3Options(PipelineOptions):\n+  @classmethod\n+  def _add_argparse_args(cls, parser):\n+    # These options are passed to the S3 IO Client\n+    parser.add_argument(\n+        '--aws_access_key_id',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_secret_access_key',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_session_token',\n+        default=None,\n+        help='The session token to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--endpoint_url',\n+        default=None,\n+        help='The complete URL to use for the constructed s3 client.')\n+    parser.add_argument(\n+        '--region_name',\n+        default=None,\n+        help='The name of the region associated with the client.')\n+    parser.add_argument(\n+        '--api_version', default=None, help='The API version to use.')\n+    parser.add_argument(\n+        '--verify',\n+        default=None,\n+        help='Whether or not to verify SSL certificates.')\n+    parser.add_argument(\n+        '--use_ssl',\n+        default=True,\n+        help='Whether or not to use SSL. By default, SSL is used.')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "584db8ba8813917747feb967ba039d503870b1bb"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNDkxOA==", "bodyText": "+1. Please do not use endpoint_url, region_name, api_version, verify, use_ssl and so on without a prefix.", "url": "https://github.com/apache/beam/pull/13180#discussion_r511134918", "createdAt": "2020-10-23T20:15:17Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -1321,3 +1320,39 @@ def augment_options(cls, options):\n       for name, value in override.items():\n         setattr(options, name, value)\n     return options\n+\n+\n+class S3Options(PipelineOptions):\n+  @classmethod\n+  def _add_argparse_args(cls, parser):\n+    # These options are passed to the S3 IO Client\n+    parser.add_argument(\n+        '--aws_access_key_id',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_secret_access_key',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_session_token',\n+        default=None,\n+        help='The session token to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--endpoint_url',\n+        default=None,\n+        help='The complete URL to use for the constructed s3 client.')\n+    parser.add_argument(\n+        '--region_name',\n+        default=None,\n+        help='The name of the region associated with the client.')\n+    parser.add_argument(\n+        '--api_version', default=None, help='The API version to use.')\n+    parser.add_argument(\n+        '--verify',\n+        default=None,\n+        help='Whether or not to verify SSL certificates.')\n+    parser.add_argument(\n+        '--use_ssl',\n+        default=True,\n+        help='Whether or not to use SSL. By default, SSL is used.')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzMjk4Mw=="}, "originalCommit": {"oid": "584db8ba8813917747feb967ba039d503870b1bb"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MDA5Nw==", "bodyText": "Fair enough. I've moved them all to use the same s3 prefix which I think makes sense given they are collected under the S3Options class. @pabloem I believe the access keys can also be used for other AWS services, although I've never actually used them. I think it makes sense to consolidate the more generic aws options with the s3 options together for now given that this is the only use case at the moment. If there is another AWS service added in the future it could make sense then to split them up.", "url": "https://github.com/apache/beam/pull/13180#discussion_r511150097", "createdAt": "2020-10-23T20:52:29Z", "author": {"login": "dandy10"}, "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -1321,3 +1320,39 @@ def augment_options(cls, options):\n       for name, value in override.items():\n         setattr(options, name, value)\n     return options\n+\n+\n+class S3Options(PipelineOptions):\n+  @classmethod\n+  def _add_argparse_args(cls, parser):\n+    # These options are passed to the S3 IO Client\n+    parser.add_argument(\n+        '--aws_access_key_id',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_secret_access_key',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_session_token',\n+        default=None,\n+        help='The session token to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--endpoint_url',\n+        default=None,\n+        help='The complete URL to use for the constructed s3 client.')\n+    parser.add_argument(\n+        '--region_name',\n+        default=None,\n+        help='The name of the region associated with the client.')\n+    parser.add_argument(\n+        '--api_version', default=None, help='The API version to use.')\n+    parser.add_argument(\n+        '--verify',\n+        default=None,\n+        help='Whether or not to verify SSL certificates.')\n+    parser.add_argument(\n+        '--use_ssl',\n+        default=True,\n+        help='Whether or not to use SSL. By default, SSL is used.')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzMjk4Mw=="}, "originalCommit": {"oid": "584db8ba8813917747feb967ba039d503870b1bb"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NzQxNg==", "bodyText": "Thanks! That makes sense to me. Can you fix the broken unittests? Other than that, the change looks great (and it's very welcome, as we'd been needing it).", "url": "https://github.com/apache/beam/pull/13180#discussion_r511497416", "createdAt": "2020-10-24T17:55:23Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -1321,3 +1320,39 @@ def augment_options(cls, options):\n       for name, value in override.items():\n         setattr(options, name, value)\n     return options\n+\n+\n+class S3Options(PipelineOptions):\n+  @classmethod\n+  def _add_argparse_args(cls, parser):\n+    # These options are passed to the S3 IO Client\n+    parser.add_argument(\n+        '--aws_access_key_id',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_secret_access_key',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_session_token',\n+        default=None,\n+        help='The session token to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--endpoint_url',\n+        default=None,\n+        help='The complete URL to use for the constructed s3 client.')\n+    parser.add_argument(\n+        '--region_name',\n+        default=None,\n+        help='The name of the region associated with the client.')\n+    parser.add_argument(\n+        '--api_version', default=None, help='The API version to use.')\n+    parser.add_argument(\n+        '--verify',\n+        default=None,\n+        help='Whether or not to verify SSL certificates.')\n+    parser.add_argument(\n+        '--use_ssl',\n+        default=True,\n+        help='Whether or not to use SSL. By default, SSL is used.')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzMjk4Mw=="}, "originalCommit": {"oid": "584db8ba8813917747feb967ba039d503870b1bb"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5ODQ0Mw==", "bodyText": "Will do. I tried to have a look at the failing tests and can't figure out which ones have actually failed (the formatting is quite difficult to parse). Unfortunately I don't have access to windows to run locally. The same pattern of failures seems to be affecting #13187 which is just a comment change, so perhaps the failures are unrelated?", "url": "https://github.com/apache/beam/pull/13180#discussion_r511498443", "createdAt": "2020-10-24T18:06:38Z", "author": {"login": "dandy10"}, "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -1321,3 +1320,39 @@ def augment_options(cls, options):\n       for name, value in override.items():\n         setattr(options, name, value)\n     return options\n+\n+\n+class S3Options(PipelineOptions):\n+  @classmethod\n+  def _add_argparse_args(cls, parser):\n+    # These options are passed to the S3 IO Client\n+    parser.add_argument(\n+        '--aws_access_key_id',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_secret_access_key',\n+        default=None,\n+        help='The secret key to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--aws_session_token',\n+        default=None,\n+        help='The session token to use when creating the s3 client.')\n+    parser.add_argument(\n+        '--endpoint_url',\n+        default=None,\n+        help='The complete URL to use for the constructed s3 client.')\n+    parser.add_argument(\n+        '--region_name',\n+        default=None,\n+        help='The name of the region associated with the client.')\n+    parser.add_argument(\n+        '--api_version', default=None, help='The API version to use.')\n+    parser.add_argument(\n+        '--verify',\n+        default=None,\n+        help='Whether or not to verify SSL certificates.')\n+    parser.add_argument(\n+        '--use_ssl',\n+        default=True,\n+        help='Whether or not to use SSL. By default, SSL is used.')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzMjk4Mw=="}, "originalCommit": {"oid": "584db8ba8813917747feb967ba039d503870b1bb"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2840, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}