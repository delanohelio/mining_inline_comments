{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTIxMTI5", "number": 12011, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMTo0N1rOEGIFJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMTo0N1rOEGIFJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODU5MzAxOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerAccessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMTo0OFrOGku9DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDowODoxMVrOGniePQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MTIxMg==", "bodyText": "This patch sounds good. But i have a question.  RetrySettings seems to support retry with backoff. The following retry mechanism could be moved to here as well.\nhttps://github.com/apache/beam/blob/master/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerIO.java#L1485\nCan that be done? Not as part of this patch. I could send out a PR as well after testing. That would clean up some code in SpannerIO as well", "url": "https://github.com/apache/beam/pull/12011#discussion_r441171212", "createdAt": "2020-06-16T22:11:48Z", "author": {"login": "allenpradeep"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerAccessor.java", "diffHunk": "@@ -63,23 +65,19 @@ static SpannerAccessor create(SpannerConfig spannerConfig) {\n     ValueProvider<Duration> commitDeadline = spannerConfig.getCommitDeadline();\n     if (commitDeadline != null && commitDeadline.get().getMillis() > 0) {\n \n-      // In Spanner API version 1.21 or above, we can set the deadline / total Timeout on an API\n-      // call using the following code:\n-      //\n-      // UnaryCallSettings.Builder commitSettings =\n-      // builder.getSpannerStubSettingsBuilder().commitSettings();\n-      // RetrySettings.Builder commitRetrySettings = commitSettings.getRetrySettings().toBuilder()\n-      // commitSettings.setRetrySettings(\n-      //     commitRetrySettings.setTotalTimeout(\n-      //         Duration.ofMillis(getCommitDeadlineMillis().get()))\n-      //     .build());\n-      //\n-      // However, at time of this commit, the Spanner API is at only at v1.6.0, where the only\n-      // method to set a deadline is with GRPC Interceptors, so we have to use that...\n-      SpannerInterceptorProvider interceptorProvider =\n-          SpannerInterceptorProvider.createDefault()\n-              .with(new CommitDeadlineSettingInterceptor(commitDeadline.get()));\n-      builder.setInterceptorProvider(interceptorProvider);\n+      // Set the GRPC deadline on the Commit API call.\n+      UnaryCallSettings.Builder commitSettings =\n+          builder.getSpannerStubSettingsBuilder().commitSettings();\n+      RetrySettings.Builder commitRetrySettings = commitSettings.getRetrySettings().toBuilder();\n+      commitSettings.setRetrySettings(\n+          commitRetrySettings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "add706f14ce4d9ab164896b32e8827048a21eeb6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExMjQ0NQ==", "bodyText": "It can be done, but it does it silently in the background. This mechanism allows us to have a  counter for the number of timeouts which are useful for diagnosing slowness...", "url": "https://github.com/apache/beam/pull/12011#discussion_r444112445", "createdAt": "2020-06-23T10:08:11Z", "author": {"login": "nielm"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerAccessor.java", "diffHunk": "@@ -63,23 +65,19 @@ static SpannerAccessor create(SpannerConfig spannerConfig) {\n     ValueProvider<Duration> commitDeadline = spannerConfig.getCommitDeadline();\n     if (commitDeadline != null && commitDeadline.get().getMillis() > 0) {\n \n-      // In Spanner API version 1.21 or above, we can set the deadline / total Timeout on an API\n-      // call using the following code:\n-      //\n-      // UnaryCallSettings.Builder commitSettings =\n-      // builder.getSpannerStubSettingsBuilder().commitSettings();\n-      // RetrySettings.Builder commitRetrySettings = commitSettings.getRetrySettings().toBuilder()\n-      // commitSettings.setRetrySettings(\n-      //     commitRetrySettings.setTotalTimeout(\n-      //         Duration.ofMillis(getCommitDeadlineMillis().get()))\n-      //     .build());\n-      //\n-      // However, at time of this commit, the Spanner API is at only at v1.6.0, where the only\n-      // method to set a deadline is with GRPC Interceptors, so we have to use that...\n-      SpannerInterceptorProvider interceptorProvider =\n-          SpannerInterceptorProvider.createDefault()\n-              .with(new CommitDeadlineSettingInterceptor(commitDeadline.get()));\n-      builder.setInterceptorProvider(interceptorProvider);\n+      // Set the GRPC deadline on the Commit API call.\n+      UnaryCallSettings.Builder commitSettings =\n+          builder.getSpannerStubSettingsBuilder().commitSettings();\n+      RetrySettings.Builder commitRetrySettings = commitSettings.getRetrySettings().toBuilder();\n+      commitSettings.setRetrySettings(\n+          commitRetrySettings", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MTIxMg=="}, "originalCommit": {"oid": "add706f14ce4d9ab164896b32e8827048a21eeb6"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3525, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}