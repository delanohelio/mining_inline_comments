{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NDU3NDI5", "number": 13543, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxNzoyMVrOFI5iSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMjozMzo1NlrOFI7IAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc1NTkyOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxNzoyMVrOILEnXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxNzoyMVrOILEnXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MDg2MQ==", "bodyText": "Please, make it configurable separately for keys and values like we do with other configuration options.", "url": "https://github.com/apache/beam/pull/13543#discussion_r548480861", "createdAt": "2020-12-24T10:17:21Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "diffHunk": "@@ -475,6 +479,18 @@\n       return withValueTranslation(function).toBuilder().setValueCoder(coder).build();\n     }\n \n+    /**\n+     * Determines if key-value clone should be skipped or not (default is 'false'). Hadoop formats\n+     * typically work with Writable data structures which are mutable. Therefore, this IO will clone\n+     * read key-values if they are not in the list of well known immutable types. However, in case\n+     * user does use key/value translation functions, resulting key-values might already be\n+     * immutable. In such case, additional copy is unnecessary overhead and can be avoided by\n+     * setting skip to 'true'.\n+     */\n+    public Read<K, V> withSkipKeyValueClone(boolean value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76af49ec9db17fc63099b7ed8ea6970e6556d04f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgwMzg0OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozOTozM1rOILFBgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozOTozM1rOILFBgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NzU1NA==", "bodyText": "Please, set default values in read() with a builder.", "url": "https://github.com/apache/beam/pull/13543#discussion_r548487554", "createdAt": "2020-12-24T10:39:33Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "diffHunk": "@@ -488,13 +504,16 @@\n       if (valueCoder == null) {\n         valueCoder = getDefaultCoder(getValueTypeDescriptor(), coderRegistry);\n       }\n+      boolean skipKeyValueClone = getSkipKeyValueClone() == null ? false : getSkipKeyValueClone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76af49ec9db17fc63099b7ed8ea6970e6556d04f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTAxMTI1OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMjozMToyNFrOILGz2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0ODo1MFrOIM7rhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUxNjgyNA==", "bodyText": "Should it be used only with withKeyTranslation() or withValueTranslation(), or it can be used independently?", "url": "https://github.com/apache/beam/pull/13543#discussion_r548516824", "createdAt": "2020-12-24T12:31:24Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "diffHunk": "@@ -475,6 +479,18 @@\n       return withValueTranslation(function).toBuilder().setValueCoder(coder).build();\n     }\n \n+    /**\n+     * Determines if key-value clone should be skipped or not (default is 'false'). Hadoop formats\n+     * typically work with Writable data structures which are mutable. Therefore, this IO will clone\n+     * read key-values if they are not in the list of well known immutable types. However, in case\n+     * user does use key/value translation functions, resulting key-values might already be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76af49ec9db17fc63099b7ed8ea6970e6556d04f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMTYyMQ==", "bodyText": "I would keep it separate. I am not sure if there are some input formats out there which can be not reusing instances of does not use writables for serialization.", "url": "https://github.com/apache/beam/pull/13543#discussion_r550431621", "createdAt": "2020-12-31T08:48:50Z", "author": {"login": "JozoVilcek"}, "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "diffHunk": "@@ -475,6 +479,18 @@\n       return withValueTranslation(function).toBuilder().setValueCoder(coder).build();\n     }\n \n+    /**\n+     * Determines if key-value clone should be skipped or not (default is 'false'). Hadoop formats\n+     * typically work with Writable data structures which are mutable. Therefore, this IO will clone\n+     * read key-values if they are not in the list of well known immutable types. However, in case\n+     * user does use key/value translation functions, resulting key-values might already be", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUxNjgyNA=="}, "originalCommit": {"oid": "76af49ec9db17fc63099b7ed8ea6970e6556d04f"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTAxNjMzOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMjozMzo1NlrOILG2hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMjozMzo1NlrOILG2hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUxNzUwOQ==", "bodyText": "Please, update HadoopFormatIO's Javadoc as well.", "url": "https://github.com/apache/beam/pull/13543#discussion_r548517509", "createdAt": "2020-12-24T12:33:56Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/hadoop-format/src/main/java/org/apache/beam/sdk/io/hadoop/format/HadoopFormatIO.java", "diffHunk": "@@ -475,6 +479,18 @@\n       return withValueTranslation(function).toBuilder().setValueCoder(coder).build();\n     }\n \n+    /**\n+     * Determines if key-value clone should be skipped or not (default is 'false'). Hadoop formats", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76af49ec9db17fc63099b7ed8ea6970e6556d04f"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2568, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}