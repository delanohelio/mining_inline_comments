{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjUxMDYx", "number": 12454, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTo0MzowM1rOEUqDBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDoxMzozNFrOEUzGjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDk1ODc4OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTo0MzowM1rOG6-qUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjo0Mzo0M1rOG7ou8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzIzNQ==", "bodyText": "Let's mark this Deprecated and we can remove it down the road.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n          \n          \n            \n              /** \n          \n          \n            \n               * A mapping from URN to an {@link ExternalTransformBuilder} class.\n          \n          \n            \n               *\n          \n          \n            \n               * @deprecated Prefer implementing `knownBuilderInstances`. This method will be removed in a future version of Beam.\n          \n          \n            \n               */\n          \n          \n            \n               @Deprecated", "url": "https://github.com/apache/beam/pull/12454#discussion_r464497235", "createdAt": "2020-08-03T15:43:03Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cffcf04402c1e39eb5669813eee7a66c386a07"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NjU0NQ==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12454#discussion_r465186545", "createdAt": "2020-08-04T16:43:43Z", "author": {"login": "sclukas77"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzIzNQ=="}, "originalCommit": {"oid": "69cffcf04402c1e39eb5669813eee7a66c386a07"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjQzODE5OnYy", "diffSide": "LEFT", "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDoxMToyMlrOG7Mojg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjo0NDozMVrOG7ow0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjE1OA==", "bodyText": "I think after this change there are no callers to buildTransform, can you remove it?", "url": "https://github.com/apache/beam/pull/12454#discussion_r464726158", "createdAt": "2020-08-04T00:11:22Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "diffHunk": "@@ -107,39 +107,39 @@\n           ImmutableMap.builder();\n       for (ExternalTransformRegistrar registrar :\n           ServiceLoader.load(ExternalTransformRegistrar.class)) {\n-        for (Map.Entry<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> entry :\n-            registrar.knownBuilders().entrySet()) {\n+        for (Map.Entry<String, ExternalTransformBuilder<?, ?, ?>> entry :\n+            registrar.knownBuilderInstances().entrySet()) {\n           String urn = entry.getKey();\n-          Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass = entry.getValue();\n+          ExternalTransformBuilder builderInstance = entry.getValue();\n           builder.put(\n               urn,\n               spec -> {\n                 try {\n                   ExternalTransforms.ExternalConfigurationPayload payload =\n                       ExternalTransforms.ExternalConfigurationPayload.parseFrom(spec.getPayload());\n-                  return translate(payload, builderClass);\n+                  return builderInstance.buildExternal(\n+                      payloadToConfig(\n+                          payload,\n+                          (Class<? extends ExternalTransformBuilder<?, ?, ?>>)\n+                              builderInstance.getClass()));\n                 } catch (Exception e) {\n                   throw new RuntimeException(\n                       String.format(\"Failed to build transform %s from spec %s\", urn, spec), e);\n                 }\n               });\n         }\n       }\n+\n       return builder.build();\n     }\n \n-    private static PTransform<?, ?> translate(\n+    Object payloadToConfig(\n         ExternalTransforms.ExternalConfigurationPayload payload,\n         Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass)\n         throws Exception {\n-      Preconditions.checkState(\n-          ExternalTransformBuilder.class.isAssignableFrom(builderClass),\n-          \"Provided identifier %s is not an ExternalTransformBuilder.\",\n-          builderClass.getName());\n-\n       Object configObject = initConfiguration(builderClass);\n       populateConfiguration(configObject, payload);\n-      return buildTransform(builderClass, configObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cffcf04402c1e39eb5669813eee7a66c386a07"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzAyNg==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12454#discussion_r465187026", "createdAt": "2020-08-04T16:44:31Z", "author": {"login": "sclukas77"}, "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "diffHunk": "@@ -107,39 +107,39 @@\n           ImmutableMap.builder();\n       for (ExternalTransformRegistrar registrar :\n           ServiceLoader.load(ExternalTransformRegistrar.class)) {\n-        for (Map.Entry<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> entry :\n-            registrar.knownBuilders().entrySet()) {\n+        for (Map.Entry<String, ExternalTransformBuilder<?, ?, ?>> entry :\n+            registrar.knownBuilderInstances().entrySet()) {\n           String urn = entry.getKey();\n-          Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass = entry.getValue();\n+          ExternalTransformBuilder builderInstance = entry.getValue();\n           builder.put(\n               urn,\n               spec -> {\n                 try {\n                   ExternalTransforms.ExternalConfigurationPayload payload =\n                       ExternalTransforms.ExternalConfigurationPayload.parseFrom(spec.getPayload());\n-                  return translate(payload, builderClass);\n+                  return builderInstance.buildExternal(\n+                      payloadToConfig(\n+                          payload,\n+                          (Class<? extends ExternalTransformBuilder<?, ?, ?>>)\n+                              builderInstance.getClass()));\n                 } catch (Exception e) {\n                   throw new RuntimeException(\n                       String.format(\"Failed to build transform %s from spec %s\", urn, spec), e);\n                 }\n               });\n         }\n       }\n+\n       return builder.build();\n     }\n \n-    private static PTransform<?, ?> translate(\n+    Object payloadToConfig(\n         ExternalTransforms.ExternalConfigurationPayload payload,\n         Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass)\n         throws Exception {\n-      Preconditions.checkState(\n-          ExternalTransformBuilder.class.isAssignableFrom(builderClass),\n-          \"Provided identifier %s is not an ExternalTransformBuilder.\",\n-          builderClass.getName());\n-\n       Object configObject = initConfiguration(builderClass);\n       populateConfiguration(configObject, payload);\n-      return buildTransform(builderClass, configObject);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjE1OA=="}, "originalCommit": {"oid": "69cffcf04402c1e39eb5669813eee7a66c386a07"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjQ0MjM2OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDoxMzozNFrOG7MrEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjo0NDo0NVrOG7oxaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgwMw==", "bodyText": "There should be a default implementation for this that just returns an empty Map, that way new implementations will only have to override knownBuilderInstances()", "url": "https://github.com/apache/beam/pull/12454#discussion_r464726803", "createdAt": "2020-08-04T00:13:34Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n   Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cffcf04402c1e39eb5669813eee7a66c386a07"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzE3OQ==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12454#discussion_r465187179", "createdAt": "2020-08-04T16:44:45Z", "author": {"login": "sclukas77"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n   Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgwMw=="}, "originalCommit": {"oid": "69cffcf04402c1e39eb5669813eee7a66c386a07"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 797, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}