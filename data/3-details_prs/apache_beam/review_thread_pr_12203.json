{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTQ2NDg3", "number": 12203, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNzoyMVrOERmdEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyNToyMlrOERmnOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkxMjgzOnYy", "diffSide": "RIGHT", "path": "CHANGES.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNzoyMVrOG2aD5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODowMjo1M1rOG242yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMzI2OQ==", "bodyText": "Did you mean BigQuerySink ?", "url": "https://github.com/apache/beam/pull/12203#discussion_r459703269", "createdAt": "2020-07-23T20:17:21Z", "author": {"login": "chamikaramj"}, "path": "CHANGES.md", "diffHunk": "@@ -55,6 +55,9 @@\n \n * New overloads for BigtableIO.Read.withKeyRange() and BigtableIO.Read.withRowFilter()\n   methods that take ValueProvider as a parameter (Java) ([BEAM-10283](https://issues.apache.org/jira/browse/BEAM-10283)).\n+* The WriteToBigQuery transform (Python) in Dataflow Batch no longer relies on BigQuerySource by default. It relies on ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNzgxOA==", "bodyText": "Ah yes, done.", "url": "https://github.com/apache/beam/pull/12203#discussion_r460207818", "createdAt": "2020-07-24T18:02:53Z", "author": {"login": "pabloem"}, "path": "CHANGES.md", "diffHunk": "@@ -55,6 +55,9 @@\n \n * New overloads for BigtableIO.Read.withKeyRange() and BigtableIO.Read.withRowFilter()\n   methods that take ValueProvider as a parameter (Java) ([BEAM-10283](https://issues.apache.org/jira/browse/BEAM-10283)).\n+* The WriteToBigQuery transform (Python) in Dataflow Batch no longer relies on BigQuerySource by default. It relies on ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMzI2OQ=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkxODI3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxOTowM1rOG2aHXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDoyNzozMFrOG4kVpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDE1OA==", "bodyText": "Can we just change this sink to use the new sink ?", "url": "https://github.com/apache/beam/pull/12203#discussion_r459704158", "createdAt": "2020-07-23T20:19:03Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -227,6 +225,7 @@ def test_big_query_standard_sql_kms_key_native(self):\n         'on_success_matcher': all_of(*pipeline_verifiers),\n         'kms_key': kms_key,\n         'native': True,\n+        'experiments': 'use_dataflow_bq_sink',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNzgzOQ==", "bodyText": "I'm trying to preserve the same test coverage after the change, and remove BQSink tests later on. Would htis be fine?", "url": "https://github.com/apache/beam/pull/12203#discussion_r460207839", "createdAt": "2020-07-24T18:02:56Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -227,6 +225,7 @@ def test_big_query_standard_sql_kms_key_native(self):\n         'on_success_matcher': all_of(*pipeline_verifiers),\n         'kms_key': kms_key,\n         'native': True,\n+        'experiments': 'use_dataflow_bq_sink',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDE1OA=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2ODgwNA==", "bodyText": "I think we should either change tests to use the default sink (which will be used by most of the users going forward) or run tests for both.", "url": "https://github.com/apache/beam/pull/12203#discussion_r461968804", "createdAt": "2020-07-29T00:27:30Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -227,6 +225,7 @@ def test_big_query_standard_sql_kms_key_native(self):\n         'on_success_matcher': all_of(*pipeline_verifiers),\n         'kms_key': kms_key,\n         'native': True,\n+        'experiments': 'use_dataflow_bq_sink',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDE1OA=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkxODc2OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxOToxNVrOG2aHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODowMzowNFrOG243FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDIzOQ==", "bodyText": "Ditto.", "url": "https://github.com/apache/beam/pull/12203#discussion_r459704239", "createdAt": "2020-07-23T20:19:15Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -305,7 +303,8 @@ def test_big_query_new_types_native(self):\n         'use_standard_sql': False,\n         'native': True,\n         'wait_until_finish_duration': WAIT_UNTIL_FINISH_DURATION_MS,\n-        'on_success_matcher': all_of(*pipeline_verifiers)\n+        'on_success_matcher': all_of(*pipeline_verifiers),\n+        'experiments': 'use_dataflow_bq_sink',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNzg5Mw==", "bodyText": "I'm trying to preserve the same test coverage after the change, and remove BQSink tests later on. Would htis be fine?", "url": "https://github.com/apache/beam/pull/12203#discussion_r460207893", "createdAt": "2020-07-24T18:03:04Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -305,7 +303,8 @@ def test_big_query_new_types_native(self):\n         'use_standard_sql': False,\n         'native': True,\n         'wait_until_finish_duration': WAIT_UNTIL_FINISH_DURATION_MS,\n-        'on_success_matcher': all_of(*pipeline_verifiers)\n+        'on_success_matcher': all_of(*pipeline_verifiers),\n+        'experiments': 'use_dataflow_bq_sink',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDIzOQ=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkyMTEyOnYy", "diffSide": "RIGHT", "path": "CHANGES.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxOTo1NlrOG2aJHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODowMzoxNFrOG243Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDYwNg==", "bodyText": "May be call this \"use_legacy_bq_sink\" ?", "url": "https://github.com/apache/beam/pull/12203#discussion_r459704606", "createdAt": "2020-07-23T20:19:56Z", "author": {"login": "chamikaramj"}, "path": "CHANGES.md", "diffHunk": "@@ -55,6 +55,9 @@\n \n * New overloads for BigtableIO.Read.withKeyRange() and BigtableIO.Read.withRowFilter()\n   methods that take ValueProvider as a parameter (Java) ([BEAM-10283](https://issues.apache.org/jira/browse/BEAM-10283)).\n+* The WriteToBigQuery transform (Python) in Dataflow Batch no longer relies on BigQuerySource by default. It relies on \n+  a new, fully-featured transform based on file loads into BigQuery. To revert the behavior to the old implementation,\n+  you may use `--experiments=use_dataflow_bq_sink`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNzk1NQ==", "bodyText": "Done everywhere. Thanks!", "url": "https://github.com/apache/beam/pull/12203#discussion_r460207955", "createdAt": "2020-07-24T18:03:14Z", "author": {"login": "pabloem"}, "path": "CHANGES.md", "diffHunk": "@@ -55,6 +55,9 @@\n \n * New overloads for BigtableIO.Read.withKeyRange() and BigtableIO.Read.withRowFilter()\n   methods that take ValueProvider as a parameter (Java) ([BEAM-10283](https://issues.apache.org/jira/browse/BEAM-10283)).\n+* The WriteToBigQuery transform (Python) in Dataflow Batch no longer relies on BigQuerySource by default. It relies on \n+  a new, fully-featured transform based on file loads into BigQuery. To revert the behavior to the old implementation,\n+  you may use `--experiments=use_dataflow_bq_sink`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNDYwNg=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkyNzIyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyMTozN1rOG2aM3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODowNTozNFrOG247sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNTU2NA==", "bodyText": "Why not run this using the new sink ?", "url": "https://github.com/apache/beam/pull/12203#discussion_r459705564", "createdAt": "2020-07-23T20:21:37Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -698,6 +698,7 @@ def test_gbk_translation(self):\n   def test_write_bigquery_translation(self):\n     runner = DataflowRunner()\n \n+    self.default_properties.append('--experiments=use_dataflow_bq_sink')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwODI0MA==", "bodyText": "this test checks that the transform is replaced appropriately.", "url": "https://github.com/apache/beam/pull/12203#discussion_r460208240", "createdAt": "2020-07-24T18:03:49Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -698,6 +698,7 @@ def test_gbk_translation(self):\n   def test_write_bigquery_translation(self):\n     runner = DataflowRunner()\n \n+    self.default_properties.append('--experiments=use_dataflow_bq_sink')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNTU2NA=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwOTA3Mw==", "bodyText": "so we verify that the Native sink is being replaced appropriately", "url": "https://github.com/apache/beam/pull/12203#discussion_r460209073", "createdAt": "2020-07-24T18:05:34Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -698,6 +698,7 @@ def test_gbk_translation(self):\n   def test_write_bigquery_translation(self):\n     runner = DataflowRunner()\n \n+    self.default_properties.append('--experiments=use_dataflow_bq_sink')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNTU2NA=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkyODU4OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyMTo1N1rOG2aNpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODowNjowM1rOG248gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNTc2Nw==", "bodyText": "Ditto.", "url": "https://github.com/apache/beam/pull/12203#discussion_r459705767", "createdAt": "2020-07-23T20:21:57Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -749,12 +750,13 @@ def test_write_bigquery_failed_translation(self):\n     \"\"\"Tests that WriteToBigQuery cannot have any consumers if replaced.\"\"\"\n     runner = DataflowRunner()\n \n-    with self.assertRaises(ValueError):\n+    self.default_properties.append('--experiments=use_dataflow_bq_sink')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwOTI4MA==", "bodyText": "same as above", "url": "https://github.com/apache/beam/pull/12203#discussion_r460209280", "createdAt": "2020-07-24T18:06:03Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -749,12 +750,13 @@ def test_write_bigquery_failed_translation(self):\n     \"\"\"Tests that WriteToBigQuery cannot have any consumers if replaced.\"\"\"\n     runner = DataflowRunner()\n \n-    with self.assertRaises(ValueError):\n+    self.default_properties.append('--experiments=use_dataflow_bq_sink')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNTc2Nw=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkzNDk3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyNDoxNFrOG2aR0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo0MzoxNVrOG26Ang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNjgzNA==", "bodyText": "Can we use the experiment here ? You can get hold of the PipelineOptions through input.", "url": "https://github.com/apache/beam/pull/12203#discussion_r459706834", "createdAt": "2020-07-23T20:24:14Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "diffHunk": "@@ -236,7 +236,10 @@ def enter_composite_transform(self, transform_node):\n         self.visit_transform(transform_node)\n \n       def visit_transform(self, transform_node):\n-        if [o for o in self.outputs if o in transform_node.inputs]:\n+        # Internal consumers of the outputs we're overriding are expected.\n+        # We only error out on non-internal consumers.\n+        if ('BigQueryBatchFileLoads' not in transform_node.full_label and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNjcxOA==", "bodyText": "What would we use the experiment for? In this case, the experiment is absent, so we would not need it.", "url": "https://github.com/apache/beam/pull/12203#discussion_r460226718", "createdAt": "2020-07-24T18:43:15Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "diffHunk": "@@ -236,7 +236,10 @@ def enter_composite_transform(self, transform_node):\n         self.visit_transform(transform_node)\n \n       def visit_transform(self, transform_node):\n-        if [o for o in self.outputs if o in transform_node.inputs]:\n+        # Internal consumers of the outputs we're overriding are expected.\n+        # We only error out on non-internal consumers.\n+        if ('BigQueryBatchFileLoads' not in transform_node.full_label and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNjgzNA=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODkzODgzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyNToyMlrOG2aUQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODoyNjozNlrOG25idw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNzQ1Ng==", "bodyText": "Why did we have to add this explicit fail ? I don't think we add such visitors for other transforms that do not produce output. Usually succeeding transform just ends up being an no-op.", "url": "https://github.com/apache/beam/pull/12203#discussion_r459707456", "createdAt": "2020-07-23T20:25:22Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "diffHunk": "@@ -236,7 +236,10 @@ def enter_composite_transform(self, transform_node):\n         self.visit_transform(transform_node)\n \n       def visit_transform(self, transform_node):\n-        if [o for o in self.outputs if o in transform_node.inputs]:\n+        # Internal consumers of the outputs we're overriding are expected.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxODk5OQ==", "bodyText": "This is because BQ FIle loads returns a series of pcollections (e.g. files written, jobs started) - and if the downstream transforms depend on these outputs, they will not work properly when replacing WriteToBQ with BQSink, so we error out.", "url": "https://github.com/apache/beam/pull/12203#discussion_r460218999", "createdAt": "2020-07-24T18:26:36Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "diffHunk": "@@ -236,7 +236,10 @@ def enter_composite_transform(self, transform_node):\n         self.visit_transform(transform_node)\n \n       def visit_transform(self, transform_node):\n-        if [o for o in self.outputs if o in transform_node.inputs]:\n+        # Internal consumers of the outputs we're overriding are expected.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNzQ1Ng=="}, "originalCommit": {"oid": "585241da6d61ba27b6d57a5fbf90b6b4e93b87a1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 987, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}