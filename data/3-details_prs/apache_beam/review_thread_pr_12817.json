{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzcyNjE2", "number": 12817, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzoxODo0OVrOEiUxEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzoxODo0OVrOEiUxEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDI3MjgxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_metrics.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzoxODo0OVrOHQI5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzowOToyMlrOHQm98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NTExNA==", "bodyText": "Do we need to log if this happens else this will be a silent failure.", "url": "https://github.com/apache/beam/pull/12817#discussion_r486685114", "createdAt": "2020-09-10T23:18:49Z", "author": {"login": "angoenka"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_metrics.py", "diffHunk": "@@ -210,6 +210,14 @@ def _get_metric_value(self, metric):\n       dist_sum = _get_match(\n           metric.distribution.object_value.properties,\n           lambda x: x.key == 'sum').value.integer_value\n+      if not dist_sum:\n+        # distribution metric is not meant to use on large values, but in case\n+        # it is, the value can overflow and become double_value, the correctness\n+        # of the value may not be guaranteed.\n+        dist_sum = int(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc793bbbb2e8a21662bdf4afc513fd14da1ba805"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NTYzMQ==", "bodyText": "Sounds good.", "url": "https://github.com/apache/beam/pull/12817#discussion_r486685631", "createdAt": "2020-09-10T23:20:28Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_metrics.py", "diffHunk": "@@ -210,6 +210,14 @@ def _get_metric_value(self, metric):\n       dist_sum = _get_match(\n           metric.distribution.object_value.properties,\n           lambda x: x.key == 'sum').value.integer_value\n+      if not dist_sum:\n+        # distribution metric is not meant to use on large values, but in case\n+        # it is, the value can overflow and become double_value, the correctness\n+        # of the value may not be guaranteed.\n+        dist_sum = int(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NTExNA=="}, "originalCommit": {"oid": "bc793bbbb2e8a21662bdf4afc513fd14da1ba805"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4ODA4OA==", "bodyText": "Should we also add the metric name in the logs for easier debugging.", "url": "https://github.com/apache/beam/pull/12817#discussion_r486688088", "createdAt": "2020-09-10T23:28:24Z", "author": {"login": "angoenka"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_metrics.py", "diffHunk": "@@ -210,6 +210,14 @@ def _get_metric_value(self, metric):\n       dist_sum = _get_match(\n           metric.distribution.object_value.properties,\n           lambda x: x.key == 'sum').value.integer_value\n+      if not dist_sum:\n+        # distribution metric is not meant to use on large values, but in case\n+        # it is, the value can overflow and become double_value, the correctness\n+        # of the value may not be guaranteed.\n+        dist_sum = int(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NTExNA=="}, "originalCommit": {"oid": "bc793bbbb2e8a21662bdf4afc513fd14da1ba805"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3NzcxMw==", "bodyText": "done.", "url": "https://github.com/apache/beam/pull/12817#discussion_r487177713", "createdAt": "2020-09-11T17:09:22Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_metrics.py", "diffHunk": "@@ -210,6 +210,14 @@ def _get_metric_value(self, metric):\n       dist_sum = _get_match(\n           metric.distribution.object_value.properties,\n           lambda x: x.key == 'sum').value.integer_value\n+      if not dist_sum:\n+        # distribution metric is not meant to use on large values, but in case\n+        # it is, the value can overflow and become double_value, the correctness\n+        # of the value may not be guaranteed.\n+        dist_sum = int(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NTExNA=="}, "originalCommit": {"oid": "bc793bbbb2e8a21662bdf4afc513fd14da1ba805"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3290, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}