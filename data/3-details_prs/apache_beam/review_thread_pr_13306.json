{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDUwODQz", "number": 13306, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMTowNzoxNVrOE339gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNjozMDo1MFrOFGBIyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDI0MDAwOnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/AggregateFn.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMTowNzoxNVrOHxeUIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjo0Njo0M1rOHxhDbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYzODk0Ng==", "bodyText": "Do you think whether we should start by adding @Experimental?", "url": "https://github.com/apache/beam/pull/13306#discussion_r521638946", "createdAt": "2020-11-11T21:07:15Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/AggregateFn.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.sql;\n+\n+import java.io.Serializable;\n+import org.apache.beam.sdk.transforms.Combine;\n+\n+/** An aggregate function that can be executed as part of a SQL query. */\n+public class AggregateFn implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c7759ef4afb1716cf9f22ff3876fb2144930814"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY4MzgyMw==", "bodyText": "Definitely. Done.", "url": "https://github.com/apache/beam/pull/13306#discussion_r521683823", "createdAt": "2020-11-11T22:46:43Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/AggregateFn.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.sql;\n+\n+import java.io.Serializable;\n+import org.apache.beam.sdk.transforms.Combine;\n+\n+/** An aggregate function that can be executed as part of a SQL query. */\n+public class AggregateFn implements Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYzODk0Ng=="}, "originalCommit": {"oid": "8c7759ef4afb1716cf9f22ff3876fb2144930814"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODU0NDA4OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/udf/src/main/java/org/apache/beam/sdk/extensions/sql/udf/AggregateFn.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNjozMDo1MFrOIG0orA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNjozMDo1MFrOIG0orA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAyNDc0OA==", "bodyText": "Mark as @experimental?", "url": "https://github.com/apache/beam/pull/13306#discussion_r544024748", "createdAt": "2020-12-16T06:30:50Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/udf/src/main/java/org/apache/beam/sdk/extensions/sql/udf/AggregateFn.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.sql.udf;\n+\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+/**\n+ * An aggregate function that can be executed as part of a SQL query.\n+ *\n+ * <p>This interface contains a subset of the functionality of {@code\n+ * org.apache.beam.sdk.transforms.Combine.CombineFn}.\n+ *\n+ * @param <InputT> type of input values\n+ * @param <AccumT> type of mutable accumulator values\n+ * @param <OutputT> type of output values\n+ */\n+public interface AggregateFn<", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579ea2027ad836b73d2aa1250f127e6ab6af3b53"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2755, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}