{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTc2NTU2", "number": 12118, "title": "[BEAM-7705] Add BigQuery Java samples", "bodyText": "Adding new code samples for the BigQuery connector page. These show how to read/write all the data types of TableRows.\nR: @aaltay - feel free to add more reviewers\nBQ Review: @stephaniewang526 @shollyman - just to make sure what I did with BQ makes sense, or if there are better ways to do things :)\nFYI: @rosetn - I tried to keep the samples more or less equivalent, but there will be some region tag changes.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-29T18:24:41Z", "url": "https://github.com/apache/beam/pull/12118", "merged": true, "mergeCommit": {"oid": "0f37613099a5a23a56e9e963a8627df0e4058eac"}, "closed": true, "closedAt": "2020-08-12T12:09:05Z", "author": {"login": "davidcavazos"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwFKZsAH2gAyNDQxNTc2NTU2OjNiZGFlYTE1NzgyODZjY2Q1NzJiYWViNjBlY2ExMWJmOWI1MGZhYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-KSPvAFqTQ2NTg0NzA4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3bdaea1578286ccd572baeb60eca11bf9b50fabb", "author": {"user": {"login": "davidcavazos", "name": "David Cavazos"}}, "url": "https://github.com/apache/beam/commit/3bdaea1578286ccd572baeb60eca11bf9b50fabb", "committedDate": "2020-06-29T18:15:20Z", "message": "[BEAM-7705] Add BigQuery Java samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDEzMDQ5", "url": "https://github.com/apache/beam/pull/12118#pullrequestreview-439413049", "createdAt": "2020-06-29T18:51:53Z", "commit": {"oid": "3bdaea1578286ccd572baeb60eca11bf9b50fabb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODo1MTo1M1rOGqd2Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODo1MTo1M1rOGqd2Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE4MjMzOQ==", "bodyText": "It would be great to clarify in comments if this is streaming write or a load job.  I vaguely recall BigQueryIO picks the mechanism based on whether the pipeline is streaming or batch, but I don't see references to this in the javadoc for BigQueryIO.", "url": "https://github.com/apache/beam/pull/12118#discussion_r447182339", "createdAt": "2020-06-29T18:51:53Z", "author": {"login": "shollyman"}, "path": "examples/java/src/main/java/org/apache/beam/examples/snippets/transforms/io/gcp/bigquery/BigQueryWriteToTable.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.examples.snippets.transforms.io.gcp.bigquery;\n+\n+// [START bigquery_write_to_table]\n+\n+import com.google.api.services.bigquery.model.TableRow;\n+import com.google.api.services.bigquery.model.TableSchema;\n+import org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO;\n+import org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.Write.CreateDisposition;\n+import org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.Write.WriteDisposition;\n+import org.apache.beam.sdk.values.PCollection;\n+\n+class BigQueryWriteToTable {\n+  public static void writeToTable(\n+      String project,\n+      String dataset,\n+      String table,\n+      TableSchema schema,\n+      PCollection<TableRow> rows) {\n+\n+    // String project = \"my-project-id\";\n+    // String dataset = \"my_bigquery_dataset_id\";\n+    // String table = \"my_bigquery_table_id\";\n+\n+    // TableSchema schema = new TableSchema().setFields(Arrays.asList(...));\n+\n+    // Pipeline pipeline = Pipeline.create();\n+    // PCollection<TableRow> rows = ...\n+\n+    rows.apply(\n+        \"Write to BigQuery\",\n+        BigQueryIO.writeTableRows()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bdaea1578286ccd572baeb60eca11bf9b50fabb"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5032a73946a4b2742b295b168e9ad7c5f301a1e7", "author": {"user": {"login": "davidcavazos", "name": "David Cavazos"}}, "url": "https://github.com/apache/beam/commit/5032a73946a4b2742b295b168e9ad7c5f301a1e7", "committedDate": "2020-07-10T15:45:24Z", "message": "Merge branch 'master' of https://github.com/apache/beam into bigquery-samples-java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1OTA3MjMy", "url": "https://github.com/apache/beam/pull/12118#pullrequestreview-455907232", "createdAt": "2020-07-27T15:45:22Z", "commit": {"oid": "5032a73946a4b2742b295b168e9ad7c5f301a1e7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTo0NToyM1rOG3obnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTo0NzoyN1rOG3og5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4NzI5Mg==", "bodyText": "My recollection was that sometimes floats come back as strings. I think it depends on whether it is JSON or Avro export.", "url": "https://github.com/apache/beam/pull/12118#discussion_r460987292", "createdAt": "2020-07-27T15:45:23Z", "author": {"login": "kennknowles"}, "path": "examples/java/src/main/java/org/apache/beam/examples/snippets/transforms/io/gcp/bigquery/BigQueryMyData.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.examples.snippets.transforms.io.gcp.bigquery;\n+\n+// [START bigquery_my_data]\n+\n+import com.google.api.services.bigquery.model.TableRow;\n+import java.math.BigDecimal;\n+import java.time.Instant;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.beam.sdk.coders.AvroCoder;\n+import org.apache.beam.sdk.coders.DefaultCoder;\n+\n+class BigQueryMyData {\n+\n+  static class MyStruct {\n+    String stringValue;\n+    Long int64Value;\n+  }\n+\n+  @DefaultCoder(AvroCoder.class)\n+  static class MyData {\n+    String myString;\n+    Long myInt64;\n+    Double myFloat64;\n+    BigDecimal myNumeric;\n+    Boolean myBoolean;\n+    byte[] myBytes;\n+    String myDate;\n+    String myDateTime;\n+    String myTime;\n+    String myTimestamp;\n+    String myGeography;\n+    List<Long> myArray;\n+    MyStruct myStruct;\n+\n+    public static MyData fromTableRow(TableRow row) {\n+      MyData data = new MyData();\n+\n+      data.myString = (String) row.get(\"string_field\");\n+      data.myInt64 = Long.parseLong((String) row.get(\"int64_field\"));\n+      data.myFloat64 = (Double) row.get(\"float64_field\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5032a73946a4b2742b295b168e9ad7c5f301a1e7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4ODY0Ng==", "bodyText": "You can add @SuppressWarnings(\"unused\"). I also know that annotations and I think being public would do it. It is possible that Javadoc might cause it to be \"used\".", "url": "https://github.com/apache/beam/pull/12118#discussion_r460988646", "createdAt": "2020-07-27T15:47:27Z", "author": {"login": "kennknowles"}, "path": "examples/java/src/main/java/org/apache/beam/examples/snippets/transforms/io/gcp/bigquery/BigQueryMyData.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.examples.snippets.transforms.io.gcp.bigquery;\n+\n+// [START bigquery_my_data]\n+\n+import com.google.api.services.bigquery.model.TableRow;\n+import java.math.BigDecimal;\n+import java.time.Instant;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.beam.sdk.coders.AvroCoder;\n+import org.apache.beam.sdk.coders.DefaultCoder;\n+\n+class BigQueryMyData {\n+\n+  static class MyStruct {\n+    String stringValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5032a73946a4b2742b295b168e9ad7c5f301a1e7"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c49eb54bff2f5bf078429eb1419c35f590c1d225", "author": {"user": {"login": "davidcavazos", "name": "David Cavazos"}}, "url": "https://github.com/apache/beam/commit/c49eb54bff2f5bf078429eb1419c35f590c1d225", "committedDate": "2020-07-28T19:00:38Z", "message": "Suppressed warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784b3bf5c1631ecac94594c819bef6dfc03b09fb", "author": {"user": {"login": "davidcavazos", "name": "David Cavazos"}}, "url": "https://github.com/apache/beam/commit/784b3bf5c1631ecac94594c819bef6dfc03b09fb", "committedDate": "2020-07-28T19:00:45Z", "message": "Merge branch 'master' of https://github.com/apache/beam into bigquery-samples-java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1ODQ3MDg1", "url": "https://github.com/apache/beam/pull/12118#pullrequestreview-465847085", "createdAt": "2020-08-12T12:08:22Z", "commit": {"oid": "784b3bf5c1631ecac94594c819bef6dfc03b09fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3208, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}