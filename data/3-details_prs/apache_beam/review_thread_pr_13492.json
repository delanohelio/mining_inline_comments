{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMDM5NDE4", "number": 13492, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTowMjowOFrOFk3e_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTo1MToyOFrOFk5A3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MjAyMTEwOnYy", "diffSide": "RIGHT", "path": ".test-infra/validate-runner/src/main/java/org/apache/beam/validate/runner/model/CaseResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTowMjowOFrOI1LwFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTowMjowOFrOI1LwFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjYzNzk3NQ==", "bodyText": "you don't need to change this, but the next time you need to create a class to hold values, consider using AutoValue. They save a lot of time and prevent issues with implementation: https://github.com/google/auto/blob/master/value/userguide/index.md", "url": "https://github.com/apache/beam/pull/13492#discussion_r592637975", "createdAt": "2021-03-11T19:02:08Z", "author": {"login": "pabloem"}, "path": ".test-infra/validate-runner/src/main/java/org/apache/beam/validate/runner/model/CaseResult.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.validate.runner.model;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class CaseResult {\n+    private String className;\n+    private String name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MjAzNTk3OnYy", "diffSide": "RIGHT", "path": ".test-infra/validate-runner/src/main/java/org/apache/beam/validate/runner/service/BatchTestService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTowNDo0OFrOI1L49w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wOFQxMDo1NDoxN1rOJFVIHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY0MDI0Nw==", "bodyText": "It seems like BatchTestService and StreamTestService are almost identical. Maybe you could create a ModeTestService with a constructor ModeTestService(String mode), and simplify that code?", "url": "https://github.com/apache/beam/pull/13492#discussion_r592640247", "createdAt": "2021-03-11T19:04:48Z", "author": {"login": "pabloem"}, "path": ".test-infra/validate-runner/src/main/java/org/apache/beam/validate/runner/service/BatchTestService.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.validate.runner.service;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import net.sf.json.JSONObject;\n+import org.apache.beam.validate.runner.model.CaseResult;\n+import org.apache.beam.validate.runner.model.Configuration;\n+import org.apache.beam.validate.runner.model.TestResult;\n+import org.apache.beam.validate.runner.util.FileReaderUtil;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class BatchTestService implements TestService {\n+\n+    // Stores all the tests which are run across runners in batch mode\n+    private static Set<Pair<String, String>> batchTests = new HashSet<>();\n+\n+    //Stores the tests which are run for the particular runner.\n+    private HashMap<String, Set<CaseResult>> map = new HashMap<>();\n+\n+    public JSONObject getBatchTests() {\n+        try {\n+            Configuration configuration = FileReaderUtil.readConfiguration();\n+            for(Map<String, String> job : configuration.getBatch()) {\n+                try {\n+                    TestResult testResult = new ObjectMapper().readValue(getUrl(job,configuration), TestResult.class);\n+                    batchTests.addAll(getTestNames(testResult));\n+                    map.put((String) job.keySet().toArray()[0], getAllTests(testResult));\n+                } catch (Exception ex) {\n+                    ex.printStackTrace();\n+                }\n+            }\n+        } catch (Exception ex) {\n+            ex.printStackTrace();\n+        }\n+        JSONObject outputDetails = new JSONObject();\n+        outputDetails.put(\"batch\", process(batchTests, map));\n+        return outputDetails;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTU2ODc5Nw==", "bodyText": "updated", "url": "https://github.com/apache/beam/pull/13492#discussion_r609568797", "createdAt": "2021-04-08T10:54:17Z", "author": {"login": "sruthiskumar"}, "path": ".test-infra/validate-runner/src/main/java/org/apache/beam/validate/runner/service/BatchTestService.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.validate.runner.service;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import net.sf.json.JSONObject;\n+import org.apache.beam.validate.runner.model.CaseResult;\n+import org.apache.beam.validate.runner.model.Configuration;\n+import org.apache.beam.validate.runner.model.TestResult;\n+import org.apache.beam.validate.runner.util.FileReaderUtil;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class BatchTestService implements TestService {\n+\n+    // Stores all the tests which are run across runners in batch mode\n+    private static Set<Pair<String, String>> batchTests = new HashSet<>();\n+\n+    //Stores the tests which are run for the particular runner.\n+    private HashMap<String, Set<CaseResult>> map = new HashMap<>();\n+\n+    public JSONObject getBatchTests() {\n+        try {\n+            Configuration configuration = FileReaderUtil.readConfiguration();\n+            for(Map<String, String> job : configuration.getBatch()) {\n+                try {\n+                    TestResult testResult = new ObjectMapper().readValue(getUrl(job,configuration), TestResult.class);\n+                    batchTests.addAll(getTestNames(testResult));\n+                    map.put((String) job.keySet().toArray()[0], getAllTests(testResult));\n+                } catch (Exception ex) {\n+                    ex.printStackTrace();\n+                }\n+            }\n+        } catch (Exception ex) {\n+            ex.printStackTrace();\n+        }\n+        JSONObject outputDetails = new JSONObject();\n+        outputDetails.put(\"batch\", process(batchTests, map));\n+        return outputDetails;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY0MDI0Nw=="}, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MjA0NjY2OnYy", "diffSide": "RIGHT", "path": ".test-infra/validate-runner/src/main/resources/configuration.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTowNjo0MFrOI1L_QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xOFQxNzowNTowNVrOI5anMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY0MTg1Ng==", "bodyText": "Let's add - dataflow: beam_PostCommit_Java_VR_Dataflow_V2 : )", "url": "https://github.com/apache/beam/pull/13492#discussion_r592641856", "createdAt": "2021-03-11T19:06:40Z", "author": {"login": "pabloem"}, "path": ".test-infra/validate-runner/src/main/resources/configuration.yaml", "diffHunk": "@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements. See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+batch:\n+  - flink: beam_PostCommit_Java_PVR_Flink_Batch\n+  - spark: beam_PostCommit_Java_PVR_Spark_Batch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzA3NTc2Mw==", "bodyText": "added", "url": "https://github.com/apache/beam/pull/13492#discussion_r597075763", "createdAt": "2021-03-18T17:05:05Z", "author": {"login": "sruthiskumar"}, "path": ".test-infra/validate-runner/src/main/resources/configuration.yaml", "diffHunk": "@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements. See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+batch:\n+  - flink: beam_PostCommit_Java_PVR_Flink_Batch\n+  - spark: beam_PostCommit_Java_PVR_Spark_Batch", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY0MTg1Ng=="}, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MjI0NDAzOnYy", "diffSide": "RIGHT", "path": ".test-infra/validate-runner/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTo0NToxM1rOI1N1Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTo0NToxM1rOI1N1Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY3MjAxNQ==", "bodyText": "I wonder if it's possible to depend on Beam's current branch instead of an older version. Could you try something like this:\ncompile project(path: \":sdks:java:core\").sourceSets.test.output\n\nor perhaps, although this may not work:\ncompile project(path: \":sdks:java:core\") classifier: 'tests'\n\nLet me know if that works or not. If that does not work, then at least we should choose a single Beam version, set a single variable, and use that variable in all these lines.", "url": "https://github.com/apache/beam/pull/13492#discussion_r592672015", "createdAt": "2021-03-11T19:45:13Z", "author": {"login": "pabloem"}, "path": ".test-infra/validate-runner/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin : \"application\"\n+\n+group 'org.apache.beam'\n+description = \"Apache Beam :: Validate :: Runner\"\n+\n+repositories {\n+    mavenCentral()\n+//    maven {\n+//        url \"https://repo.spring.io/libs-release/\"\n+//    }\n+    maven {\n+        url \"https://repo.jenkins-ci.org/releases/\"\n+    }\n+    maven {\n+        url \"https://jcenter.bintray.com/\"\n+    }\n+}\n+\n+dependencies {\n+    compile group: 'com.cdancy', name: 'jenkins-rest', version: '0.0.22'\n+    compile 'com.offbytwo.jenkins:jenkins-client:0.3.8'\n+    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'\n+    compile group: 'org.jenkins-ci.plugins', name: 'junit', version: '1.34'\n+    compile group: 'org.yaml', name: 'snakeyaml', version: '1.8'\n+    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.3'\n+    compile 'org.slf4j:slf4j-simple:1.7.9'\n+    compile group: 'junit', name: 'junit', version: '4.12'\n+    compile group: 'org.apache.beam', name: 'beam-sdks-java-core', version: '2.26.0'\n+    compile group: 'org.apache.beam', name: 'beam-sdks-java-core', version: '2.26.0', classifier: 'tests'\n+    compile group: 'org.apache.beam', name: 'beam-runners-flink_2.11', version: '2.16.0'\n+    compile group: 'org.apache.beam', name: 'beam-runners-flink_2.11', version: '2.16.0', classifier: 'tests'\n+    compile group: 'org.apache.beam', name: 'beam-runners-spark', version: '2.28.0'\n+    compile group: 'org.apache.beam', name: 'beam-runners-spark', version: '2.28.0', classifier: 'tests'\n+    compile group: 'org.apache.beam', name: 'beam-runners-core-java', version: '2.26.0'\n+    compile group: 'org.apache.beam', name: 'beam-runners-core-java', version: '2.26.0', classifier: 'tests'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MjI3MTY3OnYy", "diffSide": "RIGHT", "path": ".test-infra/validate-runner/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxOTo1MToyOFrOI1OFRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xOFQxNzowMzowMlrOI5ahNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY3NjE2Ng==", "bodyText": "remove this repo if you're not using it", "url": "https://github.com/apache/beam/pull/13492#discussion_r592676166", "createdAt": "2021-03-11T19:51:28Z", "author": {"login": "pabloem"}, "path": ".test-infra/validate-runner/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin : \"application\"\n+\n+group 'org.apache.beam'\n+description = \"Apache Beam :: Validate :: Runner\"\n+\n+repositories {\n+    mavenCentral()\n+//    maven {\n+//        url \"https://repo.spring.io/libs-release/\"\n+//    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzA3Mzk2Mw==", "bodyText": "removed", "url": "https://github.com/apache/beam/pull/13492#discussion_r597073963", "createdAt": "2021-03-18T17:02:43Z", "author": {"login": "sruthiskumar"}, "path": ".test-infra/validate-runner/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin : \"application\"\n+\n+group 'org.apache.beam'\n+description = \"Apache Beam :: Validate :: Runner\"\n+\n+repositories {\n+    mavenCentral()\n+//    maven {\n+//        url \"https://repo.spring.io/libs-release/\"\n+//    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY3NjE2Ng=="}, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzA3NDIzMQ==", "bodyText": "removed", "url": "https://github.com/apache/beam/pull/13492#discussion_r597074231", "createdAt": "2021-03-18T17:03:02Z", "author": {"login": "sruthiskumar"}, "path": ".test-infra/validate-runner/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin : \"application\"\n+\n+group 'org.apache.beam'\n+description = \"Apache Beam :: Validate :: Runner\"\n+\n+repositories {\n+    mavenCentral()\n+//    maven {\n+//        url \"https://repo.spring.io/libs-release/\"\n+//    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY3NjE2Ng=="}, "originalCommit": {"oid": "bc91fa1aa36db08c5a1586aaae65bbb1ddae93aa"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2513, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}