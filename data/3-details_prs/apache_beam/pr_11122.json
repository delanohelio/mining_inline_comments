{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NzgzODg2", "number": 11122, "title": "[BEAM-9346] Improve the efficiency of TFRecordIO", "bodyText": "I added the code requested in the Jira issue.\nR: @mwalenia @kamilwu\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-13T13:42:55Z", "url": "https://github.com/apache/beam/pull/11122", "merged": true, "mergeCommit": {"oid": "f731211b80429a7b1674fd14ce9b3f3796c40803"}, "closed": true, "closedAt": "2020-03-16T09:04:20Z", "author": {"login": "piotr-szuberski"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNQcO6gH2gAyMzg3NzgzODg2OmRmYTAxNDZhMjlhOThmZjkyNmUwMTI5MWYwMTJhYmU0YjU4NTk0YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPXMdHAFqTM3ODIwNjYzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dfa0146a29a98ff926e01291f012abe4b58594be", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/dfa0146a29a98ff926e01291f012abe4b58594be", "committedDate": "2020-03-13T13:36:25Z", "message": "[BEAM-9346] Improve the efficiency of TFRecordIO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTc5ODIw", "url": "https://github.com/apache/beam/pull/11122#pullrequestreview-378179820", "createdAt": "2020-03-20T00:31:35Z", "commit": {"oid": "dfa0146a29a98ff926e01291f012abe4b58594be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDozMTozNVrOF5Ewww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDozMTozNVrOF5Ewww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5MTE3MQ==", "bodyText": "Seems like this was applied to all file-based IO not just TFRecordIO as mentioned in the PR description. Have we done enough experiments to make sure this won't have unintended adverse performance consequences in batch/streaming ? For example, what if the list does not fit in memory ?\nApologies if this was already discussed in the dev list.\ncc: @robertwb @lukecwik @iemejia", "url": "https://github.com/apache/beam/pull/11122#discussion_r395391171", "createdAt": "2020-03-20T00:31:35Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/WriteFiles.java", "diffHunk": "@@ -410,13 +412,44 @@ private GatherResults(Coder<ResultT> resultCoder) {\n       } else {\n         // Pass results via a side input rather than reshuffle, because we need to get an empty\n         // iterable to finalize if there are no results.\n-        return input\n-            .getPipeline()\n-            .apply(Reify.viewInGlobalWindow(input.apply(View.asList()), ListCoder.of(resultCoder)));\n+        return input.apply(\"ToList\", Combine.globally(new ToListCombineFn<>()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa0146a29a98ff926e01291f012abe4b58594be"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjA2NjMx", "url": "https://github.com/apache/beam/pull/11122#pullrequestreview-378206631", "createdAt": "2020-03-20T02:36:22Z", "commit": {"oid": "dfa0146a29a98ff926e01291f012abe4b58594be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMjozNjoyMlrOF5GQww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMjozNjoyMlrOF5GQww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNTc0Nw==", "bodyText": "nit: This should have been private class since its an implementation detail and didn't need to expose this to users of the WriteFiles transform.", "url": "https://github.com/apache/beam/pull/11122#discussion_r395415747", "createdAt": "2020-03-20T02:36:22Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/WriteFiles.java", "diffHunk": "@@ -410,13 +412,44 @@ private GatherResults(Coder<ResultT> resultCoder) {\n       } else {\n         // Pass results via a side input rather than reshuffle, because we need to get an empty\n         // iterable to finalize if there are no results.\n-        return input\n-            .getPipeline()\n-            .apply(Reify.viewInGlobalWindow(input.apply(View.asList()), ListCoder.of(resultCoder)));\n+        return input.apply(\"ToList\", Combine.globally(new ToListCombineFn<>()));\n       }\n     }\n   }\n \n+  public static class ToListCombineFn<ResultT>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa0146a29a98ff926e01291f012abe4b58594be"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4933, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}