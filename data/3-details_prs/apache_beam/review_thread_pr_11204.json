{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzYzMjA1", "number": 11204, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo0NzowNVrODq4T4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo0NzozMVrODq4UwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mjg5Mzc4OnYy", "diffSide": "RIGHT", "path": "CHANGES.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo0NzowNVrOF65j2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDozNDo1NVrOF7tPkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNDc5NQ==", "bodyText": "@amaliujia - Should we wrap up the 2.20 release section and start a new section. This is the first release we are trying out changes.md, so we may need to figure out a good point where we need to update this file.\nMaybe we can do it after release branch cut. What do you think?", "url": "https://github.com/apache/beam/pull/11204#discussion_r397304795", "createdAt": "2020-03-24T16:47:05Z", "author": {"login": "aaltay"}, "path": "CHANGES.md", "diffHunk": "@@ -116,6 +116,7 @@\n \n ## Bugfixes\n \n+* Fixed numpy operators in ApproximateQuantiles (Python) ([BEAM-9579](https://issues.apache.org/jira/browse/BEAM-9579)).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72a72626e201e71ba31cd794c652d837ae1c8cf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE1MTU3MA==", "bodyText": "Yep. Release branch cut is a good cut point. Later when there is blocker JIRA that adds changes to release branch, release manager can ask to add something to changes.md.", "url": "https://github.com/apache/beam/pull/11204#discussion_r398151570", "createdAt": "2020-03-25T20:34:55Z", "author": {"login": "amaliujia"}, "path": "CHANGES.md", "diffHunk": "@@ -116,6 +116,7 @@\n \n ## Bugfixes\n \n+* Fixed numpy operators in ApproximateQuantiles (Python) ([BEAM-9579](https://issues.apache.org/jira/browse/BEAM-9579)).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNDc5NQ=="}, "originalCommit": {"oid": "c72a72626e201e71ba31cd794c652d837ae1c8cf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mjg5NjAwOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/transforms/stats.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo0NzozMVrOF65lOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODozNjowN1rOF6-AMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNTE0Nw==", "bodyText": "Maybe I am missing something here, but I think here we use - to get +1, 0 or -1 and ^ operator would not give us.", "url": "https://github.com/apache/beam/pull/11204#discussion_r397305147", "createdAt": "2020-03-24T16:47:31Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/transforms/stats.py", "diffHunk": "@@ -430,11 +430,11 @@ class ApproximateQuantilesCombineFn(CombineFn):\n   def __init__(\n       self, num_quantiles, buffer_size, num_buffers, key=None, reverse=False):\n     if key:\n-      self._comparator = lambda a, b: (key(a) < key(b)) - (key(a) > key(b)) \\\n-        if reverse else (key(a) > key(b)) - (key(a) < key(b))\n+      self._comparator = lambda a, b: (key(a) < key(b)) ^ (key(a) > key(b)) \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72a72626e201e71ba31cd794c652d837ae1c8cf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3NzU4NQ==", "bodyText": "good catch! fixed.", "url": "https://github.com/apache/beam/pull/11204#discussion_r397377585", "createdAt": "2020-03-24T18:36:07Z", "author": {"login": "chrisgorgo"}, "path": "sdks/python/apache_beam/transforms/stats.py", "diffHunk": "@@ -430,11 +430,11 @@ class ApproximateQuantilesCombineFn(CombineFn):\n   def __init__(\n       self, num_quantiles, buffer_size, num_buffers, key=None, reverse=False):\n     if key:\n-      self._comparator = lambda a, b: (key(a) < key(b)) - (key(a) > key(b)) \\\n-        if reverse else (key(a) > key(b)) - (key(a) < key(b))\n+      self._comparator = lambda a, b: (key(a) < key(b)) ^ (key(a) > key(b)) \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNTE0Nw=="}, "originalCommit": {"oid": "c72a72626e201e71ba31cd794c652d837ae1c8cf"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1500, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}