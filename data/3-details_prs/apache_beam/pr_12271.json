{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzI5MTc0", "number": 12271, "title": "[BEAM-10496] Improve nullability analysis for :sdks:java:core", "bodyText": "The total number of nullability issues in :sdks:java:core is very high. These are some baby steps towards embracing nullability typing. While not discovering any latent NPE this time, it did uncover improvements to the core SDK:\n\ninlining completely trivial functions and their trivial tests\nmoving to Java function instead of Guava function\nmoving to Java streams instead of Guava FluentIterable\nmoving irrelevant null check out of utility function that has no reason to accept null parameters\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-07-15T20:51:52Z", "url": "https://github.com/apache/beam/pull/12271", "merged": true, "mergeCommit": {"oid": "4725d96f126ee1b943321d16b0cffbe5d20d7bdd"}, "closed": true, "closedAt": "2020-07-16T18:39:46Z", "author": {"login": "kennknowles"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1WqRSgFqTQ0OTQ3NzE4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1jS4RAFqTQ1MDA5NDgwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDc3MTg0", "url": "https://github.com/apache/beam/pull/12271#pullrequestreview-449477184", "createdAt": "2020-07-16T03:10:02Z", "commit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzoxMDowMlrOGyYfVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzoxMDowMlrOGyYfVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzIyMw==", "bodyText": "Can we just call input.getDeclaringClass().getName() here?", "url": "https://github.com/apache/beam/pull/12271#discussion_r455483223", "createdAt": "2020-07-16T03:10:02Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java", "diffHunk": "@@ -74,16 +74,12 @@ public String apply(@Nonnull Method input) {\n         @Override\n         public String apply(@Nonnull Method input) {\n           return String.format(\n-              \"%s#%s\", CLASS_NAME.apply(input.getDeclaringClass()), METHOD_FORMATTER.apply(input));\n+              \"%s#%s\",\n+              ((Function<Class<?>, String>) Class::getName).apply(input.getDeclaringClass()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13895317eb5a85902f389d57a251a65e7e3a1479", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/13895317eb5a85902f389d57a251a65e7e3a1479", "committedDate": "2020-07-16T04:04:07Z", "message": "Port PipelineOptionsFactory from Guava Function to java.lang.function.Function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a4466303c3577d4663250c7ee6b6039c23feb5b", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/8a4466303c3577d4663250c7ee6b6039c23feb5b", "committedDate": "2020-07-16T04:04:12Z", "message": "Inline trivial methods with overly strict types from ReflectHelpers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d42abd3e88d47b9dd957a5875469efa19693629d", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/d42abd3e88d47b9dd957a5875469efa19693629d", "committedDate": "2020-07-16T04:05:35Z", "message": "Inline trivial fields with overly-specific types in PipelineOptionsFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b73f66ab767c87ba21d409fad562f8bc9122477", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/9b73f66ab767c87ba21d409fad562f8bc9122477", "committedDate": "2020-07-16T04:09:10Z", "message": "Convert static Function fields on ReflectHelpers to static methods\n\nPreviously, these were Guava Functions. Now they can just be static methods and\nuse a method reference to use them for any functional interface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc64d0809dde2025a04746417f4ebdb580eb4afd", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/bc64d0809dde2025a04746417f4ebdb580eb4afd", "committedDate": "2020-07-16T04:09:17Z", "message": "Improve nullability in PipelineOptionsFactory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDg5NzEw", "url": "https://github.com/apache/beam/pull/12271#pullrequestreview-449489710", "createdAt": "2020-07-16T03:56:00Z", "commit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1NjowMFrOGyZM8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1Njo1MFrOGyZNoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDg5Nw==", "bodyText": "I asked the checkerframework folks for a better solution and they gave it: @KeyFor annotation.", "url": "https://github.com/apache/beam/pull/12271#discussion_r455494897", "createdAt": "2020-07-16T03:56:00Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java", "diffHunk": "@@ -609,24 +604,34 @@ public static void printHelp(PrintStream out, Class<? extends PipelineOptions> i\n           getRequiredGroupNamesToProperties(propertyNamesToGetters);\n \n       out.format(\"%s:%n\", currentIface.getName());\n-      prettyPrintDescription(out, currentIface.getAnnotation(Description.class));\n+      Description ifaceDescription = currentIface.getAnnotation(Description.class);\n+      if (ifaceDescription != null && ifaceDescription.value() != null) {\n+        prettyPrintDescription(out, ifaceDescription);\n+      }\n \n       out.println();\n \n       List<String> lists = Lists.newArrayList(propertyNamesToGetters.keySet());\n       lists.sort(String.CASE_INSENSITIVE_ORDER);\n       for (String propertyName : lists) {\n         Method method = propertyNamesToGetters.get(propertyName);\n+        assert method != null\n+            : \"@AssumeAssertion(nullness): method name previously extracted from iface\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NTA3Mg==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12271#discussion_r455495072", "createdAt": "2020-07-16T03:56:50Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java", "diffHunk": "@@ -74,16 +74,12 @@ public String apply(@Nonnull Method input) {\n         @Override\n         public String apply(@Nonnull Method input) {\n           return String.format(\n-              \"%s#%s\", CLASS_NAME.apply(input.getDeclaringClass()), METHOD_FORMATTER.apply(input));\n+              \"%s#%s\",\n+              ((Function<Class<?>, String>) Class::getName).apply(input.getDeclaringClass()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzIyMw=="}, "originalCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364", "committedDate": "2020-07-15T23:25:23Z", "message": "fixup! Port PipelineOptionsFactory from Guava Function to java.lang.function.Function"}, "afterCommit": {"oid": "bc64d0809dde2025a04746417f4ebdb580eb4afd", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/bc64d0809dde2025a04746417f4ebdb580eb4afd", "committedDate": "2020-07-16T04:09:17Z", "message": "Improve nullability in PipelineOptionsFactory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDk0ODA5", "url": "https://github.com/apache/beam/pull/12271#pullrequestreview-450094809", "createdAt": "2020-07-16T18:11:22Z", "commit": {"oid": "bc64d0809dde2025a04746417f4ebdb580eb4afd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4127, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}