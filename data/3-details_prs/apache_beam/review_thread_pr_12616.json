{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NjUwMDA4", "number": 12616, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzowMTo0NlrOEiUjnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzo1MDoxNFrOEiVJyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDIzODM3OnYy", "diffSide": "RIGHT", "path": "runners/jet/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzowMTo0NlrOHQIlFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzowMTo0NlrOHQIlFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3OTgzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // There is an existing bug where we are trying to add additional outputs during flusing and don't restore state correctly\n          \n          \n            \n                    // There is an existing bug where we are trying to add additional outputs during flushing and don't restore state correctly", "url": "https://github.com/apache/beam/pull/12616#discussion_r486679831", "createdAt": "2020-09-10T23:01:46Z", "author": {"login": "tysonjh"}, "path": "runners/jet/build.gradle", "diffHunk": "@@ -85,6 +84,12 @@ task validatesRunnerBatch(type: Test) {\n         excludeCategories 'org.apache.beam.sdk.testing.UsesTestStreamWithProcessingTime'\n     }\n     filter {\n+        // There is an existing bug caused by Jet assuming that outputs emitted are Object.equals comparable which is not true for byte[]\n+        excludeTestsMatching 'org.apache.beam.sdk.transforms.SplittableDoFnTest.testOutputAfterCheckpointBounded'\n+\n+        // There is an existing bug where we are trying to add additional outputs during flusing and don't restore state correctly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f40e37659751caa6a53a9da0432752505f7f97e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDMzNjExOnYy", "diffSide": "RIGHT", "path": "runners/jet/src/main/java/org/apache/beam/runners/jet/JetRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzo1MDoxNFrOHQJeIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzoxNTozMlrOHRe_6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5NDQzNQ==", "bodyText": "Is this list exhaustive? How can I tell if something is missing?", "url": "https://github.com/apache/beam/pull/12616#discussion_r486694435", "createdAt": "2020-09-10T23:50:14Z", "author": {"login": "tysonjh"}, "path": "runners/jet/src/main/java/org/apache/beam/runners/jet/JetRunner.java", "diffHunk": "@@ -186,7 +189,15 @@ private JetInstance getJetInstance(JetPipelineOptions options) {\n   }\n \n   private static List<PTransformOverride> getDefaultOverrides() {\n-    return Collections.emptyList();\n+    return Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f40e37659751caa6a53a9da0432752505f7f97e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA5NTcyMw==", "bodyText": "There is no exhaustive list as each runner can choose to implement each transform however they wish. We have to rely on the @ValidatesRunner suite of tests for validation.", "url": "https://github.com/apache/beam/pull/12616#discussion_r488095723", "createdAt": "2020-09-14T17:15:32Z", "author": {"login": "lukecwik"}, "path": "runners/jet/src/main/java/org/apache/beam/runners/jet/JetRunner.java", "diffHunk": "@@ -186,7 +189,15 @@ private JetInstance getJetInstance(JetPipelineOptions options) {\n   }\n \n   private static List<PTransformOverride> getDefaultOverrides() {\n-    return Collections.emptyList();\n+    return Arrays.asList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5NDQzNQ=="}, "originalCommit": {"oid": "9f40e37659751caa6a53a9da0432752505f7f97e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 513, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}