{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjY3Mjcz", "number": 11163, "title": "[BEAM-9548] Add better error handling to the TestStreamServiceController", "bodyText": "Change-Id: I022f25840207eb6c931c97358f159f134393c180\nAdds a configurable exception handler to the TestStreamServiceController that allows the InteractiveRunner to intercept exceptions and print them to the logger before the exception is raised to the underlying runner.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-18T21:12:44Z", "url": "https://github.com/apache/beam/pull/11163", "merged": true, "mergeCommit": {"oid": "c44fb40962212da1a1c70e9b1aad6b7e3b1f9609"}, "closed": true, "closedAt": "2020-03-24T20:54:41Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQiDXRgH2gAyMzkwNjY3MjczOjRmYTVlZDRkN2I2OTRjZGQ1NzA4MGE3Nzg1MTdhMGVhMGIyMmE2NGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ37liAH2gAyMzkwNjY3MjczOjc5MmQwMDkyYWUyOGUyYTI1ZjlhNjcyOGU1MmIxYjkxN2E4MjYxYWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fa5ed4d7b694cdd57080a778517a0ea0b22a64d", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/4fa5ed4d7b694cdd57080a778517a0ea0b22a64d", "committedDate": "2020-03-23T17:49:19Z", "message": "Add better error handling to the TestStreamServiceController\n\nChange-Id: I022f25840207eb6c931c97358f159f134393c180"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1655f8a306ea6bf6199968594717764afa84ad8", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/c1655f8a306ea6bf6199968594717764afa84ad8", "committedDate": "2020-03-18T20:39:18Z", "message": "Add better error handling to the TestStreamServiceController\n\nChange-Id: I022f25840207eb6c931c97358f159f134393c180"}, "afterCommit": {"oid": "4fa5ed4d7b694cdd57080a778517a0ea0b22a64d", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/4fa5ed4d7b694cdd57080a778517a0ea0b22a64d", "committedDate": "2020-03-23T17:49:19Z", "message": "Add better error handling to the TestStreamServiceController\n\nChange-Id: I022f25840207eb6c931c97358f159f134393c180"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODM1MjE2", "url": "https://github.com/apache/beam/pull/11163#pullrequestreview-379835216", "createdAt": "2020-03-23T21:26:50Z", "commit": {"oid": "4fa5ed4d7b694cdd57080a778517a0ea0b22a64d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMToyNjo1MFrOF6YvCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMzowNjo1NlrOF6bYZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2Njk4Ng==", "bodyText": "I hadn't stopeed to think that labels are a file name too, huh? I guess the final file name is the PCollection variable name? If so, users may name their PCollections something that is not supported by the OS? (or maybe not since they have to be Python variable names?)\nAnyway this is not for this PR. But just to think about.", "url": "https://github.com/apache/beam/pull/11163#discussion_r396766986", "createdAt": "2020-03-23T21:26:50Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -166,13 +169,15 @@ def _wait_until_file_exists(self, timeout_secs=30):\n \n     # Wait for up to `timeout_secs` for the file to be available.\n     start = time.time()\n-    path = os.path.join(self._cache_dir, *self._labels)\n-    while not os.path.exists(path):\n+    while not os.path.exists(self._path):\n       time.sleep(1)\n       if time.time() - start > timeout_timestamp_secs:\n+        from apache_beam.runners.interactive.pipeline_instrument import CacheKey\n+        pcollection_var = CacheKey.from_str(self._labels[-1]).var", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa5ed4d7b694cdd57080a778517a0ea0b22a64d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2NzkyNA==", "bodyText": "Do we just skip? This may mean that the file is corrupted? Should we stop consuming (i.e. rethrow the exception)?", "url": "https://github.com/apache/beam/pull/11163#discussion_r396767924", "createdAt": "2020-03-23T21:28:49Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -202,14 +207,24 @@ def _emit_from_file(self, fh, tail):\n         # The first line at pos = 0 is always the header. Read the line without\n         # the new line.\n         to_decode = line[:-1]\n-        if pos == 0:\n-          header = TestStreamFileHeader()\n-          header.ParseFromString(self._coder.decode(to_decode))\n-          yield header\n+        proto_cls = TestStreamFileHeader if pos == 0 else TestStreamFileRecord\n+        msg = self._try_parse_as(proto_cls, to_decode)\n+        if msg:\n+          yield msg\n         else:\n-          record = TestStreamFileRecord()\n-          record.ParseFromString(self._coder.decode(to_decode))\n-          yield record\n+          break\n+\n+  def _try_parse_as(self, proto_cls, to_decode):\n+    try:\n+      msg = proto_cls()\n+      msg.ParseFromString(self._coder.decode(to_decode))\n+    except DecodeError:\n+      _LOGGER.error(\n+          'Could not parse as %s. This can indicate that the cache is '\n+          'corruputed. Please restart the kernel. '\n+          '\\nfile: %s \\nmessage: %s', proto_cls, self._path, to_decode)\n+      msg = None", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa5ed4d7b694cdd57080a778517a0ea0b22a64d"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgxMDM0MA==", "bodyText": "Same as above. Do we just log and not stop processing?", "url": "https://github.com/apache/beam/pull/11163#discussion_r396810340", "createdAt": "2020-03-23T23:06:56Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_runner.py", "diffHunk": "@@ -170,8 +170,13 @@ def run_pipeline(self, pipeline, options):\n               user_pipeline)):\n         streaming_cache_manager = ie.current_env().cache_manager()\n         if streaming_cache_manager:\n+\n+          def exception_handler(e):\n+            _LOGGER.error(str(e))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa5ed4d7b694cdd57080a778517a0ea0b22a64d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "792d0092ae28e2a25f9a6728e52b1b917a8261af", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/792d0092ae28e2a25f9a6728e52b1b917a8261af", "committedDate": "2020-03-24T19:18:44Z", "message": "run tox\n\nChange-Id: I9f9122e19f38978696deeb1bfd68aab9b25285d9"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2823, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}