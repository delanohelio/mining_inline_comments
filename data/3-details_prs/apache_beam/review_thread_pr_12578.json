{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3Njk4MjMx", "number": 12578, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMTozNTo1NVrOEZOwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzo1NTo1OVrOEbDnOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODkxNTI5OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMTozNTo1NVrOHB7rWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoxMzoyNFrOHCgXCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODM3OQ==", "bodyText": "shardedKey?", "url": "https://github.com/apache/beam/pull/12578#discussion_r471788379", "createdAt": "2020-08-17T21:35:55Z", "author": {"login": "boyuanzz"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2167,7 +2209,7 @@ public MapTask getMapTask() {\n     }\n \n     /** Mark the given key and work as active. */\n-    public boolean activateWork(ByteString key, Work work) {\n+    public boolean activateWork(ShardedKey key, Work work) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTM4Ng==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12578#discussion_r472389386", "createdAt": "2020-08-18T18:13:24Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2167,7 +2209,7 @@ public MapTask getMapTask() {\n     }\n \n     /** Mark the given key and work as active. */\n-    public boolean activateWork(ByteString key, Work work) {\n+    public boolean activateWork(ShardedKey key, Work work) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODM3OQ=="}, "originalCommit": {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODkxNTg2OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMTozNjowOVrOHB7rvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoxMzoyMVrOHCgW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODQ3Ng==", "bodyText": "sharedKey?", "url": "https://github.com/apache/beam/pull/12578#discussion_r471788476", "createdAt": "2020-08-17T21:36:09Z", "author": {"login": "boyuanzz"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2193,7 +2235,7 @@ public boolean activateWork(ByteString key, Work work) {\n     }\n \n     /** Marks the work for a the given key as complete. Schedules queued work for the key if any. */\n-    public void completeWork(ByteString key, long workToken) {\n+    public void completeWork(ShardedKey key, long workToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTM1Mw==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12578#discussion_r472389353", "createdAt": "2020-08-18T18:13:21Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2193,7 +2235,7 @@ public boolean activateWork(ByteString key, Work work) {\n     }\n \n     /** Marks the work for a the given key as complete. Schedules queued work for the key if any. */\n-    public void completeWork(ByteString key, long workToken) {\n+    public void completeWork(ShardedKey key, long workToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODQ3Ng=="}, "originalCommit": {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTAyNTI2OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMjoxNzowNlrOHB8szA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoxMzoxOFrOHCgW1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgwNTEzMg==", "bodyText": "the cachedReader is also keyed: \n  \n    \n      beam/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java\n    \n    \n        Lines 338 to 340\n      in\n      88acc52\n    \n    \n    \n    \n\n        \n          \n           public UnboundedSource.UnboundedReader<?> getCachedReader() { \n        \n\n        \n          \n             return readerCache.acquireReader(computationId, getSerializedKey(), getWork().getCacheToken()); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nShould it also be keyed by sharedKey?", "url": "https://github.com/apache/beam/pull/12578#discussion_r471805132", "createdAt": "2020-08-17T22:17:06Z", "author": {"login": "boyuanzz"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java", "diffHunk": "@@ -357,7 +358,7 @@ public void invalidateCache() {\n         }\n       }\n       activeReader = null;\n-      stateCache.invalidate(key);\n+      stateCache.invalidate(key, getWork().getShardingKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTMzMg==", "bodyText": "Good catch! Fixed.", "url": "https://github.com/apache/beam/pull/12578#discussion_r472389332", "createdAt": "2020-08-18T18:13:18Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java", "diffHunk": "@@ -357,7 +358,7 @@ public void invalidateCache() {\n         }\n       }\n       activeReader = null;\n-      stateCache.invalidate(key);\n+      stateCache.invalidate(key, getWork().getShardingKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgwNTEzMg=="}, "originalCommit": {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTAxNzExOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo0MDo0MlrOHDd20w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0NzoxNlrOHEQ5ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5Njk0Nw==", "bodyText": "Use @AutoValue", "url": "https://github.com/apache/beam/pull/12578#discussion_r473396947", "createdAt": "2020-08-19T22:40:42Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -59,7 +59,41 @@\n     }\n   }\n \n-  private final Cache<KV<String, ByteString>, CacheEntry> cache;\n+  private static class CacheKey {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMzI3NA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12578#discussion_r474233274", "createdAt": "2020-08-20T19:47:16Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -59,7 +59,41 @@\n     }\n   }\n \n-  private final Cache<KV<String, ByteString>, CacheEntry> cache;\n+  private static class CacheKey {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5Njk0Nw=="}, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTAyNjExOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo0Mjo1MFrOHDd8vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0OTo1NFrOHEQ-4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5ODQ2MQ==", "bodyText": "no need for toString since {} does type conversions for you already\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());\n          \n          \n            \n                                LOG.info(\"Closing idle reader for {}\", notification.getKey());", "url": "https://github.com/apache/beam/pull/12578#discussion_r473398461", "createdAt": "2020-08-19T22:42:50Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -72,25 +106,21 @@\n         CacheBuilder.newBuilder()\n             .expireAfterWrite(cacheDuration.getMillis(), TimeUnit.MILLISECONDS)\n             .removalListener(\n-                (RemovalNotification<KV<String, ByteString>, CacheEntry> notification) -> {\n+                (RemovalNotification<CacheKey, CacheEntry> notification) -> {\n                   if (notification.getCause() != RemovalCause.EXPLICIT) {\n-                    LOG.info(\"Closing idle reader for {}\", keyToString(notification.getKey()));\n+                    LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDU5NA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234594", "createdAt": "2020-08-20T19:49:54Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -72,25 +106,21 @@\n         CacheBuilder.newBuilder()\n             .expireAfterWrite(cacheDuration.getMillis(), TimeUnit.MILLISECONDS)\n             .removalListener(\n-                (RemovalNotification<KV<String, ByteString>, CacheEntry> notification) -> {\n+                (RemovalNotification<CacheKey, CacheEntry> notification) -> {\n                   if (notification.getCause() != RemovalCause.EXPLICIT) {\n-                    LOG.info(\"Closing idle reader for {}\", keyToString(notification.getKey()));\n+                    LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5ODQ2MQ=="}, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTAyNzU4OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo0MzowNFrOHDd9lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo0MzowNFrOHDd9lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5ODY3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.warn(\"Failed to close UnboundedReader for {}\", key.toString(), e);\n          \n          \n            \n                  LOG.warn(\"Failed to close UnboundedReader for {}\", key, e);", "url": "https://github.com/apache/beam/pull/12578#discussion_r473398677", "createdAt": "2020-08-19T22:43:04Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -72,25 +106,21 @@\n         CacheBuilder.newBuilder()\n             .expireAfterWrite(cacheDuration.getMillis(), TimeUnit.MILLISECONDS)\n             .removalListener(\n-                (RemovalNotification<KV<String, ByteString>, CacheEntry> notification) -> {\n+                (RemovalNotification<CacheKey, CacheEntry> notification) -> {\n                   if (notification.getCause() != RemovalCause.EXPLICIT) {\n-                    LOG.info(\"Closing idle reader for {}\", keyToString(notification.getKey()));\n+                    LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());\n                     closeReader(notification.getKey(), notification.getValue());\n                   }\n                 })\n             .build();\n   }\n \n-  private static String keyToString(KV<String, ByteString> key) {\n-    return key.getKey() + \"-\" + key.getValue().toStringUtf8();\n-  }\n-\n   /** Close the reader and log a warning if close fails. */\n-  private void closeReader(KV<String, ByteString> key, CacheEntry entry) {\n+  private void closeReader(CacheKey key, CacheEntry entry) {\n     try {\n       entry.reader.close();\n     } catch (IOException e) {\n-      LOG.warn(\"Failed to close UnboundedReader for {}\", keyToString(key), e);\n+      LOG.warn(\"Failed to close UnboundedReader for {}\", key.toString(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTA1MjAxOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo0ODoyNlrOHDeNjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MDowM1rOHEQ_Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjc2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);\n          \n          \n            \n                ShardedKey key1Shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);", "url": "https://github.com/apache/beam/pull/12578#discussion_r473402766", "createdAt": "2020-08-19T22:48:26Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "diffHunk": "@@ -2131,8 +2215,50 @@ public void testActiveWork() throws Exception {\n     Mockito.verifyNoMoreInteractions(mockExecutor);\n   }\n \n+  @Test\n+  public void testActiveWorkForShardedKeys() throws Exception {\n+    BoundedQueueExecutor mockExecutor = Mockito.mock(BoundedQueueExecutor.class);\n+    StreamingDataflowWorker.ComputationState computationState =\n+        new StreamingDataflowWorker.ComputationState(\n+            \"computation\",\n+            defaultMapTask(Arrays.asList(makeSourceInstruction(StringUtf8Coder.of()))),\n+            mockExecutor,\n+            ImmutableMap.of(),\n+            null);\n+\n+    ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 437}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDY4Mg==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234682", "createdAt": "2020-08-20T19:50:03Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "diffHunk": "@@ -2131,8 +2215,50 @@ public void testActiveWork() throws Exception {\n     Mockito.verifyNoMoreInteractions(mockExecutor);\n   }\n \n+  @Test\n+  public void testActiveWorkForShardedKeys() throws Exception {\n+    BoundedQueueExecutor mockExecutor = Mockito.mock(BoundedQueueExecutor.class);\n+    StreamingDataflowWorker.ComputationState computationState =\n+        new StreamingDataflowWorker.ComputationState(\n+            \"computation\",\n+            defaultMapTask(Arrays.asList(makeSourceInstruction(StringUtf8Coder.of()))),\n+            mockExecutor,\n+            ImmutableMap.of(),\n+            null);\n+\n+    ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjc2Ng=="}, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 437}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTA1MjgyOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo0ODozNlrOHDeOGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MDowOFrOHEQ_Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjkwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ShardedKey key1_shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);\n          \n          \n            \n                ShardedKey key1Shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);", "url": "https://github.com/apache/beam/pull/12578#discussion_r473402906", "createdAt": "2020-08-19T22:48:36Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "diffHunk": "@@ -2131,8 +2215,50 @@ public void testActiveWork() throws Exception {\n     Mockito.verifyNoMoreInteractions(mockExecutor);\n   }\n \n+  @Test\n+  public void testActiveWorkForShardedKeys() throws Exception {\n+    BoundedQueueExecutor mockExecutor = Mockito.mock(BoundedQueueExecutor.class);\n+    StreamingDataflowWorker.ComputationState computationState =\n+        new StreamingDataflowWorker.ComputationState(\n+            \"computation\",\n+            defaultMapTask(Arrays.asList(makeSourceInstruction(StringUtf8Coder.of()))),\n+            mockExecutor,\n+            ImmutableMap.of(),\n+            null);\n+\n+    ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);\n+    ShardedKey key1_shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 438}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDcyNw==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234727", "createdAt": "2020-08-20T19:50:08Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "diffHunk": "@@ -2131,8 +2215,50 @@ public void testActiveWork() throws Exception {\n     Mockito.verifyNoMoreInteractions(mockExecutor);\n   }\n \n+  @Test\n+  public void testActiveWorkForShardedKeys() throws Exception {\n+    BoundedQueueExecutor mockExecutor = Mockito.mock(BoundedQueueExecutor.class);\n+    StreamingDataflowWorker.ComputationState computationState =\n+        new StreamingDataflowWorker.ComputationState(\n+            \"computation\",\n+            defaultMapTask(Arrays.asList(makeSourceInstruction(StringUtf8Coder.of()))),\n+            mockExecutor,\n+            ImmutableMap.of(),\n+            null);\n+\n+    ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);\n+    ShardedKey key1_shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjkwNg=="}, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 438}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTA2MDIzOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjo1MDoxNlrOHDeTIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MDoxMlrOHEQ_kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwNDE5Mw==", "bodyText": "Use @AutoValue", "url": "https://github.com/apache/beam/pull/12578#discussion_r473404193", "createdAt": "2020-08-19T22:50:16Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -1095,14 +1098,46 @@ public void run() {\n             }\n           }\n         };\n-    if (!computationState.activateWork(workItem.getKey(), work)) {\n+    if (!computationState.activateWork(\n+        new ShardedKey(workItem.getKey(), workItem.getShardingKey()), work)) {\n       // Free worker if the work was not activated.\n       // This can happen if it's duplicate work or some other reason.\n       sdkHarnessRegistry.completeWork(worker);\n     }\n   }\n \n+  static class ShardedKey {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDc3MQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234771", "createdAt": "2020-08-20T19:50:12Z", "author": {"login": "nehsyc"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -1095,14 +1098,46 @@ public void run() {\n             }\n           }\n         };\n-    if (!computationState.activateWork(workItem.getKey(), work)) {\n+    if (!computationState.activateWork(\n+        new ShardedKey(workItem.getKey(), workItem.getShardingKey()), work)) {\n       // Free worker if the work was not activated.\n       // This can happen if it's duplicate work or some other reason.\n       sdkHarnessRegistry.completeWork(worker);\n     }\n   }\n \n+  static class ShardedKey {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwNDE5Mw=="}, "originalCommit": {"oid": "f971b077eeea63b57f18501116952494b58e8c51"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODA2MjAzOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzo1NTo1OVrOHE2OTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzo1NTo1OVrOHE2OTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0NDc1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              shardedKey.toString(), completedWork.getWorkItem().getWorkToken(), workToken));\n          \n          \n            \n                              shardedKey, completedWork.getWorkItem().getWorkToken(), workToken));", "url": "https://github.com/apache/beam/pull/12578#discussion_r474844750", "createdAt": "2020-08-21T17:55:59Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2205,20 +2238,18 @@ public void completeWork(ByteString key, long workToken) {\n           throw new NullPointerException(\n               String.format(\n                   \"No active state for key %s, expected token %s\",\n-                  TextFormat.escapeBytes(key), workToken));\n+                  shardedKey.toString(), workToken));\n         }\n         if (completedWork.getWorkItem().getWorkToken() != workToken) {\n           throw new IllegalStateException(\n               String.format(\n                   \"Token mismatch for key %s: %s and %s\",\n-                  TextFormat.escapeBytes(key),\n-                  completedWork.getWorkItem().getWorkToken(),\n-                  workToken));\n+                  shardedKey.toString(), completedWork.getWorkItem().getWorkToken(), workToken));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f203e9b48a44135065cce919607347c0b3fe345e"}, "originalPosition": 201}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 698, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}