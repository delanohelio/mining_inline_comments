{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDcxMTc4", "number": 11389, "title": "Refactor the BCJ and capture controls to be more testable", "bodyText": "Change-Id: I51c5869a30ab4c82d727486604a77e3fc300f5be\nThis pulls out the capture control logic from the BCJ into a \"Limiter\" class. These are super simple classes that return True from a \"is_triggered\" method.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-10T21:10:27Z", "url": "https://github.com/apache/beam/pull/11389", "merged": true, "mergeCommit": {"oid": "ec0e157bb1ef9bafd4c4b159a37e183c4d57f533"}, "closed": true, "closedAt": "2020-04-14T02:21:13Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWXrjKAH2gAyNDAyMDcxMTc4OjczYTA1NzAxNjdiOWIzMmQwOGNjNjJjYWFiMDU3OWVhZDc1YjlhNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXWrKmAFqTM5MjQ4MzY2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73a0570167b9b32d08cc62caab0579ead75b9a79", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/73a0570167b9b32d08cc62caab0579ead75b9a79", "committedDate": "2020-04-10T21:07:48Z", "message": "Refactor the BCJ and capture controls to be more testable\n\nChange-Id: I51c5869a30ab4c82d727486604a77e3fc300f5be"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMzk1Mjgw", "url": "https://github.com/apache/beam/pull/11389#pullrequestreview-392395280", "createdAt": "2020-04-13T19:57:01Z", "commit": {"oid": "73a0570167b9b32d08cc62caab0579ead75b9a79"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo1NzowMVrOGEzGbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDoxMzo0NFrOGEzoVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4NDcxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"\"\"Returns True if the limiter has triggered.\"\"\"\n          \n          \n            \n                \"\"\"Returns True if the limiter has triggered, and caching should stop.\"\"\"", "url": "https://github.com/apache/beam/pull/11389#discussion_r407684719", "createdAt": "2020-04-13T19:57:01Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/options/capture_limiters.py", "diffHunk": "@@ -0,0 +1,70 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Module to condition how Interactive Beam stops capturing data.\n+\n+For internal use only; no backwards-compatibility guarantees.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import threading\n+\n+from apache_beam.runners.interactive import interactive_environment as ie\n+\n+\n+class Limiter:\n+  \"\"\"Limits an aspect of the caching layer.\"\"\"\n+  def is_triggered(self):\n+    # type: () -> bool\n+\n+    \"\"\"Returns True if the limiter has triggered.\"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73a0570167b9b32d08cc62caab0579ead75b9a79"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4OTQ4Nw==", "bodyText": "IIUC, the test will run at most for 5 seconds (at least .5 from the sleep time of the BCJ checker, right?), but will pass as soon as >= 10 elements are available, right?", "url": "https://github.com/apache/beam/pull/11389#discussion_r407689487", "createdAt": "2020-04-13T20:06:15Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_runner_test.py", "diffHunk": "@@ -196,6 +197,28 @@ def process(self, element):\n     # applied but needs an IPython environment. So we manually run this here.\n     ie.current_env().track_user_pipelines()\n \n+    # Create a fake limiter that cancels the BCJ once the main job receives the\n+    # expected amount of results.\n+    class FakeLimiter:\n+      def __init__(self, p, pcoll):\n+        self.p = p\n+        self.pcoll = pcoll\n+\n+      def is_triggered(self):\n+        result = ie.current_env().pipeline_result(self.p)\n+        if result:\n+          try:\n+            results = result.get(self.pcoll)\n+          except ValueError:\n+            return False\n+          return len(results) >= 10\n+        return False\n+\n+    # This sets the limiters to stop reading when the test receives 10 elements\n+    # or after 5 seconds have elapsed (to eliminate the possibility of hanging).\n+    ie.current_env().options.capture_control.set_limiters_for_test(\n+        [FakeLimiter(p, data), DurationLimiter(timedelta(seconds=5))])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73a0570167b9b32d08cc62caab0579ead75b9a79"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY5MzM5OQ==", "bodyText": "maybe the wait time should be parameterizable? Is it pretty cheap to check the limiters? Up to you.", "url": "https://github.com/apache/beam/pull/11389#discussion_r407693399", "createdAt": "2020-04-13T20:13:44Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -66,61 +66,40 @@ class BackgroundCachingJob(object):\n   In both situations, the background caching job should be treated as done\n   successfully.\n   \"\"\"\n-  def __init__(self, pipeline_result, start_limit_checkers=True):\n+  def __init__(self, pipeline_result, limiters):\n     self._pipeline_result = pipeline_result\n-    self._timer = threading.Timer(\n-        ie.current_env().options.capture_duration.total_seconds(), self._cancel)\n-    self._timer.daemon = True\n     self._condition_checker = threading.Thread(\n         target=self._background_caching_job_condition_checker, daemon=True)\n-    if start_limit_checkers:\n-      self._timer.start()\n-      self._condition_checker.start()\n-    self._timer_triggered = False\n-    self._condition_checker_triggered = False\n+\n+    # Limiters are checks s.t. if any are triggered then the background caching\n+    # job gets cancelled.\n+    self._limiters = limiters\n+    self._condition_checker.start()\n \n   def _background_caching_job_condition_checker(self):\n     while not PipelineState.is_terminal(self._pipeline_result.state):\n       if self._should_end_condition_checker():\n+        self.cancel()\n         break\n-      time.sleep(5)\n+      time.sleep(0.5)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73a0570167b9b32d08cc62caab0579ead75b9a79"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "554df496728fc99913b94d52ed80cca865b197ed", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/554df496728fc99913b94d52ed80cca865b197ed", "committedDate": "2020-04-13T21:56:58Z", "message": "Update sdks/python/apache_beam/runners/interactive/options/capture_limiters.py\n\nCo-Authored-By: Pablo <pabloem@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDgzNjY5", "url": "https://github.com/apache/beam/pull/11389#pullrequestreview-392483669", "createdAt": "2020-04-13T22:31:24Z", "commit": {"oid": "554df496728fc99913b94d52ed80cca865b197ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4608, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}