{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjM4MjA3", "number": 10779, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToyMTo0MFrODdzSMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToyODo1MFrODdzaww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTc1NTM3OnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToyMTo0MFrOFmnNqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozNDoyMVrOFmq_EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzMjY4Mw==", "bodyText": "maybe add something like \"a typical graph may look like:\"", "url": "https://github.com/apache/beam/pull/10779#discussion_r376032683", "createdAt": "2020-02-06T19:21:40Z", "author": {"login": "TheNeuralBit"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -78,31 +78,45 @@ message Components {\n // A Pipeline is a hierarchical graph of PTransforms, linked\n // by PCollections.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5NDQ4MQ==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/10779#discussion_r376094481", "createdAt": "2020-02-06T21:34:21Z", "author": {"login": "lukecwik"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -78,31 +78,45 @@ message Components {\n // A Pipeline is a hierarchical graph of PTransforms, linked\n // by PCollections.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzMjY4Mw=="}, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTc2MzM1OnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToyNDoyM1rOFmnSxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozMjoyM1rOFmq7aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzMzk4OA==", "bodyText": "Is this correct? I thought it would look like:\nImpulse -> PCollection -> ParDo -> PCollection -> GroupByKey -> ...\n                                               \\> ParDo      -> ...\n\nOr maybe the ParDo you're documenting is a multi-output one?", "url": "https://github.com/apache/beam/pull/10779#discussion_r376033988", "createdAt": "2020-02-06T19:24:23Z", "author": {"login": "TheNeuralBit"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -78,31 +78,45 @@ message Components {\n // A Pipeline is a hierarchical graph of PTransforms, linked\n // by PCollections.\n //\n-// This is represented by a number of by-reference maps to nodes,\n-// PCollections, SDK environments, UDF, etc., for\n-// supporting compact reuse and arbitrary graph structure.\n+//   Impulse -> PCollection -> ParDo -> PCollection -> GroupByKey -> ...\n+//                                   \\> PCollection -> ParDo      -> ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5MzU0NQ==", "bodyText": "Its a multi output one.", "url": "https://github.com/apache/beam/pull/10779#discussion_r376093545", "createdAt": "2020-02-06T21:32:23Z", "author": {"login": "lukecwik"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -78,31 +78,45 @@ message Components {\n // A Pipeline is a hierarchical graph of PTransforms, linked\n // by PCollections.\n //\n-// This is represented by a number of by-reference maps to nodes,\n-// PCollections, SDK environments, UDF, etc., for\n-// supporting compact reuse and arbitrary graph structure.\n+//   Impulse -> PCollection -> ParDo -> PCollection -> GroupByKey -> ...\n+//                                   \\> PCollection -> ParDo      -> ...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzMzk4OA=="}, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTc2NTU4OnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToyNToxMFrOFmnUNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozMzo0NVrOFmq9_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzNDM1OA==", "bodyText": "nit: add a space here", "url": "https://github.com/apache/beam/pull/10779#discussion_r376034358", "createdAt": "2020-02-06T19:25:10Z", "author": {"login": "TheNeuralBit"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -78,31 +78,45 @@ message Components {\n // A Pipeline is a hierarchical graph of PTransforms, linked\n // by PCollections.\n //\n-// This is represented by a number of by-reference maps to nodes,\n-// PCollections, SDK environments, UDF, etc., for\n-// supporting compact reuse and arbitrary graph structure.\n+//   Impulse -> PCollection -> ParDo -> PCollection -> GroupByKey -> ...\n+//                                   \\> PCollection -> ParDo      -> ...\n //\n-// All of the keys in the maps here are arbitrary strings that are only\n-// required to be internally consistent within this proto message.\n+// This is represented by a number of by-reference maps to transforms,\n+// PCollections, SDK environments, coders, etc., for\n+// supporting compact reuse and arbitrary graph structure.\n message Pipeline {\n \n   // (Required) The coders, UDFs, graph nodes, etc, that make up\n   // this pipeline.\n   Components components = 1;\n \n-  // (Required) The ids of all PTransforms that are not contained within another PTransform.\n-  // These must be in shallow topological order, so that traversing them recursively\n-  // in this order yields a recursively topological traversal.\n+  // (Required) The ids of all PTransforms that are not contained within another\n+  // PTransform. These must be in shallow topological order, so that traversing\n+  // them recursively in this order yields a recursively topological traversal.\n   repeated string root_transform_ids = 2;\n \n   // (Optional) Static display data for the pipeline. If there is none,\n   // it may be omitted.\n   DisplayData display_data = 3;\n }\n \n-// An applied PTransform! This does not contain the graph data, but only the\n-// fields specific to a graph node that is a Runner API transform\n-// between PCollections.\n+// Transforms are the operations in your pipeline, and provide a generic\n+// processing framework. You provide processing logic in the form of a function\n+// object (colloquially referred to as \u201cuser code\u201d), and your user code is\n+// applied to each element of an input PCollection (or more than one\n+// PCollection). Depending on the pipeline runner and back-end that you choose,\n+// many different workers across a cluster may execute instances of your user\n+// code in parallel. The user code running on each worker generates the output\n+// elements that are ultimately added to the final output PCollection that the\n+// transform produces.\n+//\n+//The Beam SDKs contain a number of different transforms that you can apply to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5NDIwNQ==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/10779#discussion_r376094205", "createdAt": "2020-02-06T21:33:45Z", "author": {"login": "lukecwik"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -78,31 +78,45 @@ message Components {\n // A Pipeline is a hierarchical graph of PTransforms, linked\n // by PCollections.\n //\n-// This is represented by a number of by-reference maps to nodes,\n-// PCollections, SDK environments, UDF, etc., for\n-// supporting compact reuse and arbitrary graph structure.\n+//   Impulse -> PCollection -> ParDo -> PCollection -> GroupByKey -> ...\n+//                                   \\> PCollection -> ParDo      -> ...\n //\n-// All of the keys in the maps here are arbitrary strings that are only\n-// required to be internally consistent within this proto message.\n+// This is represented by a number of by-reference maps to transforms,\n+// PCollections, SDK environments, coders, etc., for\n+// supporting compact reuse and arbitrary graph structure.\n message Pipeline {\n \n   // (Required) The coders, UDFs, graph nodes, etc, that make up\n   // this pipeline.\n   Components components = 1;\n \n-  // (Required) The ids of all PTransforms that are not contained within another PTransform.\n-  // These must be in shallow topological order, so that traversing them recursively\n-  // in this order yields a recursively topological traversal.\n+  // (Required) The ids of all PTransforms that are not contained within another\n+  // PTransform. These must be in shallow topological order, so that traversing\n+  // them recursively in this order yields a recursively topological traversal.\n   repeated string root_transform_ids = 2;\n \n   // (Optional) Static display data for the pipeline. If there is none,\n   // it may be omitted.\n   DisplayData display_data = 3;\n }\n \n-// An applied PTransform! This does not contain the graph data, but only the\n-// fields specific to a graph node that is a Runner API transform\n-// between PCollections.\n+// Transforms are the operations in your pipeline, and provide a generic\n+// processing framework. You provide processing logic in the form of a function\n+// object (colloquially referred to as \u201cuser code\u201d), and your user code is\n+// applied to each element of an input PCollection (or more than one\n+// PCollection). Depending on the pipeline runner and back-end that you choose,\n+// many different workers across a cluster may execute instances of your user\n+// code in parallel. The user code running on each worker generates the output\n+// elements that are ultimately added to the final output PCollection that the\n+// transform produces.\n+//\n+//The Beam SDKs contain a number of different transforms that you can apply to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzNDM1OA=="}, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTc3NzMxOnYy", "diffSide": "LEFT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToyODo1MFrOFmnbxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozMzo0MVrOFmq95Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzNjI5Mw==", "bodyText": "we didn't actually do this second TODO, ParDoPayload et al are still here. I guess we don't want to move them anymore?", "url": "https://github.com/apache/beam/pull/10779#discussion_r376036293", "createdAt": "2020-02-06T19:28:50Z", "author": {"login": "TheNeuralBit"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -123,16 +137,9 @@ message PTransform {\n   //\n   // For primitive transform in the Runner API, this is required, and the\n   // payloads are well-defined messages. When the URN indicates ParDo it\n-  // is a ParDoPayload, and so on.\n-  //\n-  // TODO: document the standardized URNs and payloads\n-  // TODO: separate standardized payloads into a separate proto file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5NDE4MQ==", "bodyText": "Yeah, I closed the related BEAM-4180 since the effort isn't worth it and the Payload term does provide meaning that its meant to be embedded.", "url": "https://github.com/apache/beam/pull/10779#discussion_r376094181", "createdAt": "2020-02-06T21:33:41Z", "author": {"login": "lukecwik"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -123,16 +137,9 @@ message PTransform {\n   //\n   // For primitive transform in the Runner API, this is required, and the\n   // payloads are well-defined messages. When the URN indicates ParDo it\n-  // is a ParDoPayload, and so on.\n-  //\n-  // TODO: document the standardized URNs and payloads\n-  // TODO: separate standardized payloads into a separate proto file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzNjI5Mw=="}, "originalCommit": {"oid": "226f4f62406a6d464ade19705ce21e7aefb386a3"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2169, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}