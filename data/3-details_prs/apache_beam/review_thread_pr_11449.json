{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1Mjg5NzUz", "number": 11449, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoyNjoxM1rODzCQ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDo1NDo0N1rODzCsjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODQxMDQ0OnYy", "diffSide": "LEFT", "path": "sdks/python/apache_beam/examples/snippets/snippets_test_py3.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoyNjoxM1rOGHcEiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxNjo0M1rOGIhe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MzEyOQ==", "bodyText": "I put these unused_ arguments because I ran this file through mypy and it was complaining about them not being there.\nPyCharm has similar complaints. Any solution to this?", "url": "https://github.com/apache/beam/pull/11449#discussion_r410453129", "createdAt": "2020-04-17T20:26:13Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/examples/snippets/snippets_test_py3.py", "diffHunk": "@@ -44,7 +44,7 @@ def test_bad_types_annotations(self):\n     # pylint: disable=expression-not-assigned\n     # pylint: disable=unused-variable\n     class FilterEvensDoFn(beam.DoFn):\n-      def process(self, element, *unused_args, **unused_kwargs):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5OTM1MA==", "bodyText": "Well, mypy and PyCharm are certainly in error here. Possibly it's because we call DoFns with *args and **kwargs in places, but we construct those to match the actual signature. Please file a JIRA about this.", "url": "https://github.com/apache/beam/pull/11449#discussion_r410499350", "createdAt": "2020-04-17T22:28:43Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/examples/snippets/snippets_test_py3.py", "diffHunk": "@@ -44,7 +44,7 @@ def test_bad_types_annotations(self):\n     # pylint: disable=expression-not-assigned\n     # pylint: disable=unused-variable\n     class FilterEvensDoFn(beam.DoFn):\n-      def process(self, element, *unused_args, **unused_kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MzEyOQ=="}, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNDM4OQ==", "bodyText": "I believe it's because the base class has *args and **kwargs in the prototype:\n\n  \n    \n      beam/sdks/python/apache_beam/transforms/core.py\n    \n    \n         Line 621\n      in\n      1de50c3\n    \n    \n    \n    \n\n        \n          \n           def process(self, element, *args, **kwargs):", "url": "https://github.com/apache/beam/pull/11449#discussion_r410504389", "createdAt": "2020-04-17T22:48:19Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/examples/snippets/snippets_test_py3.py", "diffHunk": "@@ -44,7 +44,7 @@ def test_bad_types_annotations(self):\n     # pylint: disable=expression-not-assigned\n     # pylint: disable=unused-variable\n     class FilterEvensDoFn(beam.DoFn):\n-      def process(self, element, *unused_args, **unused_kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MzEyOQ=="}, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MDM5NQ==", "bodyText": "Hmm... I wonder if it's possible to disable mypy for this method, as it's invoked dynamically and clearly can't figure out what's going on.", "url": "https://github.com/apache/beam/pull/11449#discussion_r411590395", "createdAt": "2020-04-20T18:16:43Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/examples/snippets/snippets_test_py3.py", "diffHunk": "@@ -44,7 +44,7 @@ def test_bad_types_annotations(self):\n     # pylint: disable=expression-not-assigned\n     # pylint: disable=unused-variable\n     class FilterEvensDoFn(beam.DoFn):\n-      def process(self, element, *unused_args, **unused_kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MzEyOQ=="}, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODQxNzA4OnYy", "diffSide": "RIGHT", "path": "website/src/documentation/sdks/python-type-safety.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoyODo0N1rOGHcI2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoyODo0N1rOGHcI2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NDIzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Beam will remove the outer iterable of the return type on the `DoFn.process` method and functions passed `FlatMap` to deduce the element type of resulting PCollection .\n          \n          \n            \n            Beam will remove the outer iterable of the return type on the `DoFn.process` method and functions passed to `FlatMap` to deduce the element type of resulting PCollection .", "url": "https://github.com/apache/beam/pull/11449#discussion_r410454232", "createdAt": "2020-04-17T20:28:47Z", "author": {"login": "udim"}, "path": "website/src/documentation/sdks/python-type-safety.md", "diffHunk": "@@ -91,8 +92,8 @@ The following code declares an `int` input and a `str` output type hint on the `\n ```\n \n The following code declares `int` input and output type hints on `filter_evens`, using annotations on `FilterEvensDoFn.process`.\n-Since `process` returns a generator, the output type is annotated as `Iterable[int]` (`Generator[int, None, None]` would also work here).\n-Beam will remove the outer iterable of the return type on the `DoFn.process` method and functions passed to `ParDo` and `FlatMap`.\n+Since `process` returns a generator, the output type for a DoFn producing a `PCollection[int]` is annotated as `Iterable[int]` (`Generator[int, None, None]` would also work here).\n+Beam will remove the outer iterable of the return type on the `DoFn.process` method and functions passed `FlatMap` to deduce the element type of resulting PCollection .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODQ4MTQwOnYy", "diffSide": "LEFT", "path": "website/src/documentation/sdks/python-type-safety.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDo1NDo0N1rOGHcyng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozMToyM1rOGHe70g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2NDkyNg==", "bodyText": "If you're removing mentions of ParDo here, then the corresponding snippets should also be updated to use FlatMap instead of ParDo.", "url": "https://github.com/apache/beam/pull/11449#discussion_r410464926", "createdAt": "2020-04-17T20:54:47Z", "author": {"login": "udim"}, "path": "website/src/documentation/sdks/python-type-safety.md", "diffHunk": "@@ -91,8 +92,8 @@ The following code declares an `int` input and a `str` output type hint on the `\n ```\n \n The following code declares `int` input and output type hints on `filter_evens`, using annotations on `FilterEvensDoFn.process`.\n-Since `process` returns a generator, the output type is annotated as `Iterable[int]` (`Generator[int, None, None]` would also work here).\n-Beam will remove the outer iterable of the return type on the `DoFn.process` method and functions passed to `ParDo` and `FlatMap`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDA1MA==", "bodyText": "The ParDos in the snippets are being passed DoFns. I removed the reference to passing (raw) functions to ParDo.", "url": "https://github.com/apache/beam/pull/11449#discussion_r410500050", "createdAt": "2020-04-17T22:31:23Z", "author": {"login": "robertwb"}, "path": "website/src/documentation/sdks/python-type-safety.md", "diffHunk": "@@ -91,8 +92,8 @@ The following code declares an `int` input and a `str` output type hint on the `\n ```\n \n The following code declares `int` input and output type hints on `filter_evens`, using annotations on `FilterEvensDoFn.process`.\n-Since `process` returns a generator, the output type is annotated as `Iterable[int]` (`Generator[int, None, None]` would also work here).\n-Beam will remove the outer iterable of the return type on the `DoFn.process` method and functions passed to `ParDo` and `FlatMap`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2NDkyNg=="}, "originalCommit": {"oid": "afeaabd62de59f045de2e33d19d5812f82d99db5"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1301, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}