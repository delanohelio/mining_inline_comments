{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTE5ODEy", "number": 13177, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMTo0Njo1NFrOExYjHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMTo0Njo1NFrOExYjHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjE3ODg2OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMTo0Njo1NFrOHnfUtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzoyMDo1MVrOHqmj9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2OTcxOA==", "bodyText": "Do we need to traverse into sub-transforms to fetch their inputs, or are we guaranteed that all transforms are leaf transforms?", "url": "https://github.com/apache/beam/pull/13177#discussion_r511169718", "createdAt": "2020-10-23T21:46:54Z", "author": {"login": "yifanmai"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -1702,13 +1702,26 @@ def sort_stages(stages, pipeline_context):\n   seen = set()  # type: Set[Stage]\n   ordered = []\n \n+  producers = {\n+      pcoll: stage\n+      for stage in all_stages for t in stage.transforms", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6892f8fb29a2a1f3451a1e2e6ff7cc5ebd5d833"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzNDAzNw==", "bodyText": "This should be sufficient. Generally the subtransform structure is not preserved when dealing with stages (and is simply reconstructed later).", "url": "https://github.com/apache/beam/pull/13177#discussion_r514434037", "createdAt": "2020-10-29T17:20:51Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -1702,13 +1702,26 @@ def sort_stages(stages, pipeline_context):\n   seen = set()  # type: Set[Stage]\n   ordered = []\n \n+  producers = {\n+      pcoll: stage\n+      for stage in all_stages for t in stage.transforms", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2OTcxOA=="}, "originalCommit": {"oid": "b6892f8fb29a2a1f3451a1e2e6ff7cc5ebd5d833"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2837, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}