{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTU5MjE2", "number": 12970, "title": "[BEAM-8024] Add dataflow and flink runner to JPMS test", "bodyText": "Run JPMS test on dataflow and flink runner as well\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-29T22:55:44Z", "url": "https://github.com/apache/beam/pull/12970", "merged": true, "mergeCommit": {"oid": "969b0c6d2cc4cf31d78fcf41794d583f13181c1e"}, "closed": true, "closedAt": "2020-10-02T02:54:42Z", "author": {"login": "kileys"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKOdpiAH2gAyNDk1MTU5MjE2OjYxNWQ1MDkzYzkwMThiZDAzOWMxOTZlNDU4ZTNmYzBhZjVjNzQyMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOc6dNAH2gAyNDk1MTU5MjE2OjM2ZjY5NTk4N2RmNGQyNjczYWM5NmI4YzlkYTlmOWI2OTE2OGQwZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "615d5093c9018bd039c196e458e3fc0af5c74208", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/615d5093c9018bd039c196e458e3fc0af5c74208", "committedDate": "2020-09-18T23:47:32Z", "message": "Add e2e word count test for jpms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "388756f70c51c8cea45f3a749512b55fa41f4d5a", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/388756f70c51c8cea45f3a749512b55fa41f4d5a", "committedDate": "2020-09-19T00:02:06Z", "message": "remove comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1f5e6c46b87aa4f8c6538e8a1c07560c04875e", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/ce1f5e6c46b87aa4f8c6538e8a1c07560c04875e", "committedDate": "2020-09-19T00:12:37Z", "message": "formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e2385f4075807b10a0a16eb3279351f046577c5", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/7e2385f4075807b10a0a16eb3279351f046577c5", "committedDate": "2020-09-21T21:30:37Z", "message": "Merge branch 'master' of github.com:apache/beam into beam-8024-jpms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef79bb9a32d6a854944922dd19da92f5dc831b49", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/ef79bb9a32d6a854944922dd19da92f5dc831b49", "committedDate": "2020-09-21T21:35:18Z", "message": "formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c262005c3254dc44697e6642df287ff0e1f263c4", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/c262005c3254dc44697e6642df287ff0e1f263c4", "committedDate": "2020-09-22T17:35:15Z", "message": "add new jenkins job"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b01ff0daf3aec5950287f7efd9a57db8063954", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/00b01ff0daf3aec5950287f7efd9a57db8063954", "committedDate": "2020-09-22T19:07:33Z", "message": "move into separate job"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "622084290126cb36bc30611de23640e7a8630ee9", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/622084290126cb36bc30611de23640e7a8630ee9", "committedDate": "2020-09-22T21:04:15Z", "message": "fix precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f16e30b9ad7e3e6bbac8a34391f8117a0e12840", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/7f16e30b9ad7e3e6bbac8a34391f8117a0e12840", "committedDate": "2020-09-22T22:03:32Z", "message": "Merge branch 'master' of github.com:apache/beam into beam-8024-jpms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6060f926f58df3edbb279a9d0603f5fcd0730f9a", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/6060f926f58df3edbb279a9d0603f5fcd0730f9a", "committedDate": "2020-09-22T23:12:34Z", "message": "format, skip all tests if jdk < 8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc6f9b9cf2c105fe69290c6e89b768bb2cf3fe3c", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/bc6f9b9cf2c105fe69290c6e89b768bb2cf3fe3c", "committedDate": "2020-09-23T19:10:13Z", "message": "Merge branch 'master' of github.com:apache/beam into beam-8024-jpms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60436c6707a11284a460437f8880fd7c81aee026", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/60436c6707a11284a460437f8880fd7c81aee026", "committedDate": "2020-09-29T18:18:57Z", "message": "run test on flink and dataflow runner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa88f1a94ce12175f1715cd8c0139c550a15dcb", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/4aa88f1a94ce12175f1715cd8c0139c550a15dcb", "committedDate": "2020-09-29T22:27:39Z", "message": "add job to readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7945fcc59b60d764f2b4ee3775fcde95514cf30", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/f7945fcc59b60d764f2b4ee3775fcde95514cf30", "committedDate": "2020-09-29T22:40:59Z", "message": "Merge branch 'master' of github.com:apache/beam into beam-8024-jpms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5952ce14fc44742f210a22cc1424fd08088c3edf", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/5952ce14fc44742f210a22cc1424fd08088c3edf", "committedDate": "2020-09-29T22:53:02Z", "message": "fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/ac0c88c5df11e25791c586d6d4dddc93a3b2cc95", "committedDate": "2020-09-29T23:15:20Z", "message": "remove fork"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTk2NDc4", "url": "https://github.com/apache/beam/pull/12970#pullrequestreview-498996478", "createdAt": "2020-09-29T23:38:17Z", "commit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMzozODoxN1rOHaHS8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMzo0NzoyN1rOHaHs3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0NDU2Mg==", "bodyText": "Aesthetically, I dislike building code identifiers (or similar) by string concat. Pragmatically it makes it hard to search for them. But looping out these configs makes sense. What do you think about something like a map from configuration name to runner class.\ndef postCommitConfigurations = {\n   \"directRunnerPostCommit\" : \"org.apache.beam.runners.direct.DirectRunner\",\n   \"flinkRunnerPostCommit\" : \"org.apache.beam.runners.flink.TestFlinkRunner\"\n   \"dataflowRunnerPostCommit\" : \"org.apache.beam.runners.dataflow.TestDataflowRunner\"\n}", "url": "https://github.com/apache/beam/pull/12970#discussion_r497144562", "createdAt": "2020-09-29T23:38:17Z", "author": {"login": "kennknowles"}, "path": "sdks/java/testing/jpms-tests/build.gradle", "diffHunk": "@@ -31,13 +34,66 @@ enableJavaPerformanceTesting()\n description = \"Apache Beam :: SDKs :: Java :: Testing :: JPMS Tests\"\n ext.summary = \"E2E test for Java 9 modules\"\n \n+/*\n+ * List of runners to run post commit tests on.\n+ */\n+def postCommitRunnerClass = [\n+        directRunner: \"org.apache.beam.runners.direct.DirectRunner\",\n+        flinkRunner: \"org.apache.beam.runners.flink.TestFlinkRunner\",\n+        dataflowRunner: \"org.apache.beam.runners.dataflow.TestDataflowRunner\",\n+]\n+for (String runner : postCommitRunnerClass.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0NTIwOA==", "bodyText": "Especially considering this bit, the looping over configuration doesn't really save you much. Could be simpler to just define 3 configs with very straightforward control flow and data flow.", "url": "https://github.com/apache/beam/pull/12970#discussion_r497145208", "createdAt": "2020-09-29T23:39:10Z", "author": {"login": "kennknowles"}, "path": "sdks/java/testing/jpms-tests/build.gradle", "diffHunk": "@@ -31,13 +34,66 @@ enableJavaPerformanceTesting()\n description = \"Apache Beam :: SDKs :: Java :: Testing :: JPMS Tests\"\n ext.summary = \"E2E test for Java 9 modules\"\n \n+/*\n+ * List of runners to run post commit tests on.\n+ */\n+def postCommitRunnerClass = [\n+        directRunner: \"org.apache.beam.runners.direct.DirectRunner\",\n+        flinkRunner: \"org.apache.beam.runners.flink.TestFlinkRunner\",\n+        dataflowRunner: \"org.apache.beam.runners.dataflow.TestDataflowRunner\",\n+]\n+for (String runner : postCommitRunnerClass.keySet()) {\n+  configurations.create(runner + \"PostCommit\")\n+}\n+\n dependencies {\n   compile project(path: \":sdks:java:core\", configuration: \"shadow\")\n-  compile project(path: \":runners:direct-java\")\n   compile project(path: \":sdks:java:extensions:google-cloud-platform-core\")\n \n   testCompile library.java.junit\n   testCompile library.java.hamcrest_core\n+\n+  // Add dependencies for the PostCommit configurations\n+  // For each runner a project level dependency on the test project.\n+  for (String runner : postCommitRunnerClass.keySet()) {\n+    delegate.add(runner + \"PostCommit\", project(\":sdks:java:testing:jpms-tests\"))\n+    delegate.add(runner + \"PostCommit\", project(path: \":sdks:java:testing:jpms-tests\", configuration: \"testRuntime\"))\n+  }\n+  directRunnerPostCommit project(\":runners:direct-java\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0NTY5Mg==", "bodyText": "putting a pin in the fact that this is largely independent of your change and applies cross module (no action required)", "url": "https://github.com/apache/beam/pull/12970#discussion_r497145692", "createdAt": "2020-09-29T23:39:52Z", "author": {"login": "kennknowles"}, "path": "sdks/java/testing/jpms-tests/build.gradle", "diffHunk": "@@ -31,13 +34,66 @@ enableJavaPerformanceTesting()\n description = \"Apache Beam :: SDKs :: Java :: Testing :: JPMS Tests\"\n ext.summary = \"E2E test for Java 9 modules\"\n \n+/*\n+ * List of runners to run post commit tests on.\n+ */\n+def postCommitRunnerClass = [\n+        directRunner: \"org.apache.beam.runners.direct.DirectRunner\",\n+        flinkRunner: \"org.apache.beam.runners.flink.TestFlinkRunner\",\n+        dataflowRunner: \"org.apache.beam.runners.dataflow.TestDataflowRunner\",\n+]\n+for (String runner : postCommitRunnerClass.keySet()) {\n+  configurations.create(runner + \"PostCommit\")\n+}\n+\n dependencies {\n   compile project(path: \":sdks:java:core\", configuration: \"shadow\")\n-  compile project(path: \":runners:direct-java\")\n   compile project(path: \":sdks:java:extensions:google-cloud-platform-core\")\n \n   testCompile library.java.junit\n   testCompile library.java.hamcrest_core\n+\n+  // Add dependencies for the PostCommit configurations\n+  // For each runner a project level dependency on the test project.\n+  for (String runner : postCommitRunnerClass.keySet()) {\n+    delegate.add(runner + \"PostCommit\", project(\":sdks:java:testing:jpms-tests\"))\n+    delegate.add(runner + \"PostCommit\", project(path: \":sdks:java:testing:jpms-tests\", configuration: \"testRuntime\"))\n+  }\n+  directRunnerPostCommit project(\":runners:direct-java\")\n+  flinkRunnerPostCommit project(\":runners:flink:1.10\")\n+  dataflowRunnerPostCommit project(\":runners:google-cloud-dataflow-java\")\n+}\n+\n+/*\n+ * Create a ${runner}PostCommit task for each runner which runs a set\n+ * of integration tests for WordCount and WindowedWordCount.\n+ */\n+def gcpProject = project.findProperty('gcpProject') ?: 'apache-beam-testing'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0OTE5NA==", "bodyText": "This is a laudable instinct, but I actually don't favor it. Reasons:\n\nPrefer to separate test suites from when they may run\nRunners often have fairly different infrastructures to spin up and potentially blow memory if accidentally run together\nWe want separate signals about what is unhealthy.\n\nRegarding naming of a test suite \"postcommit\" I want to acknowledge that you are noticing how things are currently organized and following those conventions. So that's sensible. But it is a convention I think we have to move away from. Gradle can be run from lots of places and the notion of precommit vs postcommit is inessential.", "url": "https://github.com/apache/beam/pull/12970#discussion_r497149194", "createdAt": "2020-09-29T23:44:40Z", "author": {"login": "kennknowles"}, "path": "sdks/java/testing/jpms-tests/build.gradle", "diffHunk": "@@ -31,13 +34,66 @@ enableJavaPerformanceTesting()\n description = \"Apache Beam :: SDKs :: Java :: Testing :: JPMS Tests\"\n ext.summary = \"E2E test for Java 9 modules\"\n \n+/*\n+ * List of runners to run post commit tests on.\n+ */\n+def postCommitRunnerClass = [\n+        directRunner: \"org.apache.beam.runners.direct.DirectRunner\",\n+        flinkRunner: \"org.apache.beam.runners.flink.TestFlinkRunner\",\n+        dataflowRunner: \"org.apache.beam.runners.dataflow.TestDataflowRunner\",\n+]\n+for (String runner : postCommitRunnerClass.keySet()) {\n+  configurations.create(runner + \"PostCommit\")\n+}\n+\n dependencies {\n   compile project(path: \":sdks:java:core\", configuration: \"shadow\")\n-  compile project(path: \":runners:direct-java\")\n   compile project(path: \":sdks:java:extensions:google-cloud-platform-core\")\n \n   testCompile library.java.junit\n   testCompile library.java.hamcrest_core\n+\n+  // Add dependencies for the PostCommit configurations\n+  // For each runner a project level dependency on the test project.\n+  for (String runner : postCommitRunnerClass.keySet()) {\n+    delegate.add(runner + \"PostCommit\", project(\":sdks:java:testing:jpms-tests\"))\n+    delegate.add(runner + \"PostCommit\", project(path: \":sdks:java:testing:jpms-tests\", configuration: \"testRuntime\"))\n+  }\n+  directRunnerPostCommit project(\":runners:direct-java\")\n+  flinkRunnerPostCommit project(\":runners:flink:1.10\")\n+  dataflowRunnerPostCommit project(\":runners:google-cloud-dataflow-java\")\n+}\n+\n+/*\n+ * Create a ${runner}PostCommit task for each runner which runs a set\n+ * of integration tests for WordCount and WindowedWordCount.\n+ */\n+def gcpProject = project.findProperty('gcpProject') ?: 'apache-beam-testing'\n+def gcpRegion = project.findProperty('gcpRegion') ?: 'us-central1'\n+def gcsTempRoot = project.findProperty('gcsTempRoot') ?: 'gs://temp-storage-for-end-to-end-tests/'\n+\n+for (String runner : postCommitRunnerClass.keySet()) {\n+  tasks.create(name: runner + \"PostCommit\", type: Test) {\n+    def postCommitBeamTestPipelineOptions = [\n+            \"--project=${gcpProject}\",\n+            \"--tempRoot=${gcsTempRoot}\",\n+            \"--runner=\" + postCommitRunnerClass[runner],\n+    ]\n+    if (\"dataflowRunner\".equals(runner)) {\n+      postCommitBeamTestPipelineOptions.add(\"--region=${gcpRegion}\")\n+    }\n+    classpath = configurations.\"${runner}PostCommit\"\n+    include \"**/*IT.class\"\n+    maxParallelForks 4\n+    systemProperty \"beamTestPipelineOptions\", JsonOutput.toJson(postCommitBeamTestPipelineOptions)\n+  }\n+}\n+\n+/* Define a common postcommit task which depends on all the individual postcommits. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1MTE5Ng==", "bodyText": "Noted below that coupling the various runners has some drawbacks. It is some boilerplate but can we factor it out into a few jobs: direct (candidate for precommit), flink (also candidate, but slower), dataflow (too slow for precommit).", "url": "https://github.com/apache/beam/pull/12970#discussion_r497151196", "createdAt": "2020-09-29T23:47:27Z", "author": {"login": "kennknowles"}, "path": ".test-infra/jenkins/job_PostCommit_Java_Jpms_Java11.groovy", "diffHunk": "@@ -39,7 +39,7 @@ PostcommitJobBuilder.postCommitJob('beam_PostCommit_Java_Jpms_Java11', 'Run Jpms\n       steps {\n         gradle {\n           rootBuildScriptDir(commonJobProperties.checkoutDir)\n-          tasks(':sdks:java:testing:jpms-tests:integrationTest')\n+          tasks(':sdks:java:testing:jpms-tests:postCommit')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0c88c5df11e25791c586d6d4dddc93a3b2cc95"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d01cbdd18424a911b1b196849d30b0b437b2921", "author": {"user": {"login": "kileys", "name": null}}, "url": "https://github.com/apache/beam/commit/0d01cbdd18424a911b1b196849d30b0b437b2921", "committedDate": "2020-10-01T03:18:19Z", "message": "add separate jobs, update build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODMzNTkz", "url": "https://github.com/apache/beam/pull/12970#pullrequestreview-500833593", "createdAt": "2020-10-02T02:49:31Z", "commit": {"oid": "0d01cbdd18424a911b1b196849d30b0b437b2921"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36f695987df4d2673ac96b8c9da9f9b69168d0eb", "author": {"user": {"login": "kennknowles", "name": "Kenn Knowles"}}, "url": "https://github.com/apache/beam/commit/36f695987df4d2673ac96b8c9da9f9b69168d0eb", "committedDate": "2020-10-02T02:53:22Z", "message": "spotlessApply"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2184, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}