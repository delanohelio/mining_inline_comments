{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMjkzNDM1", "number": 13055, "title": "[BEAM-11006] BigQuery failsafe function", "bodyText": "Implementing a new function to allow BigQueryIO write to have customized Failsafe handling for Streaming Writes.\nAdding a new withFailsafeFormatFunction() which formats the original PCollection value into a raw TableRow (which does not have to match the TableRow written to BigQuery.\nPCollection<FailsafeElement<String, TableRow>> can write the TableRow to BigQuery, but restore the original payload on an exception.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-09T01:53:16Z", "url": "https://github.com/apache/beam/pull/13055", "merged": true, "mergeCommit": {"oid": "8b9dc0fef3a541a3502b5dba812da2cb05ab4a5b"}, "closed": true, "closedAt": "2020-10-17T03:20:52Z", "author": {"login": "dhercher"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQrRRAAH2gAyNTAwMjkzNDM1OjA5YmUxOTBhNGNmYzEwMzc4OWEzZTc3MzZhNDU0MjRhMjkzYjI3MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTNQf7gH2gAyNTAwMjkzNDM1OmVhZTMxZGU2NjU2YTNhN2Y3ODdkNGI0MWQ0YTU5ODAxN2IzMTlkNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "09be190a4cfc103789a3e7736a45424a293b2733", "author": {"user": {"login": "dhercher", "name": "Dylan Hercher"}}, "url": "https://github.com/apache/beam/commit/09be190a4cfc103789a3e7736a45424a293b2733", "committedDate": "2020-10-09T00:44:48Z", "message": "Adding a Failsafe format function to BigQuery streaming writes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee524a23261bcee1f1f02a0480dd0f21e41f4152", "author": {"user": {"login": "dhercher", "name": "Dylan Hercher"}}, "url": "https://github.com/apache/beam/commit/ee524a23261bcee1f1f02a0480dd0f21e41f4152", "committedDate": "2020-10-09T01:06:24Z", "message": "[BEAM-11006] Adding a Failsafe format function to BigQuery streaming writes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620c391d79531d154e2a22d17cd47efc9fd2c5d1", "author": {"user": {"login": "dhercher", "name": "Dylan Hercher"}}, "url": "https://github.com/apache/beam/commit/620c391d79531d154e2a22d17cd47efc9fd2c5d1", "committedDate": "2020-10-09T17:36:53Z", "message": "make FailsafeValueInSingleWindow public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21e55f2a9ce8a19102f3f3d8a6a175622a7cacac", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/21e55f2a9ce8a19102f3f3d8a6a175622a7cacac", "committedDate": "2020-10-09T17:50:12Z", "message": "missed failsafe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93a95c064c4dfc156886ed90465d97318d44e6a6", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/93a95c064c4dfc156886ed90465d97318d44e6a6", "committedDate": "2020-10-09T18:02:37Z", "message": "match BigQueryIO row writer T"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDA0NTMy", "url": "https://github.com/apache/beam/pull/13055#pullrequestreview-506004532", "createdAt": "2020-10-09T21:42:38Z", "commit": {"oid": "93a95c064c4dfc156886ed90465d97318d44e6a6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTo0MjozOVrOHfZXPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTo0MzoyMlrOHfZX4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzQ1NA==", "bodyText": "Does this have to write TableRows? Why not also have the option to return the user type itself? (perhaps it's a lot of trouble to implement given the existing types?)\nWhat are some examples where users may want to recover a different tablerow than the one that was sent to BQ?", "url": "https://github.com/apache/beam/pull/13055#discussion_r502683454", "createdAt": "2020-10-09T21:42:39Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "diffHunk": "@@ -2002,6 +2006,11 @@ static String getExtractDestinationUri(String extractDestinationDir) {\n       return toBuilder().setFormatFunction(formatFunction).build();\n     }\n \n+    /** Formats the user's type into a {@link TableRow} to be written to an error collector. */\n+     public Write<T> withFailsafeFormatFunction(SerializableFunction<T, TableRow> formatFunction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a95c064c4dfc156886ed90465d97318d44e6a6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNg==", "bodyText": "yum yum? : ) remove?", "url": "https://github.com/apache/beam/pull/13055#discussion_r502683616", "createdAt": "2020-10-09T21:43:22Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/RowWriterFactory.java", "diffHunk": "@@ -40,23 +40,35 @@ private RowWriterFactory() {}\n       String tempFilePrefix, DestinationT destination) throws Exception;\n \n   static <ElementT, DestinationT> RowWriterFactory<ElementT, DestinationT> tableRows(\n-      SerializableFunction<ElementT, TableRow> toRow) {\n-    return new TableRowWriterFactory<ElementT, DestinationT>(toRow);\n+      SerializableFunction<ElementT, TableRow> toRow,\n+      SerializableFunction<ElementT, TableRow> toFailsafeRow) {\n+    return new TableRowWriterFactory<ElementT, DestinationT>(toRow, toFailsafeRow);\n   }\n \n   static final class TableRowWriterFactory<ElementT, DestinationT>\n       extends RowWriterFactory<ElementT, DestinationT> {\n \n     private final SerializableFunction<ElementT, TableRow> toRow;\n+    private final SerializableFunction<ElementT, TableRow> toFailsafeRow;\n \n-    private TableRowWriterFactory(SerializableFunction<ElementT, TableRow> toRow) {\n+    private TableRowWriterFactory(\n+        SerializableFunction<ElementT, TableRow> toRow,\n+        SerializableFunction<ElementT, TableRow> toFailsafeRow) {\n       this.toRow = toRow;\n+      this.toFailsafeRow = toFailsafeRow; // TODO yummy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a95c064c4dfc156886ed90465d97318d44e6a6"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93fe82d61908eb7fc38398155e5b86398947fc35", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/93fe82d61908eb7fc38398155e5b86398947fc35", "committedDate": "2020-10-09T23:18:20Z", "message": "clean extra PrepareWrite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a480a0f863ced2483f5c25cf1555930e2505c21e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a480a0f863ced2483f5c25cf1555930e2505c21e", "committedDate": "2020-10-09T23:29:07Z", "message": "linting cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1729945c2e0f395c586a0a40314dc83878a991b0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1729945c2e0f395c586a0a40314dc83878a991b0", "committedDate": "2020-10-09T23:32:37Z", "message": "object already defined"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a911c9fdefedc33b8c5e160898b350e7dfd7116", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/2a911c9fdefedc33b8c5e160898b350e7dfd7116", "committedDate": "2020-10-09T23:33:57Z", "message": "linting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94bd4b4c724c0ebcf7af0ee300ed495e89d4f0f4", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/94bd4b4c724c0ebcf7af0ee300ed495e89d4f0f4", "committedDate": "2020-10-09T23:46:27Z", "message": "fixing testing to match new falsafe logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7d5b4cc9252feb5bc5e1faf9ecc7d3bb4e3012e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a7d5b4cc9252feb5bc5e1faf9ecc7d3bb4e3012e", "committedDate": "2020-10-10T00:17:06Z", "message": "cleaninng tests to use failsafe logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "602aa1c23eb0dd13cf91ab6617eb42ae536189ff", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/602aa1c23eb0dd13cf91ab6617eb42ae536189ff", "committedDate": "2020-10-10T00:18:54Z", "message": "remove todo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e78d0d07bab6c0f973c744adbae20a4338ae687", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1e78d0d07bab6c0f973c744adbae20a4338ae687", "committedDate": "2020-10-12T01:40:57Z", "message": "use proper Failsafe value object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c826345cdd25d38594dda2187972465de4c70ceb", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c826345cdd25d38594dda2187972465de4c70ceb", "committedDate": "2020-10-12T01:42:13Z", "message": "lintng"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61ab71e5b46222a0d9e9adbfd143e958a5396fb2", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/61ab71e5b46222a0d9e9adbfd143e958a5396fb2", "committedDate": "2020-10-12T01:54:11Z", "message": "format FailsafeValueInSingleWindow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b78c646024263ed40805a1613c561403ff5abb1", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4b78c646024263ed40805a1613c561403ff5abb1", "committedDate": "2020-10-12T02:07:58Z", "message": "fix test to validate on correct expected values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40237b506659c55437692d3c8475ef908364ab5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c40237b506659c55437692d3c8475ef908364ab5", "committedDate": "2020-10-12T19:40:39Z", "message": "implement coder logic for failsafe element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73dbf5fcc57bf0b8eafc8e7d35b4c92850bbb511", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/73dbf5fcc57bf0b8eafc8e7d35b4c92850bbb511", "committedDate": "2020-10-12T19:41:12Z", "message": "clean up todo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "450fbc45fb8c73a02f01d169f1a5a3c5e67c524e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/450fbc45fb8c73a02f01d169f1a5a3c5e67c524e", "committedDate": "2020-10-12T19:42:42Z", "message": "cleanup todo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d7bfe4a0921b24406539993071e33dd55b30b89", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/9d7bfe4a0921b24406539993071e33dd55b30b89", "committedDate": "2020-10-12T22:12:54Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c861dedf7c0e7187e9766efa193c43e4db6108", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f2c861dedf7c0e7187e9766efa193c43e4db6108", "committedDate": "2020-10-12T22:52:33Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0adba74435c2d5952d4068312de1b7249ede49c3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0adba74435c2d5952d4068312de1b7249ede49c3", "committedDate": "2020-10-12T23:02:06Z", "message": "adding failsafevalueinsinglewindow testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a38d25dea4218e7ca37a8ea553e1da4a9c272dc", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/5a38d25dea4218e7ca37a8ea553e1da4a9c272dc", "committedDate": "2020-10-13T00:11:39Z", "message": "adding tests for failsafe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f931fd65f154c55bc91afbf66ed6aabeba8de340", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f931fd65f154c55bc91afbf66ed6aabeba8de340", "committedDate": "2020-10-13T00:55:29Z", "message": "removing final todo, will add feature in separate PR/issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNzExMzYz", "url": "https://github.com/apache/beam/pull/13055#pullrequestreview-510711363", "createdAt": "2020-10-16T18:31:17Z", "commit": {"oid": "f931fd65f154c55bc91afbf66ed6aabeba8de340"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODozMToxN1rOHjLtpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODozMToxN1rOHjLtpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NDExOA==", "bodyText": "Just one change request:\n\nPerhaps can we rename this to something that doesn't assume this fail-safe keyword is known by users? Perhaps withFailedInsertFormatFunction?\nAnd can you add some detail to the Javadoc so users will understand what this does?\n\nThanks", "url": "https://github.com/apache/beam/pull/13055#discussion_r506654118", "createdAt": "2020-10-16T18:31:17Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "diffHunk": "@@ -2002,6 +2007,11 @@ static String getExtractDestinationUri(String extractDestinationDir) {\n       return toBuilder().setFormatFunction(formatFunction).build();\n     }\n \n+    /** Formats the user's type into a {@link TableRow} to be written to an error collector. */\n+    public Write<T> withFailsafeFormatFunction(SerializableFunction<T, TableRow> formatFunction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f931fd65f154c55bc91afbf66ed6aabeba8de340"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eb5bcc1872e774a669ebfaec542ecd802118556", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/6eb5bcc1872e774a669ebfaec542ecd802118556", "committedDate": "2020-10-16T21:15:13Z", "message": "change name to FormatRecordOnFailureFunction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd93a2c8c302189b9f21c91a2c61a71fcafb1ad", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/ebd93a2c8c302189b9f21c91a2c61a71fcafb1ad", "committedDate": "2020-10-16T21:22:55Z", "message": "linting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eae31de6656a3a7f787d4b41d4a598017b319d55", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/eae31de6656a3a7f787d4b41d4a598017b319d55", "committedDate": "2020-10-16T21:28:35Z", "message": "linting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2367, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}