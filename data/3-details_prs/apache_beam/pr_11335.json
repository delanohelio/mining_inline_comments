{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDM2NTA1", "number": 11335, "title": "[BEAM-9692]: Make CombineValues portable", "bodyText": "Change-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48\nFirst PR make the DataflowRunner use a portable pipeline representation.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-07T18:40:16Z", "url": "https://github.com/apache/beam/pull/11335", "merged": true, "mergeCommit": {"oid": "37bb50d971300d0dfb56e47736097fe8ab442643"}, "closed": true, "closedAt": "2020-04-20T17:35:26Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVXywigBqjMyMTExNDc1MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX-W1qAH2gAyNDAwNDM2NTA1OjBmNjA5ZTQzZGFiNThlNWVmZTFlZTk5NmRiZDJkZGQ1MTdjMjRmYzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe8337c412d1fc95f5860607e07236338cb49bc9", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/fe8337c412d1fc95f5860607e07236338cb49bc9", "committedDate": "2020-04-07T18:39:39Z", "message": "[BEAM-9692]: Make CombineValues portable\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}, "afterCommit": {"oid": "b6a298a8351e79835538be5ec1ad821fb91bcb56", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/b6a298a8351e79835538be5ec1ad821fb91bcb56", "committedDate": "2020-04-07T18:41:25Z", "message": "[BEAM-9692]: Make CombineValues portable\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6a298a8351e79835538be5ec1ad821fb91bcb56", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/b6a298a8351e79835538be5ec1ad821fb91bcb56", "committedDate": "2020-04-07T18:41:25Z", "message": "[BEAM-9692]: Make CombineValues portable\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}, "afterCommit": {"oid": "40d4c47045bc67ea6a4034fc5e09bbbdd500a5e5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/40d4c47045bc67ea6a4034fc5e09bbbdd500a5e5", "committedDate": "2020-04-10T21:15:04Z", "message": "[BEAM-9692]: Move the CombineValues to a PTransformOverride\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/3d485f90f095eb4061300eadea5f2c77941cd069", "committedDate": "2020-04-13T18:08:56Z", "message": "[BEAM-9692]: Move the CombineValues to a PTransformOverride\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40d4c47045bc67ea6a4034fc5e09bbbdd500a5e5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/40d4c47045bc67ea6a4034fc5e09bbbdd500a5e5", "committedDate": "2020-04-10T21:15:04Z", "message": "[BEAM-9692]: Move the CombineValues to a PTransformOverride\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}, "afterCommit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/3d485f90f095eb4061300eadea5f2c77941cd069", "committedDate": "2020-04-13T18:08:56Z", "message": "[BEAM-9692]: Move the CombineValues to a PTransformOverride\n\nChange-Id: If1835e4d14320149b3e18eea9c97a26d3d34ee48"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDgzNjEz", "url": "https://github.com/apache/beam/pull/11335#pullrequestreview-392483613", "createdAt": "2020-04-13T22:31:17Z", "commit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozMToxN1rOGE3kXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozNzozNFrOGE3stw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1NzkxOA==", "bodyText": "Seems this one should happen after too...", "url": "https://github.com/apache/beam/pull/11335#discussion_r407757918", "createdAt": "2020-04-13T22:31:17Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -110,22 +110,27 @@ class DataflowRunner(PipelineRunner):\n \n   # Imported here to avoid circular dependencies.\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n \n-  _PTRANSFORM_OVERRIDES = []  # type: List[PTransformOverride]\n+  # Thesse overrides should be applied before the proto representation of the\n+  # graph is created.\n+  _PTRANSFORM_OVERRIDES = [\n+      CombineValuesPTransformOverride()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODUwOA==", "bodyText": "Asserting that it's the first step seems brittle, maybe just assert that there is some step that has this kind?", "url": "https://github.com/apache/beam/pull/11335#discussion_r407758508", "createdAt": "2020-04-13T22:32:57Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -566,6 +566,19 @@ def test_get_default_gcp_region_ignores_error(\n     result = runner.get_default_gcp_region()\n     self.assertIsNone(result)\n \n+  def test_combine_values_translation(self):\n+    runner = DataflowRunner()\n+\n+    with beam.Pipeline(runner=runner,\n+                       options=PipelineOptions(self.default_properties)) as p:\n+      (  # pylint: disable=expression-not-assigned\n+          p\n+          | beam.Create([('a', [1, 2]), ('b', [3, 4])])\n+          | beam.CombineValues(lambda v, _: sum(v)))\n+\n+    job_dict = json.loads(str(runner.job))\n+    self.assertEqual(job_dict[u'steps'][1][u'kind'], u'CombineValues')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2MDA1NQ==", "bodyText": "It would be preferable to simply let try and find methods for composites as well, rather than using PTransformOverrides. This would likely help with the GBK one too.", "url": "https://github.com/apache/beam/pull/11335#discussion_r407760055", "createdAt": "2020-04-13T22:37:34Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "diffHunk": "@@ -111,3 +111,38 @@ def expand(self, pbegin):\n \n     return JrhRead().with_output_types(\n         ptransform.get_type_hints().simple_output_type('Read'))\n+\n+\n+class CombineValuesPTransformOverride(PTransformOverride):\n+  \"\"\"A ``PTransformOverride`` for ``CombineValues``.\n+\n+  The DataflowRunner expects that the CombineValues PTransform acts as a\n+  primitive. So this override replaces the CombineValues with a primitive.\n+  \"\"\"\n+  def matches(self, applied_ptransform):\n+    # Imported here to avoid circular dependencies.\n+    # pylint: disable=wrong-import-order, wrong-import-position\n+    from apache_beam import CombineValues\n+\n+    if isinstance(applied_ptransform.transform, CombineValues):\n+      self.transform = applied_ptransform.transform\n+      return True\n+    return False\n+\n+  def get_replacement_transform(self, ptransform):\n+    # Imported here to avoid circular dependencies.\n+    # pylint: disable=wrong-import-order, wrong-import-position\n+    from apache_beam import PTransform\n+    from apache_beam.pvalue import PCollection\n+\n+    # The DataflowRunner still needs access to the CombineValues members to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzI2MDEw", "url": "https://github.com/apache/beam/pull/11335#pullrequestreview-393326010", "createdAt": "2020-04-14T21:59:19Z", "commit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTo1OToyMFrOGFigGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjowMDowNVrOGFihbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2MTMzNw==", "bodyText": "I was thinking that run_xxx could also be called for composites. That might, however, be a bigger change, so we can go with this approach.", "url": "https://github.com/apache/beam/pull/11335#discussion_r408461337", "createdAt": "2020-04-14T21:59:20Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/ptransform_overrides.py", "diffHunk": "@@ -111,3 +111,38 @@ def expand(self, pbegin):\n \n     return JrhRead().with_output_types(\n         ptransform.get_type_hints().simple_output_type('Read'))\n+\n+\n+class CombineValuesPTransformOverride(PTransformOverride):\n+  \"\"\"A ``PTransformOverride`` for ``CombineValues``.\n+\n+  The DataflowRunner expects that the CombineValues PTransform acts as a\n+  primitive. So this override replaces the CombineValues with a primitive.\n+  \"\"\"\n+  def matches(self, applied_ptransform):\n+    # Imported here to avoid circular dependencies.\n+    # pylint: disable=wrong-import-order, wrong-import-position\n+    from apache_beam import CombineValues\n+\n+    if isinstance(applied_ptransform.transform, CombineValues):\n+      self.transform = applied_ptransform.transform\n+      return True\n+    return False\n+\n+  def get_replacement_transform(self, ptransform):\n+    # Imported here to avoid circular dependencies.\n+    # pylint: disable=wrong-import-order, wrong-import-position\n+    from apache_beam import PTransform\n+    from apache_beam.pvalue import PCollection\n+\n+    # The DataflowRunner still needs access to the CombineValues members to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2MDA1NQ=="}, "originalCommit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2MTY3OQ==", "bodyText": "I suppose this is fine; it's just preserving an inconsistency in Dataflow vs. everything else.", "url": "https://github.com/apache/beam/pull/11335#discussion_r408461679", "createdAt": "2020-04-14T22:00:05Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -110,22 +110,27 @@ class DataflowRunner(PipelineRunner):\n \n   # Imported here to avoid circular dependencies.\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n \n-  _PTRANSFORM_OVERRIDES = []  # type: List[PTransformOverride]\n+  # Thesse overrides should be applied before the proto representation of the\n+  # graph is created.\n+  _PTRANSFORM_OVERRIDES = [\n+      CombineValuesPTransformOverride()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1NzkxOA=="}, "originalCommit": {"oid": "3d485f90f095eb4061300eadea5f2c77941cd069"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f609e43dab58e5efe1ee996dbd2ddd517c24fc7", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/0f609e43dab58e5efe1ee996dbd2ddd517c24fc7", "committedDate": "2020-04-15T20:45:24Z", "message": "Change combinvalues test to assertIn\n\nChange-Id: Iae82f36b6044e4ad0523b8b3995ce9a713ae0541"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4476, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}