{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTc5Mzgx", "number": 12259, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1Njo1M1rOEPTWrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMTowMDowNFrOEPTarQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDgxMTk3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/doctests.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1Njo1M1rOGy8f_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMToxOFrOGzAzRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MzIxMg==", "bodyText": "Should we support regex matching here, or is that overkill?", "url": "https://github.com/apache/beam/pull/12259#discussion_r456073212", "createdAt": "2020-07-16T20:56:53Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/doctests.py", "diffHunk": "@@ -240,13 +256,31 @@ class BeamDataframeDoctestRunner(doctest.DocTestRunner):\n   \"\"\"A Doctest runner suitable for replacing the `pd` module with one backed\n   by beam.\n   \"\"\"\n-  def __init__(self, env, use_beam=True, **kwargs):\n+  def __init__(self, env, use_beam=True, skip=None, **kwargs):\n     self._test_env = env\n+\n+    def to_callable(cond):\n+      if cond == '*':", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b646a6e1f3a06a5d978515d385092e464ab3f6ce"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MzY4NA==", "bodyText": "I started out supporting regex, but realized it'd be painful to have to escape things like parentheses, brackets, dots, etc. in code snippets. (This is internal, so we could always add this later. Some ideas I've had would be to special case \"/regex-here/\" or pass through callables to allow re.compile(\"regex\").match.", "url": "https://github.com/apache/beam/pull/12259#discussion_r456143684", "createdAt": "2020-07-17T00:01:18Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/doctests.py", "diffHunk": "@@ -240,13 +256,31 @@ class BeamDataframeDoctestRunner(doctest.DocTestRunner):\n   \"\"\"A Doctest runner suitable for replacing the `pd` module with one backed\n   by beam.\n   \"\"\"\n-  def __init__(self, env, use_beam=True, **kwargs):\n+  def __init__(self, env, use_beam=True, skip=None, **kwargs):\n     self._test_env = env\n+\n+    def to_callable(cond):\n+      if cond == '*':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MzIxMg=="}, "originalCommit": {"oid": "b646a6e1f3a06a5d978515d385092e464ab3f6ce"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDgyMjIxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/doctests_test.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMTowMDowNFrOGy8mKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMTowMjozMVrOGzB1Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3NDc5NQ==", "bodyText": "Why should running one line successfully reset _seen_wont_implement?", "url": "https://github.com/apache/beam/pull/12259#discussion_r456074795", "createdAt": "2020-07-16T21:00:04Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/doctests_test.py", "diffHunk": "@@ -63,6 +63,20 @@\n ignored result\n '''\n \n+ERROR_RAISING_NAME_ERROR_TESTS = '''\n+>>> import apache_beam\n+>>> raise apache_beam.dataframe.frame_base.WontImplementError('anything')\n+ignored exception\n+>>> raise NameError\n+ignored exception\n+>>> undefined_name\n+ignored exception\n+>>> 2 + 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b646a6e1f3a06a5d978515d385092e464ab3f6ce"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0Mzg3Nw==", "bodyText": "I don't want to ignore the whole rest of the docstring, which often has other examples.", "url": "https://github.com/apache/beam/pull/12259#discussion_r456143877", "createdAt": "2020-07-17T00:01:58Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/doctests_test.py", "diffHunk": "@@ -63,6 +63,20 @@\n ignored result\n '''\n \n+ERROR_RAISING_NAME_ERROR_TESTS = '''\n+>>> import apache_beam\n+>>> raise apache_beam.dataframe.frame_base.WontImplementError('anything')\n+ignored exception\n+>>> raise NameError\n+ignored exception\n+>>> undefined_name\n+ignored exception\n+>>> 2 + 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3NDc5NQ=="}, "originalCommit": {"oid": "b646a6e1f3a06a5d978515d385092e464ab3f6ce"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDU1OA==", "bodyText": "That sounds fine. If we encounter an issue like this example simulates, I assume we can always manually add the test to the skip map.", "url": "https://github.com/apache/beam/pull/12259#discussion_r456160558", "createdAt": "2020-07-17T01:02:31Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/dataframe/doctests_test.py", "diffHunk": "@@ -63,6 +63,20 @@\n ignored result\n '''\n \n+ERROR_RAISING_NAME_ERROR_TESTS = '''\n+>>> import apache_beam\n+>>> raise apache_beam.dataframe.frame_base.WontImplementError('anything')\n+ignored exception\n+>>> raise NameError\n+ignored exception\n+>>> undefined_name\n+ignored exception\n+>>> 2 + 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3NDc5NQ=="}, "originalCommit": {"oid": "b646a6e1f3a06a5d978515d385092e464ab3f6ce"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1051, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}