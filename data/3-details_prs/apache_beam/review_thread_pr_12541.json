{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTcwMDA3", "number": 12541, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzoyNDo1MlrOEYpDVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDoyMzo0OVrOEYpfvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjczODc4OnYy", "diffSide": "RIGHT", "path": ".github/workflows/cancel.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzoyNDo1MlrOHBFpew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1OToyOVrOHBsb9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwMzE2Mw==", "bodyText": "Is there an equivalent for python or go tests somewhere?", "url": "https://github.com/apache/beam/pull/12541#discussion_r470903163", "createdAt": "2020-08-14T23:24:52Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/cancel.yml", "diffHunk": "@@ -32,3 +35,18 @@ jobs:\n         with:\n           workflow_id: ${{ env.WORKFLOW_ID }}\n           access_token: ${{ github.token }}\n+\n+  cancel_java_tests:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzODY3Ng==", "bodyText": "I have to add it for python tests suite as well.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471538676", "createdAt": "2020-08-17T14:59:29Z", "author": {"login": "TobKed"}, "path": ".github/workflows/cancel.yml", "diffHunk": "@@ -32,3 +35,18 @@ jobs:\n         with:\n           workflow_id: ${{ env.WORKFLOW_ID }}\n           access_token: ${{ github.token }}\n+\n+  cancel_java_tests:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwMzE2Mw=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mjc0MDk0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/cancel.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzoyNjoyMFrOHBFqnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNDowMFrOHBtcTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwMzQ1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  - name: Get build_wheels workflow id\n          \n          \n            \n                  - name: Get java_tests workflow id", "url": "https://github.com/apache/beam/pull/12541#discussion_r470903455", "createdAt": "2020-08-14T23:26:20Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/cancel.yml", "diffHunk": "@@ -32,3 +35,18 @@ jobs:\n         with:\n           workflow_id: ${{ env.WORKFLOW_ID }}\n           access_token: ${{ github.token }}\n+\n+  cancel_java_tests:\n+    name: 'Cancel Previous Runs of Java Tests'\n+    runs-on: ubuntu-latest\n+    timeout-minutes: 3\n+    steps:\n+      - name: Get build_wheels workflow id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NTE1MQ==", "bodyText": "Thanks. Suggestion applied.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471555151", "createdAt": "2020-08-17T15:24:00Z", "author": {"login": "TobKed"}, "path": ".github/workflows/cancel.yml", "diffHunk": "@@ -32,3 +35,18 @@ jobs:\n         with:\n           workflow_id: ${{ env.WORKFLOW_ID }}\n           access_token: ${{ github.token }}\n+\n+  cancel_java_tests:\n+    name: 'Cancel Previous Runs of Java Tests'\n+    runs-on: ubuntu-latest\n+    timeout-minutes: 3\n+    steps:\n+      - name: Get build_wheels workflow id", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwMzQ1NQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mjc2MDUwOnYy", "diffSide": "RIGHT", "path": ".github/workflows/java_tests.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzo0MjowOFrOHBF11g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNDowN1rOHBtckw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNjMyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if: ${{ always() }}\n          \n          \n            \n                    if: always()", "url": "https://github.com/apache/beam/pull/12541#discussion_r470906326", "createdAt": "2020-08-14T23:42:08Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NTIxOQ==", "bodyText": "Thanks. Suggestion applied.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471555219", "createdAt": "2020-08-17T15:24:07Z", "author": {"login": "TobKed"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNjMyNg=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mjc2NDAyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/java_tests.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzo0NDozNFrOHBF3og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1ODozN1rOHBsZmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNjc4Ng==", "bodyText": "If if: always() is always true, is this condition really needed? (here and elsewhere in this workflow)", "url": "https://github.com/apache/beam/pull/12541#discussion_r470906786", "createdAt": "2020-08-14T23:44:34Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzMjY2OA==", "bodyText": "This job status check function provides a convenient way to run step even if previous one fails. Without using it failing test will prevent log upload and execution of the rest of tests.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471532668", "createdAt": "2020-08-17T14:50:38Z", "author": {"login": "TobKed"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNjc4Ng=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzODA3Mw==", "bodyText": "Yeah. This is the right way of doing it. By default all steps in the action have \"if: success()\" implied. Adding if: always() is the standard way if you want to execute step regardless of the status of previous ones. It is supposed to be executed even if you cancel the flow https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#always", "url": "https://github.com/apache/beam/pull/12541#discussion_r471538073", "createdAt": "2020-08-17T14:58:37Z", "author": {"login": "potiuk"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNjc4Ng=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mjc3ODE1OnYy", "diffSide": "RIGHT", "path": ".github/workflows/java_tests.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzo1NDoyNVrOHBF_PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyMzo0MlrOHBtblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwODczMw==", "bodyText": "Is there a risk that concurrently running workflows could race to write this artifact since it doesn't contain any globally unique information (e.g. date)? Or are artifact names unique to each individual workflow run?", "url": "https://github.com/apache/beam/pull/12541#discussion_r470908733", "createdAt": "2020-08-14T23:54:25Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MjA1MA==", "bodyText": "Each run has its own set of artifacts. GithubActions for artifact upload/dowload work for the \"current run\" only. You can download artifacts for other runs via APIS, but I believe you can't upload them from a different run than current. It even works in the way that you actually cannot see the artifacts via the API before the run is finished unless you are with the current run. This allows to share artifacts between different jobs in the same run, but you cannot use the artifacts between the runs. That effectively makes the artifacts immutable after the run completes  (been there done that)", "url": "https://github.com/apache/beam/pull/12541#discussion_r471542050", "createdAt": "2020-08-17T15:04:31Z", "author": {"login": "potiuk"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwODczMw=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NDk2NA==", "bodyText": "Each workflow run have artifacts connected to it. There is no risk of race condition between workflows artifacts.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471554964", "createdAt": "2020-08-17T15:23:42Z", "author": {"login": "TobKed"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwODczMw=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mjc5MjY3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/java_tests.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDowNjoyOVrOHBGHkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo1Mzo0MFrOHB27ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMDg2NQ==", "bodyText": "Why is a shell used in some jobs but not others (specified here as a config and used in the run config below)? Just curious if it is needed for some reason here specifically since it is an integration test.", "url": "https://github.com/apache/beam/pull/12541#discussion_r470910865", "createdAt": "2020-08-15T00:06:29Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}\n+        run: ./gradlew :sdks:java:harness:test\n+      - name: Upload test logs for :sdks:java:harness:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-harness-test-${{ matrix.os }}\n+          path: sdks/java/harness/build/reports/tests/test/**\n+      # :runners:core-java:test\n+      - name: Run :runners:core-java:test\n+        if: ${{ always() }}\n+        run: ./gradlew :runners:core-java:test\n+      - name: Upload test logs for :runners:core-java:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-runners-core-java-test-${{ matrix.os }}\n+          path: runners/core-java/build/reports/tests/test/**\n+\n+  java_wordcount_direct_runner:\n+    name: 'Java Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Run WordCount Unix\n+        shell: bash\n+        run: |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcxMDU2NA==", "bodyText": "The reason behind it is to override the default powershell on windows and ensure that gradle will use bash as well. This way there is no need for separate steps for windows and unix systems.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471710564", "createdAt": "2020-08-17T18:53:40Z", "author": {"login": "TobKed"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}\n+        run: ./gradlew :sdks:java:harness:test\n+      - name: Upload test logs for :sdks:java:harness:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-harness-test-${{ matrix.os }}\n+          path: sdks/java/harness/build/reports/tests/test/**\n+      # :runners:core-java:test\n+      - name: Run :runners:core-java:test\n+        if: ${{ always() }}\n+        run: ./gradlew :runners:core-java:test\n+      - name: Upload test logs for :runners:core-java:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-runners-core-java-test-${{ matrix.os }}\n+          path: runners/core-java/build/reports/tests/test/**\n+\n+  java_wordcount_direct_runner:\n+    name: 'Java Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Run WordCount Unix\n+        shell: bash\n+        run: |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMDg2NQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjgwMTE0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/java_tests.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDoxNDoxMlrOHBGMQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzo1ODo1M1rOHB-r2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMjA2NQ==", "bodyText": "Why upload the whole directory here instead of a globstar? Just curious.", "url": "https://github.com/apache/beam/pull/12541#discussion_r470912065", "createdAt": "2020-08-15T00:14:12Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}\n+        run: ./gradlew :sdks:java:harness:test\n+      - name: Upload test logs for :sdks:java:harness:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-harness-test-${{ matrix.os }}\n+          path: sdks/java/harness/build/reports/tests/test/**\n+      # :runners:core-java:test\n+      - name: Run :runners:core-java:test\n+        if: ${{ always() }}\n+        run: ./gradlew :runners:core-java:test\n+      - name: Upload test logs for :runners:core-java:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-runners-core-java-test-${{ matrix.os }}\n+          path: runners/core-java/build/reports/tests/test/**\n+\n+  java_wordcount_direct_runner:\n+    name: 'Java Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Run WordCount Unix\n+        shell: bash\n+        run: |\n+          bash ./gradlew -p examples/ \\\n+             integrationTest -DintegrationTestPipelineOptions='[\n+          \t \"--runner=DirectRunner\", \"--tempRoot=./tmp\" ]' \\\n+             --tests org.apache.beam.examples.WordCountIT \\\n+             -DintegrationTestRunner=direct\n+      - name: Upload test logs\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_wordcount_direct_runner-${{matrix.os}}\n+          path: examples/java/build/reports/tests/integrationTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUyMjU0OQ==", "bodyText": "I am not sure did I understand. Is question about why there is examples/java/build/reports/tests/integrationTest instead of examples/java/build/reports/tests/integrationTest/**?\nI it was a question, I will simplify paths for java_unit_tests logs paths to avoid unnecessary globstar.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471522549", "createdAt": "2020-08-17T14:35:34Z", "author": {"login": "TobKed"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}\n+        run: ./gradlew :sdks:java:harness:test\n+      - name: Upload test logs for :sdks:java:harness:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-harness-test-${{ matrix.os }}\n+          path: sdks/java/harness/build/reports/tests/test/**\n+      # :runners:core-java:test\n+      - name: Run :runners:core-java:test\n+        if: ${{ always() }}\n+        run: ./gradlew :runners:core-java:test\n+      - name: Upload test logs for :runners:core-java:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-runners-core-java-test-${{ matrix.os }}\n+          path: runners/core-java/build/reports/tests/test/**\n+\n+  java_wordcount_direct_runner:\n+    name: 'Java Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Run WordCount Unix\n+        shell: bash\n+        run: |\n+          bash ./gradlew -p examples/ \\\n+             integrationTest -DintegrationTestPipelineOptions='[\n+          \t \"--runner=DirectRunner\", \"--tempRoot=./tmp\" ]' \\\n+             --tests org.apache.beam.examples.WordCountIT \\\n+             -DintegrationTestRunner=direct\n+      - name: Upload test logs\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_wordcount_direct_runner-${{matrix.os}}\n+          path: examples/java/build/reports/tests/integrationTest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMjA2NQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzNzY1Ng==", "bodyText": "Yes, this was the question. If there is no reason to differentiate, a consistent path is preferred. Thanks!", "url": "https://github.com/apache/beam/pull/12541#discussion_r471837656", "createdAt": "2020-08-17T23:58:53Z", "author": {"login": "tysonjh"}, "path": ".github/workflows/java_tests.yml", "diffHunk": "@@ -0,0 +1,160 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To learn more about GitHub Actions in Apache Beam check the CI.md\n+\n+name: Java Tests\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      runDataflow:\n+        description: 'Type \"true\" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'\n+        default: false\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/java/**', 'model/**', 'runners/**', 'examples/java/**', 'examples/kotlin/**', 'release/**']\n+\n+\n+jobs:\n+\n+  check_gcp_variables:\n+    timeout-minutes: 5\n+    name: \"Check GCP variables set\"\n+    runs-on: ubuntu-latest\n+    outputs:\n+      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: \"Check are GCP variables set\"\n+        run: \"./scripts/ci/ci_check_are_gcp_variables_set.sh\"\n+        id: check_gcp_variables\n+        env:\n+          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n+          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}\n+          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}\n+          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}\n+\n+  java_unit_tests:\n+    name: 'Java Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      # :sdks:java:core:test\n+      - name: Run :sdks:java:core:test\n+        run: ./gradlew :sdks:java:core:test\n+      - name: Upload test logs for :sdks:java:core:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-core-test-${{ matrix.os }}\n+          path: sdks/java/core/build/reports/tests/test/**\n+      # :sdks:java:harness:test\n+      - name: Run :sdks:java:harness:test\n+        if: ${{ always() }}\n+        run: ./gradlew :sdks:java:harness:test\n+      - name: Upload test logs for :sdks:java:harness:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-sdks-java-harness-test-${{ matrix.os }}\n+          path: sdks/java/harness/build/reports/tests/test/**\n+      # :runners:core-java:test\n+      - name: Run :runners:core-java:test\n+        if: ${{ always() }}\n+        run: ./gradlew :runners:core-java:test\n+      - name: Upload test logs for :runners:core-java:test\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_unit_tests-runners-core-java-test-${{ matrix.os }}\n+          path: runners/core-java/build/reports/tests/test/**\n+\n+  java_wordcount_direct_runner:\n+    name: 'Java Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Run WordCount Unix\n+        shell: bash\n+        run: |\n+          bash ./gradlew -p examples/ \\\n+             integrationTest -DintegrationTestPipelineOptions='[\n+          \t \"--runner=DirectRunner\", \"--tempRoot=./tmp\" ]' \\\n+             --tests org.apache.beam.examples.WordCountIT \\\n+             -DintegrationTestRunner=direct\n+      - name: Upload test logs\n+        uses: actions/upload-artifact@v2\n+        if: always()\n+        with:\n+          name: java_wordcount_direct_runner-${{matrix.os}}\n+          path: examples/java/build/reports/tests/integrationTest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMjA2NQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjgwMzE2OnYy", "diffSide": "RIGHT", "path": "CI.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDoxNTo0NVrOHBGNSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDoxNjo1OFrOHBqrCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMjMyOQ==", "bodyText": "A user can set these secrets themselves though to test on their own fork?", "url": "https://github.com/apache/beam/pull/12541#discussion_r470912329", "createdAt": "2020-08-15T00:15:45Z", "author": {"login": "tysonjh"}, "path": "CI.md", "diffHunk": "@@ -75,8 +75,27 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ5ODYwOA==", "bodyText": "Yes, if variables are set workflow can be fully tested on the fork. It will be much more easier thanks to manual trigger by workflow_dispatch event which provide button to do this. Sentence Currently these jobs are limited to Apache repository only is not valid since GCP variables check was introduced. I missed that. I will create separate PR for this fix. Thanks for pointing this out.", "url": "https://github.com/apache/beam/pull/12541#discussion_r471498608", "createdAt": "2020-08-17T13:59:53Z", "author": {"login": "TobKed"}, "path": "CI.md", "diffHunk": "@@ -75,8 +75,27 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMjMyOQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwOTc2OQ==", "bodyText": "#12598", "url": "https://github.com/apache/beam/pull/12541#discussion_r471509769", "createdAt": "2020-08-17T14:16:58Z", "author": {"login": "TobKed"}, "path": "CI.md", "diffHunk": "@@ -75,8 +75,27 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMjMyOQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjgxMTUxOnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDoyMzo0OVrOHBGRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMToyNjowMVrOHCPDIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMzQ2OQ==", "bodyText": "Can you create a Jira issue per failing test suite as subtasks of BEAM-10683 please? Having a list of failing test suites will be easier for tracking and hopefully encourage people to chip away at it instead of one large issue for them all.", "url": "https://github.com/apache/beam/pull/12541#discussion_r470913469", "createdAt": "2020-08-15T00:23:49Z", "author": {"login": "tysonjh"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java", "diffHunk": "@@ -28,6 +31,12 @@\n @RunWith(JUnit4.class)\n public class DefaultFilenamePolicyTest {\n \n+  @Before\n+  public void setup() {\n+    // TODO: Fix failing on windows, https://issues.apache.org/jira/browse/BEAM-10683.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEwNTc2MQ==", "bodyText": "Sure. I created 26 subtasks. Every failing test or testing class have link to relevant JIRA issue now.", "url": "https://github.com/apache/beam/pull/12541#discussion_r472105761", "createdAt": "2020-08-18T11:26:01Z", "author": {"login": "TobKed"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java", "diffHunk": "@@ -28,6 +31,12 @@\n @RunWith(JUnit4.class)\n public class DefaultFilenamePolicyTest {\n \n+  @Before\n+  public void setup() {\n+    // TODO: Fix failing on windows, https://issues.apache.org/jira/browse/BEAM-10683.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMzQ2OQ=="}, "originalCommit": {"oid": "cc3e39a5740ef2670ccad1edc87c602be758bf25"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 646, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}