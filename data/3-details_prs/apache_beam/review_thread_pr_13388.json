{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTAzMzU5", "number": 13388, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0NTo0OVrOE8I14A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjoyNToxNVrOE80XKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk0ODgwOnYy", "diffSide": "RIGHT", "path": "sdks/go/test/load/group_by_key/group_by_key.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0NTo0OVrOH4FvqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1Njo0NVrOH4GKeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3NjQyNQ==", "bodyText": "Please provide a description what this flag does. For example:\nA number of GroupByKey operations to perform in parallel.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528576425", "createdAt": "2020-11-23T09:45:49Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source. Besides of the standard\n+// input options there are additional options:\n+// * fanout (optional) - number of GBK operations to run in parallel\n+// * iterations (optional) - number of reiterations over per-key-grouped\n+// values to perform\n+// input_options - options for Synthetic Sources.\n+\n+// Example test run:\n+\n+// go run sdks/go/test/load/group_by_key_test/group_by_key.go  \\\n+// --fanout=1\n+// --iterations=1\n+// --input_options='{\n+// \\\"num_records\\\": 300,\n+// \\\"key_size\\\": 5,\n+// \\\"value_size\\\": 15,\n+// \\\"num_hot_keys\\\": 30,\n+// \\\"hot_key_fraction\\\": 0.5\n+// }'\"\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"Fanout\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MzI4OQ==", "bodyText": "There's no need to add (optional), because, by default, every flag in Go is optional", "url": "https://github.com/apache/beam/pull/13388#discussion_r528583289", "createdAt": "2020-11-23T09:56:45Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source. Besides of the standard\n+// input options there are additional options:\n+// * fanout (optional) - number of GBK operations to run in parallel\n+// * iterations (optional) - number of reiterations over per-key-grouped\n+// values to perform\n+// input_options - options for Synthetic Sources.\n+\n+// Example test run:\n+\n+// go run sdks/go/test/load/group_by_key_test/group_by_key.go  \\\n+// --fanout=1\n+// --iterations=1\n+// --input_options='{\n+// \\\"num_records\\\": 300,\n+// \\\"key_size\\\": 5,\n+// \\\"value_size\\\": 15,\n+// \\\"num_hot_keys\\\": 30,\n+// \\\"hot_key_fraction\\\": 0.5\n+// }'\"\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"Fanout\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3NjQyNQ=="}, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk2MjgwOnYy", "diffSide": "RIGHT", "path": "sdks/go/test/load/group_by_key/group_by_key.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0OTozMVrOH4F4Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0OTozMVrOH4F4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3ODYxMA==", "bodyText": "Could you replace uint8 with byte? Those are the same types, but the ParDo test uses byte, and we'd like to keep it consistent.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528578610", "createdAt": "2020-11-23T09:49:31Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source. Besides of the standard\n+// input options there are additional options:\n+// * fanout (optional) - number of GBK operations to run in parallel\n+// * iterations (optional) - number of reiterations over per-key-grouped\n+// values to perform\n+// input_options - options for Synthetic Sources.\n+\n+// Example test run:\n+\n+// go run sdks/go/test/load/group_by_key_test/group_by_key.go  \\\n+// --fanout=1\n+// --iterations=1\n+// --input_options='{\n+// \\\"num_records\\\": 300,\n+// \\\"key_size\\\": 5,\n+// \\\"value_size\\\": 15,\n+// \\\"num_hot_keys\\\": 30,\n+// \\\"hot_key_fraction\\\": 0.5\n+// }'\"\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"Fanout\")\n+\titerations = flag.Int(\n+\t\t\"iterations\",\n+\t\t1,\n+\t\t\"A number of subsequent ParDo transforms to be performed\")\n+\tsyntheticConfig = flag.String(\n+\t\t\"input_options\",\n+\t\t\"\",\n+\t\t\"A JSON object that describes the configuration for synthetic source\")\n+)\n+\n+func parseSyntheticConfig() synthetic.SourceConfig {\n+\tif *syntheticConfig == \"\" {\n+\t\tpanic(\"--input_options not provided\")\n+\t} else {\n+\t\tencoded := []byte(*syntheticConfig)\n+\t\treturn synthetic.DefaultSourceConfig().BuildFromJSON(encoded)\n+\t}\n+}\n+\n+func main() {\n+\tflag.Parse()\n+\tbeam.Init()\n+\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\tsrc := synthetic.SourceSingle(s, parseSyntheticConfig())\n+\tpcoll := beam.ParDo(s, &load.RuntimeMonitor{}, src)\n+\tfor i := 0; i < *fanout; i++ {\n+\t\tpcoll = beam.GroupByKey(s, src)\n+\t\tbeam.ParDo(s, func(key []uint8, values func(*[]uint8) bool) ([]uint8, []uint8) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk3MzM5OnYy", "diffSide": "RIGHT", "path": "sdks/go/test/load/group_by_key/group_by_key.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1MTo1OFrOH4F-dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1MTo1OFrOH4F-dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MDIxNQ==", "bodyText": "This is not true. Please change the description to:\nA number of reiterations over per-key-grouped values to perform.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528580215", "createdAt": "2020-11-23T09:51:58Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source. Besides of the standard\n+// input options there are additional options:\n+// * fanout (optional) - number of GBK operations to run in parallel\n+// * iterations (optional) - number of reiterations over per-key-grouped\n+// values to perform\n+// input_options - options for Synthetic Sources.\n+\n+// Example test run:\n+\n+// go run sdks/go/test/load/group_by_key_test/group_by_key.go  \\\n+// --fanout=1\n+// --iterations=1\n+// --input_options='{\n+// \\\"num_records\\\": 300,\n+// \\\"key_size\\\": 5,\n+// \\\"value_size\\\": 15,\n+// \\\"num_hot_keys\\\": 30,\n+// \\\"hot_key_fraction\\\": 0.5\n+// }'\"\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"Fanout\")\n+\titerations = flag.Int(\n+\t\t\"iterations\",\n+\t\t1,\n+\t\t\"A number of subsequent ParDo transforms to be performed\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk5NzEzOnYy", "diffSide": "RIGHT", "path": "sdks/go/test/load/group_by_key/group_by_key.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1NzozM1rOH4GMrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1NzozM1rOH4GMrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4Mzg1NQ==", "bodyText": "I think we don't need to write out every possible flag here. If someone invokes the test with --help flag or makes a mistake, they will see all available flags alongside their descriptions, which are defined below (starting at line 49)", "url": "https://github.com/apache/beam/pull/13388#discussion_r528583855", "createdAt": "2020-11-23T09:57:33Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source. Besides of the standard\n+// input options there are additional options:\n+// * fanout (optional) - number of GBK operations to run in parallel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTA1NjI0OnYy", "diffSide": "RIGHT", "path": "sdks/go/test/load/group_by_key/group_by_key.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoxMjozOVrOH4Gw2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoxMjozOVrOH4Gw2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU5MzExNQ==", "bodyText": "It's good to copy-and-paste such examples to check if everything's alright. It seems something's wrong here:\npanic: Could not unmarshal SourceConfig: invalid character '\\\\' looking for beginning of object key string\nTo be honest, I have mixed feelings about such examples. They can be useful in shell scripts, where there are plenty of positional arguments. But in this case, all arguments are named, and only one of them is required. What's more, those examples can easily become outdated, because it's easy to miss them while editing the file. That happened once to Python load tests.\nIf you decide to keep it, I guess you will have to remove backslashes to make it work.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528593115", "createdAt": "2020-11-23T10:12:39Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source. Besides of the standard\n+// input options there are additional options:\n+// * fanout (optional) - number of GBK operations to run in parallel\n+// * iterations (optional) - number of reiterations over per-key-grouped\n+// values to perform\n+// input_options - options for Synthetic Sources.\n+\n+// Example test run:\n+\n+// go run sdks/go/test/load/group_by_key_test/group_by_key.go  \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTA4MzE5OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoxOTo0NlrOH4HBTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoxOTo0NlrOH4HBTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU5NzMyNA==", "bodyText": "Some of your tests need the parallelism of 16, but your Flink deployment is going to have only 5 task managers. You need to group your tests by parallelism, execute the first group, then rescale the cluster and execute the second group. Please take a look at .test-infra/jenkins/job_LoadTests_Combine_Flink_Python.groovy where such a pattern is being used.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528597324", "createdAt": "2020-11-23T10:19:46Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Load test: 2GB of 10B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 200000000,\n+                                     \"key_size\": 1,\n+                                     \"value_size\": 9\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        iterations          : 1,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: 2GB of 100B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 20000000,\n+                                     \"key_size\": 10,\n+                                     \"value_size\": 90\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        iterations          : 1,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: 2GB of 100kB records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        iterations          : 1,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 20000,\n+                                     \"key_size\": 10000,\n+                                     \"value_size\": 90000\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: fanout 4 times with 2GB 10-byte records total',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        iterations          : 1,\n+        fanout              : 4,\n+        parallelism         : 16,\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 5000000,\n+                                     \"key_size\": 10,\n+                                     \"value_size\": 90\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: fanout 8 times with 2GB 10-byte records total',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        iterations          : 1,\n+        fanout              : 8,\n+        parallelism         : 16,\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 5000000,\n+                                     \"key_size\": 10,\n+                                     \"value_size\": 90\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: reiterate 4 times 10kB values',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        iterations          : 4,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 5000000,\n+                                     \"key_size\": 10,\n+                                     \"value_size\": 90,\n+                                     \"num_hot_keys\": 200,\n+                                     \"hot_key_fraction\": 1\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: reiterate 4 times 2MB values',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        iterations          : 4,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 20000000,\n+                                     \"key_size\": 10,\n+                                     \"value_size\": 90,\n+                                     \"num_hot_keys\": 10,\n+                                     \"hot_key_fraction\": 1\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+}\n+\n+def loadTestJob = { scope, triggeringContext, mode ->\n+  def numberOfWorkers = 5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTEwNjc3OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoyNTo0OVrOH4HPbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoyNTo0OVrOH4HPbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwMDk0MQ==", "bodyText": "Please add influx_namespace: 'flink' for every scenario.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528600941", "createdAt": "2020-11-23T10:25:49Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Load test: 2GB of 10B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTExNDQyOnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoyNzo1OVrOH4HUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoyNzo1OVrOH4HUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwMjE1Mg==", "bodyText": "Load test: 2GB of 10B records -> GroupByKey Go Load test: 2GB of 10B records", "url": "https://github.com/apache/beam/pull/13388#discussion_r528602152", "createdAt": "2020-11-23T10:27:59Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Load test: 2GB of 10B records',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTExOTc2OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoyOToyMVrOH4HXXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDoyOToyMVrOH4HXXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwMjk3Mw==", "bodyText": "Please remove one extra space so that colons are in line. The same applies to other scenarios as well.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528602973", "createdAt": "2020-11-23T10:29:21Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Load test: 2GB of 10B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 200000000,\n+                                     \"key_size\": 1,\n+                                     \"value_size\": 9\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        iterations          : 1,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Load test: 2GB of 100B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement   : 'go_batch_gbk_1',\n+        input_options        : \"\"\"\n+                                   {\n+                                     \"num_records\": 20000000,\n+                                     \"key_size\": 10,\n+                                     \"value_size\": 90\n+                                   }\n+                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        iterations          : 1,\n+        fanout              : 1,\n+        parallelism         : 5,\n+        endpoint             : 'localhost:8099',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04521b898db470f6be81de43dda379c5053a6681"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTY1NTA3OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo1ODozOFrOH4MXFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo1ODozOFrOH4MXFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4NDgyMw==", "bodyText": "beam_LoadTests_Python_Combine_Flink_ -> beam_LoadTests_Go_GBK_Flink_", "url": "https://github.com/apache/beam/pull/13388#discussion_r528684823", "createdAt": "2020-11-23T12:58:38Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -30,178 +30,196 @@ String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n def batchScenarios = {\n   [\n     [\n-      title          : 'Load test: 2GB of 10B records',\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n-        input_options        : \"\"\"\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        input_options      : \"\"\"\n                                    {\n                                      \"num_records\": 200000000,\n                                      \"key_size\": 1,\n                                      \"value_size\": 9\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        iterations          : 1,\n-        fanout              : 1,\n-        parallelism         : 5,\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                           \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        iterations         : 1,\n+        fanout             : 1,\n+        parallelism        : 5,\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n     [\n-      title          : 'Load test: 2GB of 100B records',\n+      title          : 'Group By Key Go Load test: 2GB of 100B records',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n-        input_options        : \"\"\"\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        input_options      : \"\"\"\n                                    {\n                                      \"num_records\": 20000000,\n                                      \"key_size\": 10,\n                                      \"value_size\": 90\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        iterations          : 1,\n-        fanout              : 1,\n-        parallelism         : 5,\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                           \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        iterations         : 1,\n+        fanout             : 1,\n+        parallelism        : 5,\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n     [\n-      title          : 'Load test: 2GB of 100kB records',\n+      title          : 'Group By Key Go Load test: 2GB of 100kB records',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n+        job_name            : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement  : 'go_batch_gbk_1',\n         iterations          : 1,\n         fanout              : 1,\n         parallelism         : 5,\n-        input_options        : \"\"\"\n+        input_options       : \"\"\"\n                                    {\n                                      \"num_records\": 20000,\n                                      \"key_size\": 10000,\n                                      \"value_size\": 90000\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                            \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint            : 'localhost:8099',\n+        environment_type    : 'DOCKER',\n+        environment_config  : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n     [\n-      title          : 'Load test: fanout 4 times with 2GB 10-byte records total',\n+      title          : 'Group By Key Go Load test: fanout 4 times with 2GB 10-byte records total',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n-        iterations          : 1,\n-        fanout              : 4,\n-        parallelism         : 16,\n-        input_options        : \"\"\"\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        iterations         : 1,\n+        fanout             : 4,\n+        parallelism        : 16,\n+        input_options      : \"\"\"\n                                    {\n                                      \"num_records\": 5000000,\n                                      \"key_size\": 10,\n                                      \"value_size\": 90\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                           \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n     [\n-      title          : 'Load test: fanout 8 times with 2GB 10-byte records total',\n+      title          : 'Group By Key Go Load test: fanout 8 times with 2GB 10-byte records total',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n-        iterations          : 1,\n-        fanout              : 8,\n-        parallelism         : 16,\n-        input_options        : \"\"\"\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        iterations         : 1,\n+        fanout             : 8,\n+        parallelism        : 16,\n+        input_options      : \"\"\"\n                                    {\n                                      \"num_records\": 5000000,\n                                      \"key_size\": 10,\n                                      \"value_size\": 90\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                           \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n     [\n-      title          : 'Load test: reiterate 4 times 10kB values',\n+      title          : 'Group By Key Go Load test: reiterate 4 times 10kB values',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n-        iterations          : 4,\n-        fanout              : 1,\n-        parallelism         : 5,\n-        input_options        : \"\"\"\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        iterations         : 4,\n+        fanout             : 1,\n+        parallelism        : 5,\n+        input_options      : \"\"\"\n                                    {\n                                      \"num_records\": 5000000,\n                                      \"key_size\": 10,\n                                      \"value_size\": 90,\n                                      \"num_hot_keys\": 200,\n                                      \"hot_key_fraction\": 1\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                           \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n     [\n-      title          : 'Load test: reiterate 4 times 2MB values',\n+      title          : 'Group By Key Go Load test: reiterate 4 times 2MB values',\n       test           : 'group_by_key',\n       runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n       pipelineOptions: [\n-        job_name             : \"load-tests-go-flink-batch-gbk-1-${now}\",\n-        influx_measurement   : 'go_batch_gbk_1',\n-        iterations          : 4,\n-        fanout              : 1,\n-        parallelism         : 5,\n-        input_options        : \"\"\"\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        iterations         : 4,\n+        fanout             : 1,\n+        parallelism        : 5,\n+        input_options      : \"\"\"\n                                    {\n                                      \"num_records\": 20000000,\n                                      \"key_size\": 10,\n                                      \"value_size\": 90,\n                                      \"num_hot_keys\": 10,\n                                      \"hot_key_fraction\": 1\n                                    }\n-                               \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n-        endpoint             : 'localhost:8099',\n-        environment_type     : 'DOCKER',\n-        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+                           \"\"\".trim().replaceAll(\"\\\\s\", \"\"),\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n       ]\n     ],\n   ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n }\n \n def loadTestJob = { scope, triggeringContext, mode ->\n-  def numberOfWorkers = 5\n+  Map<Integer, List> testScenariosByParallelism = batchScenarios().groupBy { test ->\n+    test.pipelineOptions.parallelism\n+  }\n+  Integer initialParallelism = testScenariosByParallelism.keySet().iterator().next()\n+  List initialScenarios = testScenariosByParallelism.remove(initialParallelism)\n \n-  Flink flink = new Flink(scope, \"beam_LoadTests_Go_GBK_Flink_${mode.capitalize()}\")\n+  def flink = new Flink(scope, \"beam_LoadTests_Python_Combine_Flink_${mode.capitalize()}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c391ebaa1ba21be5bc831a9ad219edeb9614e2e0"}, "originalPosition": 254}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjU5NTYwOnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoyNDo1NlrOH4VXbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoyNDo1NlrOH4VXbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgzMjM2Ng==", "bodyText": "influx_namespace should be a part of pipelineOptions. Please put it under the influx_measurement.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528832366", "createdAt": "2020-11-23T16:24:56Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd929384eb728a7df4c34bea865313eaf8b3c54e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjYxMTY1OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoyODoyMlrOH4VhaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoyODoyMlrOH4VhaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgzNDkyMA==", "bodyText": "It seems you forgot about changing the \"1\" to \"2\" and so on. It doesn't really matter in case of job_name, but it does matter in case of influx_measurement: all results would be put into the first chart, leaving other charts empty.", "url": "https://github.com/apache/beam/pull/13388#discussion_r528834920", "createdAt": "2020-11-23T16:28:22Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_GBK_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n+      pipelineOptions: [\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",\n+        influx_measurement : 'go_batch_gbk_1',\n+        input_options      : '\\'{' +\n+        '\"num_records\": 200000000,' +\n+        '\"key_size\": 1,' +\n+        '\"value_size\": 9}\\'',\n+        iterations         : 1,\n+        fanout             : 1,\n+        parallelism        : 5,\n+        endpoint           : 'localhost:8099',\n+        environment_type   : 'DOCKER',\n+        environment_config : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 100B records',\n+      test           : 'group_by_key',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      influx_namespace: 'flink',\n+      pipelineOptions: [\n+        job_name           : \"load-tests-go-flink-batch-gbk-1-${now}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd929384eb728a7df4c34bea865313eaf8b3c54e"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjA3OTE0OnYy", "diffSide": "RIGHT", "path": "sdks/go/test/load/group_by_key/group_by_key.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjoyNToxNVrOH5K1DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDo0MDoxOVrOH5tTqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcwODMwMQ==", "bodyText": "You're missing calls to ParDo with RuntimeMonitor here, at the end of the for loop. Those are important, because we want to measure the runtime of a whole pipeline.", "url": "https://github.com/apache/beam/pull/13388#discussion_r529708301", "createdAt": "2020-11-24T16:25:15Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,88 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"A number of GroupByKey operations to perform in parallel.\")\n+\titerations = flag.Int(\n+\t\t\"iterations\",\n+\t\t1,\n+\t\t\"A number of reiterations over per-key-grouped values to perform.\")\n+\tsyntheticConfig = flag.String(\n+\t\t\"input_options\",\n+\t\t\"\",\n+\t\t\"A JSON object that describes the configuration for synthetic source.\")\n+)\n+\n+func parseSyntheticConfig() synthetic.SourceConfig {\n+\tif *syntheticConfig == \"\" {\n+\t\tpanic(\"--input_options not provided\")\n+\t} else {\n+\t\tencoded := []byte(*syntheticConfig)\n+\t\treturn synthetic.DefaultSourceConfig().BuildFromJSON(encoded)\n+\t}\n+}\n+\n+func main() {\n+\tflag.Parse()\n+\tbeam.Init()\n+\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\tsrc := synthetic.SourceSingle(s, parseSyntheticConfig())\n+\tpcoll := beam.ParDo(s, &load.RuntimeMonitor{}, src)\n+\tfor i := 0; i < *fanout; i++ {\n+\t\tpcoll = beam.GroupByKey(s, src)\n+\t\tbeam.ParDo(s, func(key []byte, values func(*[]byte) bool) ([]byte, []byte) {\n+\t\t\tfor i := 0; i < *iterations; i++ {\n+\t\t\t\tvar value []byte\n+\t\t\t\tfor values(&value) {\n+\t\t\t\t\tif i == *iterations-1 {\n+\t\t\t\t\t\treturn key, value\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn key, []byte{0}\n+\t\t}, pcoll)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0b02dc7595ccf28268100a7916fa7738f085eb"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI3MzE5NA==", "bodyText": "Thank you I fixed it in the last commit.", "url": "https://github.com/apache/beam/pull/13388#discussion_r530273194", "createdAt": "2020-11-25T10:40:19Z", "author": {"login": "tszerszen"}, "path": "sdks/go/test/load/group_by_key/group_by_key.go", "diffHunk": "@@ -0,0 +1,88 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This is GroupByKey load test with Synthetic Source.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"A number of GroupByKey operations to perform in parallel.\")\n+\titerations = flag.Int(\n+\t\t\"iterations\",\n+\t\t1,\n+\t\t\"A number of reiterations over per-key-grouped values to perform.\")\n+\tsyntheticConfig = flag.String(\n+\t\t\"input_options\",\n+\t\t\"\",\n+\t\t\"A JSON object that describes the configuration for synthetic source.\")\n+)\n+\n+func parseSyntheticConfig() synthetic.SourceConfig {\n+\tif *syntheticConfig == \"\" {\n+\t\tpanic(\"--input_options not provided\")\n+\t} else {\n+\t\tencoded := []byte(*syntheticConfig)\n+\t\treturn synthetic.DefaultSourceConfig().BuildFromJSON(encoded)\n+\t}\n+}\n+\n+func main() {\n+\tflag.Parse()\n+\tbeam.Init()\n+\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\tsrc := synthetic.SourceSingle(s, parseSyntheticConfig())\n+\tpcoll := beam.ParDo(s, &load.RuntimeMonitor{}, src)\n+\tfor i := 0; i < *fanout; i++ {\n+\t\tpcoll = beam.GroupByKey(s, src)\n+\t\tbeam.ParDo(s, func(key []byte, values func(*[]byte) bool) ([]byte, []byte) {\n+\t\t\tfor i := 0; i < *iterations; i++ {\n+\t\t\t\tvar value []byte\n+\t\t\t\tfor values(&value) {\n+\t\t\t\t\tif i == *iterations-1 {\n+\t\t\t\t\t\treturn key, value\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn key, []byte{0}\n+\t\t}, pcoll)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcwODMwMQ=="}, "originalCommit": {"oid": "bf0b02dc7595ccf28268100a7916fa7738f085eb"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2607, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}