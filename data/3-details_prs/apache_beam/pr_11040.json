{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDYxNDky", "number": 11040, "title": "[BEAM-9305] Allow value provider query strings in _CustomBigQuerySource", "bodyText": "This PR relates to https://issues.apache.org/jira/browse/BEAM-9305 and allows for the usage of ValueProvider query strings in _ReadFromBigQuery.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-04T10:23:28Z", "url": "https://github.com/apache/beam/pull/11040", "merged": true, "mergeCommit": {"oid": "8083c8fdac3dd5d95606e861e1d53684dc28eed6"}, "closed": true, "closedAt": "2020-03-23T20:46:55Z", "author": {"login": "EDjur"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKUOYWAH2gAyMzgzNDYxNDkyOmM3OGIzZDE0OWJlZGY5ZDgzOWVmMmNlMDQ0NDYzOWJhZWE2ZDFjNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOLlphAFqTM3NTA4NjYyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c78b3d149bedf9d839ef2ce0444639baea6d1c4f", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/c78b3d149bedf9d839ef2ce0444639baea6d1c4f", "committedDate": "2020-03-04T10:19:08Z", "message": "Allow value provider query strings in _ReadFromBigQuery -> _CustomBigQuerySource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3f37c81364b4eac46689abd92dce53af54d4b59", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/a3f37c81364b4eac46689abd92dce53af54d4b59", "committedDate": "2020-03-04T10:46:06Z", "message": "Moved vp.get() to estimate_size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDEyMTQ5", "url": "https://github.com/apache/beam/pull/11040#pullrequestreview-369012149", "createdAt": "2020-03-04T18:19:58Z", "commit": {"oid": "a3f37c81364b4eac46689abd92dce53af54d4b59"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODoxOTo1OVrOFx4WAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODoyNDoxN1rOFx4fTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0NzY4Mg==", "bodyText": "could you use the value provider in another one of the tests in this file? Since each test in this file takes ~5min to run, I'd prefer to avoid adding a new test.", "url": "https://github.com/apache/beam/pull/11040#discussion_r387847682", "createdAt": "2020-03-04T18:19:59Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_read_it_test.py", "diffHunk": "@@ -162,6 +163,15 @@ def test_iobase_source(self):\n               query=self.query, use_standard_sql=True, project=self.project))\n       assert_that(result, equal_to(self.TABLE_DATA))\n \n+  @attr('IT')\n+  def test_valueprovider_query_string(self):\n+    query = StaticValueProvider(str, self.query)\n+    with beam.Pipeline(argv=self.args) as p:\n+      result = (\n+          p | 'read' >> beam.io._ReadFromBigQuery(\n+              query=query, use_standard_sql=True, project=self.project))\n+      assert_that(result, equal_to(self.TABLE_DATA))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f37c81364b4eac46689abd92dce53af54d4b59"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1MDA2MQ==", "bodyText": "I would probably do this without changing the class variable.\nI'd do a local variable: query = self.query.get(), and do it on every instance where self.query is accessed.\nThe reason is that the Source objects may be recreated in different workers, and the  self.query variable would contain the original ValueProvider in all of those.", "url": "https://github.com/apache/beam/pull/11040#discussion_r387850061", "createdAt": "2020-03-04T18:24:17Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -644,6 +644,8 @@ def estimate_size(self):\n           self.table_reference.tableId)\n       return int(table.numBytes)\n     else:\n+      if isinstance(self.query, ValueProvider):\n+        self.query = self.query.get()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f37c81364b4eac46689abd92dce53af54d4b59"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95ccba9d5f2bcada1a8c265aba6cbbd02617cda", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/d95ccba9d5f2bcada1a8c265aba6cbbd02617cda", "committedDate": "2020-03-05T10:28:43Z", "message": "Moved VP initialisation to _ReadFromBigQuery PTransform"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "935e3169937f10897fc6c0453263afb36548db8d", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/935e3169937f10897fc6c0453263afb36548db8d", "committedDate": "2020-03-05T10:37:12Z", "message": "Updated docstring of gcs_location to reflect value provider usage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTc1NTgy", "url": "https://github.com/apache/beam/pull/11040#pullrequestreview-370175582", "createdAt": "2020-03-06T09:13:17Z", "commit": {"oid": "935e3169937f10897fc6c0453263afb36548db8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxMzoxN1rOFyxv8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxMzoxN1rOFyxv8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4ODIxMQ==", "bodyText": "Do we need an integration test to cover your value provider's logic? Take a look at TestReadFromBigQuery test case in bigquery_test.py. Those are unit tests for _ReadFromBigQuery that actually run very fast, because pipeline is not executed.\nAdding new tests in bigquery_read_it_test.py causes huge overhead, since they are all executed by three runners (Direct, Dataflow and Flink) on every supported Python version.", "url": "https://github.com/apache/beam/pull/11040#discussion_r388788211", "createdAt": "2020-03-06T09:13:17Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_read_it_test.py", "diffHunk": "@@ -156,12 +157,19 @@ def test_native_source(self):\n \n   @attr('IT')\n   def test_iobase_source(self):\n+    query = StaticValueProvider(str, self.query)\n     with beam.Pipeline(argv=self.args) as p:\n       result = (\n           p | 'read' >> beam.io._ReadFromBigQuery(\n               query=self.query, use_standard_sql=True, project=self.project))\n       assert_that(result, equal_to(self.TABLE_DATA))\n \n+    with beam.Pipeline(argv=self.args) as p:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "935e3169937f10897fc6c0453263afb36548db8d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b1443ffa3bdd28f2c0b1ee567fd7882af5d37af", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/1b1443ffa3bdd28f2c0b1ee567fd7882af5d37af", "committedDate": "2020-03-10T12:37:49Z", "message": "test_iobase_source uses value providers instead of string query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5fb4686b8b049f9b400e1d0d175d052d0fa5b5", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/ec5fb4686b8b049f9b400e1d0d175d052d0fa5b5", "committedDate": "2020-03-10T12:42:57Z", "message": "Merged master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72285e347dc4bb1c46b09dc46d6f4bc15e0a1c9a", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/72285e347dc4bb1c46b09dc46d6f4bc15e0a1c9a", "committedDate": "2020-03-12T08:33:25Z", "message": "Moved vp evaluation to pipeline execution phase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzM2NzQw", "url": "https://github.com/apache/beam/pull/11040#pullrequestreview-373736740", "createdAt": "2020-03-12T16:58:45Z", "commit": {"oid": "72285e347dc4bb1c46b09dc46d6f4bc15e0a1c9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1ODo0NVrOF1nLlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1ODo0NVrOF1nLlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MDc5MQ==", "bodyText": "There's a check_accessible decorator that could be used for this function (as well as for estimate_size).\nI think you could also test if self.query is a ValueProvider or not in the constructor. If it's not, you can then create a StaticValueProvider object. self.evaluate_query_valueprovider() would be unnecessary.\nHere'a en example:\n\n  \n    \n      beam/sdks/python/apache_beam/io/filebasedsource.py\n    \n    \n        Lines 115 to 117\n      in\n      f75838f\n    \n    \n    \n    \n\n        \n          \n           if isinstance(file_pattern, (str, unicode)): \n        \n\n        \n          \n             file_pattern = StaticValueProvider(str, file_pattern) \n        \n\n        \n          \n           self._pattern = file_pattern", "url": "https://github.com/apache/beam/pull/11040#discussion_r391760791", "createdAt": "2020-03-12T16:58:45Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -694,14 +699,16 @@ def read(self, range_tracker):\n     raise NotImplementedError('BigQuery source must be split before being read')\n \n   def _setup_temporary_dataset(self, bq):\n+    query = self.evaluate_query_valueprovider()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72285e347dc4bb1c46b09dc46d6f4bc15e0a1c9a"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acf02d3805c62c56c0df964fd79ad6f161a13418", "author": {"user": {"login": "EDjur", "name": "Elias Djurfeldt"}}, "url": "https://github.com/apache/beam/commit/acf02d3805c62c56c0df964fd79ad6f161a13418", "committedDate": "2020-03-13T09:42:45Z", "message": "Cast query to vp always and evaluate in methods using check_accessible"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MDg2NjIz", "url": "https://github.com/apache/beam/pull/11040#pullrequestreview-375086623", "createdAt": "2020-03-16T10:31:06Z", "commit": {"oid": "acf02d3805c62c56c0df964fd79ad6f161a13418"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3013, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}