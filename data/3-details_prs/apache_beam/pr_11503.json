{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTkzNTE3", "number": 11503, "title": "[BEAM-9692] Make GroupByKey into a primitive", "bodyText": "This makes GBK into a primitive and moves the current implementation -- only used by the DirectRunner -- as a PTransformOverride for the DirectRunner. This leaves the apply_GroupByKey because there are some internal runners that rely on the existence of the transform. So we keep it but simply apply the GBK normally. This can be removed after an internal fix.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-22T23:12:26Z", "url": "https://github.com/apache/beam/pull/11503", "merged": true, "mergeCommit": {"oid": "16ab59572631f7ffd362473f32b24cb80c051642"}, "closed": true, "closedAt": "2020-05-21T16:57:02Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcakRQwgBqjMyNjcwNzY4ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjgpvRgFqTQxNjMyMjkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "556cdd55065762e9234f968fef545828e2486a92", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/556cdd55065762e9234f968fef545828e2486a92", "committedDate": "2020-04-22T23:11:26Z", "message": "Move apply_GroupByKey to PTransformOverride\n\nChange-Id: Ifda22590de260281d4073d1d19d2b6074bd569ca"}, "afterCommit": {"oid": "d09a4b7344e8b645226a7c476f2c988320040c9b", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/d09a4b7344e8b645226a7c476f2c988320040c9b", "committedDate": "2020-04-23T22:03:09Z", "message": "Move apply_GroupByKey to PTransformOverride\n\nChange-Id: Ifda22590de260281d4073d1d19d2b6074bd569ca"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20e6918aaf2e69a201bb387dbecfa2baebf65dc5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/20e6918aaf2e69a201bb387dbecfa2baebf65dc5", "committedDate": "2020-04-30T19:21:39Z", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821"}, "afterCommit": {"oid": "a114b7f657cf660a54fef08c8b4966913b82f0c5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/a114b7f657cf660a54fef08c8b4966913b82f0c5", "committedDate": "2020-05-01T21:05:06Z", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a114b7f657cf660a54fef08c8b4966913b82f0c5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/a114b7f657cf660a54fef08c8b4966913b82f0c5", "committedDate": "2020-05-01T21:05:06Z", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821"}, "afterCommit": {"oid": "55ddb466345e07d3a4f50f48afb0115eb164edd0", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/55ddb466345e07d3a4f50f48afb0115eb164edd0", "committedDate": "2020-05-06T18:33:37Z", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55ddb466345e07d3a4f50f48afb0115eb164edd0", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/55ddb466345e07d3a4f50f48afb0115eb164edd0", "committedDate": "2020-05-06T18:33:37Z", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821"}, "afterCommit": {"oid": "01811d0c65d8748b5ffdb9d61853aab38d52b4e5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/01811d0c65d8748b5ffdb9d61853aab38d52b4e5", "committedDate": "2020-05-06T18:55:51Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01811d0c65d8748b5ffdb9d61853aab38d52b4e5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/01811d0c65d8748b5ffdb9d61853aab38d52b4e5", "committedDate": "2020-05-06T18:55:51Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}, "afterCommit": {"oid": "7efcd570d42873fd83127e7ea961dd8556b1633b", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/7efcd570d42873fd83127e7ea961dd8556b1633b", "committedDate": "2020-05-06T18:58:47Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7efcd570d42873fd83127e7ea961dd8556b1633b", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/7efcd570d42873fd83127e7ea961dd8556b1633b", "committedDate": "2020-05-06T18:58:47Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}, "afterCommit": {"oid": "9447ed6d9ee1e26d5830204c2437615efae3714d", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/9447ed6d9ee1e26d5830204c2437615efae3714d", "committedDate": "2020-05-06T19:02:52Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9447ed6d9ee1e26d5830204c2437615efae3714d", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/9447ed6d9ee1e26d5830204c2437615efae3714d", "committedDate": "2020-05-06T19:02:52Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}, "afterCommit": {"oid": "7c751cc09edfc53f2af3b8781b9c7c990f68ee78", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/7c751cc09edfc53f2af3b8781b9c7c990f68ee78", "committedDate": "2020-05-06T19:05:56Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c751cc09edfc53f2af3b8781b9c7c990f68ee78", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/7c751cc09edfc53f2af3b8781b9c7c990f68ee78", "committedDate": "2020-05-06T19:05:56Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}, "afterCommit": {"oid": "aa10bb0ba612e130fab8e5179de78a572d4cf5a5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/aa10bb0ba612e130fab8e5179de78a572d4cf5a5", "committedDate": "2020-05-06T20:27:17Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa10bb0ba612e130fab8e5179de78a572d4cf5a5", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/aa10bb0ba612e130fab8e5179de78a572d4cf5a5", "committedDate": "2020-05-06T20:27:17Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}, "afterCommit": {"oid": "800b63991daa6afd54787dc05aeb66157ddf870f", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/800b63991daa6afd54787dc05aeb66157ddf870f", "committedDate": "2020-05-06T20:28:58Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/3e70f16d1abd92c27eb6f54330a7427429827074", "committedDate": "2020-05-11T18:47:12Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "800b63991daa6afd54787dc05aeb66157ddf870f", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/800b63991daa6afd54787dc05aeb66157ddf870f", "committedDate": "2020-05-06T20:28:58Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}, "afterCommit": {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/3e70f16d1abd92c27eb6f54330a7427429827074", "committedDate": "2020-05-11T18:47:12Z", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDgyOTQ5", "url": "https://github.com/apache/beam/pull/11503#pullrequestreview-410482949", "createdAt": "2020-05-12T23:05:23Z", "commit": {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNToyM1rOGUb-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowODozMVrOGUcDDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzEyOA==", "bodyText": "Move ReifyWindows, _GroupByKeyOnly, _GroupAlsoByWindow, etc. here as well.", "url": "https://github.com/apache/beam/pull/11503#discussion_r424083128", "createdAt": "2020-05-12T23:05:23Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/direct/direct_runner.py", "diffHunk": "@@ -234,7 +234,89 @@ def get_replacement_transform(self, transform):\n       from apache_beam.runners.direct.test_stream_impl import _ExpandableTestStream\n       return _ExpandableTestStream(transform)\n \n+  class GroupByKeyPTransformOverride(PTransformOverride):\n+    \"\"\"A ``PTransformOverride`` for ``GroupByKey``.\n+\n+    This replaces the Beam implementation as a primitive.\n+    \"\"\"\n+    def matches(self, applied_ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+      if (isinstance(applied_ptransform.transform, GroupByKey) and\n+          not getattr(applied_ptransform.transform, 'override', False)):\n+        self.input_type = applied_ptransform.inputs[0].element_type\n+        return True\n+      return False\n+\n+    def get_replacement_transform(self, ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+\n+      # Subclass from GroupByKey to inherit all the proper methods.\n+      class GroupByKey(GroupByKey):\n+        override = True\n+\n+        def expand(self, pcoll):\n+          # Imported here to avoid circular dependencies.\n+          # pylint: disable=wrong-import-order, wrong-import-position\n+          from apache_beam.coders import typecoders\n+          from apache_beam.typehints import trivial_inference\n+\n+          input_type = pcoll.element_type\n+          if input_type is not None:\n+            # Initialize type-hints used below to enforce type-checking and to\n+            # pass downstream to further PTransforms.\n+            key_type, value_type = trivial_inference.key_value_types(input_type)\n+            # Enforce the input to a GBK has a KV element type.\n+            pcoll.element_type = typehints.typehints.coerce_to_kv_type(\n+                pcoll.element_type)\n+            typecoders.registry.verify_deterministic(\n+                typecoders.registry.get_coder(key_type),\n+                'GroupByKey operation \"%s\"' % self.label)\n+\n+            reify_output_type = typehints.KV[\n+                key_type, typehints.WindowedValue[value_type]]  # type: ignore[misc]\n+            gbk_input_type = (\n+                typehints.\n+                KV[key_type,\n+                   typehints.Iterable[\n+                       typehints.WindowedValue[  # type: ignore[misc]\n+                           value_type]]])\n+            gbk_output_type = typehints.KV[key_type,\n+                                           typehints.Iterable[value_type]]\n+\n+            # pylint: disable=bad-continuation\n+            return (\n+                pcoll\n+                | 'ReifyWindows' >> (\n+                    ParDo(self.ReifyWindows()).with_output_types(\n+                        reify_output_type))\n+                | 'GroupByKey' >> (\n+                    _GroupByKeyOnly().with_input_types(\n+                        reify_output_type).with_output_types(gbk_input_type))\n+                | (\n+                    'GroupByWindow' >>\n+                    _GroupAlsoByWindow(pcoll.windowing).with_input_types(\n+                        gbk_input_type).with_output_types(gbk_output_type)))\n+          else:\n+            # The input_type is None, run the default\n+            return (\n+                pcoll\n+                | 'ReifyWindows' >> ParDo(self.ReifyWindows())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzM5OQ==", "bodyText": "Hopefully there should be few (if any) methods that need to be inherited, which could simplify this.", "url": "https://github.com/apache/beam/pull/11503#discussion_r424083399", "createdAt": "2020-05-12T23:06:10Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/direct/direct_runner.py", "diffHunk": "@@ -234,7 +234,89 @@ def get_replacement_transform(self, transform):\n       from apache_beam.runners.direct.test_stream_impl import _ExpandableTestStream\n       return _ExpandableTestStream(transform)\n \n+  class GroupByKeyPTransformOverride(PTransformOverride):\n+    \"\"\"A ``PTransformOverride`` for ``GroupByKey``.\n+\n+    This replaces the Beam implementation as a primitive.\n+    \"\"\"\n+    def matches(self, applied_ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+      if (isinstance(applied_ptransform.transform, GroupByKey) and\n+          not getattr(applied_ptransform.transform, 'override', False)):\n+        self.input_type = applied_ptransform.inputs[0].element_type\n+        return True\n+      return False\n+\n+    def get_replacement_transform(self, ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+\n+      # Subclass from GroupByKey to inherit all the proper methods.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NDIzOQ==", "bodyText": "Hmm... this check seems to be vacuous if the element type is already a tuple, right?", "url": "https://github.com/apache/beam/pull/11503#discussion_r424084239", "createdAt": "2020-05-12T23:08:31Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -404,10 +396,6 @@ def test_gbk_then_flatten_input_visitor(self):\n     flat = (none_str_pc, none_int_pc) | beam.Flatten()\n     _ = flat | beam.GroupByKey()\n \n-    # This may change if type inference changes, but we assert it here\n-    # to make sure the check below is not vacuous.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "986de56ec3178ea85fc6ac5c1bab56ec920e60a1", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/986de56ec3178ea85fc6ac5c1bab56ec920e60a1", "committedDate": "2020-05-13T21:14:36Z", "message": "Move ReifyWindows etc to DirectRunner, don't subclass from GBK\n\nChange-Id: I9a54cbaadf3968dbb48167cc669088212680d336"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aa92fe0a808e0f6669725ece6db5bd07591c3cf", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/0aa92fe0a808e0f6669725ece6db5bd07591c3cf", "committedDate": "2020-05-13T21:49:05Z", "message": "remove references to _GroupByKeyOnly\n\nChange-Id: I0917d6495074204761d91579e5e5572401042a18"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc405fdc375de0b73797c06f16522f374d511909", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/cc405fdc375de0b73797c06f16522f374d511909", "committedDate": "2020-05-13T23:25:25Z", "message": "add back the ReifyWindows to the GBK, some internal tests depend on it.\n\nChange-Id: Ibce789eaa56ca93842d94cd23bd6d4aadb05e08d"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "committedDate": "2020-05-20T18:36:49Z", "message": "Skip checking input determinism for GBKs embedded in x-lang transforms. We can assume safely assume that the expansion service constructs transforms correctly.\n\nChange-Id: I46d40e40ac33933004836681d06f91c031655f06"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ce99007f8e00e8eda158f98f302b1d9de2a909d", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/2ce99007f8e00e8eda158f98f302b1d9de2a909d", "committedDate": "2020-05-20T18:01:53Z", "message": "Skip checking input determinism for GBKs embedded in x-lang transforms. We can assume safely assume that the expansion service constructs transforms correctly.\n\nChange-Id: I46d40e40ac33933004836681d06f91c031655f06"}, "afterCommit": {"oid": "e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "committedDate": "2020-05-20T18:36:49Z", "message": "Skip checking input determinism for GBKs embedded in x-lang transforms. We can assume safely assume that the expansion service constructs transforms correctly.\n\nChange-Id: I46d40e40ac33933004836681d06f91c031655f06"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzIyOTAz", "url": "https://github.com/apache/beam/pull/11503#pullrequestreview-416322903", "createdAt": "2020-05-21T16:55:59Z", "commit": {"oid": "e88362ee2cc56f5c58a11fa4e36edbfabb83eb67"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3917, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}