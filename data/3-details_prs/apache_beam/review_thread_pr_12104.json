{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNjY1OTUy", "number": 12104, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoyMjo0M1rOEJMOSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoyMjo0M1rOEJMOSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDcyOTA1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/worker/sdk_worker.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoyMjo0M1rOGpm-QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoyMjo0M1rOGpm-QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4MzMyOQ==", "bodyText": "09:09:24 > Task :sdks:python:test-suites:tox:py37:lintPy37\n09:09:24 ************* Module apache_beam.runners.worker.sdk_worker\n09:09:24 apache_beam/runners/worker/sdk_worker.py:153:35: C0326: No space allowed around keyword argument assignment\n09:09:24           control_address, options = options)\n09:09:24                                    ^ (bad-whitespace)\n09:09:24 apache_beam/runners/worker/sdk_worker.py:157:48: C0326: No space allowed around keyword argument assignment\n09:09:24           control_address, credentials, options = options)\n09:09:24                                                 ^ (bad-whitespace)", "url": "https://github.com/apache/beam/pull/12104#discussion_r446283329", "createdAt": "2020-06-26T16:22:43Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/sdk_worker.py", "diffHunk": "@@ -145,14 +145,16 @@ def __init__(self,\n     self._worker_index = 0\n     self._worker_id = worker_id\n     self._state_cache = StateCache(state_cache_size)\n+    options = [('grpc.max_receive_message_length', -1),\n+               ('grpc.max_send_message_length', -1)]\n     if credentials is None:\n       _LOGGER.info('Creating insecure control channel for %s.', control_address)\n       self._control_channel = GRPCChannelFactory.insecure_channel(\n-          control_address)\n+          control_address, options = options)\n     else:\n       _LOGGER.info('Creating secure control channel for %s.', control_address)\n       self._control_channel = GRPCChannelFactory.secure_channel(\n-          control_address, credentials)\n+          control_address, credentials, options = options)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f91eaacc34f456e7e89faec8fd62e44d441a4c6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3352, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}