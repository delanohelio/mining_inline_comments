{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNTIxODM1", "number": 12930, "title": "[BEAM-10962] Add Multiple PubSub reader to Python SDK", "bodyText": "As discussed over Dev mail, a very common use case in Dataflow / Beam is reading from multiple PubSub topics/subscriptions and flatten them out.\nThe PR adds the PTransform to do so.\nIt takes two parameters:\n\nsource_list: List of topics/subscriptions.\nwith_context: option to return a key-value pair of the form (source, actual message)\n\nOther options from ReadFromPubSub can also be included as kwargs except topic or subscription.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-24T15:18:26Z", "url": "https://github.com/apache/beam/pull/12930", "merged": true, "mergeCommit": {"oid": "682f2ea1b871d498002c89b856b0316e50647e5b"}, "closed": true, "closedAt": "2020-11-25T19:17:03Z", "author": {"login": "InigoSJ"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMCp2hgH2gAyNDkyNTIxODM1OjcyYjg4OTQ2M2IzNGRiOGZlZjQ3ZGIzYmJmNDJmYWVhZGFhNTk3MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdedGtGAFqTUzNTc0MzY3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "72b889463b34db8fef47db3bbf42faeadaa59701", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/72b889463b34db8fef47db3bbf42faeadaa59701", "committedDate": "2020-09-24T15:09:51Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296f3a42984179387227c5edefdab17c050d1747", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/296f3a42984179387227c5edefdab17c050d1747", "committedDate": "2020-09-28T15:02:33Z", "message": "Merge branch 'master' into multi-pubsub-reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50aaf778bc1feacecbe4ac0e4e2519a7b4e84755", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/50aaf778bc1feacecbe4ac0e4e2519a7b4e84755", "committedDate": "2020-10-08T17:48:43Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0263c7b97a7fb93749137af95a91d4ad4ffd107", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/d0263c7b97a7fb93749137af95a91d4ad4ffd107", "committedDate": "2020-10-08T17:49:09Z", "message": "Merge remote-tracking branch 'origin/multi-pubsub-reader' into multi-pubsub-reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34b92bf4f0afa20f88ab4dda08298d7ca49fba20", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/34b92bf4f0afa20f88ab4dda08298d7ca49fba20", "committedDate": "2020-10-08T20:58:00Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDYzNjE4", "url": "https://github.com/apache/beam/pull/12930#pullrequestreview-512063618", "createdAt": "2020-10-19T18:50:29Z", "commit": {"oid": "34b92bf4f0afa20f88ab4dda08298d7ca49fba20"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MDoyOVrOHkdDCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1NzowMVrOHkdTNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjY5Nw==", "bodyText": "It seems like constructing ReadFromPubSub doesn't ask for with_context. Why do we add a new one here?", "url": "https://github.com/apache/beam/pull/12930#discussion_r507986697", "createdAt": "2020-10-19T18:50:29Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +448,123 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"\n+  def __init__(\n+      self,\n+      source_list,  # type: List[str]\n+      with_context=False,  # type: bool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b92bf4f0afa20f88ab4dda08298d7ca49fba20"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NzIxNw==", "bodyText": "It also seems like there is no certain consumer for these additional kwargs. Why do we want them here?", "url": "https://github.com/apache/beam/pull/12930#discussion_r507987217", "createdAt": "2020-10-19T18:51:19Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +448,123 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"\n+  def __init__(\n+      self,\n+      source_list,  # type: List[str]\n+      with_context=False,  # type: bool\n+      id_label=None,  # type: Optional[Union[List[str], str]]\n+      with_attributes=False,  # type: bool\n+      timestamp_attribute=None,  # type: Optional[Union[List[str], str]]\n+      **kwargs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b92bf4f0afa20f88ab4dda08298d7ca49fba20"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4ODUwNA==", "bodyText": "PubSubSource has the similar checking logic as here. We should be able to move this check.", "url": "https://github.com/apache/beam/pull/12930#discussion_r507988504", "createdAt": "2020-10-19T18:53:27Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +448,123 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"\n+  def __init__(\n+      self,\n+      source_list,  # type: List[str]\n+      with_context=False,  # type: bool\n+      id_label=None,  # type: Optional[Union[List[str], str]]\n+      with_attributes=False,  # type: bool\n+      timestamp_attribute=None,  # type: Optional[Union[List[str], str]]\n+      **kwargs\n+  ):\n+    \"\"\"Initializes ``PubSubMultipleReader``.\n+\n+    Args:\n+      source_list: List of Cloud Pub/Sub topics or subscriptions. Topics in\n+        form \"projects/<project>/topics/<topic>\" and subscriptions in form\n+        \"projects/<project>/subscriptions/<subscription>\".\n+      with_context:\n+        True - output elements will be key-value pairs with the source as the\n+        key and the message as the value.\n+        False - output elements will be the messages.\n+      with_attributes:\n+        True - input elements will be :class:`~PubsubMessage` objects.\n+        False - input elements will be of type ``bytes`` (message data only).\n+      id_label: If set, will set an attribute for each Cloud Pub/Sub message\n+        with the given name and a unique value. This attribute can then be\n+        used in a ReadFromPubSub PTransform to deduplicate messages. If type\n+        is string, all sources will share the same value; if type is\n+        ``List``, each source will use the value of its index.\n+      timestamp_attribute: If set, will set an attribute for each Cloud\n+        Pub/Sub message with the given name and the message's publish time as\n+        the value. If type is ``string``, all sources will share the same\n+        value; if type List, each source will use the value of its index.\n+    \"\"\"\n+    self.source_list = source_list\n+    self.with_context = with_context\n+    self.with_attributes = with_attributes\n+    self._kwargs = kwargs\n+\n+    self._total_sources = len(source_list)\n+\n+    if isinstance(id_label, str) or id_label is None:\n+      self.id_label = [id_label] * self._total_sources\n+    else:\n+      if len(id_label) != self._total_sources:\n+        raise ValueError(\n+            'Length of \"id_label\" (%d) is not the same as length of '\n+            '\"sources\" (%d)' % (len(id_label), self._total_sources))\n+      self.id_label = id_label\n+\n+    if isinstance(timestamp_attribute, str) or timestamp_attribute is None:\n+      self.timestamp_attribute = [timestamp_attribute] * self._total_sources\n+    else:\n+      if len(timestamp_attribute) != self._total_sources:\n+        raise ValueError(\n+            'Length of \"timestamp_attribute\" (%d) is not the same as length of '\n+            '\"sources\" (%d)' % (len(timestamp_attribute), self._total_sources))\n+      self.timestamp_attribute = timestamp_attribute\n+\n+    for source in self.source_list:\n+      match_topic = re.match(TOPIC_REGEXP, source)\n+      match_subscription = re.match(SUBSCRIPTION_REGEXP, source)\n+\n+      if not (match_topic or match_subscription):\n+        raise ValueError(\n+            'PubSub source must be in the form \"projects/<project>/topics'\n+            '/<topic>\" or \"projects/<project>/subscription'\n+            '/<subscription>\" (got %r).' % source)\n+\n+    if 'topic' in self._kwargs:\n+      raise ValueError(\n+          'Topics and subscriptions should be in \"source_list\". '\n+          'Found topic %s' % self._kwargs['topic'])\n+\n+    if 'subscription' in self._kwargs:\n+      raise ValueError(\n+          'Subscriptions and topics should be in \"source_list\". '\n+          'Found subscription %s' % self._kwargs['subscription'])\n+\n+  def expand(self, pcol):\n+    sources_pcol = []\n+    for i, source in enumerate(self.source_list):\n+      id_label = self.id_label[i]\n+      timestamp_attribute = self.timestamp_attribute[i]\n+\n+      source_split = source.split('/')\n+      source_project = source_split[1]\n+      source_type = source_split[2]\n+      source_name = source_split[-1]\n+\n+      step_name_base = 'PubSub %s/project:%s' % (source_type, source_project)\n+      read_step_name = '%s/Read %s' % (step_name_base, source_name)\n+\n+      if source_type == 'topics':", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b92bf4f0afa20f88ab4dda08298d7ca49fba20"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5MDgzOA==", "bodyText": "Lots of logic here is checking input arguments, which we can get rid of by using a NamedTuple to represent a reading PubSub configuration instead of using a list for each configurable attributes.", "url": "https://github.com/apache/beam/pull/12930#discussion_r507990838", "createdAt": "2020-10-19T18:57:01Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +448,123 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"\n+  def __init__(\n+      self,\n+      source_list,  # type: List[str]\n+      with_context=False,  # type: bool\n+      id_label=None,  # type: Optional[Union[List[str], str]]\n+      with_attributes=False,  # type: bool\n+      timestamp_attribute=None,  # type: Optional[Union[List[str], str]]\n+      **kwargs\n+  ):\n+    \"\"\"Initializes ``PubSubMultipleReader``.\n+\n+    Args:\n+      source_list: List of Cloud Pub/Sub topics or subscriptions. Topics in\n+        form \"projects/<project>/topics/<topic>\" and subscriptions in form\n+        \"projects/<project>/subscriptions/<subscription>\".\n+      with_context:\n+        True - output elements will be key-value pairs with the source as the\n+        key and the message as the value.\n+        False - output elements will be the messages.\n+      with_attributes:\n+        True - input elements will be :class:`~PubsubMessage` objects.\n+        False - input elements will be of type ``bytes`` (message data only).\n+      id_label: If set, will set an attribute for each Cloud Pub/Sub message\n+        with the given name and a unique value. This attribute can then be\n+        used in a ReadFromPubSub PTransform to deduplicate messages. If type\n+        is string, all sources will share the same value; if type is\n+        ``List``, each source will use the value of its index.\n+      timestamp_attribute: If set, will set an attribute for each Cloud\n+        Pub/Sub message with the given name and the message's publish time as\n+        the value. If type is ``string``, all sources will share the same\n+        value; if type List, each source will use the value of its index.\n+    \"\"\"\n+    self.source_list = source_list\n+    self.with_context = with_context\n+    self.with_attributes = with_attributes\n+    self._kwargs = kwargs\n+\n+    self._total_sources = len(source_list)\n+\n+    if isinstance(id_label, str) or id_label is None:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b92bf4f0afa20f88ab4dda08298d7ca49fba20"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e046a63a563049118a3d62d356f43d911378e407", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/e046a63a563049118a3d62d356f43d911378e407", "committedDate": "2020-11-03T16:45:07Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/660cdf58791da53c08fd723042351ebee469ec74", "committedDate": "2020-11-03T17:08:37Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjAyMTY3", "url": "https://github.com/apache/beam/pull/12930#pullrequestreview-529602167", "createdAt": "2020-11-13T00:04:27Z", "commit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDowNDoyN1rOHyUAlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDowODo0NVrOHyUFWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxODY3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  source_list,  # type: List[PubSubSourceDescriptor]\n          \n          \n            \n                 pubsub_source_descriptors,  # type: List[PubSubSourceDescriptor]", "url": "https://github.com/apache/beam/pull/12930#discussion_r522518679", "createdAt": "2020-11-13T00:04:27Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +449,69 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class PubSubSourceDescriptor(NamedTuple):\n+  \"\"\"A PubSub source descriptor for ``MultipleReadFromPubSub```\"\"\"\n+  source: str\n+  id_label: str = None\n+  timestamp_attribute: str = None\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"\n+  def __init__(\n+      self,\n+      source_list,  # type: List[PubSubSourceDescriptor]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTE0Ng==", "bodyText": "It seems like the source here will be the full path to the topic/subscriptions. Please add more pydoc to describe what the source str should be.", "url": "https://github.com/apache/beam/pull/12930#discussion_r522519146", "createdAt": "2020-11-13T00:05:59Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +449,69 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class PubSubSourceDescriptor(NamedTuple):\n+  \"\"\"A PubSub source descriptor for ``MultipleReadFromPubSub```\"\"\"\n+  source: str", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTI4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              subscriptions and/or topics.\"\"\"\n          \n          \n            \n              ``PubSubSourceDescriptor``.\"\"\"", "url": "https://github.com/apache/beam/pull/12930#discussion_r522519288", "createdAt": "2020-11-13T00:06:31Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +449,69 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class PubSubSourceDescriptor(NamedTuple):\n+  \"\"\"A PubSub source descriptor for ``MultipleReadFromPubSub```\"\"\"\n+  source: str\n+  id_label: str = None\n+  timestamp_attribute: str = None\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTUwOA==", "bodyText": "Please add a code snippet about how to use this transform and highlight the benefit of using this transform compared to the ReadFromPubSub.", "url": "https://github.com/apache/beam/pull/12930#discussion_r522519508", "createdAt": "2020-11-13T00:07:09Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +449,69 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class PubSubSourceDescriptor(NamedTuple):\n+  \"\"\"A PubSub source descriptor for ``MultipleReadFromPubSub```\"\"\"\n+  source: str\n+  id_label: str = None\n+  timestamp_attribute: str = None\n+\n+\n+class MultipleReadFromPubSub(PTransform):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTg5OQ==", "bodyText": "Instead of using split, can we use re.match(TOPIC_REGEXP, source.source) and re.match(SUBSCRIPTION_REGEXP, source.source) as well?", "url": "https://github.com/apache/beam/pull/12930#discussion_r522519899", "createdAt": "2020-11-13T00:08:45Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -444,3 +449,69 @@ def display_data(self):\n \n   def writer(self):\n     raise NotImplementedError\n+\n+\n+class PubSubSourceDescriptor(NamedTuple):\n+  \"\"\"A PubSub source descriptor for ``MultipleReadFromPubSub```\"\"\"\n+  source: str\n+  id_label: str = None\n+  timestamp_attribute: str = None\n+\n+\n+class MultipleReadFromPubSub(PTransform):\n+  \"\"\"A ``PTransform`` that expands ``ReadFromPubSub`` to read from multiple\n+  subscriptions and/or topics.\"\"\"\n+  def __init__(\n+      self,\n+      source_list,  # type: List[PubSubSourceDescriptor]\n+      with_attributes=False,  # type: bool\n+  ):\n+    \"\"\"Initializes ``PubSubMultipleReader``.\n+\n+    Args:\n+      source_list: List of Cloud Pub/Sub topics or subscriptions of type\n+      `~PubSubSourceDescriptor`.\n+      with_attributes:\n+        True - input elements will be :class:`~PubsubMessage` objects.\n+        False - input elements will be of type ``bytes`` (message data only).\n+    \"\"\"\n+    self.source_list = source_list\n+    self.with_attributes = with_attributes\n+\n+    for source in self.source_list:\n+      match_topic = re.match(TOPIC_REGEXP, source.source)\n+      match_subscription = re.match(SUBSCRIPTION_REGEXP, source.source)\n+\n+      if not (match_topic or match_subscription):\n+        raise ValueError(\n+            'PubSub source must be in the form \"projects/<project>/topics'\n+            '/<topic>\" or \"projects/<project>/subscription'\n+            '/<subscription>\" (got %r).' % source.source)\n+\n+  def expand(self, pcol):\n+    sources_pcol = []\n+    for source in self.source_list:\n+      source_split = source.source.split('/')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "660cdf58791da53c08fd723042351ebee469ec74"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfc57eec71c078a4dfb15bd85bd39db88d8d74ff", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/dfc57eec71c078a4dfb15bd85bd39db88d8d74ff", "committedDate": "2020-11-18T09:29:43Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a0dc6b042c197fd29e2029afd7e49634102bbaa", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/0a0dc6b042c197fd29e2029afd7e49634102bbaa", "committedDate": "2020-11-18T09:46:24Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c33e97f16dd378fc93dfe745b439a22066b4d51a", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/c33e97f16dd378fc93dfe745b439a22066b4d51a", "committedDate": "2020-11-18T16:47:23Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzOTg2Mjg0", "url": "https://github.com/apache/beam/pull/12930#pullrequestreview-533986284", "createdAt": "2020-11-19T00:20:16Z", "commit": {"oid": "c33e97f16dd378fc93dfe745b439a22066b4d51a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyMDoxNlrOH2Hl3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyMDoxNlrOH2Hl3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwOTUzNQ==", "bodyText": "Please move this into the MultipleReadFromPubSub  class py doc.", "url": "https://github.com/apache/beam/pull/12930#discussion_r526509535", "createdAt": "2020-11-19T00:20:16Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/io/gcp/pubsub.py", "diffHunk": "@@ -20,6 +20,27 @@\n Cloud Pub/Sub sources and sinks are currently supported only in streaming\n pipelines, during remote execution.\n \n+Multiple Read from Pub/Sub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c33e97f16dd378fc93dfe745b439a22066b4d51a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2508a4f4c4d7c8f26eb782cb5c1e655dae456cd1", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/2508a4f4c4d7c8f26eb782cb5c1e655dae456cd1", "committedDate": "2020-11-19T11:05:17Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e7bc4ad8075fc86f0c26a15bf3d8000dde9b135", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/2e7bc4ad8075fc86f0c26a15bf3d8000dde9b135", "committedDate": "2020-11-19T11:16:20Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a279c7dcb32961fc7eb1e1ea49cff995bdbdf8c6", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/a279c7dcb32961fc7eb1e1ea49cff995bdbdf8c6", "committedDate": "2020-11-19T11:28:45Z", "message": "[BEAM-10962] Add Multiple PubSub reader to Python SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17af76cb907da17f257c8f73a175c3ace9a6cd68", "author": {"user": {"login": "InigoSJ", "name": "I\u00f1igo San Jose Visiers"}}, "url": "https://github.com/apache/beam/commit/17af76cb907da17f257c8f73a175c3ace9a6cd68", "committedDate": "2020-11-19T11:50:47Z", "message": "Merge branch 'master' into multi-pubsub-reader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzQzNjcz", "url": "https://github.com/apache/beam/pull/12930#pullrequestreview-535743673", "createdAt": "2020-11-20T20:09:32Z", "commit": {"oid": "17af76cb907da17f257c8f73a175c3ace9a6cd68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2547, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}