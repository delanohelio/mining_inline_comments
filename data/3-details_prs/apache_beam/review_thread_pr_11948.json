{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzY1NTgw", "number": 11948, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDowMzoyNVrOEDm52Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyOToyOFrOEDnZcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjE4NTg1OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDowMzoyNVrOGguZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDowMzoyNVrOGguZLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2NzcyNA==", "bodyText": "SUBSTR counts the first char from position 1.", "url": "https://github.com/apache/beam/pull/11948#discussion_r436967724", "createdAt": "2020-06-08T20:03:25Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -3565,19 +3566,16 @@ public void testCaseWithValueNoElseNoMatch() {\n   }\n \n   @Test\n-  @Ignore(\n-      \"Codegen generates code that Janino cannot compile, need further investigation on root\"\n-          + \" cause.\")\n   public void testCastToDateWithCase() {\n     String sql =\n         \"SELECT f_int, \\n\"\n             + \"CASE WHEN CHAR_LENGTH(TRIM(f_string)) = 8 \\n\"\n             + \"    THEN CAST (CONCAT(\\n\"\n-            + \"       SUBSTR(TRIM(f_string), 0, 4) \\n\"\n+            + \"       SUBSTR(TRIM(f_string), 1, 4) \\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76436c3faea4f60cf143a3987577e68bf0127160"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjI2Njc1OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyOToyOFrOGgvNkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo1MDo1NVrOGgv75g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTEzNw==", "bodyText": "I think you don't have to implement a parseDateToLocalDate function yourself. You can use LocalDate.of(y, m, d) or LocalDate.parse(\"yyyy-mm-dd\") directly.", "url": "https://github.com/apache/beam/pull/11948#discussion_r436981137", "createdAt": "2020-06-08T20:29:28Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -3587,11 +3585,14 @@ public void testCastToDateWithCase() {\n     PCollection<Row> stream = BeamSqlRelUtils.toPCollection(pipeline, beamRelNode);\n \n     Schema resultType =\n-        Schema.builder().addInt32Field(\"f_int\").addNullableField(\"f_date\", DATETIME).build();\n+        Schema.builder()\n+            .addInt64Field(\"f_long\")\n+            .addNullableField(\"f_date\", FieldType.logicalType(SqlTypes.DATE))\n+            .build();\n \n     PAssert.that(stream)\n         .containsInAnyOrder(\n-            Row.withSchema(resultType).addValues(1, parseDate(\"2018-10-18\")).build());\n+            Row.withSchema(resultType).addValues(1L, parseDateToLocalDate(\"2018-10-18\")).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76436c3faea4f60cf143a3987577e68bf0127160"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5Mjk5OA==", "bodyText": "Thanks!", "url": "https://github.com/apache/beam/pull/11948#discussion_r436992998", "createdAt": "2020-06-08T20:50:55Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -3587,11 +3585,14 @@ public void testCastToDateWithCase() {\n     PCollection<Row> stream = BeamSqlRelUtils.toPCollection(pipeline, beamRelNode);\n \n     Schema resultType =\n-        Schema.builder().addInt32Field(\"f_int\").addNullableField(\"f_date\", DATETIME).build();\n+        Schema.builder()\n+            .addInt64Field(\"f_long\")\n+            .addNullableField(\"f_date\", FieldType.logicalType(SqlTypes.DATE))\n+            .build();\n \n     PAssert.that(stream)\n         .containsInAnyOrder(\n-            Row.withSchema(resultType).addValues(1, parseDate(\"2018-10-18\")).build());\n+            Row.withSchema(resultType).addValues(1L, parseDateToLocalDate(\"2018-10-18\")).build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTEzNw=="}, "originalCommit": {"oid": "76436c3faea4f60cf143a3987577e68bf0127160"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3639, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}