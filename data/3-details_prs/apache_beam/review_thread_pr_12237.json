{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzYxNDUz", "number": 12237, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0MToxNVrOEN69mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0NTozMFrOEN7D9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDMyOTg1OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/io/SchemaIOProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0MToxNVrOGwy8PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0MToxNVrOGwy8PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgxOTQ1Mw==", "bodyText": "Prefer return primitive boolean type?", "url": "https://github.com/apache/beam/pull/12237#discussion_r453819453", "createdAt": "2020-07-13T17:41:15Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/io/SchemaIOProvider.java", "diffHunk": "@@ -47,5 +48,8 @@\n    * resides there, and some IO-specific configuration object. Can throw a {@link\n    * InvalidConfigurationException} or a {@link InvalidSchemaException}.\n    */\n-  SchemaIO from(String location, Row configuration, Schema dataSchema);\n+  SchemaIO from(String location, Row configuration, @Nullable Schema dataSchema);\n+\n+  /** Indicates whether the dataSchema value is necessary. */\n+  Boolean requiresDataSchema();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926aadbcce348effd36b3a22b1a20d1c8fda2f20"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDM0NjE1OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/pubsub/PubsubSchemaCapableIOProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0NTozMFrOGwzGIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo0NTozMFrOGwzGIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgyMTk4NA==", "bodyText": "Consider removing requiresDataSchema() because it is always true here?\nI know this is the general logic but in this specific provider this call is not necessary.", "url": "https://github.com/apache/beam/pull/12237#discussion_r453821984", "createdAt": "2020-07-13T17:45:30Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/pubsub/PubsubSchemaCapableIOProvider.java", "diffHunk": "@@ -116,11 +116,21 @@ public Schema configurationSchema() {\n   public PubsubSchemaIO from(String location, Row configuration, Schema dataSchema) {\n     validateConfigurationSchema(configuration);\n     validateDlq(configuration.getValue(\"deadLetterQueue\"));\n-    validateEventTimestamp(dataSchema);\n+    validateDataSchema(dataSchema);\n     return new PubsubSchemaIO(location, configuration, dataSchema);\n   }\n \n-  private void validateEventTimestamp(Schema schema) {\n+  @Override\n+  public Boolean requiresDataSchema() {\n+    return true;\n+  }\n+\n+  private void validateDataSchema(Schema schema) {\n+    if (requiresDataSchema() && schema == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926aadbcce348effd36b3a22b1a20d1c8fda2f20"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1032, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}