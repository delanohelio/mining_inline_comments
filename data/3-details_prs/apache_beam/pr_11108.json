{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzA4OTQy", "number": 11108, "title": "[BEAM-9490] Guard referencing for environment expiration via a lock", "bodyText": "When environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-12T15:26:02Z", "url": "https://github.com/apache/beam/pull/11108", "merged": true, "mergeCommit": {"oid": "bdd1726fd6b1103791f597f5e746ea2d205cf648"}, "closed": true, "closedAt": "2020-03-14T12:42:26Z", "author": {"login": "mxm"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM9cr_gFqTM3MzY1ODU0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNVMGLgBqjMxMjc4OTcyMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjU4NTQ3", "url": "https://github.com/apache/beam/pull/11108#pullrequestreview-373658547", "createdAt": "2020-03-12T15:27:03Z", "commit": {"oid": "84e447410ba22827e635b82a4aeb9acc23a7daac"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToyNzowNFrOF1jfJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToyODowM1rOF1jhqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcwMDI2Mw==", "bodyText": "Unfortunately, we lose the type infos here. There is no way without calling a builder method to get the correct type.", "url": "https://github.com/apache/beam/pull/11108#discussion_r391700263", "createdAt": "2020-03-12T15:27:04Z", "author": {"login": "mxm"}, "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactory.java", "diffHunk": "@@ -161,29 +167,33 @@ public static DefaultJobBundleFactory create(\n     this.stageIdGenerator = stageIdGenerator;\n     this.environmentExpirationMillis = getEnvironmentExpirationMillis(jobInfo);\n     this.loadBalanceBundles = shouldLoadBalanceBundles(jobInfo);\n+    this.environmentCacheLocks = createEnvironmentCacheLocks(getMaxEnvironmentClients(jobInfo));\n     this.environmentCaches =\n         createEnvironmentCaches(serverFactory -> serverInfo, getMaxEnvironmentClients(jobInfo));\n     this.availableCachesSemaphore = new Semaphore(environmentCaches.size(), true);\n     this.availableCaches = new LinkedBlockingDeque<>(environmentCaches);\n-    this.evictedActiveClients = Sets.newIdentityHashSet();\n+    this.evictedActiveClients = Sets.newConcurrentHashSet();\n+  }\n+\n+  private ImmutableList<Lock> createEnvironmentCacheLocks(int count) {\n+    ImmutableList.Builder<Lock> locksForCaches = ImmutableList.builder();\n+    for (int i = 0; i < count; i++) {\n+      final Lock refLock;\n+      if (environmentExpirationMillis > 0) {\n+        // The lock ensures there is no race condition between expiring an environment and a client\n+        // still attempting to use it, hence referencing it.\n+        refLock = new ReentrantLock(true);\n+      } else {\n+        refLock = NoopLock.get();\n+      }\n+      locksForCaches.add(refLock);\n+    }\n+    return locksForCaches.build();\n   }\n \n   private ImmutableList<LoadingCache<Environment, WrappedSdkHarnessClient>> createEnvironmentCaches(\n       ThrowingFunction<ServerFactory, ServerInfo> serverInfoCreator, int count) {\n-    CacheBuilder<Environment, WrappedSdkHarnessClient> builder =\n-        CacheBuilder.newBuilder()\n-            .removalListener(\n-                (RemovalNotification<Environment, WrappedSdkHarnessClient> notification) -> {\n-                  WrappedSdkHarnessClient client = notification.getValue();\n-                  int refCount = client.unref();\n-                  if (refCount > 0) {\n-                    LOG.warn(\n-                        \"Expiring environment {} with {} remaining bundle references. Taking note to clean it up during shutdown if the references are not removed by then.\",\n-                        notification.getKey(),\n-                        refCount);\n-                    evictedActiveClients.add(client);\n-                  }\n-                });\n+    CacheBuilder builder = CacheBuilder.newBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e447410ba22827e635b82a4aeb9acc23a7daac"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcwMDkwNQ==", "bodyText": "Again, not nice but unfortunately in this order we can't use proper type information.", "url": "https://github.com/apache/beam/pull/11108#discussion_r391700905", "createdAt": "2020-03-12T15:28:03Z", "author": {"login": "mxm"}, "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactory.java", "diffHunk": "@@ -192,6 +202,28 @@ public static DefaultJobBundleFactory create(\n     ImmutableList.Builder<LoadingCache<Environment, WrappedSdkHarnessClient>> caches =\n         ImmutableList.builder();\n     for (int i = 0; i < count; i++) {\n+      final Lock refLock = environmentCacheLocks.get(i);\n+      builder = builder.removalListener(\n+          notification -> {\n+            WrappedSdkHarnessClient client = (WrappedSdkHarnessClient) notification.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e447410ba22827e635b82a4aeb9acc23a7daac"}, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84e447410ba22827e635b82a4aeb9acc23a7daac", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/84e447410ba22827e635b82a4aeb9acc23a7daac", "committedDate": "2020-03-12T15:25:34Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}, "afterCommit": {"oid": "d9bf4d7638535e98ba956fe029758fdba8f57031", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/d9bf4d7638535e98ba956fe029758fdba8f57031", "committedDate": "2020-03-12T15:31:13Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9bf4d7638535e98ba956fe029758fdba8f57031", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/d9bf4d7638535e98ba956fe029758fdba8f57031", "committedDate": "2020-03-12T15:31:13Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}, "afterCommit": {"oid": "55b3268d2f2d281002029e19588353fc34ecfe5e", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/55b3268d2f2d281002029e19588353fc34ecfe5e", "committedDate": "2020-03-12T16:42:32Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ec9b2b53a78b6212727c79630b68668fef7d3bc", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/5ec9b2b53a78b6212727c79630b68668fef7d3bc", "committedDate": "2020-03-12T17:46:53Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55b3268d2f2d281002029e19588353fc34ecfe5e", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/55b3268d2f2d281002029e19588353fc34ecfe5e", "committedDate": "2020-03-12T16:42:32Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}, "afterCommit": {"oid": "5ec9b2b53a78b6212727c79630b68668fef7d3bc", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/5ec9b2b53a78b6212727c79630b68668fef7d3bc", "committedDate": "2020-03-12T17:46:53Z", "message": "[BEAM-9490] Guard referencing for environment expiration via a lock\n\nWhen environment expiration is configured, environments are removed from a cache\nmap after some amount of time. This cache map may be accessed by multiple\nExecutableStage transforms in parallel. During environment expiration there is a\nsmall time window which allows for an environment to still being used while\nanother transform removes, dereferences, and closes the environment. This is not\nexpected behavior."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTQ1MzU1", "url": "https://github.com/apache/beam/pull/11108#pullrequestreview-374545355", "createdAt": "2020-03-13T19:04:26Z", "commit": {"oid": "5ec9b2b53a78b6212727c79630b68668fef7d3bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTowNDoyNlrOF2PRhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTowNDoyNlrOF2PRhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNzY3MA==", "bodyText": "This isn't picking the correct lock, addressed in 5ebae2c", "url": "https://github.com/apache/beam/pull/11108#discussion_r392417670", "createdAt": "2020-03-13T19:04:26Z", "author": {"login": "tweise"}, "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactory.java", "diffHunk": "@@ -406,8 +438,16 @@ public RemoteBundle getBundle(\n         availableCachesSemaphore.acquire();\n         // The blocking queue of caches for serving multiple bundles concurrently.\n         currentCache = availableCaches.take();\n-        client = currentCache.getUnchecked(executableStage.getEnvironment());\n-        client.ref();\n+        // Lock because the environment expiration can remove the ref for the client\n+        // which would close the underlying environment before we can ref it.\n+        Lock refLock = environmentCacheLocks.get(environmentIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec9b2b53a78b6212727c79630b68668fef7d3bc"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df63e8ab1073cba7d9407be4c343c8234c1318b4", "author": {"user": {"login": "tweise", "name": "Thomas Weise"}}, "url": "https://github.com/apache/beam/commit/df63e8ab1073cba7d9407be4c343c8234c1318b4", "committedDate": "2020-03-13T19:08:03Z", "message": "[BEAM-9490] Use the lock that belongs to the cache when bundle load balancing is enabled"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ebae2cd735bc8b93af6d8ec6132c3f06e256fae", "author": {"user": {"login": "tweise", "name": "Thomas Weise"}}, "url": "https://github.com/apache/beam/commit/5ebae2cd735bc8b93af6d8ec6132c3f06e256fae", "committedDate": "2020-03-13T19:00:49Z", "message": "[BEAM-9490] Use the locl that belongs to the cache when bundle load balancing is enabled"}, "afterCommit": {"oid": "df63e8ab1073cba7d9407be4c343c8234c1318b4", "author": {"user": {"login": "tweise", "name": "Thomas Weise"}}, "url": "https://github.com/apache/beam/commit/df63e8ab1073cba7d9407be4c343c8234c1318b4", "committedDate": "2020-03-13T19:08:03Z", "message": "[BEAM-9490] Use the lock that belongs to the cache when bundle load balancing is enabled"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4915, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}