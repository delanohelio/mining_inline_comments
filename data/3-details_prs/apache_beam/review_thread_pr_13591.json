{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzY3NDIy", "number": 13591, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo0NjoxOFrOFQraew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo1NDoyNlrOFQrhSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMDMyODI3OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/programming-guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo0NjoxOFrOIWqnmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMToyMDozOFrOIZ679w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzNzg0OA==", "bodyText": "Code font ValueState and ReadModifyWriteState", "url": "https://github.com/apache/beam/pull/13591#discussion_r560637848", "createdAt": "2021-01-20T02:46:18Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4519,6 +4519,8 @@ registered, then Beam will automatically infer the coder for the state value. Ot\n specified when creating the ValueState. For example, the following ParDo creates a  single state variable that\n accumulates the number of elements seen.\n \n+Note: ValueState is called ReadModifyWriteState in Python SDK.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MDkzNQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13591#discussion_r564050935", "createdAt": "2021-01-25T21:20:38Z", "author": {"login": "y1chi"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4519,6 +4519,8 @@ registered, then Beam will automatically infer the coder for the state value. Ot\n specified when creating the ValueState. For example, the following ParDo creates a  single state variable that\n accumulates the number of elements seen.\n \n+Note: ValueState is called ReadModifyWriteState in Python SDK.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzNzg0OA=="}, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMDMzNzcyOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/programming-guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo1MDowOVrOIWqs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMToyNToyNFrOIZ7Glw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTIxMA==", "bodyText": "This Python section does not show up when I have Python selected.\nhttp://apache-beam-website-pull-requests.storage.googleapis.com/13591/documentation/programming-guide/index.html#state-and-timers", "url": "https://github.com/apache/beam/pull/13591#discussion_r560639210", "createdAt": "2021-01-20T02:50:09Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4544,6 +4546,19 @@ perUser.apply(ParDo.of(new DoFn<KV<String, ValueT>, OutputT>() {\n }));\n {{< /highlight >}}\n \n+{{< highlight python >}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MzY1NQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053655", "createdAt": "2021-01-25T21:25:24Z", "author": {"login": "y1chi"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4544,6 +4546,19 @@ perUser.apply(ParDo.of(new DoFn<KV<String, ValueT>, OutputT>() {\n }));\n {{< /highlight >}}\n \n+{{< highlight python >}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTIxMA=="}, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMDM0MTMxOnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/programming-guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo1MjowOFrOIWqvGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMToyNToxNlrOIZ7GXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTc2OQ==", "bodyText": "\"in the Java SDK.\"", "url": "https://github.com/apache/beam/pull/13591#discussion_r560639769", "createdAt": "2021-01-20T02:52:08Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MzU5Ng==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053596", "createdAt": "2021-01-25T21:25:16Z", "author": {"login": "y1chi"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTc2OQ=="}, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMDM0MTc0OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/programming-guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo1MjoyMFrOIWqvVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMToyNTozMlrOIZ7G1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTgyOQ==", "bodyText": "\"In the Python SDK\"", "url": "https://github.com/apache/beam/pull/13591#discussion_r560639829", "createdAt": "2021-01-20T02:52:20Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MzcxNg==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053716", "createdAt": "2021-01-25T21:25:32Z", "author": {"login": "y1chi"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTgyOQ=="}, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMDM0Mzg2OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/programming-guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo1MzoyOVrOIWqwmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMToyNTozOFrOIZ7HIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDE1NA==", "bodyText": "set() and clear()\nUnless you think it's too ambiguous without the class name. If that's the case, then add these in code font.", "url": "https://github.com/apache/beam/pull/13591#discussion_r560640154", "createdAt": "2021-01-20T02:53:29Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1Mzc5NA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053794", "createdAt": "2021-01-25T21:25:38Z", "author": {"login": "y1chi"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDE1NA=="}, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMDM0NTY4OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/programming-guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQwMjo1NDoyNlrOIWqxug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMToyNjoyMlrOIZ7I0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDQ0Mg==", "bodyText": "I think these are two sentences? \"... or clear(). By default, the timer...\"", "url": "https://github.com/apache/beam/pull/13591#discussion_r560640442", "createdAt": "2021-01-20T02:54:26Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1NDIyNw==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13591#discussion_r564054227", "createdAt": "2021-01-25T21:26:22Z", "author": {"login": "y1chi"}, "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDQ0Mg=="}, "originalCommit": {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2422, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}