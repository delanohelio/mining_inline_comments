{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODg0MDY2", "number": 12701, "title": "[BEAM-10603] Gracefully shutdown the channel reader in the test_stream_impl", "bodyText": "Change-Id: I5fac037a7dcc141ff9d0ff8058fa3de993626c15\nIn the case that the kernel is interrupted we want to gracefully shutdown the grpc streaming request from the TestStream. Otherwsie, this throws an esoteric exception.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-27T18:48:31Z", "url": "https://github.com/apache/beam/pull/12701", "merged": true, "mergeCommit": {"oid": "9f4d54a2e60ec45150437c0b050f4c73cca91f36"}, "closed": true, "closedAt": "2020-09-02T20:16:32Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDE7kzAH2gAyNDc0ODg0MDY2OjQ0YmNiNTMzYmQ3OTFjOTE5NDI0NDcxZDI5NWU4ZjhhZWZiM2Y1ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdErgIogFqTQ3OTk5NTQ5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44bcb533bd791c919424471d295e8f8aefb3f5e7", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/44bcb533bd791c919424471d295e8f8aefb3f5e7", "committedDate": "2020-08-27T18:43:42Z", "message": "Gracefully shutdown the channel reader in the test_stream_impl\n\nChange-Id: I5fac037a7dcc141ff9d0ff8058fa3de993626c15"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTY5MzEz", "url": "https://github.com/apache/beam/pull/12701#pullrequestreview-479969313", "createdAt": "2020-09-01T17:32:04Z", "commit": {"oid": "44bcb533bd791c919424471d295e8f8aefb3f5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMjowNFrOHLBI-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMjowNFrOHLBI-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTA2NQ==", "bodyText": "how do we deal with other statuscodes? Shouldn't we still write the endofstream to the file for other errors?", "url": "https://github.com/apache/beam/pull/12701#discussion_r481315065", "createdAt": "2020-09-01T17:32:04Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/direct/test_stream_impl.py", "diffHunk": "@@ -276,11 +276,20 @@ def _stream_events_from_rpc(endpoint, output_tags, coder, channel, is_alive):\n         output_ids=[str(tag) for tag in output_tags])\n \n     event_stream = stub.Events(event_request)\n-    for e in event_stream:\n-      channel.put(_TestStream.test_stream_payload_to_events(e, coder))\n-      if not is_alive():\n+    try:\n+      for e in event_stream:\n+        channel.put(_TestStream.test_stream_payload_to_events(e, coder))\n+        if not is_alive():\n+          return\n+    except grpc.RpcError as e:\n+      # This happens when the Python interpreter shuts down or whn in a\n+      # notebook environment when the kernel is interrupted.\n+      if e.code() == grpc.StatusCode.UNAVAILABLE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bcb533bd791c919424471d295e8f8aefb3f5e7"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39242ca67609ec09fec9f2539ac843f0f11d70f2", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/39242ca67609ec09fec9f2539ac843f0f11d70f2", "committedDate": "2020-09-01T18:12:45Z", "message": "Add CANCELLED to non error codes for test stream events from grpc\n\nChange-Id: Ic149d64301572201b29813f94bff704e9e7ca778"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTk1NDk1", "url": "https://github.com/apache/beam/pull/12701#pullrequestreview-479995495", "createdAt": "2020-09-01T18:08:42Z", "commit": {"oid": "44bcb533bd791c919424471d295e8f8aefb3f5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODowODo0MlrOHLCZjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODowODo0MlrOHLCZjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNTY5NQ==", "bodyText": "So far I've only seen UNAVAILABLE as a non-error code. But looking at https://developers.google.com/maps-booking/reference/grpc-api/status_codes I think we can also add CANCELLED to not forward the exception.\nAt L290, we do have a finally clause which will run regardless, so the endofstream will always be written to the channel.", "url": "https://github.com/apache/beam/pull/12701#discussion_r481335695", "createdAt": "2020-09-01T18:08:42Z", "author": {"login": "rohdesamuel"}, "path": "sdks/python/apache_beam/runners/direct/test_stream_impl.py", "diffHunk": "@@ -276,11 +276,20 @@ def _stream_events_from_rpc(endpoint, output_tags, coder, channel, is_alive):\n         output_ids=[str(tag) for tag in output_tags])\n \n     event_stream = stub.Events(event_request)\n-    for e in event_stream:\n-      channel.put(_TestStream.test_stream_payload_to_events(e, coder))\n-      if not is_alive():\n+    try:\n+      for e in event_stream:\n+        channel.put(_TestStream.test_stream_payload_to_events(e, coder))\n+        if not is_alive():\n+          return\n+    except grpc.RpcError as e:\n+      # This happens when the Python interpreter shuts down or whn in a\n+      # notebook environment when the kernel is interrupted.\n+      if e.code() == grpc.StatusCode.UNAVAILABLE:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTA2NQ=="}, "originalCommit": {"oid": "44bcb533bd791c919424471d295e8f8aefb3f5e7"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4950, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}