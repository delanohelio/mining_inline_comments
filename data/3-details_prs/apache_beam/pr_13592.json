{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzc1MDg3", "number": 13592, "title": "[BEAM-11403] Cache UnboundedReader per UnboundedSourceRestriction in SDF Wrapper DoFn.", "bodyText": "I don't have a good setup to verify whether this really gives us an improvement. So if it looks good you, I can share it with folks who are active on the discussion thread to see whether it works.\nr: @je-ik\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-21T23:18:16Z", "url": "https://github.com/apache/beam/pull/13592", "merged": true, "mergeCommit": {"oid": "b6243e7711c34735973491393a920fa358ae379d"}, "closed": true, "closedAt": "2020-12-25T21:27:02Z", "author": {"login": "boyuanzz"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoftx6ABqjQxMzgxNDAxNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdplQXzAFqTU1ODc5NjY3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8312d39b48d45279fc03d8c3492fb2e982638d7b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/8312d39b48d45279fc03d8c3492fb2e982638d7b", "committedDate": "2020-12-21T23:48:47Z", "message": "Initialize Cache in DoFn.setUp."}, "afterCommit": {"oid": "f8d762e9a7b12ac5cebd8ef8a402e53856c6294f", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f8d762e9a7b12ac5cebd8ef8a402e53856c6294f", "committedDate": "2020-12-22T00:51:06Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8d762e9a7b12ac5cebd8ef8a402e53856c6294f", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f8d762e9a7b12ac5cebd8ef8a402e53856c6294f", "committedDate": "2020-12-22T00:51:06Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}, "afterCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3d0a8185a0e4937132c38d3acac7ac8356caf25d", "committedDate": "2020-12-22T03:56:54Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTIxNzY2", "url": "https://github.com/apache/beam/pull/13592#pullrequestreview-556921766", "createdAt": "2020-12-22T09:03:22Z", "commit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowMzoyM1rOIJznBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyMjo0OFrOIJ0M2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1MzY3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions, reader);\n          \n          \n            \n                    return new UnboundedSourceAsSDFRestrictionTracker<>(restriction, pipelineOptions, reader);", "url": "https://github.com/apache/beam/pull/13592#discussion_r547153671", "createdAt": "2020-12-22T09:03:23Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -488,7 +519,20 @@ public void splitRestriction(\n         restrictionTracker(\n             @Restriction UnboundedSourceRestriction<OutputT, CheckpointT> restriction,\n             PipelineOptions pipelineOptions) {\n-      return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions);\n+      try {\n+        UnboundedReader reader =\n+            cachedReaders.getIfPresent(\n+                createCacheKey(restriction.getSource(), restriction.getCheckpoint()));\n+        if (reader == null) {\n+          reader =\n+              restriction.getSource().createReader(pipelineOptions, restriction.getCheckpoint());\n+          cachedReaders.put(\n+              createCacheKey(restriction.getSource(), restriction.getCheckpoint()), reader);\n+        }\n+        return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions, reader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NDcyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  UnboundedReader currentReader =\n          \n          \n            \n                  UnboundedReader<OutputT> currentReader =", "url": "https://github.com/apache/beam/pull/13592#discussion_r547154722", "createdAt": "2020-12-22T09:05:34Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -501,6 +545,10 @@ public ProcessContinuation processElement(\n         throws IOException {\n       UnboundedSourceRestriction<OutputT, CheckpointT> initialRestriction =\n           tracker.currentRestriction();\n+      UnboundedReader currentReader =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NTI0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;\n          \n          \n            \n                private Cache<UnboundedSourceRestriction<OutputT, CheckointT>, UnboundedReader> cachedReaders;", "url": "https://github.com/apache/beam/pull/13592#discussion_r547155243", "createdAt": "2020-12-22T09:06:35Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -439,11 +444,37 @@ public IsBounded isBounded() {\n     private static final Logger LOG = LoggerFactory.getLogger(UnboundedSourceAsSDFWrapperFn.class);\n     private static final int DEFAULT_BUNDLE_FINALIZATION_LIMIT_MINS = 10;\n     private final Coder<CheckpointT> checkpointCoder;\n+    private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NzMzMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/beam/pull/13592#discussion_r547157332", "createdAt": "2020-12-22T09:10:51Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -756,23 +810,20 @@ public CheckpointMark getCheckpointMark() {\n       private final PipelineOptions pipelineOptions;\n       private UnboundedSource.UnboundedReader<OutputT> currentReader;\n       private boolean readerHasBeenStarted;\n+      private boolean isDone;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NzcxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      UnboundedReader cachedUnboundedReader) {\n          \n          \n            \n                      UnboundedReader<OutputT> cachedUnboundedReader) {", "url": "https://github.com/apache/beam/pull/13592#discussion_r547157710", "createdAt": "2020-12-22T09:11:35Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -756,23 +810,20 @@ public CheckpointMark getCheckpointMark() {\n       private final PipelineOptions pipelineOptions;\n       private UnboundedSource.UnboundedReader<OutputT> currentReader;\n       private boolean readerHasBeenStarted;\n+      private boolean isDone;\n \n       UnboundedSourceAsSDFRestrictionTracker(\n           UnboundedSourceRestriction<OutputT, CheckpointT> initialRestriction,\n-          PipelineOptions pipelineOptions) {\n+          PipelineOptions pipelineOptions,\n+          UnboundedReader cachedUnboundedReader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTQ2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          currentReader.getCurrentSource(), (CheckpointT) currentReader.getCheckpointMark()),\n          \n          \n            \n                          (UnboundedSource<OutputT, CheckpointT>) currentReader.getCurrentSource(),\n          \n          \n            \n                          (CheckpointT) currentReader.getCheckpointMark()),", "url": "https://github.com/apache/beam/pull/13592#discussion_r547159460", "createdAt": "2020-12-22T09:15:07Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -527,6 +575,12 @@ public ProcessContinuation processElement(\n             currentRestriction.getCheckpoint()::finalizeCheckpoint);\n       }\n \n+      // Update the readers cache with latest CheckpointMark.\n+      cachedReaders.put(\n+          createCacheKey(\n+              currentReader.getCurrentSource(), (CheckpointT) currentReader.getCheckpointMark()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjU0MQ==", "bodyText": "I think this could be way lower. We insert the reader back to the cache after checkpoint, so if it is not reused after few seconds, it is likely not be reused at all. Maybe 10 seconds might be enough?", "url": "https://github.com/apache/beam/pull/13592#discussion_r547162541", "createdAt": "2020-12-22T09:21:11Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -439,11 +444,37 @@ public IsBounded isBounded() {\n     private static final Logger LOG = LoggerFactory.getLogger(UnboundedSourceAsSDFWrapperFn.class);\n     private static final int DEFAULT_BUNDLE_FINALIZATION_LIMIT_MINS = 10;\n     private final Coder<CheckpointT> checkpointCoder;\n+    private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;\n \n     private UnboundedSourceAsSDFWrapperFn(Coder<CheckpointT> checkpointCoder) {\n       this.checkpointCoder = checkpointCoder;\n     }\n \n+    private UnboundedSourceRestriction createCacheKey(\n+        UnboundedSource<OutputT, CheckpointT> source, CheckpointT checkpoint) {\n+      // For caching reader, we don't care about the watermark.\n+      return UnboundedSourceRestriction.create(\n+          source, checkpoint, BoundedWindow.TIMESTAMP_MIN_VALUE);\n+    }\n+\n+    @Setup\n+    public void setUp() throws Exception {\n+      cachedReaders =\n+          CacheBuilder.newBuilder()\n+              .expireAfterWrite(5, TimeUnit.MINUTES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MzM1Mw==", "bodyText": "This looks dangerous. What if we are still using the reader inside processElement? This is likely to be called from different thread, so we need a synchronization there and not close the reader if being used.", "url": "https://github.com/apache/beam/pull/13592#discussion_r547163353", "createdAt": "2020-12-22T09:22:48Z", "author": {"login": "je-ik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -439,11 +444,37 @@ public IsBounded isBounded() {\n     private static final Logger LOG = LoggerFactory.getLogger(UnboundedSourceAsSDFWrapperFn.class);\n     private static final int DEFAULT_BUNDLE_FINALIZATION_LIMIT_MINS = 10;\n     private final Coder<CheckpointT> checkpointCoder;\n+    private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;\n \n     private UnboundedSourceAsSDFWrapperFn(Coder<CheckpointT> checkpointCoder) {\n       this.checkpointCoder = checkpointCoder;\n     }\n \n+    private UnboundedSourceRestriction createCacheKey(\n+        UnboundedSource<OutputT, CheckpointT> source, CheckpointT checkpoint) {\n+      // For caching reader, we don't care about the watermark.\n+      return UnboundedSourceRestriction.create(\n+          source, checkpoint, BoundedWindow.TIMESTAMP_MIN_VALUE);\n+    }\n+\n+    @Setup\n+    public void setUp() throws Exception {\n+      cachedReaders =\n+          CacheBuilder.newBuilder()\n+              .expireAfterWrite(5, TimeUnit.MINUTES)\n+              .maximumSize(100)\n+              .removalListener(\n+                  (RemovalListener<UnboundedSourceRestriction, UnboundedReader>)\n+                      removalNotification -> {\n+                        try {\n+                          removalNotification.getValue().close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3451f7e52e3fae84184f73b017c426cc18481d90", "author": {"user": {"login": "boyuanzz", "name": "Boyuan Zhang"}}, "url": "https://github.com/apache/beam/commit/3451f7e52e3fae84184f73b017c426cc18481d90", "committedDate": "2020-12-22T19:05:58Z", "message": "Update sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java\n\nCo-authored-by: Jan Lukavsk\u00fd <je.ik@seznam.cz>"}, "afterCommit": {"oid": "2d7e6b9ae68f9e13ae48e47c3b372707c9844d57", "author": {"user": {"login": "boyuanzz", "name": "Boyuan Zhang"}}, "url": "https://github.com/apache/beam/commit/2d7e6b9ae68f9e13ae48e47c3b372707c9844d57", "committedDate": "2020-12-22T20:43:13Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00b1007ae4c09f30faad20076c88111a3b7c31c7", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/00b1007ae4c09f30faad20076c88111a3b7c31c7", "committedDate": "2020-12-23T01:23:38Z", "message": "more changes"}, "afterCommit": {"oid": "58da8b3d171f7493fbf9275becf679936e518947", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/58da8b3d171f7493fbf9275becf679936e518947", "committedDate": "2020-12-23T04:34:18Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzY1Mzk0", "url": "https://github.com/apache/beam/pull/13592#pullrequestreview-557765394", "createdAt": "2020-12-23T10:00:37Z", "commit": {"oid": "58da8b3d171f7493fbf9275becf679936e518947"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODIxNDc4", "url": "https://github.com/apache/beam/pull/13592#pullrequestreview-557821478", "createdAt": "2020-12-23T11:51:11Z", "commit": {"oid": "58da8b3d171f7493fbf9275becf679936e518947"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58da8b3d171f7493fbf9275becf679936e518947", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/58da8b3d171f7493fbf9275becf679936e518947", "committedDate": "2020-12-23T04:34:18Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}, "afterCommit": {"oid": "e0b4bfc60d4cad8d61693243da1d2e19615a2f7c", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/e0b4bfc60d4cad8d61693243da1d2e19615a2f7c", "committedDate": "2020-12-23T23:39:51Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98ee1f178a9e80f4694f86775c06a54ecf82abb8", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/98ee1f178a9e80f4694f86775c06a54ecf82abb8", "committedDate": "2020-12-24T01:45:49Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0b4bfc60d4cad8d61693243da1d2e19615a2f7c", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/e0b4bfc60d4cad8d61693243da1d2e19615a2f7c", "committedDate": "2020-12-23T23:39:51Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}, "afterCommit": {"oid": "98ee1f178a9e80f4694f86775c06a54ecf82abb8", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/98ee1f178a9e80f4694f86775c06a54ecf82abb8", "committedDate": "2020-12-24T01:45:49Z", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4Nzk2Njcx", "url": "https://github.com/apache/beam/pull/13592#pullrequestreview-558796671", "createdAt": "2020-12-25T09:52:30Z", "commit": {"oid": "98ee1f178a9e80f4694f86775c06a54ecf82abb8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4220, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}