{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTg5NDQy", "number": 12083, "title": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "bodyText": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-25T00:39:20Z", "url": "https://github.com/apache/beam/pull/12083", "merged": true, "mergeCommit": {"oid": "96bf51428670d9285491171f0cc4107e94ce3750"}, "closed": true, "closedAt": "2020-07-06T23:31:07Z", "author": {"login": "ajamato"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcujzoKABqjM0Nzk4OTY2NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyV35CgBqjM1MTcyMzE3NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "876734c2181a39f6ae37443e82cb6d8af41cbf0b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/876734c2181a39f6ae37443e82cb6d8af41cbf0b", "committedDate": "2020-06-25T00:35:19Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "284dd3a187bbc61c1defc865656b5111488b239f", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/284dd3a187bbc61c1defc865656b5111488b239f", "committedDate": "2020-06-25T00:49:26Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "284dd3a187bbc61c1defc865656b5111488b239f", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/284dd3a187bbc61c1defc865656b5111488b239f", "committedDate": "2020-06-25T00:49:26Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "52fd2a59f71d3a1cf5080cdfa840ce0cd6e57794", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/52fd2a59f71d3a1cf5080cdfa840ce0cd6e57794", "committedDate": "2020-06-25T22:03:30Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52fd2a59f71d3a1cf5080cdfa840ce0cd6e57794", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/52fd2a59f71d3a1cf5080cdfa840ce0cd6e57794", "committedDate": "2020-06-25T22:03:30Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "9b93be8b54a7abc2486b6ee70f9c04814bcd0970", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/9b93be8b54a7abc2486b6ee70f9c04814bcd0970", "committedDate": "2020-06-25T22:57:13Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b93be8b54a7abc2486b6ee70f9c04814bcd0970", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/9b93be8b54a7abc2486b6ee70f9c04814bcd0970", "committedDate": "2020-06-25T22:57:13Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "96c5b62d2a486bf0b916bc24eca4f283bfd9ea98", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/96c5b62d2a486bf0b916bc24eca4f283bfd9ea98", "committedDate": "2020-06-25T23:59:25Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96c5b62d2a486bf0b916bc24eca4f283bfd9ea98", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/96c5b62d2a486bf0b916bc24eca4f283bfd9ea98", "committedDate": "2020-06-25T23:59:25Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "7df9ceb335cfff140230cf07688447fe02bf67bf", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7df9ceb335cfff140230cf07688447fe02bf67bf", "committedDate": "2020-06-26T00:49:17Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7df9ceb335cfff140230cf07688447fe02bf67bf", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7df9ceb335cfff140230cf07688447fe02bf67bf", "committedDate": "2020-06-26T00:49:17Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "5840e80bda23b550dde2a33853eca0edef4bb1a0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/5840e80bda23b550dde2a33853eca0edef4bb1a0", "committedDate": "2020-06-26T20:32:43Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5840e80bda23b550dde2a33853eca0edef4bb1a0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/5840e80bda23b550dde2a33853eca0edef4bb1a0", "committedDate": "2020-06-26T20:32:43Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "da5fbdafc8e9b06efa554834c86c9f198010d7f7", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/da5fbdafc8e9b06efa554834c86c9f198010d7f7", "committedDate": "2020-06-29T21:58:01Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da5fbdafc8e9b06efa554834c86c9f198010d7f7", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/da5fbdafc8e9b06efa554834c86c9f198010d7f7", "committedDate": "2020-06-29T21:58:01Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/bdb3d0408241bfd634eba3004ffdbf67c1cac0cd", "committedDate": "2020-06-30T00:53:03Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTc1OTk5", "url": "https://github.com/apache/beam/pull/12083#pullrequestreview-440575999", "createdAt": "2020-07-01T06:23:48Z", "commit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjoyMzo0OFrOGrYUag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjozMzo0MlrOGrYjWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0MDM5NA==", "bodyText": "I believe the protos might be immutable, and creating new instances when you call setX on them. You can do the whole thing fluently:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Map<String, String> labelMap = new HashMap<>();\n          \n          \n            \n                  JobConfiguration config = new JobConfiguration();\n          \n          \n            \n                  config.setCopy(copyConfig);\n          \n          \n            \n                  config.setLabels(this.bqIOMetadata.addAdditionalJobLabels(labelMap));\n          \n          \n            \n                  Job job = new Job().setJobReference(jobRef).setConfiguration(config);\n          \n          \n            \n                  Job job = new Job()\n          \n          \n            \n                        .setJobReference(jobRef)\n          \n          \n            \n                        .setConfiguration(new JobConfiguration()\n          \n          \n            \n                              .setCopy(copyConfig)\n          \n          \n            \n                              .setLabels(this.bqIOMetadata.addAdditionalJobLabels(labelMap)));", "url": "https://github.com/apache/beam/pull/12083#discussion_r448140394", "createdAt": "2020-07-01T06:23:48Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -216,11 +221,11 @@ public void startQueryJob(JobReference jobRef, JobConfigurationQuery queryConfig\n     @Override\n     public void startCopyJob(JobReference jobRef, JobConfigurationTableCopy copyConfig)\n         throws IOException, InterruptedException {\n-      Job job =\n-          new Job()\n-              .setJobReference(jobRef)\n-              .setConfiguration(new JobConfiguration().setCopy(copyConfig));\n-\n+      Map<String, String> labelMap = new HashMap<>();\n+      JobConfiguration config = new JobConfiguration();\n+      config.setCopy(copyConfig);\n+      config.setLabels(this.bqIOMetadata.addAdditionalJobLabels(labelMap));\n+      Job job = new Job().setJobReference(jobRef).setConfiguration(config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0MDUzNA==", "bodyText": "Same for other occurrences in this file", "url": "https://github.com/apache/beam/pull/12083#discussion_r448140534", "createdAt": "2020-07-01T06:24:14Z", "author": {"login": "pabloem"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -216,11 +221,11 @@ public void startQueryJob(JobReference jobRef, JobConfigurationQuery queryConfig\n     @Override\n     public void startCopyJob(JobReference jobRef, JobConfigurationTableCopy copyConfig)\n         throws IOException, InterruptedException {\n-      Job job =\n-          new Job()\n-              .setJobReference(jobRef)\n-              .setConfiguration(new JobConfiguration().setCopy(copyConfig));\n-\n+      Map<String, String> labelMap = new HashMap<>();\n+      JobConfiguration config = new JobConfiguration();\n+      config.setCopy(copyConfig);\n+      config.setLabels(this.bqIOMetadata.addAdditionalJobLabels(labelMap));\n+      Job job = new Job().setJobReference(jobRef).setConfiguration(config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0MDM5NA=="}, "originalCommit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0MzU4NQ==", "bodyText": "Same as Python - will this timeout first, or fail immediately?", "url": "https://github.com/apache/beam/pull/12083#discussion_r448143585", "createdAt": "2020-07-01T06:31:52Z", "author": {"login": "pabloem"}, "path": "sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/util/GceMetadataUtil.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.gcp.util;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.nio.charset.Charset;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.io.CharStreams;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.DefaultHttpClient;\n+import org.apache.http.params.BasicHttpParams;\n+import org.apache.http.params.HttpConnectionParams;\n+import org.apache.http.params.HttpParams;\n+\n+/** */\n+public class GceMetadataUtil {\n+  private static final String BASE_METADATA_URL = \"http://metadata/computeMetadata/v1/\";\n+\n+  static String fetchMetadata(String key) {\n+    int timeoutMillis = 5000;\n+    final HttpParams httpParams = new BasicHttpParams();\n+    HttpConnectionParams.setConnectionTimeout(httpParams, timeoutMillis);\n+    HttpClient client = new DefaultHttpClient(httpParams);\n+    HttpGet request = new HttpGet(BASE_METADATA_URL + key);\n+    request.setHeader(\"Metadata-Flavor\", \"Google\");\n+\n+    try {\n+      HttpResponse response = client.execute(request);\n+      if (response.getStatusLine().getStatusCode() != 200) {\n+        // May mean its running on a non DataflowRunner, in which case it's perfectly normal.\n+        return \"\";\n+      }\n+      InputStream in = response.getEntity().getContent();\n+      try (final Reader reader = new InputStreamReader(in, Charset.defaultCharset())) {\n+        return CharStreams.toString(reader);\n+      }\n+    } catch (IOException e) {\n+      // May mean its running on a non DataflowRunner, in which case it's perfectly normal.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0NDIxNg==", "bodyText": "An intersting example: What if the worker running this code is a GCE VM, but not on Dataflow (e.g. Dataproc, DirectRunner on GCE VM)? Will that case be handled properly? This should be exercised by postcommits, I'd think...", "url": "https://github.com/apache/beam/pull/12083#discussion_r448144216", "createdAt": "2020-07-01T06:33:42Z", "author": {"login": "pabloem"}, "path": "sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/util/GceMetadataUtil.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.gcp.util;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.nio.charset.Charset;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.io.CharStreams;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.DefaultHttpClient;\n+import org.apache.http.params.BasicHttpParams;\n+import org.apache.http.params.HttpConnectionParams;\n+import org.apache.http.params.HttpParams;\n+\n+/** */\n+public class GceMetadataUtil {\n+  private static final String BASE_METADATA_URL = \"http://metadata/computeMetadata/v1/\";\n+\n+  static String fetchMetadata(String key) {\n+    int timeoutMillis = 5000;\n+    final HttpParams httpParams = new BasicHttpParams();\n+    HttpConnectionParams.setConnectionTimeout(httpParams, timeoutMillis);\n+    HttpClient client = new DefaultHttpClient(httpParams);\n+    HttpGet request = new HttpGet(BASE_METADATA_URL + key);\n+    request.setHeader(\"Metadata-Flavor\", \"Google\");\n+\n+    try {\n+      HttpResponse response = client.execute(request);\n+      if (response.getStatusLine().getStatusCode() != 200) {\n+        // May mean its running on a non DataflowRunner, in which case it's perfectly normal.\n+        return \"\";\n+      }\n+      InputStream in = response.getEntity().getContent();\n+      try (final Reader reader = new InputStreamReader(in, Charset.defaultCharset())) {\n+        return CharStreams.toString(reader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdb3d0408241bfd634eba3004ffdbf67c1cac0cd", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/bdb3d0408241bfd634eba3004ffdbf67c1cac0cd", "committedDate": "2020-06-30T00:53:03Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "4879b742e1c4475fbfff8eed763799709e08bc6b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4879b742e1c4475fbfff8eed763799709e08bc6b", "committedDate": "2020-07-02T02:10:37Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dede89a89e6b1b8c5a62b7c5d30759841badbe0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0dede89a89e6b1b8c5a62b7c5d30759841badbe0", "committedDate": "2020-07-06T18:51:12Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4879b742e1c4475fbfff8eed763799709e08bc6b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4879b742e1c4475fbfff8eed763799709e08bc6b", "committedDate": "2020-07-02T02:10:37Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}, "afterCommit": {"oid": "0dede89a89e6b1b8c5a62b7c5d30759841badbe0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0dede89a89e6b1b8c5a62b7c5d30759841badbe0", "committedDate": "2020-07-06T18:51:12Z", "message": "[BEAM-10317] Java - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3834, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}