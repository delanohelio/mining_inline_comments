{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4OTgyOTAw", "number": 12601, "title": "[BEAM-9891] Generate query execution summary table after finishing jobs", "bodyText": "Generate a query runtime summary table on the command line after finishing all jobs.\nJobs with\"failed\" status will leave runtime fields blank.\nR: @amaliujia\nCC: @kennknowles\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-17T17:59:36Z", "url": "https://github.com/apache/beam/pull/12601", "merged": true, "mergeCommit": {"oid": "32b67ec383cb1b8699fb98c5f2bf5c9a2fa770db"}, "closed": true, "closedAt": "2020-08-17T22:27:47Z", "author": {"login": "Imfuyuwei"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_2LqBgH2gAyNDY4OTgyOTAwOmFiNDMyODY4ZWU1OTg1MDMzMTRhNWU4ODUyN2VjZmQ5Y2Q2ZDc3N2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_6INHAFqTQ2ODg3MzAzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab432868ee598503314a5e88527ecfd9cd6d777a", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/ab432868ee598503314a5e88527ecfd9cd6d777a", "committedDate": "2020-08-17T17:50:55Z", "message": "[BEAM-9891] Generate query execution summary table after finishing jobs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODExMzI3", "url": "https://github.com/apache/beam/pull/12601#pullrequestreview-468811327", "createdAt": "2020-08-17T20:30:39Z", "commit": {"oid": "ab432868ee598503314a5e88527ecfd9cd6d777a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDozMDozOVrOHB50_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDozMzo0MVrOHB57EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc1ODA3OA==", "bodyText": "Can you replace this with LOG? Here is an example of LOG: https://github.com/apache/beam/blob/master/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java#L75", "url": "https://github.com/apache/beam/pull/12601#discussion_r471758078", "createdAt": "2020-08-17T20:30:39Z", "author": {"login": "amaliujia"}, "path": "sdks/java/testing/tpcds/src/main/java/org/apache/beam/sdk/tpcds/SqlTransformRunner.java", "diffHunk": "@@ -121,19 +152,26 @@ public static void runUsingSqlTransform(String[] args) throws Exception {\n             String queryString = QueryReader.readQuery(queryNameArr[i]);\n             PCollectionTuple tables = getTables(pipelines[i], csvFormat, queryNameArr[i]);\n \n-            tables\n-                    .apply(\n-                            SqlTransform.query(queryString))\n-                    .apply(\n-                            MapElements.into(TypeDescriptors.strings()).via((Row row) -> row.toString()))\n-                    .apply(TextIO.write()\n-                            .to(resultDirectory + \"/\" + dataSize + \"/\" + pipelines[i].getOptions().getJobName())\n-                            .withSuffix(\".txt\")\n-                            .withNumShards(1));\n+            try {\n+                tables\n+                        .apply(\n+                                SqlTransform.query(queryString))\n+                        .apply(\n+                                MapElements.into(TypeDescriptors.strings()).via((Row row) -> row.toString()))\n+                        .apply(TextIO.write()\n+                                .to(RESULT_DIRECTORY + \"/\" + dataSize + \"/\" + pipelines[i].getOptions().getJobName())\n+                                .withSuffix(\".txt\")\n+                                .withNumShards(1));\n+            } catch (Exception e) {\n+                System.out.println(queryNameArr[i] + \" failed to execute\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab432868ee598503314a5e88527ecfd9cd6d777a"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc1OTM4OA==", "bodyText": "Have also check the state of the PipelineResult: https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/PipelineResult.java#L38?\nMake sure only print successful when job state is successful.", "url": "https://github.com/apache/beam/pull/12601#discussion_r471759388", "createdAt": "2020-08-17T20:33:07Z", "author": {"login": "amaliujia"}, "path": "sdks/java/testing/tpcds/src/main/java/org/apache/beam/sdk/tpcds/SqlTransformRunner.java", "diffHunk": "@@ -97,7 +128,7 @@ public static void runUsingSqlTransform(String[] args) throws Exception {\n \n         // Using ExecutorService and CompletionService to fulfill multi-threading functionality\n         ExecutorService executor = Executors.newFixedThreadPool(nThreads);\n-        CompletionService<PipelineResult> completion = new ExecutorCompletionService<>(executor);\n+        CompletionService<TpcdsRunResult> completion = new ExecutorCompletionService<>(executor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab432868ee598503314a5e88527ecfd9cd6d777a"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc1OTYzMg==", "bodyText": "check pipeline result state.", "url": "https://github.com/apache/beam/pull/12601#discussion_r471759632", "createdAt": "2020-08-17T20:33:41Z", "author": {"login": "amaliujia"}, "path": "sdks/java/testing/tpcds/src/main/java/org/apache/beam/sdk/tpcds/TpcdsRun.java", "diffHunk": "@@ -24,17 +24,30 @@\n /**\n  * To fulfill multi-threaded execution\n  */\n-public class TpcdsRun implements Callable<PipelineResult> {\n+public class TpcdsRun implements Callable<TpcdsRunResult> {\n     private final Pipeline pipeline;\n \n     public TpcdsRun (Pipeline pipeline) {\n         this.pipeline = pipeline;\n     }\n \n     @Override\n-    public PipelineResult call() {\n-        PipelineResult pipelineResult = pipeline.run();\n-        pipelineResult.waitUntilFinish();\n-        return pipelineResult;\n+    public TpcdsRunResult call() {\n+        TpcdsRunResult tpcdsRunResult;\n+\n+        try {\n+            PipelineResult pipelineResult = pipeline.run();\n+            long startTimeStamp = System.currentTimeMillis();\n+            pipelineResult.waitUntilFinish();\n+            long endTimeStamp = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab432868ee598503314a5e88527ecfd9cd6d777a"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2c9c0b244df4f924bcd365892fb393ec59b2a8", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/8e2c9c0b244df4f924bcd365892fb393ec59b2a8", "committedDate": "2020-08-17T21:29:59Z", "message": "Print error message using LOG, check PipelineResult's state"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODcyOTg4", "url": "https://github.com/apache/beam/pull/12601#pullrequestreview-468872988", "createdAt": "2020-08-17T22:26:40Z", "commit": {"oid": "8e2c9c0b244df4f924bcd365892fb393ec59b2a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMjoyNjo0MFrOHB86ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMjoyNjo0MFrOHB86ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgwODY3NQ==", "bodyText": "Nit: add parentheses around state == State.DONE;, which increases readability.", "url": "https://github.com/apache/beam/pull/12601#discussion_r471808675", "createdAt": "2020-08-17T22:26:40Z", "author": {"login": "amaliujia"}, "path": "sdks/java/testing/tpcds/src/main/java/org/apache/beam/sdk/tpcds/TpcdsRun.java", "diffHunk": "@@ -19,22 +19,38 @@\n \n import org.apache.beam.sdk.Pipeline;\n import org.apache.beam.sdk.PipelineResult;\n+import org.apache.beam.sdk.PipelineResult.State;\n import java.util.concurrent.Callable;\n \n /**\n  * To fulfill multi-threaded execution\n  */\n-public class TpcdsRun implements Callable<PipelineResult> {\n+public class TpcdsRun implements Callable<TpcdsRunResult> {\n     private final Pipeline pipeline;\n \n     public TpcdsRun (Pipeline pipeline) {\n         this.pipeline = pipeline;\n     }\n \n     @Override\n-    public PipelineResult call() {\n-        PipelineResult pipelineResult = pipeline.run();\n-        pipelineResult.waitUntilFinish();\n-        return pipelineResult;\n+    public TpcdsRunResult call() {\n+        TpcdsRunResult tpcdsRunResult;\n+\n+        try {\n+            PipelineResult pipelineResult = pipeline.run();\n+            long startTimeStamp = System.currentTimeMillis();\n+            State state = pipelineResult.waitUntilFinish();\n+            long endTimeStamp = System.currentTimeMillis();\n+\n+            // Make sure to set the job status to be successful only when pipelineResult's final state is DONE.\n+            boolean isSuccessful = state == State.DONE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e2c9c0b244df4f924bcd365892fb393ec59b2a8"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODczMDM5", "url": "https://github.com/apache/beam/pull/12601#pullrequestreview-468873039", "createdAt": "2020-08-17T22:26:46Z", "commit": {"oid": "8e2c9c0b244df4f924bcd365892fb393ec59b2a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3572, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}