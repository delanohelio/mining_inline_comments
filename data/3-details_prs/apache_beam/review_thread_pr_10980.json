{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTAyODQz", "number": 10980, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTowMjoxMlrODjPWAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMDowN1rODjPfhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mjc4MTQ0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/test_stream.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTowMjoxMlrOFu8FMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTowMjoxMlrOFu8FMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2MzE4NA==", "bodyText": "can you do this for processing time events as well", "url": "https://github.com/apache/beam/pull/10980#discussion_r384763184", "createdAt": "2020-02-26T21:02:12Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/testing/test_stream.py", "diffHunk": "@@ -148,9 +148,8 @@ def __lt__(self, other):\n   def to_runner_api(self, unused_element_coder):\n     tag = 'None' if self.tag is None else self.tag\n \n-    # Assert that no prevision is lost.\n-    assert 1000 * (\n-        self.new_watermark.micros // 1000) == self.new_watermark.micros\n+    # Assert that no precision is lost.\n+    assert self.new_watermark.micros % 1000 == 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956e92f4a82d7250f832b4e3ab832098f24dcb48"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjgwMTgwOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/test_stream.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTowODo1MlrOFu8R4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTowODo1MlrOFu8R4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2NjQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                :param coder: The coder to encode/decode elements.\n          \n          \n            \n                :param events: Events can be given and must be a subset of the output_tags.\n          \n          \n            \n                :param output_tags: Can be specified to allow for adding outputs that\n          \n          \n            \n                                    produce no output.\n          \n          \n            \n                :param coder: The coder to encode/decode elements.\n          \n          \n            \n                :param events: The initial set of events. If specified, the events tags must exist in the output_tags.\n          \n          \n            \n                :param output_tags: Initial set of outputs. If no event references an output tag, no output will be produced for that tag.", "url": "https://github.com/apache/beam/pull/10980#discussion_r384766435", "createdAt": "2020-02-26T21:08:52Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/testing/test_stream.py", "diffHunk": "@@ -183,9 +182,20 @@ class TestStream(PTransform):\n   Each event emits elements, advances the watermark or advances the processing\n   time. After all of the specified elements are emitted, ceases to produce\n   output.\n+\n+  When expanded, if only the default output or only one output tag is specified,\n+  then a PCollection will be returned. Otherwise, a dictionary of output names\n+  to PCollection will be returned.\n   \"\"\"\n   def __init__(\n       self, coder=coders.FastPrimitivesCoder(), events=None, output_tags=None):\n+    \"\"\"\n+    :param coder: The coder to encode/decode elements.\n+    :param events: Events can be given and must be a subset of the output_tags.\n+    :param output_tags: Can be specified to allow for adding outputs that\n+                        produce no output.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956e92f4a82d7250f832b4e3ab832098f24dcb48"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjgwNTgzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/test_stream.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMDowN1rOFu8UeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMDowN1rOFu8UeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2NzA5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              When expanded, if only the default output or only one output tag is specified,\n          \n          \n            \n              then a PCollection will be returned. Otherwise, a dictionary of output names\n          \n          \n            \n              to PCollection will be returned.\n          \n          \n            \n              Applying the PTransform will return a single PCollection if only the default output or only one output tag has been used. Otherwise a dictionary of output names to PCollections will be returned.", "url": "https://github.com/apache/beam/pull/10980#discussion_r384767097", "createdAt": "2020-02-26T21:10:07Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/testing/test_stream.py", "diffHunk": "@@ -183,9 +182,20 @@ class TestStream(PTransform):\n   Each event emits elements, advances the watermark or advances the processing\n   time. After all of the specified elements are emitted, ceases to produce\n   output.\n+\n+  When expanded, if only the default output or only one output tag is specified,\n+  then a PCollection will be returned. Otherwise, a dictionary of output names\n+  to PCollection will be returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956e92f4a82d7250f832b4e3ab832098f24dcb48"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1929, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}