{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjMyOTM2", "number": 12786, "title": "[BEAM-7925]Add Column Projection to ParquetIO", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-08T18:51:40Z", "url": "https://github.com/apache/beam/pull/12786", "merged": true, "mergeCommit": {"oid": "57055262e7a6bff447eef2df1e6efcda754939ca"}, "closed": true, "closedAt": "2020-09-09T21:54:36Z", "author": {"login": "danielxjd"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG8LnFAH2gAyNDgyMjMyOTM2OjQwMjc1YWJiNzFlNTExZTU1M2I5YzBjMzVhNTgzNGY0NGYyMWFhMGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHSPSvAFqTQ4NTM3OTg2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "40275abb71e511e553b9c0c35a5834f44f21aa0a", "author": {"user": {"login": "danielxjd", "name": "Jiadai Xia"}}, "url": "https://github.com/apache/beam/commit/40275abb71e511e553b9c0c35a5834f44f21aa0a", "committedDate": "2020-09-08T18:47:46Z", "message": "[BEAM-7925]add projection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25a2368f8065daf402347c8b2dbee6a1d60e007a", "author": {"user": {"login": "danielxjd", "name": "Jiadai Xia"}}, "url": "https://github.com/apache/beam/commit/25a2368f8065daf402347c8b2dbee6a1d60e007a", "committedDate": "2020-09-08T18:50:24Z", "message": "[BEAM-7925]spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2", "author": {"user": {"login": "danielxjd", "name": "Jiadai Xia"}}, "url": "https://github.com/apache/beam/commit/a334bac48f808380386e1a7bb15a68d159045ef2", "committedDate": "2020-09-08T20:25:20Z", "message": "[BEAM-7925]add schema encoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTQ3NjEz", "url": "https://github.com/apache/beam/pull/12786#pullrequestreview-484547613", "createdAt": "2020-09-08T22:53:16Z", "commit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjo1MzoxN1rOHOwoAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzo1ODo0NFrOHOx2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzODc4NQ==", "bodyText": "Please also mention that withSplit() will be enabled automatically.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485238785", "createdAt": "2020-09-08T22:53:17Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -135,6 +135,16 @@\n  * ...\n  * }</pre>\n  *\n+ * <p>Reading with projection can be enabled with the projection schema as following. The\n+ * projection_schema contains only the column that we would like to read and encoder_schema contains\n+ * all field but with the unwanted columns changed to nullable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzOTc5NA==", "bodyText": "I think getProjectionSchema represents the field better.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485239794", "createdAt": "2020-09-08T22:56:19Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -194,6 +204,10 @@ public static ReadFiles readFiles(Schema schema) {\n \n     abstract @Nullable Schema getSchema();\n \n+    abstract @Nullable Schema getProjection();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzOTg2MQ==", "bodyText": "ditto.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485239861", "createdAt": "2020-09-08T22:56:30Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -209,6 +223,10 @@ public static ReadFiles readFiles(Schema schema) {\n \n       abstract Builder setSchema(Schema schema);\n \n+      abstract Builder setProjectionEncoder(Schema schema);\n+\n+      abstract Builder setProjection(Schema schema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0MDMwMg==", "bodyText": "ditto.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485240302", "createdAt": "2020-09-08T22:57:56Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -269,6 +298,10 @@ public void populateDisplayData(DisplayData.Builder builder) {\n \n     abstract @Nullable GenericData getAvroDataModel();\n \n+    abstract @Nullable Schema getProjectionEncoder();\n+\n+    abstract @Nullable Schema getProjection();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0MDMzNg==", "bodyText": "ditto.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485240336", "createdAt": "2020-09-08T22:58:03Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -279,6 +312,10 @@ public void populateDisplayData(DisplayData.Builder builder) {\n \n       abstract Builder setAvroDataModel(GenericData model);\n \n+      abstract Builder setProjectionEncoder(Schema schema);\n+\n+      abstract Builder setProjection(Schema schema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MjA2OA==", "bodyText": "To minimize duplication:\nSchema coderSchema = getProjection() == null ? getSchema() : getProjectionEncoder(); \nreturn input\n              .apply(ParDo.of(new SplitReadFn(getAvroDataModel(), getProjection())))\n              .setCoder(AvroCoder.of(coderSchema));", "url": "https://github.com/apache/beam/pull/12786#discussion_r485252068", "createdAt": "2020-09-08T23:35:53Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -299,9 +344,14 @@ public ReadFiles withSplit() {\n     public PCollection<GenericRecord> expand(PCollection<FileIO.ReadableFile> input) {\n       checkNotNull(getSchema(), \"Schema can not be null\");\n       if (isSplittable()) {\n+        if (getProjection() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MzU3NA==", "bodyText": "Is there any reason to use String instead of Schema? Looks like this is referred only once.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485253574", "createdAt": "2020-09-08T23:40:47Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -312,12 +362,14 @@ public ReadFiles withSplit() {\n     static class SplitReadFn extends DoFn<FileIO.ReadableFile, GenericRecord> {\n       private Class<? extends GenericData> modelClass;\n       private static final Logger LOG = LoggerFactory.getLogger(SplitReadFn.class);\n+      private String requestSchemaString;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1NTYxMw==", "bodyText": "Just out of curiosity: hadoopConf is from options, is this necessary to set properties from options again?", "url": "https://github.com/apache/beam/pull/12786#discussion_r485255613", "createdAt": "2020-09-08T23:47:46Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -336,36 +388,41 @@ public void processElement(\n                 + tracker.currentRestriction().getFrom()\n                 + \" to \"\n                 + tracker.currentRestriction().getTo());\n-        ParquetReadOptions options = HadoopReadOptions.builder(getConfWithModelClass()).build();\n-        ParquetFileReader reader =\n-            ParquetFileReader.open(new BeamParquetInputFile(file.openSeekable()), options);\n+        Configuration conf = getConfWithModelClass();\n         GenericData model = null;\n         if (modelClass != null) {\n           model = (GenericData) modelClass.getMethod(\"get\").invoke(null);\n         }\n-        ReadSupport<GenericRecord> readSupport = new AvroReadSupport<GenericRecord>(model);\n-\n+        AvroReadSupport<GenericRecord> readSupport = new AvroReadSupport<GenericRecord>(model);\n+        if (requestSchemaString != null) {\n+          AvroReadSupport.setRequestedProjection(\n+              conf, new Schema.Parser().parse(requestSchemaString));\n+        }\n+        ParquetReadOptions options = HadoopReadOptions.builder(conf).build();\n+        ParquetFileReader reader =\n+            ParquetFileReader.open(new BeamParquetInputFile(file.openSeekable()), options);\n         Filter filter = checkNotNull(options.getRecordFilter(), \"filter\");\n         Configuration hadoopConf = ((HadoopReadOptions) options).getConf();\n+        for (String property : options.getPropertyNames()) {\n+          hadoopConf.set(property, options.getProperty(property));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1NjQ2Mg==", "bodyText": "Is this okay to be skipped?", "url": "https://github.com/apache/beam/pull/12786#discussion_r485256462", "createdAt": "2020-09-08T23:50:31Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -336,36 +388,41 @@ public void processElement(\n                 + tracker.currentRestriction().getFrom()\n                 + \" to \"\n                 + tracker.currentRestriction().getTo());\n-        ParquetReadOptions options = HadoopReadOptions.builder(getConfWithModelClass()).build();\n-        ParquetFileReader reader =\n-            ParquetFileReader.open(new BeamParquetInputFile(file.openSeekable()), options);\n+        Configuration conf = getConfWithModelClass();\n         GenericData model = null;\n         if (modelClass != null) {\n           model = (GenericData) modelClass.getMethod(\"get\").invoke(null);\n         }\n-        ReadSupport<GenericRecord> readSupport = new AvroReadSupport<GenericRecord>(model);\n-\n+        AvroReadSupport<GenericRecord> readSupport = new AvroReadSupport<GenericRecord>(model);\n+        if (requestSchemaString != null) {\n+          AvroReadSupport.setRequestedProjection(\n+              conf, new Schema.Parser().parse(requestSchemaString));\n+        }\n+        ParquetReadOptions options = HadoopReadOptions.builder(conf).build();\n+        ParquetFileReader reader =\n+            ParquetFileReader.open(new BeamParquetInputFile(file.openSeekable()), options);\n         Filter filter = checkNotNull(options.getRecordFilter(), \"filter\");\n         Configuration hadoopConf = ((HadoopReadOptions) options).getConf();\n+        for (String property : options.getPropertyNames()) {\n+          hadoopConf.set(property, options.getProperty(property));\n+        }\n         FileMetaData parquetFileMetadata = reader.getFooter().getFileMetaData();\n         MessageType fileSchema = parquetFileMetadata.getSchema();\n         Map<String, String> fileMetadata = parquetFileMetadata.getKeyValueMetaData();\n-\n         ReadSupport.ReadContext readContext =\n             readSupport.init(\n                 new InitContext(\n                     hadoopConf, Maps.transformValues(fileMetadata, ImmutableSet::of), fileSchema));\n         ColumnIOFactory columnIOFactory = new ColumnIOFactory(parquetFileMetadata.getCreatedBy());\n-        MessageType requestedSchema = readContext.getRequestedSchema();\n+\n         RecordMaterializer<GenericRecord> recordConverter =\n             readSupport.prepareForRead(hadoopConf, fileMetadata, fileSchema, readContext);\n-        reader.setRequestedSchema(requestedSchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1ODg0NQ==", "bodyText": "It would be also great if we could mention what is the expected improvement by projecting columns such as better memory usage or faster reading time.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485258845", "createdAt": "2020-09-08T23:58:44Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -135,6 +135,16 @@\n  * ...\n  * }</pre>\n  *\n+ * <p>Reading with projection can be enabled with the projection schema as following. The\n+ * projection_schema contains only the column that we would like to read and encoder_schema contains\n+ * all field but with the unwanted columns changed to nullable.\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dc5048f15a3b209740db2319e7e8b1688702559", "author": {"user": {"login": "danielxjd", "name": "Jiadai Xia"}}, "url": "https://github.com/apache/beam/commit/2dc5048f15a3b209740db2319e7e8b1688702559", "committedDate": "2020-09-09T00:16:53Z", "message": "rename and remove duplicates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49114534fa52f057595a28d754357f168c8b0ecc", "author": {"user": {"login": "danielxjd", "name": "Jiadai Xia"}}, "url": "https://github.com/apache/beam/commit/49114534fa52f057595a28d754357f168c8b0ecc", "committedDate": "2020-09-09T18:38:35Z", "message": "Modify description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MzU4MDA0", "url": "https://github.com/apache/beam/pull/12786#pullrequestreview-485358004", "createdAt": "2020-09-09T19:56:19Z", "commit": {"oid": "49114534fa52f057595a28d754357f168c8b0ecc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTo1NjoxOVrOHPX_3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTo1NzoxOVrOHPYC6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg4Mzg2OA==", "bodyText": "Please also adding\nNote that the improvement is not as significant though, since the processing\ntime saved is only the time to read the unwanted columns, the reader will still\ngo over the entire data set since data for each column in a row is stored interleaved.\n\nto the comments. It will help users a lot to understand how the column projection works.", "url": "https://github.com/apache/beam/pull/12786#discussion_r485883868", "createdAt": "2020-09-09T19:56:19Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -135,6 +135,16 @@\n  * ...\n  * }</pre>\n  *\n+ * <p>Reading with projection can be enabled with the projection schema as following. The\n+ * projection_schema contains only the column that we would like to read and encoder_schema contains\n+ * all field but with the unwanted columns changed to nullable.\n+ *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1ODg0NQ=="}, "originalCommit": {"oid": "a334bac48f808380386e1a7bb15a68d159045ef2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg4NDY1MQ==", "bodyText": "increase or decrease?", "url": "https://github.com/apache/beam/pull/12786#discussion_r485884651", "createdAt": "2020-09-09T19:57:19Z", "author": {"login": "ihji"}, "path": "sdks/java/io/parquet/src/main/java/org/apache/beam/sdk/io/parquet/ParquetIO.java", "diffHunk": "@@ -135,6 +135,20 @@\n  * ...\n  * }</pre>\n  *\n+ * <p>Reading with projection can be enabled with the projection schema as following. Splittable\n+ * reading is enabled when reading with projection. The projection_schema contains only the column\n+ * that we would like to read and encoder_schema contains the schema to encode the output with the\n+ * unwanted columns changed to nullable. Partial reading provide increase of reading time due to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49114534fa52f057595a28d754357f168c8b0ecc"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c3a9c2ed542d1efb7294a1c0a2329715c1b6bd2", "author": {"user": {"login": "danielxjd", "name": "Jiadai Xia"}}, "url": "https://github.com/apache/beam/commit/1c3a9c2ed542d1efb7294a1c0a2329715c1b6bd2", "committedDate": "2020-09-09T20:07:58Z", "message": "Add description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Mzc2NDE2", "url": "https://github.com/apache/beam/pull/12786#pullrequestreview-485376416", "createdAt": "2020-09-09T20:24:34Z", "commit": {"oid": "1c3a9c2ed542d1efb7294a1c0a2329715c1b6bd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Mzc5ODYy", "url": "https://github.com/apache/beam/pull/12786#pullrequestreview-485379862", "createdAt": "2020-09-09T20:29:42Z", "commit": {"oid": "1c3a9c2ed542d1efb7294a1c0a2329715c1b6bd2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4688, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}