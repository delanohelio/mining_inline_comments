{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjY2NTE2", "number": 11558, "title": "[BEAM-8742] Add stateful and timely processing benchmarks", "bodyText": "This contains two new benchmarks which both execute in streaming mode:\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times\nDashboard: https://apache-beam-testing.appspot.com/explore?dashboard=5751884853805056\n\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-28T17:46:02Z", "url": "https://github.com/apache/beam/pull/11558", "merged": true, "mergeCommit": {"oid": "c36f08affb6d86e65e9ab317746abf0a219680a0"}, "closed": true, "closedAt": "2020-05-07T16:07:08Z", "author": {"login": "mxm"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccJ47IgBqjMyODIwMDQzNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce93pYABqjMzMTMwNzUxNzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25564ed3899f436b440452d9bdada8c5dae94c61", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/25564ed3899f436b440452d9bdada8c5dae94c61", "committedDate": "2020-04-28T17:45:47Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "f26b6bd71293641c8ed504a3d545f1c1c3361deb", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/f26b6bd71293641c8ed504a3d545f1c1c3361deb", "committedDate": "2020-04-28T20:27:03Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f26b6bd71293641c8ed504a3d545f1c1c3361deb", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/f26b6bd71293641c8ed504a3d545f1c1c3361deb", "committedDate": "2020-04-28T20:27:03Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "c9f726891cffd72c00a621e5257c687b32b607b1", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/c9f726891cffd72c00a621e5257c687b32b607b1", "committedDate": "2020-04-28T20:47:39Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9f726891cffd72c00a621e5257c687b32b607b1", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/c9f726891cffd72c00a621e5257c687b32b607b1", "committedDate": "2020-04-28T20:47:39Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "812f2e636bcea551f8853f0a211e342981061436", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/812f2e636bcea551f8853f0a211e342981061436", "committedDate": "2020-04-29T09:50:13Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "812f2e636bcea551f8853f0a211e342981061436", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/812f2e636bcea551f8853f0a211e342981061436", "committedDate": "2020-04-29T09:50:13Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "bb8ea86f0744831bede0f3d9c2bf383fff8bd90b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/bb8ea86f0744831bede0f3d9c2bf383fff8bd90b", "committedDate": "2020-04-29T12:57:49Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb8ea86f0744831bede0f3d9c2bf383fff8bd90b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/bb8ea86f0744831bede0f3d9c2bf383fff8bd90b", "committedDate": "2020-04-29T12:57:49Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "3aa99a8ddd4c015c83dd9df555b701ed7b21ed1b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/3aa99a8ddd4c015c83dd9df555b701ed7b21ed1b", "committedDate": "2020-04-29T13:55:55Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3aa99a8ddd4c015c83dd9df555b701ed7b21ed1b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/3aa99a8ddd4c015c83dd9df555b701ed7b21ed1b", "committedDate": "2020-04-29T13:55:55Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "56f9a83dfc67dffe09d2f2196f747e0b609abb0c", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/56f9a83dfc67dffe09d2f2196f747e0b609abb0c", "committedDate": "2020-04-29T14:23:31Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56f9a83dfc67dffe09d2f2196f747e0b609abb0c", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/56f9a83dfc67dffe09d2f2196f747e0b609abb0c", "committedDate": "2020-04-29T14:23:31Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "32eef9d42d11a62697152306a1700eda83e68875", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/32eef9d42d11a62697152306a1700eda83e68875", "committedDate": "2020-04-29T14:47:50Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32eef9d42d11a62697152306a1700eda83e68875", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/32eef9d42d11a62697152306a1700eda83e68875", "committedDate": "2020-04-29T14:47:50Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "b2ebca6f01647448b56f2ad9591902e66b1941ab", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/b2ebca6f01647448b56f2ad9591902e66b1941ab", "committedDate": "2020-04-30T13:48:10Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2ebca6f01647448b56f2ad9591902e66b1941ab", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/b2ebca6f01647448b56f2ad9591902e66b1941ab", "committedDate": "2020-04-30T13:48:10Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "208d6d4e5a4558ba93c75cd8e6fb5d13423a251a", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/208d6d4e5a4558ba93c75cd8e6fb5d13423a251a", "committedDate": "2020-04-30T14:30:13Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "208d6d4e5a4558ba93c75cd8e6fb5d13423a251a", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/208d6d4e5a4558ba93c75cd8e6fb5d13423a251a", "committedDate": "2020-04-30T14:30:13Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "8743b170349a1e0899ca01e839c78149c85c1960", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/8743b170349a1e0899ca01e839c78149c85c1960", "committedDate": "2020-04-30T15:54:23Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfad6f5f1ec4c447d2368f465590b2faf9d35acf", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/cfad6f5f1ec4c447d2368f465590b2faf9d35acf", "committedDate": "2020-04-30T17:34:22Z", "message": "Reduce load"}, "afterCommit": {"oid": "76bf9d45ba116db304b790245a8c7c95939ca440", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/76bf9d45ba116db304b790245a8c7c95939ca440", "committedDate": "2020-04-30T18:29:05Z", "message": "Reduce load"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76bf9d45ba116db304b790245a8c7c95939ca440", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/76bf9d45ba116db304b790245a8c7c95939ca440", "committedDate": "2020-04-30T18:29:05Z", "message": "Reduce load"}, "afterCommit": {"oid": "28e25ec46c4f48a4d5b4f93b6e4d639108e04b4b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/28e25ec46c4f48a4d5b4f93b6e4d639108e04b4b", "committedDate": "2020-05-01T17:22:57Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28e25ec46c4f48a4d5b4f93b6e4d639108e04b4b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/28e25ec46c4f48a4d5b4f93b6e4d639108e04b4b", "committedDate": "2020-05-01T17:22:57Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "b7f306b049adeb04def86b76da7276aa20b3367b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/b7f306b049adeb04def86b76da7276aa20b3367b", "committedDate": "2020-05-01T17:26:02Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7f306b049adeb04def86b76da7276aa20b3367b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/b7f306b049adeb04def86b76da7276aa20b3367b", "committedDate": "2020-05-01T17:26:02Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "d33925f2a2ff2b4d6d494d6eb527049ba377fcbb", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/d33925f2a2ff2b4d6d494d6eb527049ba377fcbb", "committedDate": "2020-05-02T13:04:42Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d33925f2a2ff2b4d6d494d6eb527049ba377fcbb", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/d33925f2a2ff2b4d6d494d6eb527049ba377fcbb", "committedDate": "2020-05-02T13:04:42Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}, "afterCommit": {"oid": "b6c94594cea30597ef6ab255535d1e8dd47b3a2f", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/b6c94594cea30597ef6ab255535d1e8dd47b3a2f", "committedDate": "2020-05-04T10:57:49Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ef03bc793c52073e532d039c3a5804bda8a91e8", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/5ef03bc793c52073e532d039c3a5804bda8a91e8", "committedDate": "2020-05-04T13:33:33Z", "message": "[BEAM-8742] Enable cron for streaming load toad"}, "afterCommit": {"oid": "4986fa797afc696c09f8c0d1d21d2b68fe92f7e9", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/4986fa797afc696c09f8c0d1d21d2b68fe92f7e9", "committedDate": "2020-05-04T13:34:40Z", "message": "[BEAM-8742] Enable cron for streaming load test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4986fa797afc696c09f8c0d1d21d2b68fe92f7e9", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/4986fa797afc696c09f8c0d1d21d2b68fe92f7e9", "committedDate": "2020-05-04T13:34:40Z", "message": "[BEAM-8742] Enable cron for streaming load test"}, "afterCommit": {"oid": "2a44d4d46c747e65b749e6c97cd8e9093bfb8bc7", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/2a44d4d46c747e65b749e6c97cd8e9093bfb8bc7", "committedDate": "2020-05-04T13:44:06Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "054e1df14d464245624564929f43b7eed087d95d", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/054e1df14d464245624564929f43b7eed087d95d", "committedDate": "2020-05-05T16:57:47Z", "message": "Use the same parameters regardless of whether checkpointing is enabled"}, "afterCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed", "committedDate": "2020-05-05T18:25:47Z", "message": "Use the same parameters regardless of whether checkpointing is enabled"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MTM1MTc2", "url": "https://github.com/apache/beam/pull/11558#pullrequestreview-406135176", "createdAt": "2020-05-05T20:35:39Z", "commit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDozNTozOVrOGQ6i_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMToxNzowOFrOGQ75sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM4OTYyOA==", "bodyText": "Why multiple trigger phrases?", "url": "https://github.com/apache/beam/pull/11558#discussion_r420389628", "createdAt": "2020-05-05T20:35:39Z", "author": {"login": "tweise"}, "path": ".test-infra/jenkins/job_LoadTests_ParDo_Flink_Python.groovy", "diffHunk": "@@ -142,9 +249,22 @@ PhraseTriggeringPostCommitBuilder.postCommitJob(\n   'Load Tests Python ParDo Flink Batch suite',\n   this\n ) {\n-  loadTest(delegate, CommonTestProperties.TriggeringContext.PR)\n+  loadBatchTests(delegate, CommonTestProperties.TriggeringContext.PR)\n+}\n+\n+PhraseTriggeringPostCommitBuilder.postCommitJob(\n+    'beam_LoadTests_Python_ParDo_Flink_Streaming',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5MDU5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      + \"shut down, chekpointing is not possible anymore. Shutting down the sources eventually leads to pipeline \"\n          \n          \n            \n                      + \"shut down, checkpointing is not possible anymore. Shutting down the sources eventually leads to pipeline \"", "url": "https://github.com/apache/beam/pull/11558#discussion_r420390597", "createdAt": "2020-05-05T20:37:36Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkDebugPipelineOptions.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.flink;\n+\n+import org.apache.beam.sdk.options.Default;\n+import org.apache.beam.sdk.options.Description;\n+import org.apache.beam.sdk.options.PipelineOptions;\n+\n+/** Debug options which shouldn't normally be used. */\n+public interface FlinkDebugPipelineOptions extends PipelineOptions {\n+\n+  @Description(\n+      \"If not null, reports the checkpoint duration of each ParDo stage in the provided metric namespace.\")\n+  String getReportCheckpointDuration();\n+\n+  void setReportCheckpointDuration(String metricNamespace);\n+\n+  @Description(\n+      \"Shuts down sources which have been idle for the configured time of milliseconds. Once a source has been \"\n+          + \"shut down, chekpointing is not possible anymore. Shutting down the sources eventually leads to pipeline \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5ODA2Nw==", "bodyText": "Unless I misread, this parameter is directly tied to !shutdownSourcesOnFinalWatermark? How about consolidating the two? Just a single parameter shutdownSourcesAfterIdleMs should suffice:\n0 - immediate shutdown, which should be default, unless checkpointing is enabled\nvalue > 0 - wait, potentially forever\nThere was a question on the ML recently about shutdownSourcesOnFinalWatermark and if that should not be default. I think it should be (unless checkpointing was enabled), in which case we can never shutdown. So there should be almost no situation where this parameter needs to be set, except in a special case like this.", "url": "https://github.com/apache/beam/pull/11558#discussion_r420398067", "createdAt": "2020-05-05T20:51:04Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkDebugPipelineOptions.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.flink;\n+\n+import org.apache.beam.sdk.options.Default;\n+import org.apache.beam.sdk.options.Description;\n+import org.apache.beam.sdk.options.PipelineOptions;\n+\n+/** Debug options which shouldn't normally be used. */\n+public interface FlinkDebugPipelineOptions extends PipelineOptions {\n+\n+  @Description(\n+      \"If not null, reports the checkpoint duration of each ParDo stage in the provided metric namespace.\")\n+  String getReportCheckpointDuration();\n+\n+  void setReportCheckpointDuration(String metricNamespace);\n+\n+  @Description(\n+      \"Shuts down sources which have been idle for the configured time of milliseconds. Once a source has been \"\n+          + \"shut down, chekpointing is not possible anymore. Shutting down the sources eventually leads to pipeline \"\n+          + \"shutdown once all input has been processed.\")\n+  @Default.Long(0)\n+  Long getShutdownSourcesAfterIdleMs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5OTA3OQ==", "bodyText": "Not sure I like the idea of having these as a separate interface that FlinkPipelineOptions extends (!).", "url": "https://github.com/apache/beam/pull/11558#discussion_r420399079", "createdAt": "2020-05-05T20:52:57Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkDebugPipelineOptions.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.flink;\n+\n+import org.apache.beam.sdk.options.Default;\n+import org.apache.beam.sdk.options.Description;\n+import org.apache.beam.sdk.options.PipelineOptions;\n+\n+/** Debug options which shouldn't normally be used. */\n+public interface FlinkDebugPipelineOptions extends PipelineOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQwMTg1NQ==", "bodyText": "Wouldn't it be sufficient to rely on Flink 's task-level checkpoint metrics for this?", "url": "https://github.com/apache/beam/pull/11558#discussion_r420401855", "createdAt": "2020-05-05T20:57:49Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -455,6 +461,18 @@ public void open() throws Exception {\n     if (!options.getDisableMetrics()) {\n       flinkMetricContainer = new FlinkMetricContainer(getRuntimeContext());\n       doFnRunner = new DoFnRunnerWithMetricsUpdate<>(stepName, doFnRunner, flinkMetricContainer);\n+      String checkpointMetricNamespace =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxMTgyNw==", "bodyText": "Nice to see that it is finally possible to achieve this with timers! Should GenerateLoad be reusable?", "url": "https://github.com/apache/beam/pull/11558#discussion_r420411827", "createdAt": "2020-05-05T21:17:08Z", "author": {"login": "tweise"}, "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -125,6 +155,70 @@ def process(self, element):\n         'Measure time: End' >> beam.ParDo(MeasureTime(self.metrics_namespace)))\n \n \n+class StatefulLoadGenerator(beam.PTransform):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzU5NjI3", "url": "https://github.com/apache/beam/pull/11558#pullrequestreview-406759627", "createdAt": "2020-05-06T16:00:07Z", "commit": {"oid": "ef2934c373de2c094d288a569bea72579f0a603c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjowODo1NVrOGRafNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoxNTowMVrOGRavEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxMjk1MQ==", "bodyText": "Makes sense; misunderstanding on my part.", "url": "https://github.com/apache/beam/pull/11558#discussion_r420912951", "createdAt": "2020-05-06T16:08:55Z", "author": {"login": "tweise"}, "path": ".test-infra/jenkins/job_LoadTests_ParDo_Flink_Python.groovy", "diffHunk": "@@ -142,9 +249,22 @@ PhraseTriggeringPostCommitBuilder.postCommitJob(\n   'Load Tests Python ParDo Flink Batch suite',\n   this\n ) {\n-  loadTest(delegate, CommonTestProperties.TriggeringContext.PR)\n+  loadBatchTests(delegate, CommonTestProperties.TriggeringContext.PR)\n+}\n+\n+PhraseTriggeringPostCommitBuilder.postCommitJob(\n+    'beam_LoadTests_Python_ParDo_Flink_Streaming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM4OTYyOA=="}, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxNDA4Mw==", "bodyText": "Agreed. I would prefer we keep all the Flink options in a single interface though. The lone option here strictly isn't a \"debug option\" anyways.", "url": "https://github.com/apache/beam/pull/11558#discussion_r420914083", "createdAt": "2020-05-06T16:10:35Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkDebugPipelineOptions.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.flink;\n+\n+import org.apache.beam.sdk.options.Default;\n+import org.apache.beam.sdk.options.Description;\n+import org.apache.beam.sdk.options.PipelineOptions;\n+\n+/** Debug options which shouldn't normally be used. */\n+public interface FlinkDebugPipelineOptions extends PipelineOptions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5OTA3OQ=="}, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxNTA0MQ==", "bodyText": "Add link to the Flink checkpointing issue here?", "url": "https://github.com/apache/beam/pull/11558#discussion_r420915041", "createdAt": "2020-05-06T16:12:03Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkPipelineOptions.java", "diffHunk": "@@ -126,6 +126,16 @@\n \n   void setFailOnCheckpointingErrors(Boolean failOnCheckpointingErrors);\n \n+  @Description(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef2934c373de2c094d288a569bea72579f0a603c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxNzAwOA==", "bodyText": "It would be good to expose/utilize the Flink metrics as part of the load test suite. This could, for example, be accomplished with a custom Flink metric reporter. It can be addressed as follow-up though.", "url": "https://github.com/apache/beam/pull/11558#discussion_r420917008", "createdAt": "2020-05-06T16:15:01Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -455,6 +461,18 @@ public void open() throws Exception {\n     if (!options.getDisableMetrics()) {\n       flinkMetricContainer = new FlinkMetricContainer(getRuntimeContext());\n       doFnRunner = new DoFnRunnerWithMetricsUpdate<>(stepName, doFnRunner, flinkMetricContainer);\n+      String checkpointMetricNamespace =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQwMTg1NQ=="}, "originalCommit": {"oid": "e9ddfd0aa3fbe4ec355b89f5e052f4c40fc88fed"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26df629c5883545e372fcf2a53fd2d99ca4ac98b", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/26df629c5883545e372fcf2a53fd2d99ca4ac98b", "committedDate": "2020-05-07T09:36:39Z", "message": "fixup! remove FlinkDebugPipelineOptions interface"}, "afterCommit": {"oid": "ef1d0bd57f989428bf97b299394ecab39df265fe", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/ef1d0bd57f989428bf97b299394ecab39df265fe", "committedDate": "2020-05-07T09:49:27Z", "message": "fixup! remove FlinkDebugPipelineOptions interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef1d0bd57f989428bf97b299394ecab39df265fe", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/ef1d0bd57f989428bf97b299394ecab39df265fe", "committedDate": "2020-05-07T09:49:27Z", "message": "fixup! remove FlinkDebugPipelineOptions interface"}, "afterCommit": {"oid": "675f1852e71517ae0eeb65c4ee94dde3660ec172", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/675f1852e71517ae0eeb65c4ee94dde3660ec172", "committedDate": "2020-05-07T09:51:34Z", "message": "fixup! remove FlinkDebugPipelineOptions interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "675f1852e71517ae0eeb65c4ee94dde3660ec172", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/675f1852e71517ae0eeb65c4ee94dde3660ec172", "committedDate": "2020-05-07T09:51:34Z", "message": "fixup! remove FlinkDebugPipelineOptions interface"}, "afterCommit": {"oid": "1a35436df4180a54caed69ea459304b34c3d4884", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/1a35436df4180a54caed69ea459304b34c3d4884", "committedDate": "2020-05-07T11:51:02Z", "message": "[BEAM-9900] Remove shutdownSourcesOnFinalWatermark flag\n\nThe shutdownSourcesOnFinalWatermark has caused some confusion in the past. It is\ngenerally used for testing pipelines to ensure that the pipeline and the testing\ncluster shuts down at the end of the job. Without it, the pipeline will run\nforever in streaming mode, regardless of whether the input is finite or not.\n\nWe didn't want to enable the flag by default because shutting down any operators\nincluding sources in Flink will prevent checkpointing from working. If we have\nside input, for example, that may be the case even for long-running\npipelines. However, we can detect whether checkpointing is enabled and set the\nflag automatically.\n\nThe only situation where we may want the flag to be disabled is when users do\nnot have checkpointing enabled but want to take a savepoint. This should be rare\nand users can mitigate by setting the flag to false to prevent operators from\nshutting down."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDY0MTY5", "url": "https://github.com/apache/beam/pull/11558#pullrequestreview-407464169", "createdAt": "2020-05-07T13:21:25Z", "commit": {"oid": "1a35436df4180a54caed69ea459304b34c3d4884"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzoyMToyNVrOGR-NWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzoyMToyNVrOGR-NWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ5ODIwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** The idle time before we the source shuts down. */\n          \n          \n            \n              /** The idle time before the source shuts down. */", "url": "https://github.com/apache/beam/pull/11558#discussion_r421498202", "createdAt": "2020-05-07T13:21:25Z", "author": {"login": "tweise"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/io/UnboundedSourceWrapper.java", "diffHunk": "@@ -91,11 +91,8 @@\n    */\n   private final List<? extends UnboundedSource<OutputT, CheckpointMarkT>> splitSources;\n \n-  /**\n-   * Shuts down the source if the final watermark is read. Note: This prevents further checkpoints\n-   * of the streaming application.\n-   */\n-  private final boolean shutdownOnFinalWatermark;\n+  /** The idle time before we the source shuts down. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a35436df4180a54caed69ea459304b34c3d4884"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDY3Mjcw", "url": "https://github.com/apache/beam/pull/11558#pullrequestreview-407467270", "createdAt": "2020-05-07T13:24:50Z", "commit": {"oid": "1a35436df4180a54caed69ea459304b34c3d4884"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bef40cc02231945bf345065e0fb0703d42fce86c", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/bef40cc02231945bf345065e0fb0703d42fce86c", "committedDate": "2020-05-07T14:08:14Z", "message": "[BEAM-8742] Add stateful and timely processing benchmarks\n\nThis contains two new benchmarks which both execute in streaming mode:\n\n(1) A benchmark which uses timers and state\n(2) A benchmark which additionally checkpoints and reports checkpointing times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d106f263e625e5d7c4f3848f16da301871f65142", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/d106f263e625e5d7c4f3848f16da301871f65142", "committedDate": "2020-05-07T14:08:14Z", "message": "[BEAM-9900] Remove shutdownSourcesOnFinalWatermark flag\n\nThe shutdownSourcesOnFinalWatermark has caused some confusion in the past. It is\ngenerally used for testing pipelines to ensure that the pipeline and the testing\ncluster shuts down at the end of the job. Without it, the pipeline will run\nforever in streaming mode, regardless of whether the input is finite or not.\n\nWe didn't want to enable the flag by default because shutting down any operators\nincluding sources in Flink will prevent checkpointing from working. If we have\nside input, for example, that may be the case even for long-running\npipelines. However, we can detect whether checkpointing is enabled and set the\nflag automatically.\n\nThe only situation where we may want the flag to be disabled is when users do\nnot have checkpointing enabled but want to take a savepoint. This should be rare\nand users can mitigate by setting the flag to false to prevent operators from\nshutting down."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a35436df4180a54caed69ea459304b34c3d4884", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/1a35436df4180a54caed69ea459304b34c3d4884", "committedDate": "2020-05-07T11:51:02Z", "message": "[BEAM-9900] Remove shutdownSourcesOnFinalWatermark flag\n\nThe shutdownSourcesOnFinalWatermark has caused some confusion in the past. It is\ngenerally used for testing pipelines to ensure that the pipeline and the testing\ncluster shuts down at the end of the job. Without it, the pipeline will run\nforever in streaming mode, regardless of whether the input is finite or not.\n\nWe didn't want to enable the flag by default because shutting down any operators\nincluding sources in Flink will prevent checkpointing from working. If we have\nside input, for example, that may be the case even for long-running\npipelines. However, we can detect whether checkpointing is enabled and set the\nflag automatically.\n\nThe only situation where we may want the flag to be disabled is when users do\nnot have checkpointing enabled but want to take a savepoint. This should be rare\nand users can mitigate by setting the flag to false to prevent operators from\nshutting down."}, "afterCommit": {"oid": "d106f263e625e5d7c4f3848f16da301871f65142", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/d106f263e625e5d7c4f3848f16da301871f65142", "committedDate": "2020-05-07T14:08:14Z", "message": "[BEAM-9900] Remove shutdownSourcesOnFinalWatermark flag\n\nThe shutdownSourcesOnFinalWatermark has caused some confusion in the past. It is\ngenerally used for testing pipelines to ensure that the pipeline and the testing\ncluster shuts down at the end of the job. Without it, the pipeline will run\nforever in streaming mode, regardless of whether the input is finite or not.\n\nWe didn't want to enable the flag by default because shutting down any operators\nincluding sources in Flink will prevent checkpointing from working. If we have\nside input, for example, that may be the case even for long-running\npipelines. However, we can detect whether checkpointing is enabled and set the\nflag automatically.\n\nThe only situation where we may want the flag to be disabled is when users do\nnot have checkpointing enabled but want to take a savepoint. This should be rare\nand users can mitigate by setting the flag to false to prevent operators from\nshutting down."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4065, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}