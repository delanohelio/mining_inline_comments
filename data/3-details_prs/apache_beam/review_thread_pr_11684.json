{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODk5NDkw", "number": 11684, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1ODo0NFrOD71xHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1ODo0NFrOD71xHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDczNTAzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/transforms/sql_test.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1ODo0NFrOGUadnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzo1N1rOGUcCUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1ODI3MQ==", "bodyText": "Could we choose names that don't require so much quoting? (Or is that part of the test?)", "url": "https://github.com/apache/beam/pull/11684#discussion_r424058271", "createdAt": "2020-05-12T21:58:44Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/sql_test.py", "diffHunk": "@@ -111,6 +114,27 @@ def test_agg(self):\n               FROM PCOLLECTION GROUP BY `str`\"\"\"))\n       assert_that(out, equal_to([(\"foo\", 3, 3, 2), (\"bar\", 4, 8, 1.414)]))\n \n+  def test_tagged_join(self):\n+    with TestPipeline() as p:\n+      enrich = (\n+          p | \"Create enrich\" >> beam.Create(\n+              [Enrich(1, \"a\"), Enrich(2, \"b\"), Enrich(26, \"z\")]))\n+      rows = (\n+          p | \"Create rows\" >> beam.Create([\n+              SimpleRow(1, \"foo\", 3.14),\n+              SimpleRow(26, \"bar\", 1.11),\n+              SimpleRow(1, \"baz\", 2.34)\n+          ]))\n+      out = ({\n+          'rows': rows, 'enrich': enrich\n+      }\n+             | SqlTransform(\n+                 \"\"\"\n+              SELECT\n+                `rows`.`int` AS `int`, `enrich`.`metadata` AS `metadata`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2d299f06f4309a651d79678b866c6655494859"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NDA0OQ==", "bodyText": "Ha yeah I got a little backtick happy. Renamed \"rows\" to \"simple\" so it doesn't need to be wrapped and removed some other unnecessary backticks.", "url": "https://github.com/apache/beam/pull/11684#discussion_r424084049", "createdAt": "2020-05-12T23:07:57Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/transforms/sql_test.py", "diffHunk": "@@ -111,6 +114,27 @@ def test_agg(self):\n               FROM PCOLLECTION GROUP BY `str`\"\"\"))\n       assert_that(out, equal_to([(\"foo\", 3, 3, 2), (\"bar\", 4, 8, 1.414)]))\n \n+  def test_tagged_join(self):\n+    with TestPipeline() as p:\n+      enrich = (\n+          p | \"Create enrich\" >> beam.Create(\n+              [Enrich(1, \"a\"), Enrich(2, \"b\"), Enrich(26, \"z\")]))\n+      rows = (\n+          p | \"Create rows\" >> beam.Create([\n+              SimpleRow(1, \"foo\", 3.14),\n+              SimpleRow(26, \"bar\", 1.11),\n+              SimpleRow(1, \"baz\", 2.34)\n+          ]))\n+      out = ({\n+          'rows': rows, 'enrich': enrich\n+      }\n+             | SqlTransform(\n+                 \"\"\"\n+              SELECT\n+                `rows`.`int` AS `int`, `enrich`.`metadata` AS `metadata`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1ODI3MQ=="}, "originalCommit": {"oid": "2b2d299f06f4309a651d79678b866c6655494859"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3906, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}