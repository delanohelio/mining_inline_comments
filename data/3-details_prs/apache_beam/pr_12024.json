{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTQzNzUz", "number": 12024, "title": "[BEAM-9679] Add Side Input to Core Transform Go SDK katas", "bodyText": "This pull requests adds a Side Input lesson to the Go SDK katas.  I would like to request the following reviewers:\n(R: @lostluck )\n(R: @henryken )\nIf accepted by both reviewers, please wait until the Stepik course is updated before finally merging this PR.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-17T01:05:59Z", "url": "https://github.com/apache/beam/pull/12024", "merged": true, "mergeCommit": {"oid": "99911cc7824f825e0d7f23b88c95dc4102476b33"}, "closed": true, "closedAt": "2020-06-22T18:03:11Z", "author": {"login": "damondouglas"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr_FSMgH2gAyNDM1NTQzNzUzOjZlNjE3OTZjYzJhMjE3YzRkMWQ0ZmRiM2M2ZmYzZWE5ZjAzZmRlY2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctnyNkgH2gAyNDM1NTQzNzUzOmVlYzZhMGQ4ZGVjZTFlYTRlNzM2MWM1MDk5ZDhlZjA1MDZjYjczNjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e61796cc2a217c4d1d4fdb3c6ff3ea9f03fdeca", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/6e61796cc2a217c4d1d4fdb3c6ff3ea9f03fdeca", "committedDate": "2020-06-17T00:54:37Z", "message": "Add Side Input to Core Transform Go SDK katas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fff9d8ce318a6b316f082d5cdbb031d8b45f8f39", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/fff9d8ce318a6b316f082d5cdbb031d8b45f8f39", "committedDate": "2020-06-17T01:02:47Z", "message": "Add space between code block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "981fcba119ad6b850bb4e76b233077a9d7888748", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/981fcba119ad6b850bb4e76b233077a9d7888748", "committedDate": "2020-06-17T01:03:30Z", "message": "Bump beam SDK version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDI3MDcw", "url": "https://github.com/apache/beam/pull/12024#pullrequestreview-432427070", "createdAt": "2020-06-17T13:55:29Z", "commit": {"oid": "981fcba119ad6b850bb4e76b233077a9d7888748"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzo1NTozMFrOGlG8mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDowMjoxM1rOGlHQog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2NDMxNQ==", "bodyText": "This code snippet needs to have no indentation to render properly.", "url": "https://github.com/apache/beam/pull/12024#discussion_r441564315", "createdAt": "2020-06-17T13:55:30Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Side Input/Side Input/task.md", "diffHunk": "@@ -0,0 +1,68 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+\n+# Side Input\n+\n+In addition to the main input PCollection, you can provide additional inputs to a ParDo transform \n+in the form of side inputs. A side input is an additional input that your DoFn can access each time \n+it processes an element in the input PCollection. When you specify a side input, you create a view \n+of some other data that can be read from within the ParDo transform\u2019s DoFn while processing each \n+element.\n+\n+Side inputs are useful if your ParDo needs to inject additional data when processing each element \n+in the input PCollection, but the additional data needs to be determined at runtime (and not \n+hard-coded). Such values might be determined by the input data, or depend on a different branch of \n+your pipeline.\n+\n+**Kata:** Please enrich each Person with the country based on the city he/she lives in.\n+\n+<div class=\"hint\">\n+    Use <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#hdr-Side_Inputs\">\n+    beam.SideInput</a> to create a side input of the citiesToCountries PCollection\n+</div>\n+\n+<div class=\"hint\">\n+    Use <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#ParDo\">\n+    beam.ParDo</a> with a DoFn that accepts a\n+    <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#hdr-Side_Inputs\">\n+    beam.SideInput</a>.\n+</div>\n+\n+<div class=\"hint\">\n+    Refer to the Beam Programming Guide\n+    <a href=\"https://beam.apache.org/documentation/programming-guide/#side-inputs\">\"Side inputs\"</a>\n+    section for more information.\n+</div>\n+\n+<div class=\"hint\">\n+    A ParDo that has a PCollection KV as side input expects a DoFn that looks like the following.    \n+    \n+    ```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981fcba119ad6b850bb4e76b233077a9d7888748"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2ODAwNA==", "bodyText": "Add break statement here?", "url": "https://github.com/apache/beam/pull/12024#discussion_r441568004", "createdAt": "2020-06-17T14:00:13Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Side Input/Side Input/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,45 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+type Person struct {\n+\tName, City, Country string\n+}\n+\n+func ApplyTransform(s beam.Scope, personsKV beam.PCollection, citiesToCountries beam.PCollection) beam.PCollection {\n+\tcitiesToCountriesView := beam.SideInput{\n+\t\tInput: citiesToCountries,\n+\t}\n+\treturn beam.ParDo(s, joinFn, personsKV, citiesToCountriesView)\n+}\n+\n+func joinFn(person Person, citiesToCountriesIter func(*string, *string) bool, emit func(Person)) {\n+\tvar city, country string\n+\tfor citiesToCountriesIter(&city, &country) {\n+\t\tif person.City == city {\n+\t\t\temit(Person{\n+\t\t\t\tName:    person.Name,\n+\t\t\t\tCity:    city,\n+\t\t\t\tCountry: country,\n+\t\t\t})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981fcba119ad6b850bb4e76b233077a9d7888748"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2OTQ0Mg==", "bodyText": "Is there a way to use a KV-like API (e.g. get(key)) instead of iterating each of the KV pair?\nThe way this works seems like a List collection with a tuple.\nOr probably the naming KV is misleading?", "url": "https://github.com/apache/beam/pull/12024#discussion_r441569442", "createdAt": "2020-06-17T14:02:13Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Side Input/Side Input/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,45 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+type Person struct {\n+\tName, City, Country string\n+}\n+\n+func ApplyTransform(s beam.Scope, personsKV beam.PCollection, citiesToCountries beam.PCollection) beam.PCollection {\n+\tcitiesToCountriesView := beam.SideInput{\n+\t\tInput: citiesToCountries,\n+\t}\n+\treturn beam.ParDo(s, joinFn, personsKV, citiesToCountriesView)\n+}\n+\n+func joinFn(person Person, citiesToCountriesIter func(*string, *string) bool, emit func(Person)) {\n+\tvar city, country string\n+\tfor citiesToCountriesIter(&city, &country) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981fcba119ad6b850bb4e76b233077a9d7888748"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6e653326298e7ff3bcff160c347418c2ec50e1b", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/a6e653326298e7ff3bcff160c347418c2ec50e1b", "committedDate": "2020-06-19T04:05:05Z", "message": "Revert go.mod and go.sum changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffe07b0f58f39acffdbe1a7ba7d53e5fe05c0dcb", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/ffe07b0f58f39acffdbe1a7ba7d53e5fe05c0dcb", "committedDate": "2020-06-19T04:16:01Z", "message": "Edit indent of code block in task descriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c87694a820c4e37744848aa64d3899b9615a801", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/8c87694a820c4e37744848aa64d3899b9615a801", "committedDate": "2020-06-19T04:16:27Z", "message": "Add break to for loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzk5MTMw", "url": "https://github.com/apache/beam/pull/12024#pullrequestreview-433799130", "createdAt": "2020-06-19T04:46:31Z", "commit": {"oid": "8c87694a820c4e37744848aa64d3899b9615a801"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDY2MDcz", "url": "https://github.com/apache/beam/pull/12024#pullrequestreview-434466073", "createdAt": "2020-06-21T03:02:33Z", "commit": {"oid": "8c87694a820c4e37744848aa64d3899b9615a801"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eec6a0d8dece1ea4e7361c5099d8ef0506cb7361", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/eec6a0d8dece1ea4e7361c5099d8ef0506cb7361", "committedDate": "2020-06-22T02:53:49Z", "message": "Update stepik course"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3547, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}