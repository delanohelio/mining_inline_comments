{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNjAzMTg0", "number": 11004, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMToyOToxMFrODj9Q3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTozMTo0N1rODj9TOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDMwNDkzOnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/coders/SerializableCoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMToyOToxMFrOFwDWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjowMjoxM1rOFwEFwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMDg4OQ==", "bodyText": "This should be more of a debug string where no info is skipped, like MoreObjects.toStringHelper(this).add(clazz)", "url": "https://github.com/apache/beam/pull/11004#discussion_r385930889", "createdAt": "2020-02-28T21:29:10Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/coders/SerializableCoder.java", "diffHunk": "@@ -224,6 +224,11 @@ public int hashCode() {\n     return typeDescriptor;\n   }\n \n+  @Override\n+  public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd8d5826a34c800260d87ee7d69d18019e234bf6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0Mjk3OA==", "bodyText": "I've added the type here", "url": "https://github.com/apache/beam/pull/11004#discussion_r385942978", "createdAt": "2020-02-28T22:02:13Z", "author": {"login": "dpmills"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/coders/SerializableCoder.java", "diffHunk": "@@ -224,6 +224,11 @@ public int hashCode() {\n     return typeDescriptor;\n   }\n \n+  @Override\n+  public String toString() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMDg4OQ=="}, "originalCommit": {"oid": "bd8d5826a34c800260d87ee7d69d18019e234bf6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDMxMDk5OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/ParDo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTozMTo0N1rOFwDaRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTozMTo0N1rOFwDaRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTg0Nw==", "bodyText": "Here, too, maybe using the format of MoreObjects.toStringHelper(this).add(\"coder\", valueCoder) will make it all uniform. But since this is really a helper for display data, and DisplayData can be structured (somewhat?) it probably makes sense to structure it here using https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/display/DisplayData.java#L145", "url": "https://github.com/apache/beam/pull/11004#discussion_r385931847", "createdAt": "2020-02-28T21:31:47Z", "author": {"login": "kennknowles"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/ParDo.java", "diffHunk": "@@ -903,11 +902,53 @@ public String toString() {\n     }\n   }\n \n+  private static String stateDescription(StateSpec<?> spec) {\n+    return spec.match(\n+        new StateSpec.Cases<String>() {\n+          @Override\n+          public String dispatchValue(Coder<?> valueCoder) {\n+            return \"ValueState<\" + valueCoder + \">\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd8d5826a34c800260d87ee7d69d18019e234bf6"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1954, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}