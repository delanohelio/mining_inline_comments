{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTgzMjQ5", "number": 11276, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzo0MVrODtTueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzo0M1rODtTuhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODM1NzA1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/utils.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzo0MVrOF-qQQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDowOTo0M1rOF-sfzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw==", "bodyText": "Is it fine to link to a 3rd party domain here?", "url": "https://github.com/apache/beam/pull/11276#discussion_r401248323", "createdAt": "2020-03-31T22:17:41Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDQ2NA==", "bodyText": "Yes, it's just some CSS file. We've been using the same CSS file in the IPythonLogHandler too. Bootstrap has been widely known and used, so it's very safe.", "url": "https://github.com/apache/beam/pull/11276#discussion_r401250464", "createdAt": "2020-03-31T22:23:07Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw=="}, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDAxNw==", "bodyText": "This will ping a third party server from users environment. I do not think this is great, but if we do not have a better option, that is fine.", "url": "https://github.com/apache/beam/pull/11276#discussion_r401254017", "createdAt": "2020-03-31T22:32:20Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw=="}, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4NTA2OQ==", "bodyText": "Added a TODO item to change the CDN. And once we create some Jupyter Labextension, we could have HTML+JS+CSS dependencies pre-installed, then the CDN would not be necessary.", "url": "https://github.com/apache/beam/pull/11276#discussion_r401285069", "createdAt": "2020-04-01T00:09:43Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw=="}, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODM1NzE3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/utils.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzo0M1rOF-qQVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoyNjoyN1rOF-qdnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODM0MQ==", "bodyText": "what is obfuscate? and why obfuscate the id?", "url": "https://github.com/apache/beam/pull/11276#discussion_r401248341", "createdAt": "2020-03-31T22:17:43Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n+            <div id=\"{id}\" class=\"spinner-border text-info\" role=\"status\">\n+            </div>\"\"\"\n+  spinner_removal_template = \"\"\"\n+            $(\"#{id}\").remove();\"\"\"\n+\n+  def __init__(self, enter_text, exit_text):\n+    # type: (str, str) -> None\n+\n+    self._id = 'progress_indicator_{}'.format(obfuscate(id(self)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTc0Mw==", "bodyText": "obfuscate is defined within the same module.\nIt's a way to disguise your backend logic from the frontend, basically a hash. It's common to see obfuscation in Javascripts.\nHere we obfuscates the id of a python object in kernel and use it as part of the id of a Javascript div.\nHere is some additional reading about obfuscate: https://medium.com/nodesimplified/obfuscation-what-is-obfuscation-in-javascript-why-obfuscation-is-used-f6a5f5bcf022\nWe also make this hexadigest so that the final id is always usable by jQuery and plain JavaScript as valid selectors.", "url": "https://github.com/apache/beam/pull/11276#discussion_r401251743", "createdAt": "2020-03-31T22:26:27Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n+            <div id=\"{id}\" class=\"spinner-border text-info\" role=\"status\">\n+            </div>\"\"\"\n+  spinner_removal_template = \"\"\"\n+            $(\"#{id}\").remove();\"\"\"\n+\n+  def __init__(self, enter_text, exit_text):\n+    # type: (str, str) -> None\n+\n+    self._id = 'progress_indicator_{}'.format(obfuscate(id(self)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODM0MQ=="}, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1593, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}