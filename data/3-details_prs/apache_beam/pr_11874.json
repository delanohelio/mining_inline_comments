{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1ODk0NDg0", "number": 11874, "title": "Flink Batch Runner: optimize GBK translation for non-merging windows.", "bodyText": "https://issues.apache.org/jira/browse/BEAM-8848\ndependes on #11857\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-01T10:35:41Z", "url": "https://github.com/apache/beam/pull/11874", "merged": true, "mergeCommit": {"oid": "ccc2fa4bd51f5a9b1281608694ffe2a9a53f366c"}, "closed": true, "closedAt": "2020-06-02T14:53:28Z", "author": {"login": "dmvk"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcm-paSgBqjMzOTI3MzE3NTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnVRfDABqjMzOTc3OTM1NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd0912e8871525e28db376226216145da3dad977", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/bd0912e8871525e28db376226216145da3dad977", "committedDate": "2020-06-01T10:33:24Z", "message": "[BEAM-8848] Flink Batch Runner: optimize GBK translation for non-merging windows."}, "afterCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/e4758ded721f100851ae7441dba415f6c490b47c", "committedDate": "2020-06-01T11:34:12Z", "message": "[BEAM-8848] Flink Batch Runner: optimize GBK translation for non-merging windows."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTI2MjAz", "url": "https://github.com/apache/beam/pull/11874#pullrequestreview-421926203", "createdAt": "2020-06-01T15:12:28Z", "commit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNToxMjoyOFrOGdOK0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNToyNzoyNVrOGdOt_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NDAzNQ==", "bodyText": "We might want to use Multimap.", "url": "https://github.com/apache/beam/pull/11874#discussion_r433294035", "createdAt": "2020-06-01T15:12:28Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkBatchTransformTranslators.java", "diffHunk": "@@ -105,40 +111,53 @@\n   // --------------------------------------------------------------------------------------------\n \n   @SuppressWarnings(\"rawtypes\")\n-  private static final Map<String, FlinkBatchPipelineTranslator.BatchTransformTranslator>\n+  private static final Map<String, List<FlinkBatchPipelineTranslator.BatchTransformTranslator>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NDE5Mw==", "bodyText": "Again, multimap would handle this.", "url": "https://github.com/apache/beam/pull/11874#discussion_r433294193", "createdAt": "2020-06-01T15:12:45Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkBatchTransformTranslators.java", "diffHunk": "@@ -105,40 +111,53 @@\n   // --------------------------------------------------------------------------------------------\n \n   @SuppressWarnings(\"rawtypes\")\n-  private static final Map<String, FlinkBatchPipelineTranslator.BatchTransformTranslator>\n+  private static final Map<String, List<FlinkBatchPipelineTranslator.BatchTransformTranslator>>\n       TRANSLATORS = new HashMap<>();\n \n-  static {\n-    TRANSLATORS.put(PTransformTranslation.IMPULSE_TRANSFORM_URN, new ImpulseTranslatorBatch());\n+  private static void registerTranslator(\n+      String urn, FlinkBatchPipelineTranslator.BatchTransformTranslator<?> translator) {\n+    if (!TRANSLATORS.containsKey(urn)) {\n+      TRANSLATORS.put(urn, new ArrayList<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NTcwOQ==", "bodyText": "I think we can get rid of these helper calls and keep the existing code.", "url": "https://github.com/apache/beam/pull/11874#discussion_r433295709", "createdAt": "2020-06-01T15:15:12Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkBatchTransformTranslators.java", "diffHunk": "@@ -105,40 +111,53 @@\n   // --------------------------------------------------------------------------------------------\n \n   @SuppressWarnings(\"rawtypes\")\n-  private static final Map<String, FlinkBatchPipelineTranslator.BatchTransformTranslator>\n+  private static final Map<String, List<FlinkBatchPipelineTranslator.BatchTransformTranslator>>\n       TRANSLATORS = new HashMap<>();\n \n-  static {\n-    TRANSLATORS.put(PTransformTranslation.IMPULSE_TRANSFORM_URN, new ImpulseTranslatorBatch());\n+  private static void registerTranslator(\n+      String urn, FlinkBatchPipelineTranslator.BatchTransformTranslator<?> translator) {\n+    if (!TRANSLATORS.containsKey(urn)) {\n+      TRANSLATORS.put(urn, new ArrayList<>());\n+    }\n+    TRANSLATORS.get(urn).add(translator);\n+  }\n \n-    TRANSLATORS.put(\n+  static {\n+    registerTranslator(PTransformTranslation.IMPULSE_TRANSFORM_URN, new ImpulseTranslatorBatch());\n+    registerTranslator(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMjA0Nw==", "bodyText": "Can you revert these? This makes integration hard for external Runners.", "url": "https://github.com/apache/beam/pull/11874#discussion_r433302047", "createdAt": "2020-06-01T15:25:49Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkBatchTranslationContext.java", "diffHunk": "@@ -68,13 +71,18 @@ public FlinkBatchTranslationContext(ExecutionEnvironment env, PipelineOptions op\n     this.danglingDataSets = new HashMap<>();\n   }\n \n+  void init(Pipeline pipeline) {\n+    pipeline.traverseTopologically(countingPipelineVisitor);\n+    pipeline.traverseTopologically(lookupPipelineVisitor);\n+  }\n+\n   // ------------------------------------------------------------------------\n \n-  public Map<PValue, DataSet<?>> getDanglingDataSets() {\n+  Map<PValue, DataSet<?>> getDanglingDataSets() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMzAzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"GBK result is not re-iterable. You can enable re-iterations by setting '--reIterableGroupByKeyResult=true'.\");\n          \n          \n            \n                      \"GBK result is not re-iterable. You can enable re-iterations by setting '--reIterableGroupByKeyResult'.\");", "url": "https://github.com/apache/beam/pull/11874#discussion_r433303037", "createdAt": "2020-06-01T15:27:25Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkNonMergingReduceFunction.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.flink.translation.functions;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import org.apache.beam.sdk.transforms.windowing.BoundedWindow;\n+import org.apache.beam.sdk.transforms.windowing.PaneInfo;\n+import org.apache.beam.sdk.util.WindowedValue;\n+import org.apache.beam.sdk.values.KV;\n+import org.apache.beam.sdk.values.WindowingStrategy;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Iterables;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Iterators;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.PeekingIterator;\n+import org.apache.flink.api.common.functions.GroupReduceFunction;\n+import org.apache.flink.util.Collector;\n+import org.joda.time.Instant;\n+\n+/**\n+ * Reduce function for non-merging GBK implementation. Implementation tries to return non-iterable\n+ * results when possible, so we do not have to materialize all values for a single key in memory.\n+ *\n+ * @param <K> Key type.\n+ * @param <InputT> Input type.\n+ */\n+public class FlinkNonMergingReduceFunction<K, InputT>\n+    implements GroupReduceFunction<\n+        WindowedValue<KV<K, InputT>>, WindowedValue<KV<K, Iterable<InputT>>>> {\n+\n+  private static class OnceIterable<T> implements Iterable<T> {\n+\n+    private final Iterator<T> iterator;\n+\n+    private final AtomicBoolean used = new AtomicBoolean(false);\n+\n+    OnceIterable(Iterator<T> iterator) {\n+      this.iterator = iterator;\n+    }\n+\n+    @Override\n+    public Iterator<T> iterator() {\n+      if (used.compareAndSet(false, true)) {\n+        return iterator;\n+      }\n+      throw new IllegalStateException(\n+          \"GBK result is not re-iterable. You can enable re-iterations by setting '--reIterableGroupByKeyResult=true'.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjgxOTgz", "url": "https://github.com/apache/beam/pull/11874#pullrequestreview-422681983", "createdAt": "2020-06-02T13:36:06Z", "commit": {"oid": "b3b260280e67fbea73beadbe9e1bfde883cddbfe"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzozNjowNlrOGdx6Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzozNzozMlrOGdx-Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3OTYxNQ==", "bodyText": "Could we keep the original order of the translators here?", "url": "https://github.com/apache/beam/pull/11874#discussion_r433879615", "createdAt": "2020-06-02T13:36:06Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkBatchTransformTranslators.java", "diffHunk": "@@ -105,40 +113,45 @@\n   // --------------------------------------------------------------------------------------------\n \n   @SuppressWarnings(\"rawtypes\")\n-  private static final Map<String, FlinkBatchPipelineTranslator.BatchTransformTranslator>\n-      TRANSLATORS = new HashMap<>();\n+  private static final Multimap<String, FlinkBatchPipelineTranslator.BatchTransformTranslator>\n+      TRANSLATORS = MultimapBuilder.hashKeys().arrayListValues().build();\n \n   static {\n     TRANSLATORS.put(PTransformTranslation.IMPULSE_TRANSFORM_URN, new ImpulseTranslatorBatch());\n-\n     TRANSLATORS.put(\n         PTransformTranslation.CREATE_VIEW_TRANSFORM_URN,\n-        new CreatePCollectionViewTranslatorBatch());\n-\n+        new CreatePCollectionViewTranslatorBatch<>());\n     TRANSLATORS.put(\n-        PTransformTranslation.COMBINE_PER_KEY_TRANSFORM_URN, new CombinePerKeyTranslatorBatch());\n+        PTransformTranslation.COMBINE_PER_KEY_TRANSFORM_URN, new CombinePerKeyTranslatorBatch<>());\n     TRANSLATORS.put(\n-        PTransformTranslation.GROUP_BY_KEY_TRANSFORM_URN, new GroupByKeyTranslatorBatch());\n-    TRANSLATORS.put(PTransformTranslation.RESHUFFLE_URN, new ReshuffleTranslatorBatch());\n-\n+        PTransformTranslation.GROUP_BY_KEY_TRANSFORM_URN,\n+        new NonMergingGroupByKeyTranslatorBatch<>());\n     TRANSLATORS.put(\n-        PTransformTranslation.FLATTEN_TRANSFORM_URN, new FlattenPCollectionTranslatorBatch());\n-\n+        PTransformTranslation.GROUP_BY_KEY_TRANSFORM_URN, new GroupByKeyTranslatorBatch<>());\n+    TRANSLATORS.put(PTransformTranslation.RESHUFFLE_URN, new ReshuffleTranslatorBatch<>());\n     TRANSLATORS.put(\n-        PTransformTranslation.ASSIGN_WINDOWS_TRANSFORM_URN, new WindowAssignTranslatorBatch());\n-\n-    TRANSLATORS.put(PTransformTranslation.PAR_DO_TRANSFORM_URN, new ParDoTranslatorBatch());\n-\n-    TRANSLATORS.put(PTransformTranslation.READ_TRANSFORM_URN, new ReadSourceTranslatorBatch());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3b260280e67fbea73beadbe9e1bfde883cddbfe"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4MDY0Mw==", "bodyText": "Didn't see that this was the case. It's still an unrelated change and it draws attention away from the actual issue.", "url": "https://github.com/apache/beam/pull/11874#discussion_r433880643", "createdAt": "2020-06-02T13:37:32Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkBatchTranslationContext.java", "diffHunk": "@@ -68,13 +71,18 @@ public FlinkBatchTranslationContext(ExecutionEnvironment env, PipelineOptions op\n     this.danglingDataSets = new HashMap<>();\n   }\n \n+  void init(Pipeline pipeline) {\n+    pipeline.traverseTopologically(countingPipelineVisitor);\n+    pipeline.traverseTopologically(lookupPipelineVisitor);\n+  }\n+\n   // ------------------------------------------------------------------------\n \n-  public Map<PValue, DataSet<?>> getDanglingDataSets() {\n+  Map<PValue, DataSet<?>> getDanglingDataSets() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMjA0Nw=="}, "originalCommit": {"oid": "e4758ded721f100851ae7441dba415f6c490b47c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjgzNjY5", "url": "https://github.com/apache/beam/pull/11874#pullrequestreview-422683669", "createdAt": "2020-06-02T13:37:48Z", "commit": {"oid": "b3b260280e67fbea73beadbe9e1bfde883cddbfe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c451363db15126025d2b558213945c0bc0071b3", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/0c451363db15126025d2b558213945c0bc0071b3", "committedDate": "2020-06-02T13:56:01Z", "message": "[BEAM-8850,BEAM-8849] FlinkBatchTranslationContext respects input parameters during lookups. Add support for a multiple translation variants for a single urn."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c4536dc98f4574ab86f873d50796da3de41a804", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/3c4536dc98f4574ab86f873d50796da3de41a804", "committedDate": "2020-06-02T13:56:02Z", "message": "[BEAM-8848] Flink Batch Runner: optimize GBK translation for non-merging windows."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23a1fb711bce2af3a42b06f522139babcc72b285", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/23a1fb711bce2af3a42b06f522139babcc72b285", "committedDate": "2020-06-02T13:56:02Z", "message": "[BEAM-8848] Code review."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3b260280e67fbea73beadbe9e1bfde883cddbfe", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/b3b260280e67fbea73beadbe9e1bfde883cddbfe", "committedDate": "2020-06-02T13:31:26Z", "message": "[BEAM-8848] Code review."}, "afterCommit": {"oid": "23a1fb711bce2af3a42b06f522139babcc72b285", "author": {"user": {"login": "dmvk", "name": "David Moravek"}}, "url": "https://github.com/apache/beam/commit/23a1fb711bce2af3a42b06f522139babcc72b285", "committedDate": "2020-06-02T13:56:02Z", "message": "[BEAM-8848] Code review."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4485, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}