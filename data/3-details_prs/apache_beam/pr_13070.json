{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODgxOTUx", "number": 13070, "title": "[BEAM-11020] Adding multi-window splitting to Go SDF.", "bodyText": "Adjust Go SDF splitting and execution code so that splits take exploded windows into consideration and perform splits at window boundaries. Also required adjusting various split logic to accept multiple residuals and primaries from splits.\nThe changes to the splitting logic itself are in exec/sdf.go, and the tests are in the corresponding test file. The rest of the changes are mostly related to adjusting other code to handle the change from single primaries and restrictions to multiple primaries and restrictions, or just small bugfixes (like offsetrange.RTracker.GetProgress).\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-10T01:05:39Z", "url": "https://github.com/apache/beam/pull/13070", "merged": true, "mergeCommit": {"oid": "3b2b07d251f58ec00a0056ac368b443fea2f10d9"}, "closed": true, "closedAt": "2020-10-14T01:50:03Z", "author": {"login": "youngoli"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRAG6hAH2gAyNTAwODgxOTUxOmZlMjk1MDhjZDg1MmJlYjVkZTJjOWU3NjcwMzQ0ZWEzOWVhZjEwNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSSNqOgH2gAyNTAwODgxOTUxOjJhZWQ2NjcxOWU4NmY3Y2U4YTExYTcwMTFiZDI4YmNkOWJkMTYwODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/fe29508cd852beb5de2c9e7670344ea39eaf1048", "committedDate": "2020-10-10T01:01:30Z", "message": "[BEAM-11020] Adding multi-window splitting to Go SDF.\n\nAdjust Go SDF splitting and execution code so that splits take exploded windows into consideration and perform splits at window boundaries. Also required adjusting various split logic to accept multiple residuals and primaries from splits."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDUxMDQ1", "url": "https://github.com/apache/beam/pull/13070#pullrequestreview-506051045", "createdAt": "2020-10-10T01:16:21Z", "commit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMToxODo1NVrOHfcBcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMToxODo1NVrOHfcBcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNzAyNA==", "bodyText": "RM commented out line, OR swap the line below it with one that doesn't _ ignore the index. As far as I can read it,\nfor i, w := range elm.Windows {  should be identical and let you remove w := elm.Windows[i]", "url": "https://github.com/apache/beam/pull/13070#discussion_r502727024", "createdAt": "2020-10-10T01:18:55Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/runtime/exec/sdf.go", "diffHunk": "@@ -338,12 +348,17 @@ func (n *ProcessSizedElementsAndRestrictions) ProcessElement(_ context.Context,\n \t\t// If we need to process the element in multiple windows, each one needs\n \t\t// its own RTracker and progress must be tracked among all windows by\n \t\t// currW updated between processing.\n-\t\tfor _, w := range elm.Windows {\n+\t\tn.numW = len(elm.Windows)\n+\n+\t\t//for _, w := range elm.Windows {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODU2OTEw", "url": "https://github.com/apache/beam/pull/13070#pullrequestreview-506856910", "createdAt": "2020-10-12T19:13:24Z", "commit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToxMzoyNFrOHgKQCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTo0MjoxNFrOHgK-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4NDQyNA==", "bodyText": "Nit: nil seemed more explicit, why was this changed? (On that note, if one is empty must the other be empty as well, or is it OK to have one non-empty and treat that as an unsuccessful split?)", "url": "https://github.com/apache/beam/pull/13070#discussion_r503484424", "createdAt": "2020-10-12T19:13:24Z", "author": {"login": "robertwb"}, "path": "sdks/go/pkg/beam/core/runtime/exec/datasource.go", "diffHunk": "@@ -354,12 +354,12 @@ func (n *DataSource) Split(splits []int64, frac float64, bufSize int64) (SplitRe\n \t\treturn SplitResult{PI: s - 1, RI: s}, nil\n \t}\n \t// Otherwise, perform a sub-element split.\n-\tp, r, err := su.Split(fr)\n+\tps, rs, err := su.Split(fr)\n \tif err != nil {\n \t\treturn SplitResult{}, err\n \t}\n \n-\tif p == nil || r == nil { // Unsuccessful split.\n+\tif len(ps) == 0 || len(rs) == 0 { // Unsuccessful split.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ5NDk4Ng==", "bodyText": "Is there a convention here you could use to assert that there's only one element while getting it, rather than let any (unexpected?) other elements in the list be dropped?", "url": "https://github.com/apache/beam/pull/13070#discussion_r503494986", "createdAt": "2020-10-12T19:39:00Z", "author": {"login": "robertwb"}, "path": "sdks/go/pkg/beam/core/runtime/exec/dynsplit_test.go", "diffHunk": "@@ -103,11 +103,11 @@ func TestDynamicSplit(t *testing.T) {\n \t\t\t// with the input coder to the path.\n \t\t\t// TODO(BEAM-10579) Switch to using splittable unit's input coder\n \t\t\t// once that is implemented.\n-\t\t\tp, err := decodeDynSplitElm(splitRes.split.PS, cdr)\n+\t\t\tp, err := decodeDynSplitElm(splitRes.split.PS[0], cdr)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ5NjI0Mw==", "bodyText": "Ws his an existing bug?", "url": "https://github.com/apache/beam/pull/13070#discussion_r503496243", "createdAt": "2020-10-12T19:42:14Z", "author": {"login": "robertwb"}, "path": "sdks/go/pkg/beam/io/rtrackers/offsetrange/offsetrange.go", "diffHunk": "@@ -180,8 +180,8 @@ func (tracker *Tracker) TrySplit(fraction float64) (primary, residual interface{\n \n // GetProgress reports progress based on the claimed size and unclaimed sizes of the restriction.\n func (tracker *Tracker) GetProgress() (done, remaining float64) {\n-\tdone = float64(tracker.claimed - tracker.rest.Start)\n-\tremaining = float64(tracker.rest.End - tracker.claimed)\n+\tdone = float64((tracker.claimed + 1) - tracker.rest.Start)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe29508cd852beb5de2c9e7670344ea39eaf1048"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39e18a699d766cfcbc5e5b5cc00a4f456c8fe71f", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/39e18a699d766cfcbc5e5b5cc00a4f456c8fe71f", "committedDate": "2020-10-12T22:20:32Z", "message": "[BEAM-11020] Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aed66719e86f7ce8a11a7011bd28bcd9bd16081", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/2aed66719e86f7ce8a11a7011bd28bcd9bd16081", "committedDate": "2020-10-14T00:41:05Z", "message": "[BEAM-11020] More Fixup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1928, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}