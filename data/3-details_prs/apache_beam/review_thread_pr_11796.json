{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODcyMzM2", "number": 11796, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoyMTowNFrOD_wADw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoyMTowNFrOD_wADw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTczMzI3OnYy", "diffSide": "RIGHT", "path": "website/www/site/layouts/shortcodes/code_sample.html", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoyMTowNFrOGamJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoxNTo1MFrOGbXa6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MTMwNw==", "bodyText": "What does this part do:\n{{ $path := printf \"code_samples/%s\" (replaceRE \"/\" \"_\" (.Get 0)) }}\nI have 2 questions. What is this path? And why there is a need to replace / with _", "url": "https://github.com/apache/beam/pull/11796#discussion_r430541307", "createdAt": "2020-05-26T16:21:04Z", "author": {"login": "aaltay"}, "path": "website/www/site/layouts/shortcodes/code_sample.html", "diffHunk": "@@ -0,0 +1,15 @@\n+{{/*\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+   http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License. See accompanying LICENSE file.\n+*/}}\n+{{/*\n+  This shortcode is used to fetch a piece of code with tags from Beam code.\n+  There should be no breaklines here to make sure the string results do not get impacts of newlines.\n+*/}}{{ $tag := .Get 1 }}{{ $path := printf \"code_samples/%s\" (replaceRE \"/\" \"_\" (.Get 0)) }}{{ $data := readFile $path }}{{ $matchRegex := printf \"%s%s%s%s%s\" \"\\\\[START \" $tag \"]\\n[\\\\s\\\\S]*?\\n.*\\\\[END \" $tag \"]\" }}{{ $match := index (findRE $matchRegex $data) 0 }}{{ $lines := split $match \"\\n\" }}{{ $lineCount := len $lines }}{{ $cleanedLines := $lines | first (sub $lineCount 1) | last (sub $lineCount 2) }}{{ $firstLine := index $cleanedLines 0 }}{{ $numberOfWhitespaces := index (findRE \"^\\\\s*\" $firstLine) 0 | len }}{{ $unindentRegex := printf \"%s%d%s\" \"^\\\\s{\" $numberOfWhitespaces \"}\" }}{{ $unindentedLines := apply $cleanedLines \"replaceRE\" $unindentRegex \"\" \".\" }}{{ $result := delimit $unindentedLines \"\\n\" }}{{ print $result }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c81e80e5982153dca965245d9a59dba4698299e0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMyNzczMQ==", "bodyText": "In setupDockerContainer stage of build process, we run build_code_samples.sh script, which copies Beam project files from which we take code snippets to website/www/site/code_samples directory. We do that because Hugo can't access files which are outside of its project tree (Hugo's root is the directory that contains config.toml). When copying, we name this files according to convention path_to_file_filename.extension in order to avoid name conflicts.\n.Get 0 references an argument passed to code_sample shortcode which is a path to file with code snippet. So if you pass path/to/file/filename.py to code_sample, $path variable will have value code_samples/path_to_file_filename.py which Hugo can access.", "url": "https://github.com/apache/beam/pull/11796#discussion_r431327731", "createdAt": "2020-05-27T17:45:56Z", "author": {"login": "kgabryje"}, "path": "website/www/site/layouts/shortcodes/code_sample.html", "diffHunk": "@@ -0,0 +1,15 @@\n+{{/*\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+   http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License. See accompanying LICENSE file.\n+*/}}\n+{{/*\n+  This shortcode is used to fetch a piece of code with tags from Beam code.\n+  There should be no breaklines here to make sure the string results do not get impacts of newlines.\n+*/}}{{ $tag := .Get 1 }}{{ $path := printf \"code_samples/%s\" (replaceRE \"/\" \"_\" (.Get 0)) }}{{ $data := readFile $path }}{{ $matchRegex := printf \"%s%s%s%s%s\" \"\\\\[START \" $tag \"]\\n[\\\\s\\\\S]*?\\n.*\\\\[END \" $tag \"]\" }}{{ $match := index (findRE $matchRegex $data) 0 }}{{ $lines := split $match \"\\n\" }}{{ $lineCount := len $lines }}{{ $cleanedLines := $lines | first (sub $lineCount 1) | last (sub $lineCount 2) }}{{ $firstLine := index $cleanedLines 0 }}{{ $numberOfWhitespaces := index (findRE \"^\\\\s*\" $firstLine) 0 | len }}{{ $unindentRegex := printf \"%s%d%s\" \"^\\\\s{\" $numberOfWhitespaces \"}\" }}{{ $unindentedLines := apply $cleanedLines \"replaceRE\" $unindentRegex \"\" \".\" }}{{ $result := delimit $unindentedLines \"\\n\" }}{{ print $result }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MTMwNw=="}, "originalCommit": {"oid": "c81e80e5982153dca965245d9a59dba4698299e0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMzOTEzOA==", "bodyText": "Perfect. Could you update the above comment to explain the steps here so that it would be possible for someone to modify this if needed in the future.", "url": "https://github.com/apache/beam/pull/11796#discussion_r431339138", "createdAt": "2020-05-27T17:59:28Z", "author": {"login": "aaltay"}, "path": "website/www/site/layouts/shortcodes/code_sample.html", "diffHunk": "@@ -0,0 +1,15 @@\n+{{/*\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+   http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License. See accompanying LICENSE file.\n+*/}}\n+{{/*\n+  This shortcode is used to fetch a piece of code with tags from Beam code.\n+  There should be no breaklines here to make sure the string results do not get impacts of newlines.\n+*/}}{{ $tag := .Get 1 }}{{ $path := printf \"code_samples/%s\" (replaceRE \"/\" \"_\" (.Get 0)) }}{{ $data := readFile $path }}{{ $matchRegex := printf \"%s%s%s%s%s\" \"\\\\[START \" $tag \"]\\n[\\\\s\\\\S]*?\\n.*\\\\[END \" $tag \"]\" }}{{ $match := index (findRE $matchRegex $data) 0 }}{{ $lines := split $match \"\\n\" }}{{ $lineCount := len $lines }}{{ $cleanedLines := $lines | first (sub $lineCount 1) | last (sub $lineCount 2) }}{{ $firstLine := index $cleanedLines 0 }}{{ $numberOfWhitespaces := index (findRE \"^\\\\s*\" $firstLine) 0 | len }}{{ $unindentRegex := printf \"%s%d%s\" \"^\\\\s{\" $numberOfWhitespaces \"}\" }}{{ $unindentedLines := apply $cleanedLines \"replaceRE\" $unindentRegex \"\" \".\" }}{{ $result := delimit $unindentedLines \"\\n\" }}{{ print $result }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MTMwNw=="}, "originalCommit": {"oid": "c81e80e5982153dca965245d9a59dba4698299e0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0ODQ1Nw==", "bodyText": "Done \ud83d\ude42", "url": "https://github.com/apache/beam/pull/11796#discussion_r431348457", "createdAt": "2020-05-27T18:15:50Z", "author": {"login": "kgabryje"}, "path": "website/www/site/layouts/shortcodes/code_sample.html", "diffHunk": "@@ -0,0 +1,15 @@\n+{{/*\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+   http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License. See accompanying LICENSE file.\n+*/}}\n+{{/*\n+  This shortcode is used to fetch a piece of code with tags from Beam code.\n+  There should be no breaklines here to make sure the string results do not get impacts of newlines.\n+*/}}{{ $tag := .Get 1 }}{{ $path := printf \"code_samples/%s\" (replaceRE \"/\" \"_\" (.Get 0)) }}{{ $data := readFile $path }}{{ $matchRegex := printf \"%s%s%s%s%s\" \"\\\\[START \" $tag \"]\\n[\\\\s\\\\S]*?\\n.*\\\\[END \" $tag \"]\" }}{{ $match := index (findRE $matchRegex $data) 0 }}{{ $lines := split $match \"\\n\" }}{{ $lineCount := len $lines }}{{ $cleanedLines := $lines | first (sub $lineCount 1) | last (sub $lineCount 2) }}{{ $firstLine := index $cleanedLines 0 }}{{ $numberOfWhitespaces := index (findRE \"^\\\\s*\" $firstLine) 0 | len }}{{ $unindentRegex := printf \"%s%d%s\" \"^\\\\s{\" $numberOfWhitespaces \"}\" }}{{ $unindentedLines := apply $cleanedLines \"replaceRE\" $unindentRegex \"\" \".\" }}{{ $result := delimit $unindentedLines \"\\n\" }}{{ print $result }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MTMwNw=="}, "originalCommit": {"oid": "c81e80e5982153dca965245d9a59dba4698299e0"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3688, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}