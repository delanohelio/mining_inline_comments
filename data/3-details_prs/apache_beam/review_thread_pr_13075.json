{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNzQ2MDY1", "number": 13075, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMTo0MlrOEunOpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0OToyMVrOEvhG0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzEyNjc2OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMTo0MlrOHjIusA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0ODo1MlrOHki5yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwNTIzMg==", "bodyText": "I didn't expect to use AtomicInteger. Do you really need this?", "url": "https://github.com/apache/beam/pull/13075#discussion_r506605232", "createdAt": "2020-10-16T17:01:42Z", "author": {"login": "suztomo"}, "path": "buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy", "diffHunk": "@@ -21,6 +21,8 @@ package org.apache.beam.gradle\n import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar\n import groovy.json.JsonOutput\n import groovy.json.JsonSlurper\n+import java.util.concurrent.atomic.AtomicInteger", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a7a6c5a4a338a16928dd554f3052894121a4d61"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MjYzNA==", "bodyText": "I don't think this is necessary as well.", "url": "https://github.com/apache/beam/pull/13075#discussion_r508082634", "createdAt": "2020-10-19T21:48:52Z", "author": {"login": "lukecwik"}, "path": "buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy", "diffHunk": "@@ -21,6 +21,8 @@ package org.apache.beam.gradle\n import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar\n import groovy.json.JsonOutput\n import groovy.json.JsonSlurper\n+import java.util.concurrent.atomic.AtomicInteger", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwNTIzMg=="}, "originalCommit": {"oid": "8a7a6c5a4a338a16928dd554f3052894121a4d61"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjYwOTQ3OnYy", "diffSide": "RIGHT", "path": "examples/java/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0OToyMVrOHki6uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzozMDoyMFrOHmLTjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4Mjg3NQ==", "bodyText": "Should we be using enforcedPlatform instead of platform everywhere?\nBefore this change, we get enforcedPlatform like behavior because in BeamModulePlugin.groovy we are explicitly forcing version overrides.\nMigrating to enforcedPlatform would force the remainder of versions within the BOM to be used though which you haven't done as part of this PR (e.g. guava being 29.0-android).\nI don't see any gradle documentation that explains how an enforcedPlatform and a force resolutionStrategy  behave together.", "url": "https://github.com/apache/beam/pull/13075#discussion_r508082875", "createdAt": "2020-10-19T21:49:21Z", "author": {"login": "lukecwik"}, "path": "examples/java/build.gradle", "diffHunk": "@@ -48,6 +48,7 @@ configurations.sparkRunnerPreCommit {\n }\n \n dependencies {\n+  compile platform(library.java.google_cloud_platform_libraries_bom)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a7a6c5a4a338a16928dd554f3052894121a4d61"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5MzE2Ng==", "bodyText": "Updated to enforcedPlatform and going to update the rest of the dependencies in a follow up", "url": "https://github.com/apache/beam/pull/13075#discussion_r509793166", "createdAt": "2020-10-21T23:30:20Z", "author": {"login": "kileys"}, "path": "examples/java/build.gradle", "diffHunk": "@@ -48,6 +48,7 @@ configurations.sparkRunnerPreCommit {\n }\n \n dependencies {\n+  compile platform(library.java.google_cloud_platform_libraries_bom)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4Mjg3NQ=="}, "originalCommit": {"oid": "8a7a6c5a4a338a16928dd554f3052894121a4d61"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2941, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}