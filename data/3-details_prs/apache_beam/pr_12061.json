{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzA1NTUx", "number": 12061, "title": "[BEAM-4634] Add options to allow BigQuery StandardSQL queries.", "bodyText": "Currently, the Go SDK bigqueryiopackage is stuck in LegacySQL mode. This limits the type of queries developers can write the and types of tables they can query.  To allow developers to switch to Standard SQL mode, we introduce a QueryOptions struct which can be passed. Future work could reuse this struct to also control validation and flattening, mirroring the Python and Java Bigquery IO packages.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-23T04:17:36Z", "url": "https://github.com/apache/beam/pull/12061", "merged": true, "mergeCommit": {"oid": "8aa13920e6a9fd9692e56bef73c4ac18223d27ae"}, "closed": true, "closedAt": "2020-06-24T00:30:35Z", "author": {"login": "bamnet"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct9dqcgH2gAyNDM4MzA1NTUxOjdhZTk5MmNkNWUxZjkwY2I0YzMwNTcxNWM4NzcxZjlhMDU1NGExNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuOFPyAH2gAyNDM4MzA1NTUxOjBhNTYwMjI5ODYyNzU5MmI3YzA5ZDk2MjAyODcyNjgyMjFmMGM5OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ae992cd5e1f90cb4c305715c8771f9a0554a14d", "author": {"user": {"login": "bamnet", "name": "Brian Michalski"}}, "url": "https://github.com/apache/beam/commit/7ae992cd5e1f90cb4c305715c8771f9a0554a14d", "committedDate": "2020-06-23T04:09:17Z", "message": "Add options to allow BigQuery StandardSQL queries."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTQyNDk1", "url": "https://github.com/apache/beam/pull/12061#pullrequestreview-435942495", "createdAt": "2020-06-23T16:14:54Z", "commit": {"oid": "7ae992cd5e1f90cb4c305715c8771f9a0554a14d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNDo1NFrOGnwrbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNDo1NFrOGnwrbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0NTE5Nw==", "bodyText": "I'm less familiar with Big Query and it's option set, but consider switching this to a variadic list of functional options ala https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis  In particular, this avoids a breaking compile change when the (admitedly few) users of this function update their beam.\nIt doesn't remove the need for a QueryOptions struct to serialize the options, but it does allow the callsite to not have empty options every time.\nI don't feel super strongly about this as it's likely this package will likely need updating when we fix module versioning, but it's a suggestion worth discussing.", "url": "https://github.com/apache/beam/pull/12061#discussion_r444345197", "createdAt": "2020-06-23T16:14:54Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/io/bigqueryio/bigquery.go", "diffHunk": "@@ -90,21 +90,27 @@ func Read(s beam.Scope, project, table string, t reflect.Type) beam.PCollection\n \n \t// TODO(herohde) 7/13/2017: using * is probably too inefficient. We could infer\n \t// a focused query from the type.\n-\treturn query(s, project, fmt.Sprintf(\"SELECT * from [%v]\", table), t)\n+\treturn query(s, project, fmt.Sprintf(\"SELECT * from [%v]\", table), t, nil)\n+}\n+\n+// QueryOptions represents additional options for executing a query.\n+type QueryOptions struct {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ae992cd5e1f90cb4c305715c8771f9a0554a14d"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93cc99b78933559260b18f002e6c7ca3a4e464f5", "author": {"user": {"login": "bamnet", "name": "Brian Michalski"}}, "url": "https://github.com/apache/beam/commit/93cc99b78933559260b18f002e6c7ca3a4e464f5", "committedDate": "2020-06-23T20:12:54Z", "message": "Switch to list of functional options.\n\nThis API design feels cleaner and introducing a breaking change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MjEwMTc4", "url": "https://github.com/apache/beam/pull/12061#pullrequestreview-436210178", "createdAt": "2020-06-23T22:44:36Z", "commit": {"oid": "93cc99b78933559260b18f002e6c7ca3a4e464f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjo0NDozNlrOGn9GBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjo0NDozNlrOGn9GBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0ODYxNQ==", "bodyText": "Part of the functional options is to have the user level functions return functions. This allows for closures over user configuration for more complicated options later on.  Probably doesn't matter in this case, but otherwise:\neg.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            func UseStandardSQL(qo *QueryOptions) error {\n          \n          \n            \n            \tqo.UseStandardSQL = true\n          \n          \n            \n            \treturn nil\n          \n          \n            \n            }\n          \n          \n            \n            func UseStandardSQL() func(qo *QueryOptions) error {\n          \n          \n            \n            \treturn func(qo *QueryOptions) error\n          \n          \n            \n            \t\tqo.UseStandardSQL = true\n          \n          \n            \n            \t\treturn nil\n          \n          \n            \n            \t}\n          \n          \n            \n            }\n          \n      \n    \n    \n  \n\nI'd probably drop the \"use\" so it's just StandardSQL.  When there are more of these, the repeated Use prefix will get tiresome and reduce readability.", "url": "https://github.com/apache/beam/pull/12061#discussion_r444548615", "createdAt": "2020-06-23T22:44:36Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/io/bigqueryio/bigquery.go", "diffHunk": "@@ -93,18 +93,37 @@ func Read(s beam.Scope, project, table string, t reflect.Type) beam.PCollection\n \treturn query(s, project, fmt.Sprintf(\"SELECT * from [%v]\", table), t)\n }\n \n+// QueryOptions represents additional options for executing a query.\n+type QueryOptions struct {\n+\t// UseStandardSQL enables BigQuery's Standard SQL dialect when executing a query.\n+\tUseStandardSQL bool\n+}\n+\n+// UseStandardSQL enables BigQuery's Standard SQL dialect when executing a query.\n+func UseStandardSQL(qo *QueryOptions) error {\n+\tqo.UseStandardSQL = true\n+\treturn nil\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cc99b78933559260b18f002e6c7ca3a4e464f5"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a5602298627592b7c09d9620287268221f0c996", "author": {"user": {"login": "bamnet", "name": "Brian Michalski"}}, "url": "https://github.com/apache/beam/commit/0a5602298627592b7c09d9620287268221f0c996", "committedDate": "2020-06-23T23:31:00Z", "message": "Return a function.\n\nThis allows for more complicated configuration options later on."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3696, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}