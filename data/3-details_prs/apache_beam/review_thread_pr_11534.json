{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NDk5MDcy", "number": 11534, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTozMDozMVrOD46hXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOToyNjo1MVrOD5UpaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDA1NjYzOnYy", "diffSide": "RIGHT", "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTozMDozMlrOGP45iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo1MjowMlrOGQiMSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw==", "bodyText": "You can omit all the bolierplate here (including the builder) by using AutoValue, did you consider it?", "url": "https://github.com/apache/beam/pull/11534#discussion_r419314057", "createdAt": "2020-05-04T09:30:32Z", "author": {"login": "mwalenia"}, "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.testutils.publishing;\n+\n+import static java.util.Objects.isNull;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+public final class InfluxDBSettings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2NjA3Nw==", "bodyText": "Yeah, I was thinking about it in the first place. We have some custom behavior here (like copyWithMeasurement or default value for host) which, correct me if I'm wrong, could not be achieved with AutoValue.\nIf it is possible I can rewrite this implementation with AV", "url": "https://github.com/apache/beam/pull/11534#discussion_r419966077", "createdAt": "2020-05-05T09:07:52Z", "author": {"login": "pawelpasterz"}, "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.testutils.publishing;\n+\n+import static java.util.Objects.isNull;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+public final class InfluxDBSettings {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw=="}, "originalCommit": {"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4NTA4Ng==", "bodyText": "I think copying with measurement is possible with AV, but I'm not sure about default values. I think we can leave this as is and refactor later if necessary.", "url": "https://github.com/apache/beam/pull/11534#discussion_r419985086", "createdAt": "2020-05-05T09:41:58Z", "author": {"login": "mwalenia"}, "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.testutils.publishing;\n+\n+import static java.util.Objects.isNull;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+public final class InfluxDBSettings {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw=="}, "originalCommit": {"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MDYwMQ==", "bodyText": "I have some ideas how to refactor metrics and publishing in general. My idea was to refactor it once we move to Influx", "url": "https://github.com/apache/beam/pull/11534#discussion_r419990601", "createdAt": "2020-05-05T09:52:02Z", "author": {"login": "pawelpasterz"}, "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.testutils.publishing;\n+\n+import static java.util.Objects.isNull;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+public final class InfluxDBSettings {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw=="}, "originalCommit": {"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDE1NzMyOnYy", "diffSide": "RIGHT", "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMDowMToxMFrOGP538A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTowODozMFrOGQgtxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzMDAzMg==", "bodyText": "For the time being this is unnecessary, the results will be published to the console twice, since BQ publisher does the same thing.", "url": "https://github.com/apache/beam/pull/11534#discussion_r419330032", "createdAt": "2020-05-04T10:01:10Z", "author": {"login": "mwalenia"}, "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java", "diffHunk": "@@ -70,4 +72,21 @@ public static void publish(\n     }\n     ConsoleResultPublisher.publish(results, uuid, timestamp);\n   }\n+\n+  public void publishToInflux(final InfluxDBSettings settings) {\n+    MetricsReader reader = new MetricsReader(result, namespace);\n+    Collection<NamedTestResult> namedTestResults = reader.readAll(metricSuppliers);\n+\n+    InfluxDBPublisher.publishWithSettings(namedTestResults, settings);\n+  }\n+\n+  public static void publishToInflux(\n+      final String uuid,\n+      final String timestamp,\n+      final Collection<NamedTestResult> results,\n+      final InfluxDBSettings settings) {\n+\n+    InfluxDBPublisher.publishWithSettings(results, settings);\n+    ConsoleResultPublisher.publish(results, uuid, timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2NjQwNg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/beam/pull/11534#discussion_r419966406", "createdAt": "2020-05-05T09:08:30Z", "author": {"login": "pawelpasterz"}, "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java", "diffHunk": "@@ -70,4 +72,21 @@ public static void publish(\n     }\n     ConsoleResultPublisher.publish(results, uuid, timestamp);\n   }\n+\n+  public void publishToInflux(final InfluxDBSettings settings) {\n+    MetricsReader reader = new MetricsReader(result, namespace);\n+    Collection<NamedTestResult> namedTestResults = reader.readAll(metricSuppliers);\n+\n+    InfluxDBPublisher.publishWithSettings(namedTestResults, settings);\n+  }\n+\n+  public static void publishToInflux(\n+      final String uuid,\n+      final String timestamp,\n+      final Collection<NamedTestResult> results,\n+      final InfluxDBSettings settings) {\n+\n+    InfluxDBPublisher.publishWithSettings(results, settings);\n+    ConsoleResultPublisher.publish(results, uuid, timestamp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzMDAzMg=="}, "originalCommit": {"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDMzNzA1OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOToyNjo1MlrOGQhVfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo1MzowMVrOGQiONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3NjU3NQ==", "bodyText": "Nit: typo :)", "url": "https://github.com/apache/beam/pull/11534#discussion_r419976575", "createdAt": "2020-05-05T09:26:52Z", "author": {"login": "mwalenia"}, "path": "sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java", "diffHunk": "@@ -43,4 +43,22 @@\n   String getBigQueryTable();\n \n   void setBigQueryTable(@Nullable String tableName);\n+\n+  @Description(\"InfluxDB measurement to publish results to.\")\n+  @Nullable\n+  String getInfluxMeasurement();\n+\n+  void setInfluxMeasurement(@Nullable String measurement);\n+\n+  @Description(\"InfluxDB host.\")\n+  @Nullable\n+  String getInfluxHost();\n+\n+  void setInfluxHost(@Nullable String host);\n+\n+  @Description(\"InfluxDB databse.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1ead96765317d3a84ecfda166db5c39665d99d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MTA5NQ==", "bodyText": "\ud83d\udc4d Thanks for catching this, shame on me", "url": "https://github.com/apache/beam/pull/11534#discussion_r419991095", "createdAt": "2020-05-05T09:53:01Z", "author": {"login": "pawelpasterz"}, "path": "sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java", "diffHunk": "@@ -43,4 +43,22 @@\n   String getBigQueryTable();\n \n   void setBigQueryTable(@Nullable String tableName);\n+\n+  @Description(\"InfluxDB measurement to publish results to.\")\n+  @Nullable\n+  String getInfluxMeasurement();\n+\n+  void setInfluxMeasurement(@Nullable String measurement);\n+\n+  @Description(\"InfluxDB host.\")\n+  @Nullable\n+  String getInfluxHost();\n+\n+  void setInfluxHost(@Nullable String host);\n+\n+  @Description(\"InfluxDB databse.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3NjU3NQ=="}, "originalCommit": {"oid": "8e1ead96765317d3a84ecfda166db5c39665d99d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1154, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}