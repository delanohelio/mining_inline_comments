{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTgzMjQ5", "number": 11276, "title": "[BEAM-7923] An indicator of progress in notebooks", "bodyText": "The problem: when an intended blocking call such as show, collect\nor head is invoked, the user sometimes doesn't realize the code is\nstill running and blocking. Also, the * prompts in notebooks are\neasily ignored and sometimes buggy. We need an obvious progress\nindicator to tell the user that the data/pipeline is being processed\nand potentially expose more metrics about running pipelines through\nthe mechanism.\nAdded a ProgressIndicator class that functions as a context manager\nto display/remove a spinner on entering/exiting a blocking code\nexecution.\nAdded a progress_indicated decorator to make any callable adapt the\nProgressIndicator.\nWhen in notebooks, a spinner is displayed. When in ipython but\nwithout frontends, texts will be displayed on entering/exiting.\nOtherwise, NOOP.\n\nPlease add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-31T20:31:17Z", "url": "https://github.com/apache/beam/pull/11276", "merged": true, "mergeCommit": {"oid": "bf7ab3b6fa730bb8376f94fdbda60de375b11413"}, "closed": true, "closedAt": "2020-04-02T17:01:34Z", "author": {"login": "KevinGG"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTJSI0AH2gAyMzk2NTgzMjQ5OmQ4ZWQ5YmM2YjIyMDkzYmVlYzk0NjEzZTlkNjNmMTA3YWM2MTgwYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTMMvMgH2gAyMzk2NTgzMjQ5OmZhZThlMTA1NjczMmJkMWY4NDdkYTU4MzY3ZWFkZDJiOTkzY2RlZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/d8ed9bc6b22093beec94613e9d63f107ac6180c2", "committedDate": "2020-03-31T20:39:36Z", "message": "[BEAM-7923] An indicator of progress in notebooks\n\n1. The problem: when an intended blocking call such as `show`, `collect`\n   or `head` is invoked, the user sometimes doesn't realize the code is\n   still running and blocking. Also, the `*` prompts in notebooks are\n   easily ignored and sometimes buggy. We need an obvious progress\n   indicator to tell the user that the data/pipeline is being processed\n   and potentially expose more metrics about running pipelines through\n   the mechanism.\n2. Added a ProgressIndicator class that functions as a context manager\n   to display/remove a spinner on entering/exiting a blocking code\n   execution.\n3. Added a progress_indicated decorator to make any callable adapt the\n   ProgressIndicator.\n4. When in notebooks, a spinner is displayed. When in ipython but\n   without frontends, texts will be displayed on entering/exiting.\n   Otherwise, NOOP."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45d029d928e880e23395ac45984ff2da86776a52", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/45d029d928e880e23395ac45984ff2da86776a52", "committedDate": "2020-03-31T20:22:12Z", "message": "[BEAM-7923] An indicator of progress in notebooks\n\n1. The problem: when an intended blocking call such as `show`, `collect`\n   or `head` is invoked, the user sometimes doesn't realize the code is\n   still running and blocking. Also, the `*` prompts in notebooks are\n   easily ignored and sometimes buggy. We need an obvious progress\n   indicator to tell the user that the data/pipeline is being processed\n   and potentially expose more metrics about running pipelines through\n   the mechanism.\n2. Added a ProgressIndicator class that functions as a context manager\n   to display/remove a spinner on entering/exiting a blocking code\n   execution.\n3. Added a progress_indicated decorator to make any callable adapt the\n   ProgressIndicator.\n4. When in notebooks, a spinner is displayed. When in ipython but\n   without frontends, texts will be displayed on entering/exiting.\n   Otherwise, NOOP."}, "afterCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/d8ed9bc6b22093beec94613e9d63f107ac6180c2", "committedDate": "2020-03-31T20:39:36Z", "message": "[BEAM-7923] An indicator of progress in notebooks\n\n1. The problem: when an intended blocking call such as `show`, `collect`\n   or `head` is invoked, the user sometimes doesn't realize the code is\n   still running and blocking. Also, the `*` prompts in notebooks are\n   easily ignored and sometimes buggy. We need an obvious progress\n   indicator to tell the user that the data/pipeline is being processed\n   and potentially expose more metrics about running pipelines through\n   the mechanism.\n2. Added a ProgressIndicator class that functions as a context manager\n   to display/remove a spinner on entering/exiting a blocking code\n   execution.\n3. Added a progress_indicated decorator to make any callable adapt the\n   ProgressIndicator.\n4. When in notebooks, a spinner is displayed. When in ipython but\n   without frontends, texts will be displayed on entering/exiting.\n   Otherwise, NOOP."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTA4ODU2", "url": "https://github.com/apache/beam/pull/11276#pullrequestreview-385108856", "createdAt": "2020-03-31T21:13:05Z", "commit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTQ0MzA0", "url": "https://github.com/apache/beam/pull/11276#pullrequestreview-385144304", "createdAt": "2020-03-31T22:17:40Z", "commit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzo0MVrOF-qQQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzo0M1rOF-qQVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw==", "bodyText": "Is it fine to link to a 3rd party domain here?", "url": "https://github.com/apache/beam/pull/11276#discussion_r401248323", "createdAt": "2020-03-31T22:17:41Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODM0MQ==", "bodyText": "what is obfuscate? and why obfuscate the id?", "url": "https://github.com/apache/beam/pull/11276#discussion_r401248341", "createdAt": "2020-03-31T22:17:43Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n+            <div id=\"{id}\" class=\"spinner-border text-info\" role=\"status\">\n+            </div>\"\"\"\n+  spinner_removal_template = \"\"\"\n+            $(\"#{id}\").remove();\"\"\"\n+\n+  def __init__(self, enter_text, exit_text):\n+    # type: (str, str) -> None\n+\n+    self._id = 'progress_indicator_{}'.format(obfuscate(id(self)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fae8e1056732bd1f847da58367eadd2b993cded5", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/fae8e1056732bd1f847da58367eadd2b993cded5", "committedDate": "2020-04-01T00:03:25Z", "message": "Added a TODO item to change the CDN of bootstrap when google ajax API hosts it."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4844, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}