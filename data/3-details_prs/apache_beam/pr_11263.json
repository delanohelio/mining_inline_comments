{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODU2ODIw", "number": 11263, "title": "[BEAM-9325] Override proper write method in UnownedOutputStream", "bodyText": "org.apache.beam.sdk.util.UnownedOutputStream does not override the method\npublic void write(byte b[], int off, int len) throws IOException\nresulting in extremely slow writing speed.\nThis is because java.io.FilteredOutputStream does not provide a proper method.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n[R: @iemejia ] Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-30T19:39:48Z", "url": "https://github.com/apache/beam/pull/11263", "merged": true, "mergeCommit": {"oid": "e15a41d95b0d5fa7397ecdca81b7be6997455b6e"}, "closed": true, "closedAt": "2020-03-31T20:07:51Z", "author": {"login": "lukemin89"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSzknIAH2gAyMzk1ODU2ODIwOjQ3OTE0OGQ2NDRkNWZiZDBiYzYzNjZhOGM5ZWM0MGU5MDBhMThlMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTIGf_gFqTM4NTAzMTEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "479148d644d5fbd0bc6366a8c9ec40e900a18e23", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/479148d644d5fbd0bc6366a8c9ec40e900a18e23", "committedDate": "2020-03-30T19:21:52Z", "message": "[BEAM-9325] Added Proper Write Method in UnownedOutputStream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fabfedb04041746ead1bbcc3a70e35730847d93", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0fabfedb04041746ead1bbcc3a70e35730847d93", "committedDate": "2020-03-30T19:45:21Z", "message": "fix format warning"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjIwMDk2", "url": "https://github.com/apache/beam/pull/11263#pullrequestreview-384220096", "createdAt": "2020-03-30T20:50:49Z", "commit": {"oid": "0fabfedb04041746ead1bbcc3a70e35730847d93"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1MDo0OVrOF97s3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1MDo0OVrOF97s3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NTU5Nw==", "bodyText": "should not this call the method with the full signature?\nMaybe it is best to inline this method in the caller, looks simpler IMO", "url": "https://github.com/apache/beam/pull/11263#discussion_r400485597", "createdAt": "2020-03-30T20:50:49Z", "author": {"login": "iemejia"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/util/UnownedOutputStreamTest.java", "diffHunk": "@@ -53,4 +57,21 @@ public void testClosingThrows() throws Exception {\n     expectedException.expectMessage(\"Caller does not own the underlying\");\n     os.close();\n   }\n+\n+  @Test\n+  public void testWrite() throws IOException {\n+    ByteArrayOutputStream expected = new ByteArrayOutputStream();\n+    ByteArrayOutputStream actual = new ByteArrayOutputStream();\n+    UnownedOutputStream osActual = new UnownedOutputStream(actual);\n+\n+    writeToBoth(expected, osActual, \"Hello World!\".getBytes(StandardCharsets.UTF_8));\n+    writeToBoth(expected, osActual, \"Welcome!\".getBytes(StandardCharsets.UTF_8));\n+\n+    assertArrayEquals(expected.toByteArray(), actual.toByteArray());\n+  }\n+\n+  private static void writeToBoth(OutputStream a, OutputStream b, byte[] data) throws IOException {\n+    a.write(data);\n+    b.write(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fabfedb04041746ead1bbcc3a70e35730847d93"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638", "committedDate": "2020-03-30T22:53:51Z", "message": "[BEAM-9325] reflect comment : inline testing methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0ODY3NzY0", "url": "https://github.com/apache/beam/pull/11263#pullrequestreview-384867764", "createdAt": "2020-03-31T15:47:06Z", "commit": {"oid": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTo0NzowN1rOF-cWrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTo0NzowN1rOF-cWrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDU5MA==", "bodyText": "This won't actually test that the singular version of the method was called since if FilteredOutputStream wrote one byte at a time you would still get the expected result. You'll need to use a mock and validate that #write(byte[], int, int) was called the correct number of times.", "url": "https://github.com/apache/beam/pull/11263#discussion_r401020590", "createdAt": "2020-03-31T15:47:07Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/util/UnownedOutputStreamTest.java", "diffHunk": "@@ -53,4 +56,22 @@ public void testClosingThrows() throws Exception {\n     expectedException.expectMessage(\"Caller does not own the underlying\");\n     os.close();\n   }\n+\n+  @Test\n+  public void testWrite() throws IOException {\n+    ByteArrayOutputStream expected = new ByteArrayOutputStream();\n+    ByteArrayOutputStream actual = new ByteArrayOutputStream();\n+    UnownedOutputStream osActual = new UnownedOutputStream(actual);\n+\n+    byte[] data0 = \"Hello World!\".getBytes(StandardCharsets.UTF_8);\n+    byte[] data1 = \"Welcome!\".getBytes(StandardCharsets.UTF_8);\n+\n+    expected.write(data0, 0, data0.length);\n+    osActual.write(data0, 0, data0.length);\n+\n+    expected.write(data1, 0, data1.length);\n+    osActual.write(data1, 0, data1.length);\n+\n+    assertArrayEquals(expected.toByteArray(), actual.toByteArray());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTAzNzYz", "url": "https://github.com/apache/beam/pull/11263#pullrequestreview-384903763", "createdAt": "2020-03-31T16:27:47Z", "commit": {"oid": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoyNzo0N1rOF-eHHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoyNzo0N1rOF-eHHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0OTM3Mw==", "bodyText": "Wondering if we should do the bounds check here too (like in FilterOutputStream or we assume that the delegated does the check? opinions @lukecwik", "url": "https://github.com/apache/beam/pull/11263#discussion_r401049373", "createdAt": "2020-03-31T16:27:47Z", "author": {"login": "iemejia"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/UnownedOutputStream.java", "diffHunk": "@@ -53,4 +53,9 @@ public int hashCode() {\n   public String toString() {\n     return MoreObjects.toStringHelper(UnownedOutputStream.class).add(\"out\", out).toString();\n   }\n+\n+  @Override\n+  public void write(byte[] b, int off, int len) throws IOException {\n+    out.write(b, off, len);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f08bb5e4aaef1b1acb131282ba4e8068840374bf", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f08bb5e4aaef1b1acb131282ba4e8068840374bf", "committedDate": "2020-03-31T17:03:06Z", "message": "[BEAM-9325] reflect comment : Fix JAXBCoder + change test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTM3MDQx", "url": "https://github.com/apache/beam/pull/11263#pullrequestreview-384937041", "createdAt": "2020-03-31T17:09:13Z", "commit": {"oid": "f08bb5e4aaef1b1acb131282ba4e8068840374bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDMxMTMz", "url": "https://github.com/apache/beam/pull/11263#pullrequestreview-385031133", "createdAt": "2020-03-31T19:16:59Z", "commit": {"oid": "f08bb5e4aaef1b1acb131282ba4e8068840374bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4775, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}