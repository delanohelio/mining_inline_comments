{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODQwMDgx", "number": 11086, "title": "[BEAM-8910] Make custom BQ source read from Avro", "bodyText": "This adds support for reading data from BigQuery using FastAvro in the new BigQuery source transform: _ReadFromBigQuery.\nThis creates a few subtle changes in the way that data is returned by BigQuery. These changes are the following:\n\n\nAll the time-specific data types in BigQuery (DATE, DATETIME, TIMESTAMP) are converted into Python-specific types (datetime.date, datetime.datetime, datetime.datetime).\n\nThis is different from BigQuerySource, where we export JSON data, and all of these datatypes are returned as strings.\n\n\n\nThe BigQuery BYTES type is returned as Python bytes.\n\nThis is different from BigQuerySource, where we export JSON data. For JSON, BigQuery (and beam's BigQuerySource) returns base64-encoded bytes.\n\n\n\nNote that in tests, the behavior of BigQuerySource remains the same, while _ReadFromBigQuery has different behavior.\nThis transform does not need to honor backwards compatibility, as it is a new transform, and it will not replace BigQuerySource automatically. Nonetheless, we should definitely note the subtle API differences for it.\nr: @chamikaramj @tvalentyn @kamilwu\ncc: @mwalenia\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-09T22:03:46Z", "url": "https://github.com/apache/beam/pull/11086", "merged": true, "mergeCommit": {"oid": "dfc4bde1837a020d723801e39d7177231f49168c"}, "closed": true, "closedAt": "2020-06-16T17:54:46Z", "author": {"login": "pabloem"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMaFD7ABqjMxMTY2NDQ1MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrpnqFgBqjM0NDY2NDg3MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c2e44a1f24d6a771ca19347cfeb55e341403428", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/1c2e44a1f24d6a771ca19347cfeb55e341403428", "committedDate": "2020-03-09T22:03:07Z", "message": "Make custom BQ source read from Avro"}, "afterCommit": {"oid": "5c58f531c7bd90dd5c03fac1924980c963283da2", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/5c58f531c7bd90dd5c03fac1924980c963283da2", "committedDate": "2020-03-10T22:15:36Z", "message": "Using avro logical types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "444094f4942c44b90b8b054962ecea1da8e48fb9", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/444094f4942c44b90b8b054962ecea1da8e48fb9", "committedDate": "2020-03-11T22:53:41Z", "message": "Matching appropriately"}, "afterCommit": {"oid": "a25b0793c44da4cdcc675fa2d6728271ca2367c0", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a25b0793c44da4cdcc675fa2d6728271ca2367c0", "committedDate": "2020-03-12T16:49:25Z", "message": "Matching appropriately"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjE0NDMy", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-378214432", "createdAt": "2020-03-20T03:15:38Z", "commit": {"oid": "950abf9d6d95f94c6284958b13248a7ab21702dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNTozOFrOF5Grag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNTozOFrOF5Grag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjU3MA==", "bodyText": "How intuitive will this behavior be to users? should't the output be consistent?\nIf we decide to keep it, how will this be documented?", "url": "https://github.com/apache/beam/pull/11086#discussion_r395422570", "createdAt": "2020-03-20T03:15:38Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_read_it_test.py", "diffHunk": "@@ -236,11 +251,12 @@ def create_table(cls, table_name):\n     cls.bigquery_client.insert_rows(\n         cls.project, cls.dataset_id, table_name, table_data)\n \n-  def get_expected_data(self):\n+  def get_expected_data(self, native=True):\n+    byts = b'\\xab\\xac'\n     expected_row = {\n         'float': 0.33,\n         'numeric': Decimal('10'),\n-        'bytes': base64.b64encode(b'\\xab\\xac'),\n+        'bytes': base64.b64encode(byts) if native else byts,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "950abf9d6d95f94c6284958b13248a7ab21702dc"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjcxMDI3", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-379671027", "createdAt": "2020-03-23T17:43:28Z", "commit": {"oid": "950abf9d6d95f94c6284958b13248a7ab21702dc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzo0MzoyOFrOF6Q0Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzo0NTo0MFrOF6Q59g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzNzI2Mw==", "bodyText": "Does it mean that coder is no longer needed for _CustomBigQuerySource?", "url": "https://github.com/apache/beam/pull/11086#discussion_r396637263", "createdAt": "2020-03-23T17:43:28Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -663,14 +662,10 @@ def split(self, desired_bundle_size, start_position=None, stop_position=None):\n         self._setup_temporary_dataset(bq)\n         self.table_reference = self._execute_query(bq)\n \n-      schema, metadata_list = self._export_files(bq)\n+      unused_schema, metadata_list = self._export_files(bq)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "950abf9d6d95f94c6284958b13248a7ab21702dc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzODcxMA==", "bodyText": "We can combine this condition with the one below:\nif isinstance(v, datetime.time) or isinstance(v, datetime.date):", "url": "https://github.com/apache/beam/pull/11086#discussion_r396638710", "createdAt": "2020-03-23T17:45:40Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_read_it_test.py", "diffHunk": "@@ -69,6 +70,20 @@ def wrapped(self):\n   return inner\n \n \n+def datetime_to_utc(element):\n+  for k, v in element.items():\n+    if isinstance(v, datetime.time):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "950abf9d6d95f94c6284958b13248a7ab21702dc"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b908133cb9b49aadaf52a60f81cea76dcca08e3d", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/b908133cb9b49aadaf52a60f81cea76dcca08e3d", "committedDate": "2020-04-10T02:40:39Z", "message": "Fixup"}, "afterCommit": {"oid": "1f647e488d85eb1a072737a680825a2606d7dc8b", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/1f647e488d85eb1a072737a680825a2606d7dc8b", "committedDate": "2020-04-10T19:48:08Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjkwNzg1", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-391690785", "createdAt": "2020-04-10T22:26:23Z", "commit": {"oid": "80138416bcd10b84b3a473d83738c52d970f91f5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjoyNjoyM1rOGEHXbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjozMjoyMFrOGEHdDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2ODE3Mw==", "bodyText": "Can we use a bool as a default value instead of None?\nCan we use rename this flag to something that describes the course of action, for example: use_json_data_representation=False - you can come up with a better name.", "url": "https://github.com/apache/beam/pull/11086#discussion_r406968173", "createdAt": "2020-04-10T22:26:23Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -609,7 +611,8 @@ def __init__(\n       coder=None,\n       use_standard_sql=False,\n       flatten_results=True,\n-      kms_key=None):\n+      kms_key=None,\n+      backwards_compatible_data_format=None):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80138416bcd10b84b3a473d83738c52d970f91f5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2OTYxMw==", "bodyText": "Do all BQ types have a native python type?\nWhat are JSON-types?", "url": "https://github.com/apache/beam/pull/11086#discussion_r406969613", "createdAt": "2020-04-10T22:32:20Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1570,6 +1584,10 @@ class _ReadFromBigQuery(PTransform):\n       bucket where the extracted table should be written as a string or\n       a :class:`~apache_beam.options.value_provider.ValueProvider`. If\n       :data:`None`, then the temp_location parameter is used.\n+    backwards_compatible_data_format (bool): By default, this transform reads\n+      data in native Python types that come from Avro-exports of BigQuery. By\n+      setting this flag to True, the transform will return JSON-types, like\n+      the older BigQuerySource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80138416bcd10b84b3a473d83738c52d970f91f5"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTk3NzIx", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-393997721", "createdAt": "2020-04-15T17:45:30Z", "commit": {"oid": "0864dbdd00e47152b6d904d1d9b1ad8400c81f52"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzo0NTozMFrOGGEv1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowMDoyN1rOGGFShQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyMjQyMQ==", "bodyText": "Let's document subtle differences between the two types (and two transforms ?) in doc comments of _ReadFromBigQuery so that users who upgrade/change the BigQuery read transforms have clear guidelines for updating their pipelines.", "url": "https://github.com/apache/beam/pull/11086#discussion_r409022421", "createdAt": "2020-04-15T17:45:30Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -732,11 +748,20 @@ def _export_files(self, bq):\n       bigquery.TableSchema instance, a list of FileMetadata instances\n     \"\"\"\n     job_id = uuid.uuid4().hex\n-    job_ref = bq.perform_extract_job([self.gcs_location],\n-                                     job_id,\n-                                     self.table_reference,\n-                                     bigquery_tools.FileFormat.JSON,\n-                                     include_header=False)\n+    if self.use_json_exports:\n+      job_ref = bq.perform_extract_job([self.gcs_location],\n+                                       job_id,\n+                                       self.table_reference,\n+                                       bigquery_tools.FileFormat.JSON,\n+                                       include_header=False)\n+    else:\n+      job_ref = bq.perform_extract_job([self.gcs_location],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864dbdd00e47152b6d904d1d9b1ad8400c81f52"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyNDg1OA==", "bodyText": "Probably cleaner to use the \"param_name=value\" format here for keyword arguments and not specify anything when we just want the default.", "url": "https://github.com/apache/beam/pull/11086#discussion_r409024858", "createdAt": "2020-04-15T17:49:40Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -669,6 +681,13 @@ def estimate_size(self):\n       # no access to the query that we're running.\n       return None\n \n+  def _create_source(self, path, schema):\n+    if not self.use_json_exports:\n+      return create_avro_source(path, 0, True, use_fastavro=True)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864dbdd00e47152b6d904d1d9b1ad8400c81f52"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyNDk2Ng==", "bodyText": "Ditto.", "url": "https://github.com/apache/beam/pull/11086#discussion_r409024966", "createdAt": "2020-04-15T17:49:50Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -669,6 +681,13 @@ def estimate_size(self):\n       # no access to the query that we're running.\n       return None\n \n+  def _create_source(self, path, schema):\n+    if not self.use_json_exports:\n+      return create_avro_source(path, 0, True, use_fastavro=True)\n+    else:\n+      return TextSource(\n+          path, 0, CompressionTypes.UNCOMPRESSED, True, self.coder(schema))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864dbdd00e47152b6d904d1d9b1ad8400c81f52"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyNTgwMg==", "bodyText": "Is there a reason to continue supporting JSON for the new transform (once we get our current performance issues) ? Probably we should document why users may choose JSON over Avro if we want to support both.", "url": "https://github.com/apache/beam/pull/11086#discussion_r409025802", "createdAt": "2020-04-15T17:51:16Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -610,7 +611,8 @@ def __init__(\n       coder=None,\n       use_standard_sql=False,\n       flatten_results=True,\n-      kms_key=None):\n+      kms_key=None,\n+      use_json_exports=False):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864dbdd00e47152b6d904d1d9b1ad8400c81f52"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzMTMwMQ==", "bodyText": "I think having a single \"backwards compatibility\" parameter can be confusing and error prone. We might still be backwards incompatible in some unknown ways. I think it's better to document exact differences between the transforms and give clear documentation/guidelines for anyone who is upgrading.", "url": "https://github.com/apache/beam/pull/11086#discussion_r409031301", "createdAt": "2020-04-15T18:00:27Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_read_it_test.py", "diffHunk": "@@ -236,11 +251,12 @@ def create_table(cls, table_name):\n     cls.bigquery_client.insert_rows(\n         cls.project, cls.dataset_id, table_name, table_data)\n \n-  def get_expected_data(self):\n+  def get_expected_data(self, native=True):\n+    byts = b'\\xab\\xac'\n     expected_row = {\n         'float': 0.33,\n         'numeric': Decimal('10'),\n-        'bytes': base64.b64encode(b'\\xab\\xac'),\n+        'bytes': base64.b64encode(byts) if native else byts,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjU3MA=="}, "originalCommit": {"oid": "950abf9d6d95f94c6284958b13248a7ab21702dc"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0864dbdd00e47152b6d904d1d9b1ad8400c81f52", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/0864dbdd00e47152b6d904d1d9b1ad8400c81f52", "committedDate": "2020-04-15T17:42:53Z", "message": "Addressing comments"}, "afterCommit": {"oid": "cd86e13d982e57d06fb263924b31b9728d0d3c78", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/cd86e13d982e57d06fb263924b31b9728d0d3c78", "committedDate": "2020-04-18T00:09:23Z", "message": "Addressing comments. Documenting. Nits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MjMzNDI0", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-399233424", "createdAt": "2020-04-23T15:46:03Z", "commit": {"oid": "84628ff97f3c14d4bcc7e20c0a6dc7a1716dee47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ0NzI5", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-404244729", "createdAt": "2020-05-01T16:06:49Z", "commit": {"oid": "e1aa4b68dd69221752d8a50a8dec4d6976e23333"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowNjo1MFrOGPN6mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjoxOTozNVrOGPOQYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwOTgxNw==", "bodyText": "Typo in From", "url": "https://github.com/apache/beam/pull/11086#discussion_r418609817", "createdAt": "2020-05-01T16:06:50Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -45,8 +45,8 @@\n may use some caching techniques to share the side inputs between calls in order\n to avoid excessive reading:::\n \n-  main_table = pipeline | 'VeryBig' >> beam.io.Read(beam.io.BigQuerySource()\n-  side_table = pipeline | 'NotBig' >> beam.io.Read(beam.io.BigQuerySource()\n+  main_table = pipeline | 'VeryBig' >> beam.io.ReadFroBigQuery(...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1aa4b68dd69221752d8a50a8dec4d6976e23333"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxNTM5Mw==", "bodyText": "Can we add some guidance when to use which?", "url": "https://github.com/apache/beam/pull/11086#discussion_r418615393", "createdAt": "2020-05-01T16:19:35Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -78,6 +72,12 @@\n or a table. Pipeline construction will fail with a validation error if neither\n or both are specified.\n \n+When reading from BigQuery using `BigQuerySource`, bytes are returned as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1aa4b68dd69221752d8a50a8dec4d6976e23333"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1aa4b68dd69221752d8a50a8dec4d6976e23333", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/e1aa4b68dd69221752d8a50a8dec4d6976e23333", "committedDate": "2020-05-01T02:00:19Z", "message": "Improve documentation and testing"}, "afterCommit": {"oid": "3f63511d7bd139b61fdd4c2942d090e27ab191fb", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/3f63511d7bd139b61fdd4c2942d090e27ab191fb", "committedDate": "2020-05-05T02:13:04Z", "message": "Improve documentation and testing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3289c0ce43b343949fb6355857c372dfabd3805", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/e3289c0ce43b343949fb6355857c372dfabd3805", "committedDate": "2020-05-05T23:08:19Z", "message": "Test fixup"}, "afterCommit": {"oid": "4f3c3761244a1f4dd4f4eb1bb7adc4513618407b", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/4f3c3761244a1f4dd4f4eb1bb7adc4513618407b", "committedDate": "2020-05-08T23:43:58Z", "message": "Test fixup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f3c3761244a1f4dd4f4eb1bb7adc4513618407b", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/4f3c3761244a1f4dd4f4eb1bb7adc4513618407b", "committedDate": "2020-05-08T23:43:58Z", "message": "Test fixup"}, "afterCommit": {"oid": "c5d6e1f45542a0286bf63dc5423907c8ab14ba4f", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/c5d6e1f45542a0286bf63dc5423907c8ab14ba4f", "committedDate": "2020-05-11T20:46:09Z", "message": "Test fixup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5d6e1f45542a0286bf63dc5423907c8ab14ba4f", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/c5d6e1f45542a0286bf63dc5423907c8ab14ba4f", "committedDate": "2020-05-11T20:46:09Z", "message": "Test fixup"}, "afterCommit": {"oid": "0e3e6c170ff7128f7e39cb9343e180fcd34c9fed", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/0e3e6c170ff7128f7e39cb9343e180fcd34c9fed", "committedDate": "2020-05-12T19:28:44Z", "message": "Test fixup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "919eeec6def22434409af346ee7fd05f86bee5c3", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/919eeec6def22434409af346ee7fd05f86bee5c3", "committedDate": "2020-05-13T02:13:43Z", "message": "remove trailing whitespace"}, "afterCommit": {"oid": "79b2285e2c078ed1397795a5a71befe28eea6ce0", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/79b2285e2c078ed1397795a5a71befe28eea6ce0", "committedDate": "2020-05-15T19:21:47Z", "message": "fixup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0e4a5780217eca3427001024d24b60ebfc76192", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/d0e4a5780217eca3427001024d24b60ebfc76192", "committedDate": "2020-05-18T18:31:38Z", "message": "fixup"}, "afterCommit": {"oid": "58dd68604e568637cab28bdbecbb72d44502f7b4", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/58dd68604e568637cab28bdbecbb72d44502f7b4", "committedDate": "2020-05-27T19:01:30Z", "message": "Addressing comments. Documenting. Nits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNDc3NDky", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-420477492", "createdAt": "2020-05-28T20:44:29Z", "commit": {"oid": "58dd68604e568637cab28bdbecbb72d44502f7b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDo0NDoyOVrOGcGDOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDo0NDoyOVrOGcGDOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMjQ0Mw==", "bodyText": "Looks like we run this test internally using this name. Since this test now changes to  use_beam_bq_sink, please check that  maintain reasonable internal test coverage for the native sink, or use a new test name for new behavior.", "url": "https://github.com/apache/beam/pull/11086#discussion_r432112443", "createdAt": "2020-05-28T20:44:29Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", "diffHunk": "@@ -254,11 +256,36 @@ def test_big_query_new_types(self):\n         'output_schema': NEW_TYPES_OUTPUT_SCHEMA,\n         'use_standard_sql': False,\n         'wait_until_finish_duration': WAIT_UNTIL_FINISH_DURATION_MS,\n+        'use_json_exports': True,\n         'on_success_matcher': all_of(*pipeline_verifiers)\n     }\n     options = self.test_pipeline.get_full_options_as_args(**extra_opts)\n     big_query_query_to_table_pipeline.run_bq_pipeline(options)\n \n+  @attr('IT')\n+  def test_big_query_new_types(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58dd68604e568637cab28bdbecbb72d44502f7b4"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODc5NTQ3", "url": "https://github.com/apache/beam/pull/11086#pullrequestreview-429879547", "createdAt": "2020-06-12T16:27:36Z", "commit": {"oid": "5566f44a5a9027d3bdaa384c2ebce86284fded48"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjoyNzozNlrOGjKTVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjoyODo1OVrOGjKV0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMjEzNA==", "bodyText": "nit: exports", "url": "https://github.com/apache/beam/pull/11086#discussion_r439522134", "createdAt": "2020-06-12T16:27:36Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -78,6 +72,12 @@\n or a table. Pipeline construction will fail with a validation error if neither\n or both are specified.\n \n+When reading from BigQuery using `BigQuerySource`, bytes are returned as\n+base64-encoded bytes. When reading via `ReadFromBigQuery`, bytes are returned\n+as bytes without base64 encoding. This is due to the fact that ReadFromBigQuery\n+uses Avro expors by default. To get base64-encoded bytes, you can use the flag", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566f44a5a9027d3bdaa384c2ebce86284fded48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMjc3MQ==", "bodyText": "To confirm - there is no changes in behavior for old sync, right?", "url": "https://github.com/apache/beam/pull/11086#discussion_r439522771", "createdAt": "2020-06-12T16:28:59Z", "author": {"login": "tvalentyn"}, "path": "CHANGES.md", "diffHunk": "@@ -58,6 +58,10 @@\n \n * Support for X source added (Java/Python) ([BEAM-X](https://issues.apache.org/jira/browse/BEAM-X)).\n * Support for reading from Snowflake added (Java) ([BEAM-9722](https://issues.apache.org/jira/browse/BEAM-9722)).\n+* A new transform to read from BigQuery has been added: `apache_beam.io.gcp.bigquery.ReadFromBigQuery`. This transform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566f44a5a9027d3bdaa384c2ebce86284fded48"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5566f44a5a9027d3bdaa384c2ebce86284fded48", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/5566f44a5a9027d3bdaa384c2ebce86284fded48", "committedDate": "2020-06-09T21:00:42Z", "message": "Keeping new_types test for JSON"}, "afterCommit": {"oid": "df7efd5dd25fd9e3d38411e52baf23964514b357", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/df7efd5dd25fd9e3d38411e52baf23964514b357", "committedDate": "2020-06-12T19:15:29Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b6138933077a206794348a241d928b68448e704", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/0b6138933077a206794348a241d928b68448e704", "committedDate": "2020-06-15T21:55:09Z", "message": "Make custom BQ source read from Avro"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5a0b59dda9f4002b2a6b5193b24c47ed8b0ee56", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/b5a0b59dda9f4002b2a6b5193b24c47ed8b0ee56", "committedDate": "2020-06-15T21:55:09Z", "message": "Using avro logical types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2770d40e3b7bb615cb77b81488c07f9018d1e1d4", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/2770d40e3b7bb615cb77b81488c07f9018d1e1d4", "committedDate": "2020-06-15T21:55:09Z", "message": "Working with test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce498ef6448361ac3889eb79197161a18cc11a9e", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/ce498ef6448361ac3889eb79197161a18cc11a9e", "committedDate": "2020-06-15T21:55:09Z", "message": "Matching appropriately"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d1cba6d3cdc3091c4d76884e0682c61022e9dc3", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/6d1cba6d3cdc3091c4d76884e0682c61022e9dc3", "committedDate": "2020-06-15T21:55:09Z", "message": "Separate test behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db71af399603053f04eb9dc5c246afc53e87f4a6", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/db71af399603053f04eb9dc5c246afc53e87f4a6", "committedDate": "2020-06-15T21:55:10Z", "message": "Support Backwards Compatible output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9aec2605ad6b94b177e9a40f48e9733704d6da", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/ac9aec2605ad6b94b177e9a40f48e9733704d6da", "committedDate": "2020-06-15T21:55:10Z", "message": "Fix formatter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "649a01073e96bf809dea89e2e56674dbdbdc1c89", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/649a01073e96bf809dea89e2e56674dbdbdc1c89", "committedDate": "2020-06-15T21:55:10Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b15b57df9f54b6c91898131676d2a46aeb085a4", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/5b15b57df9f54b6c91898131676d2a46aeb085a4", "committedDate": "2020-06-15T21:55:10Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a29c5b06dca58e856d58ce9a5f8f4a907d4c955", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/5a29c5b06dca58e856d58ce9a5f8f4a907d4c955", "committedDate": "2020-06-15T21:55:10Z", "message": "Addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea7d9f225bb36cf61f39aa1ac12fee7f0d5482e4", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/ea7d9f225bb36cf61f39aa1ac12fee7f0d5482e4", "committedDate": "2020-06-15T21:55:10Z", "message": "Addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a848a41ed43a7aace1a07f0f81960b182d6d0bf1", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a848a41ed43a7aace1a07f0f81960b182d6d0bf1", "committedDate": "2020-06-15T21:55:10Z", "message": "Addressing comments. Documenting. Nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d83bcca87258737c644e441b6b8a9e1a17b12a", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/84d83bcca87258737c644e441b6b8a9e1a17b12a", "committedDate": "2020-06-15T21:55:10Z", "message": "Keeping new_types test for JSON"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "291010ebd94838c4bdbf4f7ee31b9caeddc94a8d", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/291010ebd94838c4bdbf4f7ee31b9caeddc94a8d", "committedDate": "2020-06-15T21:55:10Z", "message": "Fixup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df7efd5dd25fd9e3d38411e52baf23964514b357", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/df7efd5dd25fd9e3d38411e52baf23964514b357", "committedDate": "2020-06-12T19:15:29Z", "message": "Fixup"}, "afterCommit": {"oid": "291010ebd94838c4bdbf4f7ee31b9caeddc94a8d", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/291010ebd94838c4bdbf4f7ee31b9caeddc94a8d", "committedDate": "2020-06-15T21:55:10Z", "message": "Fixup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3123, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}