{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDAyNjY5", "number": 11050, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyMDo1OFrODlRR9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyNDo1OFrODlRUaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDA3MDMxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyMDo1OFrOFyEZwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNTo1MFrOFyfLIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI0OQ==", "bodyText": "Maybe log here?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045249", "createdAt": "2020-03-05T02:20:58Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size\n+    except:\n+      return 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4Mzg3Mw==", "bodyText": "Could add a debug level logging.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388483873", "createdAt": "2020-03-05T18:35:50Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size\n+    except:\n+      return 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI0OQ=="}, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDA3MDUyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyMTowN1rOFyEZ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNDo0M1rOFyfIxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI3OQ==", "bodyText": "Does this work in all OSes?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045279", "createdAt": "2020-03-05T02:21:07Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MzI3MQ==", "bodyText": "It works. Though in some versions of some OSes, some of the fields of the returned stat might be dummy values.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388483271", "createdAt": "2020-03-05T18:34:43Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI3OQ=="}, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDA3Mzc5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyMzoxNFrOFyEb2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozMzoxOVrOFyfF9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTc4NA==", "bodyText": "Shoulds this have \"limit\" or \"max\" in its name, or something to indicate that this is an upper limit.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045784", "createdAt": "2020-03-05T02:23:14Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -88,7 +88,22 @@ def capture_duration(self, value):\n     \"\"\"\n     self.capture_control._capture_duration = value\n \n-  # TODO(BEAM-8335): add capture_size options when they are supported.\n+  @property\n+  def capture_size(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MjU1MQ==", "bodyText": "Renaming it to capture_size_limit.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388482551", "createdAt": "2020-03-05T18:33:19Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -88,7 +88,22 @@ def capture_duration(self, value):\n     \"\"\"\n     self.capture_control._capture_duration = value\n \n-  # TODO(BEAM-8335): add capture_size options when they are supported.\n+  @property\n+  def capture_size(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTc4NA=="}, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDA3NjA3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyNDo0MlrOFyEdSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoyNjo1OVrOFye42A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjE1Mw==", "bodyText": "Should this be moved inside the if below? Is it used anywhere else?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388046153", "createdAt": "2020-03-05T02:24:42Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -259,21 +269,31 @@ def is_source_to_cache_changed(\n   # The computation of extract_unbounded_source_signature is expensive, track on\n   # change by default.\n   if is_changed and update_cached_source_signature:\n-    if ie.current_env().options.enable_capture_replay:\n-      # TODO(BEAM-8335): display rather than logging when is_in_notebook.\n+    options = ie.current_env().options\n+    # No info needed when capture replay is disabled.\n+    if options.enable_capture_replay:\n+\n+      def sizeof_fmt(num, suffix='B'):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3OTE5Mg==", "bodyText": "No, it's not used anywhere else. Moving it.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388479192", "createdAt": "2020-03-05T18:26:59Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -259,21 +269,31 @@ def is_source_to_cache_changed(\n   # The computation of extract_unbounded_source_signature is expensive, track on\n   # change by default.\n   if is_changed and update_cached_source_signature:\n-    if ie.current_env().options.enable_capture_replay:\n-      # TODO(BEAM-8335): display rather than logging when is_in_notebook.\n+    options = ie.current_env().options\n+    # No info needed when capture replay is disabled.\n+    if options.enable_capture_replay:\n+\n+      def sizeof_fmt(num, suffix='B'):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjE1Mw=="}, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDA3NjU3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyNDo1OFrOFyEdmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoyNjo1N1rOFye4yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjIzNA==", "bodyText": "Do you mean to pass is_cache_complete() or is_cache_complete ?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388046234", "createdAt": "2020-03-05T02:24:58Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -202,10 +202,20 @@ def has_source_to_cache(user_pipeline):\n   if has_cache:\n     if not isinstance(ie.current_env().cache_manager(),\n                       streaming_cache.StreamingCache):\n-      # TODO(BEAM-8335): convert the cache manager into a streaming cache\n-      # manager. Note this does not invalidate the current cache including the\n-      # source data capture.\n-      pass\n+      # Wrap the cache manager into a streaming cache manager. Note this\n+      # does not invalidate the current cache manager.\n+      def is_cache_complete():\n+        job = ie.current_env().get_background_caching_job(user_pipeline)\n+        is_done = job and job.is_done()\n+        cache_changed = is_source_to_cache_changed(\n+            user_pipeline, update_cached_source_signature=False)\n+        return is_done and not cache_changed\n+\n+      ie.current_env().set_cache_manager(\n+          streaming_cache.StreamingCache(\n+              ie.current_env().cache_manager()._cache_dir,\n+              is_cache_complete=is_cache_complete,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3OTE3Ng==", "bodyText": "is_cache_complete is a function required by StreamingCache, not the return value of the function.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388479176", "createdAt": "2020-03-05T18:26:57Z", "author": {"login": "KevinGG"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -202,10 +202,20 @@ def has_source_to_cache(user_pipeline):\n   if has_cache:\n     if not isinstance(ie.current_env().cache_manager(),\n                       streaming_cache.StreamingCache):\n-      # TODO(BEAM-8335): convert the cache manager into a streaming cache\n-      # manager. Note this does not invalidate the current cache including the\n-      # source data capture.\n-      pass\n+      # Wrap the cache manager into a streaming cache manager. Note this\n+      # does not invalidate the current cache manager.\n+      def is_cache_complete():\n+        job = ie.current_env().get_background_caching_job(user_pipeline)\n+        is_done = job and job.is_done()\n+        cache_changed = is_source_to_cache_changed(\n+            user_pipeline, update_cached_source_signature=False)\n+        return is_done and not cache_changed\n+\n+      ie.current_env().set_cache_manager(\n+          streaming_cache.StreamingCache(\n+              ie.current_env().cache_manager()._cache_dir,\n+              is_cache_complete=is_cache_complete,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjIzNA=="}, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1790, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}