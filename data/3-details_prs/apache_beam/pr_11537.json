{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NjMxMDA2", "number": 11537, "title": "[BEAM-6661] Get rid of a few logging annoyances for execution and shutdown", "bodyText": "[BEAM-6661] Properly close channel for external environment\nThis avoids warnings like the following:\norg.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference cleanQueue\nSEVERE: *~*~*~ Channel ManagedChannelImpl{logId=628, target=localhost:41409} was not shutdown properly!!! ~*~*~*\nMake sure to call shutdown()/shutdownNow() and wait until awaitTermination() returns true.\njava.lang.RuntimeException: ManagedChannel allocation site\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference.<init>(ManagedChannelOrphanWrapper.java:103)\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:53)\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:44)\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.AbstractManagedChannelImplBuilder.build(AbstractManagedChannelImplBuilder.java:410)\nat org.apache.beam.sdk.fn.channel.ManagedChannelFactory.forDescriptor(ManagedChannelFactory.java:44)\nat org.apache.beam.runners.fnexecution.environment.ExternalEnvironmentFactory.createEnvironment(ExternalEnvironmentFactory.java:108)\nat org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory$1.load(DefaultJobBundleFactory.java:154)\nat org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory$1.load(DefaultJobBundleFactory.java:137)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3628)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2336)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2295)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2208)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache.get(LocalCache.java:4053)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:4057)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4986)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4992)\nat\norg.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory.forStage(DefaultJobBundleFactory.java:162)\n\n[BEAM-6661] Avoid FileNotFoundException when no files have been staged\n[BEAM-6661] Avoid printing empty lines in subprocess job server\n9a38a6d\nThis would print an extra empty line on every logged line making the output\nverbose, e.g.\nBefore:\nlogline1\n\nlogline2\n\n\nAfter:\nlogline1\nlogline2\n\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-27T17:10:05Z", "url": "https://github.com/apache/beam/pull/11537", "merged": true, "mergeCommit": {"oid": "6eb2c6e27e011d206fd3116b301ed11275ec415a"}, "closed": true, "closedAt": "2020-04-28T20:38:44Z", "author": {"login": "mxm"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbyb3wAH2gAyNDA5NjMxMDA2OjUwYWVjMzk4NzQ3YjNhMGQ3MDdjOWExMDNkNWIwMDk3NDViNTg3YTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbzMk8AFqTQwMTE4ODM0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "50aec398747b3a0d707c9a103d5b009745b587a2", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/50aec398747b3a0d707c9a103d5b009745b587a2", "committedDate": "2020-04-27T17:07:44Z", "message": "[BEAM-6661] Properly close channel for external environment\n\nThis avoids warnings like the following:\n\n```\norg.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference cleanQueue\nSEVERE: *~*~*~ Channel ManagedChannelImpl{logId=628, target=localhost:41409} was not shutdown properly!!! ~*~*~*\nMake sure to call shutdown()/shutdownNow() and wait until awaitTermination() returns true.\njava.lang.RuntimeException: ManagedChannel allocation site\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference.<init>(ManagedChannelOrphanWrapper.java:103)\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:53)\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:44)\nat org.apache.beam.vendor.grpc.v1p13p1.io.grpc.internal.AbstractManagedChannelImplBuilder.build(AbstractManagedChannelImplBuilder.java:410)\nat org.apache.beam.sdk.fn.channel.ManagedChannelFactory.forDescriptor(ManagedChannelFactory.java:44)\nat org.apache.beam.runners.fnexecution.environment.ExternalEnvironmentFactory.createEnvironment(ExternalEnvironmentFactory.java:108)\nat org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory$1.load(DefaultJobBundleFactory.java:154)\nat org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory$1.load(DefaultJobBundleFactory.java:137)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3628)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2336)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2295)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2208)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache.get(LocalCache.java:4053)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:4057)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4986)\nat org.apache.beam.vendor.guava.v20_0.com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4992)\nat\norg.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory.forStage(DefaultJobBundleFactory.java:162)\n\n```"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "278dcef3e408c128cf1c470f9888528d13b6cd22", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/278dcef3e408c128cf1c470f9888528d13b6cd22", "committedDate": "2020-04-27T17:07:44Z", "message": "[BEAM-6661] Avoid FileNotFoundException when no files have been staged"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a38a6d483df6a3a1347a14b49f0822698579870", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/9a38a6d483df6a3a1347a14b49f0822698579870", "committedDate": "2020-04-27T17:07:45Z", "message": "[BEAM-6661] Avoid printing empty lines in subprocess job server\n\nThis would print an extra empty line on every logged line making the output\nverbose, e.g.\n\nBefore:\n```\nlogline1\n\nlogline2\n\n```\n\nAfter:\n```\nlogline1\nlogline2\n```"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMTg4MzQ3", "url": "https://github.com/apache/beam/pull/11537#pullrequestreview-401188347", "createdAt": "2020-04-27T17:51:29Z", "commit": {"oid": "9a38a6d483df6a3a1347a14b49f0822698579870"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzo1MToyOVrOGMwGfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzo1OTo0NlrOGMwdmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyNDE4OQ==", "bodyText": "Nit: awaitTermination already returns whether the channel is terminated, so no need to call isTerminated", "url": "https://github.com/apache/beam/pull/11537#discussion_r416024189", "createdAt": "2020-04-27T17:51:29Z", "author": {"login": "ibzib"}, "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/environment/ExternalEnvironmentFactory.java", "diffHunk": "@@ -145,17 +149,23 @@ public InstructionRequestHandler getInstructionRequestHandler() {\n \n       @Override\n       public void close() throws Exception {\n-        finalInstructionHandler.close();\n-        BeamFnApi.StopWorkerRequest stopWorkerRequest =\n-            BeamFnApi.StopWorkerRequest.newBuilder().setWorkerId(workerId).build();\n-        LOG.debug(\"Closing worker ID {}\", workerId);\n-        BeamFnApi.StopWorkerResponse stopWorkerResponse =\n-            BeamFnExternalWorkerPoolGrpc.newBlockingStub(\n-                    ManagedChannelFactory.createDefault()\n-                        .forDescriptor(externalPayload.getEndpoint()))\n-                .stopWorker(stopWorkerRequest);\n-        if (!stopWorkerResponse.getError().isEmpty()) {\n-          throw new RuntimeException(stopWorkerResponse.getError());\n+        try {\n+          finalInstructionHandler.close();\n+          BeamFnApi.StopWorkerRequest stopWorkerRequest =\n+              BeamFnApi.StopWorkerRequest.newBuilder().setWorkerId(workerId).build();\n+          LOG.debug(\"Closing worker ID {}\", workerId);\n+          BeamFnApi.StopWorkerResponse stopWorkerResponse =\n+              BeamFnExternalWorkerPoolGrpc.newBlockingStub(managedChannel)\n+                  .stopWorker(stopWorkerRequest);\n+          if (!stopWorkerResponse.getError().isEmpty()) {\n+            throw new RuntimeException(stopWorkerResponse.getError());\n+          }\n+        } finally {\n+          managedChannel.shutdown();\n+          managedChannel.awaitTermination(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a38a6d483df6a3a1347a14b49f0822698579870"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzMDEwNw==", "bodyText": "Why 10 seconds? Does shutdown usually take that long?", "url": "https://github.com/apache/beam/pull/11537#discussion_r416030107", "createdAt": "2020-04-27T17:59:46Z", "author": {"login": "ibzib"}, "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/environment/ExternalEnvironmentFactory.java", "diffHunk": "@@ -145,17 +149,23 @@ public InstructionRequestHandler getInstructionRequestHandler() {\n \n       @Override\n       public void close() throws Exception {\n-        finalInstructionHandler.close();\n-        BeamFnApi.StopWorkerRequest stopWorkerRequest =\n-            BeamFnApi.StopWorkerRequest.newBuilder().setWorkerId(workerId).build();\n-        LOG.debug(\"Closing worker ID {}\", workerId);\n-        BeamFnApi.StopWorkerResponse stopWorkerResponse =\n-            BeamFnExternalWorkerPoolGrpc.newBlockingStub(\n-                    ManagedChannelFactory.createDefault()\n-                        .forDescriptor(externalPayload.getEndpoint()))\n-                .stopWorker(stopWorkerRequest);\n-        if (!stopWorkerResponse.getError().isEmpty()) {\n-          throw new RuntimeException(stopWorkerResponse.getError());\n+        try {\n+          finalInstructionHandler.close();\n+          BeamFnApi.StopWorkerRequest stopWorkerRequest =\n+              BeamFnApi.StopWorkerRequest.newBuilder().setWorkerId(workerId).build();\n+          LOG.debug(\"Closing worker ID {}\", workerId);\n+          BeamFnApi.StopWorkerResponse stopWorkerResponse =\n+              BeamFnExternalWorkerPoolGrpc.newBlockingStub(managedChannel)\n+                  .stopWorker(stopWorkerRequest);\n+          if (!stopWorkerResponse.getError().isEmpty()) {\n+            throw new RuntimeException(stopWorkerResponse.getError());\n+          }\n+        } finally {\n+          managedChannel.shutdown();\n+          managedChannel.awaitTermination(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a38a6d483df6a3a1347a14b49f0822698579870"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3996, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}