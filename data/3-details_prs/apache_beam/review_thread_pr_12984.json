{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODY3MzQ3", "number": 12984, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODo1ODo0MVrOErv_DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNzoxNFrOEtI_8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzEwNDEyOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODo1ODo0MVrOHesV4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToyNjozMFrOHgNpKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0NTgyNA==", "bodyText": "you should rely on slf4j for log formatting with parameters as we won't pay the cost of forming the string if logging is disabled. e.g.:\nLOG.warn(\"my message with param 1 {}, param 2 {}\", param1, param2);", "url": "https://github.com/apache/beam/pull/12984#discussion_r501945824", "createdAt": "2020-10-08T18:58:41Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -67,11 +72,19 @@ protected boolean isThrottled() {\n     return false;\n   }\n \n-  protected String getHotKeyMessage(String userStepName, String hotKeyAge) {\n+  protected String getHotKeyMessage(String userStepName, String hotKeyAge, Object hotkey) {\n+    if (hotkey == null) {\n+      return MessageFormat.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e402e108577103b77febe3c5c7edccddfafdc6c8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MDAxMA==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12984#discussion_r503540010", "createdAt": "2020-10-12T21:26:30Z", "author": {"login": "rohdesamuel"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -67,11 +72,19 @@ protected boolean isThrottled() {\n     return false;\n   }\n \n-  protected String getHotKeyMessage(String userStepName, String hotKeyAge) {\n+  protected String getHotKeyMessage(String userStepName, String hotKeyAge, Object hotkey) {\n+    if (hotkey == null) {\n+      return MessageFormat.format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0NTgyNA=="}, "originalCommit": {"oid": "e402e108577103b77febe3c5c7edccddfafdc6c8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzExOTkwOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxOTowMzowM1rOHesfWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToyNjozN1rOHgNpUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0ODI1MA==", "bodyText": "You can use ExpectedLogs as a test rule to capture whether output was produced or not instead of abstracting out a getHotKeyMessage. See \n  \n    \n      beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/SerializableCoderTest.java\n    \n    \n         Line 259\n      in\n      cfca7f1\n    \n    \n    \n    \n\n        \n          \n           public void coderWarnsForInterface() throws Exception { \n        \n    \n  \n\n for an example.", "url": "https://github.com/apache/beam/pull/12984#discussion_r501948250", "createdAt": "2020-10-08T19:03:03Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "diffHunk": "@@ -50,11 +50,11 @@ public void SetUp() {\n   }\n \n   @Test\n-  public void correctHotKeyMessage() {\n+  public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n     assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\");\n+    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e402e108577103b77febe3c5c7edccddfafdc6c8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MDA0OQ==", "bodyText": "Gotcha, thanks!", "url": "https://github.com/apache/beam/pull/12984#discussion_r503540049", "createdAt": "2020-10-12T21:26:37Z", "author": {"login": "rohdesamuel"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "diffHunk": "@@ -50,11 +50,11 @@ public void SetUp() {\n   }\n \n   @Test\n-  public void correctHotKeyMessage() {\n+  public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n     assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\");\n+    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0ODI1MA=="}, "originalCommit": {"oid": "e402e108577103b77febe3c5c7edccddfafdc6c8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY3ODc0OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDozMlrOHgw-4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDozMlrOHgw-4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExOTAxMQ==", "bodyText": "Note that null is a valid key type and using null to differentiate between log without key and log with key will miss this usecase which is why I proposed the two suggestions below:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logHotKeyDetection(userStepName, hotKeyAge, null);\n          \n          \n            \n                if (isThrottled()) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n                LOG.warn(\n          \n          \n            \n                    \"A hot key was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                        + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                        + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                    userStepName,\n          \n          \n            \n                    TimeUtil.toCloudDuration(hotKeyAge));", "url": "https://github.com/apache/beam/pull/12984#discussion_r504119011", "createdAt": "2020-10-13T17:04:32Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -47,10 +46,31 @@\n \n   /** Logs a detection of the hot key every 5 minutes. */\n   public void logHotKeyDetection(String userStepName, Duration hotKeyAge) {\n+    logHotKeyDetection(userStepName, hotKeyAge, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY4MDYyOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNTowMVrOHgxAAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNTowMVrOHgxAAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExOTI5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (hotkey == null) {\n          \n          \n            \n                  LOG.warn(\n          \n          \n            \n                      \"A hot key was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                          + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                          + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                      userStepName,\n          \n          \n            \n                      TimeUtil.toCloudDuration(hotKeyAge));\n          \n          \n            \n                } else {\n          \n          \n            \n                  LOG.warn(\n          \n          \n            \n                      \"A hot key '{}' was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                          + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                          + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                      hotkey,\n          \n          \n            \n                      userStepName,\n          \n          \n            \n                      TimeUtil.toCloudDuration(hotKeyAge));\n          \n          \n            \n                }\n          \n          \n            \n                LOG.warn(\n          \n          \n            \n                    \"A hot key '{}' was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                        + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                        + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                    hotkey,\n          \n          \n            \n                    userStepName,\n          \n          \n            \n                    TimeUtil.toCloudDuration(hotKeyAge));\n          \n          \n            \n                }", "url": "https://github.com/apache/beam/pull/12984#discussion_r504119298", "createdAt": "2020-10-13T17:05:01Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -47,10 +46,31 @@\n \n   /** Logs a detection of the hot key every 5 minutes. */\n   public void logHotKeyDetection(String userStepName, Duration hotKeyAge) {\n+    logHotKeyDetection(userStepName, hotKeyAge, null);\n+  }\n+\n+  /** Logs a detection of the hot key every 5 minutes with the given key. */\n+  public void logHotKeyDetection(String userStepName, Duration hotKeyAge, Object hotkey) {\n     if (isThrottled()) {\n       return;\n     }\n-    LOG.warn(getHotKeyMessage(userStepName, TimeUtil.toCloudDuration(hotKeyAge)));\n+\n+    if (hotkey == null) {\n+      LOG.warn(\n+          \"A hot key was detected in step '{}' with age of '{}'. This is \"\n+              + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n+              + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n+          userStepName,\n+          TimeUtil.toCloudDuration(hotKeyAge));\n+    } else {\n+      LOG.warn(\n+          \"A hot key '{}' was detected in step '{}' with age of '{}'. This is \"\n+              + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n+              + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n+          hotkey,\n+          userStepName,\n+          TimeUtil.toCloudDuration(hotKeyAge));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY4ODE3OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNzoxNFrOHgxEzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxMTo0OFrOHgzalQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDUyNg==", "bodyText": "might as well cover the null as an object case to ensure we don't regress.", "url": "https://github.com/apache/beam/pull/12984#discussion_r504120526", "createdAt": "2020-10-13T17:07:14Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "diffHunk": "@@ -50,18 +45,29 @@ public void SetUp() {\n   }\n \n   @Test\n-  public void correctHotKeyMessage() {\n+  public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n-    assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\");\n+    hotKeyLogger.logHotKeyDetection(\"TEST_STEP_ID\", Duration.standardSeconds(1));\n     assertTrue(hotKeyLogger.isThrottled());\n \n-    assertEquals(\n+    expectedLogs.verifyWarn(\n         \"A hot key was detected in step 'TEST_STEP_ID' with age of '1s'. This is a \"\n             + \"symptom of key distribution being skewed. To fix, please inspect your data and \"\n-            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-        m);\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n+  }\n+\n+  @Test\n+  public void correctHotKeyMessageWithKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1ODg2OQ==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12984#discussion_r504158869", "createdAt": "2020-10-13T18:11:48Z", "author": {"login": "rohdesamuel"}, "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "diffHunk": "@@ -50,18 +45,29 @@ public void SetUp() {\n   }\n \n   @Test\n-  public void correctHotKeyMessage() {\n+  public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n-    assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\");\n+    hotKeyLogger.logHotKeyDetection(\"TEST_STEP_ID\", Duration.standardSeconds(1));\n     assertTrue(hotKeyLogger.isThrottled());\n \n-    assertEquals(\n+    expectedLogs.verifyWarn(\n         \"A hot key was detected in step 'TEST_STEP_ID' with age of '1s'. This is a \"\n             + \"symptom of key distribution being skewed. To fix, please inspect your data and \"\n-            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-        m);\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n+  }\n+\n+  @Test\n+  public void correctHotKeyMessageWithKey() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDUyNg=="}, "originalCommit": {"oid": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3080, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}