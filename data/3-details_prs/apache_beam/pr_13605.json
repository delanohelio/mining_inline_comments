{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NjI5NDA5", "number": 13605, "title": "[BEAM-11508] Set sdkHarnessContainerImages in workerpool configuratio\u2026", "bodyText": "\u2026n for Dataflow runner v2\nPlease add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-23T07:47:11Z", "url": "https://github.com/apache/beam/pull/13605", "merged": true, "mergeCommit": {"oid": "a3fef8b03dd0e1402bdd3a0153939e871f2f0942"}, "closed": true, "closedAt": "2021-01-08T20:09:35Z", "author": {"login": "ihji"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdo8n1OgH2gAyNTQ0NjI5NDA5OmM5Zjg2OGFkZmUzZWJlYzIzYjU5YTQ0MDE2OTQ4MjZlN2U3MTRiZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABduAB3DgFqTU2Mzk3ODMxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec", "author": {"user": {"login": "ihji", "name": "Heejong Lee"}}, "url": "https://github.com/apache/beam/commit/c9f868adfe3ebec23b59a4401694826e7e714bec", "committedDate": "2020-12-23T10:32:01Z", "message": "[BEAM-11508] Set sdkHarnessContainerImages in workerpool configuration for Dataflow runner v2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f03c7e8d1264ccef1519cb43051c3c7b1769679b", "author": {"user": {"login": "ihji", "name": "Heejong Lee"}}, "url": "https://github.com/apache/beam/commit/f03c7e8d1264ccef1519cb43051c3c7b1769679b", "committedDate": "2020-12-23T07:45:13Z", "message": "[BEAM-11508] Set sdkHarnessContainerImages in workerpool configuration for Dataflow runner v2"}, "afterCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec", "author": {"user": {"login": "ihji", "name": "Heejong Lee"}}, "url": "https://github.com/apache/beam/commit/c9f868adfe3ebec23b59a4401694826e7e714bec", "committedDate": "2020-12-23T10:32:01Z", "message": "[BEAM-11508] Set sdkHarnessContainerImages in workerpool configuration for Dataflow runner v2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjYxOTI4", "url": "https://github.com/apache/beam/pull/13605#pullrequestreview-560661928", "createdAt": "2021-01-03T00:15:55Z", "commit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDoxNTo1NlrOINae4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDoyMTo0N1rOINagqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNjI5MA==", "bodyText": "Is there a util function that we can depend on (similar to [1] for Python) introduce of checking these properties separately for runner v2 which could lead to inconsistencies ?\n[1] https://github.com/apache/beam/blob/master/sdks/python/apache_beam/runners/dataflow/internal/apiclient.py#L1039", "url": "https://github.com/apache/beam/pull/13605#discussion_r550936290", "createdAt": "2021-01-03T00:15:56Z", "author": {"login": "chamikaramj"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "diffHunk": "@@ -1186,6 +1190,45 @@ public DataflowPipelineJob run(Pipeline pipeline) {\n     return dataflowPipelineJob;\n   }\n \n+  static void configureSdkHarnessContainerImages(\n+      DataflowPipelineOptions options,\n+      RunnerApi.Pipeline pipelineProto,\n+      Job newJob,\n+      String workerHarnessContainerImage) {\n+    if (hasExperiment(options, \"use_runner_v2\") || hasExperiment(options, \"use_unified_worker\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNjU2OA==", "bodyText": "It might make sense to de-dupe here in-case same Docker URL gets added twice (we can generalize this when Dataflow supports multiple environments with the same Docker URL hence please add a TODO).", "url": "https://github.com/apache/beam/pull/13605#discussion_r550936568", "createdAt": "2021-01-03T00:19:14Z", "author": {"login": "chamikaramj"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "diffHunk": "@@ -1186,6 +1190,45 @@ public DataflowPipelineJob run(Pipeline pipeline) {\n     return dataflowPipelineJob;\n   }\n \n+  static void configureSdkHarnessContainerImages(\n+      DataflowPipelineOptions options,\n+      RunnerApi.Pipeline pipelineProto,\n+      Job newJob,\n+      String workerHarnessContainerImage) {\n+    if (hasExperiment(options, \"use_runner_v2\") || hasExperiment(options, \"use_unified_worker\")) {\n+      ImmutableSet.Builder<String> sdkContainerUrlSetBuilder = ImmutableSet.builder();\n+      sdkContainerUrlSetBuilder.add(workerHarnessContainerImage);\n+      for (Map.Entry<String, RunnerApi.Environment> entry :\n+          pipelineProto.getComponents().getEnvironmentsMap().entrySet()) {\n+        if (!BeamUrns.getUrn(RunnerApi.StandardEnvironments.Environments.DOCKER)\n+            .equals(entry.getValue().getUrn())) {\n+          throw new RuntimeException(\n+              \"Dataflow can only execute pipeline steps in Docker environments: \"\n+                  + entry.getValue().getUrn());\n+        }\n+        RunnerApi.DockerPayload dockerPayload;\n+        try {\n+          dockerPayload = RunnerApi.DockerPayload.parseFrom(entry.getValue().getPayload());\n+        } catch (InvalidProtocolBufferException e) {\n+          throw new RuntimeException(\"Error parsing docker payload.\", e);\n+        }\n+        sdkContainerUrlSetBuilder.add(dockerPayload.getContainerImage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNjY1Mw==", "bodyText": "Do we need any special handling for pipeline SDK similar to following for Python ?\nhttps://github.com/apache/beam/blob/master/sdks/python/apache_beam/runners/dataflow/internal/apiclient.py#L285", "url": "https://github.com/apache/beam/pull/13605#discussion_r550936653", "createdAt": "2021-01-03T00:20:26Z", "author": {"login": "chamikaramj"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "diffHunk": "@@ -1186,6 +1190,45 @@ public DataflowPipelineJob run(Pipeline pipeline) {\n     return dataflowPipelineJob;\n   }\n \n+  static void configureSdkHarnessContainerImages(\n+      DataflowPipelineOptions options,\n+      RunnerApi.Pipeline pipelineProto,\n+      Job newJob,\n+      String workerHarnessContainerImage) {\n+    if (hasExperiment(options, \"use_runner_v2\") || hasExperiment(options, \"use_unified_worker\")) {\n+      ImmutableSet.Builder<String> sdkContainerUrlSetBuilder = ImmutableSet.builder();\n+      sdkContainerUrlSetBuilder.add(workerHarnessContainerImage);\n+      for (Map.Entry<String, RunnerApi.Environment> entry :\n+          pipelineProto.getComponents().getEnvironmentsMap().entrySet()) {\n+        if (!BeamUrns.getUrn(RunnerApi.StandardEnvironments.Environments.DOCKER)\n+            .equals(entry.getValue().getUrn())) {\n+          throw new RuntimeException(\n+              \"Dataflow can only execute pipeline steps in Docker environments: \"\n+                  + entry.getValue().getUrn());\n+        }\n+        RunnerApi.DockerPayload dockerPayload;\n+        try {\n+          dockerPayload = RunnerApi.DockerPayload.parseFrom(entry.getValue().getPayload());\n+        } catch (InvalidProtocolBufferException e) {\n+          throw new RuntimeException(\"Error parsing docker payload.\", e);\n+        }\n+        sdkContainerUrlSetBuilder.add(dockerPayload.getContainerImage());\n+      }\n+      List<SdkHarnessContainerImage> sdkContainerList =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNjY5OQ==", "bodyText": "For any Python environments, we should set 'useSingleCorePerContainer' to true for efficiency.", "url": "https://github.com/apache/beam/pull/13605#discussion_r550936699", "createdAt": "2021-01-03T00:21:08Z", "author": {"login": "chamikaramj"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "diffHunk": "@@ -1186,6 +1190,45 @@ public DataflowPipelineJob run(Pipeline pipeline) {\n     return dataflowPipelineJob;\n   }\n \n+  static void configureSdkHarnessContainerImages(\n+      DataflowPipelineOptions options,\n+      RunnerApi.Pipeline pipelineProto,\n+      Job newJob,\n+      String workerHarnessContainerImage) {\n+    if (hasExperiment(options, \"use_runner_v2\") || hasExperiment(options, \"use_unified_worker\")) {\n+      ImmutableSet.Builder<String> sdkContainerUrlSetBuilder = ImmutableSet.builder();\n+      sdkContainerUrlSetBuilder.add(workerHarnessContainerImage);\n+      for (Map.Entry<String, RunnerApi.Environment> entry :\n+          pipelineProto.getComponents().getEnvironmentsMap().entrySet()) {\n+        if (!BeamUrns.getUrn(RunnerApi.StandardEnvironments.Environments.DOCKER)\n+            .equals(entry.getValue().getUrn())) {\n+          throw new RuntimeException(\n+              \"Dataflow can only execute pipeline steps in Docker environments: \"\n+                  + entry.getValue().getUrn());\n+        }\n+        RunnerApi.DockerPayload dockerPayload;\n+        try {\n+          dockerPayload = RunnerApi.DockerPayload.parseFrom(entry.getValue().getPayload());\n+        } catch (InvalidProtocolBufferException e) {\n+          throw new RuntimeException(\"Error parsing docker payload.\", e);\n+        }\n+        sdkContainerUrlSetBuilder.add(dockerPayload.getContainerImage());\n+      }\n+      List<SdkHarnessContainerImage> sdkContainerList =\n+          sdkContainerUrlSetBuilder.build().stream()\n+              .map(\n+                  (String url) -> {\n+                    SdkHarnessContainerImage image = new SdkHarnessContainerImage();\n+                    image.setContainerImage(url);\n+                    return image;\n+                  })\n+              .collect(Collectors.toList());\n+      for (WorkerPool workerPool : newJob.getEnvironment().getWorkerPools()) {\n+        workerPool.setSdkHarnessContainerImages(sdkContainerList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNjc0Ng==", "bodyText": "Please also try out a Dataflow GCE job (or existing ITs).", "url": "https://github.com/apache/beam/pull/13605#discussion_r550936746", "createdAt": "2021-01-03T00:21:47Z", "author": {"login": "chamikaramj"}, "path": "runners/google-cloud-dataflow-java/src/test/java/org/apache/beam/runners/dataflow/DataflowRunnerTest.java", "diffHunk": "@@ -1342,6 +1347,57 @@ public void testTransformTranslator() throws IOException {\n     assertTrue(transform.translated);\n   }\n \n+  @Test\n+  public void testSdkHarnessConfiguration() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac71556990f8c3a6f05de9b1448449234a91248a", "author": {"user": {"login": "ihji", "name": "Heejong Lee"}}, "url": "https://github.com/apache/beam/commit/ac71556990f8c3a6f05de9b1448449234a91248a", "committedDate": "2021-01-06T00:42:57Z", "message": "add utility function to check runner v2, set single-core flag for python"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTc4MzEz", "url": "https://github.com/apache/beam/pull/13605#pullrequestreview-563978313", "createdAt": "2021-01-08T03:19:28Z", "commit": {"oid": "ac71556990f8c3a6f05de9b1448449234a91248a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMzoxOToyOVrOIQEU8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMzoxOToyOVrOIQEU8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzcxOTAyNQ==", "bodyText": "No existing Runner v2 ITs should be adequate. Thanks.", "url": "https://github.com/apache/beam/pull/13605#discussion_r553719025", "createdAt": "2021-01-08T03:19:29Z", "author": {"login": "chamikaramj"}, "path": "runners/google-cloud-dataflow-java/src/test/java/org/apache/beam/runners/dataflow/DataflowRunnerTest.java", "diffHunk": "@@ -1342,6 +1347,57 @@ public void testTransformTranslator() throws IOException {\n     assertTrue(transform.translated);\n   }\n \n+  @Test\n+  public void testSdkHarnessConfiguration() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNjc0Ng=="}, "originalCommit": {"oid": "c9f868adfe3ebec23b59a4401694826e7e714bec"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4237, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}