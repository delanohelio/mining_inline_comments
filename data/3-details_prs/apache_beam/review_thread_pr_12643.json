{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTIyMjUy", "number": 12643, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDowMzoyMVrOEj1j_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoxNDoxNVrOEj1sGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDEzMTgyOnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamBigQuerySqlDialect.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDowMzoyMVrOHSbVpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzoxNzoyM1rOHouHMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NDMyNw==", "bodyText": "nit: Renames like this are probably a net negative when you take into account the total cost of a change (time authoring and reviewing, increased diffs when debugging future issues, potential upgrade friction for customers). It is hard to know exactly where the line is so feel free to push forward with these as much of the work is already done. In the future I would suggest avoiding non-functional changes, particularly if they are something that would be at most a nit on a code review. (These went in recently and didn't even get a nit comment.)", "url": "https://github.com/apache/beam/pull/12643#discussion_r489084327", "createdAt": "2020-09-16T00:03:21Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamBigQuerySqlDialect.java", "diffHunk": "@@ -87,16 +87,17 @@\n           .put(\"$extract_time\", \"TIME\")\n           .put(\"$extract_datetime\", \"DATETIME\")\n           .build();\n-  public static final String DOUBLE_POSITIVE_INF_FUNCTION = \"double_positive_inf\";\n-  public static final String DOUBLE_NEGATIVE_INF_FUNCTION = \"double_negative_inf\";\n-  public static final String DOUBLE_NAN_FUNCTION = \"double_nan\";\n-  private static final Map<String, String> DOUBLE_FUNCTIONS =\n+  public static final String DOUBLE_POSITIVE_INF_WRAPPER = \"double_positive_inf\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2MDU5Mg==", "bodyText": "I agree. I will let this change get in and avoid similar changes in the future. Sorry for the inconvenience.", "url": "https://github.com/apache/beam/pull/12643#discussion_r512460592", "createdAt": "2020-10-27T07:17:23Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamBigQuerySqlDialect.java", "diffHunk": "@@ -87,16 +87,17 @@\n           .put(\"$extract_time\", \"TIME\")\n           .put(\"$extract_datetime\", \"DATETIME\")\n           .build();\n-  public static final String DOUBLE_POSITIVE_INF_FUNCTION = \"double_positive_inf\";\n-  public static final String DOUBLE_NEGATIVE_INF_FUNCTION = \"double_negative_inf\";\n-  public static final String DOUBLE_NAN_FUNCTION = \"double_nan\";\n-  private static final Map<String, String> DOUBLE_FUNCTIONS =\n+  public static final String DOUBLE_POSITIVE_INF_WRAPPER = \"double_positive_inf\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NDMyNw=="}, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDEzNDc5OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SupportedZetaSqlBuiltinFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDowNDo1NFrOHSbXbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzoyMToxN1rOHouNZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NDc4Mw==", "bodyText": "nit: This PR has a interesting mix of minor refactors and addition of new functionality. These should probably be separate changes.", "url": "https://github.com/apache/beam/pull/12643#discussion_r489084783", "createdAt": "2020-09-16T00:04:54Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SupportedZetaSqlBuiltinFunctions.java", "diffHunk": "@@ -277,29 +293,31 @@\n           FunctionSignatureId.FN_PARSE_DATETIME, // parse_datetime\n           FunctionSignatureId.FN_PARSE_TIME, // parse_time\n           FunctionSignatureId.FN_PARSE_TIMESTAMP, // parse_timestamp\n+          // FunctionSignatureId.FN_LAST_DAY_DATE, // last_day date\n+          // FunctionSignatureId.FN_LAST_DAY_DATETIME, // last_day datetime\n \n           // Math functions\n-          // FunctionSignatureId.FN_ABS_INT64, // abs\n-          // FunctionSignatureId.FN_ABS_DOUBLE, // abs\n-          // FunctionSignatureId.FN_ABS_NUMERIC, // abs\n+          FunctionSignatureId.FN_ABS_INT64, // abs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2MjE4MQ==", "bodyText": "Make sense. I will remember to separate different categories of changes in the future. Thanks for the suggestion!", "url": "https://github.com/apache/beam/pull/12643#discussion_r512462181", "createdAt": "2020-10-27T07:21:17Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SupportedZetaSqlBuiltinFunctions.java", "diffHunk": "@@ -277,29 +293,31 @@\n           FunctionSignatureId.FN_PARSE_DATETIME, // parse_datetime\n           FunctionSignatureId.FN_PARSE_TIME, // parse_time\n           FunctionSignatureId.FN_PARSE_TIMESTAMP, // parse_timestamp\n+          // FunctionSignatureId.FN_LAST_DAY_DATE, // last_day date\n+          // FunctionSignatureId.FN_LAST_DAY_DATETIME, // last_day datetime\n \n           // Math functions\n-          // FunctionSignatureId.FN_ABS_INT64, // abs\n-          // FunctionSignatureId.FN_ABS_DOUBLE, // abs\n-          // FunctionSignatureId.FN_ABS_NUMERIC, // abs\n+          FunctionSignatureId.FN_ABS_INT64, // abs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NDc4Mw=="}, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDEzODYyOnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SupportedZetaSqlBuiltinFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDowNjo0OVrOHSbZlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDo0NTo0MVrOHpAEEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NTMzNA==", "bodyText": "This one scares me just a little. In particular, I'm worried that we might accidentally optimize such that we end up with a constant. Is that something we need to test? https://xkcd.com/221/", "url": "https://github.com/apache/beam/pull/12643#discussion_r489085334", "createdAt": "2020-09-16T00:06:49Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SupportedZetaSqlBuiltinFunctions.java", "diffHunk": "@@ -475,17 +512,22 @@\n \n           // FunctionSignatureId.FN_RANGE_BUCKET, //  range_bucket(T, array<T>) -> int64\n \n-          // FunctionSignatureId.FN_RAND, // rand() -> double\n+          FunctionSignatureId.FN_RAND // rand() -> double", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 267}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NDcwNw==", "bodyText": "Thanks for catching this! I will disable this for now, and enable it later once we have a thorough test.", "url": "https://github.com/apache/beam/pull/12643#discussion_r512754707", "createdAt": "2020-10-27T14:45:41Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SupportedZetaSqlBuiltinFunctions.java", "diffHunk": "@@ -475,17 +512,22 @@\n \n           // FunctionSignatureId.FN_RANGE_BUCKET, //  range_bucket(T, array<T>) -> int64\n \n-          // FunctionSignatureId.FN_RAND, // rand() -> double\n+          FunctionSignatureId.FN_RAND // rand() -> double", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NTMzNA=="}, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 267}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDE1MjU2OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSqlTypesUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoxNDoxNVrOHSbhvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoxNDoxNVrOHSbhvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4NzQyMQ==", "bodyText": "nit: these constants are only used in ZetaSqlMathFunctionsTest.java, do they belong there?", "url": "https://github.com/apache/beam/pull/12643#discussion_r489087421", "createdAt": "2020-09-16T00:14:15Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSqlTypesUtils.java", "diffHunk": "@@ -24,6 +24,11 @@\n @Internal\n public class ZetaSqlTypesUtils {\n \n+  public static final BigDecimal NUMERIC_MAX_VALUE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae0a10ac1941a21e22ff105735e239538679ff44"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 555, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}