{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODAwOTg3", "number": 12131, "title": "[BEAM-10335] Add STS assume role to AwsModule", "bodyText": "Please add a meaningful description for your change here\n\n@aromanenko-dev Please take a look.\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @aromanenko-dev).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-30T05:58:00Z", "url": "https://github.com/apache/beam/pull/12131", "merged": true, "mergeCommit": {"oid": "eacdbf3f3824932abb304e71e20af24925a9c5ef"}, "closed": true, "closedAt": "2020-07-02T17:52:38Z", "author": {"login": "jalmeidaa"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwPFvzAH2gAyNDQxODAwOTg3OmY1MmM3ZGU5NGFmOGRjYmJlMTE1Mjc3YzUxYzZjODI0ZTFiNzJhODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxCn17AFqTQ0MTkwODY0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f52c7de94af8dcbbe115277c51c6c824e1b72a80", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f52c7de94af8dcbbe115277c51c6c824e1b72a80", "committedDate": "2020-06-30T05:49:18Z", "message": "BEAM-10335 add STS assume role to AwsModule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed", "committedDate": "2020-06-30T05:56:15Z", "message": "BEAM-10335 add STS assume role to AwsModule"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTE3NTk1", "url": "https://github.com/apache/beam/pull/12131#pullrequestreview-440117595", "createdAt": "2020-06-30T15:11:29Z", "commit": {"oid": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToxMTozMFrOGrBMCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToxNjo0MFrOGrBa7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2MTQxNg==", "bodyText": "Why do we need to use a Wrapper instead of just using STSAssumeRoleSessionCredentialsProvider?", "url": "https://github.com/apache/beam/pull/12131#discussion_r447761416", "createdAt": "2020-06-30T15:11:30Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/sts/STSCredentialsProviderWrapper.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.aws.sts;\n+\n+import com.amazonaws.auth.AWSCredentials;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n+import com.amazonaws.regions.Regions;\n+import com.amazonaws.services.securitytoken.AWSSecurityTokenService;\n+import com.amazonaws.services.securitytoken.AWSSecurityTokenServiceClientBuilder;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+/*\n+ *\n+ * {@link AWSCredentialsProvider} that loads credentials using Assume Role\n+ *\n+ */\n+\n+public class STSCredentialsProviderWrapper implements AWSCredentialsProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2NTIzMQ==", "bodyText": "I'm not sure that it's needed to create a separate package for STS. Can we put STSCredentialsProviderWrapper  into options?", "url": "https://github.com/apache/beam/pull/12131#discussion_r447765231", "createdAt": "2020-06-30T15:16:40Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/sts/package-info.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/** Defines IO connectors for Amazon Web Services SQS. */\n+@Experimental(Kind.SOURCE_SINK)\n+package org.apache.beam.sdk.io.aws.sts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dba93f9e794e6e53d3339b08b0c3b8eacf7d53ba", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/dba93f9e794e6e53d3339b08b0c3b8eacf7d53ba", "committedDate": "2020-06-30T21:57:00Z", "message": "[BEAM-10335] update with unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "134be881d0731abb7b0a192dc1c6d8df0cce2b6a", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/134be881d0731abb7b0a192dc1c6d8df0cce2b6a", "committedDate": "2020-07-01T10:44:34Z", "message": "[BEAM-10335] update with gradle build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f78d77072b730e43bffbb28f745199a3ba7e0917", "committedDate": "2020-07-01T16:00:53Z", "message": "[BEAM-10335] apply spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDE0NTQ5", "url": "https://github.com/apache/beam/pull/12131#pullrequestreview-441014549", "createdAt": "2020-07-01T16:14:52Z", "commit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjoxNDo1MlrOGrslfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjozMDo0OVrOGrtK0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3MjQ0Ng==", "bodyText": "Why do we need this plugin? I don't think we have to distribute shadow jar.", "url": "https://github.com/apache/beam/pull/12131#discussion_r448472446", "createdAt": "2020-07-01T16:14:52Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/build.gradle", "diffHunk": "@@ -18,13 +18,21 @@ import groovy.json.JsonOutput\n  * limitations under the License.\n  */\n \n-plugins { id 'org.apache.beam.module' }\n-applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.io.aws')\n+plugins {\n+  id 'com.github.johnrengelman.shadow'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3NDg5Ng==", "bodyText": "I'm not sure we need to shadow here.", "url": "https://github.com/apache/beam/pull/12131#discussion_r448474896", "createdAt": "2020-07-01T16:18:53Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/build.gradle", "diffHunk": "@@ -18,13 +18,21 @@ import groovy.json.JsonOutput\n  * limitations under the License.\n  */\n \n-plugins { id 'org.apache.beam.module' }\n-applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.io.aws')\n+plugins {\n+  id 'com.github.johnrengelman.shadow'\n+  id 'org.apache.beam.module'\n+}\n+applyJavaNature(\n+        automaticModuleName: 'org.apache.beam.sdk.io.aws'\n+)\n \n description = \"Apache Beam :: SDKs :: Java :: IO :: Amazon Web Services\"\n ext.summary = \"IO library to read and write Amazon Web Services services from Beam.\"\n \n dependencies {\n+  shadow localGroovy()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3NzcyOA==", "bodyText": "Please, add Serialization/Deserialization asserts as we do for other provider tests.", "url": "https://github.com/apache/beam/pull/12131#discussion_r448477728", "createdAt": "2020-07-01T16:23:34Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/test/java/org/apache/beam/sdk/io/aws/options/AwsModuleTest.java", "diffHunk": "@@ -117,6 +119,17 @@ public void testClasspathPropertiesFileCredentialsProviderSerializationDeseriali\n     assertEquals(credentialsFilePath, deserializedCredentialsFilePath);\n   }\n \n+  @Test\n+  public void testSTSCredentialsProviderWrapperSerializationDeserialization() throws Exception {\n+    String roleArn = \"arn:aws:iam::000111222333:role/TestRole\";\n+    String roleSessionName = \"roleSessionName\";\n+    STSAssumeRoleSessionCredentialsProvider credentialsProvider =\n+        AssumeRoleSessionCredentialsProvider.getInstance(roleArn, roleSessionName)\n+            .getSessionCredentialsProvider();\n+\n+    assertNotNull(credentialsProvider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ4MjAwMg==", "bodyText": "Can we just return new STSAssumeRoleSessionCredentialsProvider.Builder(asMap.get(ROLE_ARN), asMap.get(ROLE_SESSION_NAME)).build() here? Why do we need to create AssumeRoleSessionCredentialsProvider class?", "url": "https://github.com/apache/beam/pull/12131#discussion_r448482002", "createdAt": "2020-07-01T16:30:49Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/options/AwsModule.java", "diffHunk": "@@ -132,6 +135,10 @@ public AWSCredentialsProvider deserializeWithType(\n         return new ProfileCredentialsProvider();\n       } else if (typeName.equals(EC2ContainerCredentialsProviderWrapper.class.getSimpleName())) {\n         return new EC2ContainerCredentialsProviderWrapper();\n+      } else if (typeName.equals(STSAssumeRoleSessionCredentialsProvider.class.getSimpleName())) {\n+        return AssumeRoleSessionCredentialsProvider.getInstance(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDI3MjQ0", "url": "https://github.com/apache/beam/pull/12131#pullrequestreview-441027244", "createdAt": "2020-07-01T16:31:58Z", "commit": {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb4840dba2e75d745b96079b08c74911166e6934", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/bb4840dba2e75d745b96079b08c74911166e6934", "committedDate": "2020-07-01T18:59:31Z", "message": "[BEAM-10335] update on test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10e038585729a8973229ad6d5778fc283934f271", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/10e038585729a8973229ad6d5778fc283934f271", "committedDate": "2020-07-01T21:46:11Z", "message": "[BEAM-10335] remove unused files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODIxMTk0", "url": "https://github.com/apache/beam/pull/12131#pullrequestreview-441821194", "createdAt": "2020-07-02T15:51:40Z", "commit": {"oid": "10e038585729a8973229ad6d5778fc283934f271"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo1MTo0MFrOGsTpcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMDo1MVrOGsUw6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExMjQzMg==", "bodyText": "Please, remove it. It should be a user's responsibility to create or not shadow jar, not Beam.", "url": "https://github.com/apache/beam/pull/12131#discussion_r449112432", "createdAt": "2020-07-02T15:51:40Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/build.gradle", "diffHunk": "@@ -18,8 +18,14 @@ import groovy.json.JsonOutput\n  * limitations under the License.\n  */\n \n-plugins { id 'org.apache.beam.module' }\n-applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.io.aws')\n+plugins {\n+  id 'org.apache.beam.module'\n+}\n+\n+applyJavaNature(\n+        automaticModuleName: 'org.apache.beam.sdk.io.aws',\n+        shadowClosure: {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e038585729a8973229ad6d5778fc283934f271"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExNDc3Nw==", "bodyText": "Use ROLE_ARN constant here.", "url": "https://github.com/apache/beam/pull/12131#discussion_r449114777", "createdAt": "2020-07-02T15:55:10Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/options/AwsModule.java", "diffHunk": "@@ -203,7 +211,27 @@ public void serializeWithType(\n         } catch (NoSuchFieldException | IllegalAccessException e) {\n           throw new IOException(\"failed to access private field with reflection\", e);\n         }\n+      } else if (credentialsProvider\n+          .getClass()\n+          .equals(STSAssumeRoleSessionCredentialsProvider.class)) {\n+        try {\n+          STSAssumeRoleSessionCredentialsProvider specificProvider =\n+              (STSAssumeRoleSessionCredentialsProvider) credentialsProvider;\n+\n+          Field fieldRole =\n+              STSAssumeRoleSessionCredentialsProvider.class.getDeclaredField(\"roleArn\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e038585729a8973229ad6d5778fc283934f271"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExNTAzMA==", "bodyText": "Use ROLE_SESSION_NAME constant here.", "url": "https://github.com/apache/beam/pull/12131#discussion_r449115030", "createdAt": "2020-07-02T15:55:33Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/options/AwsModule.java", "diffHunk": "@@ -203,7 +211,27 @@ public void serializeWithType(\n         } catch (NoSuchFieldException | IllegalAccessException e) {\n           throw new IOException(\"failed to access private field with reflection\", e);\n         }\n+      } else if (credentialsProvider\n+          .getClass()\n+          .equals(STSAssumeRoleSessionCredentialsProvider.class)) {\n+        try {\n+          STSAssumeRoleSessionCredentialsProvider specificProvider =\n+              (STSAssumeRoleSessionCredentialsProvider) credentialsProvider;\n+\n+          Field fieldRole =\n+              STSAssumeRoleSessionCredentialsProvider.class.getDeclaredField(\"roleArn\");\n+          fieldRole.setAccessible(true);\n+          String roleArn = (String) fieldRole.get(specificProvider);\n+          jsonGenerator.writeStringField(ROLE_ARN, roleArn);\n \n+          Field fieldSession =\n+              STSAssumeRoleSessionCredentialsProvider.class.getDeclaredField(\"roleSessionName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e038585729a8973229ad6d5778fc283934f271"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExODE0Nw==", "bodyText": "nit: word Wrapper is unnecessary in the test name.", "url": "https://github.com/apache/beam/pull/12131#discussion_r449118147", "createdAt": "2020-07-02T16:00:10Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/test/java/org/apache/beam/sdk/io/aws/options/AwsModuleTest.java", "diffHunk": "@@ -117,6 +118,29 @@ public void testClasspathPropertiesFileCredentialsProviderSerializationDeseriali\n     assertEquals(credentialsFilePath, deserializedCredentialsFilePath);\n   }\n \n+  @Test\n+  public void testSTSCredentialsProviderWrapperSerializationDeserialization() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e038585729a8973229ad6d5778fc283934f271"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMDczMQ==", "bodyText": "Please, leave org.junit.Assert.assertThat as it was before.", "url": "https://github.com/apache/beam/pull/12131#discussion_r449130731", "createdAt": "2020-07-02T16:20:51Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/amazon-web-services/src/test/java/org/apache/beam/sdk/io/aws/options/AwsModuleTest.java", "diffHunk": "@@ -17,9 +17,9 @@\n  */\n package org.apache.beam.sdk.io.aws.options;\n \n+import static org.hamcrest.MatcherAssert.assertThat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e038585729a8973229ad6d5778fc283934f271"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c752def04fa45f45babac2c0e093e4d8332ab90", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0c752def04fa45f45babac2c0e093e4d8332ab90", "committedDate": "2020-07-02T16:30:56Z", "message": "[BEAM-10335] update as per review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTA4NjQ0", "url": "https://github.com/apache/beam/pull/12131#pullrequestreview-441908644", "createdAt": "2020-07-02T17:51:42Z", "commit": {"oid": "0c752def04fa45f45babac2c0e093e4d8332ab90"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3235, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}