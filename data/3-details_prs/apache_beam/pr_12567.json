{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjEwNzg3", "number": 12567, "title": "[BEAM-10715] Update Jet Runner validates runner testing", "bodyText": "Since there were no pre/post commit checks set up for the Jet Runner, it failed to keep up with recent changes so some validatesRunner tests, which were previously ok, started failing.\nFixed them now and added pre-commit checks.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-13T07:46:10Z", "url": "https://github.com/apache/beam/pull/12567", "merged": true, "mergeCommit": {"oid": "300fab6738dac5ae4287a85422ee10e146db29d5"}, "closed": true, "closedAt": "2020-08-18T16:25:58Z", "author": {"login": "jbartok"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-a1hrgH2gAyNDY3MjEwNzg3OjE1OWU4MmExNjE4NDMyMjViZjljYzVkNWIyMTY5YTAwMDhiODE5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAB5u6AH2gAyNDY3MjEwNzg3OmMxYzRhNzdkZDA5ZTU4YjE5YTIxOWE3ZjJlOWIxYzkzMWE4NzI3Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "159e82a161843225bf9cc5d5b2169a0008b81956", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/159e82a161843225bf9cc5d5b2169a0008b81956", "committedDate": "2020-08-13T07:25:23Z", "message": "Adapt Jet Runner to recent framework changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ee7c4ae340bb2545f40e41665dd46fba36339dd", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7ee7c4ae340bb2545f40e41665dd46fba36339dd", "committedDate": "2020-08-13T07:30:54Z", "message": "Add pre-commit checks for Jet Runner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4127ecff46a719a76e8d50a96387313ae7101fc4", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4127ecff46a719a76e8d50a96387313ae7101fc4", "committedDate": "2020-08-13T07:54:07Z", "message": "Make spotless checker happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55af2d42fbbfc486f25adac8023cddecfcf81d54", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/55af2d42fbbfc486f25adac8023cddecfcf81d54", "committedDate": "2020-08-13T09:11:54Z", "message": "Make checkstyle happy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2OTQzMDU5", "url": "https://github.com/apache/beam/pull/12567#pullrequestreview-466943059", "createdAt": "2020-08-13T16:52:29Z", "commit": {"oid": "55af2d42fbbfc486f25adac8023cddecfcf81d54"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNjo1MjoyOVrOHAUCng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzowMTowN1rOHAUXFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5MDM5OA==", "bodyText": "I gave bad advice earlier, we have split out the validates runner suites to be their own jenkins job (for example https://github.com/apache/beam/blob/master/.test-infra/jenkins/job_PostCommit_Java_ValidatesRunner_Twister2.groovy).", "url": "https://github.com/apache/beam/pull/12567#discussion_r470090398", "createdAt": "2020-08-13T16:52:29Z", "author": {"login": "lukecwik"}, "path": "build.gradle", "diffHunk": "@@ -155,6 +155,7 @@ task javaPreCommit() {\n   dependsOn \":sdks:java:extensions:sql:jdbc:preCommit\"\n   dependsOn \":sdks:java:javadoc:allJavadoc\"\n   dependsOn \":runners:direct-java:needsRunnerTests\"\n+  dependsOn \":runners:jet:validatesRunner\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55af2d42fbbfc486f25adac8023cddecfcf81d54"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NTYzOQ==", "bodyText": "We should be dropping processing based timers if the watermark advances to infinity and not be executing them.\nWe can keep the existing behavior that we had but in a follow-up PR it would make sense to fix this logic.", "url": "https://github.com/apache/beam/pull/12567#discussion_r470095639", "createdAt": "2020-08-13T17:01:07Z", "author": {"login": "lukecwik"}, "path": "runners/jet/src/main/java/org/apache/beam/runners/jet/processors/StatefulParDoP.java", "diffHunk": "@@ -276,36 +262,94 @@ Processor getEx(\n           inputValueCoder,\n           outputValueCoders,\n           ordinalToSideInput,\n+          sideInputMapping,\n           ownerId,\n           stepId);\n     }\n   }\n \n-  private static class KeyedStepContext implements StepContext {\n+  private class KeyedStepContext implements StepContext {\n \n-    private final Map<Object, InMemoryStateInternals> stateInternalsOfKeys;\n-    private final InMemoryTimerInternals timerInternals;\n+    private final Object nullKey = new Object();\n \n-    private InMemoryStateInternals currentStateInternals;\n+    private final ConcurrentHashMap<Object, InMemoryStateInternals> keyedStateInternals;\n+    private final ConcurrentHashMap<Object, InMemoryTimerInternals> keyedTimerInternals;\n \n-    KeyedStepContext(InMemoryTimerInternals timerInternals) {\n-      this.stateInternalsOfKeys = new HashMap<>();\n-      this.timerInternals = timerInternals;\n+    @SuppressWarnings(\"ThreadLocalUsage\")\n+    private final ThreadLocal<Object> currentKey = new ThreadLocal<>();\n+\n+    KeyedStepContext() {\n+      this.keyedStateInternals = new ConcurrentHashMap<>();\n+      this.keyedTimerInternals = new ConcurrentHashMap<>();\n     }\n \n     void setKey(Object key) {\n-      currentStateInternals =\n-          stateInternalsOfKeys.computeIfAbsent(key, InMemoryStateInternals::forKey);\n+      Object normalizedKey = key == null ? nullKey : key;\n+      currentKey.set(normalizedKey);\n+      keyedStateInternals.computeIfAbsent(normalizedKey, InMemoryStateInternals::forKey);\n+      keyedTimerInternals.computeIfAbsent(normalizedKey, k -> new InMemoryTimerInternals());\n+    }\n+\n+    void clearKey() {\n+      currentKey.remove();\n     }\n \n     @Override\n     public StateInternals stateInternals() {\n-      return currentStateInternals;\n+      Object key = currentKey.get();\n+      if (key == null) {\n+        throw new IllegalStateException(\"Active key should be set\");\n+      }\n+      return keyedStateInternals.get(key);\n     }\n \n     @Override\n     public TimerInternals timerInternals() {\n-      return timerInternals;\n+      Object key = currentKey.get();\n+      if (key == null) {\n+        throw new IllegalStateException(\"Active key should be set\");\n+      }\n+      return keyedTimerInternals.get(key);\n+    }\n+\n+    public void advanceProcessingTimes() {\n+      Instant now = Instant.now();\n+      keyedTimerInternals\n+          .values()\n+          .forEach(\n+              timerInternals -> {\n+                try {\n+                  timerInternals.advanceProcessingTime(now);\n+                  timerInternals.advanceSynchronizedProcessingTime(now);\n+                } catch (Exception e) {\n+                  throw new RuntimeException(\"Failed advancing time!\");\n+                }\n+              });\n+    }\n+\n+    public void flushTimers(long watermark) {\n+      Instant watermarkInstant = new Instant(watermark);\n+      keyedTimerInternals\n+          .entrySet()\n+          .forEach(\n+              (entry) -> {\n+                InMemoryTimerInternals timerInternals = entry.getValue();\n+                if (timerInternals.currentInputWatermarkTime().isBefore(watermark)) {\n+                  try {\n+                    timerInternals.advanceInputWatermark(watermarkInstant);\n+                    if (watermarkInstant.equals(BoundedWindow.TIMESTAMP_MAX_VALUE)) {\n+                      timerInternals.advanceProcessingTime(watermarkInstant);\n+                      timerInternals.advanceSynchronizedProcessingTime(watermarkInstant);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55af2d42fbbfc486f25adac8023cddecfcf81d54"}, "originalPosition": 255}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a606d54a14be3df23dc613498e17c24fa5d0d672", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a606d54a14be3df23dc613498e17c24fa5d0d672", "committedDate": "2020-08-17T11:06:54Z", "message": "Remove Jet Runner validation tests from pre-commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTk2MTY4", "url": "https://github.com/apache/beam/pull/12567#pullrequestreview-468596168", "createdAt": "2020-08-17T16:02:46Z", "commit": {"oid": "a606d54a14be3df23dc613498e17c24fa5d0d672"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjAwMjE1", "url": "https://github.com/apache/beam/pull/12567#pullrequestreview-468600215", "createdAt": "2020-08-17T16:07:48Z", "commit": {"oid": "a606d54a14be3df23dc613498e17c24fa5d0d672"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowNzo0OFrOHBvOag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowNzo0OFrOHBvOag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NDM2Mg==", "bodyText": "Lets exclude test categories when possible based upon missing features within the runner. This will allow additional tests to be added without needing the exclusion lists of each runner to be updated.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    excludeCategories 'org.apache.beam.sdk.testing.UsesBundleFinalizer'\n          \n          \n            \n                }\n          \n          \n            \n                filter {\n          \n          \n            \n                    //Jet Runner doesn't current support @RequiresTimeSortedInput annotation.\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$StateTests.*TimeSortedInput*'\n          \n          \n            \n            \n          \n          \n            \n                    //Event type not supported in TestStream: class org.apache.beam.sdk.testing.AutoValue_TestStream_ProcessingTimeEvent\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testOutputTimestampWithProcessingTime'\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testProcessingTimeTimerCanBeReset'\n          \n          \n            \n            \n          \n          \n            \n                    //unbounded streams created from bounded sources not supported by Jet Runner\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testTwoTimersSettingEachOtherWithCreateAsInputUnbounded'\n          \n          \n            \n            \n          \n          \n            \n                    //timer output timestamps not supported by Jet Runner\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testOutputTimestamp'\n          \n          \n            \n            \n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.testing.PAssertTest.testAssertionSiteIsCaptured*'\n          \n          \n            \n                    excludeCategories 'org.apache.beam.sdk.testing.UsesBundleFinalizer'\n          \n          \n            \n                    \n          \n          \n            \n                    //Jet Runner doesn't current support @RequiresTimeSortedInput annotation.\n          \n          \n            \n                    excludeCategories 'org.apache.beam.sdk.testing.UsesRequiresTimeSortedInput'\n          \n          \n            \n            \n          \n          \n            \n                    //Event type not supported in TestStream: class org.apache.beam.sdk.testing.AutoValue_TestStream_ProcessingTimeEvent\n          \n          \n            \n                    excludeCategories 'org.apache.beam.sdk.testing.UsesTestStreamWithProcessingTime'\n          \n          \n            \n                }\n          \n          \n            \n                filter {\n          \n          \n            \n                    // unbounded streams created from bounded sources not supported by Jet Runner\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testTwoTimersSettingEachOtherWithCreateAsInputUnbounded'\n          \n          \n            \n            \n          \n          \n            \n                    // timer output timestamps not supported by Jet Runner\n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testOutputTimestamp'\n          \n          \n            \n            \n          \n          \n            \n                    excludeTestsMatching 'org.apache.beam.sdk.testing.PAssertTest.testAssertionSiteIsCaptured*'", "url": "https://github.com/apache/beam/pull/12567#discussion_r471584362", "createdAt": "2020-08-17T16:07:48Z", "author": {"login": "lukecwik"}, "path": "runners/jet/build.gradle", "diffHunk": "@@ -78,6 +78,22 @@ task validatesRunnerBatch(type: Test) {\n         exclude '**/SplittableDoFnTest.class' //Splittable DoFn functionality not yet in the runner\n         excludeCategories 'org.apache.beam.sdk.testing.UsesBundleFinalizer'\n     }\n+    filter {\n+        //Jet Runner doesn't current support @RequiresTimeSortedInput annotation.\n+        excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$StateTests.*TimeSortedInput*'\n+\n+        //Event type not supported in TestStream: class org.apache.beam.sdk.testing.AutoValue_TestStream_ProcessingTimeEvent\n+        excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testOutputTimestampWithProcessingTime'\n+        excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testProcessingTimeTimerCanBeReset'\n+\n+        //unbounded streams created from bounded sources not supported by Jet Runner\n+        excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testTwoTimersSettingEachOtherWithCreateAsInputUnbounded'\n+\n+        //timer output timestamps not supported by Jet Runner\n+        excludeTestsMatching 'org.apache.beam.sdk.transforms.ParDoTest$TimerTests.testOutputTimestamp'\n+\n+        excludeTestsMatching 'org.apache.beam.sdk.testing.PAssertTest.testAssertionSiteIsCaptured*'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a606d54a14be3df23dc613498e17c24fa5d0d672"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee88be1d69c865346eb6fffb3dab02a3b9087aae", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/ee88be1d69c865346eb6fffb3dab02a3b9087aae", "committedDate": "2020-08-17T16:09:01Z", "message": "Update runners/jet/build.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c4a77dd09e58b19a219a7f2e9b1c931a872737", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c1c4a77dd09e58b19a219a7f2e9b1c931a872737", "committedDate": "2020-08-18T07:30:12Z", "message": "Merge branch 'master' into update-jet-runner"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3497, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}