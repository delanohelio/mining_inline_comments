{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDkzNDE0", "number": 11244, "title": "[BEAM-3097] _ReadFromBigQuery supports valueprovider for table", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-27T00:50:00Z", "url": "https://github.com/apache/beam/pull/11244", "merged": true, "mergeCommit": {"oid": "59ea9c207a0a0765b92d9ebb3a2ef35b483973da"}, "closed": true, "closedAt": "2020-04-07T17:58:00Z", "author": {"login": "pabloem"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRl2sEgH2gAyMzk0NDkzNDE0OjgzY2QwMmIxOGJhMDJjNzlmMjM0ZDdjOWMzNjFhYTg1YjU4NzU0ZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUH9y6AH2gAyMzk0NDkzNDE0OjE1OGI5NjcwNzVhZmUzY2EwZGU2ZWM0YTE2ODllYjRiY2QxNWFjZjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "83cd02b18ba02c79f234d7c9c361aa85b58754f3", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/83cd02b18ba02c79f234d7c9c361aa85b58754f3", "committedDate": "2020-03-27T00:49:01Z", "message": "[BEAM-3097] _ReadFromBigQuery supports valueprovider for table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "774e5696676d2dd5aacde0a5f678b1560eeedc3c", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/774e5696676d2dd5aacde0a5f678b1560eeedc3c", "committedDate": "2020-03-27T18:02:56Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855b3e1a2594769d7c15eb89b2393d0790ed2a7e", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/855b3e1a2594769d7c15eb89b2393d0790ed2a7e", "committedDate": "2020-03-27T18:48:09Z", "message": "fix formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NDQzMjg2", "url": "https://github.com/apache/beam/pull/11244#pullrequestreview-385443286", "createdAt": "2020-04-01T10:08:11Z", "commit": {"oid": "855b3e1a2594769d7c15eb89b2393d0790ed2a7e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "857883bd88f7d2227501e69f1204029898be42b2", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/857883bd88f7d2227501e69f1204029898be42b2", "committedDate": "2020-04-01T17:51:57Z", "message": "fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODYyMjE2", "url": "https://github.com/apache/beam/pull/11244#pullrequestreview-386862216", "createdAt": "2020-04-03T00:17:41Z", "commit": {"oid": "857883bd88f7d2227501e69f1204029898be42b2"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDoxNzo0MVrOGAA6IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDoyMzoyM1rOGABAHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2ODA2NQ==", "bodyText": "Not from this PR but shouldn't this be a dry run ?", "url": "https://github.com/apache/beam/pull/11244#discussion_r402668065", "createdAt": "2020-04-03T00:17:41Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -641,12 +641,19 @@ def __init__(\n   def estimate_size(self):\n     bq = bigquery_tools.BigQueryWrapper()\n     if self.table_reference is not None:\n+      table_ref = self.table_reference\n+      if (isinstance(self.table_reference, vp.ValueProvider) and\n+          self.table_reference.is_accessible()):\n+        table_ref = bigquery_tools.parse_table_reference(\n+            self.table_reference.get(), self.dataset, self.project)\n+      elif isinstance(self.table_reference, vp.ValueProvider):\n+        # Size estimation is best effort. We return 0 as we have no\n+        # access to the table that we're querying.\n+        return 0\n       table = bq.get_table(\n-          self.table_reference.projectId,\n-          self.table_reference.datasetId,\n-          self.table_reference.tableId)\n+          table_ref.projectId, table_ref.datasetId, table_ref.tableId)\n       return int(table.numBytes)\n-    else:\n+    elif self.query is not None and self.query.is_accessible():\n       job = bq._start_query_job(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857883bd88f7d2227501e69f1204029898be42b2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2ODYwOA==", "bodyText": "Shouldn't we support ValueProvider for queries as well ?", "url": "https://github.com/apache/beam/pull/11244#discussion_r402668608", "createdAt": "2020-04-03T00:19:31Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -641,12 +641,19 @@ def __init__(\n   def estimate_size(self):\n     bq = bigquery_tools.BigQueryWrapper()\n     if self.table_reference is not None:\n+      table_ref = self.table_reference\n+      if (isinstance(self.table_reference, vp.ValueProvider) and\n+          self.table_reference.is_accessible()):\n+        table_ref = bigquery_tools.parse_table_reference(\n+            self.table_reference.get(), self.dataset, self.project)\n+      elif isinstance(self.table_reference, vp.ValueProvider):\n+        # Size estimation is best effort. We return 0 as we have no\n+        # access to the table that we're querying.\n+        return 0\n       table = bq.get_table(\n-          self.table_reference.projectId,\n-          self.table_reference.datasetId,\n-          self.table_reference.tableId)\n+          table_ref.projectId, table_ref.datasetId, table_ref.tableId)\n       return int(table.numBytes)\n-    else:\n+    elif self.query is not None and self.query.is_accessible():", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857883bd88f7d2227501e69f1204029898be42b2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTU2Nw==", "bodyText": "We have to return None if size cannot be determined. See spec here: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/io/iobase.py#L157", "url": "https://github.com/apache/beam/pull/11244#discussion_r402669567", "createdAt": "2020-04-03T00:23:15Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -641,12 +641,19 @@ def __init__(\n   def estimate_size(self):\n     bq = bigquery_tools.BigQueryWrapper()\n     if self.table_reference is not None:\n+      table_ref = self.table_reference\n+      if (isinstance(self.table_reference, vp.ValueProvider) and\n+          self.table_reference.is_accessible()):\n+        table_ref = bigquery_tools.parse_table_reference(\n+            self.table_reference.get(), self.dataset, self.project)\n+      elif isinstance(self.table_reference, vp.ValueProvider):\n+        # Size estimation is best effort. We return 0 as we have no\n+        # access to the table that we're querying.\n+        return 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857883bd88f7d2227501e69f1204029898be42b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTU5Ng==", "bodyText": "Ditto.", "url": "https://github.com/apache/beam/pull/11244#discussion_r402669596", "createdAt": "2020-04-03T00:23:23Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -657,6 +664,10 @@ def estimate_size(self):\n           kms_key=self.kms_key)\n       size = int(job.statistics.totalBytesProcessed)\n       return size\n+    else:\n+      # Size estimation is best effort. We return 0 as we have no\n+      # access to the query that we're running.\n+      return 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857883bd88f7d2227501e69f1204029898be42b2"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "158b967075afe3ca0de6ec4a1689eb4bcd15acf0", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/158b967075afe3ca0de6ec4a1689eb4bcd15acf0", "committedDate": "2020-04-03T21:41:24Z", "message": "fixup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4746, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}