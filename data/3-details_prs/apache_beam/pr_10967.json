{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzY5MDM0", "number": 10967, "title": "[BEAM-9300] convert struct literal in ZetaSQL", "bodyText": "cc @robinyqiu @amaliujia\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-02-25T19:51:37Z", "url": "https://github.com/apache/beam/pull/10967", "merged": true, "mergeCommit": {"oid": "f0930f958d47042948c06041e074ef9f1b0872d9"}, "closed": true, "closedAt": "2020-02-28T00:00:12Z", "author": {"login": "ibzib"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcINoUigH2gAyMzc5NzY5MDM0OjAyYWJiMTg5YTg0M2MzODVjZDVlMjhjNDAxMzJlYTBjMTAzMDkyMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIj7StgH2gAyMzc5NzY5MDM0OmExMjA5MTYwNDQwOWY0MDU4NzE1Nzc5NDIzZTcyZTE5ZTNjMDhjYWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/02abb189a843c385cd5e28c40132ea0c10309206", "committedDate": "2020-02-26T21:30:17Z", "message": "[BEAM-9300] convert struct literal in ZetaSQL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a7b038baab1ced8f802caf6f3746bb8a9cf68e2", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/5a7b038baab1ced8f802caf6f3746bb8a9cf68e2", "committedDate": "2020-02-25T18:04:14Z", "message": "[BEAM-9300] convert struct literal in ZetaSQL"}, "afterCommit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/02abb189a843c385cd5e28c40132ea0c10309206", "committedDate": "2020-02-26T21:30:17Z", "message": "[BEAM-9300] convert struct literal in ZetaSQL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDI2NDg2", "url": "https://github.com/apache/beam/pull/10967#pullrequestreview-366026486", "createdAt": "2020-02-27T21:53:48Z", "commit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1Mzo0OFrOFviizQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1Mzo0OFrOFviizQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MzM1Nw==", "bodyText": "I have lost some of my memory on this code path:\njust a question: does this work with deep nested ROW? E.g. ROW(ROW(ROW(...)..)...)", "url": "https://github.com/apache/beam/pull/10967#discussion_r385393357", "createdAt": "2020-02-27T21:53:48Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ExpressionConverter.java", "diffHunk": "@@ -962,20 +980,28 @@ private RexNode convertResolvedParameter(ResolvedParameter parameter) {\n   }\n \n   private RexNode convertResolvedStructFieldAccess(ResolvedGetStructField resolvedGetStructField) {\n-    return rexBuilder()\n-        .makeFieldAccess(\n-            convertRexNodeFromResolvedExpr(resolvedGetStructField.getExpr()),\n-            (int) resolvedGetStructField.getFieldIdx());\n+    RexNode referencedExpr = convertRexNodeFromResolvedExpr(resolvedGetStructField.getExpr());\n+    return convertResolvedStructFieldAccessInternal(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDI3NDg2", "url": "https://github.com/apache/beam/pull/10967#pullrequestreview-366027486", "createdAt": "2020-02-27T21:55:28Z", "commit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1NToyOFrOFvil4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1NToyOFrOFvil4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5NDE0NQ==", "bodyText": "nit: ideally such unparse should happen within operator classes. But since we implement it in Beam it is just ok.", "url": "https://github.com/apache/beam/pull/10967#discussion_r385394145", "createdAt": "2020-02-27T21:55:28Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamBigQuerySqlDialect.java", "diffHunk": "@@ -222,6 +222,14 @@ public void unparseCall(\n         }\n         writer.endFunCall(frame);\n         break;\n+      case ROW:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDM1OTk5", "url": "https://github.com/apache/beam/pull/10967#pullrequestreview-366035999", "createdAt": "2020-02-27T22:10:33Z", "commit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzQ4MTY5", "url": "https://github.com/apache/beam/pull/10967#pullrequestreview-365348169", "createdAt": "2020-02-27T00:50:07Z", "commit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDo1MDowN1rOFvBsHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDo1MDowN1rOFvBsHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NTA2OA==", "bodyText": "Why does the outerSchema need to be nullable here?", "url": "https://github.com/apache/beam/pull/10967#discussion_r384855068", "createdAt": "2020-02-27T00:50:07Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -3249,6 +3248,68 @@ public void testNamedParameterQuery() {\n     pipeline.run().waitUntilFinish(Duration.standardMinutes(PIPELINE_EXECUTION_WAITTIME_MINUTES));\n   }\n \n+  @Test\n+  public void testParameterStruct() {\n+    String sql = \"SELECT @p as ColA\";\n+    ImmutableMap<String, Value> params =\n+        ImmutableMap.of(\n+            \"p\",\n+            Value.createStructValue(\n+                TypeFactory.createStructType(\n+                    ImmutableList.of(\n+                        new StructType.StructField(\n+                            \"s\", TypeFactory.createSimpleType(TypeKind.TYPE_STRING)),\n+                        new StructType.StructField(\n+                            \"i\", TypeFactory.createSimpleType(TypeKind.TYPE_INT64)))),\n+                ImmutableList.of(Value.createStringValue(\"foo\"), Value.createInt64Value(1L))));\n+\n+    ZetaSQLQueryPlanner zetaSQLQueryPlanner = new ZetaSQLQueryPlanner(config);\n+    BeamRelNode beamRelNode = zetaSQLQueryPlanner.convertToBeamRel(sql, params);\n+    PCollection<Row> stream = BeamSqlRelUtils.toPCollection(pipeline, beamRelNode);\n+\n+    final Schema innerSchema =\n+        Schema.of(Field.of(\"s\", FieldType.STRING), Field.of(\"i\", FieldType.INT64));\n+    final Schema schema =\n+        Schema.builder().addNullableField(\"field1\", FieldType.row(innerSchema)).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02abb189a843c385cd5e28c40132ea0c10309206"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a12091604409f4058715779423e72e19e3c08cab", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/a12091604409f4058715779423e72e19e3c08cab", "committedDate": "2020-02-27T23:28:55Z", "message": "Test schema does not need to be nullable."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2927, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}