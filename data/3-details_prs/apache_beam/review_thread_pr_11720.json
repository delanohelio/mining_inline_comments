{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NzA1NzUx", "number": 11720, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0NTozN1rOD8_tjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0Njo0N1rOD8_u5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjg1MDA0OnYy", "diffSide": "LEFT", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0NTozN1rOGWRwmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1OToyMFrOGWSIng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjgyNA==", "bodyText": "do we not need the try/catch block anymore?", "url": "https://github.com/apache/beam/pull/11720#discussion_r426012824", "createdAt": "2020-05-15T19:45:37Z", "author": {"login": "ananvay"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "diffHunk": "@@ -206,18 +205,16 @@ public static void main(\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n+              .maximumSize(1000)\n+              .expireAfterAccess(10, TimeUnit.MINUTES)\n               .build(\n                   new CacheLoader<String, BeamFnApi.ProcessBundleDescriptor>() {\n                     @Override\n                     public BeamFnApi.ProcessBundleDescriptor load(String id) {\n-                      try {\n-                        return blockingControlStub.getProcessBundleDescriptor(\n-                            BeamFnApi.GetProcessBundleDescriptorRequest.newBuilder()\n-                                .setProcessBundleDescriptorId(id)\n-                                .build());\n-                      } catch (Throwable th) {\n-                        return (BeamFnApi.ProcessBundleDescriptor) fnApiRegistry.getById(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb83821235b0dd7a248a406e8e6b369822da8b2f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODk3NA==", "bodyText": "All runners now support the pull protocol.", "url": "https://github.com/apache/beam/pull/11720#discussion_r426018974", "createdAt": "2020-05-15T19:59:20Z", "author": {"login": "robertwb"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "diffHunk": "@@ -206,18 +205,16 @@ public static void main(\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n+              .maximumSize(1000)\n+              .expireAfterAccess(10, TimeUnit.MINUTES)\n               .build(\n                   new CacheLoader<String, BeamFnApi.ProcessBundleDescriptor>() {\n                     @Override\n                     public BeamFnApi.ProcessBundleDescriptor load(String id) {\n-                      try {\n-                        return blockingControlStub.getProcessBundleDescriptor(\n-                            BeamFnApi.GetProcessBundleDescriptorRequest.newBuilder()\n-                                .setProcessBundleDescriptorId(id)\n-                                .build());\n-                      } catch (Throwable th) {\n-                        return (BeamFnApi.ProcessBundleDescriptor) fnApiRegistry.getById(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjgyNA=="}, "originalCommit": {"oid": "cb83821235b0dd7a248a406e8e6b369822da8b2f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjg1MzUxOnYy", "diffSide": "RIGHT", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0Njo0N1rOGWRyrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDowMTo0NVrOGWSMsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMzM1OQ==", "bodyText": "Is this too large of a time interval? I'm assuming the SDK would ideally not wait ~10 min before starting the bundle, right?", "url": "https://github.com/apache/beam/pull/11720#discussion_r426013359", "createdAt": "2020-05-15T19:46:47Z", "author": {"login": "ananvay"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "diffHunk": "@@ -206,18 +205,16 @@ public static void main(\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n+              .maximumSize(1000)\n+              .expireAfterAccess(10, TimeUnit.MINUTES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb83821235b0dd7a248a406e8e6b369822da8b2f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDAxOQ==", "bodyText": "This is the time duration between never seeing a bundle of this type and discarding its description from the cache. It could be smaller, but I figured it was good to start out very conservatively (both count and time).", "url": "https://github.com/apache/beam/pull/11720#discussion_r426020019", "createdAt": "2020-05-15T20:01:45Z", "author": {"login": "robertwb"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "diffHunk": "@@ -206,18 +205,16 @@ public static void main(\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n+              .maximumSize(1000)\n+              .expireAfterAccess(10, TimeUnit.MINUTES)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMzM1OQ=="}, "originalCommit": {"oid": "cb83821235b0dd7a248a406e8e6b369822da8b2f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3774, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}