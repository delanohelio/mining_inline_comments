{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjEzNDgx", "number": 11883, "title": "[BEAM-9679] Add CombineFn to Core Transforms", "bodyText": "This pull requests adds a Combine/CombineFn lesson to the Go SDK katas.  I would like to request the following reviewers:\n(R: @lostluck )\n(R: @henryken )\nIf accepted, please wait until the Stepik course is updated before finally merging this PR.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-01T21:04:03Z", "url": "https://github.com/apache/beam/pull/11883", "merged": true, "mergeCommit": {"oid": "1594c5a470eb96114493b10a80bddae6d17d8685"}, "closed": true, "closedAt": "2020-06-05T15:59:39Z", "author": {"login": "damondouglas"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnGqGygH2gAyNDI2MjEzNDgxOjIzNzk1ODUzMjc3YThmM2Q1MmQ2NzMwNzczMzY2MjJhNjdjODI0NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoLJg4AH2gAyNDI2MjEzNDgxOjhmYmZjNDg0ZjZkNzMzNmI3NGU3MjEyODZlZTQ1NDZkYTBlNjAyZjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "23795853277a8f3d52d673077336622a67c8246c", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/23795853277a8f3d52d673077336622a67c8246c", "committedDate": "2020-06-01T20:54:33Z", "message": "Add CombineFn to Core Transforms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyODcxMDcw", "url": "https://github.com/apache/beam/pull/11883#pullrequestreview-422871070", "createdAt": "2020-06-02T16:49:51Z", "commit": {"oid": "23795853277a8f3d52d673077336622a67c8246c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MTA1ODM1", "url": "https://github.com/apache/beam/pull/11883#pullrequestreview-424105835", "createdAt": "2020-06-04T05:09:18Z", "commit": {"oid": "23795853277a8f3d52d673077336622a67c8246c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNTowOToxOVrOGe2AsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNToxODo1OFrOGe2Kag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk5NTM3Ng==", "bodyText": "Why should the input be casted to float?\nI think since the inputs are all int, the Sum can be int?", "url": "https://github.com/apache/beam/pull/11883#discussion_r434995376", "createdAt": "2020-06-04T05:09:19Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/CombineFn/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,55 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\treturn beam.Combine(s, &averageFn{}, input)\n+}\n+\n+type averageAccum struct {\n+\tCount int64\n+\tSum float64\n+}\n+\n+type averageFn struct{}\n+\n+func (c *averageFn) CreateAccumulator() averageAccum {\n+\treturn averageAccum{}\n+}\n+\n+func (c *averageFn) AddInput(accum averageAccum, input int) averageAccum {\n+\taccum.Count++\n+\taccum.Sum += float64(input)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23795853277a8f3d52d673077336622a67c8246c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk5NzQ2OA==", "bodyText": "Is there any good documentation that outlines what function names that need to be implemented?", "url": "https://github.com/apache/beam/pull/11883#discussion_r434997468", "createdAt": "2020-06-04T05:17:35Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/CombineFn/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,55 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\treturn beam.Combine(s, &averageFn{}, input)\n+}\n+\n+type averageAccum struct {\n+\tCount int64\n+\tSum float64\n+}\n+\n+type averageFn struct{}\n+\n+func (c *averageFn) CreateAccumulator() averageAccum {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23795853277a8f3d52d673077336622a67c8246c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk5Nzg2Ng==", "bodyText": "I would suggest this to be part of answer placeholder as well.", "url": "https://github.com/apache/beam/pull/11883#discussion_r434997866", "createdAt": "2020-06-04T05:18:58Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/CombineFn/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,55 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+func ApplyTransform(s beam.Scope, input beam.PCollection) beam.PCollection {\n+\treturn beam.Combine(s, &averageFn{}, input)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23795853277a8f3d52d673077336622a67c8246c"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c35366781ccf46006e16ba54e74e498e3d8ef982", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/c35366781ccf46006e16ba54e74e498e3d8ef982", "committedDate": "2020-06-04T14:34:06Z", "message": "Change accumulator Sum to int"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NTI4OTA4", "url": "https://github.com/apache/beam/pull/11883#pullrequestreview-424528908", "createdAt": "2020-06-04T14:48:42Z", "commit": {"oid": "c35366781ccf46006e16ba54e74e498e3d8ef982"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDo0ODo0M1rOGfJseQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDo0ODo0M1rOGfJseQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMxNzg4MQ==", "bodyText": "Actually the ExtractOutput type was correct to use float since average can be non-int.", "url": "https://github.com/apache/beam/pull/11883#discussion_r435317881", "createdAt": "2020-06-04T14:48:43Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/Combine/CombineFn/pkg/task/task.go", "diffHunk": "@@ -47,9 +47,9 @@ func (c *averageFn) MergeAccumulators(accumA, accumB averageAccum) averageAccum\n \t}\n }\n \n-func (c *averageFn) ExtractOutput(accum averageAccum) float64 {\n+func (c *averageFn) ExtractOutput(accum averageAccum) int {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35366781ccf46006e16ba54e74e498e3d8ef982"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f25adf22e5b1d9cada8d67670355db72e5168b0", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/7f25adf22e5b1d9cada8d67670355db72e5168b0", "committedDate": "2020-06-04T17:16:38Z", "message": "ExtractOutput as float64"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTcyNzA5", "url": "https://github.com/apache/beam/pull/11883#pullrequestreview-424972709", "createdAt": "2020-06-05T03:26:32Z", "commit": {"oid": "7f25adf22e5b1d9cada8d67670355db72e5168b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fbfc484f6d7336b74e721286ee4546da0e602f2", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/8fbfc484f6d7336b74e721286ee4546da0e602f2", "committedDate": "2020-06-05T04:42:24Z", "message": "Update stepik course"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4502, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}