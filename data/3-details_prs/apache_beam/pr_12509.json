{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzI0NTI1", "number": 12509, "title": "[BEAM-9898][BEAM-9899] SnowflakeIO.Write for cross-language with python wrapper and integration test", "bodyText": "This PR adds:\n\nExternal transform registrar for SnowflakeIO.Write for cross-language usage\nPython wrapper for 1)\nIntegration test for SnowflakeIO python wrappers.\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-10T07:15:40Z", "url": "https://github.com/apache/beam/pull/12509", "merged": true, "mergeCommit": {"oid": "78d7636cac9234dbcc7145bb0330275c557c0010"}, "closed": true, "closedAt": "2020-08-28T07:45:25Z", "author": {"login": "piotr-szuberski"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8jIykgH2gAyNDY1MzI0NTI1OjM3ZmNhNWFlNzg0ZWE0ZWIwYzAyN2I5OTIxMTMzMjY3OGZkZDE1YTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdC0xvwgFqTQ3NjE1NjA1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37fca5ae784ea4eb0c027b99211332678fdd15a7", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/37fca5ae784ea4eb0c027b99211332678fdd15a7", "committedDate": "2020-08-07T11:57:49Z", "message": "[BEAM-9898] Modify Snowflake read cross-language code before adding write, add role and warehouse param to the configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f96969c15b000ea7173ac68414a8000c285a01", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d6f96969c15b000ea7173ac68414a8000c285a01", "committedDate": "2020-08-07T12:03:43Z", "message": "[BEAM-9898] Add SnowflakeIO.Write external transform registrar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4159ebefd50858fd48bb3186bdd649f164291607", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4159ebefd50858fd48bb3186bdd649f164291607", "committedDate": "2020-08-07T12:04:36Z", "message": "[BEAM-9898] Add python wrapper to Java's SnowflakeIO.Write"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1939e7146249c2b993f36a8cfb5467fd32dc2905", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1939e7146249c2b993f36a8cfb5467fd32dc2905", "committedDate": "2020-08-07T12:04:41Z", "message": "[BEAM-9898] Move snowflake.py to apache_beam/io"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a42f36235f1e624e9d8fad4374a9d671c21b53e6", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a42f36235f1e624e9d8fad4374a9d671c21b53e6", "committedDate": "2020-08-10T07:11:51Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}, "afterCommit": {"oid": "9b124cb8a4abb68e0aee860686ef7ea8a50ec79a", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/9b124cb8a4abb68e0aee860686ef7ea8a50ec79a", "committedDate": "2020-08-10T07:22:45Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b124cb8a4abb68e0aee860686ef7ea8a50ec79a", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/9b124cb8a4abb68e0aee860686ef7ea8a50ec79a", "committedDate": "2020-08-10T07:22:45Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}, "afterCommit": {"oid": "962d9a6a04a9941bb4fd3e5a60a035ac070220cc", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/962d9a6a04a9941bb4fd3e5a60a035ac070220cc", "committedDate": "2020-08-10T10:57:09Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e2591a5e26cafd63af7c99f6a24aaa07285d6f3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4e2591a5e26cafd63af7c99f6a24aaa07285d6f3", "committedDate": "2020-08-10T11:08:33Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "962d9a6a04a9941bb4fd3e5a60a035ac070220cc", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/962d9a6a04a9941bb4fd3e5a60a035ac070220cc", "committedDate": "2020-08-10T10:57:09Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}, "afterCommit": {"oid": "4e2591a5e26cafd63af7c99f6a24aaa07285d6f3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4e2591a5e26cafd63af7c99f6a24aaa07285d6f3", "committedDate": "2020-08-10T11:08:33Z", "message": "[BEAM-9899] Add python cross-language integration test for SnowflakeIO transforms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "661f06263e1b8822770c3b8f734dfebf172282c4", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/661f06263e1b8822770c3b8f734dfebf172282c4", "committedDate": "2020-08-10T15:09:14Z", "message": "Fix sphinx docs lint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4069e20cec17c08ed8491ff54fd0c8f30c02fe55", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4069e20cec17c08ed8491ff54fd0c8f30c02fe55", "committedDate": "2020-08-10T15:03:28Z", "message": "Fix sphinx docs lint"}, "afterCommit": {"oid": "661f06263e1b8822770c3b8f734dfebf172282c4", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/661f06263e1b8822770c3b8f734dfebf172282c4", "committedDate": "2020-08-10T15:09:14Z", "message": "Fix sphinx docs lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cd2dd8217425e1ee9e11bc69702fc4960d69a97", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/2cd2dd8217425e1ee9e11bc69702fc4960d69a97", "committedDate": "2020-08-10T15:10:58Z", "message": "Change VerifyIfContains to VerifyParam"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTUzOTE5", "url": "https://github.com/apache/beam/pull/12509#pullrequestreview-468953919", "createdAt": "2020-08-18T02:45:11Z", "commit": {"oid": "2cd2dd8217425e1ee9e11bc69702fc4960d69a97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjo0NToxMVrOHCBWEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjo0NToxMVrOHCBWEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg4MTIzNQ==", "bodyText": "Should we verify the output written here ?", "url": "https://github.com/apache/beam/pull/12509#discussion_r471881235", "createdAt": "2020-08-18T02:45:11Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/external/xlang_snowflakeio_it_test.py", "diffHunk": "@@ -0,0 +1,269 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Integration test for cross-language snowflake io operations.\n+\n+Example run:\n+\n+python setup.py nosetests --tests=apache_beam.io.external.snowflake_test \\\n+--test-pipeline-options=\"\n+  --server_name=<SNOWFLAKE_SERVER_NAME>\n+  --username=<SNOWFLAKE_USERNAME>\n+  --password=<SNOWFLAKE_PASSWORD>\n+  --private_key_path=<PATH_TO_PRIVATE_KEY>\n+  --private_key_passphrase=<PASSWORD_TO_PRIVATE_KEY>\n+  --o_auth_token=<TOKEN>\n+  --staging_bucket_name=<GCP_BUCKET_PATH>\n+  --storage_integration_name=<SNOWFLAKE_STORAGE_INTEGRATION_NAME>\n+  --database=<DATABASE>\n+  --schema=<SCHEMA>\n+  --role=<ROLE>\n+  --warehouse=<WAREHOUSE>\n+  --table=<TABLE_NAME>\n+  --runner=FlinkRunner\"\n+\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+import argparse\n+import binascii\n+import logging\n+import unittest\n+from typing import ByteString\n+from typing import NamedTuple\n+\n+import apache_beam as beam\n+from apache_beam import coders\n+from apache_beam.io.snowflake import CreateDisposition\n+from apache_beam.io.snowflake import ReadFromSnowflake\n+from apache_beam.io.snowflake import WriteDisposition\n+from apache_beam.io.snowflake import WriteToSnowflake\n+from apache_beam.options.pipeline_options import PipelineOptions\n+from apache_beam.testing.test_pipeline import TestPipeline\n+from apache_beam.testing.util import assert_that\n+from apache_beam.testing.util import equal_to\n+\n+# pylint: disable=wrong-import-order, wrong-import-position, ungrouped-imports\n+try:\n+  from apache_beam.io.gcp.gcsfilesystem import GCSFileSystem\n+except ImportError:\n+  GCSFileSystem = None\n+# pylint: enable=wrong-import-order, wrong-import-position, ungrouped-imports\n+\n+SCHEMA_STRING = \"\"\"\n+{\"schema\":[\n+    {\"dataType\":{\"type\":\"integer\",\"precision\":38,\"scale\":0},\"name\":\"number_column\",\"nullable\":false},\n+    {\"dataType\":{\"type\":\"boolean\"},\"name\":\"boolean_column\",\"nullable\":false},\n+    {\"dataType\":{\"type\":\"binary\",\"size\":100},\"name\":\"bytes_column\",\"nullable\":true}\n+]}\n+\"\"\"\n+\n+TestRow = NamedTuple(\n+    'TestRow',\n+    [\n+        ('number_column', int),\n+        ('boolean_column', bool),\n+        ('bytes_column', ByteString),\n+    ])\n+\n+coders.registry.register_coder(TestRow, coders.RowCoder)\n+\n+NUM_RECORDS = 100\n+\n+\n+@unittest.skipIf(GCSFileSystem is None, 'GCP dependencies are not installed')\n+@unittest.skipIf(\n+    TestPipeline().get_option('server_name') is None,\n+    'Snowflake IT test requires external configuration to be run.')\n+class SnowflakeTest(unittest.TestCase):\n+  def test_snowflake_write_read(self):\n+    self.run_write()\n+    self.run_read()\n+\n+  def run_write(self):\n+    def user_data_mapper(test_row):\n+      return [\n+          str(test_row.number_column).encode('utf-8'),\n+          str(test_row.boolean_column).encode('utf-8'),\n+          binascii.hexlify(test_row.bytes_column),\n+      ]\n+\n+    with TestPipeline(options=PipelineOptions(self.pipeline_args)) as p:\n+      p.not_use_test_runner_api = True\n+      _ = (\n+          p\n+          | 'Impulse' >> beam.Impulse()\n+          | 'Generate' >> beam.FlatMap(lambda x: range(NUM_RECORDS))  # pylint: disable=range-builtin-not-iterating\n+          | 'Map to TestRow' >> beam.Map(\n+              lambda num: TestRow(\n+                  num, num % 2 == 0, b\"test\" + str(num).encode()))\n+          | WriteToSnowflake(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cd2dd8217425e1ee9e11bc69702fc4960d69a97"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MTU2MDU0", "url": "https://github.com/apache/beam/pull/12509#pullrequestreview-476156054", "createdAt": "2020-08-26T23:54:29Z", "commit": {"oid": "2cd2dd8217425e1ee9e11bc69702fc4960d69a97"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4969, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}