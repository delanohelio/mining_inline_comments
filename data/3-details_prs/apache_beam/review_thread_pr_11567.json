{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNjMxNjM0", "number": 11567, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjo0OTo1OVrOD6oP3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMjowNFrOD6od2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODAzNDIxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjo0OTo1OVrOGSkaXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjoxNzowNlrOGUDwCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA==", "bodyText": "I am not sure if I correctly understand what measurement means. Is it name for metric such as runtime or name of place where metric will be stored as \"table\" or \"column\"?", "url": "https://github.com/apache/beam/pull/11567#discussion_r422124124", "createdAt": "2020-05-08T12:49:59Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1OTU5NA==", "bodyText": "It's a name of place where metric will be stored. It's like \"table\" in other databases.", "url": "https://github.com/apache/beam/pull/11567#discussion_r422159594", "createdAt": "2020-05-08T14:00:08Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwOTc4Ng==", "bodyText": "Maybe it would be good to explain that in help for people who aren't familiar with influx? (like myself :D)", "url": "https://github.com/apache/beam/pull/11567#discussion_r423009786", "createdAt": "2020-05-11T12:40:29Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2Nzg2NQ==", "bodyText": "I'll try to explain that briefly. I don't want to rewrite whole InfluxDB documentation in this place.", "url": "https://github.com/apache/beam/pull/11567#discussion_r423067865", "createdAt": "2020-05-11T14:10:46Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMTc4MQ==", "bodyText": "Sure, I think it can be something like An InfluxDB measurement (destination field)..., WDYT? Can we call it destination field?", "url": "https://github.com/apache/beam/pull/11567#discussion_r423511781", "createdAt": "2020-05-12T07:14:40Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU5Nzc5Mw==", "bodyText": "Not sure if field is an appropriate term for a collection of data.\nWhat do you think about this? This is a version from the latest commit, I'm not sure if you saw it.\nhelp='An InfluxDB measurement where metrics should be published to. '\n        'Measurement can be thought of as a SQL table. If empty, reporting to '\n        'InfluxDB will be disabled.')", "url": "https://github.com/apache/beam/pull/11567#discussion_r423597793", "createdAt": "2020-05-12T09:34:10Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4NjE1Mg==", "bodyText": "Looks great! Thanks a lot :)", "url": "https://github.com/apache/beam/pull/11567#discussion_r423686152", "createdAt": "2020-05-12T12:17:06Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -45,6 +47,19 @@ def _add_argparse_args(cls, parser):\n         '--metrics_table',\n         help='A BigQuery table where metrics should be '\n         'written.')\n+    parser.add_argument(\n+        '--influx_measurement',\n+        help='An InfluxDB measurement where metrics should be published to. If '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNDEyNA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODA0MDMzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjo1MjowNVrOGSkd-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoxMjo1NFrOGT5C_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNTA0OA==", "bodyText": "Is it something we could enable to provide via PipelineOptions as well?", "url": "https://github.com/apache/beam/pull/11567#discussion_r422125048", "createdAt": "2020-05-08T12:52:05Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -67,22 +82,30 @@ def _str_to_boolean(value):\n \n \n class LoadTest(object):\n+  \"\"\"Base class for all integration and performance tests which export\n+  metrics to external databases: BigQuery or/and InfluxDB.\n+\n+  Refer to :class:`~apache_beam.testing.load_tests.LoadTestOptions` for more\n+  information on the required pipeline options.\n+\n+  If using InfluxDB with Basic HTTP authentication enabled, provide the\n+  following environment options: `INFLUXDB_USER` and `INFLUXDB_USER_PASSWORD`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2MzUzMw==", "bodyText": "If we did, we could put vulnerable data (like password) at risk by exposing them in logs. Apart from that, I think the only way of using Jenkins credentials are environment variables", "url": "https://github.com/apache/beam/pull/11567#discussion_r422163533", "createdAt": "2020-05-08T14:07:19Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -67,22 +82,30 @@ def _str_to_boolean(value):\n \n \n class LoadTest(object):\n+  \"\"\"Base class for all integration and performance tests which export\n+  metrics to external databases: BigQuery or/and InfluxDB.\n+\n+  Refer to :class:`~apache_beam.testing.load_tests.LoadTestOptions` for more\n+  information on the required pipeline options.\n+\n+  If using InfluxDB with Basic HTTP authentication enabled, provide the\n+  following environment options: `INFLUXDB_USER` and `INFLUXDB_USER_PASSWORD`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNTA0OA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMDc4MA==", "bodyText": "I see, makes sense.", "url": "https://github.com/apache/beam/pull/11567#discussion_r423510780", "createdAt": "2020-05-12T07:12:54Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -67,22 +82,30 @@ def _str_to_boolean(value):\n \n \n class LoadTest(object):\n+  \"\"\"Base class for all integration and performance tests which export\n+  metrics to external databases: BigQuery or/and InfluxDB.\n+\n+  Refer to :class:`~apache_beam.testing.load_tests.LoadTestOptions` for more\n+  information on the required pipeline options.\n+\n+  If using InfluxDB with Basic HTTP authentication enabled, provide the\n+  following environment options: `INFLUXDB_USER` and `INFLUXDB_USER_PASSWORD`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNTA0OA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODA1OTIxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjo1ODoyMVrOGSkpSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo0MDo1NlrOGTae6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNzk0NA==", "bodyText": "Maybe we should remove this if since we have now two targets where we publish metrics?", "url": "https://github.com/apache/beam/pull/11567#discussion_r422127944", "createdAt": "2020-05-08T12:58:21Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -67,22 +82,30 @@ def _str_to_boolean(value):\n \n \n class LoadTest(object):\n+  \"\"\"Base class for all integration and performance tests which export\n+  metrics to external databases: BigQuery or/and InfluxDB.\n+\n+  Refer to :class:`~apache_beam.testing.load_tests.LoadTestOptions` for more\n+  information on the required pipeline options.\n+\n+  If using InfluxDB with Basic HTTP authentication enabled, provide the\n+  following environment options: `INFLUXDB_USER` and `INFLUXDB_USER_PASSWORD`.\n+  \"\"\"\n   def __init__(self):\n     # Be sure to set blocking to false for timeout_ms to work properly\n     self.pipeline = TestPipeline(is_integration_test=True, blocking=False)\n     assert not self.pipeline.blocking\n \n-    load_test_options = self.pipeline.get_pipeline_options().view_as(\n-        LoadTestOptions)\n-    self.timeout_ms = load_test_options.timeout_ms\n-    self.input_options = load_test_options.input_options\n-    self.metrics_namespace = load_test_options.metrics_table or 'default'\n-    publish_to_bq = load_test_options.publish_to_big_query\n+    options = self.pipeline.get_pipeline_options().view_as(LoadTestOptions)\n+    self.timeout_ms = options.timeout_ms\n+    self.input_options = options.input_options\n+    self.metrics_namespace = options.metrics_table or 'default'\n+    publish_to_bq = options.publish_to_big_query\n     if publish_to_bq is None:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2Nzg1NQ==", "bodyText": "Our goal is to keep sending metrics to BigQuery for some time. think it'd good to keep the interface intact until we eventually abandon bq.", "url": "https://github.com/apache/beam/pull/11567#discussion_r422167855", "createdAt": "2020-05-08T14:15:11Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -67,22 +82,30 @@ def _str_to_boolean(value):\n \n \n class LoadTest(object):\n+  \"\"\"Base class for all integration and performance tests which export\n+  metrics to external databases: BigQuery or/and InfluxDB.\n+\n+  Refer to :class:`~apache_beam.testing.load_tests.LoadTestOptions` for more\n+  information on the required pipeline options.\n+\n+  If using InfluxDB with Basic HTTP authentication enabled, provide the\n+  following environment options: `INFLUXDB_USER` and `INFLUXDB_USER_PASSWORD`.\n+  \"\"\"\n   def __init__(self):\n     # Be sure to set blocking to false for timeout_ms to work properly\n     self.pipeline = TestPipeline(is_integration_test=True, blocking=False)\n     assert not self.pipeline.blocking\n \n-    load_test_options = self.pipeline.get_pipeline_options().view_as(\n-        LoadTestOptions)\n-    self.timeout_ms = load_test_options.timeout_ms\n-    self.input_options = load_test_options.input_options\n-    self.metrics_namespace = load_test_options.metrics_table or 'default'\n-    publish_to_bq = load_test_options.publish_to_big_query\n+    options = self.pipeline.get_pipeline_options().view_as(LoadTestOptions)\n+    self.timeout_ms = options.timeout_ms\n+    self.input_options = options.input_options\n+    self.metrics_namespace = options.metrics_table or 'default'\n+    publish_to_bq = options.publish_to_big_query\n     if publish_to_bq is None:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNzk0NA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxMDAyNQ==", "bodyText": "Sure, then ok. Less changes.", "url": "https://github.com/apache/beam/pull/11567#discussion_r423010025", "createdAt": "2020-05-11T12:40:56Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test.py", "diffHunk": "@@ -67,22 +82,30 @@ def _str_to_boolean(value):\n \n \n class LoadTest(object):\n+  \"\"\"Base class for all integration and performance tests which export\n+  metrics to external databases: BigQuery or/and InfluxDB.\n+\n+  Refer to :class:`~apache_beam.testing.load_tests.LoadTestOptions` for more\n+  information on the required pipeline options.\n+\n+  If using InfluxDB with Basic HTTP authentication enabled, provide the\n+  following environment options: `INFLUXDB_USER` and `INFLUXDB_USER_PASSWORD`.\n+  \"\"\"\n   def __init__(self):\n     # Be sure to set blocking to false for timeout_ms to work properly\n     self.pipeline = TestPipeline(is_integration_test=True, blocking=False)\n     assert not self.pipeline.blocking\n \n-    load_test_options = self.pipeline.get_pipeline_options().view_as(\n-        LoadTestOptions)\n-    self.timeout_ms = load_test_options.timeout_ms\n-    self.input_options = load_test_options.input_options\n-    self.metrics_namespace = load_test_options.metrics_table or 'default'\n-    publish_to_bq = load_test_options.publish_to_big_query\n+    options = self.pipeline.get_pipeline_options().view_as(LoadTestOptions)\n+    self.timeout_ms = options.timeout_ms\n+    self.input_options = options.input_options\n+    self.metrics_namespace = options.metrics_table or 'default'\n+    publish_to_bq = options.publish_to_big_query\n     if publish_to_bq is None:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNzk0NA=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODA2NDU5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMDoyNVrOGSksnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoxMTo0NVrOGT5AzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyODc5OQ==", "bodyText": "Do you think it would be good to have consistent parameter naming for influx and bq? Or we plan to abandon bq in future?", "url": "https://github.com/apache/beam/pull/11567#discussion_r422128799", "createdAt": "2020-05-08T13:00:25Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -167,14 +175,15 @@ class MetricsReader(object):\n   A :class:`MetricsReader` retrieves metrics from pipeline result,\n   prepares it for publishers and setup publishers.\n   \"\"\"\n-  publishers = []  # type: List[ConsoleMetricsPublisher]\n+  publishers = []  # type: List[Any]\n \n   def __init__(\n       self,\n       project_name=None,\n       bq_table=None,\n       bq_dataset=None,\n       publish_to_bq=False,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NDE4Nw==", "bodyText": "It's likely, but there's no decision yet. What influx parameters do you think can be improved?", "url": "https://github.com/apache/beam/pull/11567#discussion_r422174187", "createdAt": "2020-05-08T14:26:15Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -167,14 +175,15 @@ class MetricsReader(object):\n   A :class:`MetricsReader` retrieves metrics from pipeline result,\n   prepares it for publishers and setup publishers.\n   \"\"\"\n-  publishers = []  # type: List[ConsoleMetricsPublisher]\n+  publishers = []  # type: List[Any]\n \n   def __init__(\n       self,\n       project_name=None,\n       bq_table=None,\n       bq_dataset=None,\n       publish_to_bq=False,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyODc5OQ=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxMjQ2NA==", "bodyText": "Well, I can see that inconsitent is publish_to_bq vs influxdb_options, but if we plan to have only influxdb_options then it's ok. Possibility I see here is to have something more generic like metrics_options or metrics_storage_options. Then if changes like this will happen in the future, there will be less to change.\nThe other possibility is changing it in a way it will be changed in Java SDK as well.", "url": "https://github.com/apache/beam/pull/11567#discussion_r423012464", "createdAt": "2020-05-11T12:45:16Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -167,14 +175,15 @@ class MetricsReader(object):\n   A :class:`MetricsReader` retrieves metrics from pipeline result,\n   prepares it for publishers and setup publishers.\n   \"\"\"\n-  publishers = []  # type: List[ConsoleMetricsPublisher]\n+  publishers = []  # type: List[Any]\n \n   def __init__(\n       self,\n       project_name=None,\n       bq_table=None,\n       bq_dataset=None,\n       publish_to_bq=False,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyODc5OQ=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA4MDE3Ng==", "bodyText": "Let's postpone any changes until we decide what to do about BQ. If we decide to keep BQ, we'll think about improving parameter naming so that InfluxDB and BQ parameters could coexist well enough (the same applies to Java SDK). WDYT?", "url": "https://github.com/apache/beam/pull/11567#discussion_r423080176", "createdAt": "2020-05-11T14:27:56Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -167,14 +175,15 @@ class MetricsReader(object):\n   A :class:`MetricsReader` retrieves metrics from pipeline result,\n   prepares it for publishers and setup publishers.\n   \"\"\"\n-  publishers = []  # type: List[ConsoleMetricsPublisher]\n+  publishers = []  # type: List[Any]\n \n   def __init__(\n       self,\n       project_name=None,\n       bq_table=None,\n       bq_dataset=None,\n       publish_to_bq=False,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyODc5OQ=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMDIyMQ==", "bodyText": "Sounds good \ud83d\udc4d", "url": "https://github.com/apache/beam/pull/11567#discussion_r423510221", "createdAt": "2020-05-12T07:11:45Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -167,14 +175,15 @@ class MetricsReader(object):\n   A :class:`MetricsReader` retrieves metrics from pipeline result,\n   prepares it for publishers and setup publishers.\n   \"\"\"\n-  publishers = []  # type: List[ConsoleMetricsPublisher]\n+  publishers = []  # type: List[Any]\n \n   def __init__(\n       self,\n       project_name=None,\n       bq_table=None,\n       bq_dataset=None,\n       publish_to_bq=False,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyODc5OQ=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODA3MDAyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMjowNFrOGSkvvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzozMzowNFrOGTcbJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTU5Ng==", "bodyText": "Why do we need this default value here? Isn't it provided from pipeline options default value?", "url": "https://github.com/apache/beam/pull/11567#discussion_r422129596", "createdAt": "2020-05-08T13:02:04Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -404,6 +419,77 @@ def save(self, results):\n     return self._client.insert_rows(self._bq_table, results)\n \n \n+class InfluxDBMetricsPublisherOptions(object):\n+  def __init__(\n+      self,\n+      measurement,  # type: str\n+      db_name,  # type: str\n+      hostname='http://localhost:8086',  # type: str", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MjMyMg==", "bodyText": "There are some minor chances that someone would use InfluxDBPublisher in their code without casting pipeline options to LoadTestOptions (view_as(...)). But beside that, there's no particular reason", "url": "https://github.com/apache/beam/pull/11567#discussion_r422172322", "createdAt": "2020-05-08T14:23:09Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -404,6 +419,77 @@ def save(self, results):\n     return self._client.insert_rows(self._bq_table, results)\n \n \n+class InfluxDBMetricsPublisherOptions(object):\n+  def __init__(\n+      self,\n+      measurement,  # type: str\n+      db_name,  # type: str\n+      hostname='http://localhost:8086',  # type: str", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTU5Ng=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNDI1MA==", "bodyText": "Then maybe we should have param without default value? I can imagine case when someone doesn't know why metrics tries to be saved to this host without checking this code deeper?", "url": "https://github.com/apache/beam/pull/11567#discussion_r423014250", "createdAt": "2020-05-11T12:48:25Z", "author": {"login": "kkucharc"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -404,6 +419,77 @@ def save(self, results):\n     return self._client.insert_rows(self._bq_table, results)\n \n \n+class InfluxDBMetricsPublisherOptions(object):\n+  def __init__(\n+      self,\n+      measurement,  # type: str\n+      db_name,  # type: str\n+      hostname='http://localhost:8086',  # type: str", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTU5Ng=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA0MTgyOA==", "bodyText": "Ok then. I will remove the default value.", "url": "https://github.com/apache/beam/pull/11567#discussion_r423041828", "createdAt": "2020-05-11T13:33:04Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/load_test_metrics_utils.py", "diffHunk": "@@ -404,6 +419,77 @@ def save(self, results):\n     return self._client.insert_rows(self._bq_table, results)\n \n \n+class InfluxDBMetricsPublisherOptions(object):\n+  def __init__(\n+      self,\n+      measurement,  # type: str\n+      db_name,  # type: str\n+      hostname='http://localhost:8086',  # type: str", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTU5Ng=="}, "originalCommit": {"oid": "52c2553b7547fb095b22951fc0be9811f6013938"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1205, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}