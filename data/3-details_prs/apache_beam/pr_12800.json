{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMDc1NTYz", "number": 12800, "title": "[BEAM-10603] Add the ib.recordings API", "bodyText": "This adds an API that allows the user to introspect into the recordings for a given pipeline.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-09T19:19:50Z", "url": "https://github.com/apache/beam/pull/12800", "merged": true, "mergeCommit": {"oid": "cb6d22ea5a6587e479505af3e368fba7df9200c1"}, "closed": true, "closedAt": "2020-09-23T18:08:43Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJLV15ABqjM3Njk1NDY5MjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLgOxdABqjM3OTU1MDI3OTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00d1520abc8a13d5634329aede4c4d06b994c5a3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/00d1520abc8a13d5634329aede4c4d06b994c5a3", "committedDate": "2020-09-09T19:15:32Z", "message": "Add the ib.recordings API\n\nChange-Id: Iadbe2821256b8a600e9db82805e9362438336140"}, "afterCommit": {"oid": "3dc8f5931cea1de049b3d52cb5460bbece8a24c5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3dc8f5931cea1de049b3d52cb5460bbece8a24c5", "committedDate": "2020-09-15T17:35:05Z", "message": "Add ib.recordings API\n\nChange-Id: I201d4c02abd3ada2e29576822821508fcdd214e6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dc8f5931cea1de049b3d52cb5460bbece8a24c5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3dc8f5931cea1de049b3d52cb5460bbece8a24c5", "committedDate": "2020-09-15T17:35:05Z", "message": "Add ib.recordings API\n\nChange-Id: I201d4c02abd3ada2e29576822821508fcdd214e6"}, "afterCommit": {"oid": "f854bf935e913ad42a2bbdaec8210e6e579dc974", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f854bf935e913ad42a2bbdaec8210e6e579dc974", "committedDate": "2020-09-21T17:23:17Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f854bf935e913ad42a2bbdaec8210e6e579dc974", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f854bf935e913ad42a2bbdaec8210e6e579dc974", "committedDate": "2020-09-21T17:23:17Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}, "afterCommit": {"oid": "8a85aeb88ed2a05cc4f2b41ff176ca4726cc98b3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/8a85aeb88ed2a05cc4f2b41ff176ca4726cc98b3", "committedDate": "2020-09-21T18:48:56Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a85aeb88ed2a05cc4f2b41ff176ca4726cc98b3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/8a85aeb88ed2a05cc4f2b41ff176ca4726cc98b3", "committedDate": "2020-09-21T18:48:56Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}, "afterCommit": {"oid": "1518506c655531eb10be97dfac50775ea0229d3c", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1518506c655531eb10be97dfac50775ea0229d3c", "committedDate": "2020-09-21T21:01:12Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "committedDate": "2020-09-22T18:40:38Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1518506c655531eb10be97dfac50775ea0229d3c", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1518506c655531eb10be97dfac50775ea0229d3c", "committedDate": "2020-09-21T21:01:12Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}, "afterCommit": {"oid": "a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "committedDate": "2020-09-22T18:40:38Z", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51244427855d5c9436784b1e82bce97310f752f8", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/51244427855d5c9436784b1e82bce97310f752f8", "committedDate": "2020-09-22T20:48:12Z", "message": "Fix macos IB recordings test\n\nChange-Id: I560904c8d0324250212a800e1419adebc53279ce"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzODgzMzc2", "url": "https://github.com/apache/beam/pull/12800#pullrequestreview-493883376", "createdAt": "2020-09-22T22:14:09Z", "commit": {"oid": "51244427855d5c9436784b1e82bce97310f752f8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjoxNDowOVrOHWONfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjoyMTo0M1rOHWOYvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2MzU0OQ==", "bodyText": "it should also be removed, right? (del self._recording_managers[id] or someting like that?)", "url": "https://github.com/apache/beam/pull/12800#discussion_r493063549", "createdAt": "2020-09-22T22:14:09Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_environment.py", "diffHunk": "@@ -348,6 +352,48 @@ def evict_cache_manager(self, pipeline=None):\n       return self._cache_managers.pop(str(id(pipeline)), None)\n     self._cache_managers.clear()\n \n+  def set_recording_manager(self, recording_manager, pipeline):\n+    \"\"\"Sets the recording manager for the given pipeline.\"\"\"\n+    if self.get_recording_manager(pipeline) is recording_manager:\n+      # NOOP if setting to the same recording_manager.\n+      return\n+    self._recording_managers[str(id(pipeline))] = recording_manager\n+\n+  def get_recording_manager(self, pipeline, create_if_absent=False):\n+    \"\"\"Gets the recording manager for the given pipeline.\"\"\"\n+    recording_manager = self._recording_managers.get(str(id(pipeline)), None)\n+    if not recording_manager and create_if_absent:\n+      recording_manager = RecordingManager(pipeline)\n+      self._recording_managers[str(id(pipeline))] = recording_manager\n+    return recording_manager\n+\n+  def evict_recording_manager(self, pipeline):\n+    \"\"\"Evicts the recording manager for the given pipeline.\n+\n+    This stops the background caching job and clears the cache.\n+    Noop if the pipeline is absent from the environment. If no\n+    pipeline is specified, evicts for all pipelines.\n+    \"\"\"\n+    if not pipeline:\n+      for rm in self._recording_managers.values():\n+        rm.cancel()\n+        rm.clear()\n+      self._recording_managers = {}\n+      return\n+\n+    recording_manager = self.get_recording_manager(pipeline)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51244427855d5c9436784b1e82bce97310f752f8"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NjQyOA==", "bodyText": "this function looks to be somewhat inefficient. WDYT? No need to change it if you don't think it will be heavily used / not too many elements will be watched (iterated by the function), but WDYT?", "url": "https://github.com/apache/beam/pull/12800#discussion_r493066428", "createdAt": "2020-09-22T22:21:43Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -199,6 +199,93 @@ def display_timezone(self, value):\n     self._display_timezone = value\n \n \n+class Recordings():\n+  \"\"\"An introspection interface for recordings for pipelines.\n+\n+  When a user materializes a PCollection onto disk (eg. ib.show) for a streaming\n+  pipeline, a background recording job is started. This job pulls data from all\n+  defined unbounded sources for that PCollection's pipeline. The following\n+  methods allow for introspection into that background recording job.\n+  \"\"\"\n+  def describe(self, pipeline=None):\n+    # type: (Optional[beam.Pipeline]) -> dict[str, Any]\n+\n+    \"\"\"Returns a description of all the recordings for the given pipeline.\n+\n+    If no pipeline is given then this returns a dictionary of descriptions for\n+    all pipelines.\n+    \"\"\"\n+\n+    watching = ie.current_env().watching()\n+    description = ie.current_env().describe_all_recordings()\n+\n+    # In the case that the user has multiple pipelines, this correlates the\n+    # pipeline object to the variable name.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51244427855d5c9436784b1e82bce97310f752f8"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09db072c9da2471dc7a61f7a8701da4f0001838e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/09db072c9da2471dc7a61f7a8701da4f0001838e", "committedDate": "2020-09-22T22:42:00Z", "message": "Delete RM reference from environment when evicted\n\nChange-Id: Id80ae8bf42c6fb62e3e78a96bfa5fda3e90e6dd8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5bf0647742e6697b2c4b691cd8e55936cb37c72", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f5bf0647742e6697b2c4b691cd8e55936cb37c72", "committedDate": "2020-09-22T23:03:14Z", "message": "Move pipeline_var into RM constructor\n\nChange-Id: I9d919dbd81649f7fc4c54b315272ed6115416719"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96c99cda21c6da3fc21ecfaf478463602bb3d05f", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/96c99cda21c6da3fc21ecfaf478463602bb3d05f", "committedDate": "2020-09-22T22:58:47Z", "message": "Move pipeline_var into RM constructor\n\nChange-Id: I9d919dbd81649f7fc4c54b315272ed6115416719"}, "afterCommit": {"oid": "f5bf0647742e6697b2c4b691cd8e55936cb37c72", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f5bf0647742e6697b2c4b691cd8e55936cb37c72", "committedDate": "2020-09-22T23:03:14Z", "message": "Move pipeline_var into RM constructor\n\nChange-Id: I9d919dbd81649f7fc4c54b315272ed6115416719"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4711, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}