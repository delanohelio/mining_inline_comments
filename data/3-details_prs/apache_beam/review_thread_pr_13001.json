{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDc2OTU4", "number": 13001, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjowMDo0NFrOEq0E4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjowMDo0NFrOEq0E4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzI4ODY1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjowMDo0NFrOHdPAbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDoxMDoxNVrOHdeIHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNjYyMA==", "bodyText": "Probably this conflict handling deserves a mention in the PR description and a JIRA.\nAlso, when do we run into this ? Work item retries ?", "url": "https://github.com/apache/beam/pull/13001#discussion_r500416620", "createdAt": "2020-10-06T16:00:44Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -421,8 +418,36 @@ def _insert_load_job(\n             ),\n             jobReference=reference,\n         ))\n-    response = self.client.jobs.Insert(request)\n-    return response.jobReference\n+    return self._start_job(request).jobReference\n+\n+  def _start_job(\n+      self,\n+      request  # type: bigquery.BigqueryJobsInsertRequest\n+  ):\n+    \"\"\"Inserts a BigQuery job.\n+\n+    If the job exists already, it returns it.\n+    \"\"\"\n+    try:\n+      response = self.client.jobs.Insert(request)\n+      _LOGGER.info(\n+          \"Stated BigQuery job: %s\\n \"\n+          \"bq show -j --format=prettyjson --project_id=%s %s\",\n+          response.jobReference,\n+          response.jobReference.projectId,\n+          response.jobReference.jobId)\n+      return response\n+    except HttpError as exn:\n+      if exn.status_code == 409:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea8c04bc31cfbcac7152cbc77c8a6572e467d5ef"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY2NDM0OQ==", "bodyText": "correct, this happens on retries.", "url": "https://github.com/apache/beam/pull/13001#discussion_r500664349", "createdAt": "2020-10-07T00:10:15Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -421,8 +418,36 @@ def _insert_load_job(\n             ),\n             jobReference=reference,\n         ))\n-    response = self.client.jobs.Insert(request)\n-    return response.jobReference\n+    return self._start_job(request).jobReference\n+\n+  def _start_job(\n+      self,\n+      request  # type: bigquery.BigqueryJobsInsertRequest\n+  ):\n+    \"\"\"Inserts a BigQuery job.\n+\n+    If the job exists already, it returns it.\n+    \"\"\"\n+    try:\n+      response = self.client.jobs.Insert(request)\n+      _LOGGER.info(\n+          \"Stated BigQuery job: %s\\n \"\n+          \"bq show -j --format=prettyjson --project_id=%s %s\",\n+          response.jobReference,\n+          response.jobReference.projectId,\n+          response.jobReference.jobId)\n+      return response\n+    except HttpError as exn:\n+      if exn.status_code == 409:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNjYyMA=="}, "originalCommit": {"oid": "ea8c04bc31cfbcac7152cbc77c8a6572e467d5ef"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3101, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}