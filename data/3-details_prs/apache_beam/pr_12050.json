{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTU1MzE2", "number": 12050, "title": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder is not able to decode directory on the local file system", "bodyText": "DefaultFilenamePolicy.ParamsCoder used StringUtf8Coder for encoding/decoding baseFilename and therefore information whether baseFilename resourceID is file or directory was lost. Using  ResourceIdCoder instead fixes this issue.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-22T13:46:47Z", "url": "https://github.com/apache/beam/pull/12050", "merged": true, "mergeCommit": {"oid": "d86eccdfd6bbbc88d30231898304c54c1be8e224"}, "closed": true, "closedAt": "2020-08-20T17:01:48Z", "author": {"login": "davidak09"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctxs9mAFqTQzNDk3NzE2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAqSTBAH2gAyNDM3OTU1MzE2OmEyMGI2MTM4ZjAwYWQxNWI2NDNiOGViZmQzN2ZkYjhiMjQ5M2EzZjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0OTc3MTY0", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-434977164", "createdAt": "2020-06-22T14:27:08Z", "commit": {"oid": "a0916e5f96243d4df4e730ce872e6a9a3c04c0f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0916e5f96243d4df4e730ce872e6a9a3c04c0f8", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a0916e5f96243d4df4e730ce872e6a9a3c04c0f8", "committedDate": "2020-06-22T13:41:03Z", "message": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder uses ResourceIdCoder"}, "afterCommit": {"oid": "738499818a779110f761dc549f0d7543717904b9", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/738499818a779110f761dc549f0d7543717904b9", "committedDate": "2020-06-23T05:53:51Z", "message": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder preserves information if Params.baseFilename is file/directory (backward compatible)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDczODEz", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-436473813", "createdAt": "2020-06-24T09:22:32Z", "commit": {"oid": "738499818a779110f761dc549f0d7543717904b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOToyMjozMlrOGoKH_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOToyMjozMlrOGoKH_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MjExMQ==", "bodyText": "Would it be possible to add test case for bw compatible code path?", "url": "https://github.com/apache/beam/pull/12050#discussion_r444762111", "createdAt": "2020-06-24T09:22:32Z", "author": {"login": "dmvk"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/DefaultFilenamePolicy.java", "diffHunk": "@@ -182,19 +184,26 @@ public void encode(Params value, OutputStream outStream) throws IOException {\n       if (value == null) {\n         throw new CoderException(\"cannot encode a null value\");\n       }\n-      stringCoder.encode(value.baseFilename.get().toString(), outStream);\n-      stringCoder.encode(value.shardTemplate, outStream);\n-      stringCoder.encode(value.suffix, outStream);\n+      STRING_CODER.encode(value.baseFilename.get().toString(), outStream);\n+      STRING_CODER.encode(value.shardTemplate, outStream);\n+      STRING_CODER.encode(value.suffix, outStream);\n+      BOOLEAN_CODER.encode(value.baseFilename.get().isDirectory(), outStream);\n     }\n \n     @Override\n     public Params decode(InputStream inStream) throws IOException {\n-      ResourceId prefix =\n-          FileBasedSink.convertToFileResourceIfPossible(stringCoder.decode(inStream));\n-      String shardTemplate = stringCoder.decode(inStream);\n-      String suffix = stringCoder.decode(inStream);\n+      String prefix = STRING_CODER.decode(inStream);\n+      String shardTemplate = STRING_CODER.decode(inStream);\n+      String suffix = STRING_CODER.decode(inStream);\n+      ResourceId baseFilename;\n+      if (inStream.available() > 0) {\n+        baseFilename = FileSystems.matchNewResource(prefix, BOOLEAN_CODER.decode(inStream));\n+      } else {\n+        // fallback for ensure backward compatibility\n+        baseFilename = FileBasedSink.convertToFileResourceIfPossible(prefix);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "738499818a779110f761dc549f0d7543717904b9"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODY3MTY1", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-436867165", "createdAt": "2020-06-24T17:39:44Z", "commit": {"oid": "193f0d0cdfbf4f7d1749d6c34db7846e1c6f0f8e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozOTo0NFrOGoccuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozOTo0NFrOGoccuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MjMzMQ==", "bodyText": "convertToFileResourceIfPossible attempts to match a file and if that fails attempts to match a directory.\nIs the issue that the underlying filesystem erroneously says something is a file when really it is a directory?", "url": "https://github.com/apache/beam/pull/12050#discussion_r445062331", "createdAt": "2020-06-24T17:39:44Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/DefaultFilenamePolicy.java", "diffHunk": "@@ -182,19 +184,26 @@ public void encode(Params value, OutputStream outStream) throws IOException {\n       if (value == null) {\n         throw new CoderException(\"cannot encode a null value\");\n       }\n-      stringCoder.encode(value.baseFilename.get().toString(), outStream);\n-      stringCoder.encode(value.shardTemplate, outStream);\n-      stringCoder.encode(value.suffix, outStream);\n+      STRING_CODER.encode(value.baseFilename.get().toString(), outStream);\n+      STRING_CODER.encode(value.shardTemplate, outStream);\n+      STRING_CODER.encode(value.suffix, outStream);\n+      BOOLEAN_CODER.encode(value.baseFilename.get().isDirectory(), outStream);\n     }\n \n     @Override\n     public Params decode(InputStream inStream) throws IOException {\n-      ResourceId prefix =\n-          FileBasedSink.convertToFileResourceIfPossible(stringCoder.decode(inStream));\n-      String shardTemplate = stringCoder.decode(inStream);\n-      String suffix = stringCoder.decode(inStream);\n+      String prefix = STRING_CODER.decode(inStream);\n+      String shardTemplate = STRING_CODER.decode(inStream);\n+      String suffix = STRING_CODER.decode(inStream);\n+      ResourceId baseFilename;\n+      if (inStream.available() > 0) {\n+        baseFilename = FileSystems.matchNewResource(prefix, BOOLEAN_CODER.decode(inStream));\n+      } else {\n+        // fallback for ensure backward compatibility\n+        baseFilename = FileBasedSink.convertToFileResourceIfPossible(prefix);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MjExMQ=="}, "originalCommit": {"oid": "738499818a779110f761dc549f0d7543717904b9"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "193f0d0cdfbf4f7d1749d6c34db7846e1c6f0f8e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/193f0d0cdfbf4f7d1749d6c34db7846e1c6f0f8e", "committedDate": "2020-06-24T11:50:00Z", "message": "[BEAM-10292] added test for ParamsCoder backward compatibility"}, "afterCommit": {"oid": "3f4aa11aaa898f5af75d2d8c2ed21c571015c704", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3f4aa11aaa898f5af75d2d8c2ed21c571015c704", "committedDate": "2020-08-03T11:22:38Z", "message": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder uses ResourceIdCoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f4aa11aaa898f5af75d2d8c2ed21c571015c704", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3f4aa11aaa898f5af75d2d8c2ed21c571015c704", "committedDate": "2020-08-03T11:22:38Z", "message": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder uses ResourceIdCoder"}, "afterCommit": {"oid": "7b440f2ce57c049fbca04d7320cc74af6431b43c", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7b440f2ce57c049fbca04d7320cc74af6431b43c", "committedDate": "2020-08-03T11:26:58Z", "message": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder uses ResourceIdCoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3", "committedDate": "2020-08-11T12:07:40Z", "message": "[BEAM-10292] LocalFileSystem.matchNewResource method throws IllegalArgumentException when the first 'singleResourceSpec' parameter ends with filesystem separator and the second provided parameter indicates that it isn't directory.\nFixed due to DefaultFilenamePolicy.ParamsCoder was not able to decode directory on the local file system because it calls FileBasedSink.convertToFileResourceIfPossible method which internally calls FileSystem.matchNewResource method.\nOther file systems (HDFS, S3) already have this kind of check."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88dd8b6ca36f6d9860fe54c761e6214056afcaa1", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/88dd8b6ca36f6d9860fe54c761e6214056afcaa1", "committedDate": "2020-08-03T11:39:29Z", "message": "[BEAM-10292] DefaultFilenamePolicy.ParamsCoder uses ResourceIdCoder - breaking change documented in CHANGES.md"}, "afterCommit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3", "committedDate": "2020-08-11T12:07:40Z", "message": "[BEAM-10292] LocalFileSystem.matchNewResource method throws IllegalArgumentException when the first 'singleResourceSpec' parameter ends with filesystem separator and the second provided parameter indicates that it isn't directory.\nFixed due to DefaultFilenamePolicy.ParamsCoder was not able to decode directory on the local file system because it calls FileBasedSink.convertToFileResourceIfPossible method which internally calls FileSystem.matchNewResource method.\nOther file systems (HDFS, S3) already have this kind of check."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjY5MjA1", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-470669205", "createdAt": "2020-08-19T17:01:52Z", "commit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMTo1M1rOHDRCJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMTo1M1rOHDRCJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE4Njg1NQ==", "bodyText": "Use CoderUtils.clone", "url": "https://github.com/apache/beam/pull/12050#discussion_r473186855", "createdAt": "2020-08-19T17:01:53Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java", "diffHunk": "@@ -48,6 +51,26 @@ private static String constructName(\n     return constructed.toString();\n   }\n \n+  private static DefaultFilenamePolicy.Params encodeDecodeParams(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjcyOTE5", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-470672919", "createdAt": "2020-08-19T17:06:58Z", "commit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowNjo1OVrOHDRUFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowNjo1OVrOHDRUFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5MTQ0NQ==", "bodyText": "Do you want to add the file separator if it doesn't exist if isDirectory == true. This will help make it less error prone for users. Similar to GcsFileSystem.", "url": "https://github.com/apache/beam/pull/12050#discussion_r473191445", "createdAt": "2020-08-19T17:06:59Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "diffHunk": "@@ -202,6 +202,10 @@ protected void delete(Collection<LocalResourceId> resourceIds) throws IOExceptio\n \n   @Override\n   protected LocalResourceId matchNewResource(String singleResourceSpec, boolean isDirectory) {\n+    if (singleResourceSpec.endsWith(File.separator) && !isDirectory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjgyNzU3", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-470682757", "createdAt": "2020-08-19T17:19:55Z", "commit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjgzMjY0", "url": "https://github.com/apache/beam/pull/12050#pullrequestreview-470683264", "createdAt": "2020-08-19T17:20:39Z", "commit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoyMDozOVrOHDRzoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoyMDozOVrOHDRzoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5OTUyMA==", "bodyText": "What if the character is escaped and being used in the name component of the path string?", "url": "https://github.com/apache/beam/pull/12050#discussion_r473199520", "createdAt": "2020-08-19T17:20:39Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/LocalFileSystem.java", "diffHunk": "@@ -202,6 +202,10 @@ protected void delete(Collection<LocalResourceId> resourceIds) throws IOExceptio\n \n   @Override\n   protected LocalResourceId matchNewResource(String singleResourceSpec, boolean isDirectory) {\n+    if (singleResourceSpec.endsWith(File.separator) && !isDirectory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cdb8f4169acbc3f2cb3a4767dd1e1d2a7bd53e3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a20b6138f00ad15b643b8ebfd37fdb8b2493a3f6", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a20b6138f00ad15b643b8ebfd37fdb8b2493a3f6", "committedDate": "2020-08-20T06:33:14Z", "message": "[BEAM-10292] changes after review\n- adding file separator if it doesn't exist if isDirectory == true in LocalFileSystem.matchNewResource\n- dropped isDirectory field in LocalResourceId\n- using CoderUtils.clone method in DefaultFilenamePolicyTest.testParamsCoder test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3656, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}