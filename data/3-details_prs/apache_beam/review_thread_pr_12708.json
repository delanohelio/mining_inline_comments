{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTk5NjIy", "number": 12708, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowODo0NFrOEdh4zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowODo0NFrOEdh4zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mzk5MzczOnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkStreamingPipelineTranslator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowODo0NFrOHIu7TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo1NDo0OFrOHJLznw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxOTUwMQ==", "bodyText": "How will this work with the opt-out of SDF? Will primitive Reads still be translated then?", "url": "https://github.com/apache/beam/pull/12708#discussion_r478919501", "createdAt": "2020-08-28T08:08:44Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkStreamingPipelineTranslator.java", "diffHunk": "@@ -99,6 +99,13 @@ public CompositeBehavior enterCompositeTransform(TransformHierarchy.Node node) {\n \n     PTransform<?, ?> transform = node.getTransform();\n     if (transform != null) {\n+      // TODO(BEAM-10670): Remove this and the ReadTranslator once the \"use_deprecated_read\"\n+      // experiment is removed. Don't translate composite Read transforms since we expect the\n+      // primitive expansion containing an SDF to be used.\n+      if (PTransformTranslation.READ_TRANSFORM_URN.equals(\n+          PTransformTranslation.urnForTransformOrNull(transform))) {\n+        return CompositeBehavior.ENTER_TRANSFORM;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35dfe25f5ee41ccc09faa4e0749ecd9a10f904bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NTE2Mw==", "bodyText": "The non SDF version of Read is always a primitive transform so it gets replaced down below in visitPrimitiveTransform.", "url": "https://github.com/apache/beam/pull/12708#discussion_r479375163", "createdAt": "2020-08-28T15:23:07Z", "author": {"login": "lukecwik"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkStreamingPipelineTranslator.java", "diffHunk": "@@ -99,6 +99,13 @@ public CompositeBehavior enterCompositeTransform(TransformHierarchy.Node node) {\n \n     PTransform<?, ?> transform = node.getTransform();\n     if (transform != null) {\n+      // TODO(BEAM-10670): Remove this and the ReadTranslator once the \"use_deprecated_read\"\n+      // experiment is removed. Don't translate composite Read transforms since we expect the\n+      // primitive expansion containing an SDF to be used.\n+      if (PTransformTranslation.READ_TRANSFORM_URN.equals(\n+          PTransformTranslation.urnForTransformOrNull(transform))) {\n+        return CompositeBehavior.ENTER_TRANSFORM;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxOTUwMQ=="}, "originalCommit": {"oid": "35dfe25f5ee41ccc09faa4e0749ecd9a10f904bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5MjY3MQ==", "bodyText": "Makes sense!", "url": "https://github.com/apache/beam/pull/12708#discussion_r479392671", "createdAt": "2020-08-28T15:54:48Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkStreamingPipelineTranslator.java", "diffHunk": "@@ -99,6 +99,13 @@ public CompositeBehavior enterCompositeTransform(TransformHierarchy.Node node) {\n \n     PTransform<?, ?> transform = node.getTransform();\n     if (transform != null) {\n+      // TODO(BEAM-10670): Remove this and the ReadTranslator once the \"use_deprecated_read\"\n+      // experiment is removed. Don't translate composite Read transforms since we expect the\n+      // primitive expansion containing an SDF to be used.\n+      if (PTransformTranslation.READ_TRANSFORM_URN.equals(\n+          PTransformTranslation.urnForTransformOrNull(transform))) {\n+        return CompositeBehavior.ENTER_TRANSFORM;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxOTUwMQ=="}, "originalCommit": {"oid": "35dfe25f5ee41ccc09faa4e0749ecd9a10f904bc"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 378, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}