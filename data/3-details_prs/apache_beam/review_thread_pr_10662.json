{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDM3NjY5", "number": 10662, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyMjo1N1rODaUPaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyMzozOVrODaUQPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTIxMTk1OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyMjo1N1rOFhNERQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjozMTozMlrOFhOz0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTQxMw==", "bodyText": "nit: this function doesn't provide much value, just inline this?", "url": "https://github.com/apache/beam/pull/10662#discussion_r370361413", "createdAt": "2020-01-23T21:22:57Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -69,6 +91,10 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     return super.toSql(program, rex);\n   }\n \n+  private static String escapeForZetaSql(String input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4OTk2OA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/10662#discussion_r370389968", "createdAt": "2020-01-23T22:31:32Z", "author": {"login": "11moon11"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -69,6 +91,10 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     return super.toSql(program, rex);\n   }\n \n+  private static String escapeForZetaSql(String input) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTQxMw=="}, "originalCommit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTIxNDA0OnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyMzozOVrOFhNFeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjozMTo0MFrOFhOz-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTcyMg==", "bodyText": "Can you open a JIRA for this?", "url": "https://github.com/apache/beam/pull/10662#discussion_r370361722", "createdAt": "2020-01-23T21:23:39Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -34,10 +38,28 @@\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeFamily;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeName;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.util.BitString;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.commons.lang.StringEscapeUtils;\n \n public class BeamSqlUnparseContext extends SqlImplementor.SimpleContext {\n \n+  // More about escape sequences here:\n+  // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical\n+  // No need to escape: \\`, \\?, \\v, \\a, \\ooo, \\xhh (since this in not a thing in Java)\n+  // TODO: Move away from deprecated classes.\n+  // TODO: Escaping single quotes, SqlCharStringLiteral (produced by SqlLiteral.createCharString)\n+  // introduces extra.\n+  private static final CharSequenceTranslator ESCAPE_FOR_ZETA_SQL =\n+      // ZetaSQL specific:\n+      new LookupTranslator(\n+              new String[][] {\n+                {\"\\\"\", \"\\\\\\\"\"},\n+                {\"\\\\\", \"\\\\\\\\\"},\n+              })\n+          // \\b, \\n, \\t, \\f, \\r\n+          .with(new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()))\n+          // TODO: Add support for \\Uhhhhhhhh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5MDAwOQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/10662#discussion_r370390009", "createdAt": "2020-01-23T22:31:40Z", "author": {"login": "11moon11"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -34,10 +38,28 @@\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeFamily;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeName;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.util.BitString;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.commons.lang.StringEscapeUtils;\n \n public class BeamSqlUnparseContext extends SqlImplementor.SimpleContext {\n \n+  // More about escape sequences here:\n+  // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical\n+  // No need to escape: \\`, \\?, \\v, \\a, \\ooo, \\xhh (since this in not a thing in Java)\n+  // TODO: Move away from deprecated classes.\n+  // TODO: Escaping single quotes, SqlCharStringLiteral (produced by SqlLiteral.createCharString)\n+  // introduces extra.\n+  private static final CharSequenceTranslator ESCAPE_FOR_ZETA_SQL =\n+      // ZetaSQL specific:\n+      new LookupTranslator(\n+              new String[][] {\n+                {\"\\\"\", \"\\\\\\\"\"},\n+                {\"\\\\\", \"\\\\\\\\\"},\n+              })\n+          // \\b, \\n, \\t, \\f, \\r\n+          .with(new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()))\n+          // TODO: Add support for \\Uhhhhhhhh", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTcyMg=="}, "originalCommit": {"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2249, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}