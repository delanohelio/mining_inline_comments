{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzOTQ4NDEx", "number": 12480, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNTozOFrOEV6yEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyMjoyNlrOEV6-0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDE4NjQyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNTozOFrOG88vQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTozNToyM1rOG9FDrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2Mjg4MA==", "bodyText": "Is implied by the for loop and can be dropped.", "url": "https://github.com/apache/beam/pull/12480#discussion_r466562880", "createdAt": "2020-08-06T17:15:38Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -318,15 +319,20 @@ def get_query_location(self, project_id, query, use_legacy_sql):\n \n     referenced_tables = response.statistics.query.referencedTables\n     if referenced_tables:  # Guards against both non-empty and non-None", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjA4OA==", "bodyText": "@apilloud comment suggest that is also guarding against None value. If that's true, dropping this if, would break code for loop in case referenced_tables is actually None.\nTherefore my question is, are you sure we want to remove that if?", "url": "https://github.com/apache/beam/pull/12480#discussion_r466696088", "createdAt": "2020-08-06T21:28:12Z", "author": {"login": "galuszkak"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -318,15 +319,20 @@ def get_query_location(self, project_id, query, use_legacy_sql):\n \n     referenced_tables = response.statistics.query.referencedTables\n     if referenced_tables:  # Guards against both non-empty and non-None", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2Mjg4MA=="}, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5OTE4MQ==", "bodyText": "You are right, this needs to stay. (I'm getting go and python mixed up here, I don't use either of them very often.)", "url": "https://github.com/apache/beam/pull/12480#discussion_r466699181", "createdAt": "2020-08-06T21:35:23Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -318,15 +319,20 @@ def get_query_location(self, project_id, query, use_legacy_sql):\n \n     referenced_tables = response.statistics.query.referencedTables\n     if referenced_tables:  # Guards against both non-empty and non-None", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2Mjg4MA=="}, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDE5MTUwOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNzoxM1rOG88yjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToyODoyOFrOG9E4DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzcyNw==", "bodyText": "This error message is slightly wrong now. How about: Query %s does not reference any tables you have permission to inspect.", "url": "https://github.com/apache/beam/pull/12480#discussion_r466563727", "createdAt": "2020-08-06T17:17:13Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -318,15 +319,20 @@ def get_query_location(self, project_id, query, use_legacy_sql):\n \n     referenced_tables = response.statistics.query.referencedTables\n     if referenced_tables:  # Guards against both non-empty and non-None\n-      table = referenced_tables[0]\n-      location = self.get_table_location(\n-          table.projectId, table.datasetId, table.tableId)\n-      _LOGGER.info(\n-          \"Using location %r from table %r referenced by query %s\",\n-          location,\n-          table,\n-          query)\n-      return location\n+      for table in referenced_tables:\n+        try:\n+          location = self.get_table_location(\n+              table.projectId, table.datasetId, table.tableId)\n+        except HttpForbiddenError:\n+          # Permission access for table (i.e. from authorized_view),\n+          # try next one\n+          continue\n+        _LOGGER.info(\n+            \"Using location %r from table %r referenced by query %s\",\n+            location,\n+            table,\n+            query)\n+        return location\n \n     _LOGGER.debug(\"Query %s does not reference any tables.\", query)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjIwNA==", "bodyText": "@apilloud will change it. Thanks for pointing this out.", "url": "https://github.com/apache/beam/pull/12480#discussion_r466696204", "createdAt": "2020-08-06T21:28:28Z", "author": {"login": "galuszkak"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -318,15 +319,20 @@ def get_query_location(self, project_id, query, use_legacy_sql):\n \n     referenced_tables = response.statistics.query.referencedTables\n     if referenced_tables:  # Guards against both non-empty and non-None\n-      table = referenced_tables[0]\n-      location = self.get_table_location(\n-          table.projectId, table.datasetId, table.tableId)\n-      _LOGGER.info(\n-          \"Using location %r from table %r referenced by query %s\",\n-          location,\n-          table,\n-          query)\n-      return location\n+      for table in referenced_tables:\n+        try:\n+          location = self.get_table_location(\n+              table.projectId, table.datasetId, table.tableId)\n+        except HttpForbiddenError:\n+          # Permission access for table (i.e. from authorized_view),\n+          # try next one\n+          continue\n+        _LOGGER.info(\n+            \"Using location %r from table %r referenced by query %s\",\n+            location,\n+            table,\n+            query)\n+        return location\n \n     _LOGGER.debug(\"Query %s does not reference any tables.\", query)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzcyNw=="}, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDIxOTA1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools_test.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyMjoyNlrOG89Dhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTo0MDoyNVrOG9FLoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2ODA3MQ==", "bodyText": "(@pabloem is this something we want to do?)", "url": "https://github.com/apache/beam/pull/12480#discussion_r466568071", "createdAt": "2020-08-06T17:22:26Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools_test.py", "diffHunk": "@@ -50,6 +49,15 @@\n from apache_beam.io.gcp.internal.clients import bigquery\n from apache_beam.options.pipeline_options import PipelineOptions\n \n+# Protect against environments where bigquery library is not available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NzEwMQ==", "bodyText": "@apilloud this is copy from bigquery_test.py I assumed we want this consistent between files.", "url": "https://github.com/apache/beam/pull/12480#discussion_r466697101", "createdAt": "2020-08-06T21:30:34Z", "author": {"login": "galuszkak"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools_test.py", "diffHunk": "@@ -50,6 +49,15 @@\n from apache_beam.io.gcp.internal.clients import bigquery\n from apache_beam.options.pipeline_options import PipelineOptions\n \n+# Protect against environments where bigquery library is not available.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2ODA3MQ=="}, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwMTIxNg==", "bodyText": "Thanks for pointing that out. (I assumed we wouldn't want to do this in tests, but if we are doing it in others then follow that pattern.)", "url": "https://github.com/apache/beam/pull/12480#discussion_r466701216", "createdAt": "2020-08-06T21:40:25Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools_test.py", "diffHunk": "@@ -50,6 +49,15 @@\n from apache_beam.io.gcp.internal.clients import bigquery\n from apache_beam.options.pipeline_options import PipelineOptions\n \n+# Protect against environments where bigquery library is not available.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2ODA3MQ=="}, "originalCommit": {"oid": "dfdcd2e8aa5de52fe103648393d9d2e3f0f4a782"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 840, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}