{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDc0NzYz", "number": 12952, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0OToyMFrOEqvaVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0OToyMFrOEqvaVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjUyNDM2OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/flink_runner_test.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0OToyMFrOHdHlcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODoyMjoxNFrOHdoBQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5NTAyNQ==", "bodyText": "I've been thinking that we should support bundle finalization also with checkpointing disabled in an eager fashion. Does not have to be tackled here but would be nice to fix eventually because checkpointing is disabled by default.", "url": "https://github.com/apache/beam/pull/12952#discussion_r500295025", "createdAt": "2020-10-06T13:49:20Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/runners/portability/flink_runner_test.py", "diffHunk": "@@ -427,11 +427,29 @@ def test_sql(self):\n \n \n class FlinkRunnerTestStreaming(FlinkRunnerTest):\n+  def __init__(self, *args, **kwargs):\n+    super(FlinkRunnerTestStreaming, self).__init__(*args, **kwargs)\n+    self.enable_commit = False\n+\n+  def setUp(self):\n+    self.enable_commit = False\n+\n   def create_options(self):\n     options = super(FlinkRunnerTestStreaming, self).create_options()\n     options.view_as(StandardOptions).streaming = True\n+    if self.enable_commit:\n+      options._all_options['checkpointing_interval'] = 3000\n+      options._all_options['shutdown_sources_after_idle_ms'] = 60000\n     return options\n \n+  def test_callbacks_with_exception(self):\n+    self.enable_commit = True\n+    super(FlinkRunnerTest, self).test_callbacks_with_exception()\n+\n+  def test_register_finalizations(self):\n+    self.enable_commit = True\n+    super(FlinkRunnerTest, self).test_register_finalizations()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23631b86064c98474abf8af1708549a34f306d51"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5Njk0OQ==", "bodyText": "If we can have bundle finalization not rely on checkpoint, that would be really good. I'm curious does it only require changes in Beam or it also requires some updates on Flink side like the batch support we need mentioned in https://lists.apache.org/thread.html/r89c74f4020cd15d3c1a4b84ef78d7da4f67824e1b5e2210f4c5c1f40%40%3Cdev.flink.apache.org%3E.", "url": "https://github.com/apache/beam/pull/12952#discussion_r500496949", "createdAt": "2020-10-06T18:08:07Z", "author": {"login": "boyuanzz"}, "path": "sdks/python/apache_beam/runners/portability/flink_runner_test.py", "diffHunk": "@@ -427,11 +427,29 @@ def test_sql(self):\n \n \n class FlinkRunnerTestStreaming(FlinkRunnerTest):\n+  def __init__(self, *args, **kwargs):\n+    super(FlinkRunnerTestStreaming, self).__init__(*args, **kwargs)\n+    self.enable_commit = False\n+\n+  def setUp(self):\n+    self.enable_commit = False\n+\n   def create_options(self):\n     options = super(FlinkRunnerTestStreaming, self).create_options()\n     options.view_as(StandardOptions).streaming = True\n+    if self.enable_commit:\n+      options._all_options['checkpointing_interval'] = 3000\n+      options._all_options['shutdown_sources_after_idle_ms'] = 60000\n     return options\n \n+  def test_callbacks_with_exception(self):\n+    self.enable_commit = True\n+    super(FlinkRunnerTest, self).test_callbacks_with_exception()\n+\n+  def test_register_finalizations(self):\n+    self.enable_commit = True\n+    super(FlinkRunnerTest, self).test_register_finalizations()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5NTAyNQ=="}, "originalCommit": {"oid": "23631b86064c98474abf8af1708549a34f306d51"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgyNjQzNQ==", "bodyText": "It definitely requires changes in Flink for the finalization to be persisted without checkpointing by restoring the state from materialized intermediate results. However, if the user is fine with the job re-executing in case of failures, we may still offer bundle finalization. That may be acceptable as opposed to piling up to-be-acknowledged bundles which is likely going to fail the job. Perhaps this should be opt-in.", "url": "https://github.com/apache/beam/pull/12952#discussion_r500826435", "createdAt": "2020-10-07T08:22:14Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/runners/portability/flink_runner_test.py", "diffHunk": "@@ -427,11 +427,29 @@ def test_sql(self):\n \n \n class FlinkRunnerTestStreaming(FlinkRunnerTest):\n+  def __init__(self, *args, **kwargs):\n+    super(FlinkRunnerTestStreaming, self).__init__(*args, **kwargs)\n+    self.enable_commit = False\n+\n+  def setUp(self):\n+    self.enable_commit = False\n+\n   def create_options(self):\n     options = super(FlinkRunnerTestStreaming, self).create_options()\n     options.view_as(StandardOptions).streaming = True\n+    if self.enable_commit:\n+      options._all_options['checkpointing_interval'] = 3000\n+      options._all_options['shutdown_sources_after_idle_ms'] = 60000\n     return options\n \n+  def test_callbacks_with_exception(self):\n+    self.enable_commit = True\n+    super(FlinkRunnerTest, self).test_callbacks_with_exception()\n+\n+  def test_register_finalizations(self):\n+    self.enable_commit = True\n+    super(FlinkRunnerTest, self).test_register_finalizations()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5NTAyNQ=="}, "originalCommit": {"oid": "23631b86064c98474abf8af1708549a34f306d51"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3253, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}