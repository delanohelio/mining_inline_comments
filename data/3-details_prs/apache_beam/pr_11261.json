{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTUzMzkx", "number": 11261, "title": "[BEAM-9147] Add a VideoIntelligence transform to Java SDK", "bodyText": "This PR adds a VideoIntelligence transform to Java SDK, analogous to Python transforms introduced\nin #10764.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-30T10:21:45Z", "url": "https://github.com/apache/beam/pull/11261", "merged": true, "mergeCommit": {"oid": "825363b865b2c64ea745532436460e1702376968"}, "closed": true, "closedAt": "2020-04-08T14:10:36Z", "author": {"login": "mwalenia"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSrxuagH2gAyMzk1NTUzMzkxOmE3ZjU1ZTYwYzFjZmUzOTExMjMzMWRkNGUyYjM0YmM1MjJhMmM3N2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVAGTzgFqTM4ODM0MjU0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7f55e60c1cfe39112331dd4e2b34bc522a2c77a", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a7f55e60c1cfe39112331dd4e2b34bc522a2c77a", "committedDate": "2020-03-30T10:16:57Z", "message": "[BEAM-9147] Add VideoIntelligence transform"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d383b78d847755006e193d5481d09ccd1e7d0d0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4d383b78d847755006e193d5481d09ccd1e7d0d0", "committedDate": "2020-03-30T10:16:57Z", "message": "[BEAM-9147] Add Video Intelligence integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1c23bf7b654d2561ae977fd43122559811af7b2", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d1c23bf7b654d2561ae977fd43122559811af7b2", "committedDate": "2020-03-30T10:16:57Z", "message": "[BEAM-9147] Add documentation of VideoIntelligence transforms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86744f5671b2b7b5022dcd775a25ae0175b90b97", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/86744f5671b2b7b5022dcd775a25ae0175b90b97", "committedDate": "2020-03-30T11:36:59Z", "message": "Make checkstyle happy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzg3ODI4", "url": "https://github.com/apache/beam/pull/11261#pullrequestreview-386787828", "createdAt": "2020-04-02T21:25:01Z", "commit": {"oid": "86744f5671b2b7b5022dcd775a25ae0175b90b97"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyNTowMVrOF_9EGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyNzoxN1rOF_9IDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNTA4MQ==", "bodyText": "This part is really hard to read. Would be good to add named methods or use similar approach.", "url": "https://github.com/apache/beam/pull/11261#discussion_r402605081", "createdAt": "2020-04-02T21:25:01Z", "author": {"login": "Ardagan"}, "path": "sdks/java/extensions/ml/src/test/java/org/apache/beam/sdk/extensions/ml/VideoIntelligenceIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.ml;\n+\n+import static org.apache.beam.sdk.extensions.ml.VideoIntelligence.annotateFromURI;\n+import static org.junit.Assert.assertEquals;\n+\n+import com.google.cloud.videointelligence.v1.Feature;\n+import com.google.cloud.videointelligence.v1.VideoAnnotationResults;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.beam.sdk.testing.PAssert;\n+import org.apache.beam.sdk.testing.TestPipeline;\n+import org.apache.beam.sdk.transforms.Create;\n+import org.apache.beam.sdk.transforms.ParDo;\n+import org.apache.beam.sdk.transforms.SerializableFunction;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+public class VideoIntelligenceIT {\n+  @Rule public TestPipeline testPipeline = TestPipeline.create();\n+  private static final String VIDEO_URI =\n+      \"gs://apache-beam-samples/advanced_analytics/video/gbikes_dinosaur.mp4\";\n+  private List<Feature> featureList = Collections.singletonList(Feature.LABEL_DETECTION);\n+\n+  @Test\n+  public void annotateVideoFromURINoContext() {\n+    PCollection<List<VideoAnnotationResults>> annotationResults =\n+        testPipeline\n+            .apply(Create.of(VIDEO_URI))\n+            .apply(\"Annotate video\", ParDo.of(annotateFromURI(featureList, null)));\n+    PAssert.that(annotationResults).satisfies(new VerifyVideoAnnotationResult());\n+    testPipeline.run().waitUntilFinish();\n+  }\n+\n+  private static class VerifyVideoAnnotationResult\n+      implements SerializableFunction<Iterable<List<VideoAnnotationResults>>, Void> {\n+\n+    @Override\n+    public Void apply(Iterable<List<VideoAnnotationResults>> input) {\n+      List<Boolean> labelEvaluations = new ArrayList<>();\n+      input.forEach(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86744f5671b2b7b5022dcd775a25ae0175b90b97"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNjA5NA==", "bodyText": "move this up to the rest of extensions.", "url": "https://github.com/apache/beam/pull/11261#discussion_r402606094", "createdAt": "2020-04-02T21:27:17Z", "author": {"login": "Ardagan"}, "path": "settings.gradle", "diffHunk": "@@ -165,3 +165,6 @@ include \"beam-test-infra-metrics\"\n project(\":beam-test-infra-metrics\").dir = file(\".test-infra/metrics\")\n include \"beam-test-tools\"\n project(\":beam-test-tools\").dir = file(\".test-infra/tools\")\n+include 'sdks:java:extensions:ml'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86744f5671b2b7b5022dcd775a25ae0175b90b97"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3383534e90340943d97a3af4ebf690c1d506fa3", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f3383534e90340943d97a3af4ebf690c1d506fa3", "committedDate": "2020-04-03T10:51:11Z", "message": "Refactor test verification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MzQyNTQ3", "url": "https://github.com/apache/beam/pull/11261#pullrequestreview-388342547", "createdAt": "2020-04-06T15:05:23Z", "commit": {"oid": "f3383534e90340943d97a3af4ebf690c1d506fa3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4771, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}