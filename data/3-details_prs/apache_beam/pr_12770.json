{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4OTM2NDQ0", "number": 12770, "title": "[BEAM-10545] Assembled the extension with components", "bodyText": "Assembled the side panel widget using all existing components.\nAdded a final touch with CSS styles for some components.\nAdded boilerplate to instantiate the side panel from 3 entry points\nfrom the jupyterlab workspace.\nMinor tweak: added a button that could interrupt the kernel on click.\nIt's rendered when the kernel model is busy executing code for\nvisualization.\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-03T20:40:46Z", "url": "https://github.com/apache/beam/pull/12770", "merged": true, "mergeCommit": {"oid": "fc34c383b8224b3da2879a4df6fcd6fa6bc11353"}, "closed": true, "closedAt": "2020-09-15T14:47:13Z", "author": {"login": "KevinGG"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFXCVCgBqjM3MjY2ODY3MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHf18agFqTQ4NTg3MDM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc6d406810828b84868ff2d7b28e771f1ff7c323", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/bc6d406810828b84868ff2d7b28e771f1ff7c323", "committedDate": "2020-09-03T20:31:07Z", "message": "[BEAM-10545] Assembled the extension with components\n\n1. Assembled the side panel widget using all existing components.\n2. Added a final touch with CSS styles for some components.\n3. Added boilerplate to instantiate the side panel from 3 entry points\n   from the jupyterlab workspace.\n4. Minor tweak: added a button that could interrupt the kernel on click.\n   It's rendered when the kernel model is busy executiong code for\n   visualization."}, "afterCommit": {"oid": "e580532d3e8a1f0de8ab5797766ae5a9b96a9a5e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/e580532d3e8a1f0de8ab5797766ae5a9b96a9a5e", "committedDate": "2020-09-03T20:56:23Z", "message": "[BEAM-10545] Assembled the extension with components\n\n1. Assembled the side panel widget using all existing components.\n2. Added a final touch with CSS styles for some components.\n3. Added boilerplate to instantiate the side panel from 3 entry points\n   from the jupyterlab workspace.\n4. Minor tweak: added a button that could interrupt the kernel on click.\n   It's rendered when the kernel model is busy executing code for\n   visualization."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43ffed31adbe51ca034b1a91b2e9b5458a90afb", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c43ffed31adbe51ca034b1a91b2e9b5458a90afb", "committedDate": "2020-09-08T18:20:25Z", "message": "[BEAM-10545] Assembled the extension with components\n\n1. Assembled the side panel widget using all existing components.\n2. Added a final touch with CSS styles for some components.\n3. Added boilerplate to instantiate the side panel from 3 entry points\n   from the jupyterlab workspace.\n4. Minor tweak: added a button that could interrupt the kernel on click.\n   It's rendered when the kernel model is busy executing code for\n   visualization."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e580532d3e8a1f0de8ab5797766ae5a9b96a9a5e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/e580532d3e8a1f0de8ab5797766ae5a9b96a9a5e", "committedDate": "2020-09-03T20:56:23Z", "message": "[BEAM-10545] Assembled the extension with components\n\n1. Assembled the side panel widget using all existing components.\n2. Added a final touch with CSS styles for some components.\n3. Added boilerplate to instantiate the side panel from 3 entry points\n   from the jupyterlab workspace.\n4. Minor tweak: added a button that could interrupt the kernel on click.\n   It's rendered when the kernel model is busy executing code for\n   visualization."}, "afterCommit": {"oid": "c43ffed31adbe51ca034b1a91b2e9b5458a90afb", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c43ffed31adbe51ca034b1a91b2e9b5458a90afb", "committedDate": "2020-09-08T18:20:25Z", "message": "[BEAM-10545] Assembled the extension with components\n\n1. Assembled the side panel widget using all existing components.\n2. Added a final touch with CSS styles for some components.\n3. Added boilerplate to instantiate the side panel from 3 entry points\n   from the jupyterlab workspace.\n4. Minor tweak: added a button that could interrupt the kernel on click.\n   It's rendered when the kernel model is busy executing code for\n   visualization."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDA5MTU3", "url": "https://github.com/apache/beam/pull/12770#pullrequestreview-484409157", "createdAt": "2020-09-08T18:53:31Z", "commit": {"oid": "c43ffed31adbe51ca034b1a91b2e9b5458a90afb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1MzozMVrOHOp7rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowMDo1M1rOHOqL2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyOTEzNQ==", "bodyText": "I would suggest moving this out to a private async method for readability. Since you're already using async/await in the then handler, it seems like it would be most consistent to use it throughout rather than chaining with then and catch.", "url": "https://github.com/apache/beam/pull/12770#discussion_r485129135", "createdAt": "2020-09-08T18:53:31Z", "author": {"login": "prodonjs"}, "path": "sdks/python/apache_beam/runners/interactive/extensions/apache-beam-jupyterlab-sidepanel/src/SidePanel.ts", "diffHunk": "@@ -0,0 +1,120 @@\n+// Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+// use this file except in compliance with the License. You may obtain a copy of\n+// the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+// License for the specific language governing permissions and limitations under\n+// the License.\n+\n+import {\n+  SessionContext,\n+  ISessionContext,\n+  sessionContextDialogs\n+} from '@jupyterlab/apputils';\n+import { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n+import { ServiceManager } from '@jupyterlab/services';\n+import { Message } from '@lumino/messaging';\n+import { BoxPanel } from '@lumino/widgets';\n+\n+// prettier-ignore\n+import {\n+  InteractiveInspectorWidget\n+} from './inspector/InteractiveInspectorWidget';\n+\n+/**\n+ * The side panel: main user interface of the extension.\n+ *\n+ * Multiple instances of the side panel can be opened at the same time. They\n+ * can be operated independently but sharing the same kernel state if connected\n+ * to the same notebook session model or running kernel instance.\n+ */\n+export class SidePanel extends BoxPanel {\n+  constructor(\n+    manager: ServiceManager.IManager,\n+    rendermime: IRenderMimeRegistry\n+  ) {\n+    super({\n+      direction: 'top-to-bottom',\n+      alignment: 'end'\n+    });\n+    this.id = 'apache-beam-jupyterlab-sidepanel';\n+    this.title.label = 'Interactive Beam Inspector';\n+    this.title.closable = true;\n+\n+    this._sessionContext = new SessionContext({\n+      sessionManager: manager.sessions,\n+      specsManager: manager.kernelspecs,\n+      name: 'Interactive Beam Inspector Session'\n+    });\n+\n+    this._inspector = new InteractiveInspectorWidget(this._sessionContext);\n+    this.addWidget(this._inspector);\n+\n+    void this._sessionContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43ffed31adbe51ca034b1a91b2e9b5458a90afb"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyOTc2NQ==", "bodyText": "If there is no handling if value is falsy, I would suggest if (!value) return; to eliminate a layer of nesting.", "url": "https://github.com/apache/beam/pull/12770#discussion_r485129765", "createdAt": "2020-09-08T18:54:45Z", "author": {"login": "prodonjs"}, "path": "sdks/python/apache_beam/runners/interactive/extensions/apache-beam-jupyterlab-sidepanel/src/SidePanel.ts", "diffHunk": "@@ -0,0 +1,120 @@\n+// Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+// use this file except in compliance with the License. You may obtain a copy of\n+// the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+// License for the specific language governing permissions and limitations under\n+// the License.\n+\n+import {\n+  SessionContext,\n+  ISessionContext,\n+  sessionContextDialogs\n+} from '@jupyterlab/apputils';\n+import { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n+import { ServiceManager } from '@jupyterlab/services';\n+import { Message } from '@lumino/messaging';\n+import { BoxPanel } from '@lumino/widgets';\n+\n+// prettier-ignore\n+import {\n+  InteractiveInspectorWidget\n+} from './inspector/InteractiveInspectorWidget';\n+\n+/**\n+ * The side panel: main user interface of the extension.\n+ *\n+ * Multiple instances of the side panel can be opened at the same time. They\n+ * can be operated independently but sharing the same kernel state if connected\n+ * to the same notebook session model or running kernel instance.\n+ */\n+export class SidePanel extends BoxPanel {\n+  constructor(\n+    manager: ServiceManager.IManager,\n+    rendermime: IRenderMimeRegistry\n+  ) {\n+    super({\n+      direction: 'top-to-bottom',\n+      alignment: 'end'\n+    });\n+    this.id = 'apache-beam-jupyterlab-sidepanel';\n+    this.title.label = 'Interactive Beam Inspector';\n+    this.title.closable = true;\n+\n+    this._sessionContext = new SessionContext({\n+      sessionManager: manager.sessions,\n+      specsManager: manager.kernelspecs,\n+      name: 'Interactive Beam Inspector Session'\n+    });\n+\n+    this._inspector = new InteractiveInspectorWidget(this._sessionContext);\n+    this.addWidget(this._inspector);\n+\n+    void this._sessionContext\n+      .initialize()\n+      .then(async value => {\n+        if (value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43ffed31adbe51ca034b1a91b2e9b5458a90afb"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMzI3Mg==", "bodyText": "We ran into this issue with some of our extensions this summer and found that it was best if we referenced JupyterLab's CSS variables for colors where possible so we would be able to support users with different JupyterLab themes.\n\nhttps://jupyterlab.readthedocs.io/en/stable/developer/css.html\nhttps://github.com/jupyterlab/jupyterlab/blob/master/packages/theme-light-extension/style/variables.css", "url": "https://github.com/apache/beam/pull/12770#discussion_r485133272", "createdAt": "2020-09-08T19:00:53Z", "author": {"login": "prodonjs"}, "path": "sdks/python/apache_beam/runners/interactive/extensions/apache-beam-jupyterlab-sidepanel/style/mdc-theme.css", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+/*\n+ * Theme configured from https://rmwc.io/.\n+ */\n+:root {\n+  --mdc-theme-primary: #1a73e8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43ffed31adbe51ca034b1a91b2e9b5458a90afb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bdd431fe176330b180791644153e03bb1b18955", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/3bdd431fe176330b180791644153e03bb1b18955", "committedDate": "2020-09-09T21:55:21Z", "message": "Use async/wait syntax and CSS variables."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69322c543e5599428a9fa1568ff9df57b3995dc2", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/69322c543e5599428a9fa1568ff9df57b3995dc2", "committedDate": "2020-09-09T23:12:59Z", "message": "fix the lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODcwMzY0", "url": "https://github.com/apache/beam/pull/12770#pullrequestreview-485870364", "createdAt": "2020-09-10T12:20:41Z", "commit": {"oid": "69322c543e5599428a9fa1568ff9df57b3995dc2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4671, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}