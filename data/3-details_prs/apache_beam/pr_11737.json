{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MjAyODM5", "number": 11737, "title": "[BEAM-9984] Support BIT_OR aggregation function in Beam SQL", "bodyText": "R: @amaliujia\nCC: @kennknowles\nAdded support for BIT_OR aggregation function in Beam SQL.\nI ran ./gradlew -p sdks/java/extensions/sql check and that passed on my computer\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-18T00:43:43Z", "url": "https://github.com/apache/beam/pull/11737", "merged": true, "mergeCommit": {"oid": "27656d74fa9fb7085e2532275c821c3601c3f4b7"}, "closed": true, "closedAt": "2020-05-19T21:40:16Z", "author": {"login": "omarismail94"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciUyArAH2gAyNDE5MjAyODM5OmJkZGE2MmM1ZDQ0OGJmNzczZmUyZjBhYTQxYWVjMjA4YWIyNmNmMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcioCMDAH2gAyNDE5MjAyODM5OmY2YzFjYTVmYWRjYzc5ZjM1YTY2MTAwMTcyNmNkMzQwZjk1MDRiNmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bdda62c5d448bf773fe2f0aa41aec208ab26cf2d", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/bdda62c5d448bf773fe2f0aa41aec208ab26cf2d", "committedDate": "2020-05-18T00:32:14Z", "message": "[BEAM-9984] Support BIT_OR aggregation function in Beam SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac91f5ae9bcf3416de9a37e9f9ae838041cd8e25", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/ac91f5ae9bcf3416de9a37e9f9ae838041cd8e25", "committedDate": "2020-05-18T01:14:17Z", "message": "[BEAM-9984] Fixed error message typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/569a0a238bf73d1937af099206b9cfe8683c19dc", "committedDate": "2020-05-18T02:32:50Z", "message": "[BEAM-9984] Added ZetaSQL test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODkxNTg4", "url": "https://github.com/apache/beam/pull/11737#pullrequestreview-413891588", "createdAt": "2020-05-18T19:47:45Z", "commit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo0Nzo0NlrOGXFQAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo0Nzo0NlrOGXFQAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1NjQ1MQ==", "bodyText": "Ah I didn't realized that Calcite does not do type validation on argument type for a specific function. ZetaSQL does it.", "url": "https://github.com/apache/beam/pull/11737#discussion_r426856451", "createdAt": "2020-05-18T19:47:46Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/transform/BeamBuiltinAggregations.java", "diffHunk": "@@ -171,10 +173,18 @@ static CombineFn createAvg(Schema.FieldType fieldType) {\n         return new BigDecimalAvg();\n       default:\n         throw new UnsupportedOperationException(\n-            String.format(\"[%s] is not support in AVG\", fieldType));\n+            String.format(\"[%s] is not supported in AVG\", fieldType));\n     }\n   }\n \n+  static CombineFn createBitOr(Schema.FieldType fieldType) {\n+    if (fieldType.getTypeName() == TypeName.INT64) {\n+      return new BitOr();\n+    }\n+    throw new UnsupportedOperationException(\n+        String.format(\"[%s] is not supported in BIT_OR\", fieldType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODk1NjU2", "url": "https://github.com/apache/beam/pull/11737#pullrequestreview-413895656", "createdAt": "2020-05-18T19:54:01Z", "commit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NDowMVrOGXFb5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NDowMVrOGXFb5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1OTQ5NA==", "bodyText": "I am thinking there is no need to define a class to wrap long val? Just use Long?\nAlso you could consider this interface: https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sum.java#L129?", "url": "https://github.com/apache/beam/pull/11737#discussion_r426859494", "createdAt": "2020-05-18T19:54:01Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/transform/BeamBuiltinAggregations.java", "diffHunk": "@@ -347,4 +357,35 @@ public BigDecimal toBigDecimal(BigDecimal record) {\n       return record;\n     }\n   }\n+\n+  static class BitOr<T extends Number> extends CombineFn<T, BitOr.Accum, Long> {\n+    static class Accum {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODk1OTM0", "url": "https://github.com/apache/beam/pull/11737#pullrequestreview-413895934", "createdAt": "2020-05-18T19:54:26Z", "commit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NDoyNlrOGXFcug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NDoyNlrOGXFcug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1OTcwNg==", "bodyText": "Nice catch!", "url": "https://github.com/apache/beam/pull/11737#discussion_r426859706", "createdAt": "2020-05-18T19:54:26Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -2836,7 +2836,6 @@ public void testDistinctOnNull() {\n   }\n \n   @Test\n-  @Ignore(\"BeamSQL does not support ANY_VALUE\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODk2MTg2", "url": "https://github.com/apache/beam/pull/11737#pullrequestreview-413896186", "createdAt": "2020-05-18T19:54:51Z", "commit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NDo1MVrOGXFdmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NDo1MVrOGXFdmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1OTkzMA==", "bodyText": "Nice! Surprisingly you can figure out how to enable this function in ZetaSQL dialect!", "url": "https://github.com/apache/beam/pull/11737#discussion_r426859930", "createdAt": "2020-05-18T19:54:51Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -4500,6 +4499,23 @@ public void testIsNullTrueFalse() {\n     pipeline.run().waitUntilFinish(Duration.standardMinutes(PIPELINE_EXECUTION_WAITTIME_MINUTES));\n   }\n \n+  @Test\n+  public void testZetaSQLBitOr() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569a0a238bf73d1937af099206b9cfe8683c19dc"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6c1ca5fadcc79f35a661001726cd340f9504b6b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f6c1ca5fadcc79f35a661001726cd340f9504b6b", "committedDate": "2020-05-18T22:58:06Z", "message": "[BEAM-9984] Cleand up BitOr class so it does not need a nested static class"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4639, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}