{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NDA1MjM0", "number": 11533, "title": "[BEAM-9827] Ensure minimum watermark hold is computed across all keys", "bodyText": "For computing the current output watermark we need to compute the minimum\nwatermark hold across all watermark holds. We maintain an in-memory view of all\nwatermark holds because iterating over all keys is an expensive operation which\nwe only want to do when restoring from a checkpoint, not on every watermark.\nThe watermark view may not be in sync with its backing managed state. This\nchange corrects this by maintaining a priority queue with all watermark holds\nand adding additional tests.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-27T10:27:56Z", "url": "https://github.com/apache/beam/pull/11533", "merged": true, "mergeCommit": {"oid": "439728a02de3068da69d5ac66cbc78eb114356cc"}, "closed": true, "closedAt": "2020-04-27T15:56:51Z", "author": {"login": "mxm"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbtqNQAFqTQwMDg2NTU5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbwKpzgFqTQwMTAwODM3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODY1NTk2", "url": "https://github.com/apache/beam/pull/11533#pullrequestreview-400865596", "createdAt": "2020-04-27T11:33:52Z", "commit": {"oid": "fc00b4b3d47ee3d4e56752673bb0cd6f10432b2d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozMzo1MlrOGMefow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozMzo1MlrOGMefow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNTcxNQ==", "bodyText": "To sum up if I understand this correctly\n\nWe only need to keep a single value (the minimum)\nWe can not use scalar value that would hold the minimum, because we need a mutable wrapper\n\nin this case can we only keep the minimum value in order to have O(log N) complexity? eg.:\nvoid insertAndKeepMinimum(PriorityQueue<T> pq, T element) {\n  pq.insert(element)\n  while(pq.size() > 1) {\n    pq.remove();\n  }\n}\n\npq.remove(T ...) has linear time complexity", "url": "https://github.com/apache/beam/pull/11533#discussion_r415735715", "createdAt": "2020-04-27T11:33:52Z", "author": {"login": "dmvk"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/state/FlinkStateInternals.java", "diffHunk": "@@ -76,8 +76,8 @@\n   private final KeyedStateBackend<ByteBuffer> flinkStateBackend;\n   private Coder<K> keyCoder;\n \n-  // Combined watermark holds for all keys of this partition\n-  private final Map<String, Instant> watermarkHolds = new HashMap<>();\n+  // Watermark holds for all keys/windows of this partition\n+  private final PriorityQueue<Long> watermarkHolds = new PriorityQueue<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc00b4b3d47ee3d4e56752673bb0cd6f10432b2d"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d12aa56bc91de8a8a1d272657996d1094533f5c", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/0d12aa56bc91de8a8a1d272657996d1094533f5c", "committedDate": "2020-04-27T14:17:03Z", "message": "[BEAM-9827] Ensure minimum watermark hold is computed across all keys\n\nFor computing the current output watermark we need to compute the minimum\nwatermark hold across all watermark holds. We maintain an in-memory view of all\nwatermark holds because iterating over all keys is an expensive operation which\nwe only want to do when restoring from a checkpoint, not on every watermark.\n\nThe watermark view may not be in sync with its backing managed state. This\nchange corrects this by maintaining a TreeMap with all watermark holds and\nadding additional tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc00b4b3d47ee3d4e56752673bb0cd6f10432b2d", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/fc00b4b3d47ee3d4e56752673bb0cd6f10432b2d", "committedDate": "2020-04-27T10:25:21Z", "message": "[BEAM-9827] Ensure minimum watermark hold is computed across all keys\n\nFor computing the current output watermark we need to compute the minimum\nwatermark hold across all watermark holds. We maintain an in-memory view of all\nwatermark holds because iterating over all keys is an expensive operation which\nwe only want to do when restoring from a checkpoint, not on every watermark.\n\nThe watermark view may not be in sync with its backing managed state. This\nchange corrects this by maintaining a priority queue with all watermark holds\nand adding additional tests."}, "afterCommit": {"oid": "0d12aa56bc91de8a8a1d272657996d1094533f5c", "author": {"user": {"login": "mxm", "name": "Maximilian Michels"}}, "url": "https://github.com/apache/beam/commit/0d12aa56bc91de8a8a1d272657996d1094533f5c", "committedDate": "2020-04-27T14:17:03Z", "message": "[BEAM-9827] Ensure minimum watermark hold is computed across all keys\n\nFor computing the current output watermark we need to compute the minimum\nwatermark hold across all watermark holds. We maintain an in-memory view of all\nwatermark holds because iterating over all keys is an expensive operation which\nwe only want to do when restoring from a checkpoint, not on every watermark.\n\nThe watermark view may not be in sync with its backing managed state. This\nchange corrects this by maintaining a TreeMap with all watermark holds and\nadding additional tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMDA4Mzc4", "url": "https://github.com/apache/beam/pull/11533#pullrequestreview-401008378", "createdAt": "2020-04-27T14:29:08Z", "commit": {"oid": "0d12aa56bc91de8a8a1d272657996d1094533f5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3985, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}