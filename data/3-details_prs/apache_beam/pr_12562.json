{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDkzMDQ5", "number": 12562, "title": "[BEAM-10200] Respect profile_memory option and add memory profiler to\u2026", "bodyText": "\u2026 sdk worker\nPlease add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-13T01:27:42Z", "url": "https://github.com/apache/beam/pull/12562", "merged": true, "mergeCommit": {"oid": "e6b3cf1da5f17a3a15f2a48986a1b84266f3a64c"}, "closed": true, "closedAt": "2020-09-30T23:21:42Z", "author": {"login": "y1chi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-VtmYAH2gAyNDY3MDkzMDQ5OjdiNDI2YTNjZDA5NGMxY2Y4OTEzNThlODUxZTYxZTFhMjQxMWM5NWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMdYaHABqjM4MDk1Njc1NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b426a3cd094c1cf891358e851e61e1a2411c95a", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/7b426a3cd094c1cf891358e851e61e1a2411c95a", "committedDate": "2020-08-13T01:27:12Z", "message": "[BEAM-10200] Respect profile_memory option and add memory profiler to sdk worker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4feb867825307f236ce8da23d9486a0efa936c8", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/c4feb867825307f236ce8da23d9486a0efa936c8", "committedDate": "2020-08-13T16:49:49Z", "message": "mypy fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjQyNTEy", "url": "https://github.com/apache/beam/pull/12562#pullrequestreview-492242512", "createdAt": "2020-09-21T01:13:37Z", "commit": {"oid": "c4feb867825307f236ce8da23d9486a0efa936c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMToxMzozN1rOHU-ltg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMToxMzozN1rOHU-ltg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1OTAzMA==", "bodyText": "Let's log the import failure", "url": "https://github.com/apache/beam/pull/12562#discussion_r491759030", "createdAt": "2020-09-21T01:13:37Z", "author": {"login": "angoenka"}, "path": "sdks/python/apache_beam/utils/profiler.py", "diffHunk": "@@ -44,59 +42,91 @@\n \n \n class Profile(object):\n-  \"\"\"cProfile wrapper context for saving and logging profiler results.\"\"\"\n+  \"\"\"cProfile and Heapy wrapper context for saving and logging profiler\n+  results.\"\"\"\n \n   SORTBY = 'cumulative'\n \n   def __init__(\n       self,\n-      profile_id,\n-      profile_location=None,\n-      log_results=False,\n-      file_copy_fn=None,\n-      time_prefix='%Y-%m-%d_%H_%M_%S-'):\n+      profile_id, # type: str\n+      profile_location=None, # type: Optional[str]\n+      log_results=False, # type: bool\n+      file_copy_fn=None, # type: Optional[Callable[[str, str], None]]\n+      time_prefix='%Y-%m-%d_%H_%M_%S-', # type: str\n+      enable_cpu_profiling=False, # type: bool\n+      enable_memory_profiling=False, # type: bool\n+  ):\n+    \"\"\"Creates a Profile object.\n+\n+    Args:\n+      profile_id: Unique id of the profiling session.\n+      profile_location: The file location where the profiling results will be\n+        stored.\n+      log_results: Log the result to console if true.\n+      file_copy_fn: Lambda function for copying files.\n+      time_prefix: Format of the timestamp prefix in profiling result files.\n+      enable_cpu_profiling: CPU profiler will be enabled during the profiling\n+        session.\n+      enable_memory_profiling: Memory profiler will be enabled during the\n+        profiling session, the profiler only records the newly allocated objects\n+        in this session.\n+    \"\"\"\n     self.stats = None\n     self.profile_id = str(profile_id)\n     self.profile_location = profile_location\n     self.log_results = log_results\n     self.file_copy_fn = file_copy_fn or self.default_file_copy_fn\n     self.time_prefix = time_prefix\n     self.profile_output = None\n+    self.enable_cpu_profiling = enable_cpu_profiling\n+    self.enable_memory_profiling = enable_memory_profiling\n \n   def __enter__(self):\n     _LOGGER.info('Start profiling: %s', self.profile_id)\n-    self.profile = cProfile.Profile()\n-    self.profile.enable()\n+    if self.enable_cpu_profiling:\n+      self.profile = cProfile.Profile()\n+      self.profile.enable()\n+    if self.enable_memory_profiling:\n+      try:\n+        from guppy import hpy\n+        self.hpy = hpy()\n+        self.hpy.setrelheap()\n+      except ImportError:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4feb867825307f236ce8da23d9486a0efa936c8"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30fae7af2aebf6a3d55fd53a0a78e55fbd90c16d", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/30fae7af2aebf6a3d55fd53a0a78e55fbd90c16d", "committedDate": "2020-09-21T17:52:33Z", "message": "Address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODY0NDgy", "url": "https://github.com/apache/beam/pull/12562#pullrequestreview-495864482", "createdAt": "2020-09-24T18:54:34Z", "commit": {"oid": "30fae7af2aebf6a3d55fd53a0a78e55fbd90c16d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b29fdccd4e3c44237311da1de5ca66eb79f80ec0", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/b29fdccd4e3c44237311da1de5ca66eb79f80ec0", "committedDate": "2020-09-25T22:18:03Z", "message": "Add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f79a2ef188de2ffe7964b7074ffe08fa8395ac0", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/7f79a2ef188de2ffe7964b7074ffe08fa8395ac0", "committedDate": "2020-09-25T21:18:52Z", "message": "Add unit test"}, "afterCommit": {"oid": "b29fdccd4e3c44237311da1de5ca66eb79f80ec0", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/b29fdccd4e3c44237311da1de5ca66eb79f80ec0", "committedDate": "2020-09-25T22:18:03Z", "message": "Add unit test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3490, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}