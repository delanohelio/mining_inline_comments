{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTM5Mjg5", "number": 13389, "title": "[BEAM-11075] Go SDK Combine load tests", "bodyText": "This PR adds Combine load tests for Go SDK.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-11-20T08:33:22Z", "url": "https://github.com/apache/beam/pull/13389", "merged": true, "mergeCommit": {"oid": "e58246d843253e97649d0471d160e5af681e88ae"}, "closed": true, "closedAt": "2020-11-25T12:14:48Z", "author": {"login": "tszerszen"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeS3M8gH2gAyNTI0NTM5Mjg5OmFiYWE3MzNiYzdmNjI4NmQ0MDUyNTE2MTBhNDExZjAwMjg3M2YzZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdftEr4AH2gAyNTI0NTM5Mjg5OjA3ZGZkY2E0MTIxNjAwNzhkMDRhOWU0YmUyZTE4YzA3NDQ3Y2VlZDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "abaa733bc7f6286d405251610a411f002873f3ed", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/abaa733bc7f6286d405251610a411f002873f3ed", "committedDate": "2020-11-20T08:13:33Z", "message": "combine load tests for Go SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b048d9bcfb7850c045574b1dfb901ca67575ca00", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/b048d9bcfb7850c045574b1dfb901ca67575ca00", "committedDate": "2020-11-20T08:14:43Z", "message": "combine load tests for Go SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a796c0d8d7d3dbe7b729317251b25598d39a7a84", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a796c0d8d7d3dbe7b729317251b25598d39a7a84", "committedDate": "2020-11-20T08:16:49Z", "message": "combine load tests for Go SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df551db878d6184879585a344e91fc1da3238c92", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/df551db878d6184879585a344e91fc1da3238c92", "committedDate": "2020-11-23T14:18:22Z", "message": "fix combine.go format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d", "committedDate": "2020-11-24T08:12:38Z", "message": "fix .groovy and add fanout description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzMzNjc0", "url": "https://github.com/apache/beam/pull/13389#pullrequestreview-537333674", "createdAt": "2020-11-24T10:09:33Z", "commit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowOTozM1rOH43wEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDo0MDoyNlrOH46ECQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM5NTczMA==", "bodyText": "Group By Key Go Load test -> Combine Go Load test", "url": "https://github.com/apache/beam/pull/13389#discussion_r529395730", "createdAt": "2020-11-24T10:09:33Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_Combine_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwMTMwMw==", "bodyText": "Please replace \"2\" with \"4\" here and below, at line 59. This is for compatibility reasons. Some time ago, we had tests 2 and 3, but they were eventually removed.", "url": "https://github.com/apache/beam/pull/13389#discussion_r529401303", "createdAt": "2020-11-24T10:14:02Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_Combine_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-1-${now}\",\n+        influx_namespace     : 'flink',\n+        influx_measurement   : 'go_batch_combine_1',\n+        input_options        : '\\'{' +\n+        '\"num_records\": 200000000,' +\n+        '\"key_size\": 1,' +\n+        '\"value_size\": 9}\\'',\n+        fanout               : 1,\n+        top_count            : 20,\n+        parallelism          : 5,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Group By Key Go Load test: fanout 4 times with 2GB 10-byte records total',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-2-${now}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwMjczMA==", "bodyText": "\"3\" -> \"5\"", "url": "https://github.com/apache/beam/pull/13389#discussion_r529402730", "createdAt": "2020-11-24T10:15:05Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_Combine_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-1-${now}\",\n+        influx_namespace     : 'flink',\n+        influx_measurement   : 'go_batch_combine_1',\n+        input_options        : '\\'{' +\n+        '\"num_records\": 200000000,' +\n+        '\"key_size\": 1,' +\n+        '\"value_size\": 9}\\'',\n+        fanout               : 1,\n+        top_count            : 20,\n+        parallelism          : 5,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Group By Key Go Load test: fanout 4 times with 2GB 10-byte records total',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-2-${now}\",\n+        influx_namespace     : 'flink',\n+        influx_measurement   : 'go_batch_combine_2',\n+        input_options        : '\\'{' +\n+        '\"num_records\": 5000000,' +\n+        '\"key_size\": 10,' +\n+        '\"value_size\": 90}\\'',\n+        fanout               : 4,\n+        top_count            : 20,\n+        parallelism          : 16,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Group By Key Go Load test: fanout 8 times with 2GB 10-byte records total',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-3-${now}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwODgxNg==", "bodyText": "We already have two tests firing at the same time (at 10 am UTC): Go ParDo (merged) and Go GBK (will be merged soon). Let's choose something else. I think 8 is a good choice.", "url": "https://github.com/apache/beam/pull/13389#discussion_r529408816", "createdAt": "2020-11-24T10:20:08Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_Combine_Flink_Go.groovy", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import CommonTestProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import Flink\n+import InfluxDBCredentialsHelper\n+\n+import static LoadTestsBuilder.DOCKER_CONTAINER_REGISTRY\n+\n+String now = new Date().format('MMddHHmmss', TimeZone.getTimeZone('UTC'))\n+\n+def batchScenarios = {\n+  [\n+    [\n+      title          : 'Group By Key Go Load test: 2GB of 10B records',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-1-${now}\",\n+        influx_namespace     : 'flink',\n+        influx_measurement   : 'go_batch_combine_1',\n+        input_options        : '\\'{' +\n+        '\"num_records\": 200000000,' +\n+        '\"key_size\": 1,' +\n+        '\"value_size\": 9}\\'',\n+        fanout               : 1,\n+        top_count            : 20,\n+        parallelism          : 5,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Group By Key Go Load test: fanout 4 times with 2GB 10-byte records total',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-2-${now}\",\n+        influx_namespace     : 'flink',\n+        influx_measurement   : 'go_batch_combine_2',\n+        input_options        : '\\'{' +\n+        '\"num_records\": 5000000,' +\n+        '\"key_size\": 10,' +\n+        '\"value_size\": 90}\\'',\n+        fanout               : 4,\n+        top_count            : 20,\n+        parallelism          : 16,\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+    [\n+      title          : 'Group By Key Go Load test: fanout 8 times with 2GB 10-byte records total',\n+      test           : 'combine',\n+      runner         : CommonTestProperties.Runner.FLINK,\n+      pipelineOptions: [\n+        job_name             : \"load-tests-go-flink-batch-combine-3-${now}\",\n+        influx_namespace     : 'flink',\n+        influx_measurement   : 'go_batch_combine_3',\n+        fanout               : 8,\n+        top_count            : 20,\n+        parallelism          : 16,\n+        input_options        : '\\'{' +\n+        '\"num_records\": 2500000,' +\n+        '\"key_size\": 10,' +\n+        '\"value_size\": 90}\\'',\n+        endpoint             : 'localhost:8099',\n+        environment_type     : 'DOCKER',\n+        environment_config   : \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\",\n+      ]\n+    ],\n+  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+}\n+\n+def loadTestJob = { scope, triggeringContext, mode ->\n+  Map<Integer, List> testScenariosByParallelism = batchScenarios().groupBy { test ->\n+    test.pipelineOptions.parallelism\n+  }\n+  Integer initialParallelism = testScenariosByParallelism.keySet().iterator().next()\n+  List initialScenarios = testScenariosByParallelism.remove(initialParallelism)\n+\n+  def flink = new Flink(scope, \"beam_LoadTests_Go_Combine_Flink_${mode.capitalize()}\")\n+  flink.setUp(\n+      [\n+        \"${DOCKER_CONTAINER_REGISTRY}/beam_go_sdk:latest\"\n+      ],\n+      initialParallelism,\n+      \"${DOCKER_CONTAINER_REGISTRY}/beam_flink1.10_job_server:latest\")\n+\n+  // Execute all scenarios connected with initial parallelism.\n+  loadTestsBuilder.loadTests(scope, CommonTestProperties.SDK.GO, initialScenarios, 'combine', mode)\n+\n+  // Execute the rest of scenarios.\n+  testScenariosByParallelism.each { parallelism, scenarios ->\n+    flink.scaleCluster(parallelism)\n+    loadTestsBuilder.loadTests(scope, CommonTestProperties.SDK.GO, scenarios, 'combine', mode)\n+  }\n+}\n+\n+PhraseTriggeringPostCommitBuilder.postCommitJob(\n+    'beam_LoadTests_Go_Combine_Flink_Batch',\n+    'Run Load Tests Go Combine Flink Batch',\n+    'Load Tests Go Combine Batch suite',\n+    this\n+    ) {\n+      additionalPipelineArgs = [:]\n+      loadTestJob(delegate, CommonTestProperties.TriggeringContext.PR, 'batch')\n+    }\n+\n+CronJobBuilder.cronJob('beam_LoadTests_Go_Combine_Flink_Batch', 'H 10 * * *', this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQxMTg5MQ==", "bodyText": "This formatting looks a bit strange. Can we do it in the same way as for test GBK test?", "url": "https://github.com/apache/beam/pull/13389#discussion_r529411891", "createdAt": "2020-11-24T10:22:39Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/combine/combine.go", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/transforms/top\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout          = flag.Int(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQxOTEwNg==", "bodyText": "What about something like this: A number of greatest elements to extract from the PCollection. ?", "url": "https://github.com/apache/beam/pull/13389#discussion_r529419106", "createdAt": "2020-11-24T10:28:22Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/combine/combine.go", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/transforms/top\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout          = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"A number of combine operations to perform in parallel.\")\n+\ttopCount        = flag.Int(\n+\t\t\"top_count\",\n+\t\t20,\n+\t\t\"A number passed to the combiner.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQyOTEyNw==", "bodyText": "In Go, if a name begins with a capital letter, it is an exported name. I think there's no need to mark this function as an exported one.", "url": "https://github.com/apache/beam/pull/13389#discussion_r529429127", "createdAt": "2020-11-24T10:36:45Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/combine/combine.go", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/transforms/top\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout          = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"A number of combine operations to perform in parallel.\")\n+\ttopCount        = flag.Int(\n+\t\t\"top_count\",\n+\t\t20,\n+\t\t\"A number passed to the combiner.\")\n+\tsyntheticConfig = flag.String(\n+\t\t\"input_options\",\n+\t\t\"\",\n+\t\t\"A JSON object that describes the configuration for synthetic source.\")\n+)\n+\n+func parseSyntheticConfig() synthetic.SourceConfig {\n+\tif *syntheticConfig == \"\" {\n+\t\tpanic(\"--input_options not provided\")\n+\t} else {\n+\t\tencoded := []byte(*syntheticConfig)\n+\t\treturn synthetic.DefaultSourceConfig().BuildFromJSON(encoded)\n+\t}\n+}\n+\n+func CompareLess(key []byte, value []byte) bool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQzMzYwOQ==", "bodyText": "Two transforms are missing after the combing operation:\n\na ParDo for consuming output elements. Please visit sdks/python/apache_beam/testing/load_tests/combine_test.py to check how it was implemented in Python\na final ParDo with a RuntimeMonitor", "url": "https://github.com/apache/beam/pull/13389#discussion_r529433609", "createdAt": "2020-11-24T10:40:26Z", "author": {"login": "kamilwu"}, "path": "sdks/go/test/load/combine/combine.go", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"context\"\n+\t\"flag\"\n+\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/io/synthetic\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/log\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/transforms/top\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/x/beamx\"\n+\t\"github.com/apache/beam/sdks/go/test/load\"\n+)\n+\n+var (\n+\tfanout          = flag.Int(\n+\t\t\"fanout\",\n+\t\t1,\n+\t\t\"A number of combine operations to perform in parallel.\")\n+\ttopCount        = flag.Int(\n+\t\t\"top_count\",\n+\t\t20,\n+\t\t\"A number passed to the combiner.\")\n+\tsyntheticConfig = flag.String(\n+\t\t\"input_options\",\n+\t\t\"\",\n+\t\t\"A JSON object that describes the configuration for synthetic source.\")\n+)\n+\n+func parseSyntheticConfig() synthetic.SourceConfig {\n+\tif *syntheticConfig == \"\" {\n+\t\tpanic(\"--input_options not provided\")\n+\t} else {\n+\t\tencoded := []byte(*syntheticConfig)\n+\t\treturn synthetic.DefaultSourceConfig().BuildFromJSON(encoded)\n+\t}\n+}\n+\n+func CompareLess(key []byte, value []byte) bool {\n+\treturn bytes.Compare(key, value) < 0\n+}\n+\n+func main() {\n+\tflag.Parse()\n+\tbeam.Init()\n+\n+\tctx := context.Background()\n+\n+\tp, s := beam.NewPipelineWithRoot()\n+\tsrc := synthetic.SourceSingle(s, parseSyntheticConfig())\n+\tpcoll := beam.ParDo(s, &load.RuntimeMonitor{}, src)\n+\tfor i := 0; i < *fanout; i++ {\n+\t\tpcoll = top.LargestPerKey(s, pcoll, *topCount, CompareLess)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ff7f8a45ba9c5c2d0e8bca3d8d894e630bd08d"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f85a79d9ce4d60055dbd4c9fab305cb38c6977d9", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f85a79d9ce4d60055dbd4c9fab305cb38c6977d9", "committedDate": "2020-11-24T12:05:55Z", "message": "change numbers in .groovy test and add runtime monitor in combine.go"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96d43509a729023e9dfca9d5f5824d1ab3421949", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/96d43509a729023e9dfca9d5f5824d1ab3421949", "committedDate": "2020-11-24T12:15:09Z", "message": "add pardo getElement & runtimeMonitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "611c2653759773090f4ac3c2ce38a3dd9a1454fe", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/611c2653759773090f4ac3c2ce38a3dd9a1454fe", "committedDate": "2020-11-24T12:30:16Z", "message": "add pardo getElement & runtimeMonitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abf6b13278811d8d8836963f17f7c8bd81026274", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/abf6b13278811d8d8836963f17f7c8bd81026274", "committedDate": "2020-11-24T16:48:08Z", "message": "fix combine load test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07dfdca412160078d04a9e4be2e18c07447ceed0", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/07dfdca412160078d04a9e4be2e18c07447ceed0", "committedDate": "2020-11-24T17:19:44Z", "message": "fix combine load test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4492, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}