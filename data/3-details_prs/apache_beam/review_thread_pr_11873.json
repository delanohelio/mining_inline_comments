{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjAzMTkw", "number": 11873, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDowOVrOEB7ZNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDowOVrOEB7ZNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDU3MTQyOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDowOVrOGeEw4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTo1NDoyOVrOGeFSIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNQ==", "bodyText": "Minor suggestion:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {\n          \n          \n            \n                  if (overriddenTransform.getNeedsAttributes() || overriddenTransform.getNeedsMessageId()) {", "url": "https://github.com/apache/beam/pull/11873#discussion_r434188515", "createdAt": "2020-06-02T21:34:09Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "diffHunk": "@@ -1353,14 +1353,14 @@ public void translate(StreamingPubsubIORead transform, TranslationContext contex\n             PropertyNames.PUBSUB_ID_ATTRIBUTE, overriddenTransform.getIdAttribute());\n       }\n       // In both cases, the transform needs to read PubsubMessage. However, in case it needs\n-      // the attributes, we supply an identity \"parse fn\" so the worker will read PubsubMessage's\n-      // from Windmill and simply pass them around; and in case it doesn't need attributes,\n-      // we're already implicitly using a \"Coder\" that interprets the data as a PubsubMessage's\n-      // payload.\n-      if (overriddenTransform.getNeedsAttributes()) {\n+      // the attributes or messageId, we supply an identity \"parse fn\" so the worker will\n+      // read PubsubMessage's from Windmill and simply pass them around; and in case it\n+      // doesn't need attributes, we're already implicitly using a \"Coder\" that interprets\n+      // the data as a PubsubMessage's payload.\n+      if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NzAyNg==", "bodyText": "Other then this change, this  looks good to me. We'll see what the tests have to say.", "url": "https://github.com/apache/beam/pull/11873#discussion_r434197026", "createdAt": "2020-06-02T21:54:29Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java", "diffHunk": "@@ -1353,14 +1353,14 @@ public void translate(StreamingPubsubIORead transform, TranslationContext contex\n             PropertyNames.PUBSUB_ID_ATTRIBUTE, overriddenTransform.getIdAttribute());\n       }\n       // In both cases, the transform needs to read PubsubMessage. However, in case it needs\n-      // the attributes, we supply an identity \"parse fn\" so the worker will read PubsubMessage's\n-      // from Windmill and simply pass them around; and in case it doesn't need attributes,\n-      // we're already implicitly using a \"Coder\" that interprets the data as a PubsubMessage's\n-      // payload.\n-      if (overriddenTransform.getNeedsAttributes()) {\n+      // the attributes or messageId, we supply an identity \"parse fn\" so the worker will\n+      // read PubsubMessage's from Windmill and simply pass them around; and in case it\n+      // doesn't need attributes, we're already implicitly using a \"Coder\" that interprets\n+      // the data as a PubsubMessage's payload.\n+      if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNQ=="}, "originalCommit": {"oid": "5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3744, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}