{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTI5NTAy", "number": 11196, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowMTo1OFrODryp_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowMTo1OFrODryp_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjQ1MzExOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/typehints/schemas.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowMTo1OFrOF8WFaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMDozNToyNFrOF8fTHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMDcxNQ==", "bodyText": "Does it makes sense to memoize this?", "url": "https://github.com/apache/beam/pull/11196#discussion_r398820715", "createdAt": "2020-03-26T19:01:58Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -205,6 +218,11 @@ def typing_from_runner_api(fieldtype_proto):\n     pass  # TODO\n \n \n+def _hydrate_namedtuple_instance(encoded_schema, values):\n+  return named_tuple_from_schema(\n+      proto_utils.parse_Bytes(encoded_schema, schema_pb2.Schema))(*values)\n+\n+\n def named_tuple_from_schema(schema):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96af8e48864a24865f27656b856a1ee401057dad"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTA2OQ==", "bodyText": "It's effectively memoized with SCHEMA_REGISTRY inside typing_from_runner_api. We could short-circuit it here as well though", "url": "https://github.com/apache/beam/pull/11196#discussion_r398895069", "createdAt": "2020-03-26T21:10:46Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -205,6 +218,11 @@ def typing_from_runner_api(fieldtype_proto):\n     pass  # TODO\n \n \n+def _hydrate_namedtuple_instance(encoded_schema, values):\n+  return named_tuple_from_schema(\n+      proto_utils.parse_Bytes(encoded_schema, schema_pb2.Schema))(*values)\n+\n+\n def named_tuple_from_schema(schema):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMDcxNQ=="}, "originalCommit": {"oid": "96af8e48864a24865f27656b856a1ee401057dad"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTY3Nw==", "bodyText": "I went ahead and merged this, let me know if you think this should be tweaked and I can do it separately.", "url": "https://github.com/apache/beam/pull/11196#discussion_r398971677", "createdAt": "2020-03-27T00:35:24Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -205,6 +218,11 @@ def typing_from_runner_api(fieldtype_proto):\n     pass  # TODO\n \n \n+def _hydrate_namedtuple_instance(encoded_schema, values):\n+  return named_tuple_from_schema(\n+      proto_utils.parse_Bytes(encoded_schema, schema_pb2.Schema))(*values)\n+\n+\n def named_tuple_from_schema(schema):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMDcxNQ=="}, "originalCommit": {"oid": "96af8e48864a24865f27656b856a1ee401057dad"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1475, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}