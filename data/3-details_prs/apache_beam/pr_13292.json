{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MjIwOTYx", "number": 13292, "title": "[BEAM-10475]Add WithShardedKey variation of GroupIntoBatches transform in Python SDK.", "bodyText": "The added variation of transform accepts the same parameters as the existing transform but output iterables with ShardedKey ,  See #13208 for changes for Java SDK.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-11-10T05:26:40Z", "url": "https://github.com/apache/beam/pull/13292", "merged": true, "mergeCommit": {"oid": "532b024438538fe673ba46d43122de991931da20"}, "closed": true, "closedAt": "2020-11-19T00:29:06Z", "author": {"login": "nehsyc"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbCdqaAH2gAyNTE4MjIwOTYxOmViNGYwNTdiZDIxMTExZDdhMzlkNGFmMWFlZjU2ZjhlNzZjNTNhZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddzMJgAFqTUzMzc5NTg2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eb4f057bd21111d7a39d4af1aef56f8e76c53afb", "author": {"user": {"login": "nehsyc", "name": "Siyuan Chen"}}, "url": "https://github.com/apache/beam/commit/eb4f057bd21111d7a39d4af1aef56f8e76c53afb", "committedDate": "2020-11-10T05:25:24Z", "message": "Add withShardedKey option to GroupIntoBatches transform in Python SSDK."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTQxMzkx", "url": "https://github.com/apache/beam/pull/13292#pullrequestreview-532941391", "createdAt": "2020-11-18T01:18:12Z", "commit": {"oid": "eb4f057bd21111d7a39d4af1aef56f8e76c53afb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMToxODoxMlrOH1SB0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMToyMzowOVrOH1SIFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzMTk1NA==", "bodyText": "Should this be tagged experimental similar to the Java change?", "url": "https://github.com/apache/beam/pull/13292#discussion_r525631954", "createdAt": "2020-11-18T01:18:12Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/transforms/util.py", "diffHunk": "@@ -780,6 +783,48 @@ def expand(self, pcoll):\n             self.max_buffering_duration_secs,\n             self.clock))\n \n+  @typehints.with_input_types(Tuple[K, V])\n+  @typehints.with_output_types(Tuple[K, Iterable[V]])\n+  class WithShardedKey(PTransform):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4f057bd21111d7a39d4af1aef56f8e76c53afb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzMjA4OQ==", "bodyText": "How does this work? When/how runner does this load balancing?", "url": "https://github.com/apache/beam/pull/13292#discussion_r525632089", "createdAt": "2020-11-18T01:18:37Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/transforms/util.py", "diffHunk": "@@ -780,6 +783,48 @@ def expand(self, pcoll):\n             self.max_buffering_duration_secs,\n             self.clock))\n \n+  @typehints.with_input_types(Tuple[K, V])\n+  @typehints.with_output_types(Tuple[K, Iterable[V]])\n+  class WithShardedKey(PTransform):\n+    \"\"\"A GroupIntoBatches transform that outputs batched elements associated\n+    with sharded input keys.\n+\n+    The sharding is determined by the runner to balance the load during the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4f057bd21111d7a39d4af1aef56f8e76c53afb"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzMzMwNA==", "bodyText": "Why is the process id needed?\nNote that there is only 1 python process per container, and since all containers start the same way it is very likely that pid for each python process in their own containers might even be the same.\nIf you need to distinguish per worker, you may need some concept of worker id (which does not exist in Beam).", "url": "https://github.com/apache/beam/pull/13292#discussion_r525633304", "createdAt": "2020-11-18T01:22:15Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/transforms/util.py", "diffHunk": "@@ -780,6 +783,48 @@ def expand(self, pcoll):\n             self.max_buffering_duration_secs,\n             self.clock))\n \n+  @typehints.with_input_types(Tuple[K, V])\n+  @typehints.with_output_types(Tuple[K, Iterable[V]])\n+  class WithShardedKey(PTransform):\n+    \"\"\"A GroupIntoBatches transform that outputs batched elements associated\n+    with sharded input keys.\n+\n+    The sharding is determined by the runner to balance the load during the\n+    execution time. By default, it spreads the input elements with the same key\n+    to all available threads executing the transform.\n+    \"\"\"\n+    def __init__(self, batch_size, max_buffering_duration_secs=None):\n+      \"\"\"Create a new GroupIntoBatches.WithShardedKey.\n+\n+      Arguments:\n+        batch_size: (required) How many elements should be in a batch\n+        max_buffering_duration_secs: (optional) How long in seconds at most an\n+          incomplete batch of elements is allowed to be buffered in the states.\n+          The duration must be a positive second duration and should be given as\n+          an int or float.\n+      \"\"\"\n+      self.batch_size = batch_size\n+\n+      if max_buffering_duration_secs is not None:\n+        assert max_buffering_duration_secs > 0, (\n+            'max buffering duration should be a positive value')\n+      self.max_buffering_duration_secs = max_buffering_duration_secs\n+\n+    _pid = os.getpid()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4f057bd21111d7a39d4af1aef56f8e76c53afb"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzMzU1Nw==", "bodyText": "Maybe use key_value instead of x ?", "url": "https://github.com/apache/beam/pull/13292#discussion_r525633557", "createdAt": "2020-11-18T01:23:09Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/transforms/util.py", "diffHunk": "@@ -780,6 +783,48 @@ def expand(self, pcoll):\n             self.max_buffering_duration_secs,\n             self.clock))\n \n+  @typehints.with_input_types(Tuple[K, V])\n+  @typehints.with_output_types(Tuple[K, Iterable[V]])\n+  class WithShardedKey(PTransform):\n+    \"\"\"A GroupIntoBatches transform that outputs batched elements associated\n+    with sharded input keys.\n+\n+    The sharding is determined by the runner to balance the load during the\n+    execution time. By default, it spreads the input elements with the same key\n+    to all available threads executing the transform.\n+    \"\"\"\n+    def __init__(self, batch_size, max_buffering_duration_secs=None):\n+      \"\"\"Create a new GroupIntoBatches.WithShardedKey.\n+\n+      Arguments:\n+        batch_size: (required) How many elements should be in a batch\n+        max_buffering_duration_secs: (optional) How long in seconds at most an\n+          incomplete batch of elements is allowed to be buffered in the states.\n+          The duration must be a positive second duration and should be given as\n+          an int or float.\n+      \"\"\"\n+      self.batch_size = batch_size\n+\n+      if max_buffering_duration_secs is not None:\n+        assert max_buffering_duration_secs > 0, (\n+            'max buffering duration should be a positive value')\n+      self.max_buffering_duration_secs = max_buffering_duration_secs\n+\n+    _pid = os.getpid()\n+\n+    def expand(self, pcoll):\n+      sharded_pcoll = pcoll | Map(\n+          lambda x: (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4f057bd21111d7a39d4af1aef56f8e76c53afb"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8049676915563b3d38ae54b7bd833b98ebe3637c", "author": {"user": {"login": "nehsyc", "name": "Siyuan Chen"}}, "url": "https://github.com/apache/beam/commit/8049676915563b3d38ae54b7bd833b98ebe3637c", "committedDate": "2020-11-18T06:26:01Z", "message": "fix ShardedKey hash function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d28d4dd619fdfa008e5a25b5db5adc34035a0cc7", "author": {"user": {"login": "nehsyc", "name": "Siyuan Chen"}}, "url": "https://github.com/apache/beam/commit/d28d4dd619fdfa008e5a25b5db5adc34035a0cc7", "committedDate": "2020-11-18T18:06:59Z", "message": "Change pid to uuid; address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8416e82836a4c30af5b72baab1786fbab219b9f5", "author": {"user": {"login": "nehsyc", "name": "Siyuan Chen"}}, "url": "https://github.com/apache/beam/commit/8416e82836a4c30af5b72baab1786fbab219b9f5", "committedDate": "2020-11-18T17:58:55Z", "message": "Change pid to uuid; address comments"}, "afterCommit": {"oid": "d28d4dd619fdfa008e5a25b5db5adc34035a0cc7", "author": {"user": {"login": "nehsyc", "name": "Siyuan Chen"}}, "url": "https://github.com/apache/beam/commit/d28d4dd619fdfa008e5a25b5db5adc34035a0cc7", "committedDate": "2020-11-18T18:06:59Z", "message": "Change pid to uuid; address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2c96163afb80b90c5fd0024688241aa1be5c01e", "author": {"user": {"login": "nehsyc", "name": "Siyuan Chen"}}, "url": "https://github.com/apache/beam/commit/e2c96163afb80b90c5fd0024688241aa1be5c01e", "committedDate": "2020-11-18T18:44:12Z", "message": "Change documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzk1ODY2", "url": "https://github.com/apache/beam/pull/13292#pullrequestreview-533795866", "createdAt": "2020-11-18T19:19:28Z", "commit": {"oid": "e2c96163afb80b90c5fd0024688241aa1be5c01e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4751, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}