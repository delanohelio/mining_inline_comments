{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzMxMTQy", "number": 12500, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNzo0NVrOEWTIlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozODozNlrOEWTJog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODE3NjIzOnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNzo0NVrOG9iT3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODoyMTo1M1rOG9jnOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODQ2Mw==", "bodyText": "This check is a bit confusing. Why use super's equal to check an object of current class?\nSomething like super.equals((super) o) makes more sense (just pseudo code)", "url": "https://github.com/apache/beam/pull/12500#discussion_r467178463", "createdAt": "2020-08-07T17:37:45Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -110,6 +111,26 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     public void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n       writer.literal(\"DATETIME '\" + timestampString.toString() + \"'\");\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass()) {\n+        return false;\n+      }\n+      if (!super.equals(o)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ab31ede76a47275c10e26c020af9faeb5f4080a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5Mjk4Mw==", "bodyText": "Ah so this comes from #12348?", "url": "https://github.com/apache/beam/pull/12500#discussion_r467192983", "createdAt": "2020-08-07T18:07:23Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -110,6 +111,26 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     public void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n       writer.literal(\"DATETIME '\" + timestampString.toString() + \"'\");\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass()) {\n+        return false;\n+      }\n+      if (!super.equals(o)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODQ2Mw=="}, "originalCommit": {"oid": "0ab31ede76a47275c10e26c020af9faeb5f4080a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5OTgwMg==", "bodyText": "This was just automatically generated by IntelliJ", "url": "https://github.com/apache/beam/pull/12500#discussion_r467199802", "createdAt": "2020-08-07T18:21:53Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -110,6 +111,26 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     public void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n       writer.literal(\"DATETIME '\" + timestampString.toString() + \"'\");\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass()) {\n+        return false;\n+      }\n+      if (!super.equals(o)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODQ2Mw=="}, "originalCommit": {"oid": "0ab31ede76a47275c10e26c020af9faeb5f4080a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODE3ODkwOnYy", "diffSide": "RIGHT", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozODozNlrOG9iVkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMToxMjoyMFrOG9n9Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODg5Ng==", "bodyText": "@ZijieSong946 This class is a good candidate for AutoValue to eliminate this boilerplate.\n(This got missed in #12348 because it was merged without a Jenkins run. cc: @robinyqiu )", "url": "https://github.com/apache/beam/pull/12500#discussion_r467178896", "createdAt": "2020-08-07T17:38:36Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -110,6 +111,26 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     public void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n       writer.literal(\"DATETIME '\" + timestampString.toString() + \"'\");\n     }\n+\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ab31ede76a47275c10e26c020af9faeb5f4080a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzMDc3MA==", "bodyText": "Ah, my bad. I only run spotless and checkStyle locally but not spotBugs.", "url": "https://github.com/apache/beam/pull/12500#discussion_r467230770", "createdAt": "2020-08-07T19:31:00Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -110,6 +111,26 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     public void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n       writer.literal(\"DATETIME '\" + timestampString.toString() + \"'\");\n     }\n+\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODg5Ng=="}, "originalCommit": {"oid": "0ab31ede76a47275c10e26c020af9faeb5f4080a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MDkzMA==", "bodyText": "Got it. Thanks for fixing that.", "url": "https://github.com/apache/beam/pull/12500#discussion_r467270930", "createdAt": "2020-08-07T21:12:20Z", "author": {"login": "ZijieSong946"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -110,6 +111,26 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     public void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n       writer.literal(\"DATETIME '\" + timestampString.toString() + \"'\");\n     }\n+\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3ODg5Ng=="}, "originalCommit": {"oid": "0ab31ede76a47275c10e26c020af9faeb5f4080a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 872, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}