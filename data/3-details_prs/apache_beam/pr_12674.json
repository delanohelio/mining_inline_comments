{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzE4OTY4", "number": 12674, "title": "[BEAM-8258] basic metric feature for nexmark", "bodyText": "added beam-metric based performance monitoring\nperformance are logged to console after the query is done or canceled by nexmark suite\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-24T19:27:07Z", "url": "https://github.com/apache/beam/pull/12674", "merged": true, "mergeCommit": {"oid": "f3a8b5cf78065f0b7b37bb98b1dcbfdbf9596383"}, "closed": true, "closedAt": "2020-08-26T23:02:46Z", "author": {"login": "leiyiz"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCHrMgAH2gAyNDcyNzE4OTY4OmJiOWYyYWEwNGE2YmMxZjBmMGVkMDlmMDhmZmIzMTE4NzM4MzI4MDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCz7yogFqTQ3NjAyNDY0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb9f2aa04a6bc1f0f0ed09f08ffb311873832806", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/bb9f2aa04a6bc1f0f0ed09f08ffb311873832806", "committedDate": "2020-08-24T19:21:36Z", "message": "add metric feature to output the performance of pipeline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c7eeb5362bb6e4c8acb5f3acbfa98450e5c37b1", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/8c7eeb5362bb6e4c8acb5f3acbfa98450e5c37b1", "committedDate": "2020-08-24T19:35:59Z", "message": "changes for formatting and 2.7 compatability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODI3NzI3", "url": "https://github.com/apache/beam/pull/12674#pullrequestreview-473827727", "createdAt": "2020-08-24T20:21:35Z", "commit": {"oid": "8c7eeb5362bb6e4c8acb5f3acbfa98450e5c37b1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDoyMTozNVrOHF03Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDoyNjozMlrOHF1BcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3MTAyMg==", "bodyText": "Add a documentation on the parameters and the monitored metrics.", "url": "https://github.com/apache/beam/pull/12674#discussion_r475871022", "createdAt": "2020-08-24T20:21:35Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/monitor.py", "diffHunk": "@@ -0,0 +1,48 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import absolute_import\n+\n+from time import time\n+\n+import apache_beam as beam\n+from apache_beam.metrics import Metrics\n+from apache_beam.testing.benchmarks.nexmark.nexmark_util import MonitorSuffix\n+\n+\n+class Monitor(object):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c7eeb5362bb6e4c8acb5f3acbfa98450e5c37b1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3MTQ0Nw==", "bodyText": "can we put this into Monitor class", "url": "https://github.com/apache/beam/pull/12674#discussion_r475871447", "createdAt": "2020-08-24T20:22:20Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/nexmark_util.py", "diffHunk": "@@ -192,6 +194,11 @@ def expand(self, pcoll):\n         | \"Log\" >> beam.Map(log_count_info))\n \n \n+class MonitorSuffix:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c7eeb5362bb6e4c8acb5f3acbfa98450e5c37b1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3MzY0OA==", "bodyText": "ValueError is normally used to say the function argument being passed is invalid, I think we can use RuntimeError instead.", "url": "https://github.com/apache/beam/pull/12674#discussion_r475873648", "createdAt": "2020-08-24T20:26:32Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/nexmark_util.py", "diffHunk": "@@ -221,5 +228,34 @@ def unnest_to_json(cand):\n \n \n def millis_to_timestamp(millis):\n+  # type: (int) -> Timestamp\n   micro_second = millis * 1000\n   return Timestamp(micros=micro_second)\n+\n+\n+def get_counter_metric(result, namespace, name):\n+  # type: (PipelineResult, str, str) -> int\n+  metrics = result.metrics().query(\n+      MetricsFilter().with_namespace(namespace).with_name(name))\n+  counters = metrics['counters']\n+  if len(counters) > 1:\n+    raise ValueError(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c7eeb5362bb6e4c8acb5f3acbfa98450e5c37b1"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0668d464a223a27c0c3a84384cca9866da9187ca", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/0668d464a223a27c0c3a84384cca9866da9187ca", "committedDate": "2020-08-24T23:01:41Z", "message": "code review issue resolve"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTIzNDMy", "url": "https://github.com/apache/beam/pull/12674#pullrequestreview-474923432", "createdAt": "2020-08-25T21:23:45Z", "commit": {"oid": "0668d464a223a27c0c3a84384cca9866da9187ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToyMzo0NVrOHGqYfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToyMzo0NVrOHGqYfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0NzkwMg==", "bodyText": "The reason we collect the event_time metric is to know the start and end time of certain processing, right? If so, we only care about the beginning, and the end, right?\nUpdating metrics are a bit of a slow operation to perform (not incredibly slow, but since this DoFn does nothing else), I think it may be a good idea to perform these updates in finish_bundle and start_bundle (for event_time, update only when the bundle started and ended, and for event_count, you can keep a member variable that counts the number of elements per bundle\ne.g.:\nstart_bundle(self):\n  self.element_counter = 0\n  self.event_time.update(now)\nprocess(self, elm):\n  self.element_counter += 1\n  yield elm\nfinish_bundle(self):\n  self.event_time.update(now)\n  self.element_count.inc(self.element_counter)\n\nwdyt?", "url": "https://github.com/apache/beam/pull/12674#discussion_r476747902", "createdAt": "2020-08-25T21:23:45Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/monitor.py", "diffHunk": "@@ -0,0 +1,59 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import absolute_import\n+\n+from time import time\n+\n+import apache_beam as beam\n+from apache_beam.metrics import Metrics\n+\n+\n+class Monitor(object):\n+  \"\"\"\n+  A monitor of elements with support for later retrieving their metrics\n+\n+  monitor objects contains a doFn to record metrics\n+\n+  Args:\n+    namespace: the namespace all metrics within this Monitor uses\n+    name_prefix: a prefix for this Monitor's metrics' names, intended to\n+      be unique in per-monitor basis in pipeline\n+  \"\"\"\n+  def __init__(self, namespace, name_prefix):\n+    # type: (str, str) -> None\n+    self.namespace = namespace\n+    self.name_prefix = name_prefix\n+    self.doFn = MonitorDoFn(namespace, name_prefix)\n+\n+\n+class MonitorDoFn(beam.DoFn):\n+  def __init__(self, namespace, prefix):\n+    self.element_count = Metrics.counter(\n+        namespace, prefix + MonitorSuffix.ELEMENT_COUNTER)\n+    self.event_time = Metrics.distribution(\n+        namespace, prefix + MonitorSuffix.EVENT_TIME)\n+\n+  def process(self, element):\n+    self.element_count.inc()\n+    self.event_time.update(int(time() * 1000))\n+    yield element", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0668d464a223a27c0c3a84384cca9866da9187ca"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7a7ca79bdf196ef9970ab2b7ba6bc5e1fedfb19", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/f7a7ca79bdf196ef9970ab2b7ba6bc5e1fedfb19", "committedDate": "2020-08-26T22:13:32Z", "message": "put wall-clock recording into start and finish of bundle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MDI0NjQ0", "url": "https://github.com/apache/beam/pull/12674#pullrequestreview-476024644", "createdAt": "2020-08-26T22:55:33Z", "commit": {"oid": "f7a7ca79bdf196ef9970ab2b7ba6bc5e1fedfb19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4894, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}