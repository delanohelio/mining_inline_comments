{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1OTk4NDgy", "number": 11464, "title": "[BEAM-9147] Make VideoIntelligence use PTransform on user-facing API", "bodyText": "After the remark in #11261 I modified the code to be in line with the PTransform creation guide.\nThanks, @jkff for your keen eye!\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-20T11:17:14Z", "url": "https://github.com/apache/beam/pull/11464", "merged": true, "mergeCommit": {"oid": "068d96155630973cc3d682240e4e007a7ea4ad71"}, "closed": true, "closedAt": "2020-04-29T07:02:45Z", "author": {"login": "mwalenia"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZpBGhAFqTM5NjkxNDk5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbqwzCgBqjMyNzQ1MzA5MTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTE0OTk2", "url": "https://github.com/apache/beam/pull/11464#pullrequestreview-396914996", "createdAt": "2020-04-21T00:50:19Z", "commit": {"oid": "dcc6dbd54edafafc6cbf4e8b7990bc31c0d3e185"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDo1MDoxOVrOGItn7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDo1NTo0NFrOGItvMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4OTI5NQ==", "bodyText": "PTransforms should almost never need inheritance; based on the usage of this class, it's not needed here either - the current base class serves only the purpose of storing configuration variables, but contains no functionality - these variables can just be packaged into a configuration object, and current subclasses of AnnotateVideo can derive from PTransform directly and each store this configuration object.\nEven if you decide to keep using inheritance, please at least make this class non-public.", "url": "https://github.com/apache/beam/pull/11464#discussion_r411789295", "createdAt": "2020-04-21T00:50:19Z", "author": {"login": "jkff"}, "path": "sdks/java/extensions/ml/src/main/java/org/apache/beam/sdk/extensions/ml/AnnotateVideo.java", "diffHunk": "@@ -17,87 +17,44 @@\n  */\n package org.apache.beam.sdk.extensions.ml;\n \n-import com.google.api.gax.longrunning.OperationFuture;\n-import com.google.cloud.videointelligence.v1.AnnotateVideoProgress;\n-import com.google.cloud.videointelligence.v1.AnnotateVideoRequest;\n-import com.google.cloud.videointelligence.v1.AnnotateVideoResponse;\n import com.google.cloud.videointelligence.v1.Feature;\n import com.google.cloud.videointelligence.v1.VideoAnnotationResults;\n import com.google.cloud.videointelligence.v1.VideoContext;\n-import com.google.cloud.videointelligence.v1.VideoIntelligenceServiceClient;\n-import com.google.protobuf.ByteString;\n-import java.io.IOException;\n import java.util.List;\n import java.util.Map;\n-import java.util.concurrent.ExecutionException;\n-import org.apache.beam.sdk.transforms.DoFn;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PCollection;\n import org.apache.beam.sdk.values.PCollectionView;\n \n /**\n- * Base class for Video Intelligence transform.\n+ * Base class for VideoIntelligence PTransform.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc6dbd54edafafc6cbf4e8b7990bc31c0d3e185"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc5MTE1Mw==", "bodyText": "Should this be in @Setup instead?", "url": "https://github.com/apache/beam/pull/11464#discussion_r411791153", "createdAt": "2020-04-21T00:55:44Z", "author": {"login": "jkff"}, "path": "sdks/java/extensions/ml/src/main/java/org/apache/beam/sdk/extensions/ml/AnnotateVideoFn.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.ml;\n+\n+import com.google.api.gax.longrunning.OperationFuture;\n+import com.google.cloud.videointelligence.v1.AnnotateVideoProgress;\n+import com.google.cloud.videointelligence.v1.AnnotateVideoRequest;\n+import com.google.cloud.videointelligence.v1.AnnotateVideoResponse;\n+import com.google.cloud.videointelligence.v1.Feature;\n+import com.google.cloud.videointelligence.v1.VideoAnnotationResults;\n+import com.google.cloud.videointelligence.v1.VideoContext;\n+import com.google.cloud.videointelligence.v1.VideoIntelligenceServiceClient;\n+import com.google.protobuf.ByteString;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.transforms.DoFn;\n+import org.apache.beam.sdk.values.PCollectionView;\n+\n+/**\n+ * Base class for DoFns used in VideoIntelligence transforms.\n+ *\n+ * @param <T> Class of input data being passed in - either ByteString - video data encoded into.\n+ *     String or String - a GCS URI of the video to be annotated.\n+ */\n+@Experimental\n+abstract class AnnotateVideoFn<T> extends DoFn<T, List<VideoAnnotationResults>> {\n+\n+  protected final PCollectionView<Map<T, VideoContext>> contextSideInput;\n+  protected final List<Feature> featureList;\n+  VideoIntelligenceServiceClient videoIntelligenceServiceClient;\n+\n+  public AnnotateVideoFn(\n+      PCollectionView<Map<T, VideoContext>> contextSideInput, List<Feature> featureList) {\n+    this.contextSideInput = contextSideInput;\n+    this.featureList = featureList;\n+  }\n+\n+  public AnnotateVideoFn(List<Feature> featureList) {\n+    contextSideInput = null;\n+    this.featureList = featureList;\n+  }\n+\n+  @StartBundle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc6dbd54edafafc6cbf4e8b7990bc31c0d3e185"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NDQ1MTI1", "url": "https://github.com/apache/beam/pull/11464#pullrequestreview-397445125", "createdAt": "2020-04-21T15:27:05Z", "commit": {"oid": "4fe0d53f289978caf15b4a440c18769464f4d648"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "610e18fd76e6399ccf7a0a38ff480de1a3e63aab", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/610e18fd76e6399ccf7a0a38ff480de1a3e63aab", "committedDate": "2020-04-27T08:11:11Z", "message": "[BEAM-9147] Make VideoIntelligence use PTransform on user-facing API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe777c202df0173889fbfc0687e577876e9756e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/abe777c202df0173889fbfc0687e577876e9756e", "committedDate": "2020-04-27T08:11:11Z", "message": "Add position to CHANGES.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8baca4a31544deac46068d4fbc3a08c03dc8eeb", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d8baca4a31544deac46068d4fbc3a08c03dc8eeb", "committedDate": "2020-04-27T08:11:11Z", "message": "Remove abstract AnnotateVideo PTransform"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fe0d53f289978caf15b4a440c18769464f4d648", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4fe0d53f289978caf15b4a440c18769464f4d648", "committedDate": "2020-04-21T12:39:59Z", "message": "Remove abstract AnnotateVideo PTransform"}, "afterCommit": {"oid": "d8baca4a31544deac46068d4fbc3a08c03dc8eeb", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d8baca4a31544deac46068d4fbc3a08c03dc8eeb", "committedDate": "2020-04-27T08:11:11Z", "message": "Remove abstract AnnotateVideo PTransform"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4320, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}