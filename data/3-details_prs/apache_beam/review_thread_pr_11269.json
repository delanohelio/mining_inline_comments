{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTY2MzY5", "number": 11269, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjo1NDozOVrODuJc5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjo1NTozNlrODuJdsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzE1OTQzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjo1NDozOVrOF__VKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxMzoyMVrOGAB1Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjIxNw==", "bodyText": "Clever, but a bit dangreous.", "url": "https://github.com/apache/beam/pull/11269#discussion_r402642217", "createdAt": "2020-04-02T22:54:39Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "diffHunk": "@@ -38,9 +38,12 @@\n # Mock runners to use for validations.\n class MockRunners(object):\n   class DataflowRunner(object):\n-    pass\n+    def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0NDM2OQ==", "bodyText": "We could also just add --region to all the tests if you would prefer.", "url": "https://github.com/apache/beam/pull/11269#discussion_r402644369", "createdAt": "2020-04-02T23:00:33Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "diffHunk": "@@ -38,9 +38,12 @@\n # Mock runners to use for validations.\n class MockRunners(object):\n   class DataflowRunner(object):\n-    pass\n+    def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjIxNw=="}, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzE3NQ==", "bodyText": "Not really. I like your solution better.", "url": "https://github.com/apache/beam/pull/11269#discussion_r402683175", "createdAt": "2020-04-03T01:13:21Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "diffHunk": "@@ -38,9 +38,12 @@\n # Mock runners to use for validations.\n class MockRunners(object):\n   class DataflowRunner(object):\n-    pass\n+    def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjIxNw=="}, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzE2MTQ0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjo1NTozNlrOF__WeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1NDowOVrOGAWfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjU1Mg==", "bodyText": "Do we test this method? (Tests all seemingly overwrite it.)", "url": "https://github.com/apache/beam/pull/11269#discussion_r402642552", "createdAt": "2020-04-02T22:55:36Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -1396,6 +1399,36 @@ def json_string_to_byte_array(encoded_string):\n     \"\"\"Implements org.apache.beam.sdk.util.StringUtils.jsonStringToByteArray.\"\"\"\n     return unquote_to_bytes(encoded_string)\n \n+  def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0NDU5Ng==", "bodyText": "We test the Java equivalent, but not Python. I suppose we should.", "url": "https://github.com/apache/beam/pull/11269#discussion_r402644596", "createdAt": "2020-04-02T23:01:14Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -1396,6 +1399,36 @@ def json_string_to_byte_array(encoded_string):\n     \"\"\"Implements org.apache.beam.sdk.util.StringUtils.jsonStringToByteArray.\"\"\"\n     return unquote_to_bytes(encoded_string)\n \n+  def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjU1Mg=="}, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzIyMA==", "bodyText": "I think we should, if we can.", "url": "https://github.com/apache/beam/pull/11269#discussion_r402683220", "createdAt": "2020-04-03T01:13:30Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -1396,6 +1399,36 @@ def json_string_to_byte_array(encoded_string):\n     \"\"\"Implements org.apache.beam.sdk.util.StringUtils.jsonStringToByteArray.\"\"\"\n     return unquote_to_bytes(encoded_string)\n \n+  def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjU1Mg=="}, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyMTcyMA==", "bodyText": "Added some unit tests, PTAL.", "url": "https://github.com/apache/beam/pull/11269#discussion_r403021720", "createdAt": "2020-04-03T13:54:09Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -1396,6 +1399,36 @@ def json_string_to_byte_array(encoded_string):\n     \"\"\"Implements org.apache.beam.sdk.util.StringUtils.jsonStringToByteArray.\"\"\"\n     return unquote_to_bytes(encoded_string)\n \n+  def get_default_gcp_region(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0MjU1Mg=="}, "originalCommit": {"oid": "16b86f210b6d38e2c6a992f4fa26472052cbb94b"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1574, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}