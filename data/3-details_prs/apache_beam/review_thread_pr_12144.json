{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzkxMDMw", "number": 12144, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzowMzowOVrOENFamA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzowMzowOVrOENFamA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTU1NjcyOnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzowMzowOVrOGvkmHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDo0OTozMlrOGvmZPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTgzOQ==", "bodyText": "Should this throw an exception? IIUC, this would most likely mean that a user-specified file to upload would fail, right? (classpath JAR files with equal names should have equal contents as they usually include version in their name)\nWouldn't it be best to error out, and inform the use about that?", "url": "https://github.com/apache/beam/pull/12144#discussion_r452535839", "createdAt": "2020-07-09T23:03:09Z", "author": {"login": "pabloem"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "diffHunk": "@@ -311,8 +315,26 @@ public DataflowPackage stageToFile(\n       CompletionStage<StagingResult> stagingResult =\n           computePackageAttributes(source, hash, dest, stagingPath)\n               .thenComposeAsync(\n-                  packageAttributes ->\n-                      stagePackage(packageAttributes, retrySleeper, createOptions));\n+                  packageAttributes -> {\n+                    String destLocation = packageAttributes.getDestination().getLocation();\n+                    String existingHash =\n+                        distinctDestinations.putIfAbsent(destLocation, packageAttributes.getHash());\n+                    if (existingHash == null) {\n+                      return stagePackage(packageAttributes, retrySleeper, createOptions);\n+                    } else {\n+                      if (!existingHash.equals(packageAttributes.getHash())) {\n+                        LOG.warn(\n+                            \"Upload of {} would overwrite {} with different content\",\n+                            packageAttributes.getSource(),\n+                            destLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c544cbac5c3d8edd372792648855348091ea6210"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNjI0Mg==", "bodyText": "I'm cool with either way.  I left it like this because in the past it wouldn't be an error, they'd just end up with possibly unexpected results.", "url": "https://github.com/apache/beam/pull/12144#discussion_r452536242", "createdAt": "2020-07-09T23:04:33Z", "author": {"login": "steveniemitz"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "diffHunk": "@@ -311,8 +315,26 @@ public DataflowPackage stageToFile(\n       CompletionStage<StagingResult> stagingResult =\n           computePackageAttributes(source, hash, dest, stagingPath)\n               .thenComposeAsync(\n-                  packageAttributes ->\n-                      stagePackage(packageAttributes, retrySleeper, createOptions));\n+                  packageAttributes -> {\n+                    String destLocation = packageAttributes.getDestination().getLocation();\n+                    String existingHash =\n+                        distinctDestinations.putIfAbsent(destLocation, packageAttributes.getHash());\n+                    if (existingHash == null) {\n+                      return stagePackage(packageAttributes, retrySleeper, createOptions);\n+                    } else {\n+                      if (!existingHash.equals(packageAttributes.getHash())) {\n+                        LOG.warn(\n+                            \"Upload of {} would overwrite {} with different content\",\n+                            packageAttributes.getSource(),\n+                            destLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTgzOQ=="}, "originalCommit": {"oid": "c544cbac5c3d8edd372792648855348091ea6210"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0OTY3Ng==", "bodyText": "Two files should not have a same destination in the first place. They are deduplicated by postfixing hash when dependency information is created: https://github.com/apache/beam/blob/master/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Environments.java#L320", "url": "https://github.com/apache/beam/pull/12144#discussion_r452549676", "createdAt": "2020-07-09T23:48:42Z", "author": {"login": "ihji"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "diffHunk": "@@ -311,8 +315,26 @@ public DataflowPackage stageToFile(\n       CompletionStage<StagingResult> stagingResult =\n           computePackageAttributes(source, hash, dest, stagingPath)\n               .thenComposeAsync(\n-                  packageAttributes ->\n-                      stagePackage(packageAttributes, retrySleeper, createOptions));\n+                  packageAttributes -> {\n+                    String destLocation = packageAttributes.getDestination().getLocation();\n+                    String existingHash =\n+                        distinctDestinations.putIfAbsent(destLocation, packageAttributes.getHash());\n+                    if (existingHash == null) {\n+                      return stagePackage(packageAttributes, retrySleeper, createOptions);\n+                    } else {\n+                      if (!existingHash.equals(packageAttributes.getHash())) {\n+                        LOG.warn(\n+                            \"Upload of {} would overwrite {} with different content\",\n+                            packageAttributes.getSource(),\n+                            destLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTgzOQ=="}, "originalCommit": {"oid": "c544cbac5c3d8edd372792648855348091ea6210"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1MTYyMw==", "bodyText": "Regarding my previous comment, I prefer failing the job instead of just printing out warnings when two files have a same staging destination.", "url": "https://github.com/apache/beam/pull/12144#discussion_r452551623", "createdAt": "2020-07-09T23:55:30Z", "author": {"login": "ihji"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "diffHunk": "@@ -311,8 +315,26 @@ public DataflowPackage stageToFile(\n       CompletionStage<StagingResult> stagingResult =\n           computePackageAttributes(source, hash, dest, stagingPath)\n               .thenComposeAsync(\n-                  packageAttributes ->\n-                      stagePackage(packageAttributes, retrySleeper, createOptions));\n+                  packageAttributes -> {\n+                    String destLocation = packageAttributes.getDestination().getLocation();\n+                    String existingHash =\n+                        distinctDestinations.putIfAbsent(destLocation, packageAttributes.getHash());\n+                    if (existingHash == null) {\n+                      return stagePackage(packageAttributes, retrySleeper, createOptions);\n+                    } else {\n+                      if (!existingHash.equals(packageAttributes.getHash())) {\n+                        LOG.warn(\n+                            \"Upload of {} would overwrite {} with different content\",\n+                            packageAttributes.getSource(),\n+                            destLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTgzOQ=="}, "originalCommit": {"oid": "c544cbac5c3d8edd372792648855348091ea6210"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1MzM1Mw==", "bodyText": "yeah good call, this can never be hit since the destination names will never be the same.  I'll just remove the dupe check completely.", "url": "https://github.com/apache/beam/pull/12144#discussion_r452553353", "createdAt": "2020-07-10T00:01:54Z", "author": {"login": "steveniemitz"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "diffHunk": "@@ -311,8 +315,26 @@ public DataflowPackage stageToFile(\n       CompletionStage<StagingResult> stagingResult =\n           computePackageAttributes(source, hash, dest, stagingPath)\n               .thenComposeAsync(\n-                  packageAttributes ->\n-                      stagePackage(packageAttributes, retrySleeper, createOptions));\n+                  packageAttributes -> {\n+                    String destLocation = packageAttributes.getDestination().getLocation();\n+                    String existingHash =\n+                        distinctDestinations.putIfAbsent(destLocation, packageAttributes.getHash());\n+                    if (existingHash == null) {\n+                      return stagePackage(packageAttributes, retrySleeper, createOptions);\n+                    } else {\n+                      if (!existingHash.equals(packageAttributes.getHash())) {\n+                        LOG.warn(\n+                            \"Upload of {} would overwrite {} with different content\",\n+                            packageAttributes.getSource(),\n+                            destLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTgzOQ=="}, "originalCommit": {"oid": "c544cbac5c3d8edd372792648855348091ea6210"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2NTMxMA==", "bodyText": "all set", "url": "https://github.com/apache/beam/pull/12144#discussion_r452565310", "createdAt": "2020-07-10T00:49:32Z", "author": {"login": "steveniemitz"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/util/PackageUtil.java", "diffHunk": "@@ -311,8 +315,26 @@ public DataflowPackage stageToFile(\n       CompletionStage<StagingResult> stagingResult =\n           computePackageAttributes(source, hash, dest, stagingPath)\n               .thenComposeAsync(\n-                  packageAttributes ->\n-                      stagePackage(packageAttributes, retrySleeper, createOptions));\n+                  packageAttributes -> {\n+                    String destLocation = packageAttributes.getDestination().getLocation();\n+                    String existingHash =\n+                        distinctDestinations.putIfAbsent(destLocation, packageAttributes.getHash());\n+                    if (existingHash == null) {\n+                      return stagePackage(packageAttributes, retrySleeper, createOptions);\n+                    } else {\n+                      if (!existingHash.equals(packageAttributes.getHash())) {\n+                        LOG.warn(\n+                            \"Upload of {} would overwrite {} with different content\",\n+                            packageAttributes.getSource(),\n+                            destLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTgzOQ=="}, "originalCommit": {"oid": "c544cbac5c3d8edd372792648855348091ea6210"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3417, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}