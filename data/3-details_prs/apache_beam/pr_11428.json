{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzOTcxMDM5", "number": 11428, "title": "[BEAM-9764] multi threading & optional pulling", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-15T20:24:07Z", "url": "https://github.com/apache/beam/pull/11428", "merged": true, "mergeCommit": {"oid": "4a7f04c5b8cfa8139c9335a8c05ac10abb5ac778"}, "closed": true, "closedAt": "2020-04-21T18:43:07Z", "author": {"login": "Hannah-Jiang"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX_a0PgBqjMyMzc0MjUxODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ4CDfgFqTM5NzU2ODkxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4e98f14a9d23ce26d0227fe59aba7c6f279258a", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/e4e98f14a9d23ce26d0227fe59aba7c6f279258a", "committedDate": "2020-04-15T20:23:40Z", "message": "fix failures"}, "afterCommit": {"oid": "3ea2eea21ade21c495b0ef7e99c4ad806150a734", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/3ea2eea21ade21c495b0ef7e99c4ad806150a734", "committedDate": "2020-04-15T21:59:23Z", "message": "add retries for URLError and set url='skip' when url cannot be identified"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46a34a8e7407f99b1211d53b63e6b1a7b88a58ba", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/46a34a8e7407f99b1211d53b63e6b1a7b88a58ba", "committedDate": "2020-04-16T08:16:08Z", "message": "fix"}, "afterCommit": {"oid": "e716a476917e9a78b820047d3e74dd812ced48ac", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/e716a476917e9a78b820047d3e74dd812ced48ac", "committedDate": "2020-04-16T22:11:45Z", "message": "add retries for URLError and set url='skip' when url cannot be identified"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7f211e6dab253decd6c0c08473464657b659115", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/f7f211e6dab253decd6c0c08473464657b659115", "committedDate": "2020-04-16T22:22:10Z", "message": "fix"}, "afterCommit": {"oid": "15998a3613c27dfd65e78cfa9ac669f7f82a43d5", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/15998a3613c27dfd65e78cfa9ac669f7f82a43d5", "committedDate": "2020-04-17T02:39:17Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15998a3613c27dfd65e78cfa9ac669f7f82a43d5", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/15998a3613c27dfd65e78cfa9ac669f7f82a43d5", "committedDate": "2020-04-17T02:39:17Z", "message": "multi threading & check urls instead of pulling"}, "afterCommit": {"oid": "88a5e5dd80c84bb996f1b51b27db19ccfd5672bf", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/88a5e5dd80c84bb996f1b51b27db19ccfd5672bf", "committedDate": "2020-04-17T02:43:58Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88a5e5dd80c84bb996f1b51b27db19ccfd5672bf", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/88a5e5dd80c84bb996f1b51b27db19ccfd5672bf", "committedDate": "2020-04-17T02:43:58Z", "message": "multi threading & check urls instead of pulling"}, "afterCommit": {"oid": "6185239b78fcaeb9f808473dde1c16a1bbea1ecc", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/6185239b78fcaeb9f808473dde1c16a1bbea1ecc", "committedDate": "2020-04-17T02:53:52Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6185239b78fcaeb9f808473dde1c16a1bbea1ecc", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/6185239b78fcaeb9f808473dde1c16a1bbea1ecc", "committedDate": "2020-04-17T02:53:52Z", "message": "multi threading & check urls instead of pulling"}, "afterCommit": {"oid": "bc723cc52d4f954d62a29070da02e6e8e36bdf0c", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/bc723cc52d4f954d62a29070da02e6e8e36bdf0c", "committedDate": "2020-04-17T02:59:01Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc723cc52d4f954d62a29070da02e6e8e36bdf0c", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/bc723cc52d4f954d62a29070da02e6e8e36bdf0c", "committedDate": "2020-04-17T02:59:01Z", "message": "multi threading & check urls instead of pulling"}, "afterCommit": {"oid": "94a5dbcba1eb48baba3859787789711dbcbf607b", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/94a5dbcba1eb48baba3859787789711dbcbf607b", "committedDate": "2020-04-17T03:14:00Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94a5dbcba1eb48baba3859787789711dbcbf607b", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/94a5dbcba1eb48baba3859787789711dbcbf607b", "committedDate": "2020-04-17T03:14:00Z", "message": "multi threading & check urls instead of pulling"}, "afterCommit": {"oid": "4401e4db083e3e191ca1f7e050a36596279f3718", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/4401e4db083e3e191ca1f7e050a36596279f3718", "committedDate": "2020-04-17T03:24:32Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/cf238c497bf65f9180d9ade5941102c8db4be219", "committedDate": "2020-04-17T03:29:53Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4401e4db083e3e191ca1f7e050a36596279f3718", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/4401e4db083e3e191ca1f7e050a36596279f3718", "committedDate": "2020-04-17T03:24:32Z", "message": "multi threading & check urls instead of pulling"}, "afterCommit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/cf238c497bf65f9180d9ade5941102c8db4be219", "committedDate": "2020-04-17T03:29:53Z", "message": "multi threading & check urls instead of pulling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjY3ODAx", "url": "https://github.com/apache/beam/pull/11428#pullrequestreview-395667801", "createdAt": "2020-04-17T18:07:23Z", "commit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODowNzoyM1rOGHYD3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODo1NDo1MFrOGHZhTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4NzQyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              # create an empty file to aviod no file/dir existing error\n          \n          \n            \n              # create an empty file to avoid no file/dir existing error", "url": "https://github.com/apache/beam/pull/11428#discussion_r410387421", "createdAt": "2020-04-17T18:07:23Z", "author": {"login": "udim"}, "path": "sdks/java/container/license_scripts/license_script.sh", "diffHunk": "@@ -25,15 +25,23 @@ pip install PyYAML==5.3\n pip install tenacity==5.0.4\n \n # pull licenses, notices and source code\n-python sdks/java/container/license_scripts/pull_licenses_java.py\n+if [ \"$1\" = 'true' ]; then\n+  python sdks/java/container/license_scripts/pull_licenses_java.py --pull_licenses\n+else\n+  python sdks/java/container/license_scripts/pull_licenses_java.py\n+fi\n \n pip uninstall -y beautifulsoup4\n pip uninstall -y future\n pip uninstall -y PyYAML\n pip uninstall -y tenacity\n \n mkdir sdks/java/container/third_party_licenses\n-gzip -r java_third_party_licenses/*\n-cp -r java_third_party_licenses/*.jar sdks/java/container/third_party_licenses/\n-cp -r java_third_party_licenses/*.csv.gz sdks/java/container/third_party_licenses/\n+if [ \"$1\" = 'true' ]; then\n+  cp -r java_third_party_licenses/*.jar sdks/java/container/third_party_licenses/\n+  cp -r java_third_party_licenses/*.csv sdks/java/container/third_party_licenses/\n+else\n+  # create an empty file to aviod no file/dir existing error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5MDE2NA==", "bodyText": "BTW, I wanted to mention that doing a pip install/uninstall like this messes with the user's environment.\nThe standard way to run this would be via tox (see sdks/python/tox.ini), which will take care of creating a virtualenv to run this under (and you can specify a certain python version if you wish).", "url": "https://github.com/apache/beam/pull/11428#discussion_r410390164", "createdAt": "2020-04-17T18:12:48Z", "author": {"login": "udim"}, "path": "sdks/java/container/license_scripts/license_script.sh", "diffHunk": "@@ -25,15 +25,23 @@ pip install PyYAML==5.3\n pip install tenacity==5.0.4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQwMzYyOA==", "bodyText": "This looks good, except you're not waiting for all threads to finish so the csv_list might be incomplete.\nA ThreadPoolExecutor would be useful here and do what you want:\nRough example:\nwith concurrent.futures.ThreadPoolExecutor(max_workers=THREADS) as executor:\n  futures = [executor.submit(execute, dep) for dep in dependencies['dependencies']]\n  ... # get the future results as they become available, see example link below\nhttps://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example\nCurrently the code in execute does csv_list.append(csv_dict) at the end, which needs synchronization to work right (I assume that csv_list is shared among threads). Returning csv_dict instead will make it available as a future.result().", "url": "https://github.com/apache/beam/pull/11428#discussion_r410403628", "createdAt": "2020-04-17T18:39:21Z", "author": {"login": "udim"}, "path": "sdks/java/container/license_scripts/pull_licenses_java.py", "diffHunk": "@@ -108,89 +244,27 @@ def write_to_csv(csv_dict):\n \n     maven_url_temp = 'https://repo1.maven.org/maven2/{module}/{version}'\n \n-    for dep in dependencies['dependencies']:\n-        '''\n-        An example of a Json blob.\n-        {\n-            \"moduleName\": \"antlr:antlr\",\n-            \"moduleUrl\": \"http://www.antlr.org/\",\n-            \"moduleVersion\": \"2.7.7\",\n-            \"moduleLicense\": \"BSD License\",\n-            \"moduleLicenseUrl\": \"http://www.antlr.org/license.html\"\n-        }\n-        '''\n-        name = dep['moduleName'].split(':')[1].lower()\n-        version = dep['moduleVersion']\n-        name_version = name + '-' + version\n-        dir_name = '{license_dir}/{name_version}.jar'.format(\n-            license_dir=LICENSE_DIR, name_version=name_version)\n-        # if auto pulled, directory is existing at {license_dir}\n-        if not os.path.isdir(dir_name):\n-            # skip self dependencies\n-            if dep['moduleName'].startswith('beam'):\n-                print('Skippig', name + '-' + version)\n-                continue\n-            os.mkdir(dir_name)\n-            # pull license\n-            try:\n-                license_url = dep_config[name][version]['license']\n-            except:\n-                license_url = dep['moduleLicenseUrl']\n-            pull_from_url(dir_name + '/LICENSE', license_url, name_version,\n-                          no_licenses)\n-            # pull notice\n-            try:\n-                notice_url = dep_config[name][version]['notice']\n-                pull_from_url(dir_name + '/NOTICE', notice_url, name_version,\n-                              no_licenses)\n-            except:\n-                notice_url = None\n-        else:\n-            try:\n-                license_url = dep['moduleLicenseUrl']\n-            except:\n-                license_url = ''\n-            print(\n-                'License/notice for {name_version} were pulled automatically.'.\n-                format(name_version=name_version))\n-\n-        # get license_type to decide if pull source code.\n-        try:\n-            license_type = dep['moduleLicense']\n-        except:\n-            try:\n-                license_type = dep_config[name][version]['type']\n-            except:\n-                no_license_type.add(name_version)\n-                license_type = ''\n-                continue\n+    csv_list = []\n+    no_licenses = []\n+    no_license_type = []\n+    incorrect_source_url = []\n \n-        # pull source code if license_type is one of SOURCE_CODE_REQUIRED_LICENSES.\n-        if any(x in license_type.lower()\n-               for x in SOURCE_CODE_REQUIRED_LICENSES):\n-            try:\n-                base_url = dep_config[name][version]['source']\n-            except:\n-                module = dep['moduleName'].split(':')[0].replace('.', '/')\n-                base_url = maven_url_temp.format(module=module + '/' + name,\n-                                                 version=version)\n-            pull_source_code(base_url, dir_name, name_version,\n-                             incorrect_source_url)\n-            source_included = True\n-        else:\n-            source_included = False\n-\n-        csv_dict[name_version] = {\n-            'url_to_license': license_url,\n-            'license_type': license_type,\n-            'source_included': source_included\n-        }\n+    queue = Queue()\n+    for x in range(THREADS):\n+        worker = Worker(queue)\n+        worker.daemon = True\n+        worker.start()\n+    for dep in dependencies['dependencies']:\n+        queue.put(dep)\n+    queue.join()\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219"}, "originalPosition": 333}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxMTM0MQ==", "bodyText": "These lists need to have synchronized access if they are to be modified by different threads.\nhttps://stackoverflow.com/questions/2227169/are-python-built-in-containers-thread-safe", "url": "https://github.com/apache/beam/pull/11428#discussion_r410411341", "createdAt": "2020-04-17T18:54:50Z", "author": {"login": "udim"}, "path": "sdks/java/container/license_scripts/pull_licenses_java.py", "diffHunk": "@@ -108,89 +244,27 @@ def write_to_csv(csv_dict):\n \n     maven_url_temp = 'https://repo1.maven.org/maven2/{module}/{version}'\n \n-    for dep in dependencies['dependencies']:\n-        '''\n-        An example of a Json blob.\n-        {\n-            \"moduleName\": \"antlr:antlr\",\n-            \"moduleUrl\": \"http://www.antlr.org/\",\n-            \"moduleVersion\": \"2.7.7\",\n-            \"moduleLicense\": \"BSD License\",\n-            \"moduleLicenseUrl\": \"http://www.antlr.org/license.html\"\n-        }\n-        '''\n-        name = dep['moduleName'].split(':')[1].lower()\n-        version = dep['moduleVersion']\n-        name_version = name + '-' + version\n-        dir_name = '{license_dir}/{name_version}.jar'.format(\n-            license_dir=LICENSE_DIR, name_version=name_version)\n-        # if auto pulled, directory is existing at {license_dir}\n-        if not os.path.isdir(dir_name):\n-            # skip self dependencies\n-            if dep['moduleName'].startswith('beam'):\n-                print('Skippig', name + '-' + version)\n-                continue\n-            os.mkdir(dir_name)\n-            # pull license\n-            try:\n-                license_url = dep_config[name][version]['license']\n-            except:\n-                license_url = dep['moduleLicenseUrl']\n-            pull_from_url(dir_name + '/LICENSE', license_url, name_version,\n-                          no_licenses)\n-            # pull notice\n-            try:\n-                notice_url = dep_config[name][version]['notice']\n-                pull_from_url(dir_name + '/NOTICE', notice_url, name_version,\n-                              no_licenses)\n-            except:\n-                notice_url = None\n-        else:\n-            try:\n-                license_url = dep['moduleLicenseUrl']\n-            except:\n-                license_url = ''\n-            print(\n-                'License/notice for {name_version} were pulled automatically.'.\n-                format(name_version=name_version))\n-\n-        # get license_type to decide if pull source code.\n-        try:\n-            license_type = dep['moduleLicense']\n-        except:\n-            try:\n-                license_type = dep_config[name][version]['type']\n-            except:\n-                no_license_type.add(name_version)\n-                license_type = ''\n-                continue\n+    csv_list = []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf238c497bf65f9180d9ade5941102c8db4be219"}, "originalPosition": 300}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "970532900bf1b7d9d2684e9751738caa1ad1209c", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/970532900bf1b7d9d2684e9751738caa1ad1209c", "committedDate": "2020-04-21T03:10:51Z", "message": "add thread_lock and more logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06cb50eda4cc42aeb58e5f0c1d0dc02ed9f88847", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/06cb50eda4cc42aeb58e5f0c1d0dc02ed9f88847", "committedDate": "2020-04-21T03:10:56Z", "message": "fix package version and import"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "408511d52c9266792a2cee4bec6caec7b957ef0c", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/408511d52c9266792a2cee4bec6caec7b957ef0c", "committedDate": "2020-04-21T02:56:30Z", "message": "fix package version and import"}, "afterCommit": {"oid": "06cb50eda4cc42aeb58e5f0c1d0dc02ed9f88847", "author": {"user": {"login": "Hannah-Jiang", "name": "Hannah Jiang"}}, "url": "https://github.com/apache/beam/commit/06cb50eda4cc42aeb58e5f0c1d0dc02ed9f88847", "committedDate": "2020-04-21T03:10:56Z", "message": "fix package version and import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTY4OTE4", "url": "https://github.com/apache/beam/pull/11428#pullrequestreview-397568918", "createdAt": "2020-04-21T18:31:07Z", "commit": {"oid": "06cb50eda4cc42aeb58e5f0c1d0dc02ed9f88847"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4242, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}