{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NTkzNzUx", "number": 12411, "title": "[BEAM-10603] Add ElementLimiters which allows the cache to prematurely based on read elements.", "bodyText": "Change-Id: I9f7030999f2ce38073ca72512c71794dbdbc301e\nPR 2/7\nThis will allow for the cache to stop reading based on elements. Currently, the cache can only stop based on global configuration.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-07-29T17:58:02Z", "url": "https://github.com/apache/beam/pull/12411", "merged": true, "mergeCommit": {"oid": "9dc1bf76c1b8f9125ab0b37cd6c7ac06a6713d47"}, "closed": true, "closedAt": "2020-08-04T21:27:50Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5uwhkAH2gAyNDU4NTkzNzUxOjBhMjViN2EwY2U0ZDc1NDdmMGVhZjhmZmQzMWJmNzkzZmVmZWNkZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5zLaDgH2gAyNDU4NTkzNzUxOmUyN2M0NWRlNWI3YzU3NDlkZWM4ZWMyODU3ZGM2OGUwNDRmOGVjZmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb", "committedDate": "2020-07-29T17:48:24Z", "message": "Add ElementLimiters which allows the cache to prematurely based on read elements.\n\nChange-Id: I9f7030999f2ce38073ca72512c71794dbdbc301e"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODU1NDM5", "url": "https://github.com/apache/beam/pull/12411#pullrequestreview-457855439", "createdAt": "2020-07-29T20:04:09Z", "commit": {"oid": "0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODYyOTE2", "url": "https://github.com/apache/beam/pull/12411#pullrequestreview-457862916", "createdAt": "2020-07-29T20:15:19Z", "commit": {"oid": "0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDoxNToxOVrOG5IgGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDoxNToxOVrOG5IgGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MTMwNg==", "bodyText": "nit: would it be simpler if we default this to 0 rather than None? It would let us eliminate the None checks in the methods.", "url": "https://github.com/apache/beam/pull/12411#discussion_r462561306", "createdAt": "2020-07-29T20:15:19Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/options/capture_limiters.py", "diffHunk": "@@ -71,3 +87,62 @@ def _trigger(self):\n \n   def is_triggered(self):\n     return self._triggered\n+\n+\n+class CountLimiter(ElementLimiter):\n+  \"\"\"Limits by counting the number of elements seen.\"\"\"\n+  def __init__(self, max_count):\n+    self._max_count = max_count\n+    self._count = 0\n+\n+  def update(self, e):\n+    # A TestStreamFileRecord can contain many elements at once. If e is a file\n+    # record, then count the number of elements in the bundle.\n+    if isinstance(e, TestStreamFileRecord):\n+      if not e.recorded_event.element_event:\n+        return\n+      self._count += len(e.recorded_event.element_event.elements)\n+\n+    # Otherwise, count everything else but the header of the file since it is\n+    # not an element.\n+    elif not isinstance(e, TestStreamFileHeader):\n+      self._count += 1\n+\n+  def is_triggered(self):\n+    return self._count >= self._max_count\n+\n+\n+class ProcessingTimeLimiter(ElementLimiter):\n+  \"\"\"Limits by how long the ProcessingTime passed in the element stream.\n+\n+  This measures the duration from either a constructor argument or from the\n+  first element in the stream. Each subsequent element has a delta\n+  \"advance_duration\" that moves the internal clock forward. This triggers when\n+  the duration from the internal clock and the start exceeds the given duration.\n+  \"\"\"\n+  def __init__(self, max_duration_secs, start_secs=None):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27c45de5b7c5749dec8ec2857dc68e044f8ecfa", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/e27c45de5b7c5749dec8ec2857dc68e044f8ecfa", "committedDate": "2020-07-29T22:57:23Z", "message": "Remove start_secs parameter.\n\nChange-Id: I78bf74ed0a97b89a1965070d9bac6568c7ce1e22"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3595, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}