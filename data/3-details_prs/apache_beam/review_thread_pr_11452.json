{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzA2Mjgx", "number": 11452, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowMzowMFrOD3uBBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNjowOVrOD3uF-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzUyMTk5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowMzowMFrOGOIbvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxNTo1MVrOGPTFcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTQyMw==", "bodyText": "@ananvay we should look at how these interact with auto-opt-in at the service.", "url": "https://github.com/apache/beam/pull/11452#discussion_r417471423", "createdAt": "2020-04-29T17:03:00Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -117,13 +117,15 @@ class DataflowRunner(PipelineRunner):\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n-  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import NativeReadPTransformOverride\n \n-  # Thesse overrides should be applied before the proto representation of the\n+  # These overrides should be applied before the proto representation of the\n   # graph is created.\n   _PTRANSFORM_OVERRIDES = [\n-      CombineValuesPTransformOverride()\n+      CombineValuesPTransformOverride(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxMjc0Nw==", "bodyText": "+1. To get some context, what do these overrides do differently for JRH vs. UW?", "url": "https://github.com/apache/beam/pull/11452#discussion_r417512747", "createdAt": "2020-04-29T18:09:40Z", "author": {"login": "ananvay"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -117,13 +117,15 @@ class DataflowRunner(PipelineRunner):\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n-  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import NativeReadPTransformOverride\n \n-  # Thesse overrides should be applied before the proto representation of the\n+  # These overrides should be applied before the proto representation of the\n   # graph is created.\n   _PTRANSFORM_OVERRIDES = [\n-      CombineValuesPTransformOverride()\n+      CombineValuesPTransformOverride(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTQyMw=="}, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxNTE1Nw==", "bodyText": "Looking at other parts, seems like this would be the same for both? And the only difference would be the JRH_PTRANSFORM_OVERRIDES section below (which basically is JrhReadPTransformOverride)? I'm not sure why that Read override is needed differently for JRH...", "url": "https://github.com/apache/beam/pull/11452#discussion_r417515157", "createdAt": "2020-04-29T18:13:50Z", "author": {"login": "ananvay"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -117,13 +117,15 @@ class DataflowRunner(PipelineRunner):\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n-  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import NativeReadPTransformOverride\n \n-  # Thesse overrides should be applied before the proto representation of the\n+  # These overrides should be applied before the proto representation of the\n   # graph is created.\n   _PTRANSFORM_OVERRIDES = [\n-      CombineValuesPTransformOverride()\n+      CombineValuesPTransformOverride(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTQyMw=="}, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2MTg2Ng==", "bodyText": "I'm not sure that it will have any effect on the service side. The v1b3 Job graph that is produced is the same.", "url": "https://github.com/apache/beam/pull/11452#discussion_r417661866", "createdAt": "2020-04-29T23:01:53Z", "author": {"login": "rohdesamuel"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -117,13 +117,15 @@ class DataflowRunner(PipelineRunner):\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n-  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import NativeReadPTransformOverride\n \n-  # Thesse overrides should be applied before the proto representation of the\n+  # These overrides should be applied before the proto representation of the\n   # graph is created.\n   _PTRANSFORM_OVERRIDES = [\n-      CombineValuesPTransformOverride()\n+      CombineValuesPTransformOverride(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTQyMw=="}, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NDUxMw==", "bodyText": "Correct, this change does not change the existing behavior, but the concern is that the existing behavior might be sub-optimal.", "url": "https://github.com/apache/beam/pull/11452#discussion_r418694513", "createdAt": "2020-05-01T19:15:51Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -117,13 +117,15 @@ class DataflowRunner(PipelineRunner):\n   # TODO: Remove the apache_beam.pipeline dependency in CreatePTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CombineValuesPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import CreatePTransformOverride\n-  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n   from apache_beam.runners.dataflow.ptransform_overrides import JrhReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import ReadPTransformOverride\n+  from apache_beam.runners.dataflow.ptransform_overrides import NativeReadPTransformOverride\n \n-  # Thesse overrides should be applied before the proto representation of the\n+  # These overrides should be applied before the proto representation of the\n   # graph is created.\n   _PTRANSFORM_OVERRIDES = [\n-      CombineValuesPTransformOverride()\n+      CombineValuesPTransformOverride(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTQyMw=="}, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzUzNDY1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNjowOVrOGOIjnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjo1Mjo0MFrOGOT2_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzQzNg==", "bodyText": "These three feel very redundant; can a common helper method be used here?", "url": "https://github.com/apache/beam/pull/11452#discussion_r417473436", "createdAt": "2020-04-29T17:06:09Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -594,6 +594,121 @@ def test_combine_values_translation(self):\n     self.assertIn(\n         u'CombineValues', set(step[u'kind'] for step in job_dict[u'steps']))\n \n+  def test_read_create_translation(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1ODYyMg==", "bodyText": "Done, moved to a single expect method.", "url": "https://github.com/apache/beam/pull/11452#discussion_r417658622", "createdAt": "2020-04-29T22:52:40Z", "author": {"login": "rohdesamuel"}, "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -594,6 +594,121 @@ def test_combine_values_translation(self):\n     self.assertIn(\n         u'CombineValues', set(step[u'kind'] for step in job_dict[u'steps']))\n \n+  def test_read_create_translation(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzQzNg=="}, "originalCommit": {"oid": "44cd1175f128074a2fec85c69409a341ccc8ac37"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1307, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}