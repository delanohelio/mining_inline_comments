{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MjIzMzAx", "number": 12749, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozOTo1OVrOEfHfzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozOTo1OVrOEfHfzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDY0MTQwOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/frames.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozOTo1OVrOHLL3MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzo0NDoyOFrOHLL8hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDczNw==", "bodyText": "Doesn't it preserve all partitionings?", "url": "https://github.com/apache/beam/pull/12749#discussion_r481490737", "createdAt": "2020-09-01T23:39:59Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -200,6 +200,15 @@ def update(self, other):\n \n   view = frame_base.wont_implement_method('memory sharing semantics')\n \n+  @property\n+  def str(self):\n+    expr = expressions.ComputedExpression(\n+        'str',\n+        lambda df: df.str, [self._expr],\n+        requires_partition_by=partitionings.Nothing(),\n+        preserves_partition_by=partitionings.Nothing())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e03686313526bc38298c8b2c10677b803d52352a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjEwMQ==", "bodyText": "Doh yes this is basically an elementwise_method. Good catch", "url": "https://github.com/apache/beam/pull/12749#discussion_r481492101", "createdAt": "2020-09-01T23:44:28Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -200,6 +200,15 @@ def update(self, other):\n \n   view = frame_base.wont_implement_method('memory sharing semantics')\n \n+  @property\n+  def str(self):\n+    expr = expressions.ComputedExpression(\n+        'str',\n+        lambda df: df.str, [self._expr],\n+        requires_partition_by=partitionings.Nothing(),\n+        preserves_partition_by=partitionings.Nothing())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDczNw=="}, "originalCommit": {"oid": "e03686313526bc38298c8b2c10677b803d52352a"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 427, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}