{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3ODgyNDA1", "number": 10914, "title": "[BEAM-8078] streaming_wordcount_debugging.py is missing a test", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-02-20T17:23:26Z", "url": "https://github.com/apache/beam/pull/10914", "merged": true, "mergeCommit": {"oid": "3b0f2828d2f7b418915089da5b3e7cb3acfcd104"}, "closed": true, "closedAt": "2020-03-25T19:54:40Z", "author": {"login": "Tesio"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGOL40gH2gAyMzc3ODgyNDA1OjQ0NTI1MzY1ODExODYzNjNmYzc3MzkxNzhjMzcyYTMxZWNjNWQ1MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQiYyXgFqTM3OTY5NDUzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4452536581186363fc7739178c372a31ecc5d511", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4452536581186363fc7739178c372a31ecc5d511", "committedDate": "2020-02-20T17:01:17Z", "message": "Streaming_wordcount_debugging.py example update. Logging functionality fix, deprecated methods changed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff251fe26241924cf62e845419aa9bd53d74e5b", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7ff251fe26241924cf62e845419aa9bd53d74e5b", "committedDate": "2020-02-20T17:19:56Z", "message": "streaming_wordcount_debugging.py test added"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTEyODM0", "url": "https://github.com/apache/beam/pull/10914#pullrequestreview-365912834", "createdAt": "2020-02-27T18:52:33Z", "commit": {"oid": "7ff251fe26241924cf62e845419aa9bd53d74e5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1MjozM1rOFvdH7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1MjozM1rOFvdH7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwNDU1Nw==", "bodyText": "Note that this change will make timestamp unpredictable would likely result in flaky tests.", "url": "https://github.com/apache/beam/pull/10914#discussion_r385304557", "createdAt": "2020-02-27T18:52:33Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/examples/streaming_wordcount_debugging.py", "diffHunk": "@@ -71,16 +72,14 @@ def process(\n class AddTimestampFn(beam.DoFn):\n   \"\"\"A DoFn that attaches timestamps to its elements.\n \n-  It takes a string of integers and it attaches to each of them\n-  a timestamp of its same value.\n+  It just takes an element and adds a current timestamp.\n \n-  For example, [120, 225, 312] will result in:\n-  [(120, Timestamp(120)), (225, Timestamp(225)), (312, Timestamp(312))].\n+  For example, Sometext will result in:\n+  (Sometext, Timestamp(1234567890).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ff251fe26241924cf62e845419aa9bd53d74e5b"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9bde33aba8f58bf0b6cae2b91ae8ac53e7f6070", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/b9bde33aba8f58bf0b6cae2b91ae8ac53e7f6070", "committedDate": "2020-02-27T20:04:22Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f8f2e99b36f4edd4d146a78dbb27f38949aa4da", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7f8f2e99b36f4edd4d146a78dbb27f38949aa4da", "committedDate": "2020-02-28T11:04:36Z", "message": "Code review comments fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e62a8273f01d3da1828a2103068a98ea7f937a9", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/8e62a8273f01d3da1828a2103068a98ea7f937a9", "committedDate": "2020-02-28T21:18:01Z", "message": "[BEAM-9373] Spark/Flink tests fix string concat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66851e663f8282dd811e502604242d7c06cdcff2", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/66851e663f8282dd811e502604242d7c06cdcff2", "committedDate": "2020-02-28T21:18:01Z", "message": "[BEAM-9300] convert struct literal in ZetaSQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7047ed73e8a126b1f1c8d1e5aa8eb972dc06977", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/apache/beam/commit/f7047ed73e8a126b1f1c8d1e5aa8eb972dc06977", "committedDate": "2020-02-28T21:18:01Z", "message": "Linkage Checker 1.1.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c442701fd075f60213305a87f0afdb087d2a7647", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/c442701fd075f60213305a87f0afdb087d2a7647", "committedDate": "2020-02-28T21:18:01Z", "message": "Bump Dataflow Java worker container version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07b74a5cd2d2ac5738ae3f0ef52fafb5bb3ccb7c", "author": {"user": {"login": "ibzib", "name": "Kyle Weaver"}}, "url": "https://github.com/apache/beam/commit/07b74a5cd2d2ac5738ae3f0ef52fafb5bb3ccb7c", "committedDate": "2020-02-28T21:18:01Z", "message": "Test schema does not need to be nullable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "654356ead207d95798b25332acf1c008a2aa8f04", "author": {"user": {"login": "mwalenia", "name": "Michal Walenia"}}, "url": "https://github.com/apache/beam/commit/654356ead207d95798b25332acf1c008a2aa8f04", "committedDate": "2020-02-28T21:18:01Z", "message": "[BEAM-9396] Match Docker image names in Jenkins jobs with those generated by Gradle tasks (#10985)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cca4493056e4941c395eba322b0529a9cf21c7b4", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/cca4493056e4941c395eba322b0529a9cf21c7b4", "committedDate": "2020-02-28T21:18:01Z", "message": "[BEAM-9392] Fix Multi TestStream assertion errors (#10982)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7741da27263b37bfa88f41514dfa2f1c13489898", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7741da27263b37bfa88f41514dfa2f1c13489898", "committedDate": "2020-03-19T08:39:24Z", "message": "Lint check fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed155271a7111c8490ffc864489ce3b8588402dd", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/ed155271a7111c8490ffc864489ce3b8588402dd", "committedDate": "2020-03-19T08:49:07Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODgxNzgx", "url": "https://github.com/apache/beam/pull/10914#pullrequestreview-378881781", "createdAt": "2020-03-21T01:47:53Z", "commit": {"oid": "ed155271a7111c8490ffc864489ce3b8588402dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8f69b5802286e79571729cd0dc4f6e1941c73b7", "author": {"user": {"login": "udim", "name": "Udi Meiri"}}, "url": "https://github.com/apache/beam/commit/e8f69b5802286e79571729cd0dc4f6e1941c73b7", "committedDate": "2020-03-21T01:52:12Z", "message": "Update streaming_wordcount_debugging.py\n\nRename elem to timestamp for clarity."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4381e750ee3d37058865b0e6ed397b93633871b1", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4381e750ee3d37058865b0e6ed397b93633871b1", "committedDate": "2020-03-23T18:11:16Z", "message": "Added save_main_session option as was hard-coded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1ade7308c85ee021f825470c70a6deb3db83607", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/a1ade7308c85ee021f825470c70a6deb3db83607", "committedDate": "2020-03-23T18:12:40Z", "message": "Merge remote-tracking branch 'origin/master'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5Njk0NTM1", "url": "https://github.com/apache/beam/pull/10914#pullrequestreview-379694535", "createdAt": "2020-03-23T18:12:39Z", "commit": {"oid": "e8f69b5802286e79571729cd0dc4f6e1941c73b7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODoxMjozOVrOF6R_kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODoxMjozOVrOF6R_kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1NjUyOQ==", "bodyText": "This keyword is missing from run(), but it is required (for a future migration from the nose test framework to pytest). Please add support for this in run(). You can follow what the other wordcounts do.", "url": "https://github.com/apache/beam/pull/10914#discussion_r396656529", "createdAt": "2020-03-23T18:12:39Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/examples/streaming_wordcount_debugging_it_test.py", "diffHunk": "@@ -0,0 +1,115 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"End-to-end test for the streaming wordcount example with debug.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+import logging\n+import unittest\n+import uuid\n+from builtins import range\n+\n+from hamcrest.core.core.allof import all_of\n+from nose.plugins.attrib import attr\n+\n+from apache_beam.examples import streaming_wordcount_debugging\n+from apache_beam.io.gcp.tests.pubsub_matcher import PubSubMessageMatcher\n+from apache_beam.runners.runner import PipelineState\n+from apache_beam.testing import test_utils\n+from apache_beam.testing.pipeline_verifiers import PipelineStateMatcher\n+from apache_beam.testing.test_pipeline import TestPipeline\n+\n+INPUT_TOPIC = 'wc_topic_input'\n+OUTPUT_TOPIC = 'wc_topic_output'\n+INPUT_SUB = 'wc_subscription_input'\n+OUTPUT_SUB = 'wc_subscription_output'\n+\n+DEFAULT_INPUT_NUMBERS = 100\n+WAIT_UNTIL_FINISH_DURATION = 6 * 60 * 1000  # in milliseconds\n+\n+\n+class StreamingWordcountDebuggingIT(unittest.TestCase):\n+  def setUp(self):\n+    self.test_pipeline = TestPipeline(is_integration_test=True)\n+    self.project = self.test_pipeline.get_option('project')\n+    self.setup_pubsub()\n+\n+  def setup_pubsub(self):\n+    self.uuid = str(uuid.uuid4())\n+\n+    # Set up PubSub environment.\n+    from google.cloud import pubsub\n+    self.pub_client = pubsub.PublisherClient()\n+    self.input_topic = self.pub_client.create_topic(\n+        self.pub_client.topic_path(self.project, INPUT_TOPIC + self.uuid))\n+    self.output_topic = self.pub_client.create_topic(\n+        self.pub_client.topic_path(self.project, OUTPUT_TOPIC + self.uuid))\n+\n+    self.sub_client = pubsub.SubscriberClient()\n+    self.input_sub = self.sub_client.create_subscription(\n+        self.sub_client.subscription_path(self.project, INPUT_SUB + self.uuid),\n+        self.input_topic.name)\n+    self.output_sub = self.sub_client.create_subscription(\n+        self.sub_client.subscription_path(self.project, OUTPUT_SUB + self.uuid),\n+        self.output_topic.name,\n+        ack_deadline_seconds=60)\n+\n+  def _inject_numbers(self, topic, num_messages):\n+    \"\"\"Inject numbers as test data to PubSub.\"\"\"\n+    logging.debug('Injecting %d numbers to topic %s', num_messages, topic.name)\n+    for n in range(num_messages):\n+      self.pub_client.publish(self.input_topic.name, str(n).encode('utf-8'))\n+\n+  def tearDown(self):\n+    test_utils.cleanup_subscriptions(\n+        self.sub_client, [self.input_sub, self.output_sub])\n+    test_utils.cleanup_topics(\n+        self.pub_client, [self.input_topic, self.output_topic])\n+\n+  @attr('IT')\n+  def test_streaming_wordcount_it(self):\n+    # Build expected dataset.\n+    expected_msg = [('%d: 1' % num).encode('utf-8')\n+                    for num in range(DEFAULT_INPUT_NUMBERS)]\n+\n+    # Set extra options to the pipeline for test purpose\n+    state_verifier = PipelineStateMatcher(PipelineState.RUNNING)\n+    pubsub_msg_verifier = PubSubMessageMatcher(\n+        self.project, self.output_sub.name, expected_msg, timeout=400)\n+    extra_opts = {\n+        'input_subscription': self.input_sub.name,\n+        'output_topic': self.output_topic.name,\n+        'wait_until_finish_duration': WAIT_UNTIL_FINISH_DURATION,\n+        'on_success_matcher': all_of(state_verifier, pubsub_msg_verifier)\n+    }\n+\n+    # Generate input data and inject to PubSub.\n+    self._inject_numbers(self.input_topic, DEFAULT_INPUT_NUMBERS)\n+\n+    # Get pipeline options from command argument: --test-pipeline-options,\n+    # and start pipeline job by calling pipeline main function.\n+    streaming_wordcount_debugging.run(\n+        self.test_pipeline.get_full_options_as_args(**extra_opts),\n+        save_main_session=False)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8f69b5802286e79571729cd0dc4f6e1941c73b7"}, "originalPosition": 110}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2805, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}