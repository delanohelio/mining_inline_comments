{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODQ3MDEz", "number": 10494, "title": "typehint fixes to DoOutputsTuple", "bodyText": "Changed the output type for DoOutputsTuple from PValue to PCollection.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-03T01:30:02Z", "url": "https://github.com/apache/beam/pull/10494", "merged": true, "mergeCommit": {"oid": "5656c0d32bab6c206b34b21455542ae9b462d0fc"}, "closed": true, "closedAt": "2020-01-22T23:03:26Z", "author": {"login": "aaltay"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4dZqfAFqTM0MDE5NjA2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb88gITgH2gAyMzU4ODQ3MDEzOjRiODVkYWMzN2NiMWZmNDMyZGY0Yzk5NTJhMzZmNzI5YTgxYTNhODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTk2MDY1", "url": "https://github.com/apache/beam/pull/10494#pullrequestreview-340196065", "createdAt": "2020-01-08T22:49:58Z", "commit": {"oid": "2d4fb15414124a10cc7d03e818c2cdb7938ed768"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjk3MzU0", "url": "https://github.com/apache/beam/pull/10494#pullrequestreview-340297354", "createdAt": "2020-01-09T05:35:02Z", "commit": {"oid": "2d4fb15414124a10cc7d03e818c2cdb7938ed768"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNTozNTowMlrOFbrUqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNTozNTowMlrOFbrUqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU2NTY3NA==", "bodyText": "This doesn't seem safe to me. We should not be promoting the type from PValue to a PCollection unless we can actually guarantee that it will always be a PCollection here.  As far as I can tell, it may actually be PValue, but correct me if I'm wrong.\nHere's how I came to that conclusion.\nThe code where AppliedPTransform.outputs is assigned values seems to indicate it should be a mapping of PValue:\n  def add_output(self,\n                 output,  # type: Union[pvalue.DoOutputsTuple, pvalue.PValue]\n                 tag=None  # type: Union[str, int, None]\n                ):\n    # type: (...) -> None\n    if isinstance(output, pvalue.DoOutputsTuple):\n      self.add_output(output[output._main_tag])\n    elif isinstance(output, pvalue.PValue):\n      # TODO(BEAM-1833): Require tags when calling this method.\n      if tag is None and None in self.outputs:\n        tag = len(self.outputs)\n      assert tag not in self.outputs\n      self.outputs[tag] = output\n    elif isinstance(output, dict):\n      for output_tag, out in output.items():\n        self.add_output(out, tag=output_tag)\n    else:\n      raise TypeError(\"Unexpected output type: %s\" % output)\nAs a result, I have typed AppliedPTransform.outputs as Dict[Union[str, int, None], pvalue.PValue].  If it's the case that AppliedPTransform.outputs only holds PCollections then we should enforce that in the isinstance check above (and elsewhere) and in the typing for AppliedPTransform.\n\nAlso note that the trailing # type: PCollection used here has no effect in mypy, and in fact it generates an error.  In mypy, you can only use this the first time that a variable is defined (e.g. for pcoll that's line 300 above this), and you can only use it to broaden a type (as I did originally, going from PCollection to PValue).   Narrowing the type is basically disregarding/overriding the inspected type, so that requires using typing.cast().\nThis is why I'm really wary of supporting pytype.", "url": "https://github.com/apache/beam/pull/10494#discussion_r364565674", "createdAt": "2020-01-09T05:35:02Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/pvalue.py", "diffHunk": "@@ -308,7 +308,7 @@ def __getitem__(self, tag):\n         self.producer.add_output(pcoll, tag)\n     else:\n       # Main output is output of inner ParDo.\n-      pcoll = self.producer.parts[0].outputs[None]\n+      pcoll = self.producer.parts[0].outputs[None]  # type: PCollection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4fb15414124a10cc7d03e818c2cdb7938ed768"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31a65e490f04a779a4cbc8cb1113a05c6beba8b3", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/31a65e490f04a779a4cbc8cb1113a05c6beba8b3", "committedDate": "2020-01-22T20:00:35Z", "message": "typehint fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e855036b9d5c9ffffad6b39ec283245b2f85f819", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/e855036b9d5c9ffffad6b39ec283245b2f85f819", "committedDate": "2020-01-22T20:00:36Z", "message": "typehint fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8b99fbedad66a2cd2b4b1476844d530b8a3614a", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/a8b99fbedad66a2cd2b4b1476844d530b8a3614a", "committedDate": "2020-01-22T20:00:36Z", "message": "Revert Optional changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "017064100dd7a01fe4f259fe20f8ab1a419eb545", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/017064100dd7a01fe4f259fe20f8ab1a419eb545", "committedDate": "2020-01-22T20:00:36Z", "message": "Assert that DoOutputsTuple is used with PCollection types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dfea88c2e545aad6f935073665675d42df3f11b", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/3dfea88c2e545aad6f935073665675d42df3f11b", "committedDate": "2020-01-18T00:27:13Z", "message": "Assert that DoOutputsTuple is used with PCollection types"}, "afterCommit": {"oid": "017064100dd7a01fe4f259fe20f8ab1a419eb545", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/017064100dd7a01fe4f259fe20f8ab1a419eb545", "committedDate": "2020-01-22T20:00:36Z", "message": "Assert that DoOutputsTuple is used with PCollection types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b85dac37cb1ff432df4c9952a36f729a81a3a84", "author": {"user": {"login": "aaltay", "name": "Ahmet Altay"}}, "url": "https://github.com/apache/beam/commit/4b85dac37cb1ff432df4c9952a36f729a81a3a84", "committedDate": "2020-01-22T21:19:47Z", "message": "lint"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3881, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}