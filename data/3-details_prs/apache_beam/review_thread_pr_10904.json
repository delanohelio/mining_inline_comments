{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MzU3NDc4", "number": 10904, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxMjowNlrODhRKFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxMjowNlrODhRKFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjEwNzA4OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/typehints/decorators_test_py3.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxMjowNlrOFr8RUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODo1MjozMlrOFsfHAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMDU2Mg==", "bodyText": "Better to split into three test methods.", "url": "https://github.com/apache/beam/pull/10904#discussion_r381620562", "createdAt": "2020-02-20T00:12:06Z", "author": {"login": "kennknowles"}, "path": "sdks/python/apache_beam/typehints/decorators_test_py3.py", "diffHunk": "@@ -154,5 +156,23 @@ def fn(a, b=None, *args, foo, **kwargs):\n       decorators.getcallargs_forhints(fn, 5)\n \n \n+class DecoratorsTest(unittest.TestCase):\n+  def test_no_annotations(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcd094e21e422884483a448c7f6e711dfbe33c12"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE5MTM2Mw==", "bodyText": "It is one test. I'll rewrite it to make it clear. First it shows that the pipeline raises a TypeCheckError with annotations and then it shows no exceptions raised without them.", "url": "https://github.com/apache/beam/pull/10904#discussion_r382191363", "createdAt": "2020-02-20T18:52:32Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/decorators_test_py3.py", "diffHunk": "@@ -154,5 +156,23 @@ def fn(a, b=None, *args, foo, **kwargs):\n       decorators.getcallargs_forhints(fn, 5)\n \n \n+class DecoratorsTest(unittest.TestCase):\n+  def test_no_annotations(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMDU2Mg=="}, "originalCommit": {"oid": "bcd094e21e422884483a448c7f6e711dfbe33c12"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2076, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}