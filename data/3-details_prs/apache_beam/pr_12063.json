{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NDI0MjIx", "number": 12063, "title": "[BEAM-10294] using SparkMetricsContainerStepMap for readable metrics presentation in Spark history server UI", "bodyText": "Beam metrics in Spark history server are not readable because now they're rendered as protobuffer formatted as JSON where metric's value is stored in bytes field.\nUsing  already existing SparkMetricsContainerStepMap which overrides toString() method by calling SparkBeamMetric.renderAll() method.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-23T08:58:24Z", "url": "https://github.com/apache/beam/pull/12063", "merged": true, "mergeCommit": {"oid": "fcd16929469b2eae8454e162136647ae3f44a216"}, "closed": true, "closedAt": "2020-07-28T11:58:40Z", "author": {"login": "davidak09"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuBrMcgFqTQzNTU4MjQyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5VJbOAFqTQ1NjU1OTQzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NTgyNDI1", "url": "https://github.com/apache/beam/pull/12063#pullrequestreview-435582425", "createdAt": "2020-06-23T08:59:45Z", "commit": {"oid": "cc731cfb084c27b11449042223223753afd39758"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODo1OTo0NVrOGnf_iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTowMzozMFrOGngJHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3MTgxOQ==", "bodyText": "I'm not sure about this - whether it's backward compatible", "url": "https://github.com/apache/beam/pull/12063#discussion_r444071819", "createdAt": "2020-06-23T08:59:45Z", "author": {"login": "davidak09"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/MetricsAccumulator.java", "diffHunk": "@@ -87,13 +86,13 @@ public static MetricsContainerStepMapAccumulator getInstance() {\n     }\n   }\n \n-  private static Optional<MetricsContainerStepMap> recoverValueFromCheckpoint(\n+  private static Optional<SparkMetricsContainerStepMap> recoverValueFromCheckpoint(\n       JavaSparkContext jsc, CheckpointDir checkpointDir) {\n     try {\n       Path beamCheckpointPath = checkpointDir.getBeamCheckpointDir();\n       checkpointFilePath = new Path(beamCheckpointPath, ACCUMULATOR_CHECKPOINT_FILENAME);\n       fileSystem = checkpointFilePath.getFileSystem(jsc.hadoopConfiguration());\n-      MetricsContainerStepMap recoveredValue =\n+      SparkMetricsContainerStepMap recoveredValue =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc731cfb084c27b11449042223223753afd39758"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3NDI3MA==", "bodyText": "I'd personally prefer single metric, possibly with .distribution suffix, which could include all 5 stats (count, sum, min, max, mean), it would definitely be more readable in Spark UI", "url": "https://github.com/apache/beam/pull/12063#discussion_r444074270", "createdAt": "2020-06-23T09:03:30Z", "author": {"login": "davidak09"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/SparkBeamMetric.java", "diffHunk": "@@ -51,11 +51,12 @@\n     }\n     for (MetricResult<DistributionResult> metricResult : metricQueryResults.getDistributions()) {\n       DistributionResult result = metricResult.getAttempted();\n-      metrics.put(renderName(metricResult) + \".count\", result.getCount());\n-      metrics.put(renderName(metricResult) + \".sum\", result.getSum());\n-      metrics.put(renderName(metricResult) + \".min\", result.getMin());\n-      metrics.put(renderName(metricResult) + \".max\", result.getMax());\n-      metrics.put(renderName(metricResult) + \".mean\", result.getMean());\n+      String name = renderName(metricResult);\n+      metrics.put(name + \".count\", result.getCount());\n+      metrics.put(name + \".sum\", result.getSum());\n+      metrics.put(name + \".min\", result.getMin());\n+      metrics.put(name + \".max\", result.getMax());\n+      metrics.put(name + \".mean\", result.getMean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc731cfb084c27b11449042223223753afd39758"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdbddd428a628621b0fa676b512f3e4eb4395893", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/cdbddd428a628621b0fa676b512f3e4eb4395893", "committedDate": "2020-06-23T09:44:08Z", "message": "[BEAM-10294] fixed SparkMetricsContainerStepMap class visibility"}, "afterCommit": {"oid": "c5cd601c445b4d1443d5569c9272c866d7a9eb99", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c5cd601c445b4d1443d5569c9272c866d7a9eb99", "committedDate": "2020-06-25T11:35:14Z", "message": "[BEAM-10294] fixed SparkMetricsContainerStepMap class visibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzM0Nzcy", "url": "https://github.com/apache/beam/pull/12063#pullrequestreview-441734772", "createdAt": "2020-07-02T14:30:01Z", "commit": {"oid": "c5cd601c445b4d1443d5569c9272c866d7a9eb99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDozMDowMVrOGsPesw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDozMDowMVrOGsPesw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0NDE0Nw==", "bodyText": "Won't it be enough to just create new instance of SparkMetricsContainerStepMap here but keep the same interface of MetricsContainerStepMap everywhere as it was before get broken? Why do we need to change it everywhere since SparkMetricsContainerStepMap  just overrides toString()?\nAlso, it would be great to add a regression test for this fix.", "url": "https://github.com/apache/beam/pull/12063#discussion_r449044147", "createdAt": "2020-07-02T14:30:01Z", "author": {"login": "aromanenko-dev"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/MetricsAccumulator.java", "diffHunk": "@@ -58,13 +57,13 @@ public static void init(SparkPipelineOptions opts, JavaSparkContext jsc) {\n               opts.isStreaming()\n                   ? Optional.of(new CheckpointDir(opts.getCheckpointDir()))\n                   : Optional.absent();\n-          MetricsContainerStepMap metricsContainerStepMap = new MetricsContainerStepMap();\n+          SparkMetricsContainerStepMap metricsContainerStepMap = new SparkMetricsContainerStepMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5cd601c445b4d1443d5569c9272c866d7a9eb99"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c85534e630e6f1dbfc859f755ba109198ba55c08", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c85534e630e6f1dbfc859f755ba109198ba55c08", "committedDate": "2020-07-10T08:42:07Z", "message": "[BEAM-10294] using SparkMetricsContainerStepMap for readable metrics presentation in Spark history server UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1949c1319aad47074f12c8e9000a145cddaa182", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f1949c1319aad47074f12c8e9000a145cddaa182", "committedDate": "2020-07-10T08:42:07Z", "message": "[BEAM-10294] fixed SparkMetricsContainerStepMap class visibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68dcc0beb7d46b457947374bb786a24dfa9d2cbd", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/68dcc0beb7d46b457947374bb786a24dfa9d2cbd", "committedDate": "2020-07-10T12:35:12Z", "message": "[BEAM-10294] using SparkMetricsContainerStepMap only where needed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5cd601c445b4d1443d5569c9272c866d7a9eb99", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/c5cd601c445b4d1443d5569c9272c866d7a9eb99", "committedDate": "2020-06-25T11:35:14Z", "message": "[BEAM-10294] fixed SparkMetricsContainerStepMap class visibility"}, "afterCommit": {"oid": "68dcc0beb7d46b457947374bb786a24dfa9d2cbd", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/68dcc0beb7d46b457947374bb786a24dfa9d2cbd", "committedDate": "2020-07-10T12:35:12Z", "message": "[BEAM-10294] using SparkMetricsContainerStepMap only where needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzY2NDQ4", "url": "https://github.com/apache/beam/pull/12063#pullrequestreview-446366448", "createdAt": "2020-07-10T12:38:45Z", "commit": {"oid": "c5cd601c445b4d1443d5569c9272c866d7a9eb99"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjozODo0NVrOGv1u3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1MTo1OFrOGv2I2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNjYwNA==", "bodyText": "You're right, it's enough to change it just in initialization. I fixed it.\nI will try to add a regression test.", "url": "https://github.com/apache/beam/pull/12063#discussion_r452816604", "createdAt": "2020-07-10T12:38:45Z", "author": {"login": "davidak09"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/MetricsAccumulator.java", "diffHunk": "@@ -58,13 +57,13 @@ public static void init(SparkPipelineOptions opts, JavaSparkContext jsc) {\n               opts.isStreaming()\n                   ? Optional.of(new CheckpointDir(opts.getCheckpointDir()))\n                   : Optional.absent();\n-          MetricsContainerStepMap metricsContainerStepMap = new MetricsContainerStepMap();\n+          SparkMetricsContainerStepMap metricsContainerStepMap = new SparkMetricsContainerStepMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0NDE0Nw=="}, "originalCommit": {"oid": "c5cd601c445b4d1443d5569c9272c866d7a9eb99"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyMzI1Nw==", "bodyText": "We ran our application built with Beam 2.18.0 and the metrics are displayed correctly, with this fix Spark displays the same results.\nThe change that broke things up for Spark was part of BEAM-9600 - #11369 .", "url": "https://github.com/apache/beam/pull/12063#discussion_r452823257", "createdAt": "2020-07-10T12:51:58Z", "author": {"login": "davidak09"}, "path": "runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/SparkMetricsContainerStepMap.java", "diffHunk": "@@ -27,7 +27,7 @@\n \n   @Override\n   public String toString() {\n-    return new SparkBeamMetric().renderAll().toString();\n+    return asAttemptedOnlyMetricResults(this).toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68dcc0beb7d46b457947374bb786a24dfa9d2cbd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NTU5NDMy", "url": "https://github.com/apache/beam/pull/12063#pullrequestreview-456559432", "createdAt": "2020-07-28T11:58:04Z", "commit": {"oid": "68dcc0beb7d46b457947374bb786a24dfa9d2cbd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3717, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}