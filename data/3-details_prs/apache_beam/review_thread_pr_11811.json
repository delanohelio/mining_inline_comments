{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyODQ5NTE2", "number": 11811, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzowMToyNFrOD_61QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzowMToyNFrOD_61QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzUwNzg1OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzowMToyNFrOGa31uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoxNTo0OVrOGa4CoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzMTAzNQ==", "bodyText": "Please add this option to \n  \n    \n      beam/sdks/java/core/src/main/java/org/apache/beam/sdk/options/SdkHarnessOptions.java\n    \n    \n         Line 32\n      in\n      32c6579\n    \n    \n    \n    \n\n        \n          \n           public interface SdkHarnessOptions extends PipelineOptions { \n        \n    \n  \n\n instead of here.\nPlease also plumb the value to \n  \n    \n      beam/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/PrecombineGroupingTable.java\n    \n    \n         Line 44\n      in\n      32c6579\n    \n    \n    \n    \n\n        \n          \n           public static <K, InputT, AccumT> GroupingTable<WindowedValue<K>, InputT, AccumT> combining( \n        \n    \n  \n\n\nWe should be able to use a primitive type (also long seems really large for specifying amount of MBs):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              Long getGroupingTableMaxSizeMb();\n          \n          \n            \n            \n          \n          \n            \n              void setGroupingTableMaxSizeMb(Long value);\n          \n          \n            \n              int getGroupingTableMaxSizeMb();\n          \n          \n            \n            \n          \n          \n            \n              void setGroupingTableMaxSizeMb(int value);", "url": "https://github.com/apache/beam/pull/11811#discussion_r430831035", "createdAt": "2020-05-27T03:01:24Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java", "diffHunk": "@@ -177,6 +177,20 @@ public Dataflow create(PipelineOptions options) {\n \n   void setNumberOfWorkerHarnessThreads(int value);\n \n+  /**\n+   * Size (in MB) of each grouping table used to pre-combine elements. If unset, defaults to 100 MB.\n+   *\n+   * <p>CAUTION: If set too large, workers may run into OOM conditions more easily, each worker may\n+   * have many grouping tables in-memory concurrently.\n+   */\n+  @Description(\n+      \"The size (in MB) of the grouping tables used to pre-combine elements before \"\n+          + \"shuffling.  Larger values may reduce the amount of data shuffled.\")\n+  @Default.Long(100)\n+  Long getGroupingTableMaxSizeMb();\n+\n+  void setGroupingTableMaxSizeMb(Long value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6021085dc859485b80574d35fddcef6f02aa5481"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzNDMzNw==", "bodyText": "\ud83d\udc4d done!", "url": "https://github.com/apache/beam/pull/11811#discussion_r430834337", "createdAt": "2020-05-27T03:15:49Z", "author": {"login": "steveniemitz"}, "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java", "diffHunk": "@@ -177,6 +177,20 @@ public Dataflow create(PipelineOptions options) {\n \n   void setNumberOfWorkerHarnessThreads(int value);\n \n+  /**\n+   * Size (in MB) of each grouping table used to pre-combine elements. If unset, defaults to 100 MB.\n+   *\n+   * <p>CAUTION: If set too large, workers may run into OOM conditions more easily, each worker may\n+   * have many grouping tables in-memory concurrently.\n+   */\n+  @Description(\n+      \"The size (in MB) of the grouping tables used to pre-combine elements before \"\n+          + \"shuffling.  Larger values may reduce the amount of data shuffled.\")\n+  @Default.Long(100)\n+  Long getGroupingTableMaxSizeMb();\n+\n+  void setGroupingTableMaxSizeMb(Long value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzMTAzNQ=="}, "originalCommit": {"oid": "6021085dc859485b80574d35fddcef6f02aa5481"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3701, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}