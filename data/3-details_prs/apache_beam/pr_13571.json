{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNzcyOTM0", "number": 13571, "title": "[BEAM-11481] emit output watermark on watermark hold change", "bodyText": "Fixes [BEAM-11481].\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-17T10:43:51Z", "url": "https://github.com/apache/beam/pull/13571", "merged": true, "mergeCommit": {"oid": "bea6f88b747dd582b0df6db1c265846f304c6abf"}, "closed": true, "closedAt": "2020-12-18T17:37:28Z", "author": {"login": "je-ik"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnBTf2gFqTU1NDQ4NzUwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnaoDrABqjQxMzA1MTc1MjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NDg3NTA0", "url": "https://github.com/apache/beam/pull/13571#pullrequestreview-554487504", "createdAt": "2020-12-17T10:51:29Z", "commit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1MToyOVrOIHvywQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1MToyOVrOIHvywQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk5Mzk4NQ==", "bodyText": "can you please add this as a message for IllegalStateException?", "url": "https://github.com/apache/beam/pull/13571#discussion_r544993985", "createdAt": "2020-12-17T10:51:29Z", "author": {"login": "dmvk"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -992,7 +997,23 @@ public void onProcessingTime(InternalTimer<ByteBuffer, TimerData> timer) {\n \n   // allow overriding this in ExecutableStageDoFnOperator to set the key context\n   protected void fireTimerInternal(ByteBuffer key, TimerData timerData) {\n+    long oldHold = keyCoder != null ? keyedStateInternals.minWatermarkHoldMs() : -1L;\n     fireTimer(timerData);\n+    emitWatermarkIfHoldChanged(oldHold);\n+  }\n+\n+  void emitWatermarkIfHoldChanged(long currentWatermarkHold) {\n+    if (keyCoder != null) {\n+      long newWatermarkHold = keyedStateInternals.minWatermarkHoldMs();\n+      if (newWatermarkHold > currentWatermarkHold) {\n+        try {\n+          processInputWatermark(false);\n+        } catch (Exception ex) {\n+          // should not happen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NDkxMzky", "url": "https://github.com/apache/beam/pull/13571#pullrequestreview-554491392", "createdAt": "2020-12-17T10:56:29Z", "commit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NDkzOTYw", "url": "https://github.com/apache/beam/pull/13571#pullrequestreview-554493960", "createdAt": "2020-12-17T10:59:49Z", "commit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1OTo0OVrOIHwIEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTowNDozNFrOIHwUJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk5OTQ0MQ==", "bodyText": "We remove the private modifier?", "url": "https://github.com/apache/beam/pull/13571#discussion_r544999441", "createdAt": "2020-12-17T10:59:49Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -784,7 +789,7 @@ private long computeOutputWatermark(long inputWatermarkHold) {\n     return potentialOutputWatermark;\n   }\n \n-  private void maybeEmitWatermark(long watermark) {\n+  void maybeEmitWatermark(long watermark) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAwMDI4OQ==", "bodyText": "This logic should be removed. All logic which deals with watermark emission should be handled through processWatermark.", "url": "https://github.com/apache/beam/pull/13571#discussion_r545000289", "createdAt": "2020-12-17T11:01:11Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -992,7 +997,23 @@ public void onProcessingTime(InternalTimer<ByteBuffer, TimerData> timer) {\n \n   // allow overriding this in ExecutableStageDoFnOperator to set the key context\n   protected void fireTimerInternal(ByteBuffer key, TimerData timerData) {\n+    long oldHold = keyCoder != null ? keyedStateInternals.minWatermarkHoldMs() : -1L;\n     fireTimer(timerData);\n+    emitWatermarkIfHoldChanged(oldHold);\n+  }\n+\n+  void emitWatermarkIfHoldChanged(long currentWatermarkHold) {\n+    if (keyCoder != null) {\n+      long newWatermarkHold = keyedStateInternals.minWatermarkHoldMs();\n+      if (newWatermarkHold > currentWatermarkHold) {\n+        try {\n+          processInputWatermark(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAwMTAyNQ==", "bodyText": "We need the following to generalize watermark emission to be able to call this method from other places.\nif (mark.getTimestamp > currentInputWatermark) {\n  currentInputWatermark = mark.getTimestamp();\n}", "url": "https://github.com/apache/beam/pull/13571#discussion_r545001025", "createdAt": "2020-12-17T11:02:15Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -739,9 +741,12 @@ public final void processWatermark1(Watermark mark) throws Exception {\n     }\n \n     currentInputWatermark = mark.getTimestamp();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAwMTUxMA==", "bodyText": "Please remove if we don't want to scatter the logic about watermark advancement.", "url": "https://github.com/apache/beam/pull/13571#discussion_r545001510", "createdAt": "2020-12-17T11:02:56Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -739,9 +741,12 @@ public final void processWatermark1(Watermark mark) throws Exception {\n     }\n \n     currentInputWatermark = mark.getTimestamp();\n+    processInputWatermark(true);\n+  }\n \n+  private void processInputWatermark(boolean advanceInputWatermark) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAwMjUzMw==", "bodyText": "Is this required on every element? I'd rather trigger this only if we set / remove a hold.", "url": "https://github.com/apache/beam/pull/13571#discussion_r545002533", "createdAt": "2020-12-17T11:04:34Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -641,8 +641,10 @@ protected final void setBundleFinishedCallback(Runnable callback) {\n   @Override\n   public final void processElement(StreamRecord<WindowedValue<InputT>> streamRecord) {\n     checkInvokeStartBundle();\n+    long oldHold = keyCoder != null ? keyedStateInternals.minWatermarkHoldMs() : -1L;\n     doFnRunner.processElement(streamRecord.getValue());\n     checkInvokeFinishBundleByCount();\n+    emitWatermarkIfHoldChanged(oldHold);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02f132676cc5318a853567897da2fc16972cb47a", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/02f132676cc5318a853567897da2fc16972cb47a", "committedDate": "2020-12-17T10:43:10Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}, "afterCommit": {"oid": "8b19bc5b0b020b9bae56f9dae3a4bac2c31e49a2", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/8b19bc5b0b020b9bae56f9dae3a4bac2c31e49a2", "committedDate": "2020-12-17T15:20:28Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de6faa65e7ce786b8e4056268c4075eda176d22", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/8de6faa65e7ce786b8e4056268c4075eda176d22", "committedDate": "2020-12-17T15:23:30Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b19bc5b0b020b9bae56f9dae3a4bac2c31e49a2", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/8b19bc5b0b020b9bae56f9dae3a4bac2c31e49a2", "committedDate": "2020-12-17T15:20:28Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}, "afterCommit": {"oid": "8de6faa65e7ce786b8e4056268c4075eda176d22", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/8de6faa65e7ce786b8e4056268c4075eda176d22", "committedDate": "2020-12-17T15:23:30Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1Mzc3NTQ2", "url": "https://github.com/apache/beam/pull/13571#pullrequestreview-555377546", "createdAt": "2020-12-18T10:38:09Z", "commit": {"oid": "8de6faa65e7ce786b8e4056268c4075eda176d22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NDY4MDE1", "url": "https://github.com/apache/beam/pull/13571#pullrequestreview-555468015", "createdAt": "2020-12-18T13:04:40Z", "commit": {"oid": "8de6faa65e7ce786b8e4056268c4075eda176d22"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8de6faa65e7ce786b8e4056268c4075eda176d22", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/8de6faa65e7ce786b8e4056268c4075eda176d22", "committedDate": "2020-12-17T15:23:30Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}, "afterCommit": {"oid": "415501f0b883f09ede4546ea990b2b5f69408bd4", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/415501f0b883f09ede4546ea990b2b5f69408bd4", "committedDate": "2020-12-18T13:51:42Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "415501f0b883f09ede4546ea990b2b5f69408bd4", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/415501f0b883f09ede4546ea990b2b5f69408bd4", "committedDate": "2020-12-18T13:51:42Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}, "afterCommit": {"oid": "8de6faa65e7ce786b8e4056268c4075eda176d22", "author": {"user": {"login": "je-ik", "name": "Jan Lukavsk\u00fd"}}, "url": "https://github.com/apache/beam/commit/8de6faa65e7ce786b8e4056268c4075eda176d22", "committedDate": "2020-12-17T15:23:30Z", "message": "[BEAM-11481] emit output watermark on watermark hold change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4188, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}