{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODUzODMy", "number": 13341, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozMDoxM1rOE5nwKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozMDoxM1rOE5nwKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODU1NTk0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/frames.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozMDoxM1rOH0MABg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODo1MDowMlrOH0MvAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4NDYxNA==", "bodyText": "That's odd. So I guess series > other will be one place where we diverge from the Pandas API (in an easily documented way).\nIs there a similar issue for arithmetic operations?", "url": "https://github.com/apache/beam/pull/13341#discussion_r524484614", "createdAt": "2020-11-16T18:30:13Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1917,9 +1918,12 @@ def func(df, *args, **kwargs):\n       '__i%s__' % base,\n       frame_base._elementwise_method('__i%s__' % base, inplace=True))\n \n-for name in ['__lt__', '__le__', '__gt__', '__ge__', '__eq__', '__ne__']:\n-  setattr(DeferredSeries, name, frame_base._elementwise_method(name))\n-  setattr(DeferredDataFrame, name, frame_base._elementwise_method(name))\n+for name in ['lt', 'le', 'gt', 'ge', 'eq', 'ne']:\n+  for p in '%s', '__%s__':\n+    # Note that non-underscore name is used for both as the __xxx__ methods are\n+    # order-sensitive.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83070b41853b3ab1e3e6a9a210fccfd35f90a331"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5NjY0Mg==", "bodyText": "It appears just to be the comparison operators that suffer from this defect.\nFor PCollections, the order is unspecified, so in some sense one can't say that comparison of \"differently-ordered\" dataframes should be rejected (as the notion of \"differently-ordered\" is not well defined).", "url": "https://github.com/apache/beam/pull/13341#discussion_r524496642", "createdAt": "2020-11-16T18:50:02Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1917,9 +1918,12 @@ def func(df, *args, **kwargs):\n       '__i%s__' % base,\n       frame_base._elementwise_method('__i%s__' % base, inplace=True))\n \n-for name in ['__lt__', '__le__', '__gt__', '__ge__', '__eq__', '__ne__']:\n-  setattr(DeferredSeries, name, frame_base._elementwise_method(name))\n-  setattr(DeferredDataFrame, name, frame_base._elementwise_method(name))\n+for name in ['lt', 'le', 'gt', 'ge', 'eq', 'ne']:\n+  for p in '%s', '__%s__':\n+    # Note that non-underscore name is used for both as the __xxx__ methods are\n+    # order-sensitive.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4NDYxNA=="}, "originalCommit": {"oid": "83070b41853b3ab1e3e6a9a210fccfd35f90a331"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2805, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}