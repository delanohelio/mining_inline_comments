{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2OTU1NTI4", "number": 12554, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo0MToyNVrOEYUxIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo0MToyNVrOEYUxIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQxNTM3OnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/core/runtime/graphx/schema/schema_test.go", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo0MToyNVrOHAme9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzowMzozN1rOHA8EMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5MjU2Nw==", "bodyText": "I get why this is ignoring the \"id\" field for the proto, but why \"options\"? This test seems to already be testing options in the other direction (options are respected when converting from schemas to reflect types). I figure it would also want to test that options are included as expected when converting to schemas.", "url": "https://github.com/apache/beam/pull/12554#discussion_r470392567", "createdAt": "2020-08-14T03:41:25Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/schema/schema_test.go", "diffHunk": "@@ -161,18 +354,22 @@ func TestSchemaConversion(t *testing.T) {\n \t\t\t\tif err != nil {\n \t\t\t\t\tt.Fatalf(\"error ToType(%v) = %v\", test.st, err)\n \t\t\t\t}\n-\n-\t\t\t\tif d := cmp.Diff(reflect.New(test.rt).Elem().Interface(), reflect.New(got).Elem().Interface()); d != \"\" {\n-\t\t\t\t\tt.Errorf(\"diff (-want, +got): %v\", d)\n+\t\t\t\tif !test.rt.AssignableTo(got) {\n+\t\t\t\t\tt.Errorf(\"%v not assignable to %v\", test.rt, got)\n+\t\t\t\t\tif d := cmp.Diff(reflect.New(test.rt).Elem().Interface(), reflect.New(got).Elem().Interface()); d != \"\" {\n+\t\t\t\t\t\tt.Errorf(\"diff (-want, +got): %v\", d)\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\t{\n \t\t\t\tgot, err := FromType(test.rt)\n \t\t\t\tif err != nil {\n \t\t\t\t\tt.Fatalf(\"error FromType(%v) = %v\", test.rt, err)\n \t\t\t\t}\n-\n-\t\t\t\tif d := cmp.Diff(test.st, got); d != \"\" {\n+\t\t\t\tif d := cmp.Diff(test.st, got,\n+\t\t\t\t\tprotocmp.Transform(),\n+\t\t\t\t\tprotocmp.IgnoreFields(proto.MessageV2(&pipepb.Schema{}), \"id\", \"options\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d541a53c650ec3efb1d3771a8d7407b4cc9eb5f2"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5OTg0NQ==", "bodyText": "I'll try removing it before submitting.\nI might have added this at an earlier iteration when the options also contained the fully qualified paths for comparison, which could vary from machine to machine. Those aren't being saved in the options anymore so it's fair for use to get rid of at this point I think....", "url": "https://github.com/apache/beam/pull/12554#discussion_r470399845", "createdAt": "2020-08-14T04:11:49Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/schema/schema_test.go", "diffHunk": "@@ -161,18 +354,22 @@ func TestSchemaConversion(t *testing.T) {\n \t\t\t\tif err != nil {\n \t\t\t\t\tt.Fatalf(\"error ToType(%v) = %v\", test.st, err)\n \t\t\t\t}\n-\n-\t\t\t\tif d := cmp.Diff(reflect.New(test.rt).Elem().Interface(), reflect.New(got).Elem().Interface()); d != \"\" {\n-\t\t\t\t\tt.Errorf(\"diff (-want, +got): %v\", d)\n+\t\t\t\tif !test.rt.AssignableTo(got) {\n+\t\t\t\t\tt.Errorf(\"%v not assignable to %v\", test.rt, got)\n+\t\t\t\t\tif d := cmp.Diff(reflect.New(test.rt).Elem().Interface(), reflect.New(got).Elem().Interface()); d != \"\" {\n+\t\t\t\t\t\tt.Errorf(\"diff (-want, +got): %v\", d)\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\t{\n \t\t\t\tgot, err := FromType(test.rt)\n \t\t\t\tif err != nil {\n \t\t\t\t\tt.Fatalf(\"error FromType(%v) = %v\", test.rt, err)\n \t\t\t\t}\n-\n-\t\t\t\tif d := cmp.Diff(test.st, got); d != \"\" {\n+\t\t\t\tif d := cmp.Diff(test.st, got,\n+\t\t\t\t\tprotocmp.Transform(),\n+\t\t\t\t\tprotocmp.IgnoreFields(proto.MessageV2(&pipepb.Schema{}), \"id\", \"options\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5MjU2Nw=="}, "originalCommit": {"oid": "d541a53c650ec3efb1d3771a8d7407b4cc9eb5f2"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc0NjE2Mg==", "bodyText": "As a note, it's good practice to approve but still request small changes when the other person is able to merge themselves. As committers we're already responsible to ensure the code is good for the project, but allowing folks to be unblocked is good for the community.", "url": "https://github.com/apache/beam/pull/12554#discussion_r470746162", "createdAt": "2020-08-14T17:03:37Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/schema/schema_test.go", "diffHunk": "@@ -161,18 +354,22 @@ func TestSchemaConversion(t *testing.T) {\n \t\t\t\tif err != nil {\n \t\t\t\t\tt.Fatalf(\"error ToType(%v) = %v\", test.st, err)\n \t\t\t\t}\n-\n-\t\t\t\tif d := cmp.Diff(reflect.New(test.rt).Elem().Interface(), reflect.New(got).Elem().Interface()); d != \"\" {\n-\t\t\t\t\tt.Errorf(\"diff (-want, +got): %v\", d)\n+\t\t\t\tif !test.rt.AssignableTo(got) {\n+\t\t\t\t\tt.Errorf(\"%v not assignable to %v\", test.rt, got)\n+\t\t\t\t\tif d := cmp.Diff(reflect.New(test.rt).Elem().Interface(), reflect.New(got).Elem().Interface()); d != \"\" {\n+\t\t\t\t\t\tt.Errorf(\"diff (-want, +got): %v\", d)\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\t{\n \t\t\t\tgot, err := FromType(test.rt)\n \t\t\t\tif err != nil {\n \t\t\t\t\tt.Fatalf(\"error FromType(%v) = %v\", test.rt, err)\n \t\t\t\t}\n-\n-\t\t\t\tif d := cmp.Diff(test.st, got); d != \"\" {\n+\t\t\t\tif d := cmp.Diff(test.st, got,\n+\t\t\t\t\tprotocmp.Transform(),\n+\t\t\t\t\tprotocmp.IgnoreFields(proto.MessageV2(&pipepb.Schema{}), \"id\", \"options\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5MjU2Nw=="}, "originalCommit": {"oid": "d541a53c650ec3efb1d3771a8d7407b4cc9eb5f2"}, "originalPosition": 234}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 664, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}