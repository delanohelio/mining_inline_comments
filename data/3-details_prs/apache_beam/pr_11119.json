{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NTQyNzk1", "number": 11119, "title": "[BEAM-9498] Include descriptor and type of unsupported fields in RowJson exception", "bodyText": "Include a list of descriptor=type in exception, e.g. f_nested.f_dateTimeArray[]=DATETIME\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-13T01:08:25Z", "url": "https://github.com/apache/beam/pull/11119", "merged": true, "mergeCommit": {"oid": "b00885a193af7fcae16a3ba76acf8be5c16beafd"}, "closed": true, "closedAt": "2020-03-18T00:26:14Z", "author": {"login": "TheNeuralBit"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNFnFlgH2gAyMzg3NTQyNzk1OmM1ZTExYzIzMzlhMDFkZDNlNTY5MTk2NTk0NzM4NjFhY2MxNjk5YTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOrUs0gH2gAyMzg3NTQyNzk1OjZmMjM1MmJmMGQ4NjlkMGQwYmI1MzBjM2EzMmFhMTRhNjBiMjhmNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5e11c2339a01dd3e56919659473861acc1699a7", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/c5e11c2339a01dd3e56919659473861acc1699a7", "committedDate": "2020-03-13T00:59:19Z", "message": "Include field name in RowJson error messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "987e64d156bf21977ebd08d009c46d39e12e4399", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/987e64d156bf21977ebd08d009c46d39e12e4399", "committedDate": "2020-03-13T01:10:04Z", "message": "Include all unsupported fields in message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfddd512c3e62041413bd5f8622a6f4b4cd74492", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/cfddd512c3e62041413bd5f8622a6f4b4cd74492", "committedDate": "2020-03-13T01:00:03Z", "message": "Include all unsupported fields in message"}, "afterCommit": {"oid": "987e64d156bf21977ebd08d009c46d39e12e4399", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/987e64d156bf21977ebd08d009c46d39e12e4399", "committedDate": "2020-03-13T01:10:04Z", "message": "Include all unsupported fields in message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55081af605677ce5659d010524e580843ba21aa0", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/55081af605677ce5659d010524e580843ba21aa0", "committedDate": "2020-03-13T23:39:34Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce43f37d478fb16073924879e6ddae631a050b7c", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/ce43f37d478fb16073924879e6ddae631a050b7c", "committedDate": "2020-03-14T00:15:21Z", "message": "spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Njc1NjYz", "url": "https://github.com/apache/beam/pull/11119#pullrequestreview-375675663", "createdAt": "2020-03-17T01:02:13Z", "commit": {"oid": "ce43f37d478fb16073924879e6ddae631a050b7c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTowMjoxNFrOF3KpCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTowNTozMVrOF3KsLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5MDM0NA==", "bodyText": "nit: drop the variable, it doesn't add value.", "url": "https://github.com/apache/beam/pull/11119#discussion_r393390344", "createdAt": "2020-03-17T01:02:14Z", "author": {"login": "apilloud"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/RowJson.java", "diffHunk": "@@ -84,41 +85,76 @@\n   private static final ImmutableSet<TypeName> SUPPORTED_TYPES =\n       ImmutableSet.of(BYTE, INT16, INT32, INT64, FLOAT, DOUBLE, BOOLEAN, STRING, DECIMAL);\n \n+  /**\n+   * Throws {@link UnsupportedRowJsonException} if {@code schema} contains an unsupported field\n+   * type.\n+   */\n   public static void verifySchemaSupported(Schema schema) {\n-    schema.getFields().forEach(RowJson::verifyFieldTypeSupported);\n+    ImmutableList<UnsupportedField> unsupportedFields = findUnsupportedFields(schema);\n+    if (!unsupportedFields.isEmpty()) {\n+      throw new UnsupportedRowJsonException(\n+          String.format(\n+              \"Field type%s %s not supported when converting between JSON and Rows. Supported types are: %s\",\n+              unsupportedFields.size() > 1 ? \"s\" : \"\",\n+              unsupportedFields.toString(),\n+              SUPPORTED_TYPES.toString()));\n+    }\n+  }\n+\n+  private static class UnsupportedField {\n+    final String descriptor;\n+    final TypeName typeName;\n+\n+    UnsupportedField(String descriptor, TypeName typeName) {\n+      this.descriptor = descriptor;\n+      this.typeName = typeName;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return this.descriptor + \"=\" + this.typeName;\n+    }\n+  }\n+\n+  private static ImmutableList<UnsupportedField> findUnsupportedFields(Schema schema) {\n+    return schema.getFields().stream()\n+        .flatMap((field) -> findUnsupportedFields(field).stream())\n+        .collect(toImmutableList());\n   }\n \n-  static void verifyFieldTypeSupported(Field field) {\n+  private static ImmutableList<UnsupportedField> findUnsupportedFields(Field field) {\n     FieldType fieldType = field.getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce43f37d478fb16073924879e6ddae631a050b7c"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5MTE0OA==", "bodyText": "nit: drop the variable, it doesn't add value.", "url": "https://github.com/apache/beam/pull/11119#discussion_r393391148", "createdAt": "2020-03-17T01:05:31Z", "author": {"login": "apilloud"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/RowJson.java", "diffHunk": "@@ -84,41 +85,76 @@\n   private static final ImmutableSet<TypeName> SUPPORTED_TYPES =\n       ImmutableSet.of(BYTE, INT16, INT32, INT64, FLOAT, DOUBLE, BOOLEAN, STRING, DECIMAL);\n \n+  /**\n+   * Throws {@link UnsupportedRowJsonException} if {@code schema} contains an unsupported field\n+   * type.\n+   */\n   public static void verifySchemaSupported(Schema schema) {\n-    schema.getFields().forEach(RowJson::verifyFieldTypeSupported);\n+    ImmutableList<UnsupportedField> unsupportedFields = findUnsupportedFields(schema);\n+    if (!unsupportedFields.isEmpty()) {\n+      throw new UnsupportedRowJsonException(\n+          String.format(\n+              \"Field type%s %s not supported when converting between JSON and Rows. Supported types are: %s\",\n+              unsupportedFields.size() > 1 ? \"s\" : \"\",\n+              unsupportedFields.toString(),\n+              SUPPORTED_TYPES.toString()));\n+    }\n+  }\n+\n+  private static class UnsupportedField {\n+    final String descriptor;\n+    final TypeName typeName;\n+\n+    UnsupportedField(String descriptor, TypeName typeName) {\n+      this.descriptor = descriptor;\n+      this.typeName = typeName;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return this.descriptor + \"=\" + this.typeName;\n+    }\n+  }\n+\n+  private static ImmutableList<UnsupportedField> findUnsupportedFields(Schema schema) {\n+    return schema.getFields().stream()\n+        .flatMap((field) -> findUnsupportedFields(field).stream())\n+        .collect(toImmutableList());\n   }\n \n-  static void verifyFieldTypeSupported(Field field) {\n+  private static ImmutableList<UnsupportedField> findUnsupportedFields(Field field) {\n     FieldType fieldType = field.getType();\n-    verifyFieldTypeSupported(fieldType);\n+    return findUnsupportedFields(fieldType, field.getName());\n   }\n \n-  static void verifyFieldTypeSupported(FieldType fieldType) {\n+  private static ImmutableList<UnsupportedField> findUnsupportedFields(\n+      FieldType fieldType, String fieldName) {\n     TypeName fieldTypeName = fieldType.getTypeName();\n \n     if (fieldTypeName.isCompositeType()) {\n       Schema rowFieldSchema = fieldType.getRowSchema();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce43f37d478fb16073924879e6ddae631a050b7c"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f2352bf0d869d0d0bb530c3a32aa14a60b28f59", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/6f2352bf0d869d0d0bb530c3a32aa14a60b28f59", "committedDate": "2020-03-17T23:29:33Z", "message": "address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4929, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}