{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MjE4MDM1", "number": 12029, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMzozMVrOEG0QpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0NDoyMlrOEG1OkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTgzMTQxOnYy", "diffSide": "RIGHT", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMzozMVrOGl2IVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoxMTo0OFrOGl2dIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzM2Nw==", "bodyText": "This will require calling the function everytime when it is null.\nYou should use a boolean and update the check to be something like: (currentArg != memoizedArg || !initialized).", "url": "https://github.com/apache/beam/pull/12029#discussion_r442337367", "createdAt": "2020-06-18T16:03:31Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "diffHunk": "@@ -128,7 +128,7 @@ public FnApiStateAccessor(\n       @Override\n       public ResultT get() {\n         ArgT currentArg = arg.get();\n-        if (currentArg != memoizedArg) {\n+        if (currentArg != memoizedArg || currentArg == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96646e04350b537df0e90941bd75b717e810875"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzOTk0OA==", "bodyText": "For VoidCoder the arg.get() returns null, which means the currentArg != memoizedArg will evaluate to false.\nThis leaves the memoizedResult to null(underneath function never applied), and for VoidCoder key coder we need to set the key to ByteString.EMPTY instead of null(generated proto class doesn't allow setting to null) I believe.", "url": "https://github.com/apache/beam/pull/12029#discussion_r442339948", "createdAt": "2020-06-18T16:07:28Z", "author": {"login": "y1chi"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "diffHunk": "@@ -128,7 +128,7 @@ public FnApiStateAccessor(\n       @Override\n       public ResultT get() {\n         ArgT currentArg = arg.get();\n-        if (currentArg != memoizedArg) {\n+        if (currentArg != memoizedArg || currentArg == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzM2Nw=="}, "originalCommit": {"oid": "e96646e04350b537df0e90941bd75b717e810875"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MjY4OA==", "bodyText": "I realized this and updated my comment just after posting to use a boolean.", "url": "https://github.com/apache/beam/pull/12029#discussion_r442342688", "createdAt": "2020-06-18T16:11:48Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "diffHunk": "@@ -128,7 +128,7 @@ public FnApiStateAccessor(\n       @Override\n       public ResultT get() {\n         ArgT currentArg = arg.get();\n-        if (currentArg != memoizedArg) {\n+        if (currentArg != memoizedArg || currentArg == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzM2Nw=="}, "originalCommit": {"oid": "e96646e04350b537df0e90941bd75b717e810875"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTk4OTkzOnYy", "diffSide": "RIGHT", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0NDoyMlrOGl3tiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0NDoyMlrOGl3tiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MzI3Mg==", "bodyText": "The initialized will become true and will stay true so checking currentArg == null won't do anything.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (currentArg != memoizedArg || (currentArg == null && !initialized)) {\n          \n          \n            \n                    if (currentArg != memoizedArg || !initialized) {", "url": "https://github.com/apache/beam/pull/12029#discussion_r442363272", "createdAt": "2020-06-18T16:44:22Z", "author": {"login": "lukecwik"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "diffHunk": "@@ -124,12 +124,14 @@ public FnApiStateAccessor(\n     return new Supplier<ResultT>() {\n       private ArgT memoizedArg;\n       private ResultT memoizedResult;\n+      private boolean initialized;\n \n       @Override\n       public ResultT get() {\n         ArgT currentArg = arg.get();\n-        if (currentArg != memoizedArg) {\n+        if (currentArg != memoizedArg || (currentArg == null && !initialized)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f17617e6cb17f014bb7a16bc831813b670ed15"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3544, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}