{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTUyMTg2", "number": 12705, "title": "[BEAM-10720] Finish implementing StringMethods (cat, repeat)", "bodyText": "This PR adds implementations for the non-trivial operations in pd.Series.str:\n\ncat can accept another Series or DataFrame making it a zipping operation, or it may produce a scalar.\nrepeat can accept another Series making it a zipping operation.\n\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-27T21:07:46Z", "url": "https://github.com/apache/beam/pull/12705", "merged": true, "mergeCommit": {"oid": "919dc3c6fe70bb9ff78205f593c35164f6bfc308"}, "closed": true, "closedAt": "2020-10-13T22:35:18Z", "author": {"login": "TheNeuralBit"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDHBiCgFqTQ3NzA4NTY2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSPjcrAH2gAyNDc0OTUyMTg2OjBjMzRiMGI2ODdjYzA0OTJhZTVhMTY5YWU3YzY5YmM4MGU3YjExMTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDg1NjY5", "url": "https://github.com/apache/beam/pull/12705#pullrequestreview-477085669", "createdAt": "2020-08-27T21:10:01Z", "commit": {"oid": "d59320c9974a18001aee2ce054604585ed3da308"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMToxMDowMVrOHIhXgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMToxMDowMVrOHIhXgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY5NzM0Nw==", "bodyText": "I've marked this PR WIP because this test does not pass. It yields the following error, that I'm not sure how to diagnose. @robertwb can you provide any insight here?\napache_beam/runners/common.py:806: in _invoke_process_per_window                                                                                                                                                                        \n    [si[global_window] for si in self.side_inputs]))                                                                                                                                                                                    \napache_beam/runners/common.py:806: in <listcomp>                                                                                                                                                                                        \n    [si[global_window] for si in self.side_inputs]))                                                                                                                                                                                    \napache_beam/runners/worker/bundle_processor.py:422: in __getitem__                                                                                                                                                                      \n    self._cache[target_window] = self._side_input_data.view_fn(raw_view)                                                                                                                                                                \napache_beam/pvalue.py:395: in <lambda>                                                                                                                                                                                                  \n    lambda iterable: from_runtime_iterable(iterable, view_options))                                                                                                                                                                     \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _                                                                                                             \n                                                                                                                                                                                                                                        \nit = <apache_beam.runners.worker.bundle_processor._StateBackedIterable object at 0x7f3b0e5cf310>                                                                                                                                        \noptions = {'coder': WindowedValueCoder[FastPrimitivesCoder], 'window_mapping_fn': <function _global_window_mapping_fn at 0x7f3b1b31b710>}\n                                                                                                                                                                                                                                        \n    @staticmethod                                                                                                   \n    def _from_runtime_iterable(it, options):                                                                                                                                                                                            \n      head = list(itertools.islice(it, 2))                                                                                                                                                                                              \n      if not head:                                                                                                  \n        return options.get('default', EmptySideInput())                                                             \n      elif len(head) == 1:                                                                                          \n        return head[0]                                                                                                                                                                                                                  \n      raise ValueError(                                                                                                                                                                                                                 \n          'PCollection of size %d with more than one element accessed as a '                                                                                                                                                            \n          'singleton view. First two elements encountered are \"%s\", \"%s\".' %                                                                                                                                                            \n>         (len(head), str(head[0]), str(head[1])))                                                                                                                                                                                      \nE     ValueError: PCollection of size 2 with more than one element accessed as a singleton view. First two elements encountered are \"<pandas.core.strings.StringMethods object at 0x7f3b0e32ec90>\", \"<pandas.core.strings.StringMethods \nobject at 0x7f3b0e3d7510>\". [while running 'DataframeTransform/Eval/[ComputedExpression[cat_Series_139891620772240]]:139891619912080/FlatMap(evaluate)/FlatMap(evaluate)']", "url": "https://github.com/apache/beam/pull/12705#discussion_r478697347", "createdAt": "2020-08-27T21:10:01Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/transforms_test.py", "diffHunk": "@@ -266,6 +266,17 @@ def check(actual):\n           lambda x: {'res': 3 * x}, proxy)\n       assert_that(res['res'], equal_to_series(three_series), 'CheckDictOut')\n \n+  def test_cat(self):\n+    # verify that cat works with a List[Series] sicne this is missing from doctests\n+    df = pd.DataFrame({\n+        'one': ['A', 'B', 'C'],\n+        'two': ['BB', 'CC', 'A'],\n+        'three': ['CCC', 'AA', 'B'],\n+    })\n+    self.run_scenario(df, lambda df: df.two.str.cat([df.three], join='outer'))\n+    self.run_scenario(\n+        df, lambda df: df.one.str.cat([df.two, df.three], join='outer'))\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d59320c9974a18001aee2ce054604585ed3da308"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d59320c9974a18001aee2ce054604585ed3da308", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/d59320c9974a18001aee2ce054604585ed3da308", "committedDate": "2020-08-27T20:59:55Z", "message": "Implement StringMethods"}, "afterCommit": {"oid": "80af5ea8f076def996e1e98735ca1e08654e4642", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/80af5ea8f076def996e1e98735ca1e08654e4642", "committedDate": "2020-09-01T17:12:57Z", "message": "Implement repeat, cat"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df4690f26c85ef0be5c1aea825608095b27dff63", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/df4690f26c85ef0be5c1aea825608095b27dff63", "committedDate": "2020-09-01T18:25:40Z", "message": "fixup! Implement repeat, cat"}, "afterCommit": {"oid": "550af5eb290ca8350105725bd97aa58760fe24c1", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/550af5eb290ca8350105725bd97aa58760fe24c1", "committedDate": "2020-09-15T19:06:24Z", "message": "Implement repeat, cat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzk3MDcz", "url": "https://github.com/apache/beam/pull/12705#pullrequestreview-500797073", "createdAt": "2020-10-02T00:19:16Z", "commit": {"oid": "550af5eb290ca8350105725bd97aa58760fe24c1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMDoxOToxNlrOHbeXoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMDo1MToyNFrOHbev2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU3MTE2OQ==", "bodyText": "Use ()'s rather than backslashes for continuations.", "url": "https://github.com/apache/beam/pull/12705#discussion_r498571169", "createdAt": "2020-10-02T00:19:16Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -905,7 +905,48 @@ def checked_callable_index(df):\n             preserves_partition_by=partitionings.Singleton()))\n \n class _DeferredStringMethods(frame_base.DeferredBase):\n-  pass\n+  @frame_base.args_to_kwargs(pd.core.strings.StringMethods)\n+  @frame_base.populate_defaults(pd.core.strings.StringMethods)\n+  def cat(self, others, join, **kwargs):\n+    if others is None:\n+      # Concatenate series into a single String\n+      requires = partitionings.Singleton()\n+      func = lambda df: df.cat(join=join, **kwargs)\n+      args = [self._expr]\n+\n+    elif isinstance(others, frame_base.DeferredBase) or \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "550af5eb290ca8350105725bd97aa58760fe24c1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU3MjQ2Mw==", "bodyText": "since", "url": "https://github.com/apache/beam/pull/12705#discussion_r498572463", "createdAt": "2020-10-02T00:25:38Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/transforms_test.py", "diffHunk": "@@ -266,6 +266,18 @@ def check(actual):\n           lambda x: {'res': 3 * x}, proxy)\n       assert_that(res['res'], equal_to_series(three_series), 'CheckDictOut')\n \n+  def test_cat(self):\n+    # verify that cat works with a List[Series] sicne this is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "550af5eb290ca8350105725bd97aa58760fe24c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU3NzM2OQ==", "bodyText": "I think this is because we're trying to partition the StringMethods object itself and send it across the stage/shuffle boundary, and that code only expects dataframes and series to be partition-able (expecting everything else to be a single-object scalar.\nOne route would be to add StringMethods to the list of things that are partitionable, but that feels a bit odd and won't work well with a columnar backend representation (e.g. how would we represent s.str[:] as an Arrow batch?) Better would be for these expressions to take the underlying series as an argument, and invoke str on it themselves as part of the function to be applied. This may take some refactoring of the elementwise operations. (It may be OK, as all the others get \"fused away\", similarly for DateTime, but we should probably add a check that we don't try to partition anything but frames).", "url": "https://github.com/apache/beam/pull/12705#discussion_r498577369", "createdAt": "2020-10-02T00:51:24Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/transforms_test.py", "diffHunk": "@@ -266,6 +266,17 @@ def check(actual):\n           lambda x: {'res': 3 * x}, proxy)\n       assert_that(res['res'], equal_to_series(three_series), 'CheckDictOut')\n \n+  def test_cat(self):\n+    # verify that cat works with a List[Series] sicne this is missing from doctests\n+    df = pd.DataFrame({\n+        'one': ['A', 'B', 'C'],\n+        'two': ['BB', 'CC', 'A'],\n+        'three': ['CCC', 'AA', 'B'],\n+    })\n+    self.run_scenario(df, lambda df: df.two.str.cat([df.three], join='outer'))\n+    self.run_scenario(\n+        df, lambda df: df.one.str.cat([df.two, df.three], join='outer'))\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY5NzM0Nw=="}, "originalCommit": {"oid": "d59320c9974a18001aee2ce054604585ed3da308"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fec7bbd5a3a1cbb146e48fdc784c9e363ea425a", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/4fec7bbd5a3a1cbb146e48fdc784c9e363ea425a", "committedDate": "2020-10-08T18:09:00Z", "message": "Implement repeat, cat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd6ed9a0c041711f45dcee0977c3a43e19b0498a", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/fd6ed9a0c041711f45dcee0977c3a43e19b0498a", "committedDate": "2020-10-08T18:17:44Z", "message": "More discerning repeat, fix cat bug"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "550af5eb290ca8350105725bd97aa58760fe24c1", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/550af5eb290ca8350105725bd97aa58760fe24c1", "committedDate": "2020-09-15T19:06:24Z", "message": "Implement repeat, cat"}, "afterCommit": {"oid": "fd6ed9a0c041711f45dcee0977c3a43e19b0498a", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/fd6ed9a0c041711f45dcee0977c3a43e19b0498a", "committedDate": "2020-10-08T18:17:44Z", "message": "More discerning repeat, fix cat bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "399dc871e00071e47b1db3d8479ccf530dfa37cc", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/399dc871e00071e47b1db3d8479ccf530dfa37cc", "committedDate": "2020-10-12T22:32:23Z", "message": "Remove str_expr shim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0af19cfc46dc0935d0c829a87c6784db6f70039b", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/0af19cfc46dc0935d0c829a87c6784db6f70039b", "committedDate": "2020-10-12T23:26:42Z", "message": "fix py3.6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjgzNTcx", "url": "https://github.com/apache/beam/pull/12705#pullrequestreview-507683571", "createdAt": "2020-10-13T17:42:36Z", "commit": {"oid": "0af19cfc46dc0935d0c829a87c6784db6f70039b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e71efdf5df010792cb974f8900e020597ed5ac21", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/e71efdf5df010792cb974f8900e020597ed5ac21", "committedDate": "2020-10-13T20:30:58Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c34b0b687cc0492ae5a169ae7c69bc80e7b1110", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/0c34b0b687cc0492ae5a169ae7c69bc80e7b1110", "committedDate": "2020-10-13T21:35:10Z", "message": "yapf"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4499, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}