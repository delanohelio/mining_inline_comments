{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjQ5MDEw", "number": 12123, "title": "MetricFilter matching by Metric objects.", "bodyText": "This change would encourage reusing predefined metric objects in\nmetric queries.\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME.\nPlease add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-29T21:04:23Z", "url": "https://github.com/apache/beam/pull/12123", "merged": true, "mergeCommit": {"oid": "407b014a9d94c0356b347efe4f34299fedcc2dc8"}, "closed": true, "closedAt": "2020-07-01T05:48:31Z", "author": {"login": "rainwoodman"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwH_gggBqjM0OTQ2NjUyMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwX4SugFqTQ0MDE2NzU3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34d5e0ce5668bdb4e1620fd8da7460d3cb5840f0", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/34d5e0ce5668bdb4e1620fd8da7460d3cb5840f0", "committedDate": "2020-06-29T20:59:10Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}, "afterCommit": {"oid": "943b1fbcd5ad3da302e17b872b031415a442de0a", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/943b1fbcd5ad3da302e17b872b031415a442de0a", "committedDate": "2020-06-29T21:32:41Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTM0NTU1", "url": "https://github.com/apache/beam/pull/12123#pullrequestreview-439534555", "createdAt": "2020-06-29T22:08:26Z", "commit": {"oid": "943b1fbcd5ad3da302e17b872b031415a442de0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowODoyNlrOGqj8yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowODoyNlrOGqj8yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI4MjM3OA==", "bodyText": "Should we add a new test for with_metric instead of replacing the with_name test?", "url": "https://github.com/apache/beam/pull/12123#discussion_r447282378", "createdAt": "2020-06-29T22:08:26Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -162,7 +161,7 @@ def process(self, element):\n     # Verify user counter.\n     metric_results = (\n         res.metrics().query(\n-            MetricsFilter().with_name('metrics_user_counter_element')))\n+            MetricsFilter().with_metric(SomeDoFn.user_counter_elements)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943b1fbcd5ad3da302e17b872b031415a442de0a"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "943b1fbcd5ad3da302e17b872b031415a442de0a", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/943b1fbcd5ad3da302e17b872b031415a442de0a", "committedDate": "2020-06-29T21:32:41Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}, "afterCommit": {"oid": "72e283631b788f19c23b8cc1149875961cdf1cdb", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/72e283631b788f19c23b8cc1149875961cdf1cdb", "committedDate": "2020-06-30T15:52:08Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac0f4f05d6a0f2975c564c3723b38dac4eb89c89", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/ac0f4f05d6a0f2975c564c3723b38dac4eb89c89", "committedDate": "2020-06-30T15:54:35Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72e283631b788f19c23b8cc1149875961cdf1cdb", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/72e283631b788f19c23b8cc1149875961cdf1cdb", "committedDate": "2020-06-30T15:52:08Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}, "afterCommit": {"oid": "ac0f4f05d6a0f2975c564c3723b38dac4eb89c89", "author": {"user": {"login": "rainwoodman", "name": "Yu Feng"}}, "url": "https://github.com/apache/beam/commit/ac0f4f05d6a0f2975c564c3723b38dac4eb89c89", "committedDate": "2020-06-30T15:54:35Z", "message": "MetricFilter matching by Metric objects.\n\nThis change would encourage reusing predefined metric objects in\nmetric queries.\n\nQuerying with the metric object may result more maintainable code\nthan duplicating the name and namespace strings. Or storeing the\nnames elsewhere as CONSTANT_NAME."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTY3NTc4", "url": "https://github.com/apache/beam/pull/12123#pullrequestreview-440167578", "createdAt": "2020-06-30T16:03:45Z", "commit": {"oid": "ac0f4f05d6a0f2975c564c3723b38dac4eb89c89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjowMzo0NVrOGrDi-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjowMzo0NVrOGrDi-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwMDA1Nw==", "bodyText": "Is this the canonical way of fetching a metric result?\nDepending on if inc() is ever triggered, or triggered in different Steps, there can be 0 to many entries in the counters list.", "url": "https://github.com/apache/beam/pull/12123#discussion_r447800057", "createdAt": "2020-06-30T16:03:45Z", "author": {"login": "rainwoodman"}, "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -159,15 +163,26 @@ def process(self, element):\n     res = pipeline.run()\n     res.wait_until_finish()\n \n+    # Verify static counter.\n+    metric_results = (\n+        res.metrics().query(\n+            MetricsFilter().with_metric(SomeDoFn.static_counter_elements)))\n+    outputs_static_counter = metric_results['counters'][0]\n+\n+    self.assertEqual(\n+        outputs_static_counter.key.metric.name,\n+        'metrics_static_counter_element')\n+    self.assertEqual(outputs_static_counter.committed, 8)\n+\n     # Verify user counter.\n     metric_results = (\n         res.metrics().query(\n             MetricsFilter().with_name('metrics_user_counter_element')))\n-    outputs_counter = metric_results['counters'][0]\n+    outputs_user_counter = metric_results['counters'][0]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0f4f05d6a0f2975c564c3723b38dac4eb89c89"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3211, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}