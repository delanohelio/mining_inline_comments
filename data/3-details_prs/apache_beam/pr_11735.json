{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDI4MzY3", "number": 11735, "title": "[BEAM-2939] Ensure that watermark advances even when no elements are output.", "bodyText": "Thank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-16T22:00:03Z", "url": "https://github.com/apache/beam/pull/11735", "merged": true, "mergeCommit": {"oid": "c9d9828cecc2c092443619c162de7fd89ad1b1d9"}, "closed": true, "closedAt": "2020-05-17T02:02:47Z", "author": {"login": "lukecwik"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABch98DPgH2gAyNDE5MDI4MzY3OjNiMTUzMjUyYjY2MTJjZDU3YzhiZTdkMjBhNzM2ZWM5ZWE0ODg3OWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABch-BjyAFqTQxMzExMTYwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b153252b6612cd57c8be7d20a736ec9ea48879d", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/3b153252b6612cd57c8be7d20a736ec9ea48879d", "committedDate": "2020-05-16T21:55:23Z", "message": "[BEAM-2939] Ensure that we update the watermark even when no elements are processed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTExNjAw", "url": "https://github.com/apache/beam/pull/11735#pullrequestreview-413111600", "createdAt": "2020-05-16T22:01:23Z", "commit": {"oid": "3b153252b6612cd57c8be7d20a736ec9ea48879d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMjowMToyM1rOGWc4ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMjowMToyM1rOGWc4ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NTA1MA==", "bodyText": "This is the key part of the change here, moving watermarkEstimator.setWatermark out of the while loop.", "url": "https://github.com/apache/beam/pull/11735#discussion_r426195050", "createdAt": "2020-05-16T22:01:23Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -487,51 +493,54 @@ public void splitRestriction(\n \n     @NewTracker\n     public RestrictionTracker<\n-            KV<UnboundedSource<OutputT, CheckpointT>, CheckpointT>, UnboundedSourceValue<OutputT>[]>\n+            UnboundedSourceRestriction<OutputT, CheckpointT>, UnboundedSourceValue<OutputT>[]>\n         restrictionTracker(\n-            @Restriction KV<UnboundedSource<OutputT, CheckpointT>, CheckpointT> restriction,\n+            @Restriction UnboundedSourceRestriction<OutputT, CheckpointT> restriction,\n             PipelineOptions pipelineOptions) {\n       return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions);\n     }\n \n     @ProcessElement\n     public ProcessContinuation processElement(\n-        RestrictionTracker<\n-                KV<UnboundedSource<OutputT, CheckpointT>, CheckpointT>, UnboundedSourceValue[]>\n+        RestrictionTracker<UnboundedSourceRestriction<OutputT, CheckpointT>, UnboundedSourceValue[]>\n             tracker,\n         ManualWatermarkEstimator<Instant> watermarkEstimator,\n         OutputReceiver<ValueWithRecordId<OutputT>> receiver,\n         BundleFinalizer bundleFinalizer)\n         throws IOException {\n-      KV<UnboundedSource<OutputT, CheckpointT>, CheckpointT> initialRestriction =\n+      UnboundedSourceRestriction<OutputT, CheckpointT> initialRestriction =\n           tracker.currentRestriction();\n \n       UnboundedSourceValue<OutputT>[] out = new UnboundedSourceValue[1];\n       while (tracker.tryClaim(out)) {\n         receiver.outputWithTimestamp(\n             new ValueWithRecordId<>(out[0].getValue(), out[0].getId()), out[0].getTimestamp());\n-        watermarkEstimator.setWatermark(ensureTimestampWithinBounds(out[0].getWatermark()));\n       }\n \n+      UnboundedSourceRestriction<OutputT, CheckpointT> currentRestriction =\n+          tracker.currentRestriction();\n+\n+      // Advance the watermark even if zero elements may have been output.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b153252b6612cd57c8be7d20a736ec9ea48879d"}, "originalPosition": 122}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4635, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}