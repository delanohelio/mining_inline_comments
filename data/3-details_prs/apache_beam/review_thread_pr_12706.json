{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTY2NDg1", "number": 12706, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1MjozMFrOEdhTBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1NTowNlrOEdhYhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mzg5NzAwOnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1MjozMFrOHIt_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyNjo0OVrOHJK3LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNDI4Mg==", "bodyText": "This constant appears to be unused.", "url": "https://github.com/apache/beam/pull/12706#discussion_r478904282", "createdAt": "2020-08-28T07:52:30Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -191,6 +194,17 @@\n \n   private final boolean finishBundleBeforeCheckpointing;\n \n+  /** Stores new finalizations being gathered. */\n+  private transient InMemoryBundleFinalizer bundleFinalizer;\n+  /** Pending bundle finalizations which have not been acknowledged yet. */\n+  private transient LinkedHashMap<Long, List<InMemoryBundleFinalizer.Finalization>>\n+      pendingFinalizations;\n+  /**\n+   * Keep a maximum of 32 bundle finalizations for {@link\n+   * BundleFinalizer.Callback#onBundleSuccess()}.\n+   */\n+  private static final int MAX_NUMBER_PENDING_BUNDLE_FINALIZATIONS = 32;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NzE5Nw==", "bodyText": "I forgot to add the clean-up logic bounding how many there could be.", "url": "https://github.com/apache/beam/pull/12706#discussion_r479377197", "createdAt": "2020-08-28T15:26:49Z", "author": {"login": "lukecwik"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -191,6 +194,17 @@\n \n   private final boolean finishBundleBeforeCheckpointing;\n \n+  /** Stores new finalizations being gathered. */\n+  private transient InMemoryBundleFinalizer bundleFinalizer;\n+  /** Pending bundle finalizations which have not been acknowledged yet. */\n+  private transient LinkedHashMap<Long, List<InMemoryBundleFinalizer.Finalization>>\n+      pendingFinalizations;\n+  /**\n+   * Keep a maximum of 32 bundle finalizations for {@link\n+   * BundleFinalizer.Callback#onBundleSuccess()}.\n+   */\n+  private static final int MAX_NUMBER_PENDING_BUNDLE_FINALIZATIONS = 32;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNDI4Mg=="}, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzkwNTQwOnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1NDowNFrOHIuFUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTozMjoyMFrOHJLD0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNTY4MQ==", "bodyText": "The default is to have just one checkpoint at a given time, but users can configure concurrent checkpointing which can ack checkpoints out of order.", "url": "https://github.com/apache/beam/pull/12706#discussion_r478905681", "createdAt": "2020-08-28T07:54:04Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM4MDQzMw==", "bodyText": "I see, I was basing the logic on UnboundedSourceWrapper but I have removed it now.", "url": "https://github.com/apache/beam/pull/12706#discussion_r479380433", "createdAt": "2020-08-28T15:32:20Z", "author": {"login": "lukecwik"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNTY4MQ=="}, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzkwODE5OnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1NDozM1rOHIuG4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTozMTo1OVrOHJLC8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjA4MA==", "bodyText": "Acknowledging the latest bundle finalize will also acknowledge all earlier requests for bundle finalization?", "url": "https://github.com/apache/beam/pull/12706#discussion_r478906080", "createdAt": "2020-08-28T07:54:33Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();\n+      pendingFinalizations.put(checkpointId, finalizations);\n+\n+      // confirm all finalizations\n+      for (InMemoryBundleFinalizer.Finalization finalization : finalizations) {\n+        finalization.getCallback().onBundleSuccess();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM4MDIxMQ==", "bodyText": "Between two checkpoint boundaries, the DoFn may have requested multiple finalizations (e.g. one per element processed) each having a different side effect.", "url": "https://github.com/apache/beam/pull/12706#discussion_r479380211", "createdAt": "2020-08-28T15:31:59Z", "author": {"login": "lukecwik"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();\n+      pendingFinalizations.put(checkpointId, finalizations);\n+\n+      // confirm all finalizations\n+      for (InMemoryBundleFinalizer.Finalization finalization : finalizations) {\n+        finalization.getCallback().onBundleSuccess();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjA4MA=="}, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzkxMTEwOnYy", "diffSide": "RIGHT", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1NTowNlrOHIuIpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTozMDoyOVrOHJK_lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjUzMg==", "bodyText": "Why is this one pending when we acknowledge it below?", "url": "https://github.com/apache/beam/pull/12706#discussion_r478906532", "createdAt": "2020-08-28T07:55:06Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();\n+      pendingFinalizations.put(checkpointId, finalizations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3OTM0OQ==", "bodyText": "I was basing my logic off of UnboundedSourceWrapper which seemed flawed but didn't know enough as to why it was done that way there but now I understand what the UnboundedSourceWrapper was doing.", "url": "https://github.com/apache/beam/pull/12706#discussion_r479379349", "createdAt": "2020-08-28T15:30:29Z", "author": {"login": "lukecwik"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();\n+      pendingFinalizations.put(checkpointId, finalizations);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjUzMg=="}, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 373, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}