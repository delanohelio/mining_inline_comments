{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzYxMjg4", "number": 11982, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMToyNDozNFrOEE2oZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzowNjowNVrOEFNaIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTI0ODM3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/io/gcp/gcsio.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMToyNDozNFrOGivOBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDoxODoyMlrOGizEHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3ODQwNg==", "bodyText": "I realize that there's a check for this in _create_default_gcs_bucket, but this method should fail if kms_key is set. Otherwise, it's saying that it's okay to have a default bucket with a KMS key.\n(The default bucket should not use a KMS key, and if a KMS key is specified Beam should not use a bucket with some other key (KMS or Google managed).)\nRefs:\n#8135 (comment)\nhttps://github.com/apache/beam/pull/8830/files", "url": "https://github.com/apache/beam/pull/11982#discussion_r439078406", "createdAt": "2020-06-11T21:24:34Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/io/gcp/gcsio.py", "diffHunk": "@@ -110,6 +110,27 @@ def parse_gcs_path(gcs_path, object_optional=False):\n   return match.group(1), match.group(2)\n \n \n+def default_gcs_bucket_name(project, region):\n+  from hashlib import md5\n+  return 'dataflow-staging-%s-%s' % (\n+      region, md5(project.encode('utf8')).hexdigest())\n+\n+\n+def get_or_create_default_gcs_bucket(project, region, kms_key=None):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e343bd8c145320217835dcf126a80c8bc5bc6e7a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NDcxNQ==", "bodyText": "okay I've made this not work in that case. WDYT?", "url": "https://github.com/apache/beam/pull/11982#discussion_r439094715", "createdAt": "2020-06-11T21:57:43Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/io/gcp/gcsio.py", "diffHunk": "@@ -110,6 +110,27 @@ def parse_gcs_path(gcs_path, object_optional=False):\n   return match.group(1), match.group(2)\n \n \n+def default_gcs_bucket_name(project, region):\n+  from hashlib import md5\n+  return 'dataflow-staging-%s-%s' % (\n+      region, md5(project.encode('utf8')).hexdigest())\n+\n+\n+def get_or_create_default_gcs_bucket(project, region, kms_key=None):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3ODQwNg=="}, "originalCommit": {"oid": "e343bd8c145320217835dcf126a80c8bc5bc6e7a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE0MTQwNg==", "bodyText": "I still need to review the rest of the code. Can look tomorrow, overloaded today", "url": "https://github.com/apache/beam/pull/11982#discussion_r439141406", "createdAt": "2020-06-12T00:18:22Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/io/gcp/gcsio.py", "diffHunk": "@@ -110,6 +110,27 @@ def parse_gcs_path(gcs_path, object_optional=False):\n   return match.group(1), match.group(2)\n \n \n+def default_gcs_bucket_name(project, region):\n+  from hashlib import md5\n+  return 'dataflow-staging-%s-%s' % (\n+      region, md5(project.encode('utf8')).hexdigest())\n+\n+\n+def get_or_create_default_gcs_bucket(project, region, kms_key=None):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3ODQwNg=="}, "originalCommit": {"oid": "e343bd8c145320217835dcf126a80c8bc5bc6e7a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODk4MDE3OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzowNjowNVrOGjTnkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDozNDoyMlrOGk1RUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NDc2OA==", "bodyText": "I don't understand this change - the order shouldn't matter, right?", "url": "https://github.com/apache/beam/pull/11982#discussion_r439674768", "createdAt": "2020-06-12T23:06:05Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "diffHunk": "@@ -93,7 +93,7 @@ def test_missing_required_options(self):\n \n     self.assertEqual(\n         self.check_errors_for_arguments(\n-            errors, ['project', 'staging_location', 'temp_location', 'region']),\n+            errors, ['project', 'temp_location', 'staging_location', 'region']),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdafc42464c3dfff18ef12520660ab4b0e7234e6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NDg5Ng==", "bodyText": "Rest of the PR LG", "url": "https://github.com/apache/beam/pull/11982#discussion_r439674896", "createdAt": "2020-06-12T23:06:48Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "diffHunk": "@@ -93,7 +93,7 @@ def test_missing_required_options(self):\n \n     self.assertEqual(\n         self.check_errors_for_arguments(\n-            errors, ['project', 'staging_location', 'temp_location', 'region']),\n+            errors, ['project', 'temp_location', 'staging_location', 'region']),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NDc2OA=="}, "originalCommit": {"oid": "bdafc42464c3dfff18ef12520660ab4b0e7234e6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI3NDcwNw==", "bodyText": "Fixed this mixup.", "url": "https://github.com/apache/beam/pull/11982#discussion_r441274707", "createdAt": "2020-06-17T04:34:22Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/options/pipeline_options_validator_test.py", "diffHunk": "@@ -93,7 +93,7 @@ def test_missing_required_options(self):\n \n     self.assertEqual(\n         self.check_errors_for_arguments(\n-            errors, ['project', 'staging_location', 'temp_location', 'region']),\n+            errors, ['project', 'temp_location', 'staging_location', 'region']),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NDc2OA=="}, "originalCommit": {"oid": "bdafc42464c3dfff18ef12520660ab4b0e7234e6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3672, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}