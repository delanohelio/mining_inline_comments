{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MzI0MzEx", "number": 12339, "title": "Interactive: clean up when pipeline is out of scope", "bodyText": "Completed the cleanup routine for all internal states held by the\ncurrent interactive environment.\nUtilized the environment inspector to determine whether a pipeline is\nout of scope: not assigned to variable and has no inspectable\nPCollections.\nInvoked the cleanup every time the user defined pipelines in watched\nscope are refreshed.\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-07-22T19:58:05Z", "url": "https://github.com/apache/beam/pull/12339", "merged": true, "mergeCommit": {"oid": "59b3383055c90d15fae97092d47947d8dde3ee43"}, "closed": true, "closedAt": "2020-08-03T21:00:50Z", "author": {"login": "KevinGG"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc34xsogBqjM1ODIxNjUyNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7YRfBAFqTQ2MDMyNTY3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "922880c532b83d9373aba73d90e776419b94fe38", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/922880c532b83d9373aba73d90e776419b94fe38", "committedDate": "2020-07-21T20:15:28Z", "message": "Interactive: clean up when pipeline is out of scope\n\n1. Completed the cleanup routine for all internal states held by the\n   current interactive environment.\n2. Utilized the environment inspector to determine whether a pipeline is\n   out of scope: not assigned to variable and has no inspectable\n   PCollections.\n3. Invoked the cleanup every time the user defined pipelines in watched\n   scope are refreshed.\n\nChange-Id: Ia0791b865def88e81e7b1595b8430d3a9df9516e"}, "afterCommit": {"oid": "dcfbaf90f646b0c99e075feb708bb3ea2497a697", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/dcfbaf90f646b0c99e075feb708bb3ea2497a697", "committedDate": "2020-07-24T00:20:38Z", "message": "Interactive: clean up when pipeline is out of scope\n\n1. Completed the cleanup routine for all internal states held by the\n   current interactive environment.\n2. Utilized the environment inspector to determine whether a pipeline is\n   out of scope: not assigned to variable and has no inspectable\n   PCollections.\n3. Invoked the cleanup every time the user defined pipelines in watched\n   scope are refreshed.\n\nChange-Id: Ia0791b865def88e81e7b1595b8430d3a9df9516e"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcfbaf90f646b0c99e075feb708bb3ea2497a697", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/dcfbaf90f646b0c99e075feb708bb3ea2497a697", "committedDate": "2020-07-24T00:20:38Z", "message": "Interactive: clean up when pipeline is out of scope\n\n1. Completed the cleanup routine for all internal states held by the\n   current interactive environment.\n2. Utilized the environment inspector to determine whether a pipeline is\n   out of scope: not assigned to variable and has no inspectable\n   PCollections.\n3. Invoked the cleanup every time the user defined pipelines in watched\n   scope are refreshed.\n\nChange-Id: Ia0791b865def88e81e7b1595b8430d3a9df9516e"}, "afterCommit": {"oid": "f79a8552cf864b98af07d9505cf594996dade9d5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f79a8552cf864b98af07d9505cf594996dade9d5", "committedDate": "2020-07-24T00:22:29Z", "message": "Interactive: clean up when pipeline is out of scope\n\n1. Completed the cleanup routine for all internal states held by the\n   current interactive environment.\n2. Utilized the environment inspector to determine whether a pipeline is\n   out of scope: not assigned to variable and has no inspectable\n   PCollections.\n3. Invoked the cleanup every time the user defined pipelines in watched\n   scope are refreshed.\n\nChange-Id: Ia0791b865def88e81e7b1595b8430d3a9df9516e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ae5c234599a023a576071ff7f2cd4054881f8e1", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/1ae5c234599a023a576071ff7f2cd4054881f8e1", "committedDate": "2020-07-24T19:14:42Z", "message": "Interactive: clean up when pipeline is out of scope\n\n1. Completed the cleanup routine for all internal states held by the\n   current interactive environment.\n2. Utilized the environment inspector to determine whether a pipeline is\n   out of scope: not assigned to variable and has no inspectable\n   PCollections.\n3. Invoked the cleanup every time the user defined pipelines in watched\n   scope are refreshed.\n\nChange-Id: Ia0791b865def88e81e7b1595b8430d3a9df9516e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8390afa46c8575ec88c0585215c0b81efa43937", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f8390afa46c8575ec88c0585215c0b81efa43937", "committedDate": "2020-07-24T22:15:14Z", "message": "Fixed a test that didn't start a test stream server. With the new cleaning up routine, all test stream servers held by current interactive environment will be stopped in the test. If the grpc server has never been started (happens in tests), the stop operation will hang for a long time.\n\nChange-Id: I2ae7ecf5e3ac11f32888887d82cd885fc64cc82f"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f79a8552cf864b98af07d9505cf594996dade9d5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f79a8552cf864b98af07d9505cf594996dade9d5", "committedDate": "2020-07-24T00:22:29Z", "message": "Interactive: clean up when pipeline is out of scope\n\n1. Completed the cleanup routine for all internal states held by the\n   current interactive environment.\n2. Utilized the environment inspector to determine whether a pipeline is\n   out of scope: not assigned to variable and has no inspectable\n   PCollections.\n3. Invoked the cleanup every time the user defined pipelines in watched\n   scope are refreshed.\n\nChange-Id: Ia0791b865def88e81e7b1595b8430d3a9df9516e"}, "afterCommit": {"oid": "f8390afa46c8575ec88c0585215c0b81efa43937", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/f8390afa46c8575ec88c0585215c0b81efa43937", "committedDate": "2020-07-24T22:15:14Z", "message": "Fixed a test that didn't start a test stream server. With the new cleaning up routine, all test stream servers held by current interactive environment will be stopped in the test. If the grpc server has never been started (happens in tests), the stop operation will hang for a long time.\n\nChange-Id: I2ae7ecf5e3ac11f32888887d82cd885fc64cc82f"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzI1Njcz", "url": "https://github.com/apache/beam/pull/12339#pullrequestreview-460325673", "createdAt": "2020-08-03T20:40:05Z", "commit": {"oid": "f8390afa46c8575ec88c0585215c0b81efa43937"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMDo0MDowNVrOG7H_fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMDo0MDoxN1rOG7H_0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY1MDExMQ==", "bodyText": "should we check that it's running / stopped before evicting?", "url": "https://github.com/apache/beam/pull/12339#discussion_r464650111", "createdAt": "2020-08-03T20:40:05Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_environment.py", "diffHunk": "@@ -364,26 +382,37 @@ def get_background_caching_job(self, pipeline):\n     \"\"\"Gets the background caching job started from the given pipeline.\"\"\"\n     return self._background_caching_jobs.get(str(id(pipeline)), None)\n \n+  def evict_background_caching_job(self, pipeline=None):\n+    \"\"\"Evicts the background caching job started from the given pipeline. Noop\n+    if the given pipeline is absent from the environment. If no pipeline is\n+    specified, evicts for all pipelines.\"\"\"\n+    if pipeline:\n+      return self._background_caching_jobs.pop(str(id(pipeline)), None)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8390afa46c8575ec88c0585215c0b81efa43937"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY1MDE5Mw==", "bodyText": "should we check that it's running / stopped before evicting?", "url": "https://github.com/apache/beam/pull/12339#discussion_r464650193", "createdAt": "2020-08-03T20:40:17Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_environment.py", "diffHunk": "@@ -364,26 +382,37 @@ def get_background_caching_job(self, pipeline):\n     \"\"\"Gets the background caching job started from the given pipeline.\"\"\"\n     return self._background_caching_jobs.get(str(id(pipeline)), None)\n \n+  def evict_background_caching_job(self, pipeline=None):\n+    \"\"\"Evicts the background caching job started from the given pipeline. Noop\n+    if the given pipeline is absent from the environment. If no pipeline is\n+    specified, evicts for all pipelines.\"\"\"\n+    if pipeline:\n+      return self._background_caching_jobs.pop(str(id(pipeline)), None)\n+    self._background_caching_jobs.clear()\n+\n   def set_test_stream_service_controller(self, pipeline, controller):\n     \"\"\"Sets the test stream service controller that has started a gRPC server\n-    serving the test stream for any job started from the given user-defined\n+    serving the test stream for any job started from the given user defined\n     pipeline.\n     \"\"\"\n     self._test_stream_service_controllers[str(id(pipeline))] = controller\n \n   def get_test_stream_service_controller(self, pipeline):\n     \"\"\"Gets the test stream service controller that has started a gRPC server\n-    serving the test stream for any job started from the given user-defined\n+    serving the test stream for any job started from the given user defined\n     pipeline.\n     \"\"\"\n     return self._test_stream_service_controllers.get(str(id(pipeline)), None)\n \n   def evict_test_stream_service_controller(self, pipeline):\n     \"\"\"Evicts and pops the test stream service controller that has started a\n     gRPC server serving the test stream for any job started from the given\n-    user-defined pipeline.\n+    user defined pipeline. Noop if the given pipeline is absent from the\n+    environment. If no pipeline is specified, evicts for all pipelines.\n     \"\"\"\n-    return self._test_stream_service_controllers.pop(str(id(pipeline)), None)\n+    if pipeline:\n+      return self._test_stream_service_controllers.pop(str(id(pipeline)), None)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8390afa46c8575ec88c0585215c0b81efa43937"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3878, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}