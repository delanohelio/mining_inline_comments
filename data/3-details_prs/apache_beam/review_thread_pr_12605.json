{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDMwMDc1", "number": 12605, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoxOTowMVrOEaE9FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOTo0NjoxM1rOEcN9-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Nzc5NjA1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoxOTowMVrOHDRukQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToxMDo1MFrOHETb4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5ODIyNQ==", "bodyText": "Given that the set of subtransformation is a tree (no cycles) we can get rid of this.", "url": "https://github.com/apache/beam/pull/12605#discussion_r473198225", "createdAt": "2020-08-19T17:19:01Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -524,6 +524,22 @@ def add_parent(child, parent):\n         add_parent(parent, parents.get(parent))\n       components.transforms[parent].subtransforms.append(child)\n \n+  copied_subtransform_ids = set()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3d0298cba5013dc117038c8afc444d737793343"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3NDc4NA==", "bodyText": "Thanks! This simplifies things.", "url": "https://github.com/apache/beam/pull/12605#discussion_r474274784", "createdAt": "2020-08-20T21:10:50Z", "author": {"login": "yifanmai"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -524,6 +524,22 @@ def add_parent(child, parent):\n         add_parent(parent, parents.get(parent))\n       components.transforms[parent].subtransforms.append(child)\n \n+  copied_subtransform_ids = set()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5ODIyNQ=="}, "originalCommit": {"oid": "f3d0298cba5013dc117038c8afc444d737793343"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NzgzMDg1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoyODoyOVrOHDSErA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToxMDo1NVrOHETcBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMzg4NA==", "bodyText": "I think we only want to copy sub-transforms of the transforms from line 552 above, perhaps move this logic up there? (Just a thought, maybe having the method be called (copy_subtransforms and having it copy (recursively) just the subtransforms could make this even easier to follow).", "url": "https://github.com/apache/beam/pull/12605#discussion_r473203884", "createdAt": "2020-08-19T17:28:29Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -541,6 +557,14 @@ def add_parent(child, parent):\n     components.transforms[transform_id].CopyFrom(transform)\n     add_parent(transform_id, stage.parent)\n \n+  if partial:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3d0298cba5013dc117038c8afc444d737793343"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3NDgyMQ==", "bodyText": "Moved it back up and cleaned up the method.", "url": "https://github.com/apache/beam/pull/12605#discussion_r474274821", "createdAt": "2020-08-20T21:10:55Z", "author": {"login": "yifanmai"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -541,6 +557,14 @@ def add_parent(child, parent):\n     components.transforms[transform_id].CopyFrom(transform)\n     add_parent(transform_id, stage.parent)\n \n+  if partial:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMzg4NA=="}, "originalCommit": {"oid": "f3d0298cba5013dc117038c8afc444d737793343"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDIzNTQzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOTo0Mzo1M1rOHGnITQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOTo0Mzo1M1rOHGnITQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY5NDYwNQ==", "bodyText": "Nit: You can move this up into the if partial block above.", "url": "https://github.com/apache/beam/pull/12605#discussion_r476694605", "createdAt": "2020-08-25T19:43:53Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -540,6 +549,8 @@ def add_parent(child, parent):\n     transform_id = unique_name(components.transforms, stage.name)\n     components.transforms[transform_id].CopyFrom(transform)\n     add_parent(transform_id, stage.parent)\n+    if partial:\n+      copy_subtransforms(transform)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4598d6f5ee40a6f856b0b881886bd6ef1876bdc3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDI0NDQzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOTo0NjoxM1rOHGnNfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo0MDoyNFrOHHY1cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY5NTkzMw==", "bodyText": "14:14:31 apache_beam/runners/portability/fn_api_runner/translations.py:1485: error: syntax error in type comment 'Stage -> beam_runner_api_pb2.PTransform'  [syntax]\n14:14:31 apache_beam/runners/portability/fn_api_runner/translations.py:1485: note: Suggestion: wrap argument types in parentheses\n14:14:31 Found 1 error in 1 file (checked 719 source files)\n14:14:31 error: mypy exited with status 2\n14:14:32 ERROR: InvocationError for command /home/jenkins/jenkins-slave/workspace/beam_PreCommit_PythonLint_Commit/src/sdks/python/test-suites/tox/py37/build/srcs/sdks/python/target/.tox-py37-mypy/py37-mypy/bin/python setup.py mypy (exited with code 1)\n14:14:32 py37-mypy run-test-post: commands[0] | bash /home/jenkins/jenkins-slave/workspace/beam_PreCommit_PythonLint_Commit/src/sdks/python/test-suites/tox/py37/build/srcs/sdks/python/scripts/run_tox_cleanup.sh\n14:14:32 ___________________________________ summary ____________________________________\n14:14:32 ERROR:   py37-mypy: commands failed", "url": "https://github.com/apache/beam/pull/12605#discussion_r476695933", "createdAt": "2020-08-25T19:46:13Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -1475,6 +1482,12 @@ def only_element(iterable):\n   return element\n \n \n+def only_transform(stage):\n+  # type: Stage -> beam_runner_api_pb2.PTransform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4598d6f5ee40a6f856b0b881886bd6ef1876bdc3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwODk3Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/beam/pull/12605#discussion_r477508976", "createdAt": "2020-08-26T18:40:24Z", "author": {"login": "yifanmai"}, "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -1475,6 +1482,12 @@ def only_element(iterable):\n   return element\n \n \n+def only_transform(stage):\n+  # type: Stage -> beam_runner_api_pb2.PTransform", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY5NTkzMw=="}, "originalCommit": {"oid": "4598d6f5ee40a6f856b0b881886bd6ef1876bdc3"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 496, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}