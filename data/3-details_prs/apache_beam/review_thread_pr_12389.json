{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3Njg4Mzgw", "number": 12389, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDo1MzoyOFrOETDbIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoyMzozNlrOEYjSlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDE0NDk2OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDo1MzoyOFrOG4kwQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDozNjowMlrOG5dkzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk3NTYxOA==", "bodyText": "I believe the type you want here is TableRow.", "url": "https://github.com/apache/beam/pull/12389#discussion_r461975618", "createdAt": "2020-07-29T00:53:28Z", "author": {"login": "apilloud"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -442,6 +450,17 @@ private static Object fromBeamField(FieldType fieldType, Object fieldValue) {\n         }\n         return convertedItems;\n \n+      case MAP:\n+        Map<?, ?> pairs = (Map<?, ?>) fieldValue;\n+        convertedItems = Lists.newArrayListWithCapacity(pairs.size());\n+        for (Map.Entry<?, ?> pair : pairs.entrySet()) {\n+          HashMap<String, Object> item = new HashMap<>(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bbf390c0d344a170e604ec140211cf09a5d2c06"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwNjU3Mw==", "bodyText": "Ok, I will return a List of TableRows instead of Maps.", "url": "https://github.com/apache/beam/pull/12389#discussion_r462906573", "createdAt": "2020-07-30T10:36:02Z", "author": {"login": "rworley-monster"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -442,6 +450,17 @@ private static Object fromBeamField(FieldType fieldType, Object fieldValue) {\n         }\n         return convertedItems;\n \n+      case MAP:\n+        Map<?, ?> pairs = (Map<?, ?>) fieldValue;\n+        convertedItems = Lists.newArrayListWithCapacity(pairs.size());\n+        for (Map.Entry<?, ?> pair : pairs.entrySet()) {\n+          HashMap<String, Object> item = new HashMap<>(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk3NTYxOA=="}, "originalCommit": {"oid": "3bbf390c0d344a170e604ec140211cf09a5d2c06"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTcxNDQ5OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjo1Nzo0M1rOHA74Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyOTo1N1rOHBtsAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc0MzExOA==", "bodyText": "You'll need to convert the types stored in the map as well. Something like fromBeamField(fieldType.getMapKeyType(), pair.getKey())", "url": "https://github.com/apache/beam/pull/12389#discussion_r470743118", "createdAt": "2020-08-14T16:57:43Z", "author": {"login": "apilloud"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -443,6 +467,17 @@ public static TableRow toTableRow(Row row) {\n         }\n         return convertedItems;\n \n+      case MAP:\n+        Map<?, ?> pairs = (Map<?, ?>) fieldValue;\n+        convertedItems = Lists.newArrayListWithCapacity(pairs.size());\n+        for (Map.Entry<?, ?> pair : pairs.entrySet()) {\n+          convertedItems.add(\n+              new TableRow()\n+                  .set(BIGQUERY_MAP_KEY_FIELD_NAME, pair.getKey())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1OTE2OA==", "bodyText": "Nice catch.  I've updated it with that and tried to copy the above ITERABLE conversion as closely as possible.", "url": "https://github.com/apache/beam/pull/12389#discussion_r471559168", "createdAt": "2020-08-17T15:29:57Z", "author": {"login": "rworley-monster"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -443,6 +467,17 @@ public static TableRow toTableRow(Row row) {\n         }\n         return convertedItems;\n \n+      case MAP:\n+        Map<?, ?> pairs = (Map<?, ?>) fieldValue;\n+        convertedItems = Lists.newArrayListWithCapacity(pairs.size());\n+        for (Map.Entry<?, ?> pair : pairs.entrySet()) {\n+          convertedItems.add(\n+              new TableRow()\n+                  .set(BIGQUERY_MAP_KEY_FIELD_NAME, pair.getKey())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc0MzExOA=="}, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTc1NjQ0OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoxMToxOFrOHA8S6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTozMToyNFrOHBtv0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc0OTkyOA==", "bodyText": "nit: The name might be a little confusing, this isn't actually converting an Avro Map type. Something like convertAvroRecordToMap might reduce that risk.", "url": "https://github.com/apache/beam/pull/12389#discussion_r470749928", "createdAt": "2020-08-14T17:11:18Z", "author": {"login": "apilloud"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -679,6 +714,20 @@ private static Object convertAvroArray(\n     return ret;\n   }\n \n+  private static Object convertAvroMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2MDE0Ng==", "bodyText": "Agreed, that's a more accurate name and I have updated it to that.", "url": "https://github.com/apache/beam/pull/12389#discussion_r471560146", "createdAt": "2020-08-17T15:31:24Z", "author": {"login": "rworley-monster"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -679,6 +714,20 @@ private static Object convertAvroArray(\n     return ret;\n   }\n \n+  private static Object convertAvroMap(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc0OTkyOA=="}, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTc2OTc2OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoxNToxNFrOHA8bHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTozMjozMFrOHBtywQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MjAyOA==", "bodyText": "We prefer to use ImmutableMap when possible, there are examples in this file.", "url": "https://github.com/apache/beam/pull/12389#discussion_r470752028", "createdAt": "2020-08-14T17:15:14Z", "author": {"login": "apilloud"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -679,6 +714,20 @@ private static Object convertAvroArray(\n     return ret;\n   }\n \n+  private static Object convertAvroMap(\n+      FieldType beamField, Object value, BigQueryUtils.ConversionOptions options) {\n+    List<GenericData.Record> records = (List<GenericData.Record>) value;\n+    HashMap<Object, Object> ret = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2MDg5Nw==", "bodyText": "Sure, I updated it to use ImmutableMap instead.", "url": "https://github.com/apache/beam/pull/12389#discussion_r471560897", "createdAt": "2020-08-17T15:32:30Z", "author": {"login": "rworley-monster"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -679,6 +714,20 @@ private static Object convertAvroArray(\n     return ret;\n   }\n \n+  private static Object convertAvroMap(\n+      FieldType beamField, Object value, BigQueryUtils.ConversionOptions options) {\n+    List<GenericData.Record> records = (List<GenericData.Record>) value;\n+    HashMap<Object, Object> ret = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MjAyOA=="}, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTc5NDc2OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoyMzozNlrOHA8qwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozMzozNlrOHBwIpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NjAzNA==", "bodyText": "This is something that is going to need more discussion. I have two concerns:\n\nThe ZetaSQL dialect doesn't support map types, so this will break that use case.\nThe user might have a row matching this struct that isn't suppose to be a map.", "url": "https://github.com/apache/beam/pull/12389#discussion_r470756034", "createdAt": "2020-08-14T17:23:36Z", "author": {"login": "apilloud"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -263,6 +267,18 @@ private static FieldType fromTableFieldSchemaType(\n                 \"SqlTimestampWithLocalTzType\", FieldType.STRING, \"\", FieldType.DATETIME) {});\n       case \"STRUCT\":\n       case \"RECORD\":\n+        // check if record represents a map entry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5OTI3MA==", "bodyText": "Regarding the second concern, I wonder if a user with a { \"key\", \"value\" } struct would always be satisfied to work with the field as a Map in Beam.  If not, then I suppose we would need to somehow tag the field schema with a marker that a user would not reasonably collide with.  The options I see are:\n\nField names (could be something like \"beam_key\" or \"map_key\").  Personally, I'm not a fan of affecting schema names like this.\nExtra field (in addition to \"key\" and \"value\"), could be something like \"beam_map\" with all true or null values.  Similarly messy like above.\nTag in field description(s) with a warning for the user to not delete it.  Might be something like #beam-map-do-not-delete#.\n\nThough these options require that the fields are created via Beam and not by the user beforehand.  Or the user would need to know to use these special markers to enable the Beam map functionality.", "url": "https://github.com/apache/beam/pull/12389#discussion_r471599270", "createdAt": "2020-08-17T16:33:36Z", "author": {"login": "rworley-monster"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -263,6 +267,18 @@ private static FieldType fromTableFieldSchemaType(\n                 \"SqlTimestampWithLocalTzType\", FieldType.STRING, \"\", FieldType.DATETIME) {});\n       case \"STRUCT\":\n       case \"RECORD\":\n+        // check if record represents a map entry", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NjAzNA=="}, "originalCommit": {"oid": "2c3f57e2d0567ad11fb53a49c556cf9395b1912f"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 968, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}