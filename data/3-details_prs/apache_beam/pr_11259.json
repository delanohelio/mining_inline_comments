{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzM5MTY1", "number": 11259, "title": "Use attachValues in SQL", "bodyText": "Use the more efficient attachValues when building rows in SQL. addValues does a deep copy of the parameter, while addValue does not. We have also recently made API improvements that makes addValues slightly less efficient, so this allows SQL to bypass that.\nWe are not using attachValues on any of the IOs. This is strictly for internal rows generated by SQL.", "createdAt": "2020-03-29T23:23:57Z", "url": "https://github.com/apache/beam/pull/11259", "merged": true, "mergeCommit": {"oid": "ed5a358b94aa423a5d2a1ce97a685de12ae976ba"}, "closed": true, "closedAt": "2020-04-05T04:21:47Z", "author": {"login": "reuvenlax"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcShY4nAH2gAyMzk1MzM5MTY1OjA2NGY4OGM3YjQzYmM1MGM1YmQ5YTY2NDI0YmUxMzI3YTdlMjYwMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUG3RPAFqTM4NzU1NzI2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "064f88c7b43bc50c5bd9a66424be1327a7e26012", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/064f88c7b43bc50c5bd9a66424be1327a7e26012", "committedDate": "2020-03-29T22:10:46Z", "message": "foo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "348e746ab4f2cf9099a402f968b6f97526b19d32", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/348e746ab4f2cf9099a402f968b6f97526b19d32", "committedDate": "2020-03-29T23:18:25Z", "message": "replace addValues with attachValues in SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dd5391c309395712694d6f206c71daff25e941e", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/4dd5391c309395712694d6f206c71daff25e941e", "committedDate": "2020-03-29T23:24:20Z", "message": "fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDA5NjY2", "url": "https://github.com/apache/beam/pull/11259#pullrequestreview-384009666", "createdAt": "2020-03-30T16:08:20Z", "commit": {"oid": "4dd5391c309395712694d6f206c71daff25e941e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb15f8a1c34ed428ea9170a102d68e78e752cca5", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/fb15f8a1c34ed428ea9170a102d68e78e752cca5", "committedDate": "2020-04-01T23:01:10Z", "message": "fix BeamCalcRel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f806d2c610c1ae9a51d90dbaa3059bbeca01217", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/7f806d2c610c1ae9a51d90dbaa3059bbeca01217", "committedDate": "2020-04-02T00:10:20Z", "message": "foo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82973bd890973276d8a1889be651167e41d3e479", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/82973bd890973276d8a1889be651167e41d3e479", "committedDate": "2020-04-02T16:57:27Z", "message": "fix failures and add pipeline option to control"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0155354227bf10e89bddb3271ee5348088c68d53", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/0155354227bf10e89bddb3271ee5348088c68d53", "committedDate": "2020-04-02T16:59:04Z", "message": "fix return"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTQ4OTU1", "url": "https://github.com/apache/beam/pull/11259#pullrequestreview-387548955", "createdAt": "2020-04-03T20:09:11Z", "commit": {"oid": "0155354227bf10e89bddb3271ee5348088c68d53"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDowOToxMVrOGAnLIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoxNDoyMlrOGAnZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NTAxMQ==", "bodyText": "I think this is missing a .build()", "url": "https://github.com/apache/beam/pull/11259#discussion_r403295011", "createdAt": "2020-04-03T20:09:11Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/rel/BeamAggregationRel.java", "diffHunk": "@@ -343,7 +351,11 @@ public void processElement(\n             fieldValues.add(windowStartFieldIndex, ((IntervalWindow) window).start());\n           }\n \n-          o.output(Row.withSchema(outputSchema).addValues(fieldValues).build());\n+          Row row =\n+              verifyRowValues\n+                  ? Row.withSchema(outputSchema).addValues(fieldValues).build()\n+                  : Row.withSchema(outputSchema).attachValues(fieldValues);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0155354227bf10e89bddb3271ee5348088c68d53"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5ODUzOA==", "bodyText": "and here", "url": "https://github.com/apache/beam/pull/11259#discussion_r403298538", "createdAt": "2020-04-03T20:14:15Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/BeamZetaSqlCalcRel.java", "diffHunk": "@@ -185,14 +193,19 @@ public void processElement(ProcessContext c) {\n         return;\n       }\n \n-      Row.Builder output = Row.withSchema(outputSchema);\n+      List<Object> values = Lists.newArrayListWithExpectedSize(outputSchema.getFieldCount());\n       for (int i = 0; i < outputSchema.getFieldCount(); i++) {\n         // TODO[BEAM-8630]: performance optimization by bundling the gRPC calls\n         Value v = projectExps.get(i).execute(columns, params);\n-        output.addValue(\n-            ZetaSqlUtils.zetaSqlValueToJavaObject(v, outputSchema.getField(i).getType()));\n+        values.add(\n+            ZetaSqlUtils.zetaSqlValueToJavaObject(\n+                v, outputSchema.getField(i).getType(), verifyRowValues));\n       }\n-      c.output(output.build());\n+      Row outputRow =\n+          verifyRowValues\n+              ? Row.withSchema(outputSchema).addValues(values).build()\n+              : Row.withSchema(outputSchema).attachValues(values);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0155354227bf10e89bddb3271ee5348088c68d53"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5ODU4OQ==", "bodyText": "and here", "url": "https://github.com/apache/beam/pull/11259#discussion_r403298589", "createdAt": "2020-04-03T20:14:22Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSqlUtils.java", "diffHunk": "@@ -227,18 +229,25 @@ private static Instant zetaSqlTimestampValueToJodaInstant(Value timestampValue)\n     return Instant.ofEpochMilli(millis);\n   }\n \n-  private static List<Object> zetaSqlArrayValueToJavaList(Value arrayValue, FieldType elementType) {\n+  private static List<Object> zetaSqlArrayValueToJavaList(\n+      Value arrayValue, FieldType elementType, boolean verifyValues) {\n     return arrayValue.getElementList().stream()\n-        .map(e -> zetaSqlValueToJavaObject(e, elementType))\n+        .map(e -> zetaSqlValueToJavaObject(e, elementType, verifyValues))\n         .collect(Collectors.toList());\n   }\n \n-  private static Row zetaSqlStructValueToBeamRow(Value structValue, Schema schema) {\n+  private static Row zetaSqlStructValueToBeamRow(\n+      Value structValue, Schema schema, boolean verifyValues) {\n     List<Object> objects = new ArrayList<>(schema.getFieldCount());\n     List<Value> values = structValue.getFieldList();\n     for (int i = 0; i < values.size(); i++) {\n-      objects.add(zetaSqlValueToJavaObject(values.get(i), schema.getField(i).getType()));\n+      objects.add(\n+          zetaSqlValueToJavaObject(values.get(i), schema.getField(i).getType(), verifyValues));\n     }\n-    return Row.withSchema(schema).addValues(objects).build();\n+    Row row =\n+        verifyValues\n+            ? Row.withSchema(schema).addValues(objects).build()\n+            : Row.withSchema(schema).attachValues(objects);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0155354227bf10e89bddb3271ee5348088c68d53"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTU3MjYy", "url": "https://github.com/apache/beam/pull/11259#pullrequestreview-387557262", "createdAt": "2020-04-03T20:24:22Z", "commit": {"oid": "0155354227bf10e89bddb3271ee5348088c68d53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4767, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}