{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MDA3Njg1", "number": 12711, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzo0MDo1OVrOEiohYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzo0MTowOVrOEiohlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzUwOTQ2OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzo0MDo1OVrOHQn8hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzoyNDoyM1rOHsaI8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5MzczNA==", "bodyText": "It's possible for users of BigQueryIO to hit this code path through BigQueryIO.readTableRowsWithSchema() right? This will be a breaking change since the Java type for a DATETIME field changes from Instant to LocalDateTime. I think that's ok since it's experimental, but we should add a note to CHANGES.md", "url": "https://github.com/apache/beam/pull/12711#discussion_r487193734", "createdAt": "2020-09-11T17:40:59Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -257,10 +263,9 @@ private static FieldType fromTableFieldSchemaType(\n       case \"DATE\":\n         return FieldType.logicalType(SqlTypes.DATE);\n       case \"DATETIME\":\n-        // TODO[BEAM-10240]: map to the new logical type when ZetaSQL DATETIME type is supported\n-        return FieldType.logicalType(\n-            new PassThroughLogicalType<Instant>(\n-                \"SqlTimestampWithLocalTzType\", FieldType.STRING, \"\", FieldType.DATETIME) {});\n+        return FieldType.logicalType(SqlTypes.DATETIME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "705046e2c5275c3efcc3d0f6f541ae53d72df252"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyNzY2NA==", "bodyText": "Done. Thanks for catching this.", "url": "https://github.com/apache/beam/pull/12711#discussion_r516327664", "createdAt": "2020-11-02T23:24:23Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtils.java", "diffHunk": "@@ -257,10 +263,9 @@ private static FieldType fromTableFieldSchemaType(\n       case \"DATE\":\n         return FieldType.logicalType(SqlTypes.DATE);\n       case \"DATETIME\":\n-        // TODO[BEAM-10240]: map to the new logical type when ZetaSQL DATETIME type is supported\n-        return FieldType.logicalType(\n-            new PassThroughLogicalType<Instant>(\n-                \"SqlTimestampWithLocalTzType\", FieldType.STRING, \"\", FieldType.DATETIME) {});\n+        return FieldType.logicalType(SqlTypes.DATETIME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5MzczNA=="}, "originalCommit": {"oid": "705046e2c5275c3efcc3d0f6f541ae53d72df252"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzUwOTk4OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzo0MTowOVrOHQn85Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzoyNDo0NVrOHsaJzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5MzgyOQ==", "bodyText": "Could you make sure that BigQueryUtils.fromTableSchema is tested with NUMERIC and DATETIME? It looks like only TIMESTAMP may be tested now (as part of testTableFromSchema_flat): \n  \n    \n      beam/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtilsTest.java\n    \n    \n        Lines 91 to 106\n      in\n      738a910\n    \n    \n    \n    \n\n        \n          \n           private static final TableFieldSchema TIMESTAMP_VARIANT1 = \n        \n\n        \n          \n               new TableFieldSchema() \n        \n\n        \n          \n                   .setName(\"timestamp_variant1\") \n        \n\n        \n          \n                   .setType(StandardSQLTypeName.TIMESTAMP.toString()); \n        \n\n        \n          \n           private static final TableFieldSchema TIMESTAMP_VARIANT2 = \n        \n\n        \n          \n               new TableFieldSchema() \n        \n\n        \n          \n                   .setName(\"timestamp_variant2\") \n        \n\n        \n          \n                   .setType(StandardSQLTypeName.TIMESTAMP.toString()); \n        \n\n        \n          \n           private static final TableFieldSchema TIMESTAMP_VARIANT3 = \n        \n\n        \n          \n               new TableFieldSchema() \n        \n\n        \n          \n                   .setName(\"timestamp_variant3\") \n        \n\n        \n          \n                   .setType(StandardSQLTypeName.TIMESTAMP.toString()); \n        \n\n        \n          \n           private static final TableFieldSchema TIMESTAMP_VARIANT4 = \n        \n\n        \n          \n               new TableFieldSchema() \n        \n\n        \n          \n                   .setName(\"timestamp_variant4\") \n        \n\n        \n          \n                   .setType(StandardSQLTypeName.TIMESTAMP.toString());", "url": "https://github.com/apache/beam/pull/12711#discussion_r487193829", "createdAt": "2020-09-11T17:41:09Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtilsTest.java", "diffHunk": "@@ -452,6 +457,27 @@ public void testMicroPrecisionTimeType() {\n         equalTo(t));\n   }\n \n+  @Test\n+  public void testMicroPrecisionDateTimeType() {\n+    LocalDateTime dt = LocalDateTime.parse(\"2020-06-04T12:34:56.789876\");\n+    assertThat(\n+        BigQueryUtils.convertAvroFormat(\n+            FieldType.logicalType(SqlTypes.DATETIME), new Utf8(dt.toString()), REJECT_OPTIONS),\n+        equalTo(dt));\n+  }\n+\n+  @Test\n+  public void testNumericType() {\n+    // BigQuery NUMERIC type has precision 38 and scale 9\n+    BigDecimal n = new BigDecimal(\"123456789.987654321\").setScale(9);\n+    assertThat(\n+        BigQueryUtils.convertAvroFormat(\n+            FieldType.DECIMAL,\n+            new Conversions.DecimalConversion().toBytes(n, null, LogicalTypes.decimal(38, 9)),\n+            REJECT_OPTIONS),\n+        equalTo(n));\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "705046e2c5275c3efcc3d0f6f541ae53d72df252"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyNzg4Nw==", "bodyText": "Done. Added test for new types: DATE, TIME, and DATETIME.\nTests for NUMERICS is already added in #12730", "url": "https://github.com/apache/beam/pull/12711#discussion_r516327887", "createdAt": "2020-11-02T23:24:45Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryUtilsTest.java", "diffHunk": "@@ -452,6 +457,27 @@ public void testMicroPrecisionTimeType() {\n         equalTo(t));\n   }\n \n+  @Test\n+  public void testMicroPrecisionDateTimeType() {\n+    LocalDateTime dt = LocalDateTime.parse(\"2020-06-04T12:34:56.789876\");\n+    assertThat(\n+        BigQueryUtils.convertAvroFormat(\n+            FieldType.logicalType(SqlTypes.DATETIME), new Utf8(dt.toString()), REJECT_OPTIONS),\n+        equalTo(dt));\n+  }\n+\n+  @Test\n+  public void testNumericType() {\n+    // BigQuery NUMERIC type has precision 38 and scale 9\n+    BigDecimal n = new BigDecimal(\"123456789.987654321\").setScale(9);\n+    assertThat(\n+        BigQueryUtils.convertAvroFormat(\n+            FieldType.DECIMAL,\n+            new Conversions.DecimalConversion().toBytes(n, null, LogicalTypes.decimal(38, 9)),\n+            REJECT_OPTIONS),\n+        equalTo(n));\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5MzgyOQ=="}, "originalCommit": {"oid": "705046e2c5275c3efcc3d0f6f541ae53d72df252"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 385, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}