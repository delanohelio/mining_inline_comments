{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTY2NDg1", "number": 12706, "title": "[BEAM-6868, BEAM-10670] Add support for bundle finalization to DoFnOperator for non-portable streaming pipelines.", "bodyText": "I used the UnboundedSourceFunction as a guide to implementing the bundle finalization hook for the DoFnOperator.\nSince checkpointing support is only supported when using shutdownSourcesAfterIdleMs so I added a new validates runner task that runs a subset of the tests that rely on bundle finalization.\nI also added support for Impulse translation for non-portable streaming pipelines.\nThis is the base for swapping over non-portable Flink to use SDF instead of UnboundedSources.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-27T21:40:35Z", "url": "https://github.com/apache/beam/pull/12706", "merged": true, "mergeCommit": {"oid": "87e4ff2dc53068a4357848fae1953bd2e391e753"}, "closed": true, "closedAt": "2020-09-11T20:09:54Z", "author": {"login": "lukecwik"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDHdPegH2gAyNDc0OTY2NDg1OmI2NGE5ZTgzMjg4OTNhNDdjZjJhNmJjZDUyMjE4MjUzZDY1ZmVmYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHw5hvgFqTQ4NjU2NzQ5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/b64a9e8328893a47cf2a6bcd52218253d65fefbc", "committedDate": "2020-08-27T21:40:17Z", "message": "[BEAM-10670] Add support for bundle finalization to DoFnOperator for non-portable streaming pipelines.\n\nI used the UnboundedSourceFunction as a guide to implementing the bundle finalization hook for the DoFnOperator.\nSince checkpointing support is only supported when using shutdownSourcesAfterIdleMs so I added a new validates runner task that runs a subset of the tests that rely on bundle finalization.\n\nI also added support for Impulse translation for non-portable streaming pipelines."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NDI5NzE0", "url": "https://github.com/apache/beam/pull/12706#pullrequestreview-477429714", "createdAt": "2020-08-28T07:48:12Z", "commit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1MjozMFrOHIt_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1NTowNlrOHIuIpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNDI4Mg==", "bodyText": "This constant appears to be unused.", "url": "https://github.com/apache/beam/pull/12706#discussion_r478904282", "createdAt": "2020-08-28T07:52:30Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -191,6 +194,17 @@\n \n   private final boolean finishBundleBeforeCheckpointing;\n \n+  /** Stores new finalizations being gathered. */\n+  private transient InMemoryBundleFinalizer bundleFinalizer;\n+  /** Pending bundle finalizations which have not been acknowledged yet. */\n+  private transient LinkedHashMap<Long, List<InMemoryBundleFinalizer.Finalization>>\n+      pendingFinalizations;\n+  /**\n+   * Keep a maximum of 32 bundle finalizations for {@link\n+   * BundleFinalizer.Callback#onBundleSuccess()}.\n+   */\n+  private static final int MAX_NUMBER_PENDING_BUNDLE_FINALIZATIONS = 32;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNTY4MQ==", "bodyText": "The default is to have just one checkpoint at a given time, but users can configure concurrent checkpointing which can ack checkpoints out of order.", "url": "https://github.com/apache/beam/pull/12706#discussion_r478905681", "createdAt": "2020-08-28T07:54:04Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjA4MA==", "bodyText": "Acknowledging the latest bundle finalize will also acknowledge all earlier requests for bundle finalization?", "url": "https://github.com/apache/beam/pull/12706#discussion_r478906080", "createdAt": "2020-08-28T07:54:33Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();\n+      pendingFinalizations.put(checkpointId, finalizations);\n+\n+      // confirm all finalizations\n+      for (InMemoryBundleFinalizer.Finalization finalization : finalizations) {\n+        finalization.getCallback().onBundleSuccess();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjUzMg==", "bodyText": "Why is this one pending when we acknowledge it below?", "url": "https://github.com/apache/beam/pull/12706#discussion_r478906532", "createdAt": "2020-08-28T07:55:06Z", "author": {"login": "mxm"}, "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -905,6 +928,19 @@ public final void notifyCheckpointComplete(long checkpointId) throws Exception {\n       bufferingDoFnRunner.checkpointCompleted(checkpointId);\n     }\n \n+    List<InMemoryBundleFinalizer.Finalization> finalizations =\n+        pendingFinalizations.get(checkpointId);\n+    if (finalizations != null) {\n+      // remove old finalizations except for the current one\n+      pendingFinalizations.clear();\n+      pendingFinalizations.put(checkpointId, finalizations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "126191d765a7b2c7752272ed89553407bca808a0", "author": {"user": {"login": "lukecwik", "name": "Lukasz Cwik"}}, "url": "https://github.com/apache/beam/commit/126191d765a7b2c7752272ed89553407bca808a0", "committedDate": "2020-08-28T15:47:56Z", "message": "fixup! Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NTY3NDkx", "url": "https://github.com/apache/beam/pull/12706#pullrequestreview-486567491", "createdAt": "2020-09-11T08:12:59Z", "commit": {"oid": "126191d765a7b2c7752272ed89553407bca808a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4504, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}