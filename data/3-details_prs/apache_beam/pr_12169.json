{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzk3MDg2", "number": 12169, "title": "[BEAM-9953[SQL][ZetaSQL] Support Pure SQL user-defined table-valued function.", "bodyText": "This PR adds the support of\n\"CREATE TABLE FUNCTION CustomerRange(MinID INT64, MaxID INT64)\\n\"\n\"  AS\\n\"\n\"    SELECT *\\n\"\n\"    FROM KeyValue\\n\"\n\"    WHERE key >= MinId AND key <= MaxId; \\n\"\n\" SELECT key FROM CustomerRange(10, 14)\";\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-07-03T00:40:36Z", "url": "https://github.com/apache/beam/pull/12169", "merged": true, "mergeCommit": {"oid": "5b66382286f8347d7a28ec27e039e45460c88d5a"}, "closed": true, "closedAt": "2020-07-07T22:18:04Z", "author": {"login": "amaliujia"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxIcboAH2gAyNDQzNzk3MDg2OjQ4ZDM1NWQxY2VkOGY4M2MzY2ZkMjZhYzM5ZDYzNTgxMTBjZjhmYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcytW2fgFqTQ0NDI4NjQ2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/beam/commit/48d355d1ced8f83c3cfd26ac39d6358110cf8fb4", "committedDate": "2020-07-03T00:38:40Z", "message": "[SQL][ZetaSQL] Support Pure SQL user-defined table-valued function."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzM5NDM3", "url": "https://github.com/apache/beam/pull/12169#pullrequestreview-443339437", "createdAt": "2020-07-06T19:09:35Z", "commit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOTowOTozNlrOGtjy5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDoyODozMVrOGtmB7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNTU3Mg==", "bodyText": "We should check set membership instead to make this more readable/scalable.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450425572", "createdAt": "2020-07-06T19:09:36Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java", "diffHunk": "@@ -156,7 +157,8 @@ ResolvedStatement analyzeNextStatement(\n                 \"Failed to define function %s\", String.join(\".\", createFunctionStmt.getNamePath())),\n             e);\n       }\n-    } else if (resolvedStatement.nodeKind() != RESOLVED_QUERY_STMT) {\n+    } else if (resolvedStatement.nodeKind() != RESOLVED_QUERY_STMT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjU2OQ==", "bodyText": "We should make this a constant so we can reference it above.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450426569", "createdAt": "2020-07-06T19:11:21Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java", "diffHunk": "@@ -177,12 +179,17 @@ static AnalyzerOptions initAnalyzerOptions() {\n                     LanguageFeature.FEATURE_DISALLOW_GROUP_BY_FLOAT,\n                     LanguageFeature.FEATURE_V_1_2_CIVIL_TIME,\n                     LanguageFeature.FEATURE_V_1_1_SELECT_STAR_EXCEPT_REPLACE,\n-                    LanguageFeature.FEATURE_TABLE_VALUED_FUNCTIONS)));\n+                    LanguageFeature.FEATURE_TABLE_VALUED_FUNCTIONS,\n+                    LanguageFeature.FEATURE_CREATE_TABLE_FUNCTION,\n+                    LanguageFeature.FEATURE_TEMPLATE_FUNCTIONS)));\n \n     options\n         .getLanguageOptions()\n         .setSupportedStatementKinds(\n-            ImmutableSet.of(RESOLVED_QUERY_STMT, RESOLVED_CREATE_FUNCTION_STMT));\n+            ImmutableSet.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQzNjI1Mw==", "bodyText": "A couple nits about this error message:\n\nRemove \"find.\"\nInstead of just \"in beam\" it should be \"in schema beam\" so it's clear what the name is referring to.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450436253", "createdAt": "2020-07-06T19:31:46Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -2916,6 +2917,57 @@ public void testRecursiveUdfThrowsException() {\n     zetaSQLQueryPlanner.convertToBeamRel(sql);\n   }\n \n+  @Test\n+  public void testUDTVF() {\n+    String sql =\n+        \"CREATE TABLE FUNCTION CustomerRange(MinID INT64, MaxID INT64)\\n\"\n+            + \"  AS\\n\"\n+            + \"    SELECT *\\n\"\n+            + \"    FROM KeyValue\\n\"\n+            + \"    WHERE key >= MinId AND key <= MaxId; \\n\"\n+            + \" SELECT key FROM CustomerRange(10, 14)\";\n+\n+    ZetaSQLQueryPlanner zetaSQLQueryPlanner = new ZetaSQLQueryPlanner(config);\n+    BeamRelNode beamRelNode = zetaSQLQueryPlanner.convertToBeamRel(sql);\n+    PCollection<Row> stream = BeamSqlRelUtils.toPCollection(pipeline, beamRelNode);\n+\n+    Schema singleField = Schema.builder().addInt64Field(\"field1\").build();\n+    PAssert.that(stream).containsInAnyOrder(Row.withSchema(singleField).addValues(14L).build());\n+    pipeline.run().waitUntilFinish(Duration.standardMinutes(PIPELINE_EXECUTION_WAITTIME_MINUTES));\n+  }\n+\n+  @Test\n+  public void testUDTVFTableNotFound() {\n+    String sql =\n+        \"CREATE TABLE FUNCTION CustomerRange(MinID INT64, MaxID INT64)\\n\"\n+            + \"  AS\\n\"\n+            + \"    SELECT *\\n\"\n+            + \"    FROM TableNotExist\\n\"\n+            + \"    WHERE key >= MinId AND key <= MaxId; \\n\"\n+            + \" SELECT key FROM CustomerRange(10, 14)\";\n+\n+    ZetaSQLQueryPlanner zetaSQLQueryPlanner = new ZetaSQLQueryPlanner(config);\n+    thrown.expect(SqlConversionException.class);\n+    thrown.expectMessage(\"Wasn't able to find resolve the path [TableNotExist] in beam\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQzOTIwOQ==", "bodyText": "Optional nit: addToFunctionArgumentRefMapping and clearFunctionArgumentRefMapping can be replaced by getFunctionArgumentRefMapping().put() and getFunctionArgumentRefMapping().clear().", "url": "https://github.com/apache/beam/pull/12169#discussion_r450439209", "createdAt": "2020-07-06T19:38:08Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ConversionContext.java", "diffHunk": "@@ -62,4 +83,20 @@ RelOptCluster cluster() {\n   QueryTrait getTrait() {\n     return trait;\n   }\n+\n+  Map<List<String>, ResolvedNode> getSqlUDTVF() {\n+    return sqlUDTVF;\n+  }\n+\n+  Map<String, RexNode> getFunctionArgumentRefMapping() {\n+    return functionArgumentRefMapping;\n+  }\n+\n+  void addToFunctionArgumentRefMapping(String s, RexNode r) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0MDg4NQ==", "bodyText": "Please avoid abbreviation here. I recommend userDefinedTableValuedFunctions (sql is probably redundant in this case).\nAlso consider adding an explanatory comment.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450440885", "createdAt": "2020-07-06T19:41:44Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ConversionContext.java", "diffHunk": "@@ -27,24 +33,39 @@\n   private final ExpressionConverter expressionConverter;\n   private final RelOptCluster cluster;\n   private final QueryTrait trait;\n+  private final Map<List<String>, ResolvedNode> sqlUDTVF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NTgyMA==", "bodyText": "We add UDF to the catalog in SqlAnalyzer. It's probably fine to add to the catalog in either SqlAnalyzer or ZetaSQLPlannerImpl, but please keep it consistent.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450455820", "createdAt": "2020-07-06T20:14:46Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLPlannerImpl.java", "diffHunk": "@@ -171,6 +178,18 @@ public RelRoot rel(String sql, QueryParameters params) {\n                 SqlAnalyzer.USER_DEFINED_FUNCTIONS,\n                 String.join(\".\", createFunctionStmt.getNamePath()));\n         udfBuilder.put(functionFullName, createFunctionStmt);\n+      } else if (statement.nodeKind() == RESOLVED_CREATE_TABLE_FUNCTION_STMT) {\n+        ResolvedCreateTableFunctionStmt createTableFunctionStmt =\n+            (ResolvedCreateTableFunctionStmt) statement;\n+        catalog.addTableValuedFunction(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1ODk2Nw==", "bodyText": "Why do we need to clear?", "url": "https://github.com/apache/beam/pull/12169#discussion_r450458967", "createdAt": "2020-07-06T20:21:28Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/TVFScanConverter.java", "diffHunk": "@@ -42,45 +42,57 @@\n   @Override\n   public RelNode convert(ResolvedTVFScan zetaNode, List<RelNode> inputs) {\n     RelNode input = inputs.get(0);\n+    RexCall call =\n+        getExpressionConverter()\n+            .convertTableValuedFunction(\n+                input,\n+                zetaNode.getTvf(),\n+                zetaNode.getArgumentList(),\n+                zetaNode.getArgumentList().get(0).getScan() != null\n+                    ? zetaNode.getArgumentList().get(0).getScan().getColumnList()\n+                    : Collections.emptyList());\n     RelNode tableFunctionScan =\n         LogicalTableFunctionScan.create(\n-            getCluster(),\n-            inputs,\n-            getExpressionConverter()\n-                .convertTableValuedFunction(\n-                    input,\n-                    zetaNode.getTvf(),\n-                    zetaNode.getArgumentList(),\n-                    zetaNode.getArgumentList().get(0).getScan().getColumnList()),\n-            null,\n-            createRowTypeWithWindowStartAndEnd(input.getRowType()),\n-            Collections.EMPTY_SET);\n+            getCluster(), inputs, call, null, call.getType(), Collections.EMPTY_SET);\n \n+    // Pure SQL UDF's language body is built bottom up, so FunctionArgumentRefMapping should be\n+    // already consumed thus it can be cleared now.\n+    context.clearFunctionArgumentRefMapping();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1OTQ4Mg==", "bodyText": "Should we should change all converters to use getFunctionArgumentRefMapping?", "url": "https://github.com/apache/beam/pull/12169#discussion_r450459482", "createdAt": "2020-07-06T20:22:32Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/FilterScanConverter.java", "diffHunk": "@@ -47,7 +46,7 @@ public RelNode convert(ResolvedFilterScan zetaNode, List<RelNode> inputs) {\n                 zetaNode.getFilterExpr(),\n                 zetaNode.getInputScan().getColumnList(),\n                 input.getRowType().getFieldList(),\n-                ImmutableMap.of());\n+                context.getFunctionArgumentRefMapping());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2MTQ4OQ==", "bodyText": "I suppose I should have used getNamePath instead of getFullName...", "url": "https://github.com/apache/beam/pull/12169#discussion_r450461489", "createdAt": "2020-07-06T20:26:57Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLPlannerImpl.java", "diffHunk": "@@ -171,6 +178,18 @@ public RelRoot rel(String sql, QueryParameters params) {\n                 SqlAnalyzer.USER_DEFINED_FUNCTIONS,\n                 String.join(\".\", createFunctionStmt.getNamePath()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2MjE4OQ==", "bodyText": "Nit: PureSql is probably not necessary, since we already have ZetaSql in the class name.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450462189", "createdAt": "2020-07-06T20:28:31Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/ZetaSqlUserDefinedPureSqlTableValuedFunction.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.extensions.sql.impl;\n+\n+import java.util.List;\n+import org.apache.beam.sdk.annotations.Internal;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.rel.type.RelDataType;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.schema.Function;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.SqlIdentifier;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlOperandTypeChecker;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlOperandTypeInference;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlReturnTypeInference;\n+import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.validate.SqlUserDefinedFunction;\n+\n+/** This is a class to indicate that a TVF is a ZetaSQL pure SQL UDTVF. */\n+@Internal\n+public class ZetaSqlUserDefinedPureSqlTableValuedFunction extends SqlUserDefinedFunction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d355d1ced8f83c3cfd26ac39d6358110cf8fb4"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d9092efe67e0b2c906dac50623737acf4955a80", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/beam/commit/1d9092efe67e0b2c906dac50623737acf4955a80", "committedDate": "2020-07-06T23:02:54Z", "message": "fixup! address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDYzODIw", "url": "https://github.com/apache/beam/pull/12169#pullrequestreview-443463820", "createdAt": "2020-07-06T23:16:54Z", "commit": {"oid": "1d9092efe67e0b2c906dac50623737acf4955a80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzoxNjo1NFrOGtp90w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzoxNjo1NFrOGtp90w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyNjY3NQ==", "bodyText": "This should probably be debug level.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450526675", "createdAt": "2020-07-06T23:16:54Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLPlannerImpl.java", "diffHunk": "@@ -211,7 +212,7 @@ public RelRoot rel(String sql, QueryParameters params) {\n \n     RelNode convertedNode =\n         QueryStatementConverter.convertRootQuery(context, (ResolvedQueryStmt) statement);\n-\n+    LOG.info(\"SQLPlan>\\n\" + RelOptUtil.toString(convertedNode));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9092efe67e0b2c906dac50623737acf4955a80"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDY0NTg5", "url": "https://github.com/apache/beam/pull/12169#pullrequestreview-443464589", "createdAt": "2020-07-06T23:19:16Z", "commit": {"oid": "1d9092efe67e0b2c906dac50623737acf4955a80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzoxOToxN1rOGtqAZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzoxOToxN1rOGtqAZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyNzMzNQ==", "bodyText": "I'm guessing the meaning of Pure-sql might not be clear to those who are unfamiliar with our plans to add cross-language UDF.", "url": "https://github.com/apache/beam/pull/12169#discussion_r450527335", "createdAt": "2020-07-06T23:19:17Z", "author": {"login": "ibzib"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ConversionContext.java", "diffHunk": "@@ -33,7 +33,16 @@\n   private final ExpressionConverter expressionConverter;\n   private final RelOptCluster cluster;\n   private final QueryTrait trait;\n-  private final Map<List<String>, ResolvedNode> sqlUDTVF;\n+  // Pure-sql user-defined table-valued function can be resolved by Analyzer. Keeping the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9092efe67e0b2c906dac50623737acf4955a80"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db60dbda31588adde74ed81d6e5333b153c2323e", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/beam/commit/db60dbda31588adde74ed81d6e5333b153c2323e", "committedDate": "2020-07-07T05:18:34Z", "message": "fixup! address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Mjg2NDY0", "url": "https://github.com/apache/beam/pull/12169#pullrequestreview-444286464", "createdAt": "2020-07-07T22:12:59Z", "commit": {"oid": "db60dbda31588adde74ed81d6e5333b153c2323e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3353, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}