{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NDg3ODc4", "number": 13533, "title": "[BEAM-11474] Track transform processing thread in Java SDK harness and set log entry field", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-11T22:29:45Z", "url": "https://github.com/apache/beam/pull/13533", "merged": true, "mergeCommit": {"oid": "6869dfa6a19cc8e8cb49b726f672f0bdb1b2c704"}, "closed": true, "closedAt": "2020-12-16T20:28:19Z", "author": {"login": "y1chi"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlPttQABqjQxMDI2ODAwMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm0SF9gH2gAyNTM3NDg3ODc4OmM4ZDlkMWRmYzNkODdlZDE2ZDZkMTVhMjZhMWRkNGFhYjMyNjllOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c77984f90d2cb1bb810e842287f5e7fd3e8b8965", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/c77984f90d2cb1bb810e842287f5e7fd3e8b8965", "committedDate": "2020-12-11T22:28:59Z", "message": "Set ptransform id for log entries"}, "afterCommit": {"oid": "61bb8a86b4abd341167ba1d5a306a13a02974855", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/61bb8a86b4abd341167ba1d5a306a13a02974855", "committedDate": "2020-12-11T22:30:38Z", "message": "Set ptransform id for log entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "554d25449e38814af2f281ab68a5b9785a4fb66b", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/554d25449e38814af2f281ab68a5b9785a4fb66b", "committedDate": "2020-12-14T23:33:18Z", "message": "Track transform processing thread in Java SDK harness and set log entry\ntransform id field."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61bb8a86b4abd341167ba1d5a306a13a02974855", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/61bb8a86b4abd341167ba1d5a306a13a02974855", "committedDate": "2020-12-11T22:30:38Z", "message": "Set ptransform id for log entries"}, "afterCommit": {"oid": "554d25449e38814af2f281ab68a5b9785a4fb66b", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/554d25449e38814af2f281ab68a5b9785a4fb66b", "committedDate": "2020-12-14T23:33:18Z", "message": "Track transform processing thread in Java SDK harness and set log entry\ntransform id field."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b7afea1ffff221038d368f053e358f67f903070", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/8b7afea1ffff221038d368f053e358f67f903070", "committedDate": "2020-12-14T23:54:01Z", "message": "Add javadoc"}, "afterCommit": {"oid": "8ed7fcdc21741879c262e48f052d9ceed11e9492", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/8ed7fcdc21741879c262e48f052d9ceed11e9492", "committedDate": "2020-12-15T00:41:23Z", "message": "Add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6ba301d9fb9c2b0e62ac2d1c95b405fea5d0ae1", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/a6ba301d9fb9c2b0e62ac2d1c95b405fea5d0ae1", "committedDate": "2020-12-15T00:46:28Z", "message": "Add javadoc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ed7fcdc21741879c262e48f052d9ceed11e9492", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/8ed7fcdc21741879c262e48f052d9ceed11e9492", "committedDate": "2020-12-15T00:41:23Z", "message": "Add javadoc"}, "afterCommit": {"oid": "a6ba301d9fb9c2b0e62ac2d1c95b405fea5d0ae1", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/a6ba301d9fb9c2b0e62ac2d1c95b405fea5d0ae1", "committedDate": "2020-12-15T00:46:28Z", "message": "Add javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzk0Mjg4", "url": "https://github.com/apache/beam/pull/13533#pullrequestreview-552794288", "createdAt": "2020-12-15T19:24:07Z", "commit": {"oid": "a6ba301d9fb9c2b0e62ac2d1c95b405fea5d0ae1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOToyNDowN1rOIGcJug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOToyNDowN1rOIGcJug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYyMzYxMA==", "bodyText": "Sorry that I'm not familiar with how logging service works, I'm wondering whether this will have multi-threading concurrency issue.", "url": "https://github.com/apache/beam/pull/13533#discussion_r543623610", "createdAt": "2020-12-15T19:24:07Z", "author": {"login": "boyuanzz"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/TransformProcessingThreadTracker.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.fn.harness;\n+\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * TransformProcessingThreadTracker tracks the thread ids for the transforms that are being\n+ * processed in the SDK harness.\n+ */\n+public class TransformProcessingThreadTracker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ba301d9fb9c2b0e62ac2d1c95b405fea5d0ae1"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23b200727169c140a224ffa35bb43b102bc142be", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/23b200727169c140a224ffa35bb43b102bc142be", "committedDate": "2020-12-15T22:32:42Z", "message": "Add tracking to other ProcessElement methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTUzODM2", "url": "https://github.com/apache/beam/pull/13533#pullrequestreview-553153836", "createdAt": "2020-12-16T00:15:10Z", "commit": {"oid": "23b200727169c140a224ffa35bb43b102bc142be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDoxNToxMFrOIGlyhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDoxNToxMFrOIGlyhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4MTUxMQ==", "bodyText": "Another question is that will this map grow unlimitedly? I'm kind of concerning that it consumes too much memory with a long run instance(and the thread is not reused).", "url": "https://github.com/apache/beam/pull/13533#discussion_r543781511", "createdAt": "2020-12-16T00:15:10Z", "author": {"login": "boyuanzz"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/TransformProcessingThreadTracker.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.fn.harness;\n+\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * TransformProcessingThreadTracker tracks the thread ids for the transforms that are being\n+ * processed in the SDK harness.\n+ */\n+public class TransformProcessingThreadTracker {\n+  private static final TransformProcessingThreadTracker INSTANCE =\n+      new TransformProcessingThreadTracker();\n+  private final ConcurrentHashMap<Long, String> threadIdToTransformIdMappings;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23b200727169c140a224ffa35bb43b102bc142be"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "945e7948e7c61a5ba3216e1a8f18784f1b30b87a", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/945e7948e7c61a5ba3216e1a8f18784f1b30b87a", "committedDate": "2020-12-16T01:56:46Z", "message": "Use LoadingCache instead of ConcurrentHashMap to limit the size for thread tracker"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "511875522c881a05c8cb7c226bbb8dfd15ffc77a", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/511875522c881a05c8cb7c226bbb8dfd15ffc77a", "committedDate": "2020-12-16T01:50:02Z", "message": "Use LoadingCache instead of ConcurrentHashMap to limit the size for thread tracker"}, "afterCommit": {"oid": "945e7948e7c61a5ba3216e1a8f18784f1b30b87a", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/945e7948e7c61a5ba3216e1a8f18784f1b30b87a", "committedDate": "2020-12-16T01:56:46Z", "message": "Use LoadingCache instead of ConcurrentHashMap to limit the size for thread tracker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzA5OTU5", "url": "https://github.com/apache/beam/pull/13533#pullrequestreview-553309959", "createdAt": "2020-12-16T02:26:51Z", "commit": {"oid": "945e7948e7c61a5ba3216e1a8f18784f1b30b87a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjoyNjo1MVrOIGpTSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjoyNjo1MVrOIGpTSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgzOTA0OA==", "bodyText": "Thanks! If you are not going to use the load method, you can just use the Cache and the CacheBuilder", "url": "https://github.com/apache/beam/pull/13533#discussion_r543839048", "createdAt": "2020-12-16T02:26:51Z", "author": {"login": "boyuanzz"}, "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/TransformProcessingThreadTracker.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.fn.harness;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import java.time.Duration;\n+\n+/**\n+ * TransformProcessingThreadTracker tracks the thread ids for the transforms that are being\n+ * processed in the SDK harness.\n+ */\n+public class TransformProcessingThreadTracker {\n+  private static final TransformProcessingThreadTracker INSTANCE =\n+      new TransformProcessingThreadTracker();\n+  private final LoadingCache<Long, String> threadIdToTransformIdMappings;\n+\n+  private TransformProcessingThreadTracker() {\n+    this.threadIdToTransformIdMappings =\n+        CacheBuilder.newBuilder()\n+            .maximumSize(10000)\n+            .expireAfterAccess(Duration.ofHours(1))\n+            .build(\n+                new CacheLoader<Long, String>() {\n+                  @Override\n+                  public String load(Long threadId) throws Exception {\n+                    return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945e7948e7c61a5ba3216e1a8f18784f1b30b87a"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzOTcxNTcy", "url": "https://github.com/apache/beam/pull/13533#pullrequestreview-553971572", "createdAt": "2020-12-16T18:31:47Z", "commit": {"oid": "d0820fede7e429a35073bfd9a368696efa04e731"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "857d41fbcba3fe747081be4479695c85200ac7cf", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/857d41fbcba3fe747081be4479695c85200ac7cf", "committedDate": "2020-12-16T18:41:12Z", "message": "Address comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0820fede7e429a35073bfd9a368696efa04e731", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/d0820fede7e429a35073bfd9a368696efa04e731", "committedDate": "2020-12-16T18:24:25Z", "message": "Address comment"}, "afterCommit": {"oid": "857d41fbcba3fe747081be4479695c85200ac7cf", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/857d41fbcba3fe747081be4479695c85200ac7cf", "committedDate": "2020-12-16T18:41:12Z", "message": "Address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d9d1dfc3d87ed16d6d15a26a1dd4aab3269e96", "author": {"user": {"login": "y1chi", "name": "Yichi Zhang"}}, "url": "https://github.com/apache/beam/commit/c8d9d1dfc3d87ed16d6d15a26a1dd4aab3269e96", "committedDate": "2020-12-16T19:41:11Z", "message": "Fix checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4403, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}