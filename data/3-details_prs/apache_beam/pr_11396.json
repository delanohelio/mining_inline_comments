{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTQ3MDAy", "number": 11396, "title": "[BEAM-9742] Add Configurable FluentBackoff to JdbcIO Write", "bodyText": "Add Configurable FluentBackoff to JdbcIO Write\nJira ticket\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-11T06:14:10Z", "url": "https://github.com/apache/beam/pull/11396", "merged": true, "mergeCommit": {"oid": "837b52f47bf76f3e562ecd0d9c8b228c60576962"}, "closed": true, "closedAt": "2020-06-10T18:43:11Z", "author": {"login": "Akshay-Iyangar"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX7j0oAFqTM5Mzk4MDEwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpTsr9gFqTQyNjQ0ODc5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTgwMTA0", "url": "https://github.com/apache/beam/pull/11396#pullrequestreview-393980104", "createdAt": "2020-04-15T17:21:24Z", "commit": {"oid": "756528833a5c7acc5972ca0ec79f57148d62a4e6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzoyMToyNFrOGGD3JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzoyMToyNFrOGGD3JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwNzkwOA==", "bodyText": "We can't make FluentBackoff part of the public API surface since it is in the util package. It looks like other IO connectors have been creating their own RetryConfiguration class such as:\nSnsIO: \n  \n    \n      beam/sdks/java/io/amazon-web-services2/src/main/java/org/apache/beam/sdk/io/aws2/sns/SnsIO.java\n    \n    \n         Line 262\n      in\n      da9e172\n    \n    \n    \n    \n\n        \n          \n           public Write<T> withRetryConfiguration(RetryConfiguration retryConfiguration) { \n        \n    \n  \n\n\nSolrIO: \n  \n    \n      beam/sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java\n    \n    \n         Line 225\n      in\n      da9e172\n    \n    \n    \n    \n\n        \n          \n           public abstract static class RetryConfiguration implements Serializable { \n        \n    \n  \n\n\nand then converting them to any internal implementation that makes sense.\nMaking FluentBackoff or a RetryConfiguration public and shared across implementation might make sense but warrants a discussion on the dev@ mailing list to see what the community thinks.", "url": "https://github.com/apache/beam/pull/11396#discussion_r409007908", "createdAt": "2020-04-15T17:21:24Z", "author": {"login": "lukecwik"}, "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/JdbcIO.java", "diffHunk": "@@ -257,6 +258,28 @@ public boolean apply(SQLException e) {\n     }\n   }\n \n+  /**\n+   * This is the default {@link FluentBackoffConfiguration} that we use to retry when a {@link\n+   * SQLException} occurs.\n+   */\n+  public static class DefaultFluentBackoffConfiguration implements FluentBackoffConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "756528833a5c7acc5972ca0ec79f57148d62a4e6"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MDkyNDg3", "url": "https://github.com/apache/beam/pull/11396#pullrequestreview-409092487", "createdAt": "2020-05-11T11:37:47Z", "commit": {"oid": "756528833a5c7acc5972ca0ec79f57148d62a4e6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTozNzo0N1rOGTYhdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTozNzo0N1rOGTYhdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NzkwOA==", "bodyText": "I agree with @lukecwik - we should stay consistent with that.", "url": "https://github.com/apache/beam/pull/11396#discussion_r422977908", "createdAt": "2020-05-11T11:37:47Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/JdbcIO.java", "diffHunk": "@@ -257,6 +258,28 @@ public boolean apply(SQLException e) {\n     }\n   }\n \n+  /**\n+   * This is the default {@link FluentBackoffConfiguration} that we use to retry when a {@link\n+   * SQLException} occurs.\n+   */\n+  public static class DefaultFluentBackoffConfiguration implements FluentBackoffConfiguration {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwNzkwOA=="}, "originalCommit": {"oid": "756528833a5c7acc5972ca0ec79f57148d62a4e6"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2364b7130c4c16cef2c0fd92e7ddadbc5ae0519e", "author": {"user": {"login": "aiyangar-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/2364b7130c4c16cef2c0fd92e7ddadbc5ae0519e", "committedDate": "2020-06-02T06:29:19Z", "message": "[BEAM-9742] Rebasing with the latest master"}, "afterCommit": {"oid": "01c11e7211937bde3c238fe3639f9dfe7774d093", "author": {"user": {"login": "darshanj", "name": null}}, "url": "https://github.com/apache/beam/commit/01c11e7211937bde3c238fe3639f9dfe7774d093", "committedDate": "2020-06-02T03:54:54Z", "message": "[BEAM-9825] | Implement Intersect,Union,Except transforms (#11610)\n\n* [BEAM-9825] | Implement Intersect,Union,Except transforms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed6e349e5cc090032cd6081697a27e15074942cc", "author": {"user": {"login": "aiyangar-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/ed6e349e5cc090032cd6081697a27e15074942cc", "committedDate": "2020-06-02T06:40:18Z", "message": "[BEAM-9742] revert back to the older version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65c677add991b20e4570b24801f23433987f289e", "author": {"user": {"login": "aiyangar-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/65c677add991b20e4570b24801f23433987f289e", "committedDate": "2020-06-02T21:52:20Z", "message": "[BEAM-9742] Using retry configuration for fluent-backoff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17abcd7499d52fd4de2dd149361508494bd39424", "author": {"user": {"login": "aiyangar-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/17abcd7499d52fd4de2dd149361508494bd39424", "committedDate": "2020-06-02T21:57:37Z", "message": "[BEAM-9742] fixing checkstyle errors."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NjM3NzU3", "url": "https://github.com/apache/beam/pull/11396#pullrequestreview-424637757", "createdAt": "2020-06-04T16:43:38Z", "commit": {"oid": "17abcd7499d52fd4de2dd149361508494bd39424"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjo0MzozOFrOGfOtJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjo1ODo0MlrOGfPRgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5OTk3NA==", "bodyText": "It would be helpful to provide a simple example of usage - here or in JdbcIO class Javadoc.", "url": "https://github.com/apache/beam/pull/11396#discussion_r435399974", "createdAt": "2020-06-04T16:43:38Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/JdbcIO.java", "diffHunk": "@@ -1217,6 +1297,16 @@ void set(\n       return toBuilder().setRetryStrategy(retryStrategy).build();\n     }\n \n+    /**\n+     * When a SQL exception occurs, {@link Write} uses this {@link RetryConfiguration} to\n+     * exponentially back off and retry the statements based on the {@link RetryConfiguration}\n+     * mentioned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17abcd7499d52fd4de2dd149361508494bd39424"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwOTI4MQ==", "bodyText": "It's a bit confusing for user to have the overloaded methods where the same argument (eg, maxAttempts) changes its positions.  I'd prefer to leave only one method create() with all three arguments to provide - create(int maxAttempts, Duration maxDuration, Duration initialDuration).\nAlso, make DEFAULT_INITIAL_BACKOFF  and DEFAULT_MAX_CUMULATIVE_BACKOFF as the constants of RetryConfiguration and make them public.", "url": "https://github.com/apache/beam/pull/11396#discussion_r435409281", "createdAt": "2020-06-04T16:58:42Z", "author": {"login": "aromanenko-dev"}, "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/JdbcIO.java", "diffHunk": "@@ -903,6 +907,72 @@ public void teardown() throws Exception {\n     }\n   }\n \n+  /**\n+   * Builder used to help with retry configuration for {@link JdbcIO}. The retry configuration\n+   * accepts maxAttempts and maxDuration for {@link FluentBackoff}.\n+   */\n+  @AutoValue\n+  public abstract static class RetryConfiguration implements Serializable {\n+\n+    abstract int getMaxAttempts();\n+\n+    @Nullable\n+    abstract Duration getMaxDuration();\n+\n+    @Nullable\n+    abstract Duration getInitialDuration();\n+\n+    abstract RetryConfiguration.Builder builder();\n+\n+    @AutoValue.Builder\n+    abstract static class Builder {\n+      abstract Builder setMaxAttempts(int maxAttempts);\n+\n+      abstract Builder setMaxDuration(Duration maxDuration);\n+\n+      abstract Builder setInitialDuration(Duration initialDuration);\n+\n+      abstract RetryConfiguration build();\n+    }\n+\n+    public static RetryConfiguration create(int maxAttempts) {\n+      checkArgument(maxAttempts > 0, \"maxAttempts must be greater than 0\");\n+      return create(maxAttempts, DEFAULT_MAX_CUMULATIVE_BACKOFF, DEFAULT_INITIAL_BACKOFF);\n+    }\n+\n+    public static RetryConfiguration create(int maxAttempts, Duration maxDuration) {\n+      checkArgument(maxAttempts > 0, \"maxAttempts must be greater than 0\");\n+      checkArgument(\n+          maxDuration != null && maxDuration.isLongerThan(Duration.ZERO),\n+          \"maxDuration must be greater than 0\");\n+      return create(maxAttempts, maxDuration, DEFAULT_INITIAL_BACKOFF);\n+    }\n+\n+    public static RetryConfiguration create(Duration initialDuration, int maxAttempts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17abcd7499d52fd4de2dd149361508494bd39424"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3430632a5ef8e8c2e6b940a7876d1f181401aad", "author": {"user": {"login": "aiyangar-godaddy", "name": null}}, "url": "https://github.com/apache/beam/commit/a3430632a5ef8e8c2e6b940a7876d1f181401aad", "committedDate": "2020-06-08T08:55:25Z", "message": "[BEAM-9742] Addressing feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDQ4Nzk4", "url": "https://github.com/apache/beam/pull/11396#pullrequestreview-426448798", "createdAt": "2020-06-08T17:13:59Z", "commit": {"oid": "a3430632a5ef8e8c2e6b940a7876d1f181401aad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4173, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}