{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTA2OTEz", "number": 10618, "title": "[BEAM-8630] Turn on BeamZetaSqlCalcRel", "bodyText": "with fixes for\n\n\nwindowing functions\n\n\nINT32 (ZetaSQL only support INT64 but INT32 was used for unit testing and Calcite internally)\n\n\nThere are 2 known cases of regression (compared to BeamCalcRel):\n\n\nBEAM-9182 NULL parameters\n\n\nBEAM-9191 CAST operator\n\n\nr: @apilloud\ncc: @amaliujia @kennknowles\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-17T00:15:57Z", "url": "https://github.com/apache/beam/pull/10618", "merged": true, "mergeCommit": {"oid": "b02a325409d55f1ecb7f9fb6ecc4f60a974c810d"}, "closed": true, "closedAt": "2020-01-27T22:57:09Z", "author": {"login": "robinyqiu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9UP-0ABqjI5NzU4MDI3ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9mwuDgBqjI5Nzg3OTg1MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aaaf127178bdac5b1b3be4fc89c95ff332f7e7f4", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/aaaf127178bdac5b1b3be4fc89c95ff332f7e7f4", "committedDate": "2020-01-17T00:10:50Z", "message": "Fix broken windowing function in BeamZetaSqlCalcRel"}, "afterCommit": {"oid": "1bf1f5dc952976438edfaef59bd8883ccf7cd07e", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/1bf1f5dc952976438edfaef59bd8883ccf7cd07e", "committedDate": "2020-01-24T00:59:34Z", "message": "Fix broken windowing function in BeamZetaSqlCalcRel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bf1f5dc952976438edfaef59bd8883ccf7cd07e", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/1bf1f5dc952976438edfaef59bd8883ccf7cd07e", "committedDate": "2020-01-24T00:59:34Z", "message": "Fix broken windowing function in BeamZetaSqlCalcRel"}, "afterCommit": {"oid": "b1acfe1d5da03b6980f02ec46c94a40e2c2682e8", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/b1acfe1d5da03b6980f02ec46c94a40e2c2682e8", "committedDate": "2020-01-24T21:26:01Z", "message": "Turn on BeamZetaSqlCalcRel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1acfe1d5da03b6980f02ec46c94a40e2c2682e8", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/b1acfe1d5da03b6980f02ec46c94a40e2c2682e8", "committedDate": "2020-01-24T21:26:01Z", "message": "Turn on BeamZetaSqlCalcRel"}, "afterCommit": {"oid": "abfbfb44a3c08bc471a1a9bffb24bf8587d65481", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/abfbfb44a3c08bc471a1a9bffb24bf8587d65481", "committedDate": "2020-01-24T21:29:46Z", "message": "Turn on BeamZetaSqlCalcRel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ5NTAy", "url": "https://github.com/apache/beam/pull/10618#pullrequestreview-348249502", "createdAt": "2020-01-24T22:00:24Z", "commit": {"oid": "abfbfb44a3c08bc471a1a9bffb24bf8587d65481"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowMDoyNFrOFhrmJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowMTo1MlrOFhroPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTYwNw==", "bodyText": "Can you add this to SqlOperators.java and add the two calls above as a constant there instead?", "url": "https://github.com/apache/beam/pull/10618#discussion_r370861607", "createdAt": "2020-01-24T22:00:24Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ExpressionConverter.java", "diffHunk": "@@ -486,27 +489,38 @@ private RexNode convertRexNodeFromComputedColumnWithFieldList(\n         return rexBuilder()\n             .makeInputRef(fieldList.get(windowFieldIndex).getType(), windowFieldIndex);\n       case FIXED_WINDOW_END:\n-        // WINDOW END is a function call\n         operands.add(\n             rexBuilder().makeInputRef(fieldList.get(windowFieldIndex).getType(), windowFieldIndex));\n         // TODO: check window_end 's duration is the same as it's aggregate window.\n         operands.add(\n             convertIntervalToRexIntervalLiteral(\n                 (ResolvedLiteral) functionCall.getArgumentList().get(0)));\n-        return rexBuilder().makeCall(SqlStdOperatorTable.PLUS, operands);\n+        return rexBuilder()\n+            .makeCall(createSqlFunction(\"timestamp_add\", SqlTypeName.TIMESTAMP), operands);\n       case SLIDING_WINDOW_END:\n         operands.add(\n             rexBuilder().makeInputRef(fieldList.get(windowFieldIndex).getType(), windowFieldIndex));\n         operands.add(\n             convertIntervalToRexIntervalLiteral(\n                 (ResolvedLiteral) functionCall.getArgumentList().get(1)));\n-        return rexBuilder().makeCall(SqlStdOperatorTable.PLUS, operands);\n+        return rexBuilder()\n+            .makeCall(createSqlFunction(\"timestamp_add\", SqlTypeName.TIMESTAMP), operands);\n       default:\n         throw new RuntimeException(\n             \"Does not support window start/end: \" + functionCall.getFunction().getName());\n     }\n   }\n \n+  private SqlFunction createSqlFunction(String name, SqlTypeName returnType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abfbfb44a3c08bc471a1a9bffb24bf8587d65481"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MjE0Mg==", "bodyText": "Does this actually do anything anymore? Can it be deleted?", "url": "https://github.com/apache/beam/pull/10618#discussion_r370862142", "createdAt": "2020-01-24T22:01:52Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/SingleRowScanConverter.java", "diffHunk": "@@ -18,15 +18,8 @@\n package org.apache.beam.sdk.extensions.sql.zetasql.translation;\n \n import com.google.zetasql.resolvedast.ResolvedNodes.ResolvedSingleRowScan;\n-import java.math.BigDecimal;\n import java.util.List;\n-import org.apache.beam.vendor.calcite.v1_20_0.com.google.common.collect.ImmutableList;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.plan.RelOptCluster;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.rel.RelNode;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.rel.logical.LogicalValues;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.rel.type.RelDataType;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.rex.RexLiteral;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeName;\n \n /** Converts a single row value. */\n class SingleRowScanConverter extends RelConverter<ResolvedSingleRowScan> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abfbfb44a3c08bc471a1a9bffb24bf8587d65481"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34e5a1e80e915c05bfda6fc13665909870602f1c", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/34e5a1e80e915c05bfda6fc13665909870602f1c", "committedDate": "2020-01-24T22:33:43Z", "message": "Turn on BeamZetaSqlCalcRel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abfbfb44a3c08bc471a1a9bffb24bf8587d65481", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/abfbfb44a3c08bc471a1a9bffb24bf8587d65481", "committedDate": "2020-01-24T21:29:46Z", "message": "Turn on BeamZetaSqlCalcRel"}, "afterCommit": {"oid": "34e5a1e80e915c05bfda6fc13665909870602f1c", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/34e5a1e80e915c05bfda6fc13665909870602f1c", "committedDate": "2020-01-24T22:33:43Z", "message": "Turn on BeamZetaSqlCalcRel"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3498, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}