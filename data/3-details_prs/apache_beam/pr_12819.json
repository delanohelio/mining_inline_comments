{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NDc4MDY3", "number": 12819, "title": "[BEAM-9561] Initial framework for testing pandas website docs.", "bodyText": "Thank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-11T00:30:25Z", "url": "https://github.com/apache/beam/pull/12819", "merged": true, "mergeCommit": {"oid": "2e9b34e990245e49328d9d16ebe3609399e7b5fe"}, "closed": true, "closedAt": "2020-10-01T19:14:18Z", "author": {"login": "robertwb"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHqRNfgH2gAyNDg0NDc4MDY3OjdlNDMzMzdjMmEwNGJlZjg2ODk1M2I5ZWUzN2M5NWJhMjEzYWY4YTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNxqb4gH2gAyNDg0NDc4MDY3OmEwYTMwOTllMWQ2NDUyMjg5MWI1MmJjNzdmMzk0OTg5MGI1ZWRkNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7e43337c2a04bef868953b9ee37c95ba213af8a1", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/7e43337c2a04bef868953b9ee37c95ba213af8a1", "committedDate": "2020-09-11T00:29:31Z", "message": "[BEAM-9561] Initial framework for testing pandas website docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e81f23797b2479e4ff53aea790662f516f93cdd", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/7e81f23797b2479e4ff53aea790662f516f93cdd", "committedDate": "2020-09-11T01:14:38Z", "message": "Global summary."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0905e6a313d3b9b41faf53ab1e635de1ea072f50", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/0905e6a313d3b9b41faf53ab1e635de1ea072f50", "committedDate": "2020-09-11T19:00:59Z", "message": "Auto-generate test list."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fc8e1547dc60eb8b35d22146bd7c262fe0ca6ee", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/1fc8e1547dc60eb8b35d22146bd7c262fe0ca6ee", "committedDate": "2020-09-11T19:12:36Z", "message": "Merge branch 'master' into pandas-site-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6719e29187ba841f82b33d40a6c2cbaaf942e154", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/6719e29187ba841f82b33d40a6c2cbaaf942e154", "committedDate": "2020-09-11T19:16:42Z", "message": "Merge branch 'dataframes-summarize' into pandas-site-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9e793091570a2a4196dc5fdd10d518feff9a9a", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/fc9e793091570a2a4196dc5fdd10d518feff9a9a", "committedDate": "2020-09-11T19:54:17Z", "message": "avoid unitttest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c76ee87799319a405264f4131926e057f4b1386", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/6c76ee87799319a405264f4131926e057f4b1386", "committedDate": "2020-09-11T20:00:18Z", "message": "jenkins fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76f2c1c5c2d296b53ca9dacfd8e4178a61b7eb7e", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/76f2c1c5c2d296b53ca9dacfd8e4178a61b7eb7e", "committedDate": "2020-09-11T20:00:39Z", "message": "Merge branch 'master' into pandas-site-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5b9c877e52271455f0e88bc1718a5c0b1ba4453", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/f5b9c877e52271455f0e88bc1718a5c0b1ba4453", "committedDate": "2020-09-11T22:00:31Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e3c400942d54ce45036e0473058642d3aa549c8", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/0e3c400942d54ce45036e0473058642d3aa549c8", "committedDate": "2020-09-15T16:16:50Z", "message": "lint, try to fix docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce69f94b95991e1eb83f9fb0f8e2fc04855da6e0", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/ce69f94b95991e1eb83f9fb0f8e2fc04855da6e0", "committedDate": "2020-09-15T17:54:30Z", "message": "yet another attempt to make docs + linter happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6285c6b2de7da817607dc49f0b8f65c602a196d", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/b6285c6b2de7da817607dc49f0b8f65c602a196d", "committedDate": "2020-09-24T22:30:05Z", "message": "Merge branch 'master' into pandas-site-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95362de2fe3bdbf168f95f13116c0e56cf654660", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/95362de2fe3bdbf168f95f13116c0e56cf654660", "committedDate": "2020-09-25T00:07:16Z", "message": "fix merge changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDkxODIy", "url": "https://github.com/apache/beam/pull/12819#pullrequestreview-495091822", "createdAt": "2020-09-23T22:27:49Z", "commit": {"oid": "ce69f94b95991e1eb83f9fb0f8e2fc04855da6e0"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjoyNzo0OVrOHXDHRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDoyNzoxMVrOHZOZEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkzMDMwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            and someting that'll fail (due to fake vs. read pandas)\n          \n          \n            \n            and someting that'll fail (due to fake vs. real pandas)", "url": "https://github.com/apache/beam/pull/12819#discussion_r493930308", "createdAt": "2020-09-23T22:27:49Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/doctests_test.py", "diffHunk": "@@ -77,6 +77,46 @@\n failed exception\n '''\n \n+RST_IPYTHON = '''\n+Here is an example\n+.. ipython::\n+\n+    2 + 2\n+\n+and a multi-line example\n+\n+.. ipython::\n+\n+    def foo(x):\n+        return x * x\n+    foo(4)\n+\n+history is preserved\n+\n+    foo(3)\n+    foo(4)\n+\n+and finally an example with pandas\n+\n+.. ipython::\n+\n+    pd.Series([1, 2, 3]).max()\n+\n+\n+This one should be skipped:\n+\n+.. ipython::\n+\n+   @verbatim\n+   not run or tested\n+\n+and someting that'll fail (due to fake vs. read pandas)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce69f94b95991e1eb83f9fb0f8e2fc04855da6e0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkzMDUyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                print('Extrating', zip)\n          \n          \n            \n                print('Extracting', zip)", "url": "https://github.com/apache/beam/pull/12819#discussion_r493930520", "createdAt": "2020-09-23T22:28:37Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/pandas_docs_test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A module for running the pandas docs (such as the users guide) against our\n+dataframe implementation.\n+\n+Run as python -m apache_beam.dataframe.pandas_docs_test [getting_started ...]\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import print_function\n+\n+import os\n+import sys\n+import zipfile\n+\n+from apache_beam.dataframe import doctests\n+\n+PANDAS_VERSION = '1.1.1'\n+PANDAS_DIR = os.path.expanduser(\"~/.apache_beam/cache/pandas-\" + PANDAS_VERSION)\n+PANDAS_DOCS_SOURCE = os.path.join(PANDAS_DIR, 'doc', 'source')\n+\n+\n+def main():\n+  # Not available for Python 2.\n+  import urllib.request\n+  if not os.path.exists(PANDAS_DIR):\n+    # Download the pandas source.\n+    os.makedirs(os.path.dirname(PANDAS_DIR), exist_ok=True)\n+    zip = os.path.join(PANDAS_DIR + '.zip')\n+    if not os.path.exists(zip):\n+      url = (\n+          'https://github.com/pandas-dev/pandas/archive/v%s.zip' %\n+          PANDAS_VERSION)\n+      print('Downloading', url)\n+      with urllib.request.urlopen(url) as fin:\n+        with open(zip, 'wb') as fout:\n+          fout.write(fin.read())\n+\n+    print('Extrating', zip)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce69f94b95991e1eb83f9fb0f8e2fc04855da6e0"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkzMTk3OQ==", "bodyText": "Nice, we should use this to aggregate pandas_doctests_test too", "url": "https://github.com/apache/beam/pull/12819#discussion_r493931979", "createdAt": "2020-09-23T22:32:50Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/doctests.py", "diffHunk": "@@ -350,16 +355,57 @@ def fake_pandas_module(self):\n \n   def summarize(self):\n     super(BeamDataframeDoctestRunner, self).summarize()\n+    self.summary().summarize()\n \n+  def summary(self):\n+    return Summary(\n+        self.failures,\n+        self.tries,\n+        self.skipped,\n+        self.wont_implement,\n+        self._wont_implement_reasons)\n+\n+\n+class AugmentedTestResults(doctest.TestResults):\n+  pass\n+\n+\n+class Summary(object):\n+  def __init__(\n+      self,\n+      failures=0,\n+      tries=0,\n+      skipped=0,\n+      wont_implement=0,\n+      wont_implement_reasons=None):\n+    self.failures = failures\n+    self.tries = tries\n+    self.skipped = skipped\n+    self.wont_implement = wont_implement\n+    self.wont_implement_reasons = wont_implement_reasons or []\n+\n+  def __add__(self, other):\n+    return Summary(\n+        self.failures + other.failures,\n+        self.tries + other.tries,\n+        self.skipped + other.skipped,\n+        self.wont_implement + other.wont_implement,\n+        self.wont_implement_reasons + other.wont_implement_reasons)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce69f94b95991e1eb83f9fb0f8e2fc04855da6e0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMTc2Nw==", "bodyText": "We should probably check for :verbatim: https://ipython.readthedocs.io/en/stable/sphinxext.html#pseudo-decorators", "url": "https://github.com/apache/beam/pull/12819#discussion_r496201767", "createdAt": "2020-09-28T20:05:59Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/doctests.py", "diffHunk": "@@ -428,7 +482,106 @@ def print_partition(indent, desc, n, total):\n     print()\n \n \n-def teststring(text, report=True, **runner_kwargs):\n+def parse_rst_ipython_tests(rst, name, extraglobs=None, optionflags=None):\n+  \"\"\"Extracts examples from an rst file and produce a test suite by running\n+  them through pandas to get the expected outputs.\n+  \"\"\"\n+\n+  # Optional dependency.\n+  import IPython\n+  from traitlets.config import Config\n+\n+  def get_indent(line):\n+    return len(line) - len(line.lstrip())\n+\n+  def is_example_line(line):\n+    line = line.strip()\n+    return line and not line.startswith('#') and not line[0] == line[-1] == ':'\n+\n+  IMPORT_PANDAS = 'import pandas as pd'\n+\n+  example_srcs = []\n+  lines = iter(\n+      [line.rstrip()\n+       for line in rst.split('\\n') if is_example_line(line)] + ['END'])\n+\n+  # https://ipython.readthedocs.io/en/stable/sphinxext.html\n+  for line in lines:\n+    if line.startswith('.. ipython::'):\n+      line = next(lines)\n+      indent = get_indent(line)\n+      example = []\n+      example_srcs.append(example)\n+      while get_indent(line) >= indent:\n+        if '@verbatim' in line or '@savefig' in line:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95362de2fe3bdbf168f95f13116c0e56cf654660"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwNzkyNA==", "bodyText": "Would be good to drop this unrelated change", "url": "https://github.com/apache/beam/pull/12819#discussion_r496207924", "createdAt": "2020-09-28T20:18:35Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/runners/direct/evaluation_context.py", "diffHunk": "@@ -102,7 +102,8 @@ def __init__(self, side_inputs):\n         list\n     )  # type: DefaultDict[Optional[AppliedPTransform], List[pvalue.AsSideInput]]\n     # this appears unused:\n-    self._side_input_to_blocked_tasks = collections.defaultdict(list)  # type: ignore\n+    self._side_input_to_blocked_tasks = collections.defaultdict(\n+        list)  # type: ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95362de2fe3bdbf168f95f13116c0e56cf654660"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwOTQyNw==", "bodyText": "If doctests supported it would we want this to allow WontImplement and NotImplemented?", "url": "https://github.com/apache/beam/pull/12819#discussion_r496209427", "createdAt": "2020-09-28T20:21:30Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/pandas_docs_test.py", "diffHunk": "@@ -0,0 +1,91 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A module for running the pandas docs (such as the users guide) against our\n+dataframe implementation.\n+\n+Run as python -m apache_beam.dataframe.pandas_docs_test [getting_started ...]\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import print_function\n+\n+import os\n+import sys\n+import zipfile\n+\n+from apache_beam.dataframe import doctests\n+\n+PANDAS_VERSION = '1.1.1'\n+PANDAS_DIR = os.path.expanduser(\"~/.apache_beam/cache/pandas-\" + PANDAS_VERSION)\n+PANDAS_DOCS_SOURCE = os.path.join(PANDAS_DIR, 'doc', 'source')\n+\n+\n+def main():\n+  # Not available for Python 2.\n+  import urllib.request\n+  if not os.path.exists(PANDAS_DIR):\n+    # Download the pandas source.\n+    os.makedirs(os.path.dirname(PANDAS_DIR), exist_ok=True)\n+    zip = os.path.join(PANDAS_DIR + '.zip')\n+    if not os.path.exists(zip):\n+      url = (\n+          'https://github.com/pandas-dev/pandas/archive/v%s.zip' %\n+          PANDAS_VERSION)\n+      print('Downloading', url)\n+      with urllib.request.urlopen(url) as fin:\n+        with open(zip + '.tmp', 'wb') as fout:\n+          fout.write(fin.read())\n+        os.rename(zip + '.tmp', zip)\n+\n+    print('Extrating', zip)\n+    with zipfile.ZipFile(zip, 'r') as handle:\n+      handle.extractall(os.path.dirname(PANDAS_DIR))\n+\n+  tests = sys.argv[1:] or ['getting_started', 'user_guide']\n+  paths = []\n+  filters = []\n+\n+  # Explicit paths.\n+  for test in tests:\n+    if os.path.exists(test):\n+      paths.append(test)\n+    else:\n+      filters.append(test)\n+\n+  # Names of pandas source files.\n+  for root, _, files in os.walk(PANDAS_DOCS_SOURCE):\n+    for name in files:\n+      if name.endswith('.rst'):\n+        path = os.path.join(root, name)\n+        if any(filter in path for filter in filters):\n+          paths.append(path)\n+\n+  # Now run all the tests.\n+  running_summary = doctests.Summary()\n+  for path in paths:\n+    with open(path) as f:\n+      rst = f.read()\n+    running_summary += doctests.test_rst_ipython(\n+        rst, path, report=True, wont_implement_ok=['*'], use_beam=False).summary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95362de2fe3bdbf168f95f13116c0e56cf654660"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIxMjI0Mg==", "bodyText": "Are you sure this is never consuming the start of another example? It looks like rst may require a blank line after a .. ipython:: block, but I just wanted to check that something like this wont happen:\n.. ipython::\n  df = ..\n.. ipython::\n  df", "url": "https://github.com/apache/beam/pull/12819#discussion_r496212242", "createdAt": "2020-09-28T20:27:11Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/doctests.py", "diffHunk": "@@ -428,7 +482,106 @@ def print_partition(indent, desc, n, total):\n     print()\n \n \n-def teststring(text, report=True, **runner_kwargs):\n+def parse_rst_ipython_tests(rst, name, extraglobs=None, optionflags=None):\n+  \"\"\"Extracts examples from an rst file and produce a test suite by running\n+  them through pandas to get the expected outputs.\n+  \"\"\"\n+\n+  # Optional dependency.\n+  import IPython\n+  from traitlets.config import Config\n+\n+  def get_indent(line):\n+    return len(line) - len(line.lstrip())\n+\n+  def is_example_line(line):\n+    line = line.strip()\n+    return line and not line.startswith('#') and not line[0] == line[-1] == ':'\n+\n+  IMPORT_PANDAS = 'import pandas as pd'\n+\n+  example_srcs = []\n+  lines = iter(\n+      [line.rstrip()\n+       for line in rst.split('\\n') if is_example_line(line)] + ['END'])\n+\n+  # https://ipython.readthedocs.io/en/stable/sphinxext.html\n+  for line in lines:\n+    if line.startswith('.. ipython::'):\n+      line = next(lines)\n+      indent = get_indent(line)\n+      example = []\n+      example_srcs.append(example)\n+      while get_indent(line) >= indent:\n+        if '@verbatim' in line or '@savefig' in line:\n+          example_srcs.pop()\n+          break\n+        example.append(line[indent:])\n+        line = next(lines)\n+        if get_indent(line) == indent:\n+          example = []\n+          example_srcs.append(example)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95362de2fe3bdbf168f95f13116c0e56cf654660"}, "originalPosition": 139}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65a8b0a1b8426843711ad3954c4aaa7a2301dc4", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/f65a8b0a1b8426843711ad3954c4aaa7a2301dc4", "committedDate": "2020-09-29T23:48:45Z", "message": "Apply suggestions from code review\r\n\r\nspelling\n\nCo-authored-by: Brian Hulette <hulettbh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb6676fd731a6980d6ebca1c0ce7e98204cc6df", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/9fb6676fd731a6980d6ebca1c0ce7e98204cc6df", "committedDate": "2020-09-29T23:59:08Z", "message": "address reviewer comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0a3099e1d64522891b52bc77f3949890b5edd65", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/a0a3099e1d64522891b52bc77f3949890b5edd65", "committedDate": "2020-09-30T00:29:57Z", "message": "fixup not-implemented-error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2676, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}