{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTM1NTY5", "number": 12906, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDowNzo0MFrOEmTnxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMTowNzoxOFrOEmUSNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjAyODIzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/typehints/schemas.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDowNzo0MFrOHWQeNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo1MTowOVrOHWRLyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ==", "bodyText": "What does ---/  mean? That these types have no equivalent in schemas?", "url": "https://github.com/apache/beam/pull/12906#discussion_r493100599", "createdAt": "2020-09-23T00:07:40Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNTgzMA==", "bodyText": "It's supposed to indicate that when converting to Beam schemas int will map to INT64, but it's not a two-way mapping. Converting back from Beam schemas will produce np.int64, not int.", "url": "https://github.com/apache/beam/pull/12906#discussion_r493105830", "createdAt": "2020-09-23T00:26:34Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ=="}, "originalCommit": {"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNjMxMQ==", "bodyText": "Wouldn't ------> be a more obvious notation for that?", "url": "https://github.com/apache/beam/pull/12906#discussion_r493106311", "createdAt": "2020-09-23T00:28:30Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ=="}, "originalCommit": {"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMjI2Nw==", "bodyText": "I guess they seem pretty equivalent to me, but I see your point that it my ascii art for two arrows merging may not be obvious. I'll change it", "url": "https://github.com/apache/beam/pull/12906#discussion_r493112267", "createdAt": "2020-09-23T00:51:09Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ=="}, "originalCommit": {"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjAyODMzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/typehints/schemas.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDowNzo0NFrOHWQeSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDozNzoyOFrOHWQ9-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDYxNw==", "bodyText": "Should we get rid of this since we're dropping Python 2 support?", "url": "https://github.com/apache/beam/pull/12906#discussion_r493100617", "createdAt": "2020-09-23T00:07:44Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/\n+  np.float32  <-----> FLOAT\n+  np.float64  <-----> DOUBLE\n+  float       ---/\n+  bool        <-----> BOOLEAN\n+  Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n+  Mapping     <-----> MapType\n+  Sequence    <-----> ArrayType\n+  NamedTuple  <-----> RowType\n+  beam.Row    ---/\n+\n+:code:`nullable=True` on a Beam :code:`FieldType` is represented in Python by\n+wrapping the type in :code:`Optional`.\n+\n+The mappings for :code:`STRING` and :code:`BYTES` are different between python\n+2 and python 3, because of the changes to str.\n+\n+Python 3.x::\n+\n+  str/unicode <-----> STRING\n+  bytes       <-----> BYTES\n+  ByteString  ---/\n+\n+Python 2.x::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwODczMQ==", "bodyText": "Yeah I guess I should just drop all the Python 2 shims now  \ud83c\udf89", "url": "https://github.com/apache/beam/pull/12906#discussion_r493108731", "createdAt": "2020-09-23T00:37:28Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/\n+  np.float32  <-----> FLOAT\n+  np.float64  <-----> DOUBLE\n+  float       ---/\n+  bool        <-----> BOOLEAN\n+  Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n+  Mapping     <-----> MapType\n+  Sequence    <-----> ArrayType\n+  NamedTuple  <-----> RowType\n+  beam.Row    ---/\n+\n+:code:`nullable=True` on a Beam :code:`FieldType` is represented in Python by\n+wrapping the type in :code:`Optional`.\n+\n+The mappings for :code:`STRING` and :code:`BYTES` are different between python\n+2 and python 3, because of the changes to str.\n+\n+Python 3.x::\n+\n+  str/unicode <-----> STRING\n+  bytes       <-----> BYTES\n+  ByteString  ---/\n+\n+Python 2.x::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDYxNw=="}, "originalCommit": {"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjEzNjg0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/typehints/schemas.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMTowNzoxOFrOHWRckw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMTowNzo1MVrOHWRdBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExNjU2Mw==", "bodyText": "Thanks for the note, this definitely helps.", "url": "https://github.com/apache/beam/pull/12906#discussion_r493116563", "createdAt": "2020-09-23T01:07:18Z", "author": {"login": "ibzib"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,36 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ------> INT64\n+  np.float32  <-----> FLOAT\n+  np.float64  <-----> DOUBLE\n+  float       ------> DOUBLE\n+  bool        <-----> BOOLEAN\n+  str/unicode <-----> STRING\n+  bytes       <-----> BYTES\n+  ByteString  ------> BYTES\n+  Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n+  Mapping     <-----> MapType\n+  Sequence    <-----> ArrayType\n+  NamedTuple  <-----> RowType\n+  beam.Row    ------> RowType\n+\n+Note that some of these mappings are provided as conveniences,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcf180968cf5a2ab40493d6e928d8b084e34bf3b"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExNjY3OA==", "bodyText": "Thanks for helping me clarify my documentation :)", "url": "https://github.com/apache/beam/pull/12906#discussion_r493116678", "createdAt": "2020-09-23T01:07:51Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,36 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ------> INT64\n+  np.float32  <-----> FLOAT\n+  np.float64  <-----> DOUBLE\n+  float       ------> DOUBLE\n+  bool        <-----> BOOLEAN\n+  str/unicode <-----> STRING\n+  bytes       <-----> BYTES\n+  ByteString  ------> BYTES\n+  Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n+  Mapping     <-----> MapType\n+  Sequence    <-----> ArrayType\n+  NamedTuple  <-----> RowType\n+  beam.Row    ------> RowType\n+\n+Note that some of these mappings are provided as conveniences,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExNjU2Mw=="}, "originalCommit": {"oid": "dcf180968cf5a2ab40493d6e928d8b084e34bf3b"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3209, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}