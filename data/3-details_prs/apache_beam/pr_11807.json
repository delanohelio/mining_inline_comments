{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNTgwNzIy", "number": 11807, "title": "[BEAM-9363] Support TUMBLE aggregation", "bodyText": "When TUMBLE works as table-valued function, make sure basic aggregation works.\nCurrent implementation idea is, we just \"window\" PCollection in TableScanRel, such than any following aggregation or join will be applied on \"windowed\" stream directly.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-25T06:56:54Z", "url": "https://github.com/apache/beam/pull/11807", "merged": true, "mergeCommit": {"oid": "05882606bc638698ebc8e16a978d184b3f7ba5fe"}, "closed": true, "closedAt": "2020-05-28T03:54:58Z", "author": {"login": "amaliujia"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckqctyAH2gAyNDIyNTgwNzIyOjExNzk2ZjNkNmZkNWRhYjZmOTEwNjU4ZWRhYTU3ZjhhMDVhM2M3MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcliyabgH2gAyNDIyNTgwNzIyOjUxMWM0MTFmYjZiZmMyYjViYzQwNWYyNmRkMDQwNThhODU0ODhjMGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "11796f3d6fd5dab6f910658edaa57f8a05a3c713", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/beam/commit/11796f3d6fd5dab6f910658edaa57f8a05a3c713", "committedDate": "2020-05-25T06:54:44Z", "message": "[BEAM-9363] Support TUMBLE aggregation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/beam/commit/efc76268e696c4a4dccba469b8e4d53e5e1b93a9", "committedDate": "2020-05-25T06:58:08Z", "message": "fixup! fix style issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjU3Mzk0", "url": "https://github.com/apache/beam/pull/11807#pullrequestreview-419657394", "createdAt": "2020-05-27T22:36:42Z", "commit": {"oid": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjozNjo0M1rOGbfjFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjo0NTowOFrOGbfuxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4MTYyMQ==", "bodyText": "Nit: count_start should be field_count.", "url": "https://github.com/apache/beam/pull/11807#discussion_r431481621", "createdAt": "2020-05-27T22:36:43Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -4780,6 +4780,31 @@ public void testTumbleAsTVF() {\n     pipeline.run().waitUntilFinish(Duration.standardMinutes(PIPELINE_EXECUTION_WAITTIME_MINUTES));\n   }\n \n+  @Test\n+  public void testTVFTumbleAggregation() {\n+    String sql =\n+        \"SELECT COUNT(*) as field_count, \"\n+            + \"window_start \"\n+            + \"FROM TUMBLE((select * from KeyValue), descriptor(ts), 'INTERVAL 1 SECOND') \"\n+            + \"GROUP BY window_start\";\n+    ZetaSQLQueryPlanner zetaSQLQueryPlanner = new ZetaSQLQueryPlanner(config);\n+    BeamRelNode beamRelNode = zetaSQLQueryPlanner.convertToBeamRel(sql);\n+\n+    PCollection<Row> stream = BeamSqlRelUtils.toPCollection(pipeline, beamRelNode);\n+\n+    final Schema schema =\n+        Schema.builder().addInt64Field(\"count_start\").addDateTimeField(\"window_start\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDYxMw==", "bodyText": "Why not just return upstream.apply(...)?", "url": "https://github.com/apache/beam/pull/11807#discussion_r431484613", "createdAt": "2020-05-27T22:45:08Z", "author": {"login": "robinyqiu"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/rel/BeamTableFunctionScanRel.java", "diffHunk": "@@ -99,14 +102,32 @@ public TableFunctionScan copy(\n       RexInputRef wmCol = (RexInputRef) call.getOperands().get(1);\n       PCollection<Row> upstream = input.get(0);\n       Schema outputSchema = CalciteUtils.toSchema(getRowType());\n-      return upstream\n-          .apply(\n-              ParDo.of(\n-                  new FixedWindowDoFn(\n-                      FixedWindows.of(durationParameter(call.getOperands().get(2))),\n-                      wmCol.getIndex(),\n-                      outputSchema)))\n-          .setRowSchema(outputSchema);\n+      FixedWindows windowFn = FixedWindows.of(durationParameter(call.getOperands().get(2)));\n+      PCollection<Row> streamWithWindowMetadata =\n+          upstream\n+              .apply(ParDo.of(new FixedWindowDoFn(windowFn, wmCol.getIndex(), outputSchema)))\n+              .setRowSchema(outputSchema);\n+\n+      PCollection<Row> windowedStream =\n+          assignTimestampsAndWindow(\n+              streamWithWindowMetadata, wmCol.getIndex(), (WindowFn) windowFn);\n+\n+      return windowedStream;\n+    }\n+\n+    /** Extract timestamps from the windowFieldIndex, then window into windowFns. */\n+    private PCollection<Row> assignTimestampsAndWindow(\n+        PCollection<Row> upstream, int windowFieldIndex, WindowFn<Row, IntervalWindow> windowFn) {\n+      PCollection<Row> windowedStream;\n+      windowedStream =\n+          upstream", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "511c411fb6bfc2b5bc405f26dd04058a85488c0b", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/beam/commit/511c411fb6bfc2b5bc405f26dd04058a85488c0b", "committedDate": "2020-05-28T00:33:07Z", "message": "fixup! address comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4314, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}