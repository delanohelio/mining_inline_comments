{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTA0MTk1", "number": 11443, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODowNTo0MlrODy_xGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjo0NToxNlrODzENfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODAwMTUzOnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/core/runtime/graphx/translate_test.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODowNTo0MlrOGHYApg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTowNDozMlrOGHZzVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4NjU5OA==", "bodyText": "While this is testing the Marshal it's not validating that the Requirements are populated as expected. Consider checking the new change in the resulting proto, if not the length like the other tests.", "url": "https://github.com/apache/beam/pull/11443#discussion_r410386598", "createdAt": "2020-04-17T18:05:42Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/translate_test.go", "diffHunk": "@@ -87,29 +89,38 @@ func TestMarshal(t *testing.T) {\n \t\tname                     string\n \t\tmakeGraph                func(t *testing.T, g *graph.Graph)\n \t\tedges, transforms, roots int\n+\t\trequirements             []string\n \t}{\n \t\t{\n \t\t\tname: \"ParDo\",\n \t\t\tmakeGraph: func(t *testing.T, g *graph.Graph) {\n-\t\t\t\taddDoFn(t, g, pickFn, g.Root(), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()})\n+\t\t\t\taddDoFn(t, g, pickFn, g.Root(), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()}, nil)\n \t\t\t},\n \t\t\tedges:      1,\n \t\t\ttransforms: 1,\n \t\t\troots:      1,\n \t\t}, {\n \t\t\tname: \"ScopedParDo\",\n \t\t\tmakeGraph: func(t *testing.T, g *graph.Graph) {\n-\t\t\t\taddDoFn(t, g, pickFn, g.NewScope(g.Root(), \"sub\"), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()})\n+\t\t\t\taddDoFn(t, g, pickFn, g.NewScope(g.Root(), \"sub\"), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()}, nil)\n \t\t\t},\n \t\t\tedges:      1,\n \t\t\ttransforms: 2,\n \t\t\troots:      1,\n+\t\t}, {\n+\t\t\tname: \"SplittableParDo\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd36274c4a5893722898b25935af731a3c1417b0"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxNTk1OA==", "bodyText": "Whoops. That was the plan, but I forgot to actually add the validation. >_<", "url": "https://github.com/apache/beam/pull/11443#discussion_r410415958", "createdAt": "2020-04-17T19:04:32Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/translate_test.go", "diffHunk": "@@ -87,29 +89,38 @@ func TestMarshal(t *testing.T) {\n \t\tname                     string\n \t\tmakeGraph                func(t *testing.T, g *graph.Graph)\n \t\tedges, transforms, roots int\n+\t\trequirements             []string\n \t}{\n \t\t{\n \t\t\tname: \"ParDo\",\n \t\t\tmakeGraph: func(t *testing.T, g *graph.Graph) {\n-\t\t\t\taddDoFn(t, g, pickFn, g.Root(), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()})\n+\t\t\t\taddDoFn(t, g, pickFn, g.Root(), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()}, nil)\n \t\t\t},\n \t\t\tedges:      1,\n \t\t\ttransforms: 1,\n \t\t\troots:      1,\n \t\t}, {\n \t\t\tname: \"ScopedParDo\",\n \t\t\tmakeGraph: func(t *testing.T, g *graph.Graph) {\n-\t\t\t\taddDoFn(t, g, pickFn, g.NewScope(g.Root(), \"sub\"), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()})\n+\t\t\t\taddDoFn(t, g, pickFn, g.NewScope(g.Root(), \"sub\"), []*graph.Node{newIntInput(g)}, []*coder.Coder{intCoder(), intCoder()}, nil)\n \t\t\t},\n \t\t\tedges:      1,\n \t\t\ttransforms: 2,\n \t\t\troots:      1,\n+\t\t}, {\n+\t\t\tname: \"SplittableParDo\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4NjU5OA=="}, "originalCommit": {"oid": "cd36274c4a5893722898b25935af731a3c1417b0"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODEwMTAwOnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/pardo.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODozNzoyN1rOGHY_iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTowNzozNFrOGHZ4sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQwMjY5OQ==", "bodyText": "This doesn't look like a necessary change, and groups the standard library imports with the rest of them. Consider reverting this change.", "url": "https://github.com/apache/beam/pull/11443#discussion_r410402699", "createdAt": "2020-04-17T18:37:27Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/pardo.go", "diffHunk": "@@ -17,10 +17,9 @@ package beam\n \n import (\n \t\"fmt\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/graph\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd36274c4a5893722898b25935af731a3c1417b0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxNzMzMQ==", "bodyText": "This shouldn't have been here, just forgot to erase some changes. Reverting it.", "url": "https://github.com/apache/beam/pull/11443#discussion_r410417331", "createdAt": "2020-04-17T19:07:34Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/pardo.go", "diffHunk": "@@ -17,10 +17,9 @@ package beam\n \n import (\n \t\"fmt\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/graph\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQwMjY5OQ=="}, "originalCommit": {"oid": "cd36274c4a5893722898b25935af731a3c1417b0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODcyOTU5OnYy", "diffSide": "RIGHT", "path": "sdks/go/pkg/beam/core/runtime/graphx/translate_test.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjo0NToxNlrOGHfKCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0NzoyM1rOGHf_uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMzY4OQ==", "bodyText": "Since order doesn't matter for the results, but in the future the SDK might add more than this requirement, consider adding a transformer to sort the slices for the equals check.\nhttps://godoc.corp.google.com/pkg/google3/third_party/golang/cmp/cmp#example_Option_sortedSlice", "url": "https://github.com/apache/beam/pull/11443#discussion_r410503689", "createdAt": "2020-04-17T22:45:16Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/translate_test.go", "diffHunk": "@@ -157,8 +170,34 @@ func TestMarshal(t *testing.T) {\n \t\t\tif got, want := len(p.GetRootTransformIds()), test.roots; got != want {\n \t\t\t\tt.Errorf(\"got %d roots, want %d : %v\", got, want, proto.MarshalTextString(p))\n \t\t\t}\n+\t\t\tif got, want := p.GetRequirements(), test.requirements; !cmp.Equal(got, want) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bce12be0629a9d74e30953a675a38bc41d90e9f"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNzQzMw==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/11443#discussion_r410517433", "createdAt": "2020-04-17T23:47:23Z", "author": {"login": "youngoli"}, "path": "sdks/go/pkg/beam/core/runtime/graphx/translate_test.go", "diffHunk": "@@ -157,8 +170,34 @@ func TestMarshal(t *testing.T) {\n \t\t\tif got, want := len(p.GetRootTransformIds()), test.roots; got != want {\n \t\t\t\tt.Errorf(\"got %d roots, want %d : %v\", got, want, proto.MarshalTextString(p))\n \t\t\t}\n+\t\t\tif got, want := p.GetRequirements(), test.requirements; !cmp.Equal(got, want) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMzY4OQ=="}, "originalCommit": {"oid": "3bce12be0629a9d74e30953a675a38bc41d90e9f"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1294, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}