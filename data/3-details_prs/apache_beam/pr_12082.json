{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTMyOTY0", "number": 12082, "title": "Standardizing BigQuery job names in Beam Python and Java SDKs", "bodyText": "Please add a meaningful description for your change here\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-24T21:37:44Z", "url": "https://github.com/apache/beam/pull/12082", "merged": true, "mergeCommit": {"oid": "752bdfd09bc4175dd9f51a096f81c9e5b0805913"}, "closed": true, "closedAt": "2020-07-31T01:01:20Z", "author": {"login": "pabloem"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwD-1wABqjM0OTM2NDYzNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6HXL4gFqTQ1ODgwNTkzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56d3b0a1e3fc21a1ad2ce28455cb03185b7db353", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/56d3b0a1e3fc21a1ad2ce28455cb03185b7db353", "committedDate": "2020-06-25T23:51:14Z", "message": "Fixup"}, "afterCommit": {"oid": "fd0a2236bf71a0abc4bed0141427750355da653d", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/fd0a2236bf71a0abc4bed0141427750355da653d", "committedDate": "2020-06-29T16:52:39Z", "message": "Fixup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd0a2236bf71a0abc4bed0141427750355da653d", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/fd0a2236bf71a0abc4bed0141427750355da653d", "committedDate": "2020-06-29T16:52:39Z", "message": "Fixup"}, "afterCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/60b854c2dbc7f7726ce8224066d607e4f5c22e94", "committedDate": "2020-06-29T19:57:23Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzQ0MDMz", "url": "https://github.com/apache/beam/pull/12082#pullrequestreview-451344033", "createdAt": "2020-07-20T07:04:45Z", "commit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzowNDo0NVrOGz8Dkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoyMTozM1rOGz8tfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExNDUxNA==", "bodyText": "\"Resources can be any type of BigQuery job started by BigQueryIO and temporary BigQuery resources created by BigQueryIO.\" ?", "url": "https://github.com/apache/beam/pull/12082#discussion_r457114514", "createdAt": "2020-07-20T07:04:45Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryResourceNaming.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.gcp.bigquery;\n+\n+import com.google.api.services.bigquery.model.TableReference;\n+import java.util.Optional;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.hash.Hashing;\n+\n+/**\n+ * This class contains utilities to standardize how resources are named by BigQueryIO.\n+ *\n+ * <p>Resources can be: - BigQuery jobs - Export jobs - Query jobs - Load jobs - Copy jobs -", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExNjA4NA==", "bodyText": "Probably cleaner to just use String.format() to do the replacement ?\nAlso, mention the standard format in the top level Java doc for easy reference.", "url": "https://github.com/apache/beam/pull/12082#discussion_r457116084", "createdAt": "2020-07-20T07:07:13Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryResourceNaming.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.gcp.bigquery;\n+\n+import com.google.api.services.bigquery.model.TableReference;\n+import java.util.Optional;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.hash.Hashing;\n+\n+/**\n+ * This class contains utilities to standardize how resources are named by BigQueryIO.\n+ *\n+ * <p>Resources can be: - BigQuery jobs - Export jobs - Query jobs - Load jobs - Copy jobs -\n+ * Temporary datasets - Temporary tables\n+ *\n+ * <p>This class has no backwards compatibility guaantees. It is considered internal.\n+ */\n+class BigQueryResourceNaming {\n+\n+  /**\n+   * Generate a BigQuery job ID based on a prefix from {@link\n+   * BigQueryResourceNaming::createJobIdPrefix}, with destination information added to it.\n+   *\n+   * @param prefix A prefix generated in {@link BigQueryResourceNaming::createJobIdPrefix}.\n+   * @param tableDestination A descriptor of the destination table.\n+   * @param partition A partition number in the destination table.\n+   * @param index\n+   * @return\n+   */\n+  static String createJobIdWithDestination(\n+      String prefix, TableDestination tableDestination, int partition, long index) {\n+    // Job ID must be different for each partition of each table.\n+    String destinationHash =\n+        Hashing.murmur3_128().hashUnencodedChars(tableDestination.toString()).toString();\n+    String jobId = String.format(\"%s_%s\", prefix, destinationHash);\n+    if (partition >= 0) {\n+      jobId += String.format(\"_%05d\", partition);\n+    }\n+    if (index >= 0) {\n+      jobId += String.format(\"_%05d\", index);\n+    }\n+    return jobId;\n+  }\n+\n+  public enum JobType {\n+    LOAD,\n+    COPY,\n+    EXPORT,\n+    QUERY,\n+  }\n+\n+  static final String BIGQUERY_JOB_TEMPLATE = \"beam_bq_job_{TYPE}_{JOB_ID}_{STEP}_{RANDOM}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyMjUyMQ==", "bodyText": "Can we add tests to make sure that generated names are consistent with BIGQUERY_JOB_TEMPLATE ?", "url": "https://github.com/apache/beam/pull/12082#discussion_r457122521", "createdAt": "2020-07-20T07:17:20Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryResourceNamingTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.gcp.bigquery;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.apache.beam.sdk.io.gcp.bigquery.BigQueryResourceNaming.JobType;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+public class BigQueryResourceNamingTest {\n+\n+  @Test\n+  public void testJobTypesInNames() {\n+    assertEquals(\n+        \"beam_bq_job_EXPORT_beamappjobtest_abcd\",\n+        BigQueryResourceNaming.createJobIdPrefix(\"beamapp-job-test\", \"abcd\", JobType.EXPORT));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyNDEyMg==", "bodyText": "Please add unit tests for Python as well.", "url": "https://github.com/apache/beam/pull/12082#discussion_r457124122", "createdAt": "2020-07-20T07:19:45Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -1465,3 +1465,23 @@ def get_avro_schema_from_table_schema(schema):\n   dict_table_schema = get_dict_table_schema(schema)\n   return bigquery_avro_tools.get_record_schema_from_dict_table_schema(\n       \"root\", dict_table_schema)\n+\n+\n+class BigQueryJobTypes:\n+  EXPORT = 'EXPORT'\n+  COPY = 'COPY'\n+  LOAD = 'LOAD'\n+  QUERY = 'QUERY'\n+\n+\n+_BQ_JOB_NAME_TEMPLATE = \"beam_bq_job_{job_type}_{job_id}_{step_id}_{random}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyNTAzMg==", "bodyText": "Can we standardize and define this format in BigQueryIO (probably with a backwards compatibility warning) so that users can rely on it ?", "url": "https://github.com/apache/beam/pull/12082#discussion_r457125032", "createdAt": "2020-07-20T07:21:13Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryResourceNaming.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.gcp.bigquery;\n+\n+import com.google.api.services.bigquery.model.TableReference;\n+import java.util.Optional;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.hash.Hashing;\n+\n+/**\n+ * This class contains utilities to standardize how resources are named by BigQueryIO.\n+ *\n+ * <p>Resources can be: - BigQuery jobs - Export jobs - Query jobs - Load jobs - Copy jobs -\n+ * Temporary datasets - Temporary tables\n+ *\n+ * <p>This class has no backwards compatibility guaantees. It is considered internal.\n+ */\n+class BigQueryResourceNaming {\n+\n+  /**\n+   * Generate a BigQuery job ID based on a prefix from {@link\n+   * BigQueryResourceNaming::createJobIdPrefix}, with destination information added to it.\n+   *\n+   * @param prefix A prefix generated in {@link BigQueryResourceNaming::createJobIdPrefix}.\n+   * @param tableDestination A descriptor of the destination table.\n+   * @param partition A partition number in the destination table.\n+   * @param index\n+   * @return\n+   */\n+  static String createJobIdWithDestination(\n+      String prefix, TableDestination tableDestination, int partition, long index) {\n+    // Job ID must be different for each partition of each table.\n+    String destinationHash =\n+        Hashing.murmur3_128().hashUnencodedChars(tableDestination.toString()).toString();\n+    String jobId = String.format(\"%s_%s\", prefix, destinationHash);\n+    if (partition >= 0) {\n+      jobId += String.format(\"_%05d\", partition);\n+    }\n+    if (index >= 0) {\n+      jobId += String.format(\"_%05d\", index);\n+    }\n+    return jobId;\n+  }\n+\n+  public enum JobType {\n+    LOAD,\n+    COPY,\n+    EXPORT,\n+    QUERY,\n+  }\n+\n+  static final String BIGQUERY_JOB_TEMPLATE = \"beam_bq_job_{TYPE}_{JOB_ID}_{STEP}_{RANDOM}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyNTI0NQ==", "bodyText": "Can we standardize and define this format in bigquery.py (probably with a backwards compatibility warning) so that users can rely on it ?", "url": "https://github.com/apache/beam/pull/12082#discussion_r457125245", "createdAt": "2020-07-20T07:21:33Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -1465,3 +1465,23 @@ def get_avro_schema_from_table_schema(schema):\n   dict_table_schema = get_dict_table_schema(schema)\n   return bigquery_avro_tools.get_record_schema_from_dict_table_schema(\n       \"root\", dict_table_schema)\n+\n+\n+class BigQueryJobTypes:\n+  EXPORT = 'EXPORT'\n+  COPY = 'COPY'\n+  LOAD = 'LOAD'\n+  QUERY = 'QUERY'\n+\n+\n+_BQ_JOB_NAME_TEMPLATE = \"beam_bq_job_{job_type}_{job_id}_{step_id}_{random}\"\n+\n+\n+def generate_bq_job_name(job_name, step_id, job_type, random=None):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b854c2dbc7f7726ce8224066d607e4f5c22e94"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af54351ddc31c607d1634382704c8a52aaa78f3", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/9af54351ddc31c607d1634382704c8a52aaa78f3", "committedDate": "2020-07-23T22:13:02Z", "message": "Standardizing BigQuery job names in Beam Python and Java SDKs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2fb77d9029e8ca7f97157ab37bf7e408e83a258", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/c2fb77d9029e8ca7f97157ab37bf7e408e83a258", "committedDate": "2020-07-23T22:13:02Z", "message": "Naming BQ Copy jobs consistently in Python"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8132b222693f12b1309c5562574ea0b3ace518e", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a8132b222693f12b1309c5562574ea0b3ace518e", "committedDate": "2020-07-23T22:08:05Z", "message": "Applying fixes for comments"}, "afterCommit": {"oid": "b39e05baccc50e77ff354f15154507a21a55b108", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/b39e05baccc50e77ff354f15154507a21a55b108", "committedDate": "2020-07-23T22:28:32Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTE1NTE2", "url": "https://github.com/apache/beam/pull/12082#pullrequestreview-457115516", "createdAt": "2020-07-29T00:24:29Z", "commit": {"oid": "a7ef0baedbe0b06cbafe6413f044bdae26567b2b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDoyNDozMFrOG4kSOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDoyNToxN1rOG4kTWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2NzkyOA==", "bodyText": "Nit: what if the runner is not Dataflow ?", "url": "https://github.com/apache/beam/pull/12082#discussion_r461967928", "createdAt": "2020-07-29T00:24:30Z", "author": {"login": "chamikaramj"}, "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "diffHunk": "@@ -457,6 +456,22 @@\n  * </a> for security and permission related information specific to BigQuery.\n  */\n public class BigQueryIO {\n+\n+  /**\n+   * Template for BigQuery jobs created by BigQueryIO. This template is: {@code\n+   * \"beam_bq_job_{TYPE}_{JOB_ID}_{STEP}_{RANDOM}\"}, where:\n+   *\n+   * <ul>\n+   *   <li>{@code TYPE} represents the BigQuery job type (e.g. extract / copy / load / query)\n+   *   <li>{@code JOB_ID} is the Dataflow job name.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ef0baedbe0b06cbafe6413f044bdae26567b2b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2ODIxNg==", "bodyText": "Ditto.", "url": "https://github.com/apache/beam/pull/12082#discussion_r461968216", "createdAt": "2020-07-29T00:25:17Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -290,6 +290,20 @@ def compute_table_name(row):\n ]\n \n _LOGGER = logging.getLogger(__name__)\n+\"\"\"\n+Template for BigQuery jobs created by BigQueryIO. This template is:\n+`\"beam_bq_job_{job_type}_{job_id}_{step_id}_{random}\"`, where:\n+\n+- `job_type` represents the BigQuery job type (e.g. extract / copy / load /\n+    query).\n+- `job_id` is the Dataflow job name.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ef0baedbe0b06cbafe6413f044bdae26567b2b"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b88d2665f040ea4b1913c0f235ab2af3ddd0d8", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a6b88d2665f040ea4b1913c0f235ab2af3ddd0d8", "committedDate": "2020-07-30T21:59:24Z", "message": "Applying fixes from comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7ef0baedbe0b06cbafe6413f044bdae26567b2b", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a7ef0baedbe0b06cbafe6413f044bdae26567b2b", "committedDate": "2020-07-24T17:00:54Z", "message": "Fix lint issue"}, "afterCommit": {"oid": "a6b88d2665f040ea4b1913c0f235ab2af3ddd0d8", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a6b88d2665f040ea4b1913c0f235ab2af3ddd0d8", "committedDate": "2020-07-30T21:59:24Z", "message": "Applying fixes from comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODA1OTMy", "url": "https://github.com/apache/beam/pull/12082#pullrequestreview-458805932", "createdAt": "2020-07-30T22:28:21Z", "commit": {"oid": "a6b88d2665f040ea4b1913c0f235ab2af3ddd0d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3818, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}