{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzYwMjA0", "number": 10634, "title": "[BEAM-9178] Support all ZetaSQL TIMESTAMP functions", "bodyText": "This PR adds support of all ZetaSQL (BigQuery Standard SQL) TIMESTAMP functions to BeamSQL:\n\nCURRENT_TIMESTAMP\nEXTRACT (extracting DATE and WEEK not supported)\nSTRING\nTIMESTAMP (constructing TIMESTAMP from DATE or DATETIME not supported)\nTIMESTAMP_ADD\nTIMESTAMP_SUB\nTIMESTAMP_DIFF\nTIMESTAMP_TRUNC (truncating WEEK not supported)\nFORMAT_TIMESTAMP\nPARSE_TIMESTAMP\nTIMESTAMP_SECONDS and TIMESTAMP_MILLIS (TIMESTAMP_MICROS not supported)\nUNIX_SECONDS and UNIX_MILLIS (UNIX_MICROS not supported)\nTIMESTAMP_FROM_UNIX_SECONDS and TIMESTAMP_FROM_UNIX_MILLIS (TIMESTAMP_FROM_UNIX_MICROS not supported)\n\n(Exception: the known precision and timezone issue)\nr: @apilloud @kennknowles\ncc: @amaliujia @TheNeuralBit\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-17T23:40:36Z", "url": "https://github.com/apache/beam/pull/10634", "merged": true, "mergeCommit": {"oid": "88e6519e3d3f9ba83dc2d5c624ca798cc3ef4081"}, "closed": true, "closedAt": "2020-02-07T16:44:31Z", "author": {"login": "robinyqiu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-mUTQABqjI5ODM5MDE2NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBFvwvABqjMwMDcxOTU0MDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73eaef86c7f5c160961415d573849c5129ebce62", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/73eaef86c7f5c160961415d573849c5129ebce62", "committedDate": "2020-01-23T03:07:30Z", "message": "Fix unparseFunctionsUsingInterval()"}, "afterCommit": {"oid": "37b9890d40266eba7d5fb3ad20791a9c4b071fc2", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/37b9890d40266eba7d5fb3ad20791a9c4b071fc2", "committedDate": "2020-01-28T00:34:23Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37b9890d40266eba7d5fb3ad20791a9c4b071fc2", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/37b9890d40266eba7d5fb3ad20791a9c4b071fc2", "committedDate": "2020-01-28T00:34:23Z", "message": "Support all ZetaSQL TIMESTAMP functions"}, "afterCommit": {"oid": "5f3c2923de0bbaaf4c48a9f6a009d39c17bd3d37", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/5f3c2923de0bbaaf4c48a9f6a009d39c17bd3d37", "committedDate": "2020-01-28T00:41:58Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f3c2923de0bbaaf4c48a9f6a009d39c17bd3d37", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/5f3c2923de0bbaaf4c48a9f6a009d39c17bd3d37", "committedDate": "2020-01-28T00:41:58Z", "message": "Support all ZetaSQL TIMESTAMP functions"}, "afterCommit": {"oid": "c6b36a0414c9489832f0f87cc4da20413341ea09", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/c6b36a0414c9489832f0f87cc4da20413341ea09", "committedDate": "2020-01-28T00:44:57Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6b36a0414c9489832f0f87cc4da20413341ea09", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/c6b36a0414c9489832f0f87cc4da20413341ea09", "committedDate": "2020-01-28T00:44:57Z", "message": "Support all ZetaSQL TIMESTAMP functions"}, "afterCommit": {"oid": "d8300dea9d9c6c22614791433365897b54db9b8a", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/d8300dea9d9c6c22614791433365897b54db9b8a", "committedDate": "2020-01-28T21:43:37Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8300dea9d9c6c22614791433365897b54db9b8a", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/d8300dea9d9c6c22614791433365897b54db9b8a", "committedDate": "2020-01-28T21:43:37Z", "message": "Support all ZetaSQL TIMESTAMP functions"}, "afterCommit": {"oid": "43524190dc6e6d7101351902e98c8fd3402d743f", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/43524190dc6e6d7101351902e98c8fd3402d743f", "committedDate": "2020-02-03T19:00:27Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjQ1NTQz", "url": "https://github.com/apache/beam/pull/10634#pullrequestreview-352645543", "createdAt": "2020-02-03T23:56:49Z", "commit": {"oid": "3f3d7631d167ab72efed83193422fdca84677101"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzo1Njo1MFrOFlEFXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDowOToyMVrOFlES-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQwODU0Mw==", "bodyText": "s/parse/unparse/", "url": "https://github.com/apache/beam/pull/10634#discussion_r374408543", "createdAt": "2020-02-03T23:56:50Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamBigQuerySqlDialect.java", "diffHunk": "@@ -302,6 +316,38 @@ private void unparseTrim(SqlWriter writer, SqlCall call, int leftPrec, int right\n     writer.endFunCall(trimFrame);\n   }\n \n+  /**\n+   * For usage of INTERVAL, see <a\n+   * href=\"https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#timestamp_add\">\n+   * BQ TIMESTAMP_ADD function</a> for example.\n+   */\n+  private void unparseFunctionsUsingInterval(\n+      SqlWriter writer, SqlCall call, int leftPrec, int rightPrec) {\n+    // e.g. TIMESTAMP_ADD syntax:\n+    // TIMESTAMP_ADD(timestamp_expression, INTERVAL int64_expression date_part)\n+    int operandCount = call.operandCount();\n+    if (operandCount == 2) {\n+      // operand0: timestamp_expression\n+      // operand1: SqlIntervalLiteral (INTERVAL int64_expression date_part)\n+      super.unparseCall(writer, call, leftPrec, rightPrec);\n+    } else if (operandCount == 3) {\n+      // operand0: timestamp_expression\n+      // operand1: int64_expression\n+      // operand2: date_part\n+      final SqlWriter.Frame frame = writer.startFunCall(call.getOperator().getName());\n+      call.operand(0).unparse(writer, leftPrec, rightPrec);\n+      writer.literal(\",\");\n+      writer.literal(\"INTERVAL\");\n+      call.operand(1).unparse(writer, leftPrec, rightPrec);\n+      call.operand(2).unparse(writer, leftPrec, rightPrec);\n+      writer.endFunCall(frame);\n+    } else {\n+      throw new IllegalArgumentException(\n+          String.format(\n+              \"Unable to parse %s with %d operands.\", call.getOperator().getName(), operandCount));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3d7631d167ab72efed83193422fdca84677101"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQwOTAzMA==", "bodyText": "\ud83d\udc4d Thanks. This actually adds quite a bit of complexity elsewhere.", "url": "https://github.com/apache/beam/pull/10634#discussion_r374409030", "createdAt": "2020-02-03T23:58:39Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ExpressionConverter.java", "diffHunk": "@@ -52,7 +51,6 @@\n import com.google.zetasql.resolvedast.ResolvedNodes.ResolvedOrderByScan;\n import com.google.zetasql.resolvedast.ResolvedNodes.ResolvedParameter;\n import com.google.zetasql.resolvedast.ResolvedNodes.ResolvedProjectScan;\n-import io.grpc.Status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3d7631d167ab72efed83193422fdca84677101"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxMDAzMw==", "bodyText": "Manually maintaining this list seems like no fun. What about using functionCall.getSignature().getResultType().getType()?", "url": "https://github.com/apache/beam/pull/10634#discussion_r374410033", "createdAt": "2020-02-04T00:02:14Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ExpressionConverter.java", "diffHunk": "@@ -770,88 +765,34 @@ private RexNode convertResolvedFunctionCall(\n           throw new UnsupportedOperationException(\n               \"Only support TUMBLE, HOP AND SESSION functions right now.\");\n       }\n-    } else if (functionCall.getFunction().getGroup().equals(\"ZetaSQL\")) {\n-      op =\n-          SqlStdOperatorMappingTable.ZETASQL_FUNCTION_TO_CALCITE_SQL_OPERATOR.get(\n-              functionCall.getFunction().getName());\n-\n+    } else if (\"ZetaSQL\".equals(funGroup)) {\n       if (op == null) {\n-        throw new UnsupportedOperationException(\n-            \"Does not support ZetaSQL function: \" + functionCall.getFunction().getName());\n+        TypeKind returnType =\n+            SqlStdOperatorMappingTable.ZETASQL_FUNCTION_NAME_TO_RETURN_TYPE.get(funName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3d7631d167ab72efed83193422fdca84677101"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxMjAyNQ==", "bodyText": "This 'works' now but it is still not supported in our type system, so it might work inconsistently. (Microseconds will be dropped once we are out of ZetaSQLCalc.) Should we be making sure ZetaSQLCalc has the correct hooks to error if the user interacts with microsecond precision values?\ncc: @kennknowles", "url": "https://github.com/apache/beam/pull/10634#discussion_r374412025", "createdAt": "2020-02-04T00:09:21Z", "author": {"login": "apilloud"}, "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/translation/ExpressionConverter.java", "diffHunk": "@@ -770,88 +765,34 @@ private RexNode convertResolvedFunctionCall(\n           throw new UnsupportedOperationException(\n               \"Only support TUMBLE, HOP AND SESSION functions right now.\");\n       }\n-    } else if (functionCall.getFunction().getGroup().equals(\"ZetaSQL\")) {\n-      op =\n-          SqlStdOperatorMappingTable.ZETASQL_FUNCTION_TO_CALCITE_SQL_OPERATOR.get(\n-              functionCall.getFunction().getName());\n-\n+    } else if (\"ZetaSQL\".equals(funGroup)) {\n       if (op == null) {\n-        throw new UnsupportedOperationException(\n-            \"Does not support ZetaSQL function: \" + functionCall.getFunction().getName());\n+        TypeKind returnType =\n+            SqlStdOperatorMappingTable.ZETASQL_FUNCTION_NAME_TO_RETURN_TYPE.get(funName);\n+        if (returnType != null) {\n+          op =\n+              SqlOperators.createSimpleSqlFunction(\n+                  funName, ZetaSqlUtils.zetaSqlTypeToCalciteType(returnType));\n+        } else {\n+          throw new UnsupportedOperationException(\"Does not support ZetaSQL function: \" + funName);\n+        }\n       }\n \n-      // There are different processes to handle argument conversion because INTERVAL is not a\n-      // type in ZetaSQL.\n-      if (FUNCTION_FAMILY_DATE_ADD.contains(functionCall.getFunction().getName())) {\n-        return convertTimestampAddFunction(functionCall, columnList, fieldList);\n-      } else {\n-        for (ResolvedExpr expr : functionCall.getArgumentList()) {\n-          operands.add(convertRexNodeFromResolvedExpr(expr, columnList, fieldList));\n-        }\n+      for (ResolvedExpr expr : functionCall.getArgumentList()) {\n+        operands.add(convertRexNodeFromResolvedExpr(expr, columnList, fieldList));\n       }\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"Does not support function group: \" + functionCall.getFunction().getGroup());\n+      throw new UnsupportedOperationException(\"Does not support function group: \" + funGroup);\n     }\n \n     SqlOperatorRewriter rewriter =\n-        SqlStdOperatorMappingTable.ZETASQL_FUNCTION_TO_CALCITE_SQL_OPERATOR_REWRITER.get(\n-            functionCall.getFunction().getName());\n+        SqlStdOperatorMappingTable.ZETASQL_FUNCTION_TO_CALCITE_SQL_OPERATOR_REWRITER.get(funName);\n \n     if (rewriter != null) {\n-      ret = rewriter.apply(rexBuilder(), operands);\n+      return rewriter.apply(rexBuilder(), operands);\n     } else {\n-      ret = rexBuilder().makeCall(op, operands);\n-    }\n-    return ret;\n-  }\n-\n-  private RexNode convertTimestampAddFunction(\n-      ResolvedFunctionCall functionCall,\n-      List<ResolvedColumn> columnList,\n-      List<RelDataTypeField> fieldList) {\n-\n-    TimeUnit unit =\n-        TIME_UNIT_CASTING_MAP.get(\n-            ((ResolvedLiteral) functionCall.getArgumentList().get(2)).getValue().getEnumValue());\n-\n-    if ((unit == TimeUnit.MICROSECOND) || (unit == TimeUnit.NANOSECOND)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3d7631d167ab72efed83193422fdca84677101"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acb046004dc3a828ee5fbb896741084d5690720d", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/acb046004dc3a828ee5fbb896741084d5690720d", "committedDate": "2020-02-04T18:08:33Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f3d7631d167ab72efed83193422fdca84677101", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/3f3d7631d167ab72efed83193422fdca84677101", "committedDate": "2020-02-03T19:02:32Z", "message": "Merge branch 'master' into timestamp2"}, "afterCommit": {"oid": "acb046004dc3a828ee5fbb896741084d5690720d", "author": {"user": {"login": "robinyqiu", "name": "Yueyang Qiu"}}, "url": "https://github.com/apache/beam/commit/acb046004dc3a828ee5fbb896741084d5690720d", "committedDate": "2020-02-04T18:08:33Z", "message": "Support all ZetaSQL TIMESTAMP functions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3527, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}