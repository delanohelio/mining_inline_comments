{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NDI5NDc3", "number": 12079, "title": "[BEAM-9890] Support BIT_AND aggregation function in Beam SQL", "bodyText": "R: @amaliujia\nCC: @kennknowles\nAdded support for BIT_AND aggregation function in Beam SQL.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n\n\nXLang\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-24T19:38:32Z", "url": "https://github.com/apache/beam/pull/12079", "merged": true, "mergeCommit": {"oid": "18ce248ace3cfcba406f53b0d3b629c9f4c12a36"}, "closed": true, "closedAt": "2020-06-24T20:50:06Z", "author": {"login": "Imfuyuwei"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuUFemgH2gAyNDM5NDI5NDc3OmQ0MWRkNTAxOGY5MGJjYWM5MDA3OWY2ODYyNDcxMGM4MTFmMDVlNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvLBQXgFqTQzODYyOTU1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d41dd5018f90bcac90079f68624710c811f05e50", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/d41dd5018f90bcac90079f68624710c811f05e50", "committedDate": "2020-06-24T06:30:41Z", "message": "[BEAM-9890] Support BIT_AND aggregation function in Beam SQL and added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTgxNDM5", "url": "https://github.com/apache/beam/pull/12079#pullrequestreview-436981439", "createdAt": "2020-06-24T20:27:04Z", "commit": {"oid": "d41dd5018f90bcac90079f68624710c811f05e50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoyNzowNFrOGoh6Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoyNzowNFrOGoh6Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1MTc3OQ==", "bodyText": "-1L makes it a bit harder to read. Why not use 1L instead?", "url": "https://github.com/apache/beam/pull/12079#discussion_r445151779", "createdAt": "2020-06-24T20:27:04Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/transform/BeamBuiltinAggregations.java", "diffHunk": "@@ -383,4 +392,30 @@ public Long extractOutput(Long accum) {\n       return accum;\n     }\n   }\n+\n+  static class BitAnd<T extends Number> extends CombineFn<T, Long, Long> {\n+    @Override\n+    public Long createAccumulator() {\n+      return -1L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d41dd5018f90bcac90079f68624710c811f05e50"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTk2MTU2", "url": "https://github.com/apache/beam/pull/12079#pullrequestreview-436996156", "createdAt": "2020-06-24T20:49:41Z", "commit": {"oid": "d41dd5018f90bcac90079f68624710c811f05e50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjI5NTUx", "url": "https://github.com/apache/beam/pull/12079#pullrequestreview-438629551", "createdAt": "2020-06-26T22:30:50Z", "commit": {"oid": "d41dd5018f90bcac90079f68624710c811f05e50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjozMDo1MFrOGpwZfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjozMDo1MFrOGpwZfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzNzc1OA==", "bodyText": "In fact, I wasn't sure what's the result of NULL & long", "url": "https://github.com/apache/beam/pull/12079#discussion_r446437758", "createdAt": "2020-06-26T22:30:50Z", "author": {"login": "amaliujia"}, "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/transform/BeamBuiltinAggregations.java", "diffHunk": "@@ -383,4 +392,30 @@ public Long extractOutput(Long accum) {\n       return accum;\n     }\n   }\n+\n+  static class BitAnd<T extends Number> extends CombineFn<T, Long, Long> {\n+    @Override\n+    public Long createAccumulator() {\n+      return -1L;\n+    }\n+\n+    @Override\n+    public Long addInput(Long accum, T input) {\n+      return accum & input.longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d41dd5018f90bcac90079f68624710c811f05e50"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3808, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}