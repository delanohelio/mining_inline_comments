{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MjgzMDE5", "number": 12858, "title": "[BEAM-9547] Raise NotImplementedError and WontImplementError throughout DeferredDataframe", "bodyText": "This PR reduces the number of skipped test cases in pandas.core.frame down to 36 (6.3%), and they are all due to issues with the test framework, not unimplemented functionality. The rest of the test cases raise wont implement (13.5%), raise not implemented (11.5%), or pass (68.7%).\nNow raises WontImplementError\n\nSeries.memory_usage\nSeries.__contains__ - checks for a value in the entire index. Maybe this could be implemented as a deferred scalar?\nDataFrame.info\n\nNow raises NotImplementedError\nI'm pretty confident the following could be implemented at least partially:\n\nDataFrame.__getitem__(DeferredBase)\nDataFrame.apply\nDataFrame.explode\nDataFrame.isin\nDataFrame.assign\nDataFrame.combine\nDataFrame.combine_first\nDataFrame.drop\nDataFrame.eval\nDataFrame.melt\nDataFrame.at\nDataFrame.count\nDataFrame.cov\nDataFrame.corr\nDataFrame.dot\nDataFrame.pivot\nDataFrame.pivot_table\n\nI think the following could be implemented:\n\nSeries.reindex\nDataFrame.index (deferred access and assignment)\nDataFrame.reindex\nDataFrame.append\n\nNew functionality\n\nArithmetic operators for DataFrame\n\nI provided implementations for the following functions dealing with columns, but they're not deferred which seems wrong:\n\nDataFrame.columns\nDataFrame.__contains__\nDataFrame.axes (returns (self.index, self.columns), so it will fail until index is supported)\n\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-16T22:44:06Z", "url": "https://github.com/apache/beam/pull/12858", "merged": true, "mergeCommit": {"oid": "93f1076626c106980d62dfd5c3d8baeaf5d8f3d0"}, "closed": true, "closedAt": "2020-09-22T22:23:44Z", "author": {"login": "TheNeuralBit"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJlA0SABqjM3NzU0NTA1MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLdTJpABqjM3OTQ4ODY1ODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f6a9db1bdc135e19322cbbd8154ab631c66fd07", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/7f6a9db1bdc135e19322cbbd8154ab631c66fd07", "committedDate": "2020-09-16T20:50:40Z", "message": "Draft of NotImplementedErrors for DataFrame"}, "afterCommit": {"oid": "e7a67057766894d99be37ee9e9db6dac9ac5d299", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/e7a67057766894d99be37ee9e9db6dac9ac5d299", "committedDate": "2020-09-16T23:29:30Z", "message": "Draft of NotImplementedErrors for DataFrame"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzExNzg3", "url": "https://github.com/apache/beam/pull/12858#pullrequestreview-490311787", "createdAt": "2020-09-17T07:24:45Z", "commit": {"oid": "e7a67057766894d99be37ee9e9db6dac9ac5d299"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzoyNDo0NlrOHTU3kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzoyNzoxNFrOHTU89Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyNjg5OQ==", "bodyText": "The all was dropped here, which makes the statement always true.", "url": "https://github.com/apache/beam/pull/12858#discussion_r490026899", "createdAt": "2020-09-17T07:24:46Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -279,13 +267,23 @@ def __getattr__(self, name):\n \n   def __getitem__(self, key):\n     # TODO: Replicate pd.DataFrame.__getitem__ logic\n-    if (isinstance(key, list) and\n-        all(key_column in self._expr.proxy().columns\n-            for key_column in key)) or key in self._expr.proxy().columns:\n+    if isinstance(key, frame_base.DeferredBase):\n+      # Fail early if key is a DeferredBase as it interacts surprisingly with\n+      # key in self._expr.proxy().columns\n+      raise NotImplementedError(\n+          \"Indexing with a deferred frame is not yet supported. Consider \"\n+          \"using df.loc[...]\")\n+\n+    if (isinstance(key, list) and key_column in self._expr.proxy().columns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a67057766894d99be37ee9e9db6dac9ac5d299"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyODI3Nw==", "bodyText": "I've been thinking we could do something here if the value type that goes into the columns are categorical.", "url": "https://github.com/apache/beam/pull/12858#discussion_r490028277", "createdAt": "2020-09-17T07:27:14Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -763,8 +788,9 @@ def sort_values(self, axis, **kwargs):\n   transform = frame_base._elementwise_method(\n       'transform', restrictions={'axis': 0})\n \n-  def transpose(self, *args, **kwargs):\n-    raise frame_base.WontImplementError('non-deferred column values')\n+  transpose = frame_base.wont_implement_method('non-deferred column values')\n+  pivot = frame_base.wont_implement_method('non-deferred column values')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a67057766894d99be37ee9e9db6dac9ac5d299"}, "originalPosition": 153}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "374c2996ca202f5bade77419c19239998ad097ef", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/374c2996ca202f5bade77419c19239998ad097ef", "committedDate": "2020-09-22T19:25:48Z", "message": "Draft of NotImplementedErrors for DataFrame"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0063fc2837ac4181e6f3f6f7a42e72aa67063118", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/0063fc2837ac4181e6f3f6f7a42e72aa67063118", "committedDate": "2020-09-22T19:31:57Z", "message": "Default to jira BEAM-9547"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c04d93ab9143652d2cfdd07246c27a574592c48", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/2c04d93ab9143652d2cfdd07246c27a574592c48", "committedDate": "2020-09-22T19:36:45Z", "message": "pivot is NotImplementedError"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a00cf2967c92519be53d342b9688aec208ee126", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/8a00cf2967c92519be53d342b9688aec208ee126", "committedDate": "2020-09-22T19:37:26Z", "message": "remove mistaken change to frames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7a67057766894d99be37ee9e9db6dac9ac5d299", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/e7a67057766894d99be37ee9e9db6dac9ac5d299", "committedDate": "2020-09-16T23:29:30Z", "message": "Draft of NotImplementedErrors for DataFrame"}, "afterCommit": {"oid": "8a00cf2967c92519be53d342b9688aec208ee126", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/8a00cf2967c92519be53d342b9688aec208ee126", "committedDate": "2020-09-22T19:37:26Z", "message": "remove mistaken change to frames"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2776, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}