{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTM4NzI0", "number": 13088, "title": "[BEAM-11056] Fix warning message and rename old APIs (#13080)", "bodyText": "[BEAM-11056] Fix warning message and rename old APIs (#13080)\nCherry pick the Interactive Beam options API changes.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-13T16:27:09Z", "url": "https://github.com/apache/beam/pull/13088", "merged": true, "mergeCommit": {"oid": "378b6624ff9fa74e3c0b3e2fe45048e64bcb4a88"}, "closed": true, "closedAt": "2020-10-13T18:25:11Z", "author": {"login": "KevinGG"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSLH_EgH2gAyNTAyNTM4NzI0Ojk2N2E3OWQ0NDI3MjA4MTkxNWE0NjFlMDNhNjQ4NjRmZDM1YmVmNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSLO6bgFqTUwNzYyNTU2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "967a79d44272081915a461e03a64864fd35bef79", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/967a79d44272081915a461e03a64864fd35bef79", "committedDate": "2020-10-13T16:25:33Z", "message": "[BEAM-11056] Fix warning message and rename old APIs (#13080)\n\n[BEAM-11056] Fix warning message and rename old APIs (#13080)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjI1NTY4", "url": "https://github.com/apache/beam/pull/13088#pullrequestreview-507625568", "createdAt": "2020-10-13T16:31:43Z", "commit": {"oid": "967a79d44272081915a461e03a64864fd35bef79"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMTo0NFrOHgvhrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMjo1NFrOHgvkog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NTE1MQ==", "bodyText": "Recording?", "url": "https://github.com/apache/beam/pull/13088#discussion_r504095151", "createdAt": "2020-10-13T16:31:44Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -52,98 +53,117 @@\n class Options(interactive_options.InteractiveOptions):\n   \"\"\"Options that guide how Interactive Beam works.\"\"\"\n   @property\n-  def enable_capture_replay(self):\n-    \"\"\"Whether replayable source data capture should be replayed for multiple\n-    PCollection evaluations and pipeline runs as long as the data captured is\n+  def enable_recording_replay(self):\n+    \"\"\"Whether replayable source data recorded should be replayed for multiple\n+    PCollection evaluations and pipeline runs as long as the data recorded is\n     still valid.\"\"\"\n     return self.capture_control._enable_capture_replay\n \n-  @enable_capture_replay.setter\n-  def enable_capture_replay(self, value):\n-    \"\"\"Sets whether source data capture should be replayed. True - Enables\n-    capture of replayable source data so that following PCollection evaluations\n-    and pipeline runs always use the same data captured; False - Disables\n-    capture of replayable source data so that following PCollection evaluation\n-    and pipeline runs always use new data from sources.\"\"\"\n+  @enable_recording_replay.setter\n+  def enable_recording_replay(self, value):\n+    \"\"\"Sets whether source data recorded should be replayed. True - Enables\n+    recording of replayable source data so that following PCollection\n+    evaluations and pipeline runs always use the same data recorded;\n+    False - Disables recording of replayable source data so that following\n+    PCollection evaluation and pipeline runs always use new data from sources.\n+    \"\"\"\n     # This makes sure the log handler is configured correctly in case the\n     # options are configured in an early stage.\n     _ = ie.current_env()\n     if value:\n       _LOGGER.info(\n-          'Capture replay is enabled. When a PCollection is evaluated or the '\n-          'pipeline is executed, existing data captured from previous '\n+          'Record replay is enabled. When a PCollection is evaluated or the '", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967a79d44272081915a461e03a64864fd35bef79"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NTI4OA==", "bodyText": "Ditto", "url": "https://github.com/apache/beam/pull/13088#discussion_r504095288", "createdAt": "2020-10-13T16:31:57Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -52,98 +53,117 @@\n class Options(interactive_options.InteractiveOptions):\n   \"\"\"Options that guide how Interactive Beam works.\"\"\"\n   @property\n-  def enable_capture_replay(self):\n-    \"\"\"Whether replayable source data capture should be replayed for multiple\n-    PCollection evaluations and pipeline runs as long as the data captured is\n+  def enable_recording_replay(self):\n+    \"\"\"Whether replayable source data recorded should be replayed for multiple\n+    PCollection evaluations and pipeline runs as long as the data recorded is\n     still valid.\"\"\"\n     return self.capture_control._enable_capture_replay\n \n-  @enable_capture_replay.setter\n-  def enable_capture_replay(self, value):\n-    \"\"\"Sets whether source data capture should be replayed. True - Enables\n-    capture of replayable source data so that following PCollection evaluations\n-    and pipeline runs always use the same data captured; False - Disables\n-    capture of replayable source data so that following PCollection evaluation\n-    and pipeline runs always use new data from sources.\"\"\"\n+  @enable_recording_replay.setter\n+  def enable_recording_replay(self, value):\n+    \"\"\"Sets whether source data recorded should be replayed. True - Enables\n+    recording of replayable source data so that following PCollection\n+    evaluations and pipeline runs always use the same data recorded;\n+    False - Disables recording of replayable source data so that following\n+    PCollection evaluation and pipeline runs always use new data from sources.\n+    \"\"\"\n     # This makes sure the log handler is configured correctly in case the\n     # options are configured in an early stage.\n     _ = ie.current_env()\n     if value:\n       _LOGGER.info(\n-          'Capture replay is enabled. When a PCollection is evaluated or the '\n-          'pipeline is executed, existing data captured from previous '\n+          'Record replay is enabled. When a PCollection is evaluated or the '\n+          'pipeline is executed, existing data recorded from previous '\n           'computations will be replayed for consistent results. If no '\n-          'captured data is available, new data from capturable sources will '\n-          'be captured.')\n+          'recorded data is available, new data from recordable sources will '\n+          'be recorded.')\n     else:\n       _LOGGER.info(\n-          'Capture replay is disabled. The next time a PCollection is '\n+          'Record replay is disabled. The next time a PCollection is '", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967a79d44272081915a461e03a64864fd35bef79"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NTkwNg==", "bodyText": "I'd say this can be done after 2.25, so don't let this be a blocker.", "url": "https://github.com/apache/beam/pull/13088#discussion_r504095906", "createdAt": "2020-10-13T16:32:54Z", "author": {"login": "davidyan74"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -52,98 +53,117 @@\n class Options(interactive_options.InteractiveOptions):\n   \"\"\"Options that guide how Interactive Beam works.\"\"\"\n   @property\n-  def enable_capture_replay(self):\n-    \"\"\"Whether replayable source data capture should be replayed for multiple\n-    PCollection evaluations and pipeline runs as long as the data captured is\n+  def enable_recording_replay(self):\n+    \"\"\"Whether replayable source data recorded should be replayed for multiple\n+    PCollection evaluations and pipeline runs as long as the data recorded is\n     still valid.\"\"\"\n     return self.capture_control._enable_capture_replay\n \n-  @enable_capture_replay.setter\n-  def enable_capture_replay(self, value):\n-    \"\"\"Sets whether source data capture should be replayed. True - Enables\n-    capture of replayable source data so that following PCollection evaluations\n-    and pipeline runs always use the same data captured; False - Disables\n-    capture of replayable source data so that following PCollection evaluation\n-    and pipeline runs always use new data from sources.\"\"\"\n+  @enable_recording_replay.setter\n+  def enable_recording_replay(self, value):\n+    \"\"\"Sets whether source data recorded should be replayed. True - Enables\n+    recording of replayable source data so that following PCollection\n+    evaluations and pipeline runs always use the same data recorded;\n+    False - Disables recording of replayable source data so that following\n+    PCollection evaluation and pipeline runs always use new data from sources.\n+    \"\"\"\n     # This makes sure the log handler is configured correctly in case the\n     # options are configured in an early stage.\n     _ = ie.current_env()\n     if value:\n       _LOGGER.info(\n-          'Capture replay is enabled. When a PCollection is evaluated or the '\n-          'pipeline is executed, existing data captured from previous '\n+          'Record replay is enabled. When a PCollection is evaluated or the '", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NTE1MQ=="}, "originalCommit": {"oid": "967a79d44272081915a461e03a64864fd35bef79"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2001, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}