{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzkxNzkz", "number": 12459, "title": "[BEAM-9547] Simplify pandas implementation.", "bodyText": "Thank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-03T20:53:18Z", "url": "https://github.com/apache/beam/pull/12459", "merged": true, "mergeCommit": {"oid": "9d7f0c679eca677fac5625b6a77fd9dfacadc85d"}, "closed": true, "closedAt": "2020-08-05T18:31:08Z", "author": {"login": "robertwb"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7rj4-AFqTQ2MTA3NTYxOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc79gREABqjM2MjU0MDIyMDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDc1NjE4", "url": "https://github.com/apache/beam/pull/12459#pullrequestreview-461075618", "createdAt": "2020-08-04T18:45:19Z", "commit": {"oid": "fe97086cd4b45de1e2c5f40c590027bc5d643629"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0NToxOVrOG7s9xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToxMDo1MVrOG7tyaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NTg3OA==", "bodyText": "This seems generic and useful enough that I'm surprised it isn't in a dataframes library.", "url": "https://github.com/apache/beam/pull/12459#discussion_r465255878", "createdAt": "2020-08-04T18:45:19Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -226,6 +232,68 @@ def wrapper(self, *args, **kwargs):\n   return wrapper\n \n \n+def maybe_inplace(func):\n+  @functools.wraps(func)\n+  def wrapper(self, inplace=False, **kwargs):\n+    result = func(self, **kwargs)\n+    if inplace:\n+      self._expr = result._expr\n+    else:\n+      return result\n+\n+  return wrapper\n+\n+\n+def args_to_kwargs(base_type):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe97086cd4b45de1e2c5f40c590027bc5d643629"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NzE5OA==", "bodyText": "nit: this appears more than once in this file, might it be worth adding a getargspec helper function?", "url": "https://github.com/apache/beam/pull/12459#discussion_r465257198", "createdAt": "2020-08-04T18:47:45Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -147,7 +149,11 @@ def wrapper(*args, **kwargs):\n       else:\n         try:\n           # pylint: disable=deprecated-method\n-          ix = inspect.getargspec(func).args.index(key)\n+          if sys.version_info < (3, ):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe97086cd4b45de1e2c5f40c590027bc5d643629"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2ODY5OQ==", "bodyText": "This comment is a little confusing, I believe it is describing the contents of populate_defaults?\nAfter spending some time reading through this, it might be clearer if you broke this into a function that returned arg_to_default, and a second that returned populate_defaults.", "url": "https://github.com/apache/beam/pull/12459#discussion_r465268699", "createdAt": "2020-08-04T19:09:38Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -226,6 +232,68 @@ def wrapper(self, *args, **kwargs):\n   return wrapper\n \n \n+def maybe_inplace(func):\n+  @functools.wraps(func)\n+  def wrapper(self, inplace=False, **kwargs):\n+    result = func(self, **kwargs)\n+    if inplace:\n+      self._expr = result._expr\n+    else:\n+      return result\n+\n+  return wrapper\n+\n+\n+def args_to_kwargs(base_type):\n+  def wrap(func):\n+    if sys.version_info < (3, ):\n+      getargspec = inspect.getargspec\n+    else:\n+      getargspec = inspect.getfullargspec\n+\n+    # This is used to map all positional arguments to keyword arguments.\n+    base = getattr(base_type, func.__name__)\n+    while hasattr(base, '__wrapped__'):\n+      base = base.__wrapped__\n+    base_argspec = getargspec(base)\n+    arg_names = base_argspec.args\n+\n+    # These are used to populate any defaults in base for arguments in func.\n+    if base_argspec.defaults:\n+      arg_to_default = dict(\n+          zip(\n+              base_argspec.args[-len(base_argspec.defaults):],\n+              base_argspec.defaults))\n+    else:\n+      arg_to_default = {}\n+\n+    unwrapped_func = func\n+    while hasattr(unwrapped_func, '__wrapped__'):\n+      unwrapped_func = unwrapped_func.__wrapped__\n+    # args that do not have defaults in func, but do have defaults in base", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe97086cd4b45de1e2c5f40c590027bc5d643629"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTM1NQ==", "bodyText": "arg_to_default might be clearer as arg_to_base_default or base_defaults?", "url": "https://github.com/apache/beam/pull/12459#discussion_r465269355", "createdAt": "2020-08-04T19:10:51Z", "author": {"login": "apilloud"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -226,6 +232,68 @@ def wrapper(self, *args, **kwargs):\n   return wrapper\n \n \n+def maybe_inplace(func):\n+  @functools.wraps(func)\n+  def wrapper(self, inplace=False, **kwargs):\n+    result = func(self, **kwargs)\n+    if inplace:\n+      self._expr = result._expr\n+    else:\n+      return result\n+\n+  return wrapper\n+\n+\n+def args_to_kwargs(base_type):\n+  def wrap(func):\n+    if sys.version_info < (3, ):\n+      getargspec = inspect.getargspec\n+    else:\n+      getargspec = inspect.getfullargspec\n+\n+    # This is used to map all positional arguments to keyword arguments.\n+    base = getattr(base_type, func.__name__)\n+    while hasattr(base, '__wrapped__'):\n+      base = base.__wrapped__\n+    base_argspec = getargspec(base)\n+    arg_names = base_argspec.args\n+\n+    # These are used to populate any defaults in base for arguments in func.\n+    if base_argspec.defaults:\n+      arg_to_default = dict(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe97086cd4b45de1e2c5f40c590027bc5d643629"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe97086cd4b45de1e2c5f40c590027bc5d643629", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/fe97086cd4b45de1e2c5f40c590027bc5d643629", "committedDate": "2020-08-03T20:47:35Z", "message": "Use new infrastructure to simplify pandas implementation."}, "afterCommit": {"oid": "f67f263d9b9e2dd3a2cd53680c2d548c858dbf70", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/f67f263d9b9e2dd3a2cd53680c2d548c858dbf70", "committedDate": "2020-08-05T01:14:46Z", "message": "Use new infrastructure to simplify pandas implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f67f263d9b9e2dd3a2cd53680c2d548c858dbf70", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/f67f263d9b9e2dd3a2cd53680c2d548c858dbf70", "committedDate": "2020-08-05T01:14:46Z", "message": "Use new infrastructure to simplify pandas implementation."}, "afterCommit": {"oid": "8c240fce51f4da7401d722e71a804a3219efea79", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/8c240fce51f4da7401d722e71a804a3219efea79", "committedDate": "2020-08-05T07:47:04Z", "message": "Use new infrastructure to simplify pandas implementation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01c7ad165847ee08e6b9cb352ca06a3bf9a64942", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/01c7ad165847ee08e6b9cb352ca06a3bf9a64942", "committedDate": "2020-08-05T16:06:40Z", "message": "Simplify common patterns for pandas methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bd16168125588e6e972af1d4ceb9745f9dc0658", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/7bd16168125588e6e972af1d4ceb9745f9dc0658", "committedDate": "2020-08-05T16:06:41Z", "message": "Use new infrastructure to simplify pandas implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c240fce51f4da7401d722e71a804a3219efea79", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/8c240fce51f4da7401d722e71a804a3219efea79", "committedDate": "2020-08-05T07:47:04Z", "message": "Use new infrastructure to simplify pandas implementation."}, "afterCommit": {"oid": "7bd16168125588e6e972af1d4ceb9745f9dc0658", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/7bd16168125588e6e972af1d4ceb9745f9dc0658", "committedDate": "2020-08-05T16:06:41Z", "message": "Use new infrastructure to simplify pandas implementation."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3707, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}