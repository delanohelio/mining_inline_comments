{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNzg5NzMz", "number": 12107, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo0NzowNFrOEKXD1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTowNzoyMlrOEKXQRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjk5MDMxOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/utils.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo0NzowNFrOGrWoug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo0NzowNFrOGrWoug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExMjgyNg==", "bodyText": "The callable returns string, right?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              # type: (Callable[..., Any]) -> Callable[..., Any]\n          \n          \n            \n              # type: (Callable[..., Any]) -> Callable[..., str]", "url": "https://github.com/apache/beam/pull/12107#discussion_r448112826", "createdAt": "2020-07-01T04:47:04Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -204,3 +205,23 @@ def run_within_progress_indicator(*args, **kwargs):\n       return func(*args, **kwargs)\n \n   return run_within_progress_indicator\n+\n+\n+def as_json(func):\n+  # type: (Callable[..., Any]) -> Callable[..., Any]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bfa564050aa79580ae9b25b97afefc3e934acef"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzAyMjE1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/interactive/utils_test.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTowNzoyMlrOGrW7tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTowNzoyMlrOGrW7tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExNzY4NQ==", "bodyText": "nit: you could do something like json.loads(dummy(), SAMPLE_DATA) instead of depending on the ordering.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    dummy(), '{\"a\": [1, 2, 3], \"b\": 4, \"c\": \"5\", \"d\": {\"e\": \"f\"}}')\n          \n          \n            \n                    json.loads(dummy()), {\"a\": [1, 2, 3], \"b\": 4, \"c\": \"5\", \"d\": {\"e\": \"f\"}})", "url": "https://github.com/apache/beam/pull/12107#discussion_r448117685", "createdAt": "2020-07-01T05:07:22Z", "author": {"login": "pabloem"}, "path": "sdks/python/apache_beam/runners/interactive/utils_test.py", "diffHunk": "@@ -195,5 +195,25 @@ def progress_indicated_dummy():\n     mocked_javascript.assert_called_once()\n \n \n+@unittest.skipIf(\n+    not ie.current_env().is_interactive_ready,\n+    '[interactive] dependency is not installed.')\n+@unittest.skipIf(\n+    sys.version_info < (3, 6), 'The tests require at least Python 3.6 to work.')\n+class MessagingUtilTest(unittest.TestCase):\n+  def setUp(self):\n+    ie.new_env()\n+\n+  def test_as_json_decorator(self):\n+    @utils.as_json\n+    def dummy():\n+      return {'a': [1, 2, 3], 'b': 4, 'c': '5', 'd': {'e': 'f'}}\n+\n+    # As of Python 3.6, for the CPython implementation of Python,\n+    # dictionaries remember the order of items inserted.\n+    self.assertEqual(\n+        dummy(), '{\"a\": [1, 2, 3], \"b\": 4, \"c\": \"5\", \"d\": {\"e\": \"f\"}}')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bfa564050aa79580ae9b25b97afefc3e934acef"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3358, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}