{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDAzMTIz", "number": 11732, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOToxNDo0N1rOD-IPTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNzowNVrOD-Jppw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDczMjkyOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOToxNDo0N1rOGYCk0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzoyNToyN1rOGYLgYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2MTIwMw==", "bodyText": "Can you also change a leftover in the javadoc: An IO to read and write from/to Apache Cassandra ?", "url": "https://github.com/apache/beam/pull/11732#discussion_r427861203", "createdAt": "2020-05-20T09:14:47Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -106,19 +107,13 @@\n  *\n  * <h3>Cassandra Socket Options</h3>\n  *\n- * <p>The following example illustrates various options for tuning client socket:\n+ * <p>The following example illustrates setting timeouts for the Cassandra client:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwNzUyMA==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/11732#discussion_r428007520", "createdAt": "2020-05-20T13:25:27Z", "author": {"login": "nfisher"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -106,19 +107,13 @@\n  *\n  * <h3>Cassandra Socket Options</h3>\n  *\n- * <p>The following example illustrates various options for tuning client socket:\n+ * <p>The following example illustrates setting timeouts for the Cassandra client:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2MTIwMw=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDgxNjQyOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNjo0OVrOGYDaiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjozNjozMlrOGca3PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDk1Mw==", "bodyText": "you need a javadoc for both methods as they are both public (2 versions for backward compatibility as valueprovider was introduced lately)\n\n\nspecify that they are millis\n\n\nadd links to cassandra socketoptions setConnectTimeOut", "url": "https://github.com/apache/beam/pull/11732#discussion_r427874953", "createdAt": "2020-05-20T09:36:49Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwODA5Nw==", "bodyText": "Done first 2. Will do 3rd after work.", "url": "https://github.com/apache/beam/pull/11732#discussion_r428008097", "createdAt": "2020-05-20T13:26:07Z", "author": {"login": "nfisher"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDk1Mw=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MzQzNw==", "bodyText": "missing link. Also write the javadoc as in the other with methods with \"Specify ...\"", "url": "https://github.com/apache/beam/pull/11732#discussion_r432453437", "createdAt": "2020-05-29T12:36:32Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDk1Mw=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDgxNzIxOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNzowMFrOGYDbEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjozNzoxNVrOGca4mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NTA5MA==", "bodyText": "same as above", "url": "https://github.com/apache/beam/pull/11732#discussion_r427875090", "createdAt": "2020-05-20T09:37:00Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n+      return builder().setConnectTimeout(timeout).build();\n+    }\n+\n+    /** Cassandra client socket option to set the read timeout. */\n+    public Read<T> withReadTimeout(Integer timeout) {\n+      return withReadTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withReadTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1Mzc4NQ==", "bodyText": "missing link", "url": "https://github.com/apache/beam/pull/11732#discussion_r432453785", "createdAt": "2020-05-29T12:37:15Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n+      return builder().setConnectTimeout(timeout).build();\n+    }\n+\n+    /** Cassandra client socket option to set the read timeout. */\n+    public Read<T> withReadTimeout(Integer timeout) {\n+      return withReadTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withReadTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NTA5MA=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg0NDM2OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0NDowN1rOGYDsFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0MTowN1rOGcbAfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3OTQ0NQ==", "bodyText": "Add input values check (!= null && > 0) as in the other methods with the checkArgument call. As the value provider version method relies on this version, put the checkArgument here. Do not forget to put the validation in the other parameters methods", "url": "https://github.com/apache/beam/pull/11732#discussion_r427879445", "createdAt": "2020-05-20T09:44:07Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1NTgwNQ==", "bodyText": "Add two checkArgument as in the other with* methods one for null and one for >0. Also I wrote a error above: valueprovider version is the low level method, the other relies on it. So it is in the valueprovider version you need to put the checks.", "url": "https://github.com/apache/beam/pull/11732#discussion_r432455805", "createdAt": "2020-05-29T12:41:07Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3OTQ0NQ=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1NTMzOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDoyMFrOGYEyCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDoyMFrOGYEyCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzM1NQ==", "bodyText": "Add readTimeout cf glocal review comment", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897355", "createdAt": "2020-05-20T10:14:20Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -811,6 +840,9 @@ public T getCurrent() throws NoSuchElementException {\n \n     abstract MutationType mutationType();\n \n+    @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1NjkzOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDo1MFrOGYEy-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDozODoyMlrOGbh3Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzU5NA==", "bodyText": "Add withReadTimeout cf global review comment", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897594", "createdAt": "2020-05-20T10:14:50Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -948,6 +980,15 @@ public T getCurrent() throws NoSuchElementException {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n+    /** Cassandra client socket option for connect timeout. */\n+    public Write<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxOTU2Mg==", "bodyText": "Done line 1010", "url": "https://github.com/apache/beam/pull/11732#discussion_r431519562", "createdAt": "2020-05-28T00:38:22Z", "author": {"login": "nfisher"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -948,6 +980,15 @@ public T getCurrent() throws NoSuchElementException {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n+    /** Cassandra client socket option for connect timeout. */\n+    public Write<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzU5NA=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1ODE1OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNToxNFrOGYEzxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNToxNFrOGYEzxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Nzc5Ng==", "bodyText": "add read timeout", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897796", "createdAt": "2020-05-20T10:15:14Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -948,6 +980,15 @@ public T getCurrent() throws NoSuchElementException {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n+    /** Cassandra client socket option for connect timeout. */\n+    public Write<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n+      return builder().setConnectTimeout(timeout).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1OTEzOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNTozMFrOGYE0Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDozODozNlrOGbh3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Nzk0Mw==", "bodyText": "add read timeout", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897943", "createdAt": "2020-05-20T10:15:30Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1023,6 +1065,8 @@ private String getMutationTypeName() {\n \n       abstract Builder<T> setMutationType(MutationType mutationType);\n \n+      abstract Builder<T> setConnectTimeout(ValueProvider<Integer> timeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxOTYyNA==", "bodyText": "done", "url": "https://github.com/apache/beam/pull/11732#discussion_r431519624", "createdAt": "2020-05-28T00:38:36Z", "author": {"login": "nfisher"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1023,6 +1065,8 @@ private String getMutationTypeName() {\n \n       abstract Builder<T> setMutationType(MutationType mutationType);\n \n+      abstract Builder<T> setConnectTimeout(ValueProvider<Integer> timeout);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Nzk0Mw=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk2MzAzOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNjo0NFrOGYE24g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo1MzowMVrOGcbYag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODU5NA==", "bodyText": "no more null check needed if both timeouts are set as part of Read and Write and if you add the validation of inputs in the with* methods", "url": "https://github.com/apache/beam/pull/11732#discussion_r427898594", "createdAt": "2020-05-20T10:16:44Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1116,6 +1163,18 @@ private static Cluster getCluster(\n           new QueryOptions().setConsistencyLevel(ConsistencyLevel.valueOf(consistencyLevel.get())));\n     }\n \n+    SocketOptions socketOptions = new SocketOptions();\n+\n+    builder.withSocketOptions(socketOptions);\n+\n+    if (connectTimeout != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2MTkzMA==", "bodyText": "I was wrong: null tests are needed because there is no default value. If the user to not specify timeouts, then the valueProvider will be null.", "url": "https://github.com/apache/beam/pull/11732#discussion_r432461930", "createdAt": "2020-05-29T12:53:01Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1116,6 +1163,18 @@ private static Cluster getCluster(\n           new QueryOptions().setConsistencyLevel(ConsistencyLevel.valueOf(consistencyLevel.get())));\n     }\n \n+    SocketOptions socketOptions = new SocketOptions();\n+\n+    builder.withSocketOptions(socketOptions);\n+\n+    if (connectTimeout != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODU5NA=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk2MzY3OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNjo1NFrOGYE3Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNjo1NFrOGYE3Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODY5NQ==", "bodyText": "same as above", "url": "https://github.com/apache/beam/pull/11732#discussion_r427898695", "createdAt": "2020-05-20T10:16:54Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1116,6 +1163,18 @@ private static Cluster getCluster(\n           new QueryOptions().setConsistencyLevel(ConsistencyLevel.valueOf(consistencyLevel.get())));\n     }\n \n+    SocketOptions socketOptions = new SocketOptions();\n+\n+    builder.withSocketOptions(socketOptions);\n+\n+    if (connectTimeout != null) {\n+      socketOptions.setConnectTimeoutMillis(connectTimeout.get());\n+    }\n+\n+    if (readTimeout != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk2NDIzOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNzowNVrOGYE3tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDozNjoxN1rOGbh1Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODgwNA==", "bodyText": "pass the read timeout", "url": "https://github.com/apache/beam/pull/11732#discussion_r427898804", "createdAt": "2020-05-20T10:17:05Z", "author": {"login": "echauchot"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1142,7 +1201,9 @@ private static Cluster getCluster(\n               spec.username(),\n               spec.password(),\n               spec.localDc(),\n-              spec.consistencyLevel());\n+              spec.consistencyLevel(),\n+              spec.connectTimeout(),\n+              null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxOTAxOQ==", "bodyText": "done", "url": "https://github.com/apache/beam/pull/11732#discussion_r431519019", "createdAt": "2020-05-28T00:36:17Z", "author": {"login": "nfisher"}, "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1142,7 +1201,9 @@ private static Cluster getCluster(\n               spec.username(),\n               spec.password(),\n               spec.localDc(),\n-              spec.consistencyLevel());\n+              spec.consistencyLevel(),\n+              spec.connectTimeout(),\n+              null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODgwNA=="}, "originalCommit": {"oid": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848"}, "originalPosition": 192}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3784, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}