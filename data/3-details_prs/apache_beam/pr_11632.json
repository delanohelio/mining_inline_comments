{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODY4OTk2", "number": 11632, "title": "[BEAM-7746] Fix type errors and enable checks for apache_beam.dataframe.*", "bodyText": "Thank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-07T19:11:27Z", "url": "https://github.com/apache/beam/pull/11632", "merged": true, "mergeCommit": {"oid": "d87fc525e820f78c4546f3f0f5bd5218e3ce323f"}, "closed": true, "closedAt": "2020-05-29T19:24:49Z", "author": {"login": "robertwb"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfCLqagH2gAyNDE0ODY4OTk2OjYxMGUyODk4OGNkNmNhYTY2YWI0N2Y1MGQwNTdkMDI4OTg4ZTM5Y2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl2GudAH2gAyNDE0ODY4OTk2OmQ1MWRjYTM1OGJmYjhkOGY3ODJhOWRjODYzZTAyNWRjNjEwYTRkMWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "610e28988cd6caa66ab47f50d057d028988e39cf", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/610e28988cd6caa66ab47f50d057d028988e39cf", "committedDate": "2020-05-07T19:10:17Z", "message": "[BEAM-7746] Fix type errors and enable checks for apache_beam.dataflow."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODMxMDM0", "url": "https://github.com/apache/beam/pull/11632#pullrequestreview-407831034", "createdAt": "2020-05-07T20:57:33Z", "commit": {"oid": "610e28988cd6caa66ab47f50d057d028988e39cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDo1NzozM1rOGSP-zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDo1NzozM1rOGSP-zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc4OTM5MA==", "bodyText": "Scoping these imports is not a bad idea since it keeps the module namespace cleaner, but there are a couple of issues with this:\n\nonce we get to python 3.x, and move from type comments to annotations, this will fail, as we'll be referencing non-existent objects in our annotations.\nit's not consistent with how we've done this throughout the rest of the code", "url": "https://github.com/apache/beam/pull/11632#discussion_r421789390", "createdAt": "2020-05-07T20:57:33Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/dataframe/convert.py", "diffHunk": "@@ -16,13 +16,23 @@\n \n from __future__ import absolute_import\n \n+import typing\n+\n import inspect\n \n from apache_beam import pvalue\n from apache_beam.dataframe import expressions\n from apache_beam.dataframe import frame_base\n from apache_beam.dataframe import transforms\n \n+if typing.TYPE_CHECKING:\n+  # pylint: disable=ungrouped-imports\n+  from typing import Any\n+  from typing import Dict\n+  from typing import Tuple\n+  from typing import Union", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "610e28988cd6caa66ab47f50d057d028988e39cf"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODM5OTIz", "url": "https://github.com/apache/beam/pull/11632#pullrequestreview-407839923", "createdAt": "2020-05-07T21:11:02Z", "commit": {"oid": "610e28988cd6caa66ab47f50d057d028988e39cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMToxMTowMlrOGSQbKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMToxMTowMlrOGSQbKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc5NjY0OA==", "bodyText": "do we want to cover the List[T] case for valueish?\nAlternately, do we wan to make this more generic:\ndef _flatten(\n    valueish,  # type: Union[T, Iterable[T], Mapping[Any, T]]\n    root=(),  # type: Tuple[Any, ...]\n    ):\n  # type: (...) -> Dict[Tuple[Any, ...], T]\n  \"\"\"Given a nested structure of dicts, tuples, and lists, return a flat\n  dictionary where the values are the leafs and the keys are the \"paths\" to\n  these leaves.\n\n  For example `{a: x, b: (y, z)}` becomes `{(a,): x, (b, 0): y, (b, 1): c}`.\n  \"\"\"\n  if isinstance(valueish, typing.Mapping):\n    return _dict_union(_flatten(v, root + (k, )) for k, v in valueish.items())\n  elif isinstance(valueish, typing.Iterable):\n    return _dict_union(\n        _flatten(v, root + (ix, )) for ix, v in enumerate(valueish))\n  else:\n    return {root: valueish}\nAnother thought, is it valid / worthwhile to create a relationship between valueish, root, and the result key?:\ndef _flatten(\n    valueish,  # type: Union[T, Iterable[T], Mapping[U, T]]\n    root=(),  # type: Tuple[U, ...]\n    ):\n  # type: (...) -> Dict[Tuple[U, ...], T]", "url": "https://github.com/apache/beam/pull/11632#discussion_r421796648", "createdAt": "2020-05-07T21:11:02Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/dataframe/transforms.py", "diffHunk": "@@ -248,7 +261,12 @@ def _dict_union(dicts):\n   return result\n \n \n-def _flatten(valueish, root=()):\n+def _flatten(\n+    valueish,  # type: Union[T, Tuple[T, ...], Dict[Any, T]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "610e28988cd6caa66ab47f50d057d028988e39cf"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76339b7a45aa67a61c4be8582db4a39ff0c46ffb", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/76339b7a45aa67a61c4be8582db4a39ff0c46ffb", "committedDate": "2020-05-08T01:01:07Z", "message": "fixup: refactor imporgs, generalize typing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9a6ede93da12058f0d15a25a1c85c0ad37863fd", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/d9a6ede93da12058f0d15a25a1c85c0ad37863fd", "committedDate": "2020-05-08T01:02:10Z", "message": "use dict, not mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5038d09df4b43a9e3df8d3d7bb213c1f8408b1f7", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/5038d09df4b43a9e3df8d3d7bb213c1f8408b1f7", "committedDate": "2020-05-08T16:12:39Z", "message": "restore guarded imports to make lint happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96528748f8537e18fb371f94d20aea34f59cdd78", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/96528748f8537e18fb371f94d20aea34f59cdd78", "committedDate": "2020-05-26T21:20:40Z", "message": "fix types the right way"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21c41432afb6632e60a46a1ca5c7932cd48c8ec8", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/21c41432afb6632e60a46a1ca5c7932cd48c8ec8", "committedDate": "2020-05-27T00:09:28Z", "message": "fix convert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ce65b6d079f807a4bb5858b2fd0c98349e69b2b", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/5ce65b6d079f807a4bb5858b2fd0c98349e69b2b", "committedDate": "2020-05-27T04:17:43Z", "message": "re-guard PCollection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "289cd34628c6e1b3ddbe164335ff52485b27e8d7", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/289cd34628c6e1b3ddbe164335ff52485b27e8d7", "committedDate": "2020-05-27T15:52:59Z", "message": "also guard pandas import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MzgzODY4", "url": "https://github.com/apache/beam/pull/11632#pullrequestreview-419383868", "createdAt": "2020-05-27T16:07:42Z", "commit": {"oid": "289cd34628c6e1b3ddbe164335ff52485b27e8d7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNzo0MlrOGbSRmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowODoxM1rOGbSTOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDE1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            from typing import Any\n          \n          \n            \n            from typing import TYPE_CHECKING\n          \n          \n            \n            from typing import Any", "url": "https://github.com/apache/beam/pull/11632#discussion_r431264152", "createdAt": "2020-05-27T16:07:42Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/dataframe/convert.py", "diffHunk": "@@ -17,12 +17,20 @@\n from __future__ import absolute_import\n \n import inspect\n+from typing import Any", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "289cd34628c6e1b3ddbe164335ff52485b27e8d7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDU2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            if typing.TYPE_CHECKING:\n          \n          \n            \n            if TYPE_CHECKING:", "url": "https://github.com/apache/beam/pull/11632#discussion_r431264568", "createdAt": "2020-05-27T16:08:13Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/dataframe/convert.py", "diffHunk": "@@ -17,12 +17,20 @@\n from __future__ import absolute_import\n \n import inspect\n+from typing import Any\n+from typing import Dict\n+from typing import Tuple\n+from typing import Union\n \n from apache_beam import pvalue\n from apache_beam.dataframe import expressions\n from apache_beam.dataframe import frame_base\n from apache_beam.dataframe import transforms\n \n+if typing.TYPE_CHECKING:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "289cd34628c6e1b3ddbe164335ff52485b27e8d7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Mzg3NDgy", "url": "https://github.com/apache/beam/pull/11632#pullrequestreview-419387482", "createdAt": "2020-05-27T16:11:42Z", "commit": {"oid": "289cd34628c6e1b3ddbe164335ff52485b27e8d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMTo0MlrOGbScjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMTo0MlrOGbScjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2Njk1OQ==", "bodyText": "The prevailing style for TYPE_CHECKING is to import it as from typing import TYPE_CHECKING.  I think we should stay consistent.  If we want to change that, it's fine by me, but we can do that in another PR.", "url": "https://github.com/apache/beam/pull/11632#discussion_r431266959", "createdAt": "2020-05-27T16:11:42Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/dataframe/transforms.py", "diffHunk": "@@ -16,13 +16,28 @@\n \n from __future__ import absolute_import\n \n+import typing\n+from typing import Any\n+from typing import Dict\n+from typing import List\n+from typing import Mapping\n+from typing import Tuple\n+from typing import TypeVar\n+from typing import Union\n+\n import pandas as pd\n \n import apache_beam as beam\n from apache_beam import transforms\n from apache_beam.dataframe import expressions\n from apache_beam.dataframe import frames  # pylint: disable=unused-import\n \n+if typing.TYPE_CHECKING:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "289cd34628c6e1b3ddbe164335ff52485b27e8d7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d51dca358bfb8d8f782a9dc863e025dc610a4d1e", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/d51dca358bfb8d8f782a9dc863e025dc610a4d1e", "committedDate": "2020-05-28T23:03:30Z", "message": "one last import fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4886, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}