{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzU3NDI5", "number": 10735, "title": "[BEAM-8280][BEAM-8629] Make IOTypeHints immutable", "bodyText": "Also adds an origin field that hopefully aids in debugging type check\nerrors.\nThis may break uses of @apache_beam.decorators.with_{input,output}_types(...) on builtins and Cython functions. For Cython, a possible solution is to use # cython: binding=True.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-31T00:40:02Z", "url": "https://github.com/apache/beam/pull/10735", "merged": true, "mergeCommit": {"oid": "76fcf15e3e1d06c8f7f929ba434d62505d592d9c"}, "closed": true, "closedAt": "2020-02-03T22:43:48Z", "author": {"login": "udim"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_kJ3bgH2gAyMzY5MzU3NDI5OjkxN2JmYjI2M2FhNTdhMmI5NGYwODkxM2RlNWNkMzgzMDU4ZmU2MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAyZlkgH2gAyMzY5MzU3NDI5OmYzNjYwOWZkZTY5NmU1MGIzNDE4MjdjODY2NTBjM2U2OWI0YzY2NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "917bfb263aa57a2b94f08913de5cd383058fe618", "author": {"user": {"login": "udim", "name": "Udi Meiri"}}, "url": "https://github.com/apache/beam/commit/917bfb263aa57a2b94f08913de5cd383058fe618", "committedDate": "2020-01-31T00:39:31Z", "message": "[BEAM-8280][BEAM-8629] Make IOTypeHints immutable\n\nAlso adds an `origin` field that hopefully aids in debugging type check\nerrors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06394dccb690dc2c3a66d0dda5753f64400d1d9b", "author": {"user": {"login": "udim", "name": "Udi Meiri"}}, "url": "https://github.com/apache/beam/commit/06394dccb690dc2c3a66d0dda5753f64400d1d9b", "committedDate": "2020-01-31T17:51:44Z", "message": "Fix lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7", "author": {"user": {"login": "udim", "name": "Udi Meiri"}}, "url": "https://github.com/apache/beam/commit/1590b0d9b1992644bff105bd889fe1d954c26ce7", "committedDate": "2020-01-31T18:23:10Z", "message": "Lint fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzUyODQy", "url": "https://github.com/apache/beam/pull/10735#pullrequestreview-351752842", "createdAt": "2020-01-31T20:16:35Z", "commit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoxNjozNlrOFkW05A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoxNjozNlrOFkW05A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2NzA0NA==", "bodyText": "Type comment should go after the function.  No need for ... unless you are skipping the definition of an argument (the type of self is implicit).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              def strip_iterable(self):  # type: (...) -> IOTypeHints\n          \n          \n            \n              def strip_iterable(self):\n          \n          \n            \n                # type: () -> IOTypeHints", "url": "https://github.com/apache/beam/pull/10735#discussion_r373667044", "createdAt": "2020-01-31T20:16:36Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/typehints/decorators.py", "diffHunk": "@@ -305,7 +326,7 @@ def has_simple_output_type(self):\n     return (self.output_types and len(self.output_types[0]) == 1 and\n             not self.output_types[1])\n \n-  def strip_iterable(self):\n+  def strip_iterable(self):  # type: (...) -> IOTypeHints", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODE1NTIy", "url": "https://github.com/apache/beam/pull/10735#pullrequestreview-351815522", "createdAt": "2020-01-31T22:31:45Z", "commit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjozMTo0NVrOFkZuLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjozMTo0NVrOFkZuLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxNDQ3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              def with_output_types(self, *args, **kwargs):  # type: (...) -> IOTypeHints\n          \n          \n            \n              def with_output_types(self, *args, **kwargs):\n          \n          \n            \n                # type: (...) -> IOTypeHints", "url": "https://github.com/apache/beam/pull/10735#discussion_r373714477", "createdAt": "2020-01-31T22:31:45Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/decorators.py", "diffHunk": "@@ -283,16 +301,19 @@ def from_callable(fn):\n       output_args.append(typehints.Any)\n \n     return IOTypeHints(input_types=(tuple(input_args), input_kwargs),\n-                       output_types=(tuple(output_args), {}))\n+                       output_types=(tuple(output_args), {}),\n+                       origin=cls._make_traceback(None))\n \n-  def set_input_types(self, *args, **kwargs):\n-    self.input_types = args, kwargs\n+  def with_input_types(self, *args, **kwargs):  # type: (...) -> IOTypeHints\n+    return self._replace(input_types=(args, kwargs),\n+                         origin=self._make_traceback(self))\n \n-  def set_output_types(self, *args, **kwargs):\n-    self.output_types = args, kwargs\n+  def with_output_types(self, *args, **kwargs):  # type: (...) -> IOTypeHints", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODE1NjQ0", "url": "https://github.com/apache/beam/pull/10735#pullrequestreview-351815644", "createdAt": "2020-01-31T22:32:05Z", "commit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjozMjowNlrOFkZumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjozMjowNlrOFkZumA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxNDU4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              def with_input_types(self, *args, **kwargs):  # type: (...) -> IOTypeHints\n          \n          \n            \n              def with_input_types(self, *args, **kwargs):\n          \n          \n            \n                # type: (...) -> IOTypeHints", "url": "https://github.com/apache/beam/pull/10735#discussion_r373714584", "createdAt": "2020-01-31T22:32:06Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/decorators.py", "diffHunk": "@@ -283,16 +301,19 @@ def from_callable(fn):\n       output_args.append(typehints.Any)\n \n     return IOTypeHints(input_types=(tuple(input_args), input_kwargs),\n-                       output_types=(tuple(output_args), {}))\n+                       output_types=(tuple(output_args), {}),\n+                       origin=cls._make_traceback(None))\n \n-  def set_input_types(self, *args, **kwargs):\n-    self.input_types = args, kwargs\n+  def with_input_types(self, *args, **kwargs):  # type: (...) -> IOTypeHints", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1590b0d9b1992644bff105bd889fe1d954c26ce7"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea11604369f827b9babf424e505c5ec8c4b7941", "author": {"user": {"login": "udim", "name": "Udi Meiri"}}, "url": "https://github.com/apache/beam/commit/cea11604369f827b9babf424e505c5ec8c4b7941", "committedDate": "2020-01-31T22:32:35Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Chad Dombrova <chadrik@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDYwOTYz", "url": "https://github.com/apache/beam/pull/10735#pullrequestreview-352460963", "createdAt": "2020-02-03T18:19:51Z", "commit": {"oid": "cea11604369f827b9babf424e505c5ec8c4b7941"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODoxOTo1MVrOFk7E8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODoxOTo1MVrOFk7E8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2MDk3Nw==", "bodyText": "My guess is that this is going to trip up mypy, but we can defer that to a future mypy PR if you'd like.  This is the pattern that I use for these cases:\n_IOTypeHints = NamedTuple('_IOTypeHints', [\n    ('input_types', Optional[Tuple[Tuple[Any, ...], Dict[str, Any]]]),\n    ('output_types', Optional[Tuple[Tuple[Any, ...], Dict[str, Any]]]),\n    ('origin', List[str])\n])\n\nclass IOTypeHints(_IOTypeHints):", "url": "https://github.com/apache/beam/pull/10735#discussion_r374260977", "createdAt": "2020-02-03T18:19:51Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/typehints/decorators.py", "diffHunk": "@@ -217,7 +220,10 @@ def get_signature(func):\n   return signature\n \n \n-class IOTypeHints(object):\n+class IOTypeHints(NamedTuple('IOTypeHints', [\n+    ('input_types', Optional[Tuple[Tuple[Any, ...], Dict[str, Any]]]),\n+    ('output_types', Optional[Tuple[Tuple[Any, ...], Dict[str, Any]]]),\n+    ('origin', List[str])])):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cea11604369f827b9babf424e505c5ec8c4b7941"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDYyMjc1", "url": "https://github.com/apache/beam/pull/10735#pullrequestreview-352462275", "createdAt": "2020-02-03T18:21:57Z", "commit": {"oid": "cea11604369f827b9babf424e505c5ec8c4b7941"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODoyMTo1N1rOFk7JAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODoyMTo1N1rOFk7JAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2MjAxNg==", "bodyText": "would be nice to add a type annotation to this:\n  def empty(cls):\n    # type: () -> IOTypeHints\n    return IOTypeHints(None, None, [])", "url": "https://github.com/apache/beam/pull/10735#discussion_r374262016", "createdAt": "2020-02-03T18:21:57Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/typehints/decorators.py", "diffHunk": "@@ -228,18 +234,30 @@ class IOTypeHints(object):\n       May be None. The list and dict correspond to args and kwargs.\n     output_types: (tuple, dict) List of typing types, and an optional dictionary\n       (unused). Only the first element of the list is used. May be None.\n+    origin: (List[str]) Stack of tracebacks of method calls used to create this\n+      instance.\n   \"\"\"\n-  __slots__ = ('input_types', 'output_types')\n \n-  def __init__(self,\n-               input_types=None,  # type: Optional[Tuple[Tuple[Any, ...], Dict[str, Any]]]\n-               output_types=None  # type: Optional[Tuple[Tuple[Any, ...], Dict[str, Any]]]\n-              ):\n-    self.input_types = input_types\n-    self.output_types = output_types\n+  traceback_limit = 5\n \n-  @staticmethod\n-  def from_callable(fn):\n+  @classmethod\n+  def _make_traceback(cls, base):  # type: (Optional[IOTypeHints]) -> List[str]\n+    # Omit this method and the IOTypeHints method that called it.\n+    num_frames_skip = 2\n+    tb = traceback.format_stack(limit=cls.traceback_limit + num_frames_skip)\n+    tb_lines = 'TH>' + ''.join(tb[:-num_frames_skip]).replace('\\n', '\\nTH>')\n+\n+    res = [tb_lines + '\\nbased on: ' + str(base)]\n+    if base is not None:\n+      res += base.origin\n+    return res\n+\n+  @classmethod\n+  def empty(cls):\n+    return IOTypeHints(None, None, [])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cea11604369f827b9babf424e505c5ec8c4b7941"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f36609fde696e50b341827c86650c3e69b4c6670", "author": {"user": {"login": "udim", "name": "Udi Meiri"}}, "url": "https://github.com/apache/beam/commit/f36609fde696e50b341827c86650c3e69b4c6670", "committedDate": "2020-02-03T19:49:17Z", "message": "Type hint and mypy fixes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3319, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}