{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5ODc1MDgz", "number": 12883, "title": "[BEAM-7746] Add more typing to metrics", "bodyText": "Thank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-20T08:36:57Z", "url": "https://github.com/apache/beam/pull/12883", "merged": true, "mergeCommit": {"oid": "57fe546521c3f3ada63c63b9064207ed2a4d7a4b"}, "closed": true, "closedAt": "2020-10-02T16:22:44Z", "author": {"login": "chadrik"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKyax_gFqTQ5MjIxMDI0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOdKT2gBqjM4MzIyMDA3MDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjEwMjQz", "url": "https://github.com/apache/beam/pull/12883#pullrequestreview-492210243", "createdAt": "2020-09-20T17:40:58Z", "commit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNzo0MDo1OVrOHU74Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNzo0MDo1OVrOHU74Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNDYzOA==", "bodyText": "can't override a method", "url": "https://github.com/apache/beam/pull/12883#discussion_r491714638", "createdAt": "2020-09-20T17:40:59Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/metrics/metric.py", "diffHunk": "@@ -101,23 +121,26 @@ def gauge(namespace, name):\n   class DelegatingCounter(Counter):\n     \"\"\"Metrics Counter that Delegates functionality to MetricsEnvironment.\"\"\"\n     def __init__(self, metric_name):\n+      # type: (MetricName) -> None\n       super(Metrics.DelegatingCounter, self).__init__()\n       self.metric_name = metric_name\n-      self.inc = MetricUpdater(cells.CounterCell, metric_name, default=1)\n+      self.inc = MetricUpdater(cells.CounterCell, metric_name, default=1)  # type: ignore[assignment]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjEwMzIz", "url": "https://github.com/apache/beam/pull/12883#pullrequestreview-492210323", "createdAt": "2020-09-20T17:42:11Z", "commit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNzo0MjoxMlrOHU74zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNzo0MjoxMlrOHU74zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNDc2NA==", "bodyText": "there seems to be an assumption that this attribute exists.  should we give this class an __init__ that takes a metric_name argument?", "url": "https://github.com/apache/beam/pull/12883#discussion_r491714764", "createdAt": "2020-09-20T17:42:12Z", "author": {"login": "chadrik"}, "path": "sdks/python/apache_beam/metrics/metricbase.py", "diffHunk": "@@ -78,7 +80,7 @@ def __hash__(self):\n \n class Metric(object):\n   \"\"\"Base interface of a metric object.\"\"\"\n-  pass\n+  metric_name = None  # type: MetricName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NTgzNzAw", "url": "https://github.com/apache/beam/pull/12883#pullrequestreview-496583700", "createdAt": "2020-09-25T16:45:11Z", "commit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjo0NToxMVrOHYLFbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowNDo1N1rOHYLuyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwOTQ4NA==", "bodyText": "Is it not possible to override the behaviour by assigning self.inc to something else in the subclass?\nNot saying I am a fan of this pattern or anything. But I think its still possible to override it that way\n(Though I don't think it should be addressed in this PR)", "url": "https://github.com/apache/beam/pull/12883#discussion_r495109484", "createdAt": "2020-09-25T16:45:11Z", "author": {"login": "ajamato"}, "path": "sdks/python/apache_beam/metrics/metric.py", "diffHunk": "@@ -101,23 +121,26 @@ def gauge(namespace, name):\n   class DelegatingCounter(Counter):\n     \"\"\"Metrics Counter that Delegates functionality to MetricsEnvironment.\"\"\"\n     def __init__(self, metric_name):\n+      # type: (MetricName) -> None\n       super(Metrics.DelegatingCounter, self).__init__()\n       self.metric_name = metric_name\n-      self.inc = MetricUpdater(cells.CounterCell, metric_name, default=1)\n+      self.inc = MetricUpdater(cells.CounterCell, metric_name, default=1)  # type: ignore[assignment]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNDYzOA=="}, "originalCommit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExMDM0Nw==", "bodyText": "I don't really undersand the reason for the conditional import. Whether or not TYPE_CHECKING is enabled, this file still depends on MetricName", "url": "https://github.com/apache/beam/pull/12883#discussion_r495110347", "createdAt": "2020-09-25T16:46:44Z", "author": {"login": "ajamato"}, "path": "sdks/python/apache_beam/metrics/cells.py", "diffHunk": "@@ -29,8 +29,12 @@\n import threading\n import time\n from builtins import object\n+from typing import TYPE_CHECKING\n from typing import Optional\n \n+if TYPE_CHECKING:\n+  from apache_beam.metrics.metricbase import MetricName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMDA3NQ==", "bodyText": "Its not due to multiple inheritance, its just self.metric_name is simply not set in the base Metric class, but only in the DelegatingCounter, DelegatingDistribution and DelegatingGauge class. (Which have an init which takes a metric_name and assigns it to self). The rest of the code in the repo is assuming self.metric_name is set, as they only deal with the subclasses.\nI recommend adding init with a metric_name parameter to Metric and its subclasses (Counter, Distribution and Gauge). This already exists on DelegatingX classes, but could be done in the base Metric init instead.\nAlso,\nIf it were up to me we would remove Counter, Distribution and Gauge classes and just have the DelegatingCounter DelegatingDistribution and DelegatingGauge classes.\nThough, I am unsure if some external implementation to the beam repo uses those classes (Counter, Distribution and Gauge).", "url": "https://github.com/apache/beam/pull/12883#discussion_r495120075", "createdAt": "2020-09-25T17:04:57Z", "author": {"login": "ajamato"}, "path": "sdks/python/apache_beam/metrics/metricbase.py", "diffHunk": "@@ -78,7 +80,7 @@ def __hash__(self):\n \n class Metric(object):\n   \"\"\"Base interface of a metric object.\"\"\"\n-  pass\n+  metric_name = None  # type: MetricName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNDc2NA=="}, "originalCommit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTIwNzUy", "url": "https://github.com/apache/beam/pull/12883#pullrequestreview-496920752", "createdAt": "2020-09-26T00:19:16Z", "commit": {"oid": "078cb50783b4b2b90ef02f91e9c2e3bd7b103b62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzk1NDYw", "url": "https://github.com/apache/beam/pull/12883#pullrequestreview-500795460", "createdAt": "2020-10-02T00:13:23Z", "commit": {"oid": "513693bd3c7ce6339c2b3ba0086a768e7aa7caef"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMDoxMzoyM1rOHbeSyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMDoxMzoyM1rOHbeSyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU2OTkyOA==", "bodyText": "Yes, please go ahead and ignore this error. (Note also that this code is structured in this way for performance reasons; previously we had pipelines where the bulk of the CPU was spent in generic counter update code, whereas here MetricUpdater is as fast as possible for incrementing an int).", "url": "https://github.com/apache/beam/pull/12883#discussion_r498569928", "createdAt": "2020-10-02T00:13:23Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/metrics/metric.py", "diffHunk": "@@ -101,23 +121,26 @@ def gauge(namespace, name):\n   class DelegatingCounter(Counter):\n     \"\"\"Metrics Counter that Delegates functionality to MetricsEnvironment.\"\"\"\n     def __init__(self, metric_name):\n+      # type: (MetricName) -> None\n       super(Metrics.DelegatingCounter, self).__init__()\n       self.metric_name = metric_name\n-      self.inc = MetricUpdater(cells.CounterCell, metric_name, default=1)\n+      self.inc = MetricUpdater(cells.CounterCell, metric_name, default=1)  # type: ignore[assignment]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNDYzOA=="}, "originalCommit": {"oid": "a7ca8527b4a19e05ac5fde7cdd2a2d1a74c85f17"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aebad5c8b926eed450a7f6dc4a1bcb0d4cc68e22", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/aebad5c8b926eed450a7f6dc4a1bcb0d4cc68e22", "committedDate": "2020-10-02T03:10:30Z", "message": "[BEAM-7746] Add more typing to metrics"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "513693bd3c7ce6339c2b3ba0086a768e7aa7caef", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/513693bd3c7ce6339c2b3ba0086a768e7aa7caef", "committedDate": "2020-09-26T00:34:12Z", "message": "lint fix"}, "afterCommit": {"oid": "aebad5c8b926eed450a7f6dc4a1bcb0d4cc68e22", "author": {"user": {"login": "chadrik", "name": "Chad Dombrova"}}, "url": "https://github.com/apache/beam/commit/aebad5c8b926eed450a7f6dc4a1bcb0d4cc68e22", "committedDate": "2020-10-02T03:10:30Z", "message": "[BEAM-7746] Add more typing to metrics"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2410, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}