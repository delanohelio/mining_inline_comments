{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjIwODQ3", "number": 12542, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxMzoyMFrOEYEnMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxNjo1NlrOEYEvpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjc2ODUxOnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxMzoyMFrOHANbDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTozMDo0NlrOHBtuOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4MTk2NQ==", "bodyText": "I think we should agree on the common name of this param. In combine I put jobType (mainly because Java test has jobType), but there is a possibility to change it since combine isn't merged yet.", "url": "https://github.com/apache/beam/pull/12542#discussion_r469981965", "createdAt": "2020-08-13T14:13:20Z", "author": {"login": "kkucharc"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -25,7 +25,7 @@ import InfluxDBCredentialsHelper\n \n def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n \n-def loadTestConfigurations = { datasetName ->\n+def loadTestConfigurations = { mode, datasetName ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1OTczOA==", "bodyText": "After an offline discussion, we decided to stay with mode in this context.", "url": "https://github.com/apache/beam/pull/12542#discussion_r471559738", "createdAt": "2020-08-17T15:30:46Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -25,7 +25,7 @@ import InfluxDBCredentialsHelper\n \n def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n \n-def loadTestConfigurations = { datasetName ->\n+def loadTestConfigurations = { mode, datasetName ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4MTk2NQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjc3NTM1OnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxNDoxMFrOHANfWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODozOToxMVrOHCJa2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4MzA2NA==", "bodyText": "Now you can also ass now as ${now} :D", "url": "https://github.com/apache/beam/pull/12542#discussion_r469983064", "createdAt": "2020-08-13T14:14:10Z", "author": {"login": "kkucharc"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -34,12 +34,12 @@ def loadTestConfigurations = { datasetName ->\n       pipelineOptions: [\n         project              : 'apache-beam-testing',\n         region               : 'us-central1',\n-        job_name             : 'load-tests-python-dataflow-batch-cogbk-1-' + now,\n+        job_name             : \"load-tests-python-dataflow-${mode}-cogbk-1-\" + now,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAxMzUzMA==", "bodyText": "Done \ud83d\udc4c", "url": "https://github.com/apache/beam/pull/12542#discussion_r472013530", "createdAt": "2020-08-18T08:39:11Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -34,12 +34,12 @@ def loadTestConfigurations = { datasetName ->\n       pipelineOptions: [\n         project              : 'apache-beam-testing',\n         region               : 'us-central1',\n-        job_name             : 'load-tests-python-dataflow-batch-cogbk-1-' + now,\n+        job_name             : \"load-tests-python-dataflow-${mode}-cogbk-1-\" + now,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4MzA2NA=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjc5MDEyOnYy", "diffSide": "RIGHT", "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxNjo1NlrOHANobQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDo0OToyN1rOHEFN1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ==", "bodyText": "Why this type of machine?", "url": "https://github.com/apache/beam/pull/12542#discussion_r469985389", "createdAt": "2020-08-13T14:16:56Z", "author": {"login": "kkucharc"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NzQwNw==", "bodyText": "My pipelines kept crushing because of OutOfMemory exceptions. So I followed the advice given in this article: https://cloud.google.com/community/tutorials/dataflow-debug-oom-conditions\nOther solution was to, according to the article, use fewer number of threads per worker. But I couldn't have found a pipeline option responsible for that in Python SDK (it exists in Java SDK, though).", "url": "https://github.com/apache/beam/pull/12542#discussion_r471557407", "createdAt": "2020-08-17T15:27:20Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4MzUzOA==", "bodyText": "I see. Maybe it's worth to create an issue in jira with this bug? I am not sure it should be infra issue or maybe python if we need this option. How is it called in Java SDK?", "url": "https://github.com/apache/beam/pull/12542#discussion_r473983538", "createdAt": "2020-08-20T13:39:01Z", "author": {"login": "kkucharc"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NTQ2Mg==", "bodyText": "I wonder only what would happen if this worker won't be available when cron job starts? Or it will be permanently shut down.", "url": "https://github.com/apache/beam/pull/12542#discussion_r473985462", "createdAt": "2020-08-20T13:40:41Z", "author": {"login": "kkucharc"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAxNTYzMQ==", "bodyText": "How is it called in Java SDK?\n\nIt's --numberOfWorkerHarnessThreads. Some time ago, its equivalent in Python SDK was --experimental worker_threads=[n], but the option was removed. I'll open a discussion on dev@ to find out if it is something the community should take care of.", "url": "https://github.com/apache/beam/pull/12542#discussion_r474015631", "createdAt": "2020-08-20T14:14:12Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAxODQ4OA==", "bodyText": "I wonder only what would happen if this worker won't be available when cron job starts?\n\nWorkers are still managed by Dataflow. That option (--worker_machine_type) is just a hint about what machines should Dataflow use", "url": "https://github.com/apache/beam/pull/12542#discussion_r474018488", "createdAt": "2020-08-20T14:18:17Z", "author": {"login": "kamilwu"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA0MTgxMg==", "bodyText": "Thanks a lot Kamil :)", "url": "https://github.com/apache/beam/pull/12542#discussion_r474041812", "createdAt": "2020-08-20T14:49:27Z", "author": {"login": "kkucharc"}, "path": ".test-infra/jenkins/job_LoadTests_coGBK_Python.groovy", "diffHunk": "@@ -147,25 +147,30 @@ def loadTestConfigurations = { datasetName ->\n         autoscaling_algorithm: 'NONE'\n       ]\n     ],\n-  ].each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  ]\n+  .each { test -> test.pipelineOptions.putAll(additionalPipelineArgs) }\n+  .each { test -> (mode) != 'streaming' ?: addStreamingOptions(test) }\n }\n \n-def batchLoadTestJob = { scope, triggeringContext ->\n-  scope.description('Runs Python CoGBK load tests on Dataflow runner in batch mode')\n-  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 240)\n+def addStreamingOptions(test) {\n+  // Use highmem workers to prevent out of memory issues.\n+  test.pipelineOptions << [streaming: null,\n+    worker_machine_type: 'n1-highmem-4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM4OQ=="}, "originalCommit": {"oid": "0d8566e21ca8f443aad16256b10ba91d72206bc7"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 649, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}