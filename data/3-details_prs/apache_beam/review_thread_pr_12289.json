{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNjIyNzEz", "number": 12289, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowMTo1M1rOEPsmpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1OTowMlrOEPuWDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODk0ODg2OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/worker/operations.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowMTo1M1rOGzjPbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowMTo1M1rOGzjPbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcwNzk1MA==", "bodyText": "Please fix the type, after #12275 it is:\nOptional[Tuple[Iterable[SdfSplitResultsPrimary], Iterable[SdfSplitResultsResidual]]", "url": "https://github.com/apache/beam/pull/12289#discussion_r456707950", "createdAt": "2020-07-17T23:01:53Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,32 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+    self.sdf_process_op = None\n+    self.consumers_count = 0\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.current_element_progress()\n+\n+  def try_split(self, fraction_of_remainder):  # type: (...) -> Optional[Any]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85969b248b4dda63b094643fc8cddb38bf14eb24"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODk1Mjk0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/worker/operations.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowNDoyNlrOGzjRrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzowNDoyNlrOGzjRrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcwODUyNg==", "bodyText": "We shouldn't need to record which is the sdf_process_op, we should be able to use self.receivers[0].try_split and self.receivers[0].current_element_progress regardless. It will only forward the split/progress if there is exactly one consumer and it supports splitting.", "url": "https://github.com/apache/beam/pull/12289#discussion_r456708526", "createdAt": "2020-07-17T23:04:26Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,32 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+    self.sdf_process_op = None\n+    self.consumers_count = 0\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.current_element_progress()\n+\n+  def try_split(self, fraction_of_remainder):  # type: (...) -> Optional[Any]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.try_split(fraction_of_remainder)\n+\n+  def add_receiver(self, operation, output_index=0):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85969b248b4dda63b094643fc8cddb38bf14eb24"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTIzMjcyOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/worker/operations.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1Nzo1MlrOGzlgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1Nzo1MlrOGzlgZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTA2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return self.consumers[0][0].current_element_progress()\n          \n          \n            \n                return self.receivers[0].current_element_progress()\n          \n      \n    \n    \n  \n\nWe should be relying on the ConsumerSet to properly forward the split/progress call. See:\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 150\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def current_element_progress(self): \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 198\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def try_split(self, fraction_of_remainder):", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745063", "createdAt": "2020-07-18T03:57:52Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,20 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    return self.consumers[0][0].current_element_progress()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTIzMjgzOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/runners/worker/operations.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1ODoxMFrOGzlgcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1ODoxMFrOGzlgcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTA3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return self.consumers[0][0].try_split(fraction_of_remainder)\n          \n          \n            \n                return self.receivers[0].try_split(fraction_of_remainder)\n          \n      \n    \n    \n  \n\nWe should be relying on the ConsumerSet to properly forward the split/progress call. See:\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 150\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def current_element_progress(self): \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 198\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def try_split(self, fraction_of_remainder):", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745075", "createdAt": "2020-07-18T03:58:10Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,20 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    return self.consumers[0][0].current_element_progress()\n+\n+  def try_split(\n+      self, fraction_of_remainder\n+  ):  # type: (...) -> Optional[Tuple[Iterable[SdfSplitResultsPrimary], Iterable[SdfSplitResultsResidual]]]\n+    return self.consumers[0][0].try_split(fraction_of_remainder)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTIzNDA0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/transforms/environments.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1OTowM1rOGzlg8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMzo1OTowM1rOGzlg8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTIwMw==", "bodyText": "Lets not add this URN until we are sure with internal testing with Dataflow just in case we find that we need to fix/change something.", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745203", "createdAt": "2020-07-18T03:59:03Z", "author": {"login": "lukecwik"}, "path": "sdks/python/apache_beam/transforms/environments.py", "diffHunk": "@@ -595,6 +595,7 @@ def _python_sdk_capabilities_iter():\n   yield common_urns.protocols.LEGACY_PROGRESS_REPORTING.urn\n   yield common_urns.protocols.WORKER_STATUS.urn\n   yield 'beam:version:sdk_base:' + DockerEnvironment.default_docker_image()\n+  yield common_urns.sdf_components.TRUNCATE_SIZED_RESTRICTION.urn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1078, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}