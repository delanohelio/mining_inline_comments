{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2ODY2ODMx", "number": 10893, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1MTozM1rODhMybw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1MTozM1rODhMybw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTM5MTE5OnYy", "diffSide": "RIGHT", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1MTozM1rOFr1X9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowNzoxNVrOFsdsMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwNzU3NA==", "bodyText": "Is the timestamp for the output timestamp of records from BoundedSource?", "url": "https://github.com/apache/beam/pull/10893#discussion_r381507574", "createdAt": "2020-02-19T19:51:33Z", "author": {"login": "boyuanzz"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -242,18 +243,19 @@ public void splitRestriction(\n     }\n \n     @NewTracker\n-    public RestrictionTracker<BoundedSource<T>, Object[]> restrictionTracker(\n+    public RestrictionTracker<BoundedSource<T>, TimestampedValue<T>[]> restrictionTracker(\n         @Restriction BoundedSource<T> restriction, PipelineOptions pipelineOptions) {\n       return new BoundedSourceAsSDFRestrictionTracker<>(restriction, pipelineOptions);\n     }\n \n     @ProcessElement\n     public void processElement(\n-        RestrictionTracker<BoundedSource<T>, Object[]> tracker, OutputReceiver<T> receiver)\n+        RestrictionTracker<BoundedSource<T>, TimestampedValue<T>[]> tracker,\n+        OutputReceiver<T> receiver)\n         throws IOException {\n-      Object[] out = new Object[1];\n+      TimestampedValue<T>[] out = new TimestampedValue[1];\n       while (tracker.tryClaim(out)) {\n-        receiver.output((T) out[0]);\n+        receiver.outputWithTimestamp(out[0].getValue(), out[0].getTimestamp());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39bed99fd237e8881f8ed9dd412213e8aadd92ea"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2ODExMg==", "bodyText": "yes", "url": "https://github.com/apache/beam/pull/10893#discussion_r382168112", "createdAt": "2020-02-20T18:07:15Z", "author": {"login": "lukecwik"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -242,18 +243,19 @@ public void splitRestriction(\n     }\n \n     @NewTracker\n-    public RestrictionTracker<BoundedSource<T>, Object[]> restrictionTracker(\n+    public RestrictionTracker<BoundedSource<T>, TimestampedValue<T>[]> restrictionTracker(\n         @Restriction BoundedSource<T> restriction, PipelineOptions pipelineOptions) {\n       return new BoundedSourceAsSDFRestrictionTracker<>(restriction, pipelineOptions);\n     }\n \n     @ProcessElement\n     public void processElement(\n-        RestrictionTracker<BoundedSource<T>, Object[]> tracker, OutputReceiver<T> receiver)\n+        RestrictionTracker<BoundedSource<T>, TimestampedValue<T>[]> tracker,\n+        OutputReceiver<T> receiver)\n         throws IOException {\n-      Object[] out = new Object[1];\n+      TimestampedValue<T>[] out = new TimestampedValue[1];\n       while (tracker.tryClaim(out)) {\n-        receiver.output((T) out[0]);\n+        receiver.outputWithTimestamp(out[0].getValue(), out[0].getTimestamp());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwNzU3NA=="}, "originalCommit": {"oid": "39bed99fd237e8881f8ed9dd412213e8aadd92ea"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2059, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}