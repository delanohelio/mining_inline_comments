{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MzU0MDMy", "number": 12370, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMDozMDoxMFrOER_-DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMDozMDoxMFrOER_-DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzA5MzI1OnYy", "diffSide": "RIGHT", "path": "website/www/site/content/en/documentation/transforms/python/aggregation/groupbykey.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMDozMDoxMFrOG3A6rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTozNDozNVrOG3n_Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzOTg4NQ==", "bodyText": "Missing a \"to\"\nWe use GroupByKey to group all the produce for each season.", "url": "https://github.com/apache/beam/pull/12370#discussion_r460339885", "createdAt": "2020-07-25T00:30:10Z", "author": {"login": "rosetn"}, "path": "website/www/site/content/en/documentation/transforms/python/aggregation/groupbykey.md", "diffHunk": "@@ -16,25 +16,40 @@ limitations under the License.\n -->\n \n # GroupByKey\n-<table align=\"left\">\n-    <a target=\"_blank\" class=\"button\"\n-        href=\"https://beam.apache.org/releases/pydoc/current/apache_beam.transforms.core.html#apache_beam.transforms.core.GroupByKey\">\n-      <img src=\"https://beam.apache.org/images/logos/sdks/python.png\" width=\"20px\" height=\"20px\"\n-           alt=\"Pydoc\" />\n-     Pydoc\n-    </a>\n-</table>\n-<br><br>\n \n+{{< localstorage language language-py >}}\n+\n+{{< button-pydoc path=\"apache_beam.transforms.core\" class=\"GroupByKey\" >}}\n \n Takes a keyed collection of elements and produces a collection\n where each element consists of a key and all values associated with that key.\n \n See more information in the [Beam Programming Guide](/documentation/programming-guide/#groupbykey).\n \n ## Examples\n-See [BEAM-7390](https://issues.apache.org/jira/browse/BEAM-7390) for updates. \n \n-## Related transforms \n+In the following example, we create a pipeline with a `PCollection` of produce keyed by season.\n+\n+We use `GroupByKey` group all the produce for each season.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b835eec98455dc6ab57daac7bec3a14e1abe9cda"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDA2Ng==", "bodyText": "Thanks, done", "url": "https://github.com/apache/beam/pull/12370#discussion_r460980066", "createdAt": "2020-07-27T15:34:35Z", "author": {"login": "davidcavazos"}, "path": "website/www/site/content/en/documentation/transforms/python/aggregation/groupbykey.md", "diffHunk": "@@ -16,25 +16,40 @@ limitations under the License.\n -->\n \n # GroupByKey\n-<table align=\"left\">\n-    <a target=\"_blank\" class=\"button\"\n-        href=\"https://beam.apache.org/releases/pydoc/current/apache_beam.transforms.core.html#apache_beam.transforms.core.GroupByKey\">\n-      <img src=\"https://beam.apache.org/images/logos/sdks/python.png\" width=\"20px\" height=\"20px\"\n-           alt=\"Pydoc\" />\n-     Pydoc\n-    </a>\n-</table>\n-<br><br>\n \n+{{< localstorage language language-py >}}\n+\n+{{< button-pydoc path=\"apache_beam.transforms.core\" class=\"GroupByKey\" >}}\n \n Takes a keyed collection of elements and produces a collection\n where each element consists of a key and all values associated with that key.\n \n See more information in the [Beam Programming Guide](/documentation/programming-guide/#groupbykey).\n \n ## Examples\n-See [BEAM-7390](https://issues.apache.org/jira/browse/BEAM-7390) for updates. \n \n-## Related transforms \n+In the following example, we create a pipeline with a `PCollection` of produce keyed by season.\n+\n+We use `GroupByKey` group all the produce for each season.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzOTg4NQ=="}, "originalCommit": {"oid": "b835eec98455dc6ab57daac7bec3a14e1abe9cda"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 950, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}