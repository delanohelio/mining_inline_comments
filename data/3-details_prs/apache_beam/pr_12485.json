{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjYxNjQ0", "number": 12485, "title": "[BEAM-6064] Improvements to BQ streaming insert performance", "bodyText": "Consider results from this analysis: https://docs.google.com/document/d/1s8VRkN4qKdgGkDOZQiwowmD3GVyVV9UskJQwTdKfRCE/edit#\nThis change helps increase EPS per worker from ~100 to >1000 per worker.\nAlso improves documentation and telemetry.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-08-06T21:00:46Z", "url": "https://github.com/apache/beam/pull/12485", "merged": true, "mergeCommit": {"oid": "10da26fd94102baace9e4d8b5788a84c06024781"}, "closed": true, "closedAt": "2020-08-11T20:43:57Z", "author": {"login": "pabloem"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8WQX4AH2gAyNDY0MjYxNjQ0OjZhYzUzNTZjNjExYjAyOWQxYTRlMDY0NWE3ZWFkNDZiMTc4NWQ1NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9sz-DgFqTQ2NDY5NDgwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6ac5356c611b029d1a4e0645a7ead46b1785d543", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/6ac5356c611b029d1a4e0645a7ead46b1785d543", "committedDate": "2020-08-06T20:57:20Z", "message": "[BEAM-6064] Improvements to BQ streaming insert performance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52b08843adaa753efaa76d49e01018ecc272ef85", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/52b08843adaa753efaa76d49e01018ecc272ef85", "committedDate": "2020-08-06T20:58:32Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca0857b6c38abc71b557c27a359b1a4711222835", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/ca0857b6c38abc71b557c27a359b1a4711222835", "committedDate": "2020-08-06T20:59:51Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6c0bf4488a2cfdc42c77c5ad231790ede40506", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/2b6c0bf4488a2cfdc42c77c5ad231790ede40506", "committedDate": "2020-08-07T19:10:08Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b548f5c64ee709b56b65fc4d752fbf43e74c4b", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/b2b548f5c64ee709b56b65fc4d752fbf43e74c4b", "committedDate": "2020-08-07T22:29:04Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad922386540f1ea3c6c411227fc9e2f73eb545ba", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/ad922386540f1ea3c6c411227fc9e2f73eb545ba", "committedDate": "2020-08-07T22:43:01Z", "message": "fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e075755b871ee99454580fc17d0ff9b89c42dc9", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/1e075755b871ee99454580fc17d0ff9b89c42dc9", "committedDate": "2020-08-07T22:48:45Z", "message": "fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Njk0ODAw", "url": "https://github.com/apache/beam/pull/12485#pullrequestreview-464694800", "createdAt": "2020-08-11T01:45:52Z", "commit": {"oid": "1e075755b871ee99454580fc17d0ff9b89c42dc9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTo0NTo1MlrOG-lfhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTo0Nzo1MFrOG-lhgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3OTE3Mg==", "bodyText": "I believe Java uses 50 shards. Do we need a larger default for Python ?", "url": "https://github.com/apache/beam/pull/12485#discussion_r468279172", "createdAt": "2020-08-11T01:45:52Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -304,6 +308,8 @@ def compute_table_name(row):\n NOTE: This job name template does not have backwards compatibility guarantees.\n \"\"\"\n BQ_JOB_NAME_TEMPLATE = \"beam_bq_job_{job_type}_{job_id}_{step_id}{random}\"\n+\"\"\"The number of shards per destination when writing via streaming inserts.\"\"\"\n+DEFAULT_SHARDS_PER_DESTINATION = 500", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e075755b871ee99454580fc17d0ff9b89c42dc9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3OTY4MQ==", "bodyText": "This is just a documentation update for a already available (and verified) feature ?", "url": "https://github.com/apache/beam/pull/12485#discussion_r468279681", "createdAt": "2020-08-11T01:47:50Z", "author": {"login": "chamikaramj"}, "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1419,7 +1448,18 @@ def __init__(\n         Default is to retry always. This means that whenever there are rows\n         that fail to be inserted to BigQuery, they will be retried indefinitely.\n         Other retry strategy settings will produce a deadletter PCollection\n-        as output.\n+        as output. Appropriate values are:\n+\n+        * `RetryStrategy.RETRY_ALWAYS`: retry all rows if\n+          there are any kind of errors. Note that this will hold your pipeline\n+          back if there are errors until you cancel or update it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e075755b871ee99454580fc17d0ff9b89c42dc9"}, "originalPosition": 152}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3772, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}