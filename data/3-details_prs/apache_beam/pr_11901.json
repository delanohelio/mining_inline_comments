{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODc1NDc0", "number": 11901, "title": "Prototype schema-inferring Row constructor.", "bodyText": "This allows easy construction of schemas with PCollections.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-02T23:13:22Z", "url": "https://github.com/apache/beam/pull/11901", "merged": true, "mergeCommit": {"oid": "0be65419579defa9385cabef999d9faa4ff18efc"}, "closed": true, "closedAt": "2020-06-09T23:40:36Z", "author": {"login": "robertwb"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcndOdRAH2gAyNDI2ODc1NDc0OjJiZTI2NjlmZGY1NTQwYzEzZWU5YWE4ZTVmMDQ5MDEzMjA3MTliZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpsLy4gH2gAyNDI2ODc1NDc0OjMyZWIwYTQxNjZmNzIwYWU3ZTkyZmFhYmM4ZTM5NTUyMDMzMzdlY2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/2be2669fdf5540c13ee9aa8e5f04901320719bed", "committedDate": "2020-06-02T23:12:10Z", "message": "Prototype schema-inferring Row constructor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTQyODI1", "url": "https://github.com/apache/beam/pull/11901#pullrequestreview-423142825", "createdAt": "2020-06-03T00:29:00Z", "commit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDoyOTowMFrOGeIPXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDoyOTowMFrOGeIPXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTQ3MA==", "bodyText": "It looks like this is an unrelated change that got pulled in?", "url": "https://github.com/apache/beam/pull/11901#discussion_r434245470", "createdAt": "2020-06-03T00:29:00Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/typehints/opcodes.py", "diffHunk": "@@ -120,7 +120,7 @@ def get_iter(state, unused_arg):\n \n def symmetric_binary_op(state, unused_arg):\n   # TODO(robertwb): This may not be entirely correct...\n-  b, a = state.stack.pop(), state.stack.pop()\n+  b, a = Const.unwrap(state.stack.pop()), Const.unwrap(state.stack.pop())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTQzODk3", "url": "https://github.com/apache/beam/pull/11901#pullrequestreview-423143897", "createdAt": "2020-06-03T00:32:12Z", "commit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDozMjoxMlrOGeIS4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDozMjoxMlrOGeIS4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NjM2OA==", "bodyText": "This is definitely useful for SQL but I don't think it should be SQL-specific. What about putting it in apache_beam/typehints/schemas.py?", "url": "https://github.com/apache/beam/pull/11901#discussion_r434246368", "createdAt": "2020-06-03T00:32:12Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/transforms/sql.py", "diffHunk": "@@ -74,3 +77,8 @@ def __init__(self, query, dialect=None):\n             SqlTransformSchema(query=query, dialect=dialect)),\n         BeamJarExpansionService(\n             ':sdks:java:extensions:sql:expansion-service:shadowJar'))\n+\n+\n+class Row(object):\n+  def __init__(self, **kwargs):\n+    self.__dict__.update(kwargs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3Mjk3Njk1", "url": "https://github.com/apache/beam/pull/11901#pullrequestreview-427297695", "createdAt": "2020-06-09T15:45:21Z", "commit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo0NToyMVrOGhQ7sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo0ODo0N1rOGhRFcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzYxOA==", "bodyText": "Could you move this inference to typehints.schemas alongside named_tuple_to_schema? I have a WIP PR for batching schema'd PCollections that are inputs to Dataframes and I should re-use this logic there.", "url": "https://github.com/apache/beam/pull/11901#discussion_r437533618", "createdAt": "2020-06-09T15:45:21Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/coders/row_coder.py", "diffHunk": "@@ -82,8 +86,19 @@ def from_runner_api_parameter(schema, components, unused_context):\n     return RowCoder(schema)\n \n   @staticmethod\n-  def from_type_hint(named_tuple_type, registry):\n-    return RowCoder(named_tuple_to_schema(named_tuple_type))\n+  def from_type_hint(type_hint, registry):\n+    if isinstance(type_hint, row_type.RowTypeConstraint):\n+      schema = schema_pb2.Schema(\n+          fields=[\n+              schema_pb2.Field(\n+                  name=name,\n+                  type=typing_to_runner_api(type))\n+              for (name, type) in type_hint._fields\n+          ],\n+          id=str(uuid.uuid4()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzNjExNQ==", "bodyText": "Mm nothing comes to mind. I suppose it could just be apache_beam.Row for now, and we can alias it if we add a schema package with other top-level schema stuff later.", "url": "https://github.com/apache/beam/pull/11901#discussion_r437536115", "createdAt": "2020-06-09T15:48:47Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/transforms/sql.py", "diffHunk": "@@ -74,3 +77,8 @@ def __init__(self, query, dialect=None):\n             SqlTransformSchema(query=query, dialect=dialect)),\n         BeamJarExpansionService(\n             ':sdks:java:extensions:sql:expansion-service:shadowJar'))\n+\n+\n+class Row(object):\n+  def __init__(self, **kwargs):\n+    self.__dict__.update(kwargs)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NjM2OA=="}, "originalCommit": {"oid": "2be2669fdf5540c13ee9aa8e5f04901320719bed"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2333b00137e4ca87a3778647344322ea480bafa", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/f2333b00137e4ca87a3778647344322ea480bafa", "committedDate": "2020-06-09T17:21:50Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24891dcddfc2fc3fb6a5f9065947ee9ba767018b", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/24891dcddfc2fc3fb6a5f9065947ee9ba767018b", "committedDate": "2020-06-09T17:36:00Z", "message": "Move Row out of sql."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fd42b376d61b8ead9167fd966367ffc07e417ce", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/5fd42b376d61b8ead9167fd966367ffc07e417ce", "committedDate": "2020-06-09T17:45:40Z", "message": "move schema building"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98ebb71605165c114c64cbfd81ec5d3bfb5ac838", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/98ebb71605165c114c64cbfd81ec5d3bfb5ac838", "committedDate": "2020-06-09T19:29:57Z", "message": "lint, py2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4407d81cbfa06f85d5dd3583b7492016bbef219", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/d4407d81cbfa06f85d5dd3583b7492016bbef219", "committedDate": "2020-06-09T20:01:20Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32eb0a4166f720ae7e92faabc8e3955203337ecb", "author": {"user": {"login": "robertwb", "name": "Robert Bradshaw"}}, "url": "https://github.com/apache/beam/commit/32eb0a4166f720ae7e92faabc8e3955203337ecb", "committedDate": "2020-06-09T21:45:41Z", "message": "superfluous-parens"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3937, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}