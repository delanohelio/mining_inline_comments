{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODUxMDY2", "number": 10684, "title": "[BEAM-9175] Introduce an autoformatting tool to Python SDK", "bodyText": "This PR adds yapf configuration and all the changes made after running it over the entire Python SDK codebase.\nThe result is fully compliant with PEP8 (lint check passes, the issues were manually resolved).\nSome of the examples and rules of the newly enforced style (they can be put under discussion and reviewed):\n\n\nMultiple dict entries can be put in the same line.\nbefore:\n\n  \n    \n      beam/sdks/python/apache_beam/io/avroio_test.py\n    \n    \n        Lines 72 to 91\n      in\n      b689fff\n    \n    \n    \n    \n\n        \n          \n           RECORDS = [ \n        \n\n        \n          \n               {'name': 'Thomas', \n        \n\n        \n          \n                'favorite_number': 1, \n        \n\n        \n          \n                'favorite_color': 'blue'}, \n        \n\n        \n          \n               {'name': 'Henry', \n        \n\n        \n          \n                'favorite_number': 3, \n        \n\n        \n          \n                'favorite_color': 'green'}, \n        \n\n        \n          \n               {'name': 'Toby', \n        \n\n        \n          \n                'favorite_number': 7, \n        \n\n        \n          \n                'favorite_color': 'brown'}, \n        \n\n        \n          \n               {'name': 'Gordon', \n        \n\n        \n          \n                'favorite_number': 4, \n        \n\n        \n          \n                'favorite_color': 'blue'}, \n        \n\n        \n          \n               {'name': 'Emily', \n        \n\n        \n          \n                'favorite_number': -1, \n        \n\n        \n          \n                'favorite_color': 'Red'}, \n        \n\n        \n          \n               {'name': 'Percy', \n        \n\n        \n          \n                'favorite_number': 6, \n        \n\n        \n          \n                'favorite_color': 'Green'} \n        \n\n        \n          \n           ] \n        \n    \n  \n\n\nafter:\n\n  \n    \n      beam/sdks/python/apache_beam/io/avroio_test.py\n    \n    \n        Lines 71 to 76\n      in\n      cfa9034\n    \n    \n    \n    \n\n        \n          \n           RECORDS = [{'name': 'Thomas', 'favorite_number': 1, 'favorite_color': 'blue'}, \n        \n\n        \n          \n                      {'name': 'Henry', 'favorite_number': 3, 'favorite_color': 'green'}, \n        \n\n        \n          \n                      {'name': 'Toby', 'favorite_number': 7, 'favorite_color': 'brown'}, \n        \n\n        \n          \n                      {'name': 'Gordon', 'favorite_number': 4, 'favorite_color': 'blue'}, \n        \n\n        \n          \n                      {'name': 'Emily', 'favorite_number': -1, 'favorite_color': 'Red'}, \n        \n\n        \n          \n                      {'name': 'Percy', 'favorite_number': 6, 'favorite_color': 'Green'}] \n        \n    \n  \n\n\nWith this setting, it seems the result conforms more to the already used style (lower number of lines changed).\n\n\nYapf tries to put the first parameter on the same line where the function begins:\n\n  \n    \n      beam/sdks/python/apache_beam/utils/annotations_test.py\n    \n    \n        Lines 56 to 61\n      in\n      cfa9034\n    \n    \n    \n    \n\n        \n          \n           self.check_annotation(warning=w, \n        \n\n        \n          \n                                 warning_type=BeamDeprecationWarning, \n        \n\n        \n          \n                                 obj_name='fnc_test_deprecated_with_since_current', \n        \n\n        \n          \n                                 annotation_type='deprecated', \n        \n\n        \n          \n                                 label_check_list=[('since', True), \n        \n\n        \n          \n                                                   ('instead', True)]) \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/io/gcp/bigquery.py\n    \n    \n        Lines 398 to 407\n      in\n      cfa9034\n    \n    \n    \n    \n\n        \n          \n           def __init__(self, \n        \n\n        \n          \n                        table=None, \n        \n\n        \n          \n                        dataset=None, \n        \n\n        \n          \n                        project=None, \n        \n\n        \n          \n                        query=None, \n        \n\n        \n          \n                        validate=False, \n        \n\n        \n          \n                        coder=None, \n        \n\n        \n          \n                        use_standard_sql=False, \n        \n\n        \n          \n                        flatten_results=True, \n        \n\n        \n          \n                        kms_key=None): \n        \n    \n  \n\n\n\n\n...unless some of parameters have type annotation or are too long (then it does the split before the first argument):\n\n  \n    \n      beam/sdks/python/apache_beam/runners/direct/watermark_manager.py\n    \n    \n        Lines 129 to 136\n      in\n      cfa9034\n    \n    \n    \n    \n\n        \n          \n           def _update_pending( \n        \n\n        \n          \n               self, \n        \n\n        \n          \n               input_committed_bundle, \n        \n\n        \n          \n               applied_ptransform,  # type: AppliedPTransform \n        \n\n        \n          \n               completed_timers, \n        \n\n        \n          \n               output_committed_bundles,  # type: Iterable[_Bundle] \n        \n\n        \n          \n               unprocessed_bundles  # type: Iterable[_Bundle] \n        \n\n        \n          \n           ): \n        \n    \n  \n\n\nIndent width is 2 and continuation indent is 4.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-01-24T14:03:23Z", "url": "https://github.com/apache/beam/pull/10684", "merged": true, "mergeCommit": {"oid": "b91560cc354da471e3de502aad78dd059997a3d0"}, "closed": true, "closedAt": "2020-02-06T11:41:35Z", "author": {"login": "kamilwu"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9mGroAFqTM0ODI0Mzg1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCEwN4gFqTM1NTM5NTIzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQzODUz", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-348243853", "createdAt": "2020-01-24T21:47:59Z", "commit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0Nzo1OVrOFhrVPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0Nzo1OVrOFhrVPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzI3OA==", "bodyText": "Not sure I like this change: and should be at the end of this line.", "url": "https://github.com/apache/beam/pull/10684#discussion_r370857278", "createdAt": "2020-01-24T21:47:59Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/opcodes.py", "diffHunk": "@@ -268,14 +266,14 @@ def load_attr(state, arg):\n   name = state.get_name(arg)\n   if isinstance(o, Const) and hasattr(o.value, name):\n     state.stack.append(Const(getattr(o.value, name)))\n-  elif (inspect.isclass(o) and\n-        isinstance(getattr(o, name, None),\n-                   (types.MethodType, types.FunctionType))):\n+  elif (inspect.isclass(o)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ0MzA3", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-348244307", "createdAt": "2020-01-24T21:49:00Z", "commit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0OTowMVrOFhrWlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0OTowMVrOFhrWlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzYyMQ==", "bodyText": "The , ] at the end looks odd.", "url": "https://github.com/apache/beam/pull/10684#discussion_r370857621", "createdAt": "2020-01-24T21:49:01Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -68,24 +68,23 @@ def instance_to_type(o):\n     return typehints.Tuple[[instance_to_type(item) for item in o]]\n   elif t == list:\n     if len(o) > 0:\n-      return typehints.List[\n-          typehints.Union[[instance_to_type(item) for item in o]]\n-      ]\n+      return typehints.List[typehints.Union[[\n+          instance_to_type(item) for item in o\n+      ]]]\n     else:\n       return typehints.List[typehints.Any]\n   elif t == set:\n     if len(o) > 0:\n-      return typehints.Set[\n-          typehints.Union[[instance_to_type(item) for item in o]]\n-      ]\n+      return typehints.Set[typehints.Union[[\n+          instance_to_type(item) for item in o\n+      ]]]\n     else:\n       return typehints.Set[typehints.Any]\n   elif t == dict:\n     if len(o) > 0:\n       return typehints.Dict[\n           typehints.Union[[instance_to_type(k) for k, v in o.items()]],\n-          typehints.Union[[instance_to_type(v) for k, v in o.items()]],\n-      ]\n+          typehints.Union[[instance_to_type(v) for k, v in o.items()]], ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ0Nzk2", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-348244796", "createdAt": "2020-01-24T21:50:00Z", "commit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MDowMVrOFhrX8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MDowMVrOFhrX8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzk3MA==", "bodyText": "This change makes things less readable IMO.", "url": "https://github.com/apache/beam/pull/10684#discussion_r370857970", "createdAt": "2020-01-24T21:50:01Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -303,10 +302,8 @@ def infer_return_type(c, input_types, debug=False, depth=5):\n     elif inspect.isclass(c):\n       if c in typehints.DISALLOWED_PRIMITIVE_TYPES:\n         return {\n-            list: typehints.List[Any],\n-            set: typehints.Set[Any],\n-            tuple: typehints.Tuple[Any, ...],\n-            dict: typehints.Dict[Any, Any]\n+            list: typehints.List[Any], set: typehints.Set[Any], tuple:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ1MDc4", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-348245078", "createdAt": "2020-01-24T21:50:39Z", "commit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MDozOVrOFhrYyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MDozOVrOFhrYyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODE4NA==", "bodyText": "same", "url": "https://github.com/apache/beam/pull/10684#discussion_r370858184", "createdAt": "2020-01-24T21:50:39Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -356,8 +353,8 @@ def infer_return_type_func(f, input_types, debug=False, depth=0):\n   yields = set()\n   returns = set()\n   # TODO(robertwb): Default args via inspect module.\n-  local_vars = list(input_types) + [typehints.Union[()]] * (len(co.co_varnames)\n-                                                            - len(input_types))\n+  local_vars = list(input_types) + [typehints.Union[", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ1OTQw", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-348245940", "createdAt": "2020-01-24T21:52:39Z", "commit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MjozOVrOFhrbaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MjozOVrOFhrbaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODg1Ng==", "bodyText": "ALLOW_MULTILINE_LAMBDAS = false", "url": "https://github.com/apache/beam/pull/10684#discussion_r370858856", "createdAt": "2020-01-24T21:52:39Z", "author": {"login": "udim"}, "path": "sdks/python/apache_beam/typehints/trivial_inference_test_py3.py", "diffHunk": "@@ -43,8 +42,8 @@ def testBuildListUnpack(self):\n \n   def testBuildTupleUnpack(self):\n     # Lambda uses BUILD_TUPLE_UNPACK opcode in Python 3.\n-    self.assertReturnType(typehints.Tuple[int, str, str],\n-                          lambda _list1, _list2: (*_list1, *_list2, *_list2),\n+    self.assertReturnType(typehints.Tuple[int, str, str], lambda _list1, _list2:\n+                          (*_list1, *_list2, *_list2),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5e3f81181e75bf69888570d2aeccd3f355f9b22", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/c5e3f81181e75bf69888570d2aeccd3f355f9b22", "committedDate": "2020-01-27T12:23:15Z", "message": "FIX: Ignore a region where yapf behaves weird"}, "afterCommit": {"oid": "7db61fbf2dd6eac4ffb542e684260edf0d892fea", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/7db61fbf2dd6eac4ffb542e684260edf0d892fea", "committedDate": "2020-01-28T15:16:06Z", "message": "[BEAM-9175] Add pre-commit Jenkins job"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26cb97c1a319e4dc96b18ce54ab1f0fe6f4315b5", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/26cb97c1a319e4dc96b18ce54ab1f0fe6f4315b5", "committedDate": "2020-01-29T12:18:08Z", "message": "[BEAM-9175]: Disable bad-continuation check in pylint"}, "afterCommit": {"oid": "18311b6b896cf3b12b390fcbcb3a257fe80e8998", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/18311b6b896cf3b12b390fcbcb3a257fe80e8998", "committedDate": "2020-02-03T10:16:53Z", "message": "[BEAM-9175]: Disable bad-continuation check in pylint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTM2NTAw", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-354136500", "createdAt": "2020-02-06T00:36:18Z", "commit": {"oid": "18311b6b896cf3b12b390fcbcb3a257fe80e8998"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1576276b08de1e6971219f333e0fb38e43f6e58f", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/1576276b08de1e6971219f333e0fb38e43f6e58f", "committedDate": "2020-02-06T10:00:47Z", "message": "[BEAM-9175] Add yapf autoformatter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18311b6b896cf3b12b390fcbcb3a257fe80e8998", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/18311b6b896cf3b12b390fcbcb3a257fe80e8998", "committedDate": "2020-02-03T10:16:53Z", "message": "[BEAM-9175]: Disable bad-continuation check in pylint"}, "afterCommit": {"oid": "d103203e24e1a7a12a388a2584e053632834242f", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/d103203e24e1a7a12a388a2584e053632834242f", "committedDate": "2020-02-06T10:11:24Z", "message": "[BEAM-9175] Disable bad-continuation check in pylint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c3941fcc6f09ce517223350f8505b2981907743", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/9c3941fcc6f09ce517223350f8505b2981907743", "committedDate": "2020-02-06T10:33:22Z", "message": "[BEAM-9175] Yapf everywhere!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76596c0753950c024a035465413e747ec3be2a3", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/d76596c0753950c024a035465413e747ec3be2a3", "committedDate": "2020-02-06T10:33:43Z", "message": "[BEAM-9175] Fix pylint issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7069f8cc90ba9ddd29b7c507028ff981ad56572", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/f7069f8cc90ba9ddd29b7c507028ff981ad56572", "committedDate": "2020-02-06T10:33:43Z", "message": "[BEAM-9175] Add pre-commit Jenkins job"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fa102c871da4db661d0d2ebde98545e61d2a9d4", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/4fa102c871da4db661d0d2ebde98545e61d2a9d4", "committedDate": "2020-02-06T10:33:43Z", "message": "[BEAM-9175] Disable bad-continuation check in pylint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d103203e24e1a7a12a388a2584e053632834242f", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/d103203e24e1a7a12a388a2584e053632834242f", "committedDate": "2020-02-06T10:11:24Z", "message": "[BEAM-9175] Disable bad-continuation check in pylint"}, "afterCommit": {"oid": "4fa102c871da4db661d0d2ebde98545e61d2a9d4", "author": {"user": {"login": "kamilwu", "name": "Kamil Wasilewski"}}, "url": "https://github.com/apache/beam/commit/4fa102c871da4db661d0d2ebde98545e61d2a9d4", "committedDate": "2020-02-06T10:33:43Z", "message": "[BEAM-9175] Disable bad-continuation check in pylint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1Mzk1MjM4", "url": "https://github.com/apache/beam/pull/10684#pullrequestreview-355395238", "createdAt": "2020-02-07T19:46:12Z", "commit": {"oid": "4fa102c871da4db661d0d2ebde98545e61d2a9d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0NjoxMlrOFnIR3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0NjoxMlrOFnIR3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3NDQzMA==", "bodyText": "I missed this in my review. The lint precommit runs :pythonLintPreCommit, which depends on lint tasks.\nSuggestion:\nlint.dependsOn formatter", "url": "https://github.com/apache/beam/pull/10684#discussion_r376574430", "createdAt": "2020-02-07T19:46:12Z", "author": {"login": "udim"}, "path": "sdks/python/test-suites/tox/py37/build.gradle", "diffHunk": "@@ -35,6 +35,9 @@ lint.dependsOn lintPy37\n toxTask \"mypyPy37\", \"py37-mypy\"\n lint.dependsOn mypyPy37\n \n+toxTask \"formatter\", \"py3-yapf-check\"\n+check.dependsOn formatter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa102c871da4db661d0d2ebde98545e61d2a9d4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3601, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}