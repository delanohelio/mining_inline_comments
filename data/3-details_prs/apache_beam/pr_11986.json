{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzgxODQ4", "number": 11986, "title": "[BEAM-10235] Adding a CountElms transform to the Go SDK.", "bodyText": "This transform counts the number of elements in a PTransform.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-06-11T01:10:48Z", "url": "https://github.com/apache/beam/pull/11986", "merged": true, "mergeCommit": {"oid": "adeceecc65379bf4df6537e6315d701957840d2a"}, "closed": true, "closedAt": "2020-06-13T08:23:26Z", "author": {"login": "youngoli"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqP9VKAFqTQyOTAyNzYwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqzCYwABqjM0NDA1ODg0NjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDI3NjAy", "url": "https://github.com/apache/beam/pull/11986#pullrequestreview-429027602", "createdAt": "2020-06-11T15:26:27Z", "commit": {"oid": "6be9fea5568ee25224c4027ef0aa05cd964a7850"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNjoyOFrOGiib0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNjoyOFrOGiib0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2ODk0NQ==", "bodyText": "Consider removing that last sentence about injections (here and above). Or we can change it!\nI think it's supposed to require that the encodings be deterministic  (which is required since Count uses elements as keys) which is clearer than the formal wording that currently exists.", "url": "https://github.com/apache/beam/pull/11986#discussion_r438868945", "createdAt": "2020-06-11T15:26:28Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/transforms/stats/count.go", "diffHunk": "@@ -18,18 +18,36 @@ package stats\n \n import (\n \t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/typex\"\n )\n \n-// Count counts the number of elements in a collection. It expects a\n-// PCollection<T> as input and returns a PCollection<KV<T,int>>. T's encoding\n-// must be a well-defined injection.\n+// Count counts the number of appearances of each element in a collection. It\n+// expects a PCollection<T> as input and returns a PCollection<KV<T,int>>. T's\n+// encoding must be a well-defined injection.\n func Count(s beam.Scope, col beam.PCollection) beam.PCollection {\n \ts = s.Scope(\"stats.Count\")\n \n-\tpre := beam.ParDo(s, mapFn, col)\n+\tpre := beam.ParDo(s, keyedMapFn, col)\n \treturn SumPerKey(s, pre)\n }\n \n-func mapFn(elm beam.T) (beam.T, int) {\n+func keyedMapFn(elm beam.T) (beam.T, int) {\n \treturn elm, 1\n }\n+\n+// CountElms counts the number of elements in a collection. It expects a\n+// PCollection<T> as input and returns a PCollection<int> of one element\n+// containing the count. T's encoding must be a well-defined injection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6be9fea5568ee25224c4027ef0aa05cd964a7850"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDQ1NzE1", "url": "https://github.com/apache/beam/pull/11986#pullrequestreview-429045715", "createdAt": "2020-06-11T15:43:08Z", "commit": {"oid": "6be9fea5568ee25224c4027ef0aa05cd964a7850"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowOFrOGijZEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowOFrOGijZEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDYyNw==", "bodyText": "Consider countFn?", "url": "https://github.com/apache/beam/pull/11986#discussion_r438884627", "createdAt": "2020-06-11T15:43:08Z", "author": {"login": "lostluck"}, "path": "sdks/go/pkg/beam/transforms/stats/count.go", "diffHunk": "@@ -18,18 +18,36 @@ package stats\n \n import (\n \t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/typex\"\n )\n \n-// Count counts the number of elements in a collection. It expects a\n-// PCollection<T> as input and returns a PCollection<KV<T,int>>. T's encoding\n-// must be a well-defined injection.\n+// Count counts the number of appearances of each element in a collection. It\n+// expects a PCollection<T> as input and returns a PCollection<KV<T,int>>. T's\n+// encoding must be a well-defined injection.\n func Count(s beam.Scope, col beam.PCollection) beam.PCollection {\n \ts = s.Scope(\"stats.Count\")\n \n-\tpre := beam.ParDo(s, mapFn, col)\n+\tpre := beam.ParDo(s, keyedMapFn, col)\n \treturn SumPerKey(s, pre)\n }\n \n-func mapFn(elm beam.T) (beam.T, int) {\n+func keyedMapFn(elm beam.T) (beam.T, int) {\n \treturn elm, 1\n }\n+\n+// CountElms counts the number of elements in a collection. It expects a\n+// PCollection<T> as input and returns a PCollection<int> of one element\n+// containing the count. T's encoding must be a well-defined injection.\n+func CountElms(s beam.Scope, col beam.PCollection) beam.PCollection {\n+\ts = s.Scope(\"stats.CountElms\")\n+\n+\tif typex.IsKV(col.Type()) {\n+\t\tcol = beam.DropKey(s, col)\n+\t}\n+\tpre := beam.ParDo(s, mapFn, col)\n+\treturn Sum(s, pre)\n+}\n+\n+func mapFn(_ beam.T) int {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6be9fea5568ee25224c4027ef0aa05cd964a7850"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDQ2MjM2", "url": "https://github.com/apache/beam/pull/11986#pullrequestreview-429046236", "createdAt": "2020-06-11T15:43:28Z", "commit": {"oid": "6be9fea5568ee25224c4027ef0aa05cd964a7850"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d870be85a2e426868ebd8b729f6f9d16853f2afa", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/d870be85a2e426868ebd8b729f6f9d16853f2afa", "committedDate": "2020-06-13T08:11:56Z", "message": "[BEAM-10235] Adding a CountElms transform to the Go SDK.\n\nThis transform counts the number of elements in a PTransform."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cad36937ed567f7e5d8a9111ebdd9a73ca9c3c8", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/3cad36937ed567f7e5d8a9111ebdd9a73ca9c3c8", "committedDate": "2020-06-13T08:06:30Z", "message": "Fixup"}, "afterCommit": {"oid": "d870be85a2e426868ebd8b729f6f9d16853f2afa", "author": {"user": {"login": "youngoli", "name": "Daniel Oliveira"}}, "url": "https://github.com/apache/beam/commit/d870be85a2e426868ebd8b729f6f9d16853f2afa", "committedDate": "2020-06-13T08:11:56Z", "message": "[BEAM-10235] Adding a CountElms transform to the Go SDK.\n\nThis transform counts the number of elements in a PTransform."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4250, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}