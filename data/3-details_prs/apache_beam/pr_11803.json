{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDQzMTM5", "number": 11803, "title": "[BEAM-9679] Add a CoGroupByKey lesson to the Core Transforms section", "bodyText": "This pull request adds a CoGroupByKey lesson to the Go SDK katas. I would like to request the following reviewers:\n(R: @lostluck )\n(R: @henryken )\nIf accepted, please wait until the Stepik course is updated before finally merging this PR.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n[*] Choose reviewer(s) and mention them in a comment (R: @username).\n[*] Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-24T17:19:41Z", "url": "https://github.com/apache/beam/pull/11803", "merged": true, "mergeCommit": {"oid": "193e54c3e2f0fffa8d92dfed998800ea86cec073"}, "closed": true, "closedAt": "2020-05-29T17:53:57Z", "author": {"login": "damondouglas"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckepe0gH2gAyNDIyNDQzMTM5OjRiMGVmYzdjZTVmZjcwMmRlYzljNmQyZGRhNTBkMTZhYTUxOGQ5NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl1sZ4gH2gAyNDIyNDQzMTM5OjNkN2VlMjQxZjM5NWE0MWZiZmYwYTFkN2RhMTE1NGY3ZjZlZmRmODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c", "committedDate": "2020-05-24T17:09:49Z", "message": "Add a CoGroupByKey lesson to the Core Transforms section"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzI5MDQz", "url": "https://github.com/apache/beam/pull/11803#pullrequestreview-417729043", "createdAt": "2020-05-25T13:58:44Z", "commit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo1ODo0NFrOGaCCVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDo0MDo0M1rOGaDRbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0OTUyNw==", "bodyText": "Just realized that the GroupByKey and CoGroupByKey are not using the same Go version as the others. Can we make all of them uniform?", "url": "https://github.com/apache/beam/pull/11803#discussion_r429949527", "createdAt": "2020-05-25T13:58:44Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/CoGroupByKey/CoGroupByKey/go.mod", "diffHunk": "@@ -0,0 +1,26 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+module cogroupbykey\n+\n+go 1.14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1MTIyNQ==", "bodyText": "Nice trick!", "url": "https://github.com/apache/beam/pull/11803#discussion_r429951225", "createdAt": "2020-05-25T14:02:04Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/CoGroupByKey/CoGroupByKey/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"fmt\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+func ApplyTransform(s beam.Scope, fruits beam.PCollection, countries beam.PCollection) beam.PCollection {\n+\tfruitsKV := beam.ParDo(s, func(e string) (string, string) {\n+\t\treturn string(e[0]), e\n+\t}, fruits)\n+\n+\tcountriesKV := beam.ParDo(s, func(e string) (string, string) {\n+\t\treturn string(e[0]), e\n+\t}, countries)\n+\n+\tgrouped := beam.CoGroupByKey(s, fruitsKV, countriesKV)\n+\treturn beam.ParDo(s, func(key string, f func(*string) bool, c func(*string) bool, emit func(string)) {\n+\t\tv := &WordsAlphabet{\n+\t\t\tAlphabet: key,\n+\t\t}\n+\t\tf(&v.Fruit)\n+\t\tc(&v.Country)\n+\t\temit(v.String())\n+\t}, grouped)\n+}\n+\n+type WordsAlphabet struct {\n+\tAlphabet string\n+\tFruit string\n+\tCountry string\n+}\n+\n+func (wa *WordsAlphabet) String() string {\n+\treturn fmt.Sprintf(\"WordsAlphabet%+v\", *wa)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2NTYzOQ==", "bodyText": "I understand the convention of Go that prefers shorter variable name, but I personally find that f and c are cryptic.\nBut if it's well understood, I guess I'm just too old for this :)\nBtw, I like the variable naming in the examples at the top of the godoc.\nhttps://godoc.org/github.com/apache/beam/sdks/go/pkg/beam", "url": "https://github.com/apache/beam/pull/11803#discussion_r429965639", "createdAt": "2020-05-25T14:31:48Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/CoGroupByKey/CoGroupByKey/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"fmt\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+func ApplyTransform(s beam.Scope, fruits beam.PCollection, countries beam.PCollection) beam.PCollection {\n+\tfruitsKV := beam.ParDo(s, func(e string) (string, string) {\n+\t\treturn string(e[0]), e\n+\t}, fruits)\n+\n+\tcountriesKV := beam.ParDo(s, func(e string) (string, string) {\n+\t\treturn string(e[0]), e\n+\t}, countries)\n+\n+\tgrouped := beam.CoGroupByKey(s, fruitsKV, countriesKV)\n+\treturn beam.ParDo(s, func(key string, f func(*string) bool, c func(*string) bool, emit func(string)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2NTg0NQ==", "bodyText": "Why not using wa here so that not to confuse with Value?", "url": "https://github.com/apache/beam/pull/11803#discussion_r429965845", "createdAt": "2020-05-25T14:32:13Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/CoGroupByKey/CoGroupByKey/pkg/task/task.go", "diffHunk": "@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package task\n+\n+import (\n+\t\"fmt\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam\"\n+)\n+\n+func ApplyTransform(s beam.Scope, fruits beam.PCollection, countries beam.PCollection) beam.PCollection {\n+\tfruitsKV := beam.ParDo(s, func(e string) (string, string) {\n+\t\treturn string(e[0]), e\n+\t}, fruits)\n+\n+\tcountriesKV := beam.ParDo(s, func(e string) (string, string) {\n+\t\treturn string(e[0]), e\n+\t}, countries)\n+\n+\tgrouped := beam.CoGroupByKey(s, fruitsKV, countriesKV)\n+\treturn beam.ParDo(s, func(key string, f func(*string) bool, c func(*string) bool, emit func(string)) {\n+\t\tv := &WordsAlphabet{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2ODA2OA==", "bodyText": "Is there any documentation available that explains about this DoFn variation?\nI still couldn't find a good programming guide for the Go version.", "url": "https://github.com/apache/beam/pull/11803#discussion_r429968068", "createdAt": "2020-05-25T14:36:59Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/CoGroupByKey/CoGroupByKey/task.md", "diffHunk": "@@ -0,0 +1,104 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+\n+# CoGroupByKey\n+\n+CoGroupByKey performs a relational join of two or more key/value PCollections that have the same \n+key type.\n+\n+**Kata:** Implement a [beam.CoGroupByKey](https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#CoGroupByKey) \n+transform that join words by the first alphabetical letter, and then produces the string representation of the \n+WordsAlphabet model.\n+\n+<div class=\"hint\">\n+    Refer to\n+    <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#CoGroupByKey\">beam.CoGroupByKey</a>\n+    to solve this problem.\n+</div>\n+\n+<div class=\"hint\">\n+  Refer to the Beam Programming Guide\n+  <a href=\"https://beam.apache.org/documentation/programming-guide/#cogroupbykey\">\n+    \"CoGroupByKey\"</a> section for more information.\n+</div>\n+\n+<div class=\"hint\">\n+  Think of this problem in three stages.  First, create key/value pairs of PCollections called KV\n+  for fruits and countries, pairing the first character with the word.  Next, apply CoGroupByKey to the KVs\n+  followed by a ParDo.\n+</div>\n+\n+<div class=\"hint\">\n+  In the last lesson we learned how to make key/value PCollections called KV.  Now we have \n+  two to make from fruits and countries.\n+  \n+  To return as a KV, you can return two values from your DoFn. The first return value represents the Key, and \n+  the second return value represents the Value.  An example is shown below.\n+  \n+```\n+func doFn(element string) (string, string) {\n+    key := string(element[0])\n+    value := element\n+    return key, value\n+}\n+``` \n+</div>\n+\n+<div class=\"hint\">\n+  In the last lesson we learned that \n+  <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#GroupByKey\">\n+  beam.GroupByKey</a> takes a single KV.\n+  <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#CoGroupByKey\">beam.CoGroupByKey</a>\n+  takes more than one KV.\n+</div>\n+\n+<div class=\"hint\">\n+  Our final step in this problem requires a\n+  <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#ParDo\">beam.ParDo</a>\n+  with a DoFn that's different than what we've seen in previous lessons.  In the previous step we should\n+  have a PCollection acquired from CoGroupByKey.  A ParDo for that PCollection expects a DoFn that looks\n+  like the following. \n+  \n+  ```\n+  func doFn(key string, aKV func(*string) bool, anotherKV func(*string) bool, emit func(string)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2OTc3Mw==", "bodyText": "If I understand correctly, it seems that func(*string) bool should assign the value of V to the passed-in variable pointer, not the KV?\nBorrowing the concept of the Java version, these functions behave similarly to CoGbkResult.get() based on the sequence of the passed in PCollection?", "url": "https://github.com/apache/beam/pull/11803#discussion_r429969773", "createdAt": "2020-05-25T14:40:43Z", "author": {"login": "henryken"}, "path": "learning/katas/go/Core Transforms/CoGroupByKey/CoGroupByKey/task.md", "diffHunk": "@@ -0,0 +1,104 @@\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+\n+# CoGroupByKey\n+\n+CoGroupByKey performs a relational join of two or more key/value PCollections that have the same \n+key type.\n+\n+**Kata:** Implement a [beam.CoGroupByKey](https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#CoGroupByKey) \n+transform that join words by the first alphabetical letter, and then produces the string representation of the \n+WordsAlphabet model.\n+\n+<div class=\"hint\">\n+    Refer to\n+    <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#CoGroupByKey\">beam.CoGroupByKey</a>\n+    to solve this problem.\n+</div>\n+\n+<div class=\"hint\">\n+  Refer to the Beam Programming Guide\n+  <a href=\"https://beam.apache.org/documentation/programming-guide/#cogroupbykey\">\n+    \"CoGroupByKey\"</a> section for more information.\n+</div>\n+\n+<div class=\"hint\">\n+  Think of this problem in three stages.  First, create key/value pairs of PCollections called KV\n+  for fruits and countries, pairing the first character with the word.  Next, apply CoGroupByKey to the KVs\n+  followed by a ParDo.\n+</div>\n+\n+<div class=\"hint\">\n+  In the last lesson we learned how to make key/value PCollections called KV.  Now we have \n+  two to make from fruits and countries.\n+  \n+  To return as a KV, you can return two values from your DoFn. The first return value represents the Key, and \n+  the second return value represents the Value.  An example is shown below.\n+  \n+```\n+func doFn(element string) (string, string) {\n+    key := string(element[0])\n+    value := element\n+    return key, value\n+}\n+``` \n+</div>\n+\n+<div class=\"hint\">\n+  In the last lesson we learned that \n+  <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#GroupByKey\">\n+  beam.GroupByKey</a> takes a single KV.\n+  <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#CoGroupByKey\">beam.CoGroupByKey</a>\n+  takes more than one KV.\n+</div>\n+\n+<div class=\"hint\">\n+  Our final step in this problem requires a\n+  <a href=\"https://godoc.org/github.com/apache/beam/sdks/go/pkg/beam#ParDo\">beam.ParDo</a>\n+  with a DoFn that's different than what we've seen in previous lessons.  In the previous step we should\n+  have a PCollection acquired from CoGroupByKey.  A ParDo for that PCollection expects a DoFn that looks\n+  like the following. \n+  \n+  ```\n+  func doFn(key string, aKV func(*string) bool, anotherKV func(*string) bool, emit func(string)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0efc7ce5ff702dec9c6d2dda50d16aa518d96c"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b0895e43d156ad02ecc0004c042b8b058e692b", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/69b0895e43d156ad02ecc0004c042b8b058e692b", "committedDate": "2020-05-26T14:38:25Z", "message": "Update go versions in go.mod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ab1a8712297bb4daa3c34339965e9a8a7dc804c", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/1ab1a8712297bb4daa3c34339965e9a8a7dc804c", "committedDate": "2020-05-26T18:48:03Z", "message": "Rename variables to improve readability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MjY1NDU3", "url": "https://github.com/apache/beam/pull/11803#pullrequestreview-419265457", "createdAt": "2020-05-27T14:25:53Z", "commit": {"oid": "1ab1a8712297bb4daa3c34339965e9a8a7dc804c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f54b73f14dee589baf3d9b6e287f8fcc20359020", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/f54b73f14dee589baf3d9b6e287f8fcc20359020", "committedDate": "2020-05-28T22:21:35Z", "message": "Merge branch 'master' into BEAM-9679-core-transform-cogroupbykey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d7ee241f395a41fbff0a1d7da1154f7f6efdf86", "author": {"user": {"login": "damondouglas", "name": "Damon Douglas"}}, "url": "https://github.com/apache/beam/commit/3d7ee241f395a41fbff0a1d7da1154f7f6efdf86", "committedDate": "2020-05-28T22:34:45Z", "message": "Update Go SDK stepik course"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4303, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}