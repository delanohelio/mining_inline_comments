{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTg5OTg4", "number": 13083, "title": "[BEAM-7034] Add example snippet to read fromQuery using BQ Storage API.", "bodyText": "Jira ticket was resolved but the docs haven't been updated accordingly with a snippet.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-10-13T10:46:35Z", "url": "https://github.com/apache/beam/pull/13083", "merged": true, "mergeCommit": {"oid": "f24ebd3ea4e2485013c19aa700fed040ceefa5cc"}, "closed": true, "closedAt": "2021-01-28T17:10:21Z", "author": {"login": "fpopic"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSGPLigH2gAyNTAyMTg5OTg4OjAxYjc1OTYyMDQyZTk4YWUwOWQ2NzQ1MTM2ZTQ0ZWEyYTIzOTNhM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd0V7cfAH2gAyNTAyMTg5OTg4OjNjMTViZjNiYjYwOWNhNTFhOWM3ODYwZjE1NmEyYzg4NTk2OWViNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01b75962042e98ae09d6745136e44ea2a2393a3f", "author": {"user": {"login": "fpopic", "name": "Filip Popi\u0107"}}, "url": "https://github.com/apache/beam/commit/01b75962042e98ae09d6745136e44ea2a2393a3f", "committedDate": "2020-10-13T10:43:53Z", "message": "Add example snippets to read fromQuery using BQ Storage API."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "393bbdeef9148266082b0211f87869656213a942", "author": {"user": {"login": "fpopic", "name": "Filip Popi\u0107"}}, "url": "https://github.com/apache/beam/commit/393bbdeef9148266082b0211f87869656213a942", "committedDate": "2020-10-13T12:15:49Z", "message": "Make the query example consistent with the previous one for the table."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NTk5MTE1", "url": "https://github.com/apache/beam/pull/13083#pullrequestreview-529599115", "createdAt": "2020-11-12T23:56:33Z", "commit": {"oid": "393bbdeef9148266082b0211f87869656213a942"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzo1NjozNFrOHyT2jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzo1NjozNFrOHyT2jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNjEwOA==", "bodyText": "I would avoid using readTableRows in an example snippet, both for the storage API and also for the existing export-based model -- this involves a needless conversion from Avro to JSON, where customers should instead be able to consume the Avro GenericRecords directly.", "url": "https://github.com/apache/beam/pull/13083#discussion_r522516108", "createdAt": "2020-11-12T23:56:34Z", "author": {"login": "kmjung"}, "path": "examples/java/src/main/java/org/apache/beam/examples/snippets/transforms/io/gcp/bigquery/BigQueryReadFromQueryWithBigQueryStorageAPI.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.examples.snippets.transforms.io.gcp.bigquery;\n+\n+// [START bigquery_read_from_query_with_bigquery_storage_api]\n+\n+import java.util.Arrays;\n+import org.apache.beam.examples.snippets.transforms.io.gcp.bigquery.BigQueryMyData.MyData;\n+import org.apache.beam.sdk.Pipeline;\n+import org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO;\n+import org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.TypedRead.Method;\n+import org.apache.beam.sdk.transforms.MapElements;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.TypeDescriptor;\n+\n+class BigQueryReadFromQueryWithBigQueryStorageAPI {\n+  public static PCollection<MyData> readFromQueryWithBigQueryStorageAPI(\n+          String project, String dataset, String table, String query, Pipeline pipeline) {\n+\n+    // String project = \"my-project-id\";\n+    // String dataset = \"my_bigquery_dataset_id\";\n+    // String table = \"my_bigquery_table_id\";\n+\n+    // Pipeline pipeline = Pipeline.create();\n+\n+    /*\n+    String query = String.format(\"SELECT\\n\" +\n+        \"  string_field,\\n\" +\n+        \"  int64_field,\\n\" +\n+        \"  float64_field,\\n\" +\n+        \"  numeric_field,\\n\" +\n+        \"  bool_field,\\n\" +\n+        \"  bytes_field,\\n\" +\n+        \"  date_field,\\n\" +\n+        \"  datetime_field,\\n\" +\n+        \"  time_field,\\n\" +\n+        \"  timestamp_field,\\n\" +\n+        \"  geography_field,\\n\" +\n+        \"  array_field,\\n\" +\n+        \"  struct_field\\n\" +\n+        \"FROM\\n\" +\n+        \"  `%s:%s.%s`\", project, dataset, table)\n+    */\n+\n+    PCollection<MyData> rows =\n+        pipeline\n+            .apply(\n+                \"Read from BigQuery table\",\n+                BigQueryIO.readTableRows()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "393bbdeef9148266082b0211f87869656213a942"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c15bf3bb609ca51a9c7860f156a2c885969eb67", "author": {"user": {"login": "fpopic", "name": "Filip Popi\u0107"}}, "url": "https://github.com/apache/beam/commit/3c15bf3bb609ca51a9c7860f156a2c885969eb67", "committedDate": "2021-01-27T20:14:14Z", "message": "Run spotelessApply."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1992, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}