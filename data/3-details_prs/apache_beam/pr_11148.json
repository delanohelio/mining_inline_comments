{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMDg0MzU0", "number": 11148, "title": "[BEAM-8335] Adds a streaming wordcount integration test", "bodyText": "Change-Id: I9fe25f2875eaa32e0cc19e9b4862b86477f7b8e7\nAdds a simple streaming wordcount integration test to the interactive_runner_test. This tests all necessary components (streaming cache, background caching job, test stream, test stream service, etc.).\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-17T21:21:59Z", "url": "https://github.com/apache/beam/pull/11148", "merged": true, "mergeCommit": {"oid": "0edd1e12e14ffca8d3bdccd8dbe05f8c592aea64"}, "closed": true, "closedAt": "2020-03-25T00:10:04Z", "author": {"login": "rohdesamuel"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOpgy2gBqjMxMzkxMTk0ODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ72OjAH2gAyMzkwMDg0MzU0OmE1NzNlNjE5ZTA4ZDE1MjdiNzMyY2JlZjNhZDVhNTkxMWY3YWYzZTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fee93256fcedffa7c780b8b26f7927644421b7b7", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/fee93256fcedffa7c780b8b26f7927644421b7b7", "committedDate": "2020-03-17T21:21:29Z", "message": "First test, still broken. Is it reading from cache?\n\nChange-Id: I9fe25f2875eaa32e0cc19e9b4862b86477f7b8e7"}, "afterCommit": {"oid": "22724c37eae286fd6aec2b5180f3f09537085faf", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/22724c37eae286fd6aec2b5180f3f09537085faf", "committedDate": "2020-03-17T21:22:36Z", "message": "First test, still broken. Is it reading from cache?\n\nChange-Id: I9fe25f2875eaa32e0cc19e9b4862b86477f7b8e7"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "886eae28b8aea2ba1d4229df1fe00a674b8b5b32", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/886eae28b8aea2ba1d4229df1fe00a674b8b5b32", "committedDate": "2020-03-18T16:55:58Z", "message": "does adding the context help?\n\nChange-Id: Ib7ed427b4a9a82227865eba5ae335461324426dc"}, "afterCommit": {"oid": "01e967d9d5a1e97d92c328d3a29055c7745a1415", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/01e967d9d5a1e97d92c328d3a29055c7745a1415", "committedDate": "2020-03-20T23:55:25Z", "message": "cleanup and simplify\n\nChange-Id: Ic94d2968039776679c65816e6245624291b1ecef"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01e967d9d5a1e97d92c328d3a29055c7745a1415", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/01e967d9d5a1e97d92c328d3a29055c7745a1415", "committedDate": "2020-03-20T23:55:25Z", "message": "cleanup and simplify\n\nChange-Id: Ic94d2968039776679c65816e6245624291b1ecef"}, "afterCommit": {"oid": "282f1cf06a948a93307204835b25ffc691dfe5c2", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/282f1cf06a948a93307204835b25ffc691dfe5c2", "committedDate": "2020-03-23T19:19:08Z", "message": "Adds a streaming wordcount integration test\n\nChange-Id: Id5bb36fc62ecede3306902807c069b8e705d39fb"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "282f1cf06a948a93307204835b25ffc691dfe5c2", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/282f1cf06a948a93307204835b25ffc691dfe5c2", "committedDate": "2020-03-23T19:19:08Z", "message": "Adds a streaming wordcount integration test\n\nChange-Id: Id5bb36fc62ecede3306902807c069b8e705d39fb"}, "afterCommit": {"oid": "7dec47932107897d1cfc25442e7a7e80e225bfce", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/7dec47932107897d1cfc25442e7a7e80e225bfce", "committedDate": "2020-03-23T19:40:10Z", "message": "Adds a streaming wordcount integration test\n\nChange-Id: Id5bb36fc62ecede3306902807c069b8e705d39fb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06c365026fc255b6ccc1fbc800b76d3ab6445ba2", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/06c365026fc255b6ccc1fbc800b76d3ab6445ba2", "committedDate": "2020-03-23T19:58:50Z", "message": "Adds a streaming wordcount integration test\n\nChange-Id: Id5bb36fc62ecede3306902807c069b8e705d39fb"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7dec47932107897d1cfc25442e7a7e80e225bfce", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/7dec47932107897d1cfc25442e7a7e80e225bfce", "committedDate": "2020-03-23T19:40:10Z", "message": "Adds a streaming wordcount integration test\n\nChange-Id: Id5bb36fc62ecede3306902807c069b8e705d39fb"}, "afterCommit": {"oid": "06c365026fc255b6ccc1fbc800b76d3ab6445ba2", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/06c365026fc255b6ccc1fbc800b76d3ab6445ba2", "committedDate": "2020-03-23T19:58:50Z", "message": "Adds a streaming wordcount integration test\n\nChange-Id: Id5bb36fc62ecede3306902807c069b8e705d39fb"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODE2MzU3", "url": "https://github.com/apache/beam/pull/11148#pullrequestreview-379816357", "createdAt": "2020-03-23T20:57:32Z", "commit": {"oid": "06c365026fc255b6ccc1fbc800b76d3ab6445ba2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo1NzozMlrOF6XztA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo1ODo0M1rOF6X2eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc1MTc5Ng==", "bodyText": "Does this not trigger the capture duration?", "url": "https://github.com/apache/beam/pull/11148#discussion_r396751796", "createdAt": "2020-03-23T20:57:32Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_runner_test.py", "diffHunk": "@@ -147,6 +150,97 @@ def process(self, element):\n     ]\n     self.assertEqual(actual_reified, expected_reified)\n \n+  def test_streaming_wordcount(self):\n+    class WordExtractingDoFn(beam.DoFn):\n+      def process(self, element):\n+        text_line = element.strip()\n+        words = text_line.split()\n+        return words\n+\n+    # Add the TestStream so that it can be cached.\n+    ib.options.capturable_sources.add(TestStream)\n+    ib.options.capture_duration = timedelta(seconds=1)\n+\n+    p = beam.Pipeline(\n+        runner=interactive_runner.InteractiveRunner(),\n+        options=StandardOptions(streaming=True))\n+\n+    data = (\n+        p\n+        | TestStream()\n+            .advance_watermark_to(0)\n+            .advance_processing_time(1)\n+            .add_elements(['to', 'be', 'or', 'not', 'to', 'be'])\n+            .advance_watermark_to(20)\n+            .advance_processing_time(1)\n+            .add_elements(['to', 'be', 'or', 'not', 'to', 'be'])\n+            .advance_watermark_to(40)\n+            .advance_processing_time(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c365026fc255b6ccc1fbc800b76d3ab6445ba2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc1MjA4MQ==", "bodyText": "Why is this need?", "url": "https://github.com/apache/beam/pull/11148#discussion_r396752081", "createdAt": "2020-03-23T20:58:00Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_runner_test.py", "diffHunk": "@@ -147,6 +150,97 @@ def process(self, element):\n     ]\n     self.assertEqual(actual_reified, expected_reified)\n \n+  def test_streaming_wordcount(self):\n+    class WordExtractingDoFn(beam.DoFn):\n+      def process(self, element):\n+        text_line = element.strip()\n+        words = text_line.split()\n+        return words\n+\n+    # Add the TestStream so that it can be cached.\n+    ib.options.capturable_sources.add(TestStream)\n+    ib.options.capture_duration = timedelta(seconds=1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c365026fc255b6ccc1fbc800b76d3ab6445ba2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc1MjUwNg==", "bodyText": "It'd be easier to understand the test if there were less data.", "url": "https://github.com/apache/beam/pull/11148#discussion_r396752506", "createdAt": "2020-03-23T20:58:43Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_runner_test.py", "diffHunk": "@@ -147,6 +150,97 @@ def process(self, element):\n     ]\n     self.assertEqual(actual_reified, expected_reified)\n \n+  def test_streaming_wordcount(self):\n+    class WordExtractingDoFn(beam.DoFn):\n+      def process(self, element):\n+        text_line = element.strip()\n+        words = text_line.split()\n+        return words\n+\n+    # Add the TestStream so that it can be cached.\n+    ib.options.capturable_sources.add(TestStream)\n+    ib.options.capture_duration = timedelta(seconds=1)\n+\n+    p = beam.Pipeline(\n+        runner=interactive_runner.InteractiveRunner(),\n+        options=StandardOptions(streaming=True))\n+\n+    data = (\n+        p\n+        | TestStream()\n+            .advance_watermark_to(0)\n+            .advance_processing_time(1)\n+            .add_elements(['to', 'be', 'or', 'not', 'to', 'be'])\n+            .advance_watermark_to(20)\n+            .advance_processing_time(1)\n+            .add_elements(['to', 'be', 'or', 'not', 'to', 'be'])\n+            .advance_watermark_to(40)\n+            .advance_processing_time(1)\n+            .add_elements(['to', 'be', 'or', 'not', 'to', 'be'])\n+        | beam.WindowInto(beam.window.FixedWindows(10))) # yapf: disable\n+\n+    counts = (\n+        data\n+        | 'split' >> beam.ParDo(WordExtractingDoFn())\n+        | 'pair_with_one' >> beam.Map(lambda x: (x, 1))\n+        | 'group' >> beam.GroupByKey()\n+        | 'count' >> beam.Map(lambda wordones: (wordones[0], sum(wordones[1]))))\n+\n+    # Watch the local scope for Interactive Beam so that referenced PCollections\n+    # will be cached.\n+    ib.watch(locals())\n+\n+    # This is normally done in the interactive_utils when a transform is\n+    # applied but needs an IPython environment. So we manually run this here.\n+    ie.current_env().track_user_pipelines()\n+\n+    # This tests that the data was correctly cached.\n+    pane_info = PaneInfo(True, True, PaneInfoTiming.UNKNOWN, 0, 0)\n+    expected_data_df = pd.DataFrame(\n+        [('to', 0, [beam.window.IntervalWindow(0, 10)], pane_info),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c365026fc255b6ccc1fbc800b76d3ab6445ba2"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a573e619e08d1527b732cbef3ad5a5911f7af3e7", "author": {"user": {"login": "rohdesamuel", "name": "Sam sam"}}, "url": "https://github.com/apache/beam/commit/a573e619e08d1527b732cbef3ad5a5911f7af3e7", "committedDate": "2020-03-24T23:52:30Z", "message": "changed data to be less repetitive\n\nChange-Id: I48d41a7165be3239ba300cc300bf0808ecde95c9"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4981, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}