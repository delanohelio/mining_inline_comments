{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTE5Mzkx", "number": 13448, "title": "[BEAM-9187] Address flake in loadBalancesBundles", "bodyText": "See my comment on BEAM-9187 for an explanation of what seems to have caused the flakes:\n\nIt seems that, in the error case, what's happening is as soon as the forked thread releases the semaphore here, the main thread continues, creating the bundle, and then making the assertions. However since we left the forked thread, it never got out of the b2.close() call and set the boolean.\n\nThis PR addresses it by replacing the TimerTask and AtomicBoolean with a ScheduledFuture. We then make an assertion on the result of the scheduled future, including a small delay to make sure the main thread will block and give the forked thread a chance to run.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-01T01:56:30Z", "url": "https://github.com/apache/beam/pull/13448", "merged": true, "mergeCommit": {"oid": "9bd4a427f4f91d486691d4cd5410438f67c22536"}, "closed": true, "closedAt": "2020-12-30T23:20:02Z", "author": {"login": "TheNeuralBit"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhv_4bgH2gAyNTI5OTE5MzkxOjMyOTJiZDBiYjkxNTMyMmEzNDEzNDc2ZmE1NzMyM2E0NmFlYzE5MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrXAlZAH2gAyNTI5OTE5MzkxOjEzN2ViMDlkM2FiY2Y0NTU3NTNkZWNkZjI4MGY4ODgxYzI3ODFjOWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3292bd0bb915322a3413476fa57323a46aec1905", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/3292bd0bb915322a3413476fa57323a46aec1905", "committedDate": "2020-12-01T01:52:03Z", "message": "address flake in loadBalancesBundles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDM1NjA1", "url": "https://github.com/apache/beam/pull/13448#pullrequestreview-541435605", "createdAt": "2020-12-01T02:05:56Z", "commit": {"oid": "3292bd0bb915322a3413476fa57323a46aec1905"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjowNTo1N1rOH8VQ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjoxMTo1OFrOH8VYMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNDk3Nw==", "bodyText": "nit: You can drop this, Future will catch exceptions, wrap them in a ExecutionException and throw them out of get.", "url": "https://github.com/apache/beam/pull/13448#discussion_r533024977", "createdAt": "2020-12-01T02:05:57Z", "author": {"login": "apilloud"}, "path": "runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java", "diffHunk": "@@ -459,27 +461,28 @@ public void loadBalancesBundles() throws Exception {\n       verify(envFactory, Mockito.times(2)).createEnvironment(eq(environment), any());\n \n       long tms = System.currentTimeMillis();\n-      AtomicBoolean closed = new AtomicBoolean();\n-      // close to free up environment for another bundle\n-      TimerTask closeBundleTask =\n-          new TimerTask() {\n-            @Override\n-            public void run() {\n-              try {\n-                b2.close();\n-                closed.set(true);\n-              } catch (Exception e) {\n-                throw new RuntimeException(e);\n-              }\n-            }\n-          };\n-      new Timer().schedule(closeBundleTask, 100);\n-\n+      ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();\n+      ScheduledFuture<Optional<Exception>> closingFuture =\n+          executor.schedule(\n+              () -> {\n+                try {\n+                  b2.close();\n+                  return Optional.empty();\n+                } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3292bd0bb915322a3413476fa57323a46aec1905"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNjg2Nw==", "bodyText": "nit: Small delays lead to flakes, for example if the system is busy and doesn't get back to the forked thread. Does having a small timeout add any value here? Could you just block?", "url": "https://github.com/apache/beam/pull/13448#discussion_r533026867", "createdAt": "2020-12-01T02:11:58Z", "author": {"login": "apilloud"}, "path": "runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java", "diffHunk": "@@ -459,27 +461,28 @@ public void loadBalancesBundles() throws Exception {\n       verify(envFactory, Mockito.times(2)).createEnvironment(eq(environment), any());\n \n       long tms = System.currentTimeMillis();\n-      AtomicBoolean closed = new AtomicBoolean();\n-      // close to free up environment for another bundle\n-      TimerTask closeBundleTask =\n-          new TimerTask() {\n-            @Override\n-            public void run() {\n-              try {\n-                b2.close();\n-                closed.set(true);\n-              } catch (Exception e) {\n-                throw new RuntimeException(e);\n-              }\n-            }\n-          };\n-      new Timer().schedule(closeBundleTask, 100);\n-\n+      ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();\n+      ScheduledFuture<Optional<Exception>> closingFuture =\n+          executor.schedule(\n+              () -> {\n+                try {\n+                  b2.close();\n+                  return Optional.empty();\n+                } catch (Exception e) {\n+                  return Optional.of(e);\n+                }\n+              },\n+              100,\n+              TimeUnit.MILLISECONDS);\n+\n+      // This call should block until closingFuture has finished closing b2\n       RemoteBundle b3 = sbf.getBundle(orf, srh, BundleProgressHandler.ignored());\n \n-      // ensure we waited for close\n+      // ensure the previous call waited for close\n       Assert.assertThat(System.currentTimeMillis() - tms, greaterThanOrEqualTo(100L));\n-      Assert.assertThat(closed.get(), is(true));\n+      // This assertion includes a small delay to give the forked thread a chance to finish if it's\n+      // been blocked\n+      Assert.assertThat(closingFuture.get(1, TimeUnit.MILLISECONDS), equalTo(Optional.empty()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3292bd0bb915322a3413476fa57323a46aec1905"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9b381a38815587b7b78a9d017695ac163eb45a1", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/d9b381a38815587b7b78a9d017695ac163eb45a1", "committedDate": "2020-12-30T21:48:00Z", "message": "Merge remote-tracking branch 'origin/master' into beam-9187"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "137eb09d3abcf455753decdf280f8881c2781c9e", "author": {"user": {"login": "TheNeuralBit", "name": "Brian Hulette"}}, "url": "https://github.com/apache/beam/commit/137eb09d3abcf455753decdf280f8881c2781c9e", "committedDate": "2020-12-30T22:24:26Z", "message": "Check for close with AtomicBoolean"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4657, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}