{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDAyNjY5", "number": 11050, "title": "[BEAM-8335] Implemented Capture Size limitation", "bodyText": "Capture cache size is calculated as a property from StreamingCacheSinks and\nshould be implemented by any other sink implementations in the future.\nFor each capture cache, if it doesn't exist, the size is 0.\nIf the cache manager doesn't exist or doesn't support capture_size,\nthe capture size configured in ib.options would not take effect as if\ncapture cache size stays 0.\nCaptured data from sources are stored like intermediate PCollections.\nThe capture cache size does not include intermediate PCollections'\ndisk usages.\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-03-05T00:30:21Z", "url": "https://github.com/apache/beam/pull/11050", "merged": true, "mergeCommit": {"oid": "8f9bdee08d0b2500c4aea1452d5c393ff7cb7bd6"}, "closed": true, "closedAt": "2020-03-12T22:57:48Z", "author": {"login": "KevinGG"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKiCrEgFqTM2OTI1NjQ1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNAVKogH2gAyMzg0MDAyNjY5OjU4YjVlZTNlNGYyOTg2NzlkYmQzMjE4NzIyODBjMmNhZmJjNDQ2Yjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MjU2NDU2", "url": "https://github.com/apache/beam/pull/11050#pullrequestreview-369256456", "createdAt": "2020-03-05T02:20:58Z", "commit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyMDo1OFrOFyEZwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjoyNDo1OFrOFyEdmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI0OQ==", "bodyText": "Maybe log here?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045249", "createdAt": "2020-03-05T02:20:58Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size\n+    except:\n+      return 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI3OQ==", "bodyText": "Does this work in all OSes?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045279", "createdAt": "2020-03-05T02:21:07Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTc4NA==", "bodyText": "Shoulds this have \"limit\" or \"max\" in its name, or something to indicate that this is an upper limit.", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045784", "createdAt": "2020-03-05T02:23:14Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -88,7 +88,22 @@ def capture_duration(self, value):\n     \"\"\"\n     self.capture_control._capture_duration = value\n \n-  # TODO(BEAM-8335): add capture_size options when they are supported.\n+  @property\n+  def capture_size(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjE1Mw==", "bodyText": "Should this be moved inside the if below? Is it used anywhere else?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388046153", "createdAt": "2020-03-05T02:24:42Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -259,21 +269,31 @@ def is_source_to_cache_changed(\n   # The computation of extract_unbounded_source_signature is expensive, track on\n   # change by default.\n   if is_changed and update_cached_source_signature:\n-    if ie.current_env().options.enable_capture_replay:\n-      # TODO(BEAM-8335): display rather than logging when is_in_notebook.\n+    options = ie.current_env().options\n+    # No info needed when capture replay is disabled.\n+    if options.enable_capture_replay:\n+\n+      def sizeof_fmt(num, suffix='B'):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjIzNA==", "bodyText": "Do you mean to pass is_cache_complete() or is_cache_complete ?", "url": "https://github.com/apache/beam/pull/11050#discussion_r388046234", "createdAt": "2020-03-05T02:24:58Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -202,10 +202,20 @@ def has_source_to_cache(user_pipeline):\n   if has_cache:\n     if not isinstance(ie.current_env().cache_manager(),\n                       streaming_cache.StreamingCache):\n-      # TODO(BEAM-8335): convert the cache manager into a streaming cache\n-      # manager. Note this does not invalidate the current cache including the\n-      # source data capture.\n-      pass\n+      # Wrap the cache manager into a streaming cache manager. Note this\n+      # does not invalidate the current cache manager.\n+      def is_cache_complete():\n+        job = ie.current_env().get_background_caching_job(user_pipeline)\n+        is_done = job and job.is_done()\n+        cache_changed = is_source_to_cache_changed(\n+            user_pipeline, update_cached_source_signature=False)\n+        return is_done and not cache_changed\n+\n+      ie.current_env().set_cache_manager(\n+          streaming_cache.StreamingCache(\n+              ie.current_env().cache_manager()._cache_dir,\n+              is_cache_complete=is_cache_complete,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d9e2382eeea148b3f667726f8e8e8933a7196c"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50deeb57d33f5a5186d7d938bb617c65d78d0482", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/50deeb57d33f5a5186d7d938bb617c65d78d0482", "committedDate": "2020-03-05T19:16:43Z", "message": "Changes based on comments\n\nChange-Id: If24d2d9aa97dce94a97673ef7df70e6eeaf12b81"}, "afterCommit": {"oid": "333640069edc046cd4393df01a156b359a6310ba", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/333640069edc046cd4393df01a156b359a6310ba", "committedDate": "2020-03-12T17:15:12Z", "message": "Changes based on comments\n\nChange-Id: If24d2d9aa97dce94a97673ef7df70e6eeaf12b81"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "committedDate": "2020-03-12T17:30:10Z", "message": "[BEAM-8335] Implemented Capture Size limitation\n\n1. Capture cache size is calculated as a property from\nStreamingCacheSinks and\n   should be implemented by any other sink implementations in the\nfuture.\n2. For each capture cache, if it doesn't exist, the size is 0.\n3. If the cache manager doesn't exist or doesn't support capture_size,\n   the capture size configured in ib.options would not take effect as if\n   capture cache size stays 0.\n4. Captured data from sources are stored like intermediate PCollections.\n   The capture cache size does not include intermediate PCollections'\n   disk usages."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "333640069edc046cd4393df01a156b359a6310ba", "author": {"user": null}, "url": "https://github.com/apache/beam/commit/333640069edc046cd4393df01a156b359a6310ba", "committedDate": "2020-03-12T17:15:12Z", "message": "Changes based on comments\n\nChange-Id: If24d2d9aa97dce94a97673ef7df70e6eeaf12b81"}, "afterCommit": {"oid": "1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "committedDate": "2020-03-12T17:30:10Z", "message": "[BEAM-8335] Implemented Capture Size limitation\n\n1. Capture cache size is calculated as a property from\nStreamingCacheSinks and\n   should be implemented by any other sink implementations in the\nfuture.\n2. For each capture cache, if it doesn't exist, the size is 0.\n3. If the cache manager doesn't exist or doesn't support capture_size,\n   the capture size configured in ib.options would not take effect as if\n   capture cache size stays 0.\n4. Captured data from sources are stored like intermediate PCollections.\n   The capture cache size does not include intermediate PCollections'\n   disk usages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58b5ee3e4f298679dbd321872280c2cafbc446b8", "author": {"user": {"login": "KevinGG", "name": "Ning Kang"}}, "url": "https://github.com/apache/beam/commit/58b5ee3e4f298679dbd321872280c2cafbc446b8", "committedDate": "2020-03-12T18:50:13Z", "message": "fix lint"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3035, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}