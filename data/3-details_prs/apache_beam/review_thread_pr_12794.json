{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzI1OTg5", "number": 12794, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjoyODoyN1rOEiMsmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMToxMDowM1rOEl1xWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mjk1MDY0OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/kafka/src/main/java/org/apache/beam/sdk/io/kafka/ConsumerSpEL.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjoyODoyN1rOHP8NZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjoyODoyN1rOHP8NZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NzE1OQ==", "bodyText": "Why does this matter that it is a default method?\nShouldn't we be setting this to true as long as the method exists?", "url": "https://github.com/apache/beam/pull/12794#discussion_r486477159", "createdAt": "2020-09-10T16:28:27Z", "author": {"login": "lukecwik"}, "path": "sdks/java/io/kafka/src/main/java/org/apache/beam/sdk/io/kafka/ConsumerSpEL.java", "diffHunk": "@@ -90,6 +98,16 @@ public ConsumerSpEL() {\n     } catch (NoSuchMethodException | SecurityException e) {\n       LOG.debug(\"OffsetsForTimes is not available.\");\n     }\n+\n+    try {\n+      // It is supported by Kafka Client 2.1.0 onwards.\n+      Method method =\n+          Deserializer.class.getDeclaredMethod(\n+              \"deserialize\", String.class, Headers.class, byte[].class);\n+      deserializerSupportsHeaders = method.isDefault();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6bb41dd46d605e7b23e260c4f0e66b9a18f18bf"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mjk2NzI4OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/kafka/src/test/java/org/apache/beam/sdk/io/kafka/KafkaIOTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozMjo0MVrOHP8X3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozMjo0MVrOHP8X3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3OTgzOQ==", "bodyText": "In the build.gradle you'll want to setup a junit test run that uses Kafka 2.1.0 and executes these tests.\nThis is a pretty good example of how to get this going:\nhttps://docs.gradle.org/current/userguide/java_testing.html#sec:configuring_java_integration_tests\nYou shouldn't need any additional source sets but you'll want to add a configuration for kafka210 that adds the dependency and also the test task that uses it.", "url": "https://github.com/apache/beam/pull/12794#discussion_r486479839", "createdAt": "2020-09-10T16:32:41Z", "author": {"login": "lukecwik"}, "path": "sdks/java/io/kafka/src/test/java/org/apache/beam/sdk/io/kafka/KafkaIOTest.java", "diffHunk": "@@ -501,6 +503,83 @@ public void testReadAvroSpecificRecordsWithConfluentSchemaRegistry() {\n     p.run();\n   }\n \n+  public static class IntegerDeserializerWithHeadersAssertor extends IntegerDeserializer\n+      implements Deserializer<Integer> {\n+    ConsumerSpEL consumerSpEL = null;\n+\n+    @Override\n+    public Integer deserialize(String topic, byte[] data) {\n+      StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6bb41dd46d605e7b23e260c4f0e66b9a18f18bf"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDUwNDU4OnYy", "diffSide": "RIGHT", "path": "sdks/java/io/kafka/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowMjozNlrOHVceAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowMjozNlrOHVceAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0ODU3Nw==", "bodyText": "Can we run all the unit tests?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              include '**/KafkaIOTest.class'\n          \n          \n            \n              include '**/KafkaIOTest.class'", "url": "https://github.com/apache/beam/pull/12794#discussion_r492248577", "createdAt": "2020-09-21T18:02:36Z", "author": {"login": "lukecwik"}, "path": "sdks/java/io/kafka/build.gradle", "diffHunk": "@@ -64,4 +69,24 @@ dependencies {\n   testCompile library.java.powermock_mockito\n   testRuntimeOnly library.java.slf4j_jdk14\n   testRuntimeOnly project(path: \":runners:direct-java\", configuration: \"shadow\")\n+  kafkaVersion210 \"org.apache.kafka:kafka-clients:2.1.0\"\n+}\n+\n+configurations.kafkaVersion210 {\n+  resolutionStrategy {\n+    force \"org.apache.kafka:kafka-clients:2.1.0\"\n+  }\n+}\n+\n+task kafkaVersion210Test(type: Test) {\n+  group = \"Verification\"\n+  description = 'Runs KafkaIO tests with Kafka clients API 2.1.0'\n+  outputs.upToDateWhen { false }\n+  testClassesDirs = sourceSets.test.output.classesDirs\n+  classpath =  configurations.kafkaVersion210 + sourceSets.test.runtimeClasspath\n+  include '**/KafkaIOTest.class'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3bddff2f6b326d376914e0d315e53b97e12f729"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTEzNzUyOnYy", "diffSide": "RIGHT", "path": "sdks/java/io/kafka/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMToxMDowM1rOHVih6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMToxMDowM1rOHVih6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0Nzg4Mg==", "bodyText": "Instead of doing outputs.upToDateWhen { false } to have this run every time, please include the set of inputs/outputs that makes sense in a follow-up PR so that an incremental build can be supported.", "url": "https://github.com/apache/beam/pull/12794#discussion_r492347882", "createdAt": "2020-09-21T21:10:03Z", "author": {"login": "lukecwik"}, "path": "sdks/java/io/kafka/build.gradle", "diffHunk": "@@ -64,4 +69,24 @@ dependencies {\n   testCompile library.java.powermock_mockito\n   testRuntimeOnly library.java.slf4j_jdk14\n   testRuntimeOnly project(path: \":runners:direct-java\", configuration: \"shadow\")\n+  kafkaVersion210 \"org.apache.kafka:kafka-clients:2.1.0\"\n+}\n+\n+configurations.kafkaVersion210 {\n+  resolutionStrategy {\n+    force \"org.apache.kafka:kafka-clients:2.1.0\"\n+  }\n+}\n+\n+task kafkaVersion210Test(type: Test) {\n+  group = \"Verification\"\n+  description = 'Runs KafkaIO tests with Kafka clients API 2.1.0'\n+  outputs.upToDateWhen { false }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3bddff2f6b326d376914e0d315e53b97e12f729"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 485, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}