{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDMyODI5", "number": 11674, "title": "[BEAM-9958] Linkage Checker to use exclusion files as baseline", "bodyText": "Linkage Checker 1.4.0 has function to take exclusion file to filter out existing linkage errors. This functionality eliminates the need of running diff command in beam-linkage-check.sh.\nExample invocation: https://gist.github.com/suztomo/b4328d06136515455525e13d2be15f28 in which I renamed \"origin\" to my GitHub repository clone to compare a dummy branch with \"origin/master\".\nThis PR opens up an opportunity to set up\u00a0a Jenkins job to check dependency conflicts.\nI'm happy to update https://cwiki.apache.org/confluence/display/BEAM/Dependency+Upgrades accordingly. (Note to myself: I'll need to ask edit access to Confluence (suztomo) in mailing list once this PR is merged)\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-05-12T01:29:49Z", "url": "https://github.com/apache/beam/pull/11674", "merged": true, "mergeCommit": {"oid": "9b93f1a20cf92d7b357e769d40d7b94cb7f71968"}, "closed": true, "closedAt": "2020-05-19T19:57:41Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgZVEhAH2gAyNDE2NDMyODI5OmQxODE4OTlhZWIxODJhYmQzMzM4NDFjODUwNTE1NGM4YmUxOTkxNTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcipmbFgFqTQxNDAyODE3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d181899aeb182abd333841c8505154c8be199155", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/apache/beam/commit/d181899aeb182abd333841c8505154c8be199155", "committedDate": "2020-05-12T00:42:18Z", "message": "Linkage Checker to use baseline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjQxMTI1", "url": "https://github.com/apache/beam/pull/11674#pullrequestreview-409641125", "createdAt": "2020-05-12T01:35:32Z", "commit": {"oid": "d181899aeb182abd333841c8505154c8be199155"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMTozNTozM1rOGTzEww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMTozNTozM1rOGTzEww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQxMjkzMQ==", "bodyText": "No need to compare the output with diff command any more.", "url": "https://github.com/apache/beam/pull/11674#discussion_r423412931", "createdAt": "2020-05-12T01:35:33Z", "author": {"login": "suztomo"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -66,51 +66,58 @@ if [ ! -z \"$(git diff)\" ]; then\n   exit 1\n fi\n \n+ACCUMULATED_RESULT=0\n+\n function runLinkageCheck () {\n   COMMIT=$1\n   BRANCH=$2\n+  MODE=$3 # baseline or validate\n   # An empty invocation so that the subsequent checkJavaLinkage does not\n   # contain garbage\n   echo \"`date`:\" \"Installing artifacts of ${BRANCH}(${COMMIT}) to Maven local repository.\"\n-  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core :checkJavaLinkage > /dev/null 2>&1\n+  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core -PjavaLinkageWriteBaseline=/dev/null :checkJavaLinkage > /dev/null 2>&1\n   for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check for ${ARTIFACT} in ${BRANCH}\"\n-    # Removing time taken to have clean diff\n-    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT :checkJavaLinkage |grep -v 'BUILD SUCCESSFUL in' | grep -v 'dependency paths' > ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\n-    echo \"`date`:\" \"Done: ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\"\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+    if [ \"$MODE\" = \"baseline\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageWriteBaseline'\n+      echo \"`date`:\" \"to create a baseline (existing errors before change) $BASELINE_FILE\"\n+    elif [ \"$MODE\" = \"validate\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageReadBaseline'\n+      echo \"`date`:\" \"using baseline $BASELINE_FILE\"\n+    else\n+      echo \"invalid parameter for runLinkageCheck: ${MODE}\"\n+      exit 1\n+    fi\n+\n+    set +e\n+    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT ${BASELINE_OPTION}=${BASELINE_FILE} :checkJavaLinkage\n+    RESULT=$?\n+    set -e\n+    if [ \"$MODE\" = \"validate\" ]; then\n+      echo \"`date`:\" \"Done: ${RESULT}\"\n+      ACCUMULATED_RESULT=$((ACCUMULATED_RESULT | RESULT))\n+    fi\n   done\n }\n \n+\n BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`\n BRANCH_COMMIT=`git rev-parse --short=8 HEAD`\n-runLinkageCheck $BRANCH_COMMIT $BRANCH_NAME\n \n git fetch\n MASTER_COMMIT=`git rev-parse --short=8 origin/master`\n git -c advice.detachedHead=false checkout $MASTER_COMMIT\n-runLinkageCheck $MASTER_COMMIT master\n+runLinkageCheck $MASTER_COMMIT master baseline\n+\n \n # Restore original branch\n git checkout $BRANCH_NAME\n+runLinkageCheck $BRANCH_COMMIT $BRANCH_NAME validate\n \n-# Diff command can return non-zero status\n-set +e\n-\n-FOUND_DIFFERENCE=false\n-for ARTIFACT in $ARTIFACTS; do\n-  echo; echo\n-  echo \"Linkage Check difference on $ARTIFACT between master(${MASTER_COMMIT}) and ${BRANCH_NAME}(${BRANCH_COMMIT}):\"\n-  DIFF=$(diff ${OUTPUT_DIR}/${MASTER_COMMIT}-${ARTIFACT} ${OUTPUT_DIR}/${BRANCH_COMMIT}-${ARTIFACT})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d181899aeb182abd333841c8505154c8be199155"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d8e28d4d1c440c24e272e33a74c33d65b482bde", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/apache/beam/commit/4d8e28d4d1c440c24e272e33a74c33d65b482bde", "committedDate": "2020-05-12T14:28:21Z", "message": "exit value for CI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODIxMDkz", "url": "https://github.com/apache/beam/pull/11674#pullrequestreview-413821093", "createdAt": "2020-05-18T18:02:54Z", "commit": {"oid": "4d8e28d4d1c440c24e272e33a74c33d65b482bde"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODowMjo1NFrOGXCBww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODowMjo1NFrOGXCBww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMzY1MQ==", "bodyText": "why is this invalid, it looks like the linkage checker supports running without specifying javaLinkageReadBaseline or javaLinkageWriteBaseline", "url": "https://github.com/apache/beam/pull/11674#discussion_r426803651", "createdAt": "2020-05-18T18:02:54Z", "author": {"login": "aaltay"}, "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -66,51 +66,61 @@ if [ ! -z \"$(git diff)\" ]; then\n   exit 1\n fi\n \n+ACCUMULATED_RESULT=0\n+\n function runLinkageCheck () {\n   COMMIT=$1\n   BRANCH=$2\n+  MODE=$3 # baseline or validate\n   # An empty invocation so that the subsequent checkJavaLinkage does not\n   # contain garbage\n   echo \"`date`:\" \"Installing artifacts of ${BRANCH}(${COMMIT}) to Maven local repository.\"\n-  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core :checkJavaLinkage > /dev/null 2>&1\n+  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core -PjavaLinkageWriteBaseline=/dev/null :checkJavaLinkage > /dev/null 2>&1\n   for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check for ${ARTIFACT} in ${BRANCH}\"\n-    # Removing time taken to have clean diff\n-    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT :checkJavaLinkage |grep -v 'BUILD SUCCESSFUL in' | grep -v 'dependency paths' > ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\n-    echo \"`date`:\" \"Done: ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\"\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+    if [ \"$MODE\" = \"baseline\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageWriteBaseline'\n+      echo \"`date`:\" \"to create a baseline (existing errors before change) $BASELINE_FILE\"\n+    elif [ \"$MODE\" = \"validate\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageReadBaseline'\n+      echo \"`date`:\" \"using baseline $BASELINE_FILE\"\n+    else\n+      echo \"invalid parameter for runLinkageCheck: ${MODE}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d8e28d4d1c440c24e272e33a74c33d65b482bde"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40c51fddb51e0588c3e664ab6a5e81302ab3c298", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/apache/beam/commit/40c51fddb51e0588c3e664ab6a5e81302ab3c298", "committedDate": "2020-05-18T21:46:11Z", "message": "Merge remote-tracking branch 'origin/master' into linkage-check-baseline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d8b808a840e91fd73355e49f81f580b5e2601fb", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/apache/beam/commit/6d8b808a840e91fd73355e49f81f580b5e2601fb", "committedDate": "2020-05-18T21:50:49Z", "message": "Case when mode is unexpected"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDI4MTc4", "url": "https://github.com/apache/beam/pull/11674#pullrequestreview-414028178", "createdAt": "2020-05-19T00:47:35Z", "commit": {"oid": "6d8b808a840e91fd73355e49f81f580b5e2601fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4951, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}