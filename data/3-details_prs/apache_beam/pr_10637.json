{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTQzMTQ0", "number": 10637, "title": "[BEAM-9186] Allow injection of custom equality function.", "bodyText": "Testing complex object equality in beam tests is currently hard. This allows constructions like\nassert_that(p | Create([1, 2, 3]), equal_to(\n    ['1', '2', '3'], equals_fn=lambda e, a: int(e) == int(a)))", "createdAt": "2020-01-19T15:00:39Z", "url": "https://github.com/apache/beam/pull/10637", "merged": true, "mergeCommit": {"oid": "47afc59a52eddcf305c7f59426c79bc58963111a"}, "closed": true, "closedAt": "2020-01-28T05:23:57Z", "author": {"login": "sorensenjs"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb75PiKgH2gAyMzY0NTQzMTQ0OjNiODM2OGM0MDIyZDY1MjcyNGZkYTM1Mzc1YTQ1ZGY2YjY0ZTkxNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-oW4rAFqTM0OTEwNjU3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b8368c4022d652724fda35375a45df6b64e9152", "author": {"user": {"login": "sorensenjs", "name": "Jeffrey Sorensen"}}, "url": "https://github.com/apache/beam/commit/3b8368c4022d652724fda35375a45df6b64e9152", "committedDate": "2020-01-19T14:58:01Z", "message": "Allow injection of custom equality function."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzEyMjIx", "url": "https://github.com/apache/beam/pull/10637#pullrequestreview-347712221", "createdAt": "2020-01-24T01:31:55Z", "commit": {"oid": "3b8368c4022d652724fda35375a45df6b64e9152"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTozMTo1NVrOFhR1MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTozMTo1NVrOFhR1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQzOTQ3Mw==", "bodyText": "This creates a side-effect, making equal_to not thread-safe. Can we access equals_fn from the outer scope as we do with expected ?", "url": "https://github.com/apache/beam/pull/10637#discussion_r370439473", "createdAt": "2020-01-24T01:31:55Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/apache_beam/testing/util.py", "diffHunk": "@@ -154,41 +154,50 @@ def equal_to_per_window(expected_window_to_elements):\n # Note that equal_to checks if expected and actual are permutations of each\n # other. However, only permutations of the top level are checked. Therefore\n # [1,2] and [2,1] are considered equal and [[1,2]] and [[2,1]] are not.\n-def equal_to(expected):\n+def equal_to(expected, equals_fn=None):\n+  equal_to.equals_fn=equals_fn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b8368c4022d652724fda35375a45df6b64e9152"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a861a312db777051d76bc8a977dfd437ad53ceed", "author": {"user": {"login": "sorensenjs", "name": "Jeffrey Sorensen"}}, "url": "https://github.com/apache/beam/commit/a861a312db777051d76bc8a977dfd437ad53ceed", "committedDate": "2020-01-24T02:11:02Z", "message": "Avoid thread unsafe issue by passing argument explicitly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MTc5NTA5", "url": "https://github.com/apache/beam/pull/10637#pullrequestreview-348179509", "createdAt": "2020-01-24T19:36:44Z", "commit": {"oid": "a861a312db777051d76bc8a977dfd437ad53ceed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozNjo0NFrOFhoT7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozNjo0NFrOFhoT7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNzc5MQ==", "bodyText": "We can remove BeamAssertException from here. The remaining code in the block would not raise that exception.", "url": "https://github.com/apache/beam/pull/10637#discussion_r370807791", "createdAt": "2020-01-24T19:36:44Z", "author": {"login": "aaltay"}, "path": "sdks/python/apache_beam/testing/util.py", "diffHunk": "@@ -154,41 +154,48 @@ def equal_to_per_window(expected_window_to_elements):\n # Note that equal_to checks if expected and actual are permutations of each\n # other. However, only permutations of the top level are checked. Therefore\n # [1,2] and [2,1] are considered equal and [[1,2]] and [[2,1]] are not.\n-def equal_to(expected):\n+def equal_to(expected, equals_fn=None):\n \n-  def _equal(actual):\n+  def _equal(actual, equals_fn=equals_fn):\n     expected_list = list(expected)\n \n     # Try to compare actual and expected by sorting. This fails with a\n     # TypeError in Python 3 if different types are present in the same\n     # collection. It can also raise false negatives for types that don't have\n     # a deterministic sort order, like pyarrow Tables as of 0.14.1\n-    try:\n-      sorted_expected = sorted(expected)\n-      sorted_actual = sorted(actual)\n-      if sorted_expected != sorted_actual:\n-        raise BeamAssertException(\n-            'Failed assert: %r == %r' % (sorted_expected, sorted_actual))\n+    if not equals_fn:\n+      try:\n+        sorted_expected = sorted(expected)\n+        sorted_actual = sorted(actual)\n+        if sorted_expected == sorted_actual:\n+          return\n+      except (BeamAssertException, TypeError):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a861a312db777051d76bc8a977dfd437ad53ceed"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3264beb501323a3dd2882a583e107922ba3783d0", "author": {"user": {"login": "sorensenjs", "name": "Jeffrey Sorensen"}}, "url": "https://github.com/apache/beam/commit/3264beb501323a3dd2882a583e107922ba3783d0", "committedDate": "2020-01-24T19:40:24Z", "message": "Remove unreachable exception type."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTA2NTcz", "url": "https://github.com/apache/beam/pull/10637#pullrequestreview-349106573", "createdAt": "2020-01-28T02:59:27Z", "commit": {"oid": "3264beb501323a3dd2882a583e107922ba3783d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3537, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}