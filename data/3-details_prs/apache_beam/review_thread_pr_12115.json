{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMDIwMzgy", "number": 12115, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMjoxMToxMlrOEKrWvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo0MjozMFrOENCAcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjMxNTUxOnYy", "diffSide": "RIGHT", "path": "sdks/python/container/boot.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMjoxMToxMlrOGr29qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxNDowMlrOGsUgxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ3NQ==", "bodyText": "How about we say \"Cannot get parse Python version from ...\" and append the output?", "url": "https://github.com/apache/beam/pull/12115#discussion_r448642475", "createdAt": "2020-07-01T22:11:12Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get python version with expected format\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "177445f0169694962232434718e8ffcf52409100"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNjU5Ng==", "bodyText": "It would be better!", "url": "https://github.com/apache/beam/pull/12115#discussion_r449126596", "createdAt": "2020-07-02T16:14:02Z", "author": {"login": "lazylynx"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get python version with expected format\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ3NQ=="}, "originalCommit": {"oid": "177445f0169694962232434718e8ffcf52409100"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjMxNTYyOnYy", "diffSide": "RIGHT", "path": "sdks/python/container/boot.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMjoxMToxNVrOGr29uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxNjozNFrOGsUnIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ4OA==", "bodyText": "I think we should not fail but leave acceptableWhlSpecs as empty in this case.", "url": "https://github.com/apache/beam/pull/12115#discussion_r448642488", "createdAt": "2020-07-01T22:11:15Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -127,6 +129,10 @@ func main() {\n \t// Guard from concurrent artifact retrieval and installation,\n \t// when called by child processes in a worker pool.\n \n+\tif err := setupAcceptableWheelSpecs(); err != nil {\n+\t\tlog.Fatalf(\"Failed to setup acceptable wheel specs: %v\", err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "177445f0169694962232434718e8ffcf52409100"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODIyNw==", "bodyText": "It's true. We should only output messages even when error returned.", "url": "https://github.com/apache/beam/pull/12115#discussion_r449128227", "createdAt": "2020-07-02T16:16:34Z", "author": {"login": "lazylynx"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -127,6 +129,10 @@ func main() {\n \t// Guard from concurrent artifact retrieval and installation,\n \t// when called by child processes in a worker pool.\n \n+\tif err := setupAcceptableWheelSpecs(); err != nil {\n+\t\tlog.Fatalf(\"Failed to setup acceptable wheel specs: %v\", err)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ4OA=="}, "originalCommit": {"oid": "177445f0169694962232434718e8ffcf52409100"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODExNjU3OnYy", "diffSide": "RIGHT", "path": "sdks/python/container/boot.go", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjoxOTo0NVrOGvDK0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo1ODoyMFrOGvfwXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4ODE3Ng==", "bodyText": "Sorry for a slow response. It seems that 3.8 wheels don't follow this pattern, just noticing this while prepring 2.23.0 release. 3.8 wheels look as follows:\napache_beam-2.23.0-cp38-cp38-manylinux1_x86_64.whl\nNot sure why the pattern has changed.", "url": "https://github.com/apache/beam/pull/12115#discussion_r451988176", "createdAt": "2020-07-09T06:19:45Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")\n+\t} else {\n+\t\twheelName := fmt.Sprintf(\"cp%s-cp%sm-manylinux1_x86_64.whl\", pyVersion, pyVersion)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a265776d190db6990603bd9ddc4f2376f67b3f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwNDk4Mg==", "bodyText": "Thank you for notification.\nI found that wheel changed naming rule at 0.33.5.\n\n0.33.5 (2019-08-17)\nDon\u2019t add the m ABI flag to wheel names on Python 3.8 (PR by rdb)\nhttps://wheel.readthedocs.io/en/stable/news.html\n\nI'll push a fix tonight, wait a bit.", "url": "https://github.com/apache/beam/pull/12115#discussion_r452004982", "createdAt": "2020-07-09T07:01:22Z", "author": {"login": "lazylynx"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")\n+\t} else {\n+\t\twheelName := fmt.Sprintf(\"cp%s-cp%sm-manylinux1_x86_64.whl\", pyVersion, pyVersion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4ODE3Ng=="}, "originalCommit": {"oid": "31a265776d190db6990603bd9ddc4f2376f67b3f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ1NjU0MQ==", "bodyText": "Thanks! Also filed https://issues.apache.org/jira/browse/BEAM-10434 to fix the stager.", "url": "https://github.com/apache/beam/pull/12115#discussion_r452456541", "createdAt": "2020-07-09T19:58:20Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")\n+\t} else {\n+\t\twheelName := fmt.Sprintf(\"cp%s-cp%sm-manylinux1_x86_64.whl\", pyVersion, pyVersion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4ODE3Ng=="}, "originalCommit": {"oid": "31a265776d190db6990603bd9ddc4f2376f67b3f"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDk5ODI0OnYy", "diffSide": "RIGHT", "path": "sdks/python/container/boot.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo0MjozMFrOGvfRWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoxMjowMVrOGv47dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0ODYwMg==", "bodyText": "Can we move this into the switch as well?  Thank you!", "url": "https://github.com/apache/beam/pull/12115#discussion_r452448602", "createdAt": "2020-07-09T19:42:30Z", "author": {"login": "tvalentyn"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,34 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86456be0beae4ea7dcc889cf374f8623ad9ce506"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2ODk4Mw==", "bodyText": "Updated, PTAL.", "url": "https://github.com/apache/beam/pull/12115#discussion_r452868983", "createdAt": "2020-07-10T14:12:01Z", "author": {"login": "lazylynx"}, "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,34 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0ODYwMg=="}, "originalCommit": {"oid": "86456be0beae4ea7dcc889cf374f8623ad9ce506"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3371, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}