{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTYyMTg2", "number": 12760, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMzozMjoyNVrOEiuABw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMzozMjoyNVrOEiuABw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0ODQwNzExOnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMzozMjoyNVrOHQwbRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwMjowNzo1NlrOHQxvhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzMjY3Nw==", "bodyText": "Just curious why we use string not bytes for serialized fn.", "url": "https://github.com/apache/beam/pull/12760#discussion_r487332677", "createdAt": "2020-09-11T23:32:25Z", "author": {"login": "boyuanzz"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -650,6 +656,54 @@ message WriteFilesPayload {\n   map<string, SideInput> side_inputs = 5;\n }\n \n+// Payload used by Google Cloud Pub/Sub read transform.\n+// This can be used by runners that wish to override Beam Pub/Sub read transform\n+// with a native implementation.\n+message PubSubReadPayload {\n+\n+  // Topic to read from. Exactly one of topic or subscription should be set.\n+  string topic = 1;\n+\n+  // Subscription to read from. Exactly one of topic or subscription should be set.\n+  string subscription = 2;\n+\n+  // Attribute that provides element timestamps.\n+  string timestamp_attribute = 3;\n+\n+  // Attribute to be used for uniquely identifying messages.\n+  string id_attribute = 4;\n+\n+  // If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.\n+  bool with_attributes = 5;\n+\n+  // Parse function for attibutes.\n+  string serialized_attribute_fn = 6;\n+}\n+\n+// Payload used by Google Cloud Pub/Sub write transform.\n+// This can be used by runners that wish to override Beam Pub/Sub write transform\n+// with a native implementation.\n+message PubSubWritePayload {\n+\n+  // Topic to write to.\n+  string topic = 1;\n+\n+  // Attribute that provides element timestamps.\n+  string timestamp_attribute = 2;\n+\n+  // Attribute that uniquely identify messages.\n+  string id_attribute = 3;\n+\n+  // If true, writes Pub/Sub payload as well as attributes. If false, reads only the payload.\n+  bool with_attributes = 4;\n+\n+  // Parse function for attributes.\n+  string serialized_attribute_fn = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c131ca0a1f762685de0c5254d4392ca794aea95a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1NDI0Nw==", "bodyText": "This is to be provided as JSON serialized bytes. Slightly updated the documentation.\nThis is to be compatible with Dataflow implementation which is the only runner that will perform a native override of PubSub transforms.", "url": "https://github.com/apache/beam/pull/12760#discussion_r487354247", "createdAt": "2020-09-12T02:07:56Z", "author": {"login": "chamikaramj"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -650,6 +656,54 @@ message WriteFilesPayload {\n   map<string, SideInput> side_inputs = 5;\n }\n \n+// Payload used by Google Cloud Pub/Sub read transform.\n+// This can be used by runners that wish to override Beam Pub/Sub read transform\n+// with a native implementation.\n+message PubSubReadPayload {\n+\n+  // Topic to read from. Exactly one of topic or subscription should be set.\n+  string topic = 1;\n+\n+  // Subscription to read from. Exactly one of topic or subscription should be set.\n+  string subscription = 2;\n+\n+  // Attribute that provides element timestamps.\n+  string timestamp_attribute = 3;\n+\n+  // Attribute to be used for uniquely identifying messages.\n+  string id_attribute = 4;\n+\n+  // If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.\n+  bool with_attributes = 5;\n+\n+  // Parse function for attibutes.\n+  string serialized_attribute_fn = 6;\n+}\n+\n+// Payload used by Google Cloud Pub/Sub write transform.\n+// This can be used by runners that wish to override Beam Pub/Sub write transform\n+// with a native implementation.\n+message PubSubWritePayload {\n+\n+  // Topic to write to.\n+  string topic = 1;\n+\n+  // Attribute that provides element timestamps.\n+  string timestamp_attribute = 2;\n+\n+  // Attribute that uniquely identify messages.\n+  string id_attribute = 3;\n+\n+  // If true, writes Pub/Sub payload as well as attributes. If false, reads only the payload.\n+  bool with_attributes = 4;\n+\n+  // Parse function for attributes.\n+  string serialized_attribute_fn = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzMjY3Nw=="}, "originalCommit": {"oid": "c131ca0a1f762685de0c5254d4392ca794aea95a"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 444, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}