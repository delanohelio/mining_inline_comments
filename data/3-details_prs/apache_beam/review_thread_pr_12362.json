{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTY2MDg2", "number": 12362, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoyMTowNFrOESdgPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoyMTowNFrOESdgPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzkzMjE0OnYy", "diffSide": "RIGHT", "path": "learning/katas/python/Common Transforms/Filter/ParDo/task.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoyMTowNFrOG3p28A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODoxNTowOVrOG3uAAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxMDY3Mg==", "bodyText": "This class could be created outside the scope of with. It is generic code that does not depend on a specific pipeline.", "url": "https://github.com/apache/beam/pull/12362#discussion_r461010672", "createdAt": "2020-07-27T16:21:04Z", "author": {"login": "iht"}, "path": "learning/katas/python/Common Transforms/Filter/ParDo/task.py", "diffHunk": "@@ -18,18 +18,17 @@\n \n from log_elements import LogElements\n \n-p = beam.Pipeline()\n+with beam.Pipeline() as p:\n \n \n-class FilterOutEvenNumber(beam.DoFn):\n+  class FilterOutEvenNumber(beam.DoFn):\n \n-    def process(self, element):\n-        if element % 2 == 1:\n-            yield element\n+      def process(self, element):\n+          if element % 2 == 1:\n+              yield element", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "596cc06f5a84a23ad25acc7b2f4f3f84f398e42c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODUyOQ==", "bodyText": "Good call. Done.", "url": "https://github.com/apache/beam/pull/12362#discussion_r461078529", "createdAt": "2020-07-27T18:15:09Z", "author": {"login": "robertwb"}, "path": "learning/katas/python/Common Transforms/Filter/ParDo/task.py", "diffHunk": "@@ -18,18 +18,17 @@\n \n from log_elements import LogElements\n \n-p = beam.Pipeline()\n+with beam.Pipeline() as p:\n \n \n-class FilterOutEvenNumber(beam.DoFn):\n+  class FilterOutEvenNumber(beam.DoFn):\n \n-    def process(self, element):\n-        if element % 2 == 1:\n-            yield element\n+      def process(self, element):\n+          if element % 2 == 1:\n+              yield element", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxMDY3Mg=="}, "originalCommit": {"oid": "596cc06f5a84a23ad25acc7b2f4f3f84f398e42c"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 944, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}