{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NDY5NDIx", "number": 12065, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1NTo1MVrOEKKinw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1NTo1MVrOEKKinw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDkzOTE5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1NTo1MVrOGrDNng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo0MTozOVrOG0-I7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NDU5MA==", "bodyText": "Just out of curiosity, could you explain, why do we need GroupByKey in this place?", "url": "https://github.com/apache/beam/pull/12065#discussion_r447794590", "createdAt": "2020-06-30T15:55:51Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -147,10 +151,18 @@ def process(self, element, state=state_param):\n               CounterOperation(\n                   self.number_of_counters, self.number_of_operations)))\n \n+    if self.window:\n+      pc = (\n+          pc\n+          | beam.WindowInto(beam.window.FixedWindows(1))\n+          | beam.GroupByKey())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcba242190e49ef81d7aa781ff29f1d2d268cad6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwMTg2MQ==", "bodyText": "The goal here is to test GroupByKey which holds back windowed values based on the watermark. This creates additional latency. If we do not use GroupByKey, then there is a simple pass-through of all elements without any buffer.", "url": "https://github.com/apache/beam/pull/12065#discussion_r447801861", "createdAt": "2020-06-30T16:06:33Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -147,10 +151,18 @@ def process(self, element, state=state_param):\n               CounterOperation(\n                   self.number_of_counters, self.number_of_operations)))\n \n+    if self.window:\n+      pc = (\n+          pc\n+          | beam.WindowInto(beam.window.FixedWindows(1))\n+          | beam.GroupByKey())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NDU5MA=="}, "originalCommit": {"oid": "dcba242190e49ef81d7aa781ff29f1d2d268cad6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MTQyMw==", "bodyText": "I see. In this case, maybe it'd would worth to measure latency in GroupByKey Load Test: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/testing/load_tests/group_by_key_test.py? GroupByKey step is already there.", "url": "https://github.com/apache/beam/pull/12065#discussion_r449141423", "createdAt": "2020-07-02T16:39:20Z", "author": {"login": "kamilwu"}, "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -147,10 +151,18 @@ def process(self, element, state=state_param):\n               CounterOperation(\n                   self.number_of_counters, self.number_of_operations)))\n \n+    if self.window:\n+      pc = (\n+          pc\n+          | beam.WindowInto(beam.window.FixedWindows(1))\n+          | beam.GroupByKey())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NDU5MA=="}, "originalCommit": {"oid": "dcba242190e49ef81d7aa781ff29f1d2d268cad6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MTY1Mw==", "bodyText": "Good point, I think we could move it there.", "url": "https://github.com/apache/beam/pull/12065#discussion_r452361653", "createdAt": "2020-07-09T17:00:30Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -147,10 +151,18 @@ def process(self, element, state=state_param):\n               CounterOperation(\n                   self.number_of_counters, self.number_of_operations)))\n \n+    if self.window:\n+      pc = (\n+          pc\n+          | beam.WindowInto(beam.window.FixedWindows(1))\n+          | beam.GroupByKey())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NDU5MA=="}, "originalCommit": {"oid": "dcba242190e49ef81d7aa781ff29f1d2d268cad6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE5NzIzMQ==", "bodyText": "I've removed the GroupByKey here and added a latency measurement to the existing GroupByKey test.", "url": "https://github.com/apache/beam/pull/12065#discussion_r458197231", "createdAt": "2020-07-21T15:41:39Z", "author": {"login": "mxm"}, "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -147,10 +151,18 @@ def process(self, element, state=state_param):\n               CounterOperation(\n                   self.number_of_counters, self.number_of_operations)))\n \n+    if self.window:\n+      pc = (\n+          pc\n+          | beam.WindowInto(beam.window.FixedWindows(1))\n+          | beam.GroupByKey())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NDU5MA=="}, "originalCommit": {"oid": "dcba242190e49ef81d7aa781ff29f1d2d268cad6"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3568, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}