{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNDAwNDYw", "number": 12807, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDo0N1rOEiNFNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1MjowNlrOEiNP6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzAxMzY1OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDo0N1rOHP81CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMjo1MTozNlrOHQMbBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NzMwNQ==", "bodyText": "Could you link or open a jira issue regarding this and comment it here?", "url": "https://github.com/apache/beam/pull/12807#discussion_r486487305", "createdAt": "2020-09-10T16:44:47Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0Mjc5MA==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/12807#discussion_r486742790", "createdAt": "2020-09-11T02:51:36Z", "author": {"login": "leiyiz"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NzMwNQ=="}, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzAzMjk2OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0OTo1MVrOHP9A5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMjo1MToyMVrOHQMa0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MDM0Mg==", "bodyText": "Can we add a comment on the desired behavior of this trigger as well?", "url": "https://github.com/apache/beam/pull/12807#discussion_r486490342", "createdAt": "2020-09-10T16:49:51Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and\n+  #   it is left blank and unspecified.\n+  pass\n+\n+\n+def output_file_for(window, shard, pane):\n+  filename = '%s/LOG-%s-%s-%03d-%s' % (\n+      output_path, window.max_timestamp(), shard, pane.index,\n+      pane.timing) if output_path else None\n+  return OutputFile(\n+      window.max_timestamp(), shard, pane.index, pane.timing, filename)\n+\n+\n+def index_path_for(window):\n+  if output_path:\n+    return '%s/INDEX-%s' % (output_path, window.max_timestamp())\n+  else:\n+    return None\n+\n+\n+def load(events, pipeline_options, metadata=None):\n+  return (\n+      events\n+      | 'query10_shard_events' >> beam.ParDo(ShardEventsDoFn())\n+      | 'query10_fix_window' >> beam.WindowInto(\n+          window.FixedWindows(metadata.get('window_size_sec')),\n+          trigger=trigger.AfterEach(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0MjczOQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12807#discussion_r486742739", "createdAt": "2020-09-11T02:51:21Z", "author": {"login": "leiyiz"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and\n+  #   it is left blank and unspecified.\n+  pass\n+\n+\n+def output_file_for(window, shard, pane):\n+  filename = '%s/LOG-%s-%s-%03d-%s' % (\n+      output_path, window.max_timestamp(), shard, pane.index,\n+      pane.timing) if output_path else None\n+  return OutputFile(\n+      window.max_timestamp(), shard, pane.index, pane.timing, filename)\n+\n+\n+def index_path_for(window):\n+  if output_path:\n+    return '%s/INDEX-%s' % (output_path, window.max_timestamp())\n+  else:\n+    return None\n+\n+\n+def load(events, pipeline_options, metadata=None):\n+  return (\n+      events\n+      | 'query10_shard_events' >> beam.ParDo(ShardEventsDoFn())\n+      | 'query10_fix_window' >> beam.WindowInto(\n+          window.FixedWindows(metadata.get('window_size_sec')),\n+          trigger=trigger.AfterEach(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MDM0Mg=="}, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzA0MTA0OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1MjowNlrOHP9GDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMjo1MTowOFrOHQMaqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MTY2Mg==", "bodyText": "nit: add some documentation on what the function is used for.", "url": "https://github.com/apache/beam/pull/12807#discussion_r486491662", "createdAt": "2020-09-10T16:52:06Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and\n+  #   it is left blank and unspecified.\n+  pass\n+\n+\n+def output_file_for(window, shard, pane):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0MjY5OQ==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/12807#discussion_r486742699", "createdAt": "2020-09-11T02:51:08Z", "author": {"login": "leiyiz"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and\n+  #   it is left blank and unspecified.\n+  pass\n+\n+\n+def output_file_for(window, shard, pane):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MTY2Mg=="}, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3276, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}