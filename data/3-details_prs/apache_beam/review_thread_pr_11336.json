{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDY5NDMz", "number": 11336, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo1NDozOVrODwJGlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo1NjozNlrODwJI9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODA3MzgyOnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo1NDozOVrOGC-l4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo1NDozOVrOGC-l4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3NTg0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                //     representation of positive values.\n          \n          \n            \n                //\n          \n          \n            \n                //     representation of positive values. This is typically done by subtracting -9223372036854775808\n          \n          \n            \n                //     from the value and encoding it as a signed big endian integer. Example values:\n          \n          \n            \n                //\n          \n          \n            \n                //     -9223372036854775808: 00 00 00 00 00 00 00 00\n          \n          \n            \n                //                     -255: 7F FF FF FF FF FF FF 01\n          \n          \n            \n                //                       -1: 7F FF FF FF FF FF FF FF\n          \n          \n            \n                //                        0: 80 00 00 00 00 00 00 00\n          \n          \n            \n                //                        1: 80 00 00 00 00 00 00 01\n          \n          \n            \n                //                      256: 80 00 00 00 00 00 01 00\n          \n          \n            \n                //      9223372036854775807: FF FF FF FF FF FF FF FF\n          \n          \n            \n                //", "url": "https://github.com/apache/beam/pull/11336#discussion_r405775843", "createdAt": "2020-04-08T19:54:39Z", "author": {"login": "lukecwik"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -739,9 +739,44 @@ message StandardCoders {\n     // Components: None\n     GLOBAL_WINDOW = 7 [(beam_urn) = \"beam:coder:global_window:v1\"];\n \n-    // Encodes an element, the window the value is in, the timestamp of the element, and the pane\n-    // of the element\n-    // Components: The element coder and the window coder, in that order\n+    // Encodes an element, the windows it is in, the timestamp of the element,\n+    // and the pane of the element. The encoding is represented as:\n+    // timestamp windows pane element\n+    //   timestamp - A big endian 8 byte integer representing millis-since-epoch.\n+    //     The encoded representation is shifted so that the byte representation\n+    //     of negative values are lexicographically ordered before the byte\n+    //     representation of positive values.\n+    //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964c307b0e5bce6b24c1bca2600d018ab13bc0b3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODA3OTg4OnYy", "diffSide": "RIGHT", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo1NjozNlrOGC-pxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo1NjozNlrOGC-pxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3NjgzOQ==", "bodyText": "The iterable is encoded using the beam:coder:iterable:v1 format.", "url": "https://github.com/apache/beam/pull/11336#discussion_r405776839", "createdAt": "2020-04-08T19:56:36Z", "author": {"login": "lukecwik"}, "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -739,9 +739,44 @@ message StandardCoders {\n     // Components: None\n     GLOBAL_WINDOW = 7 [(beam_urn) = \"beam:coder:global_window:v1\"];\n \n-    // Encodes an element, the window the value is in, the timestamp of the element, and the pane\n-    // of the element\n-    // Components: The element coder and the window coder, in that order\n+    // Encodes an element, the windows it is in, the timestamp of the element,\n+    // and the pane of the element. The encoding is represented as:\n+    // timestamp windows pane element\n+    //   timestamp - A big endian 8 byte integer representing millis-since-epoch.\n+    //     The encoded representation is shifted so that the byte representation\n+    //     of negative values are lexicographically ordered before the byte\n+    //     representation of positive values.\n+    //\n+    //   windows - For windows [w1...wN], the encoding is\n+    //       fixed32(N) encode(w1) ... encode(wN)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964c307b0e5bce6b24c1bca2600d018ab13bc0b3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1409, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}