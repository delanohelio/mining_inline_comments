{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTYxODQw", "number": 11823, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoyNDo1OVrOD_7CsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoyNDo1OVrOD_7CsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzU0MjI0OnYy", "diffSide": "RIGHT", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternals.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoyNDo1OVrOGa4K-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoyOToyNFrOGa4O6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzNjQ3NA==", "bodyText": "This logic is really frustrating that we are encoding because we aren't returning the size of what we read as part of the state future from WindmillStateReader.\nThis could be better but this is definitely an improvement to not re-encode the value needlessly.", "url": "https://github.com/apache/beam/pull/11823#discussion_r430836474", "createdAt": "2020-05-27T03:24:59Z", "author": {"login": "lukecwik"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternals.java", "diffHunk": "@@ -410,14 +416,18 @@ protected WorkItemCommitRequest persistDirectly(WindmillStateCache.ForKey cache)\n         return WorkItemCommitRequest.newBuilder().buildPartial();\n       }\n \n-      ByteString.Output stream = ByteString.newOutput();\n-      if (value != null) {\n-        coder.encode(value, stream, Coder.Context.OUTER);\n+      ByteString encoded = null;\n+      if (cachedSize == -1 || modified) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47651b5dafd62944f545e3632ff70dd15dfceb99"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzNzQ4MQ==", "bodyText": "agreed, it took me awhile to reason this out w/ the different code paths that can affect the values here.  I'm reasonably sure you don't need the cachedSize == -1 branch but, it's been working like this for ~1 year so I didn't want to tempt fate.\nThere's also the case where this is the first write, but valueIsKnown = false (because isNewKey = false), so we end up with a read that doesn't return anything.\nThanks for the quick reviews!", "url": "https://github.com/apache/beam/pull/11823#discussion_r430837481", "createdAt": "2020-05-27T03:29:24Z", "author": {"login": "steveniemitz"}, "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternals.java", "diffHunk": "@@ -410,14 +416,18 @@ protected WorkItemCommitRequest persistDirectly(WindmillStateCache.ForKey cache)\n         return WorkItemCommitRequest.newBuilder().buildPartial();\n       }\n \n-      ByteString.Output stream = ByteString.newOutput();\n-      if (value != null) {\n-        coder.encode(value, stream, Coder.Context.OUTER);\n+      ByteString encoded = null;\n+      if (cachedSize == -1 || modified) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzNjQ3NA=="}, "originalCommit": {"oid": "47651b5dafd62944f545e3632ff70dd15dfceb99"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3712, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}