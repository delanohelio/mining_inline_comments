{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwODA4MDc0", "number": 13558, "title": "[BEAM-11494][BEAM-11821] FileIO stops overwriting files on retries", "bodyText": "In this case, the default behavior for FileIO changes slightly:\n\nBefore this change, FileIO copies temp files into destination locations without checking whether destinations exist.\nWith the new change, if the destination file exists already, nothing will be copied.\n\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-12-16T00:28:57Z", "url": "https://github.com/apache/beam/pull/13558", "merged": true, "mergeCommit": {"oid": "b6a59b3efd38dbfd3d867feb84917bd26e0acaf6"}, "closed": true, "closedAt": "2021-02-18T07:19:16Z", "author": {"login": "pabloem"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmjxPSgH2gAyNTQwODA4MDc0OjU0OGVlZWMzY2Q1NWFkYmEwZjdhODdkYzExN2E1NWI0NWMxOGQ1OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd7HjqFgH2gAyNTQwODA4MDc0OjA2YWFlZGVhMmRjYWY4ZTI2Y2JjMmJkODQ1YzA3NGFhMmRlYTgyNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "548eeec3cd55adba0f7a87dc117a55b45c18d590", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/548eeec3cd55adba0f7a87dc117a55b45c18d590", "committedDate": "2020-12-16T00:26:49Z", "message": "FileIO stops overwriting files on retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85ab14031aedb03fa6c98bdcebce5a351e15fa04", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/85ab14031aedb03fa6c98bdcebce5a351e15fa04", "committedDate": "2020-12-16T17:36:37Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNjU5OTQz", "url": "https://github.com/apache/beam/pull/13558#pullrequestreview-591659943", "createdAt": "2021-02-16T21:59:03Z", "commit": {"oid": "85ab14031aedb03fa6c98bdcebce5a351e15fa04"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQyMTo1OTowM1rOImbhxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQyMjowMToyMlrOImbm5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzE2NzgxNQ==", "bodyText": "only populate matchDestResults if skipExistingDest is ste.", "url": "https://github.com/apache/beam/pull/13558#discussion_r577167815", "createdAt": "2021-02-16T21:59:03Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/FileSystems.java", "diffHunk": "@@ -401,12 +412,23 @@ public ResourceId apply(@Nonnull Metadata input) {\n     List<ResourceId> srcToHandle = new ArrayList<>();\n     List<ResourceId> destToHandle = new ArrayList<>();\n \n-    List<MatchResult> matchResults = matchResources(srcResourceIds);\n-    for (int i = 0; i < matchResults.size(); ++i) {\n-      if (!matchResults.get(i).status().equals(Status.NOT_FOUND)) {\n-        srcToHandle.add(srcResourceIds.get(i));\n-        destToHandle.add(destResourceIds.get(i));\n+    List<MatchResult> matchSrcResults = matchResources(srcResourceIds);\n+    List<MatchResult> matchDestResults = matchResources(destResourceIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ab14031aedb03fa6c98bdcebce5a351e15fa04"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzE2ODEyNw==", "bodyText": "put skipExistingDest first in the conditional.", "url": "https://github.com/apache/beam/pull/13558#discussion_r577168127", "createdAt": "2021-02-16T21:59:37Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/FileSystems.java", "diffHunk": "@@ -401,12 +412,23 @@ public ResourceId apply(@Nonnull Metadata input) {\n     List<ResourceId> srcToHandle = new ArrayList<>();\n     List<ResourceId> destToHandle = new ArrayList<>();\n \n-    List<MatchResult> matchResults = matchResources(srcResourceIds);\n-    for (int i = 0; i < matchResults.size(); ++i) {\n-      if (!matchResults.get(i).status().equals(Status.NOT_FOUND)) {\n-        srcToHandle.add(srcResourceIds.get(i));\n-        destToHandle.add(destResourceIds.get(i));\n+    List<MatchResult> matchSrcResults = matchResources(srcResourceIds);\n+    List<MatchResult> matchDestResults = matchResources(destResourceIds);\n+\n+    for (int i = 0; i < matchSrcResults.size(); ++i) {\n+      if (matchSrcResults.get(i).status().equals(Status.NOT_FOUND) && ignoreMissingSrc) {\n+        // If the source is not found, and we are ignoring found source files, then we skip it.\n+        continue;\n+      }\n+      if (matchDestResults.get(i).status().equals(Status.OK)\n+          && matchDestResults.get(i).metadata().get(0).sizeBytes()\n+              == matchSrcResults.get(i).metadata().get(0).sizeBytes()\n+          && skipExistingDest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ab14031aedb03fa6c98bdcebce5a351e15fa04"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzE2OTEyNA==", "bodyText": "Wish there was something better than byte size we could use here (e.g. file hash).", "url": "https://github.com/apache/beam/pull/13558#discussion_r577169124", "createdAt": "2021-02-16T22:01:22Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/FileSystems.java", "diffHunk": "@@ -401,12 +412,23 @@ public ResourceId apply(@Nonnull Metadata input) {\n     List<ResourceId> srcToHandle = new ArrayList<>();\n     List<ResourceId> destToHandle = new ArrayList<>();\n \n-    List<MatchResult> matchResults = matchResources(srcResourceIds);\n-    for (int i = 0; i < matchResults.size(); ++i) {\n-      if (!matchResults.get(i).status().equals(Status.NOT_FOUND)) {\n-        srcToHandle.add(srcResourceIds.get(i));\n-        destToHandle.add(destResourceIds.get(i));\n+    List<MatchResult> matchSrcResults = matchResources(srcResourceIds);\n+    List<MatchResult> matchDestResults = matchResources(destResourceIds);\n+\n+    for (int i = 0; i < matchSrcResults.size(); ++i) {\n+      if (matchSrcResults.get(i).status().equals(Status.NOT_FOUND) && ignoreMissingSrc) {\n+        // If the source is not found, and we are ignoring found source files, then we skip it.\n+        continue;\n+      }\n+      if (matchDestResults.get(i).status().equals(Status.OK)\n+          && matchDestResults.get(i).metadata().get(0).sizeBytes()\n+              == matchSrcResults.get(i).metadata().get(0).sizeBytes()\n+          && skipExistingDest) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzE2ODEyNw=="}, "originalCommit": {"oid": "85ab14031aedb03fa6c98bdcebce5a351e15fa04"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8f2e0740eeebfb66e88c3866af6f8bd6b85314e", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/a8f2e0740eeebfb66e88c3866af6f8bd6b85314e", "committedDate": "2021-02-16T23:39:15Z", "message": "Improving performance. Using better checksum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06d6df9bb034a9f8cd6e93bc115a37bb9fc0a253", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/06d6df9bb034a9f8cd6e93bc115a37bb9fc0a253", "committedDate": "2021-02-17T00:10:49Z", "message": "[BEAM-11821] Supporting checksum for filesystems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxODczODEz", "url": "https://github.com/apache/beam/pull/13558#pullrequestreview-591873813", "createdAt": "2021-02-17T06:32:43Z", "commit": {"oid": "06d6df9bb034a9f8cd6e93bc115a37bb9fc0a253"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xN1QwNjozMjo0NFrOImnE6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xN1QwNjozMzozMVrOImnF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzM1NzAzMg==", "bodyText": "We've verified that this is the correct behavior for GCS. What about other file systems?", "url": "https://github.com/apache/beam/pull/13558#discussion_r577357032", "createdAt": "2021-02-17T06:32:44Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/FileBasedSink.java", "diffHunk": "@@ -764,7 +764,11 @@ final void moveToOutputFiles(\n       }\n       // During a failure case, files may have been deleted in an earlier step. Thus\n       // we ignore missing files here.\n-      FileSystems.rename(srcFiles, dstFiles, StandardMoveOptions.IGNORE_MISSING_FILES);\n+      FileSystems.rename(\n+          srcFiles,\n+          dstFiles,\n+          StandardMoveOptions.IGNORE_MISSING_FILES,\n+          StandardMoveOptions.SKIP_IF_DESTINATION_EXISTS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06d6df9bb034a9f8cd6e93bc115a37bb9fc0a253"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzM1NzI5MQ==", "bodyText": "Should this be ||?", "url": "https://github.com/apache/beam/pull/13558#discussion_r577357291", "createdAt": "2021-02-17T06:33:31Z", "author": {"login": "reuvenlax"}, "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/FileSystems.java", "diffHunk": "@@ -401,16 +412,40 @@ public ResourceId apply(@Nonnull Metadata input) {\n     List<ResourceId> srcToHandle = new ArrayList<>();\n     List<ResourceId> destToHandle = new ArrayList<>();\n \n-    List<MatchResult> matchResults = matchResources(srcResourceIds);\n-    for (int i = 0; i < matchResults.size(); ++i) {\n-      if (!matchResults.get(i).status().equals(Status.NOT_FOUND)) {\n-        srcToHandle.add(srcResourceIds.get(i));\n-        destToHandle.add(destResourceIds.get(i));\n+    List<MatchResult> matchSrcResults = matchResources(srcResourceIds);\n+    List<MatchResult> matchDestResults = new ArrayList<>();\n+    if (skipExistingDest) {\n+      matchDestResults = matchResources(destResourceIds);\n+    }\n+\n+    for (int i = 0; i < matchSrcResults.size(); ++i) {\n+      if (matchSrcResults.get(i).status().equals(Status.NOT_FOUND) && ignoreMissingSrc) {\n+        // If the source is not found, and we are ignoring found source files, then we skip it.\n+        continue;\n       }\n+      if (skipExistingDest\n+          && matchDestResults.get(i).status().equals(Status.OK)\n+          && filesMatch(\n+              matchDestResults.get(i).metadata().get(0),\n+              matchSrcResults.get(i).metadata().get(0))) {\n+        // If the destination exists, and we are skipping when destinations exist, then we skip.\n+        continue;\n+      }\n+      srcToHandle.add(srcResourceIds.get(i));\n+      destToHandle.add(destResourceIds.get(i));\n     }\n     return KV.of(srcToHandle, destToHandle);\n   }\n \n+  private static boolean filesMatch(MatchResult.Metadata first, MatchResult.Metadata second) {\n+    if (!first.checksum().isPresent() && !second.checksum().isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06d6df9bb034a9f8cd6e93bc115a37bb9fc0a253"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb4fe0ec9ee5d2345a1b87e184359a4d1cd8a5f", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/ecb4fe0ec9ee5d2345a1b87e184359a4d1cd8a5f", "committedDate": "2021-02-17T07:02:06Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06aaedea2dcaf8e26cbc2bd845c074aa2dea8240", "author": {"user": {"login": "pabloem", "name": "Pablo"}}, "url": "https://github.com/apache/beam/commit/06aaedea2dcaf8e26cbc2bd845c074aa2dea8240", "committedDate": "2021-02-17T21:27:03Z", "message": "Matching only on checksum, not on file size"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4438, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}