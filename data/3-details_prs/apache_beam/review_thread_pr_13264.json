{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Njk2OTEy", "number": 13264, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMzozMjoxNVrOE1b26w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODowNzoyM1rOE1x_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NDY2NDExOnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/frames.py", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMzozMjoxNVrOHttdUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo1Nzo0NFrOHvCK5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ==", "bodyText": "Currently if the user specifies a local variable in expr with @<local> this will fail at construction time (when generating the proxy), but the error message isn't helpful, it just indicates <local> doesn't exist.", "url": "https://github.com/apache/beam/pull/13264#discussion_r517692755", "createdAt": "2020-11-04T23:32:15Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1069,6 +1069,23 @@ def dropna(self, axis, **kwargs):\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=requires_partition_by))\n \n+\n+  # TODO(BEAM-XXXX): support @<local> in eval and query. Currently fails in\n+  # proxy generation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eed466263bcc6fb2894687ba126424a4367f132"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NzA5MQ==", "bodyText": "(I'll update the XXX with a jira number before merging if this gets approved, I just didn't want to create it prematurely)", "url": "https://github.com/apache/beam/pull/13264#discussion_r517697091", "createdAt": "2020-11-04T23:44:21Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1069,6 +1069,23 @@ def dropna(self, axis, **kwargs):\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=requires_partition_by))\n \n+\n+  # TODO(BEAM-XXXX): support @<local> in eval and query. Currently fails in\n+  # proxy generation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, "originalCommit": {"oid": "8eed466263bcc6fb2894687ba126424a4367f132"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2NzIxMQ==", "bodyText": "Go ahead and create the jira. Can we give a better message if @ is in the expression?", "url": "https://github.com/apache/beam/pull/13264#discussion_r518567211", "createdAt": "2020-11-06T07:29:55Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1069,6 +1069,23 @@ def dropna(self, axis, **kwargs):\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=requires_partition_by))\n \n+\n+  # TODO(BEAM-XXXX): support @<local> in eval and query. Currently fails in\n+  # proxy generation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, "originalCommit": {"oid": "8eed466263bcc6fb2894687ba126424a4367f132"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk3MDg0NQ==", "bodyText": "Yeah I'll add a regex to check for @<py identifier> and point to the jira.", "url": "https://github.com/apache/beam/pull/13264#discussion_r518970845", "createdAt": "2020-11-06T19:53:50Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1069,6 +1069,23 @@ def dropna(self, axis, **kwargs):\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=requires_partition_by))\n \n+\n+  # TODO(BEAM-XXXX): support @<local> in eval and query. Currently fails in\n+  # proxy generation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, "originalCommit": {"oid": "8eed466263bcc6fb2894687ba126424a4367f132"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4MDY3OA==", "bodyText": "Done.", "url": "https://github.com/apache/beam/pull/13264#discussion_r519080678", "createdAt": "2020-11-07T01:57:44Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1069,6 +1069,23 @@ def dropna(self, axis, **kwargs):\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=requires_partition_by))\n \n+\n+  # TODO(BEAM-XXXX): support @<local> in eval and query. Currently fails in\n+  # proxy generation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, "originalCommit": {"oid": "8eed466263bcc6fb2894687ba126424a4367f132"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODI4OTg5OnYy", "diffSide": "RIGHT", "path": "sdks/python/apache_beam/dataframe/frame_base.py", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODowNzoyM1rOHuQBgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo1ODo1MFrOHvCLTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw==", "bodyText": "This is dangerous, as it won't catch if inplace was passed as a non-keyword argument.", "url": "https://github.com/apache/beam/pull/13264#discussion_r518259073", "createdAt": "2020-11-05T18:07:23Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -318,8 +318,8 @@ def wrapper(self, *args, **kwargs):\n \n def maybe_inplace(func):\n   @functools.wraps(func)\n-  def wrapper(self, inplace=False, **kwargs):\n-    result = func(self, **kwargs)\n+  def wrapper(self, *args, inplace=False, **kwargs):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk3MDQwMA==", "bodyText": "That could happen only with methods where the first kwarg is inplace right? I wouldn't think there's many of those but I suppose there could be.\nSo what's the right thing to do here? We could use inspect to find inplace in the args/kwargs of func and handle it correctly. Or more simply just never use this in methods where we need to pass through args.", "url": "https://github.com/apache/beam/pull/13264#discussion_r518970400", "createdAt": "2020-11-06T19:52:50Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -318,8 +318,8 @@ def wrapper(self, *args, **kwargs):\n \n def maybe_inplace(func):\n   @functools.wraps(func)\n-  def wrapper(self, inplace=False, **kwargs):\n-    result = func(self, **kwargs)\n+  def wrapper(self, *args, inplace=False, **kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, "originalCommit": {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk4NTY3NA==", "bodyText": "We shouldn't use this in places where we may need to pass args. (Actually, if we're just passing a*args, we can't generally detect inplace safely at all).", "url": "https://github.com/apache/beam/pull/13264#discussion_r518985674", "createdAt": "2020-11-06T20:20:43Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -318,8 +318,8 @@ def wrapper(self, *args, **kwargs):\n \n def maybe_inplace(func):\n   @functools.wraps(func)\n-  def wrapper(self, inplace=False, **kwargs):\n-    result = func(self, **kwargs)\n+  def wrapper(self, *args, inplace=False, **kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, "originalCommit": {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3MTM3Mg==", "bodyText": "If we passed the base type as in populate_defaults we could inspect it's method. Seems like a lot of trouble.. but I'm just worried that there's some edge case where we're dropping non-keyword args, and it would be great to catch that possibility at import time.", "url": "https://github.com/apache/beam/pull/13264#discussion_r519071372", "createdAt": "2020-11-07T00:50:33Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -318,8 +318,8 @@ def wrapper(self, *args, **kwargs):\n \n def maybe_inplace(func):\n   @functools.wraps(func)\n-  def wrapper(self, inplace=False, **kwargs):\n-    result = func(self, **kwargs)\n+  def wrapper(self, *args, inplace=False, **kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, "originalCommit": {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4MDc4MA==", "bodyText": "I removed this change and instead handle inplace in the new methods, PTAL", "url": "https://github.com/apache/beam/pull/13264#discussion_r519080780", "createdAt": "2020-11-07T01:58:50Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -318,8 +318,8 @@ def wrapper(self, *args, **kwargs):\n \n def maybe_inplace(func):\n   @functools.wraps(func)\n-  def wrapper(self, inplace=False, **kwargs):\n-    result = func(self, **kwargs)\n+  def wrapper(self, *args, inplace=False, **kwargs):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, "originalCommit": {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}