{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjAwMDk5", "number": 10951, "title": "[BEAM-8575] Modified the test to work for different runners.", "bodyText": "On direct runner the firings are [1, 3, 6, 10, 15, 15, 15]; while on Unified Worker the firings are [1, 3, 6, 10, 15, 15]. The number of fanouts also influence the number of 15s at the end. Therefore we modified the test to allow any number of 15s at the end.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-02-24T20:02:41Z", "url": "https://github.com/apache/beam/pull/10951", "merged": true, "mergeCommit": {"oid": "6ad8eed975569ae10c19f2aa6d280402bd67c505"}, "closed": true, "closedAt": "2020-03-03T22:32:20Z", "author": {"login": "bumblebee-coming"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHjBFkgH2gAyMzc5MjAwMDk5OjYyZmJkZWY2NGViZDEyODU3NDVmZjQ1NGNmOWE0ZmM1Njk1OWFlYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKKGmVgFqTM2ODM3NDkwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62fbdef64ebd1285745ff454cf9a4fc56959aea8", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/62fbdef64ebd1285745ff454cf9a4fc56959aea8", "committedDate": "2020-02-24T19:51:25Z", "message": "[BEAM-8575] Modified the test to work for different runners."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc7befd00243d902acbff65066bdbb37ca27c07c", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/cc7befd00243d902acbff65066bdbb37ca27c07c", "committedDate": "2020-02-24T21:44:01Z", "message": "Fixed lint errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faaed37dd4aee6e3d9d4c52c9cbf099dc7338dda", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/faaed37dd4aee6e3d9d4c52c9cbf099dc7338dda", "committedDate": "2020-02-26T00:43:44Z", "message": "Fixed format error."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjcwNTM1", "url": "https://github.com/apache/beam/pull/10951#pullrequestreview-365270535", "createdAt": "2020-02-26T21:52:42Z", "commit": {"oid": "faaed37dd4aee6e3d9d4c52c9cbf099dc7338dda"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTo1Mjo0MlrOFu9rOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTo1Mjo1NVrOFu9rlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4OTMwNA==", "bodyText": "We still want to ensure there is at least one 15 firing. (If we're being pedantic, a single on-time firing, plus a number of late firings) The second argument to assert_that can be any predicate taking the set of actual elements.", "url": "https://github.com/apache/beam/pull/10951#discussion_r384789304", "createdAt": "2020-02-26T21:52:42Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -482,9 +485,13 @@ def test_combining_with_accumulation_mode_and_fanout(self):\n               trigger=AfterWatermark(early=AfterAll(AfterCount(1))))\n           | beam.CombineGlobally(sum).without_defaults().with_fanout(2))\n \n-      # The frings for DISCARDING mode is [1, 2, 3, 4, 5, 0, 0].\n-      firings = [1, 3, 6, 10, 15, 15, 15]\n-      assert_that(result, equal_to(firings))\n+      # Partition the result into early_firings and _.\n+      # In ACCUMULATING mode, the early_frings is [1, 3, 6, 10], other\n+      # firings are [15, 15, ...]. Different runners have different number\n+      # of 15s.\n+      early_firings, _ = result | beam.Partition(is_early_firing, 2)\n+      exepected_early_firings = [1, 3, 6, 10]\n+      assert_that(early_firings, equal_to(exepected_early_firings))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faaed37dd4aee6e3d9d4c52c9cbf099dc7338dda"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4OTM5Ng==", "bodyText": "Wouldn't it be better to filter on the pane info itself?", "url": "https://github.com/apache/beam/pull/10951#discussion_r384789396", "createdAt": "2020-02-26T21:52:55Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -470,6 +470,9 @@ def test_combining_with_accumulation_mode_and_fanout(self):\n       ts.add_elements([i])\n     ts.advance_watermark_to_infinity()\n \n+    def is_early_firing(element, num_partitions):\n+      return 0 if element < 15 else 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faaed37dd4aee6e3d9d4c52c9cbf099dc7338dda"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "637fb55156d0a963faa938e59a38a6b41c2211d9", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/637fb55156d0a963faa938e59a38a6b41c2211d9", "committedDate": "2020-02-28T22:03:57Z", "message": "Created a new matcher."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cef317273cbc926604a6d1cc999e201386d72bdf", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/cef317273cbc926604a6d1cc999e201386d72bdf", "committedDate": "2020-03-03T02:05:21Z", "message": "Deleted the new matcher and used a new partition function."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26eb2fbc31e483a08e3507e5a538ced5da7148c9", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/26eb2fbc31e483a08e3507e5a538ced5da7148c9", "committedDate": "2020-03-03T17:40:12Z", "message": "Formatted."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MjE5OTI1", "url": "https://github.com/apache/beam/pull/10951#pullrequestreview-368219925", "createdAt": "2020-03-03T18:28:43Z", "commit": {"oid": "26eb2fbc31e483a08e3507e5a538ced5da7148c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoyODo0M1rOFxRdTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoyODo0M1rOFxRdTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxMDU3Mw==", "bodyText": "Rather than do a partition, I would write something like\ndef has_expected_values(actual):\n  ordered = sorted(actual)\n  # Early firings.\n  hamcrest.assert_that(ordered[:4], hamcrest.contains(1, 3, 6, 10))\n  # Different runners have different number of 15s, but there should be at least one 15.\n  hamcrest.assert_that(set(ordered[4:]), hamcrest.contains(15))\nassert_that(result, has_expected_values)", "url": "https://github.com/apache/beam/pull/10951#discussion_r387210573", "createdAt": "2020-03-03T18:28:43Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -482,9 +492,20 @@ def test_combining_with_accumulation_mode_and_fanout(self):\n               trigger=AfterWatermark(early=AfterAll(AfterCount(1))))\n           | beam.CombineGlobally(sum).without_defaults().with_fanout(2))\n \n-      # The frings for DISCARDING mode is [1, 2, 3, 4, 5, 0, 0].\n-      firings = [1, 3, 6, 10, 15, 15, 15]\n-      assert_that(result, equal_to(firings))\n+      # Partition the result into early_firings and _.\n+      # In ACCUMULATING mode, the early_frings is [1, 3, 6, 10],\n+      # other_firings is [15, 15, ...]. Different runners have different\n+      # number of 15s, but there should be at least one 15.\n+      smaller_than_fifteen, fifteen, greater_than_fifteen = (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26eb2fbc31e483a08e3507e5a538ced5da7148c9"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3439342a08f223d07b21177e6123823d4cdfeaf", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/e3439342a08f223d07b21177e6123823d4cdfeaf", "committedDate": "2020-03-03T19:29:03Z", "message": "Use a custom matcher."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MjY4MjYx", "url": "https://github.com/apache/beam/pull/10951#pullrequestreview-368268261", "createdAt": "2020-03-03T19:39:18Z", "commit": {"oid": "e3439342a08f223d07b21177e6123823d4cdfeaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTozOToxOVrOFxT0ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTozOToxOVrOFxT0ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0OTI1Mg==", "bodyText": "only_contains allows for duplicates, which you don't want here. Use contains instead. (You could use it below, and drop the set in set(ordered[4:]).)", "url": "https://github.com/apache/beam/pull/10951#discussion_r387249252", "createdAt": "2020-03-03T19:39:19Z", "author": {"login": "robertwb"}, "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -482,9 +482,17 @@ def test_combining_with_accumulation_mode_and_fanout(self):\n               trigger=AfterWatermark(early=AfterAll(AfterCount(1))))\n           | beam.CombineGlobally(sum).without_defaults().with_fanout(2))\n \n-      # The frings for DISCARDING mode is [1, 2, 3, 4, 5, 0, 0].\n-      firings = [1, 3, 6, 10, 15, 15, 15]\n-      assert_that(result, equal_to(firings))\n+      def has_expected_values(actual):\n+        from hamcrest.core import assert_that as hamcrest_assert\n+        from hamcrest.library.collection import only_contains\n+        ordered = sorted(actual)\n+        # Early firings.\n+        hamcrest_assert(ordered[:4], only_contains(1, 3, 6, 10))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3439342a08f223d07b21177e6123823d4cdfeaf"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22a8c2cf6efc87981b8e2a13ebeb7b8f327ff43a", "author": {"user": {"login": "bumblebee-coming", "name": null}}, "url": "https://github.com/apache/beam/commit/22a8c2cf6efc87981b8e2a13ebeb7b8f327ff43a", "committedDate": "2020-03-03T20:53:00Z", "message": "Replaced only_contains with contains."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Mzc0OTA2", "url": "https://github.com/apache/beam/pull/10951#pullrequestreview-368374906", "createdAt": "2020-03-03T22:31:35Z", "commit": {"oid": "22a8c2cf6efc87981b8e2a13ebeb7b8f327ff43a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2896, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}