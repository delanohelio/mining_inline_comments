{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzExNTEw", "number": 11569, "title": "[BEAM-9840] Support for Parameterized Types when converting from HCat\u2026", "bodyText": "\u2026Records to Rows in HCatalogIO\nchar and varchar types in HcatRecord requires the length of the character sequence to be provided as a parameter.\nserdeConstants only specifies the base name of the type. So, serdeConstants cannot be used to convert \"char(10)\" and \"varchar(100)\" to Beam Fieldtype.STRING.\nThis PR converts the FieldSchema to HCatFieldSchema and the Type enum defined in HCatFieldSchema is used to convert the FieldSchema to Beam Schema.\nDecimal type can optionally be provided with precision and scale as parameters while defining the type. Using HCatFieldSchema will take care of converting \"decimal(30,16)\" type to FieldType.DECIMAL type.\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nApex\nDataflow\nFlink\nGearpump\nSamza\nSpark\n\n\n\n\nGo\n\n---\n---\n\n---\n---\n\n\n\nJava\n\n\n\n\n\n\n\n\n\nPython\n\n---\n\n\n---\n---\n\n\n\nXLang\n---\n---\n---\n\n---\n---\n\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\n\n\n\n\nNon-portable\n\n\n\n\n\n\nPortable\n---\n\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.", "createdAt": "2020-04-29T13:24:33Z", "url": "https://github.com/apache/beam/pull/11569", "merged": true, "mergeCommit": {"oid": "dcd9f75f420f9f91beb60bae1e3ed4e37e9f19f1"}, "closed": true, "closedAt": "2020-05-06T20:39:09Z", "author": {"login": "rahul8383"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccYIyggH2gAyNDEwNzExNTEwOjZjOTE5MDE0MDE2OTIwOTJlNGVmYWQxODY2MzllOTNkZThjZDNlYzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceEVXXAFqTQwNTI1NjQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6c91901401692092e4efad186639e93de8cd3ec3", "author": {"user": {"login": "rahul8383", "name": "Rahul Patwari"}}, "url": "https://github.com/apache/beam/commit/6c91901401692092e4efad186639e93de8cd3ec3", "committedDate": "2020-04-29T13:03:17Z", "message": "[BEAM-9840] Support for Parameterized Types when converting from HCatRecords to Rows in HCatalogIO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjU2NDA1", "url": "https://github.com/apache/beam/pull/11569#pullrequestreview-405256405", "createdAt": "2020-05-04T18:52:02Z", "commit": {"oid": "6c91901401692092e4efad186639e93de8cd3ec3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODo1MjowMlrOGQNnLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODo1MjowMlrOGQNnLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1MzQyMQ==", "bodyText": "I think these should map to logical types instead of to primitives so we don't lose the information from the parameter. Unfortunately we don't (yet) have good logical types in schemas.logicaltypes to map them to, but maybe we will after your other PR, #11581 (or you could just add the relevant ones here).\nchar(10) looks like it could map to a FixedLengthString logical type, varchar(100) probably deserves its own type, maybe just called Varchar? and I've been meaning to add a logical type for DECIMAL parameterized by precision and scale as part of BEAM-7554 (and deprecate the primitive one).", "url": "https://github.com/apache/beam/pull/11569#discussion_r419653421", "createdAt": "2020-05-04T18:52:02Z", "author": {"login": "TheNeuralBit"}, "path": "sdks/java/io/hcatalog/src/test/java/org/apache/beam/sdk/io/hcatalog/SchemaUtilsTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.hcatalog;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.beam.sdk.schemas.Schema;\n+import org.apache.hadoop.hive.metastore.api.FieldSchema;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class SchemaUtilsTest {\n+  @Test\n+  public void testParameterizedTypesToBeamTypes() {\n+    List<FieldSchema> listOfFieldSchema = new ArrayList<>();\n+    listOfFieldSchema.add(new FieldSchema(\"parameterizedChar\", \"char(10)\", null));\n+    listOfFieldSchema.add(new FieldSchema(\"parameterizedVarchar\", \"varchar(100)\", null));\n+    listOfFieldSchema.add(new FieldSchema(\"parameterizedDecimal\", \"decimal(30,16)\", null));\n+\n+    Schema expectedSchema =\n+        Schema.builder()\n+            .addNullableField(\"parameterizedChar\", Schema.FieldType.STRING)\n+            .addNullableField(\"parameterizedVarchar\", Schema.FieldType.STRING)\n+            .addNullableField(\"parameterizedDecimal\", Schema.FieldType.DECIMAL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c91901401692092e4efad186639e93de8cd3ec3"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4103, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}