{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwMDQ1", "number": 12731, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzoxMTo0NFrOEi_aCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NzoyMVrOEjJSrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTI1ODk2OnYy", "diffSide": "RIGHT", "path": "runners/twister2/src/main/java/org/apache/beam/runners/twister2/Twister2PipelineResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzoxMTo0NFrOHRGm7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNToxMToxM1rOHX1L7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5NjExMA==", "bodyText": "Is there any particular reason to use a different logger kind here?\nWe use slf4j in most of the Beam code base for logging so maybe good to follow this on the Twister2 runner. Notice that this can be done in a separate PR.", "url": "https://github.com/apache/beam/pull/12731#discussion_r487696110", "createdAt": "2020-09-14T07:11:44Z", "author": {"login": "iemejia"}, "path": "runners/twister2/src/main/java/org/apache/beam/runners/twister2/Twister2PipelineResult.java", "diffHunk": "@@ -17,15 +17,21 @@\n  */\n package org.apache.beam.runners.twister2;\n \n+import edu.iu.dsc.tws.api.scheduler.Twister2JobState;\n import java.io.IOException;\n import org.apache.beam.sdk.PipelineResult;\n import org.apache.beam.sdk.metrics.MetricResults;\n import org.joda.time.Duration;\n+import org.mortbay.log.Log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8339055857ad99183077068a0ce3f8f2af940646"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1MDcwMw==", "bodyText": "@iemejia No, I will create separate PR that encapsulates all the changes you have mentioned. I will remove this log import", "url": "https://github.com/apache/beam/pull/12731#discussion_r494750703", "createdAt": "2020-09-25T05:11:13Z", "author": {"login": "pulasthi"}, "path": "runners/twister2/src/main/java/org/apache/beam/runners/twister2/Twister2PipelineResult.java", "diffHunk": "@@ -17,15 +17,21 @@\n  */\n package org.apache.beam.runners.twister2;\n \n+import edu.iu.dsc.tws.api.scheduler.Twister2JobState;\n import java.io.IOException;\n import org.apache.beam.sdk.PipelineResult;\n import org.apache.beam.sdk.metrics.MetricResults;\n import org.joda.time.Duration;\n+import org.mortbay.log.Log;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5NjExMA=="}, "originalCommit": {"oid": "8339055857ad99183077068a0ce3f8f2af940646"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjcyMjUyOnYy", "diffSide": "RIGHT", "path": "sdks/java/maven-archetypes/examples/src/main/resources/archetype-resources/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzozNToyM1rOHRUNFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzozNToyM1rOHRUNFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxODg2OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/beam/pull/12731#discussion_r487918868", "createdAt": "2020-09-14T13:35:23Z", "author": {"login": "iemejia"}, "path": "sdks/java/maven-archetypes/examples/src/main/resources/archetype-resources/pom.xml", "diffHunk": "@@ -281,6 +281,17 @@\n         </dependency>\n       </dependencies>\n     </profile>\n+    <profile>\n+      <id>twister2-runner</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8339055857ad99183077068a0ce3f8f2af940646"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mjg3ODU0OnYy", "diffSide": "RIGHT", "path": "runners/twister2/src/main/java/org/apache/beam/runners/twister2/Twister2Runner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NzoyMVrOHRVm_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NzoyMVrOHRVm_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MTg4Nw==", "bodyText": "with guava (use vendor if so) this can be simpler, but that's not blocking at all for this PR\nreturn Strings.isNullOrEmpty(options.getTwister2Home());", "url": "https://github.com/apache/beam/pull/12731#discussion_r487941887", "createdAt": "2020-09-14T13:57:21Z", "author": {"login": "iemejia"}, "path": "runners/twister2/src/main/java/org/apache/beam/runners/twister2/Twister2Runner.java", "diffHunk": "@@ -119,19 +129,27 @@ public PipelineResult run(Pipeline pipeline) {\n             .addComputeResource(options.getWorkerCPUs(), options.getRamMegaBytes(), workers)\n             .setConfig(jobConfig)\n             .build();\n-    Twister2JobState jobState = Twister2Submitter.submitJob(twister2Job, config);\n \n-    Twister2PipelineResult result = new Twister2PipelineResult();\n-    // TODO: Need to fix the check for \"RUNNING\" once fix for this is done on Twister2 end.\n-    if (jobState.getJobstate() == DriverJobState.FAILED\n-        || jobState.getJobstate() == DriverJobState.RUNNING) {\n-      throw new RuntimeException(\"Pipeline execution failed\", jobState.getCause());\n+    Twister2JobState jobState;\n+    if (isLocalMode(options)) {\n+      jobState = LocalSubmitter.submitJob(twister2Job, config);\n     } else {\n-      result.setState(PipelineResult.State.DONE);\n+      jobState = Twister2Submitter.submitJob(twister2Job, config);\n     }\n+\n+    Twister2PipelineResult result = new Twister2PipelineResult(jobState);\n     return result;\n   }\n \n+  /** Check if the Runner is set to use Twister local mode or pointing to a deployment. */\n+  private boolean isLocalMode(Twister2PipelineOptions options) {\n+    if (options.getTwister2Home() == null || \"\".equals(options.getTwister2Home())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8339055857ad99183077068a0ce3f8f2af940646"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 408, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}