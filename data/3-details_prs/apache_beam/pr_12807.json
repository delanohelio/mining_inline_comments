{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNDAwNDYw", "number": 12807, "title": "[BEAM-2855] implement query 10", "bodyText": "implemented query 10, now query 10 still does not do anything because it seems like Beam team hasn't made up mind about what to do with this query. (here is the comment in java query 10)\n\nThank you for your contribution! Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Choose reviewer(s) and mention them in a comment (R: @username).\n Format the pull request title like [BEAM-XXX] Fixes bug in ApproximateQuantiles, where you replace BEAM-XXX with the appropriate JIRA issue, if applicable. This will automatically link the pull request to the issue.\n Update CHANGES.md with noteworthy changes.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.\n\nSee the Contributor Guide for more tips on how to make review process smoother.\nPost-Commit Tests Status (on master branch)\n\n\n\nLang\nSDK\nDataflow\nFlink\nSamza\nSpark\nTwister2\n\n\n\n\nGo\n\n---\n\n---\n\n---\n\n\nJava\n\n\n\n\n\n\n\n\nPython\n\n\n\n---\n\n---\n\n\nXLang\n\n---\n\n---\n\n---\n\n\n\nPre-Commit Tests Status (on master branch)\n\n\n\n---\nJava\nPython\nGo\nWebsite\nWhitespace\nTypescript\n\n\n\n\nNon-portable\n\n \n\n\n\n\n\n\nPortable\n---\n\n---\n---\n---\n---\n\n\n\nSee .test-infra/jenkins/README for trigger phrase, status and link of all Jenkins jobs.\nGitHub Actions Tests Status (on master branch)\n\n\n\nSee CI.md for more information about GitHub Actions CI.", "createdAt": "2020-09-10T05:21:11Z", "url": "https://github.com/apache/beam/pull/12807", "merged": true, "mergeCommit": {"oid": "427b372c837109fea60206ee2026a5445c32b627"}, "closed": true, "closedAt": "2020-09-15T14:38:25Z", "author": {"login": "leiyiz"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHZvYUgH2gAyNDgzNDAwNDYwOjY0YWFhODI4NTZkODMzMzViN2I5ODQ5NzE1YmYwZGM4M2MwMzIyY2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIOXTMgFqTQ4NzI0Nzg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64aaa82856d83335b7b9849715bf0dc83c0322cd", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/64aaa82856d83335b7b9849715bf0dc83c0322cd", "committedDate": "2020-09-10T05:14:05Z", "message": "implement query 10"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/ce256db59ade1710d187391973cc85448ba03be8", "committedDate": "2020-09-10T05:58:05Z", "message": "removed incorrect typehint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTIzNjE3", "url": "https://github.com/apache/beam/pull/12807#pullrequestreview-486123617", "createdAt": "2020-09-10T16:44:47Z", "commit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDo0N1rOHP81CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1MjowNlrOHP9GDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NzMwNQ==", "bodyText": "Could you link or open a jira issue regarding this and comment it here?", "url": "https://github.com/apache/beam/pull/12807#discussion_r486487305", "createdAt": "2020-09-10T16:44:47Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MDM0Mg==", "bodyText": "Can we add a comment on the desired behavior of this trigger as well?", "url": "https://github.com/apache/beam/pull/12807#discussion_r486490342", "createdAt": "2020-09-10T16:49:51Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and\n+  #   it is left blank and unspecified.\n+  pass\n+\n+\n+def output_file_for(window, shard, pane):\n+  filename = '%s/LOG-%s-%s-%03d-%s' % (\n+      output_path, window.max_timestamp(), shard, pane.index,\n+      pane.timing) if output_path else None\n+  return OutputFile(\n+      window.max_timestamp(), shard, pane.index, pane.timing, filename)\n+\n+\n+def index_path_for(window):\n+  if output_path:\n+    return '%s/INDEX-%s' % (output_path, window.max_timestamp())\n+  else:\n+    return None\n+\n+\n+def load(events, pipeline_options, metadata=None):\n+  return (\n+      events\n+      | 'query10_shard_events' >> beam.ParDo(ShardEventsDoFn())\n+      | 'query10_fix_window' >> beam.WindowInto(\n+          window.FixedWindows(metadata.get('window_size_sec')),\n+          trigger=trigger.AfterEach(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MTY2Mg==", "bodyText": "nit: add some documentation on what the function is used for.", "url": "https://github.com/apache/beam/pull/12807#discussion_r486491662", "createdAt": "2020-09-10T16:52:06Z", "author": {"login": "y1chi"}, "path": "sdks/python/apache_beam/testing/benchmarks/nexmark/queries/query10.py", "diffHunk": "@@ -0,0 +1,136 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Query 10, 'Log to sharded files' (Not in original suite.)\n+\n+Every window_size_sec, save all events from the last period into\n+2*max_workers log files.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+\n+import apache_beam as beam\n+from apache_beam.options.pipeline_options import GoogleCloudOptions\n+from apache_beam.transforms import trigger\n+from apache_beam.transforms import window\n+from apache_beam.utils.timestamp import Duration\n+\n+NUM_SHARD_PER_WORKER = 5\n+LATE_BATCHING_PERIOD = Duration.of(10)\n+\n+output_path = None\n+max_num_workers = 5\n+\n+num_log_shards = NUM_SHARD_PER_WORKER * max_num_workers\n+\n+\n+class OutputFile(object):\n+  def __init__(self, max_timestamp, shard, index, timing, filename):\n+    self.max_timestamp = max_timestamp\n+    self.shard = shard\n+    self.index = index\n+    self.timing = timing\n+    self.filename = filename\n+\n+\n+def open_writable_gcs_file(options, filename):\n+  # TODO: it seems that beam team has not yet decided about this method and\n+  #   it is left blank and unspecified.\n+  pass\n+\n+\n+def output_file_for(window, shard, pane):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce256db59ade1710d187391973cc85448ba03be8"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c716e233594187ca91758a54f5d1daa69272d8c", "author": {"user": {"login": "leiyiz", "name": "Leiyi Zhang"}}, "url": "https://github.com/apache/beam/commit/0c716e233594187ca91758a54f5d1daa69272d8c", "committedDate": "2020-09-11T02:24:43Z", "message": "docs and comments for query 10, and jira issue linked with query10"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MjQ3ODcz", "url": "https://github.com/apache/beam/pull/12807#pullrequestreview-487247873", "createdAt": "2020-09-12T18:32:45Z", "commit": {"oid": "0c716e233594187ca91758a54f5d1daa69272d8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2638, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}