{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwODQ5MDg4", "number": 11761, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowOToyM1rOD_UUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNDo0OToyM1rOEBHMgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE5ODAzOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/CoGroupByKey/CoGroupByKey/src/org/apache/beam/learning/katas/coretransforms/cogroupbykey/WordsAlphabet.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowOToyM1rOGZ6Ycw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyOTo0MFrOGahABA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyNDExNQ==", "bodyText": "We can make this data class too.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429824115", "createdAt": "2020-05-25T09:09:23Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/CoGroupByKey/CoGroupByKey/src/org/apache/beam/learning/katas/coretransforms/cogroupbykey/WordsAlphabet.kt", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.cogroupbykey\n+\n+class WordsAlphabet(private val alphabet: String?, private val fruit: String, private val country: String) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ1NjgzNg==", "bodyText": "This change should be made in the latest commit.", "url": "https://github.com/apache/beam/pull/11761#discussion_r430456836", "createdAt": "2020-05-26T14:29:40Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/CoGroupByKey/CoGroupByKey/src/org/apache/beam/learning/katas/coretransforms/cogroupbykey/WordsAlphabet.kt", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.cogroupbykey\n+\n+class WordsAlphabet(private val alphabet: String?, private val fruit: String, private val country: String) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyNDExNQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzIwNTczOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Side Input/Side Input/src/org/apache/beam/learning/katas/coretransforms/sideinput/Person.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToxMjowMFrOGZ6dRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToxMjowMFrOGZ6dRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyNTM0OQ==", "bodyText": "We can make this data class and remove the equals, hashCode, and toString", "url": "https://github.com/apache/beam/pull/11761#discussion_r429825349", "createdAt": "2020-05-25T09:12:00Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Side Input/Side Input/src/org/apache/beam/learning/katas/coretransforms/sideinput/Person.kt", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.sideinput\n+\n+import java.io.Serializable\n+import java.util.*\n+\n+class Person(val name: String?, val city: String?, private val country: String? = null) : Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI0NTIzOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/ParDo/src/org/apache/beam/learning/katas/windowing/addingtimestamp/pardo/Event.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToyNDoxN1rOGZ615w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDowODoxOFrOGb217Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMTY1NQ==", "bodyText": "We can make this as data class and remove the equals, hashCode, and toString.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429831655", "createdAt": "2020-05-25T09:24:17Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/ParDo/src/org/apache/beam/learning/katas/windowing/addingtimestamp/pardo/Event.kt", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.pardo\n+\n+import org.joda.time.DateTime\n+import java.io.Serializable\n+import java.util.*\n+\n+class Event(private var id: String, private var event: String, var date: DateTime) : Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MzI3Nw==", "bodyText": "This change should be made in the latest commit.", "url": "https://github.com/apache/beam/pull/11761#discussion_r431863277", "createdAt": "2020-05-28T14:08:18Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/ParDo/src/org/apache/beam/learning/katas/windowing/addingtimestamp/pardo/Event.kt", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.pardo\n+\n+import org.joda.time.DateTime\n+import java.io.Serializable\n+import java.util.*\n+\n+class Event(private var id: String, private var event: String, var date: DateTime) : Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMTY1NQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI0ODU5OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/src/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/Event.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToyNTowOFrOGZ630g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDowODozOFrOGb221g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMjE0Ng==", "bodyText": "We can make this as data class and remove the equals, hashCode, and toString.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429832146", "createdAt": "2020-05-25T09:25:08Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/src/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/Event.kt", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps\n+\n+import org.joda.time.DateTime\n+import java.io.Serializable\n+import java.util.*\n+\n+class Event(private var id: String, private var event: String, var date: DateTime) : Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MzUxMA==", "bodyText": "This change should be made in the latest commit.", "url": "https://github.com/apache/beam/pull/11761#discussion_r431863510", "createdAt": "2020-05-28T14:08:38Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/src/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/Event.kt", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps\n+\n+import org.joda.time.DateTime\n+import java.io.Serializable\n+import java.util.*\n+\n+class Event(private var id: String, private var event: String, var date: DateTime) : Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMjE0Ng=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI1MzQ3OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/ParDo/task.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToyNjo0NVrOGZ663w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMTo0MFrOGb2_Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMjkyNw==", "bodyText": "Use Kotlin sytle Event.date", "url": "https://github.com/apache/beam/pull/11761#discussion_r429832927", "createdAt": "2020-05-25T09:26:45Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/ParDo/task.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+Adding Timestamp - ParDo\n+------------------------\n+\n+Bounded sources (such as a file from TextIO) do not provide timestamps for elements. If you need \n+timestamps, you must add them to your PCollection\u2019s elements.\n+\n+You can assign new timestamps to the elements of a PCollection by applying a ParDo transform that \n+outputs new elements with timestamps that you set.\n+\n+**Kata:** Please assign each element a timestamp based on the the `Event.getDate()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NTY0Ng==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431865646", "createdAt": "2020-05-28T14:11:40Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/ParDo/task.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+Adding Timestamp - ParDo\n+------------------------\n+\n+Bounded sources (such as a file from TextIO) do not provide timestamps for elements. If you need \n+timestamps, you must add them to your PCollection\u2019s elements.\n+\n+You can assign new timestamps to the elements of a PCollection by applying a ParDo transform that \n+outputs new elements with timestamps that you set.\n+\n+**Kata:** Please assign each element a timestamp based on the the `Event.getDate()`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMjkyNw=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI1ODgzOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/task.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToyODozNFrOGZ6-XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOToyODozNFrOGZ6-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzMzgyMA==", "bodyText": "Use Kotlin sytle Event.date", "url": "https://github.com/apache/beam/pull/11761#discussion_r429833820", "createdAt": "2020-05-25T09:28:34Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/task.md", "diffHunk": "@@ -0,0 +1,39 @@\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+Adding Timestamp - WithTimestamps\n+---------------------------------\n+\n+Bounded sources (such as a file from TextIO) do not provide timestamps for elements. If you need \n+timestamps, you must add them to your PCollection\u2019s elements.\n+\n+You can assign new timestamps to the elements of a PCollection by applying a ParDo transform that \n+outputs new elements with timestamps that you set.\n+\n+**Kata:** Please assign each element a timestamp based on the the `Event.getDate()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI3MDE5OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/test/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/TaskTest.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTozMjoxNlrOGZ7FaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxNjozM1rOGb3Mvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzNTYyNA==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429835624", "createdAt": "2020-05-25T09:32:16Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/test/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/TaskTest.kt", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps\n+\n+import org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps.Task.applyTransform\n+import org.apache.beam.sdk.testing.PAssert\n+import org.apache.beam.sdk.testing.TestPipeline\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.DoFn\n+import org.apache.beam.sdk.transforms.ParDo\n+import org.apache.beam.sdk.values.KV\n+import org.joda.time.DateTime\n+import org.joda.time.Instant\n+import org.junit.Rule\n+import org.junit.Test\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2OTExOQ==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431869119", "createdAt": "2020-05-28T14:16:33Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/test/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/TaskTest.kt", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps\n+\n+import org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps.Task.applyTransform\n+import org.apache.beam.sdk.testing.PAssert\n+import org.apache.beam.sdk.testing.TestPipeline\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.DoFn\n+import org.apache.beam.sdk.transforms.ParDo\n+import org.apache.beam.sdk.values.KV\n+import org.joda.time.DateTime\n+import org.joda.time.Instant\n+import org.junit.Rule\n+import org.junit.Test\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzNTYyNA=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI4MDY3OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/test/org/apache/beam/learning/katas/windowing/fixedwindow/WindowedEvent.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTozNTo0NFrOGZ7L9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoyNzo1OFrOGcFjjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzNzMwMQ==", "bodyText": "We can make this as data class and remove the equals, hashCode, and toString.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429837301", "createdAt": "2020-05-25T09:35:44Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/test/org/apache/beam/learning/katas/windowing/fixedwindow/WindowedEvent.kt", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.fixedwindow\n+\n+import java.io.Serializable\n+import java.util.*\n+\n+class WindowedEvent(private val event: String?, private val count: Long, private val window: String) : Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwNDMzMg==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432104332", "createdAt": "2020-05-28T20:27:58Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/test/org/apache/beam/learning/katas/windowing/fixedwindow/WindowedEvent.kt", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.fixedwindow\n+\n+import java.io.Serializable\n+import java.util.*\n+\n+class WindowedEvent(private val event: String?, private val count: Long, private val window: String) : Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzNzMwMQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzI5Mjk3OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Common Transforms/Filter/ParDo/src/org/apache/beam/learning/katas/commontransforms/filter/pardo/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo0MDowMFrOGZ7T9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxNjoyOFrOGb3MiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzOTM0OA==", "bodyText": "Since we can't use Int, we should remove @Element element: Int argument.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429839348", "createdAt": "2020-05-25T09:40:00Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Common Transforms/Filter/ParDo/src/org/apache/beam/learning/katas/commontransforms/filter/pardo/Task.kt", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.commontransforms.filter.pardo\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.DoFn\n+import org.apache.beam.sdk.transforms.ParDo\n+import org.apache.beam.sdk.values.PCollection\n+\n+object Task {\n+    @JvmStatic\n+    fun main(args: Array<String>) {\n+        val options = PipelineOptionsFactory.fromArgs(*args).create()\n+        val pipeline = Pipeline.create(options)\n+\n+        val numbers= pipeline.apply(Create.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n+\n+        val output = applyTransform(numbers)\n+\n+        output.apply(Log.ofElements())\n+\n+        pipeline.run()\n+    }\n+\n+    @JvmStatic\n+    fun applyTransform(input: PCollection<Int>): PCollection<Int> {\n+        return input.apply(ParDo.of(object : DoFn<Int, Int>() {\n+                    @ProcessElement\n+                    fun processElement(@Element element: Int, context: ProcessContext, out: OutputReceiver<Int>) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2OTA2NA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431869064", "createdAt": "2020-05-28T14:16:28Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Common Transforms/Filter/ParDo/src/org/apache/beam/learning/katas/commontransforms/filter/pardo/Task.kt", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.commontransforms.filter.pardo\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.DoFn\n+import org.apache.beam.sdk.transforms.ParDo\n+import org.apache.beam.sdk.values.PCollection\n+\n+object Task {\n+    @JvmStatic\n+    fun main(args: Array<String>) {\n+        val options = PipelineOptionsFactory.fromArgs(*args).create()\n+        val pipeline = Pipeline.create(options)\n+\n+        val numbers= pipeline.apply(Create.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n+\n+        val output = applyTransform(numbers)\n+\n+        output.apply(Log.ofElements())\n+\n+        pipeline.run()\n+    }\n+\n+    @JvmStatic\n+    fun applyTransform(input: PCollection<Int>): PCollection<Int> {\n+        return input.apply(ParDo.of(object : DoFn<Int, Int>() {\n+                    @ProcessElement\n+                    fun processElement(@Element element: Int, context: ProcessContext, out: OutputReceiver<Int>) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgzOTM0OA=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzMyMjU4OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo0OTozMFrOGZ7mWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoyNTo0NFrOGcFeog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NDA1OA==", "bodyText": "We can make this\ninternal data class Accum(var sum: Int = 0, var count: Int = 0) : Serializable", "url": "https://github.com/apache/beam/pull/11761#discussion_r429844058", "createdAt": "2020-05-25T09:49:30Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.combine.combinefn\n+\n+import org.apache.beam.learning.katas.coretransforms.combine.combinefn.Task.AverageFn.Accum\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Combine\n+import org.apache.beam.sdk.transforms.Combine.CombineFn\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection\n+import java.io.Serializable\n+import java.util.*\n+\n+object Task {\n+    @JvmStatic\n+    fun main(args: Array<String>) {\n+        val options = PipelineOptionsFactory.fromArgs(*args).create()\n+        val pipeline = Pipeline.create(options)\n+\n+        val numbers = pipeline.apply(Create.of(10, 20, 50, 70, 90))\n+\n+        val output = applyTransform(numbers)\n+\n+        output.apply(Log.ofElements())\n+\n+        pipeline.run()\n+    }\n+\n+    @JvmStatic\n+    fun applyTransform(input: PCollection<Int>): PCollection<Double> {\n+        return input.apply(Combine.globally(AverageFn()))\n+    }\n+\n+    internal class AverageFn : CombineFn<Int, Accum, Double>() {\n+\n+        internal inner class Accum : Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMzA3NA==", "bodyText": "Done", "url": "https://github.com/apache/beam/pull/11761#discussion_r432103074", "createdAt": "2020-05-28T20:25:44Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.combine.combinefn\n+\n+import org.apache.beam.learning.katas.coretransforms.combine.combinefn.Task.AverageFn.Accum\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Combine\n+import org.apache.beam.sdk.transforms.Combine.CombineFn\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection\n+import java.io.Serializable\n+import java.util.*\n+\n+object Task {\n+    @JvmStatic\n+    fun main(args: Array<String>) {\n+        val options = PipelineOptionsFactory.fromArgs(*args).create()\n+        val pipeline = Pipeline.create(options)\n+\n+        val numbers = pipeline.apply(Create.of(10, 20, 50, 70, 90))\n+\n+        val output = applyTransform(numbers)\n+\n+        output.apply(Log.ofElements())\n+\n+        pipeline.run()\n+    }\n+\n+    @JvmStatic\n+    fun applyTransform(input: PCollection<Int>): PCollection<Double> {\n+        return input.apply(Combine.globally(AverageFn()))\n+    }\n+\n+    internal class AverageFn : CombineFn<Int, Accum, Double>() {\n+\n+        internal inner class Accum : Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NDA1OA=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzMzMzA3OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/util/test/org/apache/beam/learning/katas/util/ContainsKvs.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo1Mjo1M1rOGZ7suA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoyNTo0N1rOGcFetw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NTY4OA==", "bodyText": "Can be simplified to KvMatcher.isKv", "url": "https://github.com/apache/beam/pull/11761#discussion_r429845688", "createdAt": "2020-05-25T09:52:53Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/util/test/org/apache/beam/learning/katas/util/ContainsKvs.kt", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.util\n+\n+import com.google.common.collect.ImmutableList\n+import com.google.common.collect.Iterables\n+import org.apache.beam.sdk.transforms.SerializableFunction\n+import org.apache.beam.sdk.values.KV\n+import org.hamcrest.CoreMatchers\n+import org.hamcrest.Matcher\n+import org.hamcrest.collection.IsIterableContainingInAnyOrder\n+import org.junit.Assert\n+import java.util.*\n+\n+class ContainsKvs private constructor(private val expectedKvs: List<KV<String, Iterable<String>>>) : SerializableFunction<Iterable<KV<String, Iterable<String>>>, Void?> {\n+\n+    companion object {\n+        @SafeVarargs\n+        fun containsKvs(vararg kvs: KV<String, Iterable<String>>): SerializableFunction<Iterable<KV<String, Iterable<String>>>, Void?> {\n+            return ContainsKvs(ImmutableList.copyOf(kvs))\n+        }\n+    }\n+\n+    override fun apply(input: Iterable<KV<String, Iterable<String>>>): Void? {\n+        val matchers: MutableList<Matcher<in KV<String, Iterable<String>>>> = ArrayList()\n+\n+        for (expected in expectedKvs) {\n+            val values = Iterables.toArray(expected.value, String::class.java)\n+            matchers.add(KvMatcher.Companion.isKv(CoreMatchers.equalTo(expected.key), IsIterableContainingInAnyOrder.containsInAnyOrder(*values)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMzA5NQ==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432103095", "createdAt": "2020-05-28T20:25:47Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/util/test/org/apache/beam/learning/katas/util/ContainsKvs.kt", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.util\n+\n+import com.google.common.collect.ImmutableList\n+import com.google.common.collect.Iterables\n+import org.apache.beam.sdk.transforms.SerializableFunction\n+import org.apache.beam.sdk.values.KV\n+import org.hamcrest.CoreMatchers\n+import org.hamcrest.Matcher\n+import org.hamcrest.collection.IsIterableContainingInAnyOrder\n+import org.junit.Assert\n+import java.util.*\n+\n+class ContainsKvs private constructor(private val expectedKvs: List<KV<String, Iterable<String>>>) : SerializableFunction<Iterable<KV<String, Iterable<String>>>, Void?> {\n+\n+    companion object {\n+        @SafeVarargs\n+        fun containsKvs(vararg kvs: KV<String, Iterable<String>>): SerializableFunction<Iterable<KV<String, Iterable<String>>>, Void?> {\n+            return ContainsKvs(ImmutableList.copyOf(kvs))\n+        }\n+    }\n+\n+    override fun apply(input: Iterable<KV<String, Iterable<String>>>): Void? {\n+        val matchers: MutableList<Matcher<in KV<String, Iterable<String>>>> = ArrayList()\n+\n+        for (expected in expectedKvs) {\n+            val values = Iterables.toArray(expected.value, String::class.java)\n+            matchers.add(KvMatcher.Companion.isKv(CoreMatchers.equalTo(expected.key), IsIterableContainingInAnyOrder.containsInAnyOrder(*values)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NTY4OA=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzMzNzQzOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Map/FlatMapElements/src/org/apache/beam/learning/katas/coretransforms/map/flatmapelements/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo1NDozOFrOGZ7vrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxNjo0NlrOGb3NVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NjQ0NQ==", "bodyText": "Remove unused import", "url": "https://github.com/apache/beam/pull/11761#discussion_r429846445", "createdAt": "2020-05-25T09:54:38Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Map/FlatMapElements/src/org/apache/beam/learning/katas/coretransforms/map/flatmapelements/Task.kt", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.map.flatmapelements\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.FlatMapElements\n+import org.apache.beam.sdk.transforms.SerializableFunction\n+import org.apache.beam.sdk.values.PCollection\n+import org.apache.beam.sdk.values.TypeDescriptors\n+import java.util.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2OTI2OA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431869268", "createdAt": "2020-05-28T14:16:46Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Map/FlatMapElements/src/org/apache/beam/learning/katas/coretransforms/map/flatmapelements/Task.kt", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.map.flatmapelements\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.FlatMapElements\n+import org.apache.beam.sdk.transforms.SerializableFunction\n+import org.apache.beam.sdk.values.PCollection\n+import org.apache.beam.sdk.values.TypeDescriptors\n+import java.util.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NjQ0NQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzM0Njg5OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo1Nzo1NFrOGZ71Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxNjo1NFrOGb3Nqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NzkwNw==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429847907", "createdAt": "2020-05-25T09:57:54Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.combine.combinefn\n+\n+import org.apache.beam.learning.katas.coretransforms.combine.combinefn.Task.AverageFn.Accum\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Combine\n+import org.apache.beam.sdk.transforms.Combine.CombineFn\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2OTM1NA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431869354", "createdAt": "2020-05-28T14:16:54Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.combine.combinefn\n+\n+import org.apache.beam.learning.katas.coretransforms.combine.combinefn.Task.AverageFn.Accum\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Combine\n+import org.apache.beam.sdk.transforms.Combine.CombineFn\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NzkwNw=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzM1MTIwOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Partition/Partition/src/org/apache/beam/learning/katas/coretransforms/partition/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo1OToyMFrOGZ74DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMTo0OVrOGb2_iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODU4OQ==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429848589", "createdAt": "2020-05-25T09:59:20Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Partition/Partition/src/org/apache/beam/learning/katas/coretransforms/partition/Task.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.partition\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.Partition\n+import org.apache.beam.sdk.transforms.Partition.PartitionFn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NTczNw==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431865737", "createdAt": "2020-05-28T14:11:49Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Partition/Partition/src/org/apache/beam/learning/katas/coretransforms/partition/Task.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.partition\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.Partition\n+import org.apache.beam.sdk.transforms.Partition.PartitionFn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODU4OQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzM1ODMwOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Common Transforms/Filter/ParDo/test/org/apache/beam/learning/katas/commontransforms/filter/pardo/TaskTest.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDowMTo1NlrOGZ78pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMTo1NlrOGb2_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0OTc2Nw==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429849767", "createdAt": "2020-05-25T10:01:56Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Common Transforms/Filter/ParDo/test/org/apache/beam/learning/katas/commontransforms/filter/pardo/TaskTest.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.commontransforms.filter.pardo\n+\n+import org.apache.beam.learning.katas.commontransforms.filter.pardo.Task.applyTransform\n+import org.apache.beam.sdk.testing.PAssert\n+import org.apache.beam.sdk.testing.TestPipeline\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NTgxOQ==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431865819", "createdAt": "2020-05-28T14:11:56Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Common Transforms/Filter/ParDo/test/org/apache/beam/learning/katas/commontransforms/filter/pardo/TaskTest.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.commontransforms.filter.pardo\n+\n+import org.apache.beam.learning.katas.commontransforms.filter.pardo.Task.applyTransform\n+import org.apache.beam.sdk.testing.PAssert\n+import org.apache.beam.sdk.testing.TestPipeline\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0OTc2Nw=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzM3MDExOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/src/org/apache/beam/learning/katas/windowing/fixedwindow/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDowNTozMlrOGZ8D5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMjowM1rOGb3AHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTYyMQ==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429851621", "createdAt": "2020-05-25T10:05:32Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/src/org/apache/beam/learning/katas/windowing/fixedwindow/Task.kt", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.fixedwindow\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Count\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.windowing.FixedWindows\n+import org.apache.beam.sdk.transforms.windowing.Window\n+import org.apache.beam.sdk.values.KV\n+import org.apache.beam.sdk.values.PCollection\n+import org.apache.beam.sdk.values.TimestampedValue\n+import org.apache.beam.sdk.values.TypeDescriptors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NTg4Ng==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431865886", "createdAt": "2020-05-28T14:12:03Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/src/org/apache/beam/learning/katas/windowing/fixedwindow/Task.kt", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.fixedwindow\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Count\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.windowing.FixedWindows\n+import org.apache.beam.sdk.transforms.windowing.Window\n+import org.apache.beam.sdk.values.KV\n+import org.apache.beam.sdk.values.PCollection\n+import org.apache.beam.sdk.values.TimestampedValue\n+import org.apache.beam.sdk.values.TypeDescriptors", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTYyMQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzM4MDQ4OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Examples/Word Count/Word Count/src/org/apache/beam/learning/katas/examples/wordcount/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDowOToyMlrOGZ8KZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMjoxMFrOGb3AbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MzI4NQ==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429853285", "createdAt": "2020-05-25T10:09:22Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Examples/Word Count/Word Count/src/org/apache/beam/learning/katas/examples/wordcount/Task.kt", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.examples.wordcount\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.*\n+import org.apache.beam.sdk.values.KV\n+import org.apache.beam.sdk.values.PCollection\n+import org.apache.beam.sdk.values.TypeDescriptors\n+import java.util.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NTk2NA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r431865964", "createdAt": "2020-05-28T14:12:10Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Examples/Word Count/Word Count/src/org/apache/beam/learning/katas/examples/wordcount/Task.kt", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.examples.wordcount\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.*\n+import org.apache.beam.sdk.values.KV\n+import org.apache.beam.sdk.values.PCollection\n+import org.apache.beam.sdk.values.TypeDescriptors\n+import java.util.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MzI4NQ=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzkyNTkxOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/src/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzozNzozMFrOGaBaPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMjozMFrOGb3BSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzOTI2Mg==", "bodyText": "The answer placeholder on Stepik doesn't seem right.\nAnd I also found similar occurrence in few other places.\nWe can update the course again after the revisions to the PR have been done.", "url": "https://github.com/apache/beam/pull/11761#discussion_r429939262", "createdAt": "2020-05-25T13:37:30Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/src/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/Task.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.WithTimestamps\n+import org.apache.beam.sdk.values.PCollection\n+import org.joda.time.DateTime\n+\n+object Task {\n+    @JvmStatic\n+    fun main(args: Array<String>) {\n+        val options = PipelineOptionsFactory.fromArgs(*args).create()\n+        val pipeline = Pipeline.create(options)\n+\n+        val events = pipeline.apply(\n+                Create.of(\n+                        Event(\"1\", \"book-order\", DateTime.parse(\"2019-06-01T00:00:00+00:00\")),\n+                        Event(\"2\", \"pencil-order\", DateTime.parse(\"2019-06-02T00:00:00+00:00\")),\n+                        Event(\"3\", \"paper-order\", DateTime.parse(\"2019-06-03T00:00:00+00:00\")),\n+                        Event(\"4\", \"pencil-order\", DateTime.parse(\"2019-06-04T00:00:00+00:00\")),\n+                        Event(\"5\", \"book-order\", DateTime.parse(\"2019-06-05T00:00:00+00:00\"))\n+                )\n+        )\n+\n+        val output = applyTransform(events)\n+\n+        output.apply(Log.ofElements())\n+\n+        pipeline.run()\n+    }\n+\n+    @JvmStatic\n+    fun applyTransform(events: PCollection<Event>): PCollection<Event> {\n+        return events.apply(WithTimestamps.of { event: Event -> event.date.toInstant() })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NjE4NA==", "bodyText": "This should be adjusted; I tested it through and it worked locally.", "url": "https://github.com/apache/beam/pull/11761#discussion_r431866184", "createdAt": "2020-05-28T14:12:30Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/src/org/apache/beam/learning/katas/windowing/addingtimestamp/withtimestamps/Task.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.addingtimestamp.withtimestamps\n+\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.WithTimestamps\n+import org.apache.beam.sdk.values.PCollection\n+import org.joda.time.DateTime\n+\n+object Task {\n+    @JvmStatic\n+    fun main(args: Array<String>) {\n+        val options = PipelineOptionsFactory.fromArgs(*args).create()\n+        val pipeline = Pipeline.create(options)\n+\n+        val events = pipeline.apply(\n+                Create.of(\n+                        Event(\"1\", \"book-order\", DateTime.parse(\"2019-06-01T00:00:00+00:00\")),\n+                        Event(\"2\", \"pencil-order\", DateTime.parse(\"2019-06-02T00:00:00+00:00\")),\n+                        Event(\"3\", \"paper-order\", DateTime.parse(\"2019-06-03T00:00:00+00:00\")),\n+                        Event(\"4\", \"pencil-order\", DateTime.parse(\"2019-06-04T00:00:00+00:00\")),\n+                        Event(\"5\", \"book-order\", DateTime.parse(\"2019-06-05T00:00:00+00:00\"))\n+                )\n+        )\n+\n+        val output = applyTransform(events)\n+\n+        output.apply(Log.ofElements())\n+\n+        pipeline.run()\n+    }\n+\n+    @JvmStatic\n+    fun applyTransform(events: PCollection<Event>): PCollection<Event> {\n+        return events.apply(WithTimestamps.of { event: Event -> event.date.toInstant() })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzOTI2Mg=="}, "originalCommit": {"oid": "8f053098f6ed1cc3b236e96ca14c83a1059b1f7b"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjAwNTI3OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/test/org/apache/beam/learning/katas/windowing/fixedwindow/WindowedEvent.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNDoyODoyM1rOGcyzzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODo0Njo0MFrOGc0xag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0NTc3NQ==", "bodyText": "Remove unused import.", "url": "https://github.com/apache/beam/pull/11761#discussion_r432845775", "createdAt": "2020-05-30T14:28:23Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/test/org/apache/beam/learning/katas/windowing/fixedwindow/WindowedEvent.kt", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.fixedwindow\n+\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3NzkzMA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432877930", "createdAt": "2020-05-30T18:46:40Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Fixed Time Window/Fixed Time Window/test/org/apache/beam/learning/katas/windowing/fixedwindow/WindowedEvent.kt", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.windowing.fixedwindow\n+\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0NTc3NQ=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjAwNjU2OnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNDozMDo1NVrOGcy0dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODo0Njo0OVrOGc0xdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0NTk0Mw==", "bodyText": "Seems this import hasn't been removed.", "url": "https://github.com/apache/beam/pull/11761#discussion_r432845943", "createdAt": "2020-05-30T14:30:55Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.combine.combinefn\n+\n+import org.apache.beam.learning.katas.coretransforms.combine.combinefn.Task.AverageFn.Accum\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Combine\n+import org.apache.beam.sdk.transforms.Combine.CombineFn\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Nzk0Mg==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432877942", "createdAt": "2020-05-30T18:46:49Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.beam.learning.katas.coretransforms.combine.combinefn\n+\n+import org.apache.beam.learning.katas.coretransforms.combine.combinefn.Task.AverageFn.Accum\n+import org.apache.beam.learning.katas.util.Log\n+import org.apache.beam.sdk.Pipeline\n+import org.apache.beam.sdk.options.PipelineOptionsFactory\n+import org.apache.beam.sdk.transforms.Combine\n+import org.apache.beam.sdk.transforms.Combine.CombineFn\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.values.PCollection\n+import java.io.Serializable\n+import java.util.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0NTk0Mw=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjAwODcwOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/task.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNDozNTozOFrOGcy1kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODo0Njo1NlrOGc0xfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0NjIyNA==", "bodyText": "Please to change the description to Event.date", "url": "https://github.com/apache/beam/pull/11761#discussion_r432846224", "createdAt": "2020-05-30T14:35:38Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/task.md", "diffHunk": "@@ -0,0 +1,39 @@\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+Adding Timestamp - WithTimestamps\n+---------------------------------\n+\n+Bounded sources (such as a file from TextIO) do not provide timestamps for elements. If you need \n+timestamps, you must add them to your PCollection\u2019s elements.\n+\n+You can assign new timestamps to the elements of a PCollection by applying a ParDo transform that \n+outputs new elements with timestamps that you set.\n+\n+**Kata:** Please assign each element a timestamp based on the the `Event.getDate()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Nzk1MA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432877950", "createdAt": "2020-05-30T18:46:56Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Windowing/Adding Timestamp/WithTimestamps/task.md", "diffHunk": "@@ -0,0 +1,39 @@\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+Adding Timestamp - WithTimestamps\n+---------------------------------\n+\n+Bounded sources (such as a file from TextIO) do not provide timestamps for elements. If you need \n+timestamps, you must add them to your PCollection\u2019s elements.\n+\n+You can assign new timestamps to the elements of a PCollection by applying a ParDo transform that \n+outputs new elements with timestamps that you set.\n+\n+**Kata:** Please assign each element a timestamp based on the the `Event.getDate()`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0NjIyNA=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjAxNDczOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Map/MapElements/task-info.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNDo0NzoxNlrOGcy4lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMzo0NjoxMlrOGc5GqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Njk5Ng==", "bodyText": "There are overlapping answer placeholders here.\nPlease remove one of it.", "url": "https://github.com/apache/beam/pull/11761#discussion_r432846996", "createdAt": "2020-05-30T14:47:16Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Map/MapElements/task-info.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+type: edu\n+files:\n+- name: src/org/apache/beam/learning/katas/coretransforms/map/mapelements/Task.kt\n+  visible: true\n+  placeholders:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Nzk2Mg==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432877962", "createdAt": "2020-05-30T18:47:03Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Map/MapElements/task-info.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+type: edu\n+files:\n+- name: src/org/apache/beam/learning/katas/coretransforms/map/mapelements/Task.kt\n+  visible: true\n+  placeholders:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Njk5Ng=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTA5MA==", "bodyText": "Can you exclude the \"return\" from the answer placeholder, similar to the other tasks in the Map lesson?", "url": "https://github.com/apache/beam/pull/11761#discussion_r432929090", "createdAt": "2020-05-31T09:47:08Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Map/MapElements/task-info.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+type: edu\n+files:\n+- name: src/org/apache/beam/learning/katas/coretransforms/map/mapelements/Task.kt\n+  visible: true\n+  placeholders:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Njk5Ng=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk0ODkwNQ==", "bodyText": "Done (and checked through the remaining Map tasks to ensure they aligned).", "url": "https://github.com/apache/beam/pull/11761#discussion_r432948905", "createdAt": "2020-05-31T13:46:12Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Map/MapElements/task-info.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+type: edu\n+files:\n+- name: src/org/apache/beam/learning/katas/coretransforms/map/mapelements/Task.kt\n+  visible: true\n+  placeholders:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Njk5Ng=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjAxOTIyOnYy", "diffSide": "RIGHT", "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/task-info.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNDo0OToyM1rOGcy7fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODo0NzoxMVrOGc0xkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Nzc0MA==", "bodyText": "Can you help to fix the placement of the TODO?", "url": "https://github.com/apache/beam/pull/11761#discussion_r432847740", "createdAt": "2020-05-30T14:49:23Z", "author": {"login": "henryken"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/task-info.yaml", "diffHunk": "@@ -0,0 +1,10 @@\n+type: edu\n+files:\n+- name: src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt\n+  visible: true\n+  placeholders:\n+  - offset: 1951", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Nzk3MA==", "bodyText": "Done!", "url": "https://github.com/apache/beam/pull/11761#discussion_r432877970", "createdAt": "2020-05-30T18:47:11Z", "author": {"login": "rionmonster"}, "path": "learning/katas/kotlin/Core Transforms/Combine/CombineFn/task-info.yaml", "diffHunk": "@@ -0,0 +1,10 @@\n+type: edu\n+files:\n+- name: src/org/apache/beam/learning/katas/coretransforms/combine/combinefn/Task.kt\n+  visible: true\n+  placeholders:\n+  - offset: 1951", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Nzc0MA=="}, "originalCommit": {"oid": "893db17ec09bf6e23ff379be84b266e6af0b36d5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3825, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}