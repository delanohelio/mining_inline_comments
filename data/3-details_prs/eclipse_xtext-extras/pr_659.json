{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjAwMTc5", "number": 659, "title": "[eclipse/xtext#1837] converted more code to java", "bodyText": "[eclipse/xtext#1837] converted more code to java\nSigned-off-by: Christian Dietrich christian.dietrich@itemis.de", "createdAt": "2020-11-01T10:58:44Z", "url": "https://github.com/eclipse/xtext-extras/pull/659", "merged": true, "mergeCommit": {"oid": "3b0d2b73e11809feab5686d97fc4dc37afd3b5d9"}, "closed": true, "closedAt": "2020-11-02T08:57:37Z", "author": {"login": "cdietrich"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYSNmlABqjM5NDUzMjU5NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYjYrZgFqTUyMTU3MDEzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57f116d6eb6f072d7aa7f094d0fcebf24ab3b705", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/57f116d6eb6f072d7aa7f094d0fcebf24ab3b705", "committedDate": "2020-11-01T10:34:38Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "a536683e1c28ff05e837f037a3a65453505eb969", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/a536683e1c28ff05e837f037a3a65453505eb969", "committedDate": "2020-11-01T16:04:26Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a536683e1c28ff05e837f037a3a65453505eb969", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/a536683e1c28ff05e837f037a3a65453505eb969", "committedDate": "2020-11-01T16:04:26Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "28214db9bf9ce946ec0eb0e64c2439f79f61bb6a", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/28214db9bf9ce946ec0eb0e64c2439f79f61bb6a", "committedDate": "2020-11-01T16:45:10Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28214db9bf9ce946ec0eb0e64c2439f79f61bb6a", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/28214db9bf9ce946ec0eb0e64c2439f79f61bb6a", "committedDate": "2020-11-01T16:45:10Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "f7fdf0de75c5bb40242454660b585a526ca6a14e", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/f7fdf0de75c5bb40242454660b585a526ca6a14e", "committedDate": "2020-11-01T16:48:57Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7fdf0de75c5bb40242454660b585a526ca6a14e", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/f7fdf0de75c5bb40242454660b585a526ca6a14e", "committedDate": "2020-11-01T16:48:57Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "b0a1cdbb47626140ba5360937f34ef6a8233ce5d", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/b0a1cdbb47626140ba5360937f34ef6a8233ce5d", "committedDate": "2020-11-01T17:16:50Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06b790fc996ae78a3d1d9c7d1763df231497260a", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/06b790fc996ae78a3d1d9c7d1763df231497260a", "committedDate": "2020-11-01T17:18:50Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0a1cdbb47626140ba5360937f34ef6a8233ce5d", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/b0a1cdbb47626140ba5360937f34ef6a8233ce5d", "committedDate": "2020-11-01T17:16:50Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "06b790fc996ae78a3d1d9c7d1763df231497260a", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/06b790fc996ae78a3d1d9c7d1763df231497260a", "committedDate": "2020-11-01T17:18:50Z", "message": "[eclipse/xtext#1837] converted more code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDM0NzQ2", "url": "https://github.com/eclipse/xtext-extras/pull/659#pullrequestreview-521434746", "createdAt": "2020-11-02T08:57:06Z", "commit": {"oid": "06b790fc996ae78a3d1d9c7d1763df231497260a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTcwMTM1", "url": "https://github.com/eclipse/xtext-extras/pull/659#pullrequestreview-521570135", "createdAt": "2020-11-02T12:04:22Z", "commit": {"oid": "06b790fc996ae78a3d1d9c7d1763df231497260a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjowNDoyM1rOHsBq8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjowNDoyM1rOHsBq8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyNjc2OA==", "bodyText": "The space after resolved wasn't there on purpose since getTypeName may return the empty string.", "url": "https://github.com/eclipse/xtext-extras/pull/659#discussion_r515926768", "createdAt": "2020-11-02T12:04:23Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/annotations/validation/UnresolvedFeatureCallTypeAwareMessageProvider.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xbase.annotations.validation;\n+\n+import org.eclipse.emf.ecore.EClass;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.EStructuralFeature;\n+import org.eclipse.xtext.EcoreUtil2;\n+import org.eclipse.xtext.common.types.TypesPackage;\n+import org.eclipse.xtext.diagnostics.Diagnostic;\n+import org.eclipse.xtext.diagnostics.DiagnosticMessage;\n+import org.eclipse.xtext.diagnostics.Severity;\n+import org.eclipse.xtext.linking.ILinkingDiagnosticMessageProvider;\n+import org.eclipse.xtext.linking.impl.IllegalNodeException;\n+import org.eclipse.xtext.linking.impl.LinkingDiagnosticMessageProvider;\n+import org.eclipse.xtext.xbase.XAbstractFeatureCall;\n+import org.eclipse.xtext.xbase.XFeatureCall;\n+import org.eclipse.xtext.xbase.XMemberFeatureCall;\n+import org.eclipse.xtext.xbase.XbasePackage;\n+import org.eclipse.xtext.xbase.annotations.xAnnotations.XAnnotationsPackage;\n+import org.eclipse.xtext.xbase.lib.Extension;\n+import org.eclipse.xtext.xbase.lib.IterableExtensions;\n+import org.eclipse.xtext.xbase.typesystem.IResolvedTypes;\n+import org.eclipse.xtext.xbase.typesystem.internal.FeatureLinkHelper;\n+import org.eclipse.xtext.xbase.typesystem.internal.TypeAwareLinkingDiagnosticContext;\n+import org.eclipse.xtext.xbase.typesystem.references.LightweightTypeReference;\n+import org.eclipse.xtext.xbase.util.FeatureCallAsTypeLiteralHelper;\n+\n+import com.google.common.collect.Lists;\n+import com.google.inject.Inject;\n+\n+/**\n+ * @author Dennis Huebner - Initial contribution and API\n+ */\n+public class UnresolvedFeatureCallTypeAwareMessageProvider extends LinkingDiagnosticMessageProvider {\n+\t/**\n+\t * A user data entry that indicates a broken feature link which could also\n+\t * be a type literal, e.g. 'String::CASE_INSENSITIVE'.\n+\t */\n+\tpublic static final String TYPE_LITERAL = \"key:TypeLiteral\";\n+\n+\tpublic static final String FEATURE_CALL = \"key:FeatureCall\";\n+\n+\t@Inject\n+\tprivate FeatureCallAsTypeLiteralHelper typeLiteralHelper;\n+\n+\t@Inject\n+\t@Extension\n+\tprivate FeatureLinkHelper featureLinkHelper;\n+\n+\t@Override\n+\tpublic DiagnosticMessage getUnresolvedProxyMessage(\n+\t\t\tILinkingDiagnosticMessageProvider.ILinkingDiagnosticContext context) {\n+\t\tString linkText = null;\n+\t\ttry {\n+\t\t\tlinkText = context.getLinkText();\n+\t\t} catch (IllegalNodeException e) {\n+\t\t\tlinkText = e.getNode().getText();\n+\t\t}\n+\t\tif (linkText == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tEObject contextObject = context.getContext();\n+\t\tif (isStaticMemberCallTarget(contextObject)) {\n+\t\t\treturn new DiagnosticMessage(linkText + \" cannot be resolved to a type.\", Severity.ERROR,\n+\t\t\t\t\tDiagnostic.LINKING_DIAGNOSTIC, UnresolvedFeatureCallTypeAwareMessageProvider.TYPE_LITERAL);\n+\t\t}\n+\t\tif (contextObject instanceof XAbstractFeatureCall) {\n+\t\t\tif (!((XAbstractFeatureCall) contextObject).isOperation()) {\n+\t\t\t\treturn handleUnresolvedFeatureCall(context, ((XAbstractFeatureCall) contextObject), linkText);\n+\t\t\t}\n+\t\t}\n+\t\tEClass referenceType = context.getReference().getEReferenceType();\n+\t\tString msg = linkText + \" cannot be resolved \"+ getTypeName(referenceType, context.getReference()) + \".\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b790fc996ae78a3d1d9c7d1763df231497260a"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4296, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}