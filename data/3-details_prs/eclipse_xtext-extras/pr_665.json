{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjQ2MTE4", "number": 665, "title": "regenerated languages", "bodyText": "regenerated languages\nSigned-off-by: Christian Dietrich christian.dietrich@itemis.de", "createdAt": "2020-11-17T08:53:27Z", "url": "https://github.com/eclipse/xtext-extras/pull/665", "merged": true, "mergeCommit": {"oid": "0a1e4724cdf99a96023645f690054c76a2b4996b"}, "closed": true, "closedAt": "2020-11-23T09:20:06Z", "author": {"login": "cdietrich"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddWisrgFqTUzMjE5NTk2MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfRjXRAFqTUzNjI4NDYxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTk1OTYx", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-532195961", "createdAt": "2020-11-17T09:56:51Z", "commit": {"oid": "d1170a07dfa490f5008999890575e49b865c75a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1Njo1MVrOH0tBBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1Njo1MVrOH0tBBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyNTU0Mw==", "bodyText": "@ArneDeutsch Missing formatting rule for qualified types in Actions? I wouldn't expect a space around ::", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r525025543", "createdAt": "2020-11-17T09:56:51Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.extras.tests/src-gen/org/eclipse/xtext/generator/grammarAccess/services/GrammarAccessTestLanguageGrammarAccess.java", "diffHunk": "@@ -64,16 +64,16 @@\n \t\tprivate final Action cATypeAction_1 = (Action)cGroup.eContents().get(1);\n \t\t\n \t\t//AType root::AType:\n-\t\t//\t'foo' {root::AType};\n+\t\t//\t'foo' {root :: AType};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1170a07dfa490f5008999890575e49b865c75a6"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1170a07dfa490f5008999890575e49b865c75a6", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/d1170a07dfa490f5008999890575e49b865c75a6", "committedDate": "2020-11-16T09:04:31Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "892a01875e4100cbfbef1e344efe0ce1b8fec7ef", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/892a01875e4100cbfbef1e344efe0ce1b8fec7ef", "committedDate": "2020-11-17T09:57:54Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTk3NDQy", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-532197442", "createdAt": "2020-11-17T09:58:28Z", "commit": {"oid": "d1170a07dfa490f5008999890575e49b865c75a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1OTowOVrOH0tHCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1OTo1NVrOH0tJKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyNzA4Mw==", "bodyText": "Hmm there is a noSpace around the assignment ops, nevertheless we see a line break.\nhttps://github.com/eclipse/xtext-core/blob/master/org.eclipse.xtext/src/org/eclipse/xtext/xtext/XtextFormatterJava.java#L90\n@ArneDeutsch Something worthy to investigate?", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r525027083", "createdAt": "2020-11-17T09:59:09Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -401,20 +409,20 @@\n \t\t\n \t\t//@Override\n \t\t//XAssignment xbase::XExpression:\n-\t\t//\t{xbase::XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment |\n-\t\t//\tXConditionalExpression (=> ({xbase::XBinaryOperation.leftOperand=current}\n-\t\t//\tfeature=[types::JvmIdentifiableElement|OpMultiAssign]) rightOperand=XAssignment)?;\n+\t\t//\t{xbase :: XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment |\n+\t\t//\tXConditionalExpression (=> ({xbase :: XBinaryOperation . leftOperand= current} feature=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "892a01875e4100cbfbef1e344efe0ce1b8fec7ef"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyNzYyNg==", "bodyText": "Why are the spaces kept here but not for other cases? @ArneDeutsch", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r525027626", "createdAt": "2020-11-17T09:59:55Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -488,30 +496,29 @@\n \t\tprivate final RuleCall cElseXExpressionParserRuleCall_1_2_1_0 = (RuleCall)cElseAssignment_1_2_1.eContents().get(0);\n \t\t\n \t\t//XConditionalExpression xbase::XExpression:\n-\t\t//\tXOrExpression (\n-\t\t//\t// The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n-\t\t//\t-> ({xbase::XIfExpression.if=current} conditionalExpression?='?') then=XExpression (-> ':' else=XExpression)?)?;\n+\t\t//\tXOrExpression (// The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n+\t\t//\t-> ({xbase :: XIfExpression . if= current} conditionalExpression?='?') then=XExpression (->':' else=XExpression)?)?;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//XOrExpression ( // The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n-\t\t//-> ({xbase::XIfExpression.if=current} conditionalExpression?='?') then=XExpression (-> ':' else=XExpression)?)?\n+\t\t//XOrExpression (// The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n+\t\t//-> ({xbase :: XIfExpression . if= current} conditionalExpression?='?') then=XExpression (->':' else=XExpression)?)?\n \t\tpublic Group getGroup() { return cGroup; }\n \t\t\n \t\t//XOrExpression\n \t\tpublic RuleCall getXOrExpressionParserRuleCall_0() { return cXOrExpressionParserRuleCall_0; }\n \t\t\n-\t\t//( // The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n-\t\t//-> ({xbase::XIfExpression.if=current} conditionalExpression?='?') then=XExpression (-> ':' else=XExpression)?)?\n+\t\t//(// The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n+\t\t//-> ({xbase :: XIfExpression . if= current} conditionalExpression?='?') then=XExpression (->':' else=XExpression)?)?\n \t\tpublic Group getGroup_1() { return cGroup_1; }\n \t\t\n \t\t//// The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed\n-\t\t//-> ({xbase::XIfExpression.if=current} conditionalExpression?='?')\n+\t\t//\t\t-> ({xbase :: XIfExpression . if= current} conditionalExpression?='?')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "892a01875e4100cbfbef1e344efe0ce1b8fec7ef"}, "originalPosition": 251}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "892a01875e4100cbfbef1e344efe0ce1b8fec7ef", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/892a01875e4100cbfbef1e344efe0ce1b8fec7ef", "committedDate": "2020-11-17T09:57:54Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/4e3a334693f31246c5110f37b177f7423b72b601", "committedDate": "2020-11-20T15:40:22Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjY1Mjc1", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536265275", "createdAt": "2020-11-23T08:48:37Z", "commit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo0ODozOFrOH4DwMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo0ODozOFrOH4DwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0Mzc5NQ==", "bodyText": "This is still an issue @ArneDeutsch", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528543795", "createdAt": "2020-11-23T08:48:38Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -62,13 +62,13 @@\n \t\tprivate final Keyword cSemicolonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);\n \t\t\n \t\t//SpecialBlockExpression xbase::XBlockExpression:\n-\t\t//\t{xbase::XBlockExpression} (expressions+=XExpressionOrVarDeclaration ';'?)*;\n+\t\t//\t{xbase :: XBlockExpression} (expressions+=XExpressionOrVarDeclaration ';'?)*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjY1NjIz", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536265623", "createdAt": "2020-11-23T08:49:10Z", "commit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo0OToxMFrOH4DxRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo0OToxMFrOH4DxRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NDA3MA==", "bodyText": "Still weird @ArneDeutsch", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528544070", "createdAt": "2020-11-23T08:49:10Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xbase.testlanguages/src-gen/org/eclipse/xtext/xbase/testlanguages/bug462047/services/Bug462047LangGrammarAccess.java", "diffHunk": "@@ -475,8 +475,8 @@ public ParserRule getXListLiteralRule() {\n \t//XClosure XExpression:\n \t//\t=> ({XClosure}\n \t//\t'[')\n-\t//\t=> ((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?\n-\t//\texplicitSyntax?='|')?\n+\t//\t=> ((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)\n+\t//\t? explicitSyntax?='|')?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjY1OTQz", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536265943", "createdAt": "2020-11-23T08:49:39Z", "commit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo0OTozOVrOH4DyLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo0OTozOVrOH4DyLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NDMwMg==", "bodyText": "Still weird @ArneDeutsch\n@cdietrich Was this generated with the latest fixes applied?", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528544302", "createdAt": "2020-11-23T08:49:39Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xbase.testlanguages/src-gen/org/eclipse/xtext/xbase/testlanguages/services/ContentAssistFragmentTestLangGrammarAccess.java", "diffHunk": "@@ -450,11 +450,11 @@ public ParserRule getOpPostfixRule() {\n \t}\n \t\n \t//XMemberFeatureCall XExpression:\n-\t//\tXPrimaryExpression (=> ({XAssignment.assignable=current} ('.' | explicitStatic?=\"::\")\n-\t//\tfeature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment\n+\t//\tXPrimaryExpression (=> ({XAssignment.assignable=current} ('.' | explicitStatic?=\"::\") feature=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjY2NTAy", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536266502", "createdAt": "2020-11-23T08:50:25Z", "commit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e3a334693f31246c5110f37b177f7423b72b601", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/4e3a334693f31246c5110f37b177f7423b72b601", "committedDate": "2020-11-20T15:40:22Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "3cde7b3093987d341737393335eac9327e700a93", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/3cde7b3093987d341737393335eac9327e700a93", "committedDate": "2020-11-23T08:53:54Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/22fc484f6c243e66ec3acdb45b698b44a93be00e", "committedDate": "2020-11-23T08:56:40Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cde7b3093987d341737393335eac9327e700a93", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/3cde7b3093987d341737393335eac9327e700a93", "committedDate": "2020-11-23T08:53:54Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-extras/commit/22fc484f6c243e66ec3acdb45b698b44a93be00e", "committedDate": "2020-11-23T08:56:40Z", "message": "regenerated languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Mjc5Nzcy", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536279772", "createdAt": "2020-11-23T09:09:25Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTowOToyNVrOH4EbAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTowOToyNVrOH4EbAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NDc1Mg==", "bodyText": "Unexpected line-break in the assignment", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528554752", "createdAt": "2020-11-23T09:09:25Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -401,20 +409,20 @@\n \t\t\n \t\t//@Override\n \t\t//XAssignment xbase::XExpression:\n-\t\t//\t{xbase::XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment |\n-\t\t//\tXConditionalExpression (=> ({xbase::XBinaryOperation.leftOperand=current}\n-\t\t//\tfeature=[types::JvmIdentifiableElement|OpMultiAssign]) rightOperand=XAssignment)?;\n+\t\t//\t{xbase :: XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment |\n+\t\t//\tXConditionalExpression (=> ({xbase :: XBinaryOperation.leftOperand=current} feature=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 171}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjgwMTY2", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536280166", "createdAt": "2020-11-23T09:09:58Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTowOTo1OFrOH4EcTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTowOTo1OFrOH4EcTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NTA4NA==", "bodyText": "Unexpected line-break before the cardinality.", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528555084", "createdAt": "2020-11-23T09:09:58Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -994,8 +1000,8 @@ public ParserRule getXListLiteralRule() {\n \t//XClosure XExpression:\n \t//\t=> ({XClosure}\n \t//\t'[')\n-\t//\t=> ((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?\n-\t//\texplicitSyntax?='|')?\n+\t//\t=> ((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)\n+\t//\t? explicitSyntax?='|')?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 357}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjgwNzg4", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536280788", "createdAt": "2020-11-23T09:10:45Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMDo0NlrOH4EeGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMDo0NlrOH4EeGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NTU0NA==", "bodyText": "Nice improvements for the line-break before the predicate", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528555544", "createdAt": "2020-11-23T09:10:46Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -1390,9 +1397,9 @@ public ParserRule getXFunctionTypeRefRule() {\n \t}\n \t\n \t//JvmParameterizedTypeReference:\n-\t//\ttype=[JvmType|super::QualifiedName] (=> '<' arguments+=JvmArgumentTypeReference (','\n-\t//\targuments+=JvmArgumentTypeReference)* '>' (=> ({JvmInnerTypeReference.outer=current} '.') type=[JvmType|ValidID] (=>\n-\t//\t'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>')?)*)?;\n+\t//\ttype=[JvmType|super::QualifiedName] (=>'<' arguments+=JvmArgumentTypeReference (','\n+\t//\targuments+=JvmArgumentTypeReference)* '>' (=> ({JvmInnerTypeReference.outer=current} '.') type=[JvmType|ValidID] (\n+\t//\t=>'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>')?)*)?;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 447}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjgwOTUy", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536280952", "createdAt": "2020-11-23T09:10:59Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMDo1OVrOH4Eeiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMDo1OVrOH4Eeiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NTY1OQ==", "bodyText": "Nice improvement to the comment handling", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528555659", "createdAt": "2020-11-23T09:10:59Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.purexbase/src-gen/org/eclipse/xtext/purexbase/services/PureXbaseGrammarAccess.java", "diffHunk": "@@ -1330,7 +1336,8 @@ public ParserRule getNumberRule() {\n \t///**\n \t// * Dummy rule, for \"better\" downwards compatibility, since GrammarAccess generates non-static inner classes,\n \t// * which makes downstream grammars break on classloading, when a rule is removed.\n-\t// */ StaticQualifier:\n+\t// */\n+\t//StaticQualifier:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 434}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjgxNTg0", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536281584", "createdAt": "2020-11-23T09:11:51Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMTo1MVrOH4Egbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMTo1MVrOH4Egbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NjE0Mg==", "bodyText": "Unexpected space after the predicate if followed by a parentheses.", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528556142", "createdAt": "2020-11-23T09:11:51Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xbase.testlanguages/src-gen/org/eclipse/xtext/xbase/testlanguages/services/ContentAssistFragmentTestLangGrammarAccess.java", "diffHunk": "@@ -544,8 +544,8 @@ public ParserRule getXExpressionInClosureRule() {\n \t}\n \t\n \t//XShortClosure XExpression:\n-\t//\t=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?\n-\t//\texplicitSyntax?='|') expression=XExpression;\n+\t//\t=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjgzMDQy", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536283042", "createdAt": "2020-11-23T09:13:51Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMzo1MlrOH4EkvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMzo1MlrOH4EkvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NzI0NQ==", "bodyText": "Unexpected line-break after the opening parenthesis if there is no line-break before the closing parenthesis and no indentation applied. To be discussed if we want to do something about this and if so, what we want to do about this.", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528557245", "createdAt": "2020-11-23T09:13:52Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xbase/src-gen/org/eclipse/xtext/xbase/annotations/services/XbaseWithAnnotationsGrammarAccess.java", "diffHunk": "@@ -54,15 +54,17 @@\n \t\t\n \t\t//XAnnotation:\n \t\t//\t{XAnnotation}\n-\t\t//\t'@' annotationType=[types::JvmAnnotationType|QualifiedName] (=> '(' (elementValuePairs+=XAnnotationElementValuePair\n-\t\t//\t(',' elementValuePairs+=XAnnotationElementValuePair)*\n+\t\t//\t'@' annotationType=[types::JvmAnnotationType|QualifiedName] (=>'(' (elementValuePairs+=XAnnotationElementValuePair (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Mjg0MDYx", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536284061", "createdAt": "2020-11-23T09:15:08Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxNTowOFrOH4EoAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxNTowOFrOH4EoAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1ODA4Mg==", "bodyText": "I think I mentioned it before: Unexpected space after the assignment operator.", "url": "https://github.com/eclipse/xtext-extras/pull/665#discussion_r528558082", "createdAt": "2020-11-23T09:15:08Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xbase/src-gen/org/eclipse/xtext/xbase/annotations/services/XbaseWithAnnotationsGrammarAccess.java", "diffHunk": "@@ -241,16 +244,16 @@\n \t\t//']'\n \t\tpublic Keyword getRightSquareBracketKeyword_0_2() { return cRightSquareBracketKeyword_0_2; }\n \t\t\n-\t\t//XAnnotationOrExpression ({xbase::XListLiteral.elements+=current} (',' elements+=XAnnotationOrExpression)+)?\n+\t\t//XAnnotationOrExpression ({xbase :: XListLiteral.elements+= current} (',' elements+=XAnnotationOrExpression)+)?\n \t\tpublic Group getGroup_1() { return cGroup_1; }\n \t\t\n \t\t//XAnnotationOrExpression\n \t\tpublic RuleCall getXAnnotationOrExpressionParserRuleCall_1_0() { return cXAnnotationOrExpressionParserRuleCall_1_0; }\n \t\t\n-\t\t//({xbase::XListLiteral.elements+=current} (',' elements+=XAnnotationOrExpression)+)?\n+\t\t//({xbase :: XListLiteral.elements+= current} (',' elements+=XAnnotationOrExpression)+)?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Mjg0NjEy", "url": "https://github.com/eclipse/xtext-extras/pull/665#pullrequestreview-536284612", "createdAt": "2020-11-23T09:15:54Z", "commit": {"oid": "22fc484f6c243e66ec3acdb45b698b44a93be00e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4304, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}