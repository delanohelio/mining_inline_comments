{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NjcyOTk1", "number": 4563, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1MTowMlrOE2BHlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowMzowM1rOE2BYwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDc2ODg0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1MTowMlrOHunM6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1MTowMlrOHunM6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzODgyNw==", "bodyText": "Why does the method need to be renamed? I would just keep the old name and update the other uses (which are only tests). That way, we can reduce code duplication.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518638827", "createdAt": "2020-11-06T09:51:02Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java", "diffHunk": "@@ -105,13 +105,12 @@ protected boolean shouldUpdatedItemRemainInList(FeedItem item) {\n     @NonNull\n     @Override\n     protected List<FeedItem> loadData() {\n-        return feedItemFilter.filter(DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE));\n+        return DBReader.getRecentlyPublishedEpisodesFiltered(0, page * EPISODES_PER_PAGE, feedItemFilter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDc5NzM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1ODo0OFrOHunetw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1ODo0OFrOHunetw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0MzM4Mw==", "bodyText": "I think it would be better to move this to its own class. That allows to make the filter object only a data store object without any program logic. AntennaPod's code is pretty mixed up and every object has access to everything else. For example, FeedItems perform database queries. I think we should try to make components of the app as decoupled as possible (and later maybe even move to different modules). This method would fit better into the de.danoeh.antennapod.core.storage package.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518643383", "createdAt": "2020-11-06T09:58:48Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -78,6 +80,45 @@ public FeedItemFilter(String[] properties) {\n                     break;\n             }\n         }\n+\n+        mQuery = makeQuery();\n+    }\n+\n+    private String makeQuery() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDgwMTE4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1OTo1MFrOHunhGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1OTo1MFrOHunhGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0Mzk5NQ==", "bodyText": "That can later be simplified when using a join for the queue items. Does not have to be done in this PR, though.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518643995", "createdAt": "2020-11-06T09:59:50Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -78,6 +80,45 @@ public FeedItemFilter(String[] properties) {\n                     break;\n             }\n         }\n+\n+        mQuery = makeQuery();\n+    }\n+\n+    private String makeQuery() {\n+        // The keys used within this method, but explicitly combined with their table\n+        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n+        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n+        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n+        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n+        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n+        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n+        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n+        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n+\n+        List<String> statements = new ArrayList<>();\n+        if (showPlayed)        statements.add(keyRead + \" = 1 \");\n+        if (showUnplayed)      statements.add(\" NOT \" + keyRead + \" = 1 \"); // Match \"New\" items (read = -1) as well\n+        if (showPaused)        statements.add(\" (\" + keyPosition + \" NOT NULL AND \" + keyPosition + \" > 0 \" + \") \");\n+        if (showNotPaused)     statements.add(\" (\" + keyPosition + \" IS NULL OR \" + keyPosition + \" = 0 \" + \") \");\n+        if (showQueued)        statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDgxMjgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowMzowM1rOHunodA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowMzowM1rOHunodA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NTg3Ng==", "bodyText": "I can conform to the Checkstyle rules if desired but i really think that the cascade of if statements profits in readability if each of them fits onto one line.\n\nReadability was probably the cause of the goto fail bug, too. I would prefer to always use braces, even if it makes the code a bit longer.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518645876", "createdAt": "2020-11-06T10:03:03Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -78,6 +80,45 @@ public FeedItemFilter(String[] properties) {\n                     break;\n             }\n         }\n+\n+        mQuery = makeQuery();\n+    }\n+\n+    private String makeQuery() {\n+        // The keys used within this method, but explicitly combined with their table\n+        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n+        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n+        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n+        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n+        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n+        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n+        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n+        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n+\n+        List<String> statements = new ArrayList<>();\n+        if (showPlayed)        statements.add(keyRead + \" = 1 \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4703, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}