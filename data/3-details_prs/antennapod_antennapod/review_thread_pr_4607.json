{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNDMwNjMx", "number": 4607, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyOTowOVrOEyQYpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyOToyNVrOEyQZOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTMyNzExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyOTowOVrOHoyqHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjowOToyNlrOHo5DYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNTA2OQ==", "bodyText": "The METADATA_KEY_DATE format is not specified, so I think it is good to try falling back to DateUtils.parse here. Only if that one returns null either, I would use the file last modified date.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4607#discussion_r512535069", "createdAt": "2020-10-27T09:29:09Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java", "diffHunk": "@@ -130,12 +134,28 @@ private static FeedItem feedContainsFile(Feed feed, String filename) {\n \n     private static FeedItem createFeedItem(Feed feed, DocumentFile file, Context context) {\n         String uuid = UUID.randomUUID().toString();\n-        FeedItem item = new FeedItem(0, file.getName(), uuid, file.getName(), new Date(),\n-                FeedItem.UNPLAYED, feed);\n-        item.setAutoDownload(false);\n \n         MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();\n         mediaMetadataRetriever.setDataSource(context, file.getUri());\n+        String dateStr = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DATE);\n+\n+        Date date = null;\n+        if (!TextUtils.isEmpty(dateStr)) {\n+            try {\n+                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyyMMdd'T'HHmmss\", Locale.getDefault());\n+                date = simpleDateFormat.parse(dateStr);\n+            } catch (ParseException parseException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab255afe68485976467e84806734fc83097e053a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYzOTg0Mw==", "bodyText": "fixed", "url": "https://github.com/AntennaPod/AntennaPod/pull/4607#discussion_r512639843", "createdAt": "2020-10-27T12:09:26Z", "author": {"login": "moralesg"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java", "diffHunk": "@@ -130,12 +134,28 @@ private static FeedItem feedContainsFile(Feed feed, String filename) {\n \n     private static FeedItem createFeedItem(Feed feed, DocumentFile file, Context context) {\n         String uuid = UUID.randomUUID().toString();\n-        FeedItem item = new FeedItem(0, file.getName(), uuid, file.getName(), new Date(),\n-                FeedItem.UNPLAYED, feed);\n-        item.setAutoDownload(false);\n \n         MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();\n         mediaMetadataRetriever.setDataSource(context, file.getUri());\n+        String dateStr = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DATE);\n+\n+        Date date = null;\n+        if (!TextUtils.isEmpty(dateStr)) {\n+            try {\n+                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyyMMdd'T'HHmmss\", Locale.getDefault());\n+                date = simpleDateFormat.parse(dateStr);\n+            } catch (ParseException parseException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNTA2OQ=="}, "originalCommit": {"oid": "ab255afe68485976467e84806734fc83097e053a"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTMyODU3OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/de/danoeh/antennapod/core/feed/LocalFeedUpdaterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyOToyNVrOHoyq7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjowOTo1M1rOHo5EiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNTI3Ng==", "bodyText": "The comment needs to be updated", "url": "https://github.com/AntennaPod/AntennaPod/pull/4607#discussion_r512535276", "createdAt": "2020-10-27T09:29:25Z", "author": {"login": "ByteHamster"}, "path": "core/src/test/java/de/danoeh/antennapod/core/feed/LocalFeedUpdaterTest.java", "diffHunk": "@@ -149,6 +153,28 @@ public void testUpdateFeed_FeedIconDefault() {\n         assertTrue(feedAfter.getImageUrl().contains(resourceEntryName));\n     }\n \n+    /**\n+     * Test default feed icon if there is no matching file in the local feed media folder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab255afe68485976467e84806734fc83097e053a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0MDEzNg==", "bodyText": "fixed", "url": "https://github.com/AntennaPod/AntennaPod/pull/4607#discussion_r512640136", "createdAt": "2020-10-27T12:09:53Z", "author": {"login": "moralesg"}, "path": "core/src/test/java/de/danoeh/antennapod/core/feed/LocalFeedUpdaterTest.java", "diffHunk": "@@ -149,6 +153,28 @@ public void testUpdateFeed_FeedIconDefault() {\n         assertTrue(feedAfter.getImageUrl().contains(resourceEntryName));\n     }\n \n+    /**\n+     * Test default feed icon if there is no matching file in the local feed media folder.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNTI3Ng=="}, "originalCommit": {"oid": "ab255afe68485976467e84806734fc83097e053a"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4588, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}