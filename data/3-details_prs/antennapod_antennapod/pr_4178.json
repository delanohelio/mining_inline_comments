{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTIzMjgy", "number": 4178, "title": "Redesign filter dialog", "bodyText": "Closes #4151", "createdAt": "2020-05-21T03:08:56Z", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178", "merged": true, "mergeCommit": {"oid": "0ce31b3b76dd9b6fdd977845dffae4127b432cae"}, "closed": true, "closedAt": "2020-07-16T08:27:52Z", "author": {"login": "bws9000"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcj35sxAFqTQxNzE1MTQ0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0erHBgH2gAyNDIxMTIzMjgyOjM2NDQ0NGU0ZDY0ZjMxYmE4ZDNmOGY1NTE2ODA0NDhiMmU0OGVkYjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTUxNDQz", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#pullrequestreview-417151443", "createdAt": "2020-05-22T19:46:03Z", "commit": {"oid": "9590450b9086c49ed57e65a2baf9c33d6f88e8da"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo0NjowM1rOGZiJAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo1MDo1NFrOGZiO5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng==", "bodyText": "This looks a bit fragile, to be honest. What happens if there are suddenly 3 options? I suggest to use something like the following. That would also make it easier to test (separating filters from each other) and would no longer need the big optionSwitch method below.\npublic enum FeedItemFilterGroup {\n    DOWNLOADED(R.string.downloaded_label,\n            new FeedItemFilter(\"downloaded\", R.string.downloaded_label,\n                    feedItem -> feedItem.getMedia().isDownloaded()),\n            new FeedItemFilter(\"not_downloaded\", R.string.not_downloaded_label,\n                    feedItem -> !feedItem.getMedia().isDownloaded())),\n\n    QUEUED(R.string.queue_label,\n            new FeedItemFilter(\"queued\", R.string.queued_label,\n                    feedItem -> feedItem.isTagged(FeedItem.TAG_QUEUE)),\n            new FeedItemFilter(\"not_queued\", R.string.not_queued_label,\n                    feedItem -> !feedItem.isTagged(FeedItem.TAG_QUEUE)));\n\n    private final int nameResId;\n    private final FeedItemFilter[] values;\n\n    FeedItemFilterGroup(int nameResId, FeedItemFilter... values) {\n        this.nameResId = nameResId;\n        this.values = values;\n    }\n\n    public static class FeedItemFilter {\n        public final String filterId;\n        public final int nameResId;\n        public final Function<FeedItem, Boolean> filter;\n\n        public FeedItemFilter(String filterId, int nameResId, Function<FeedItem, Boolean> filter) {\n            this.filterId = filterId;\n            this.nameResId = nameResId;\n            this.filter = filter;\n        }\n        \n        public static FeedItemFilter fromId(String filterId) {\n            for (FeedItemFilterGroup group : FeedItemFilterGroup.values()) {\n                for (FeedItemFilter itemFilter : group.values) {\n                    if (itemFilter.filterId.equals(filterId)) {\n                        return itemFilter;\n                    }\n                }\n            }\n            throw new IllegalArgumentException(\"Id unknown\");\n        }\n    }\n}", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429426946", "createdAt": "2020-05-22T19:46:03Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9590450b9086c49ed57e65a2baf9c33d6f88e8da"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzUzNA==", "bodyText": "Instead of doing all this in Java, please create a layout file for a row and inflate it here. This makes it a lot easier to manage the layout (you get a preview in Android Studio, etc).", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429427534", "createdAt": "2020-05-22T19:47:50Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n+\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n+        LinearLayout linearLayout = (LinearLayout) customLayout;\n+\n+        builder.setView(customLayout);\n+\n+        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n+        tableLayout.setPadding(90, 70, 60, 0);\n+\n+        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n+        rowParams.setMargins(0, 0, 0, 10);\n+        rowParams.width = 800;\n+\n+        for (int i = 0; i < selection1.length; i++) {\n+\n+            TableRow row = new TableRow(customLayout.getContext());\n+\n+            TextView textView1 = new TextView(customLayout.getContext());\n+            TextView textView2 = new TextView(customLayout.getContext());\n+            TextView textView3 = new TextView(customLayout.getContext());\n+            textView1.setText(selection1[i]);\n+            textView2.setText(selection2[i]);\n+            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+            textView3.setBackgroundResource(R.drawable.x_custom_off);\n+\n+            if (this.noValueForOption(selection1[i])) {\n+                /* no options */\n+            }\n+\n+            String checked1 = this.optionSwitch(selection1[i]);\n+            for (int j = 0; j < checkedItems.length; j++) {\n+                if (checked1.equals(checkedItems[j])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView1.getText());\n+                }\n+            }\n+            String checked2 = this.optionSwitch(selection2[i]);\n+            for (int k = 0; k < checkedItems.length; k++) {\n+                if (checked2.equals(checkedItems[k])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView2.getText());\n+                }\n+            }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView1.getText());\n+                selectedValues.remove(textView2.getText());\n+                textView1.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView2.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView1.setTextColor(Color.GRAY);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+                selectedValues.remove(textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView1.setTextColor(Color.GRAY);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+\n+            textView1.setHeight(90);\n+            textView1.setWidth(340);\n+            textView1.setGravity(Gravity.CENTER_VERTICAL);\n+            textView1.setPadding(50, 0, 0, 0);\n+\n+            textView2.setHeight(90);\n+            textView2.setWidth(340);\n+            textView2.setGravity(Gravity.CENTER_VERTICAL);\n+            textView2.setPadding(50, 0, 0, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9590450b9086c49ed57e65a2baf9c33d6f88e8da"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzg2NQ==", "bodyText": "The table can be added directly in R.layout.custom_filter_dialog_layout, so it does not need to be created manually in Java.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429427865", "createdAt": "2020-05-22T19:48:58Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n+\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n+        LinearLayout linearLayout = (LinearLayout) customLayout;\n+\n+        builder.setView(customLayout);\n+\n+        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n+        tableLayout.setPadding(90, 70, 60, 0);\n+\n+        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n+        rowParams.setMargins(0, 0, 0, 10);\n+        rowParams.width = 800;\n+\n+        for (int i = 0; i < selection1.length; i++) {\n+\n+            TableRow row = new TableRow(customLayout.getContext());\n+\n+            TextView textView1 = new TextView(customLayout.getContext());\n+            TextView textView2 = new TextView(customLayout.getContext());\n+            TextView textView3 = new TextView(customLayout.getContext());\n+            textView1.setText(selection1[i]);\n+            textView2.setText(selection2[i]);\n+            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+            textView3.setBackgroundResource(R.drawable.x_custom_off);\n+\n+            if (this.noValueForOption(selection1[i])) {\n+                /* no options */\n+            }\n+\n+            String checked1 = this.optionSwitch(selection1[i]);\n+            for (int j = 0; j < checkedItems.length; j++) {\n+                if (checked1.equals(checkedItems[j])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView1.getText());\n+                }\n+            }\n+            String checked2 = this.optionSwitch(selection2[i]);\n+            for (int k = 0; k < checkedItems.length; k++) {\n+                if (checked2.equals(checkedItems[k])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView2.getText());\n+                }\n+            }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView1.getText());\n+                selectedValues.remove(textView2.getText());\n+                textView1.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView2.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView1.setTextColor(Color.GRAY);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+                selectedValues.remove(textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView1.setTextColor(Color.GRAY);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+\n+            textView1.setHeight(90);\n+            textView1.setWidth(340);\n+            textView1.setGravity(Gravity.CENTER_VERTICAL);\n+            textView1.setPadding(50, 0, 0, 0);\n+\n+            textView2.setHeight(90);\n+            textView2.setWidth(340);\n+            textView2.setGravity(Gravity.CENTER_VERTICAL);\n+            textView2.setPadding(50, 0, 0, 0);\n+\n+            textView3.setGravity(Gravity.CENTER_VERTICAL);\n+\n+            row.addView(textView1);\n+            row.addView(textView2);\n+            row.addView(textView3);\n+\n+            tableLayout.addView(row);\n+            row.setLayoutParams(rowParams);\n+\n+        }\n+        linearLayout.addView(tableLayout, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9590450b9086c49ed57e65a2baf9c33d6f88e8da"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ==", "bodyText": "Why did you add a second method instead of just replacing the old one? Do we still need the old one?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429428455", "createdAt": "2020-05-22T19:50:54Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java", "diffHunk": "@@ -113,7 +113,7 @@ protected void updateFilter(Set<String> filterValues) {\n             }\n         };\n \n-        filterDialog.openDialog();\n+        filterDialog.openCustomDialog();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9590450b9086c49ed57e65a2baf9c33d6f88e8da"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODUzNzc3", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#pullrequestreview-425853777", "createdAt": "2020-06-07T21:11:57Z", "commit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QyMToxMTo1N1rOGgL4nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QyMTo1MjowMVrOGgMD8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjMzMw==", "bodyText": "Why is the function called custom? I think it would be better to just keep the old name.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436402333", "createdAt": "2020-06-07T21:11:57Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java", "diffHunk": "@@ -113,7 +113,7 @@ protected void updateFilter(Set<String> filterValues) {\n             }\n         };\n \n-        filterDialog.openDialog();\n+        filterDialog.openCustomDialog();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ=="}, "originalCommit": {"oid": "9590450b9086c49ed57e65a2baf9c33d6f88e8da"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjg5Ng==", "bodyText": "I would make the filters independent from the filter UI. This allows (among other things) to automatically test filters instead of having to start the UI every time. Please move this to a new class de.danoeh.antennapod.core.feed.FeedItemFilterGroup. Also, those enums should not store data. If you directly add/remove the filterId in the filterValues array, you do not need to store state in the enums themselves. Storing state there can lead to problems when re-opening the dialog for different podcasts.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436402896", "createdAt": "2020-06-07T21:19:48Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    textView2.setSelected(true);\n+                    textView1.setSelected(false);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n             }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                item.values[1].setSelected(true);\n+                item.values[0].setSelected(false);\n+                textView2.setSelected(false);\n+                textView2.setTextColor(Color.DKGRAY);\n+                textView1.setSelected(true);\n+                textView1.setTextColor(Color.WHITE);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(true);\n+                item.values[1].setSelected(false);\n+                textView1.setSelected(false);\n+                textView1.setTextColor(Color.DKGRAY);\n+                textView2.setSelected(true);\n+                textView2.setTextColor(Color.WHITE);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(false);\n+                item.values[1].setSelected(false);\n+                textView2.setTextColor(Color.DKGRAY);\n+                textView2.setSelected(false);\n+                textView1.setTextColor(Color.DKGRAY);\n+                textView1.setSelected(false);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+            });\n+            tableLayout.addView(row);\n         }\n \n-        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n-        builder.setTitle(R.string.filter);\n-        builder.setMultiChoiceItems(items, checkedItems, (dialog, which, isChecked) -> {\n-            if (isChecked) {\n-                filterValues.add(values[which]);\n-            } else {\n-                filterValues.remove(values[which]);\n-            }\n-        });\n+\n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n+            filterValues.clear();\n+            for (FeedItemEnum item : FeedItemEnum.values()) {\n+                for (int i = 0; i < item.values.length; i++) {\n+                    if (item.values[i].getSelected()) {\n+                        Log.d(\"**added***\", \"\" + item.values[i].filterId);\n+                        filterValues.add(item.values[i].filterId);\n+                    }\n+                }\n+            }\n             updateFilter(filterValues);\n         });\n+\n         builder.setNegativeButton(R.string.cancel_label, null);\n         builder.create().show();\n     }\n \n+    public enum FeedItemEnum {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzE5Ng==", "bodyText": "This is now fixed with 3 TextViews. My idea was to keep it independent from the number of options. So the views should be inflated one by one from another layout, just as needed. This should also make the code less verbose because you do not have to write everything multiple times (instead, using loops).", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403196", "createdAt": "2020-06-07T21:23:33Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzQyMQ==", "bodyText": "The text color can also be specified with a color selector (similar to the backgrounds). That way, you do not need to set it in code. Additionally, this will make it easier to support both light and dark theme. Details: https://stackoverflow.com/a/3565624/4193263", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403421", "createdAt": "2020-06-07T21:26:20Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    textView2.setSelected(true);\n+                    textView1.setSelected(false);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.DKGRAY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzU3MQ==", "bodyText": "If you use RadioButtons instead of TextViews, you do not need to un-check other items in the row manually. They can be styled just like the TextViews (background etc). Details: https://stackoverflow.com/a/55139080/4193263", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403571", "createdAt": "2020-06-07T21:28:31Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzY3Mg==", "bodyText": "Please rename the files to something like filter_dialog_... instead of custom_dialog_.... This makes it easier for other developers to understand what the files are used for.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403672", "createdAt": "2020-06-07T21:30:09Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/drawable/custom_dialog_shape_selector_left.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzk0Nw==", "bodyText": "Specifying them here in vector format should be enough. You do not need to add the png files. Instead of having a on and off version, please use android:alpha on the views. This way, you need fewer different drawables. Having to support each version for each theme will otherwise require a ton of drawables.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403947", "createdAt": "2020-06-07T21:33:50Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/drawable/ic_x_custom_off.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNDAxMQ==", "bodyText": "I think those are no longer needed. Also, the array above (old dialog names/values) is no longer needed, as well.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436404011", "createdAt": "2020-06-07T21:34:53Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/arrays.xml", "diffHunk": "@@ -269,6 +269,25 @@\n         <item>is_favorite</item>\n     </string-array>\n \n+    <string-array name=\"episode_filter_selection_text1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNDE3NA==", "bodyText": "Please use accent_light and background_light instead of creating new colors. Having them duplicated will likely lead to inconsistent colors throughout the app. This is currently a problem in 1.8.1 (up to 3 different shades of blue on one screen) and I want to prevent that from happening again.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436404174", "createdAt": "2020-06-07T21:36:58Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/colors.xml", "diffHunk": "@@ -28,4 +28,9 @@\n     <color name=\"master_switch_background_light\">#DDDDDD</color>\n     <color name=\"master_switch_background_dark\">#191919</color>\n \n+    <!-- filter dialog -->\n+    <color name=\"color_custom_dialog_off\">#FFFFFF</color>\n+    <color name=\"color_custom_dialog_on\">#3D8BFF</color>\n+    <color name=\"color_custom_dialog_border\">#3D8BFF</color>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng==", "bodyText": "Hmm now that I think about it, this will lead to a lot of different drawables. All combinations of on/off, left/right, light/dark. This means there will be at least 8 files just for handling the backgrounds. If you use a CardView with app:borderRadius around the items, you can achieve something like the following without custom drawables. I think this makes the code easier to understand. I know that it looks a bit different than the initial drawing but I think that it is worth the change because it makes the code a lot shorter and easier to understand.\n\nThe layout xml would then have the following structure:\n<CardView>\n    <RadioGroup>\n        <RadioButton />\n        <RadioButton />\n        ...\n        <RadioButton />\n        <ImageView />\n    </RadioGroup>\n</CardView>", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436405196", "createdAt": "2020-06-07T21:51:33Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/drawable/custom_dialog_shape_drawable_left_off.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTIzMg==", "bodyText": "This only shows an image, so ImageView would be better here.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436405232", "createdAt": "2020-06-07T21:52:01Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/res/layout/custom_dialog_filter_row.xml", "diffHunk": "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\">\n+\n+    <TableRow\n+        android:id=\"@+id/custom_dialog_tableRow1\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginLeft=\"20dp\"\n+        android:layout_marginTop=\"0dp\"\n+        android:layout_marginRight=\"0dp\"\n+        android:layout_marginBottom=\"10dp\"\n+        android:minWidth=\"100dp\">\n+\n+        <TextView\n+            android:id=\"@+id/custom_dialog_textView1\"\n+            android:layout_width=\"120dp\"\n+            android:layout_height=\"30dp\"\n+            android:paddingLeft=\"15dp\"\n+            android:paddingTop=\"0dp\"\n+            android:paddingRight=\"0dp\"\n+            android:clickable=\"true\"\n+            android:gravity=\"left|center_vertical\"\n+            android:background=\"@drawable/custom_dialog_shape_selector_left\" />\n+\n+        <TextView\n+            android:id=\"@+id/custom_dialog_textView2\"\n+            android:layout_width=\"120dp\"\n+            android:layout_height=\"30dp\"\n+            android:paddingLeft=\"15dp\"\n+            android:paddingTop=\"0dp\"\n+            android:paddingRight=\"0dp\"\n+            android:clickable=\"true\"\n+            android:gravity=\"left|center_vertical\"\n+            android:background=\"@drawable/custom_dialog_shape_selector_right\" />\n+\n+        <TextView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODcyMTE1", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#pullrequestreview-433872115", "createdAt": "2020-06-19T07:48:07Z", "commit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzo0ODowN1rOGmLevw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzo1NDoxNVrOGmLqBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzE2Nw==", "bodyText": "Was this change intended?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442687167", "createdAt": "2020-06-19T07:48:07Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java", "diffHunk": "@@ -293,7 +293,7 @@ private String generateDeviceID(List<GpodnetDevice> gpodnetDevices) {\n         int num = 0;\n \n         while (isDeviceWithIdInList(id, gpodnetDevices)) {\n-            id = baseId + \"_\" + num;\n+            id = baseId + \"filterdialog_\" + num;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzUwMA==", "bodyText": "The method is still named Custom. Please just use the old name, so it does not require changes to other (unrelated) files", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442687500", "createdAt": "2020-06-19T07:48:50Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,39 +28,103 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ==", "bodyText": "I do not really like this duplicated code. Things like this are always hard to maintain.\n\nOne thing; no selectors because every time an element is clicked it needs to update another element, if you can do that with a radio group I still need to update the clear image drawable and it seems to make more sense just to use a couple lines of code where everything else is.\n\nIf you make the clear button a RadioButton and move the RadioGroup out of the CardView, so that it contains the clear button, you do not have to care about de-selecting other items and changing their background. This can then be done automatically.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442688759", "createdAt": "2020-06-19T07:51:27Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,39 +28,103 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n+\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n+\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    radioButton1.setBackgroundResource(R.color.accent_light);\n+                    radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton1.setSelected(true);\n+                    radioButton2.setSelected(false);\n+                    radioButton1.setTextColor(Color.WHITE);\n+                    radioButton2.setTextColor(Color.BLACK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4OTMwMw==", "bodyText": "If this is not required for your PR, please keep other things untouched. In case there is a problem, this makes it a lot easier to see where the problem came from.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442689303", "createdAt": "2020-06-19T07:52:35Z", "author": {"login": "ByteHamster"}, "path": "build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ buildscript {\n         maven { url \"https://plugins.gradle.org/m2/\" }\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:3.6.3'\n+        classpath 'com.android.tools.build:gradle:4.0.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4OTU2NQ==", "bodyText": "I am pretty sure that this should not be changed", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442689565", "createdAt": "2020-06-19T07:53:08Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java", "diffHunk": "@@ -44,7 +44,7 @@ public static String generateFileName(String string) {\n         if (TextUtils.isEmpty(filename)) {\n             return randomString(8);\n         } else if (filename.length() >= MAX_FILENAME_LENGTH) {\n-            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"_\" + md5(filename);\n+            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"filterdialog_\" + md5(filename);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY5MDA1NQ==", "bodyText": "I think the two arrays above are unused now. Please remove them.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442690055", "createdAt": "2020-06-19T07:54:15Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/arrays.xml", "diffHunk": "@@ -269,6 +269,7 @@\n         <item>is_favorite</item>\n     </string-array>\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75dcd0209764e77719177f549e3df78d4aee1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "committedDate": "2020-06-21T10:59:05Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de9e0d4c1807bff054c1aef999fc600088ab521", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/7de9e0d4c1807bff054c1aef999fc600088ab521", "committedDate": "2020-06-21T11:17:36Z", "message": "Using state lists for colors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "229e71c4769d936da700c88a6b81be5dada0f899", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/229e71c4769d936da700c88a6b81be5dada0f899", "committedDate": "2020-06-20T22:07:19Z", "message": "Redesign filter dialog"}, "afterCommit": {"oid": "7de9e0d4c1807bff054c1aef999fc600088ab521", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/7de9e0d4c1807bff054c1aef999fc600088ab521", "committedDate": "2020-06-21T11:17:36Z", "message": "Using state lists for colors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4ce162491cb93535ee1a03d526c8d1228d58fd2", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/a4ce162491cb93535ee1a03d526c8d1228d58fd2", "committedDate": "2020-06-27T14:24:26Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecf4b60fcee3d8a180a269a6560e6182ea09110d", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/ecf4b60fcee3d8a180a269a6560e6182ea09110d", "committedDate": "2020-07-03T00:25:15Z", "message": "Merge pull request #7 from AntennaPod/develop\n\nupdate me"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4677c0d9a7812b7c6e0c3f473bd8f50e7c03901", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/f4677c0d9a7812b7c6e0c3f473bd8f50e7c03901", "committedDate": "2020-07-03T00:34:11Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70aa6b1f6d8a409fd68b81d71b7a5d32575f3e99", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/70aa6b1f6d8a409fd68b81d71b7a5d32575f3e99", "committedDate": "2020-07-03T00:50:11Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/e221602f8fbf4c135ac4cf1b50977559b06d470b", "committedDate": "2020-07-03T01:02:04Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDM0MDI3", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#pullrequestreview-443434027", "createdAt": "2020-07-06T21:59:07Z", "commit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo1OTowN1rOGtobyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjoxMTo0MlrOGtot6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTU3OA==", "bodyText": "Please make the color an attr, too. Additionally, I think that assigning a drawable to a color resource could lead to problems. Please move the color state list to the color directory.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450501578", "createdAt": "2020-07-06T21:59:07Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/res/layout/filter_dialog_row.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<de.danoeh.antennapod.view.RecursiveRadioGroup xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"horizontal\">\n+\n+    <androidx.cardview.widget.CardView\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"48dp\"\n+        android:layout_marginBottom=\"10dp\"\n+        android:layout_weight=\"1\"\n+        android:clipChildren=\"true\"\n+        app:cardCornerRadius=\"24dp\"\n+        app:cardElevation=\"0dp\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"horizontal\">\n+\n+            <RadioButton\n+                android:id=\"@+id/filter_dialog_radioButton1\"\n+                android:layout_width=\"0dp\"\n+                android:layout_height=\"match_parent\"\n+                android:layout_marginEnd=\"2dp\"\n+                android:layout_marginRight=\"2dp\"\n+                android:layout_weight=\"1\"\n+                android:background=\"?attr/filter_dialog_button_background\"\n+                android:button=\"@android:color/transparent\"\n+                android:checked=\"false\"\n+                android:gravity=\"center\"\n+                android:textColor=\"@drawable/filter_dialog_button_text_light\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTc3Mw==", "bodyText": "Why is this needed?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450501773", "createdAt": "2020-07-06T21:59:36Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -11,33 +13,41 @@\n import static de.danoeh.antennapod.core.feed.FeedItem.TAG_FAVORITE;\n \n public class FeedItemFilter {\n+\n     private final String[] mProperties;\n \n     private boolean showPlayed = false;\n     private boolean showUnplayed = false;\n     private boolean showPaused = false;\n+    private boolean showNotPaused = false;\n     private boolean showQueued = false;\n     private boolean showNotQueued = false;\n     private boolean showDownloaded = false;\n     private boolean showNotDownloaded = false;\n     private boolean showHasMedia = false;\n+    private boolean showNoMedia = false;\n     private boolean showIsFavorite = false;\n+    private boolean showNotFavorite = false;\n \n     public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n     public FeedItemFilter(String[] properties) {\n         this.mProperties = properties;\n-        for(String property : properties) {\n+        Log.d(\"***xxx***\", Arrays.toString(properties));\n+        for (String property : properties) {\n             // see R.arrays.feed_filter_values\n-            switch(property) {\n+            switch (\"\" + property) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjExNQ==", "bodyText": "This means that the filter will stop completely and silently if there is an unknown value. I think it would be better to just ignore that value by calling break instead.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450502115", "createdAt": "2020-07-06T22:00:32Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -56,9 +66,17 @@ public FeedItemFilter(String[] properties) {\n                 case \"has_media\":\n                     showHasMedia = true;\n                     break;\n+                case \"no_media\":\n+                    showNoMedia = true;\n+                    break;\n                 case \"is_favorite\":\n                     showIsFavorite = true;\n                     break;\n+                case \"not_favorite\":\n+                    showNotFavorite = true;\n+                    break;\n+                default:\n+                    return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng==", "bodyText": "Checkstyle does not like this change. Please either keep the line as it is or add braces. The other checkstyle violations about missing braces can be ignored, for now. I can merge it without those tests passing.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450502996", "createdAt": "2020-07-06T22:02:37Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -67,7 +85,7 @@ public FeedItemFilter(String[] properties) {\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if(mProperties.length == 0) return items;\n+        if (mProperties.length == 0) return items;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMzcyOA==", "bodyText": "Please do not re-format unrelated lines, here.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450503728", "createdAt": "2020-07-06T22:04:38Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/attrs.xml", "diffHunk": "@@ -1,69 +1,73 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <resources>\n-    <attr name=\"action_about\" format=\"reference\"/>\n-    <attr name=\"action_search\" format=\"reference\"/>\n-    <attr name=\"action_stream\" format=\"reference\"/>\n-    <attr name=\"av_download\" format=\"reference\"/>\n-    <attr name=\"av_fast_forward\" format=\"reference\"/>\n-    <attr name=\"av_pause\" format=\"reference\"/>\n-    <attr name=\"av_play\" format=\"reference\"/>\n-    <attr name=\"av_skip\" format=\"reference\"/>\n-    <attr name=\"av_rewind\" format=\"reference\"/>\n-    <attr name=\"ic_delete\" format=\"reference\"/>\n-    <attr name=\"content_new\" format=\"reference\"/>\n-    <attr name=\"content_remove_from_queue\" format=\"reference\"/>\n-    <attr name=\"storage\" format=\"reference\"/>\n-    <attr name=\"statistics\" format=\"reference\"/>\n-    <attr name=\"feed\" format=\"reference\"/>\n-    <attr name=\"location_web_site\" format=\"reference\"/>\n-    <attr name=\"navigation_accept\" format=\"reference\"/>\n-    <attr name=\"navigation_cancel\" format=\"reference\"/>\n-    <attr name=\"ic_load_more\" format=\"reference\"/>\n-    <attr name=\"navigation_refresh\" format=\"reference\"/>\n-    <attr name=\"navigation_up\" format=\"reference\"/>\n-    <attr name=\"stat_playlist\" format=\"reference\"/>\n-    <attr name=\"ic_folder\" format=\"reference\"/>\n-    <attr name=\"type_video\" format=\"reference\"/>\n-    <attr name=\"dragview_background\" format=\"reference\"/>\n-    <attr name=\"ic_history\" format=\"reference\"/>\n-    <attr name=\"ic_sliders\" format=\"reference\"/>\n-    <attr name=\"ic_settings_playback\" format=\"reference\"/>\n-    <attr name=\"ic_settings\" format=\"reference\"/>\n-    <attr name=\"ic_lock_open\" format=\"reference\"/>\n-    <attr name=\"ic_lock_closed\" format=\"reference\"/>\n-    <attr name=\"ic_filter\" format=\"reference\"/>\n-    <attr name=\"progressBarTheme\" format=\"reference\"/>\n-    <attr name=\"ic_fav\" format=\"reference\"/>\n-    <attr name=\"ic_unfav\" format=\"reference\"/>\n-    <attr name=\"ic_sleep\" format=\"reference\"/>\n-    <attr name=\"ic_sleep_off\" format=\"reference\"/>\n-    <attr name=\"checkbox_multiple\" format=\"reference\"/>\n-    <attr name=\"ic_select_all\" format=\"reference\"/>\n-    <attr name=\"ic_select_none\" format=\"reference\"/>\n-    <attr name=\"ic_sort\" format=\"reference\"/>\n-    <attr name=\"ic_key\" format=\"reference\"/>\n-    <attr name=\"ic_volume_adaption\" format=\"reference\"/>\n-    <attr name=\"ic_network\" format=\"reference\"/>\n-    <attr name=\"ic_appearance\" format=\"reference\"/>\n+    <attr name=\"filter_dialog_button_background\" format=\"reference\" />\n+    <attr name=\"filter_dialog_button_clear\" format=\"reference\" />\n+    <attr name=\"filter_dialog_clear_active\" format=\"reference\" />\n+    <attr name=\"filter_dialog_clear_inactive\" format=\"reference\" />\n+    <attr name=\"action_about\" format=\"reference\" />\n+    <attr name=\"action_search\" format=\"reference\" />\n+    <attr name=\"action_stream\" format=\"reference\" />\n+    <attr name=\"av_download\" format=\"reference\" />\n+    <attr name=\"av_fast_forward\" format=\"reference\" />\n+    <attr name=\"av_pause\" format=\"reference\" />\n+    <attr name=\"av_play\" format=\"reference\" />\n+    <attr name=\"av_skip\" format=\"reference\" />\n+    <attr name=\"av_rewind\" format=\"reference\" />\n+    <attr name=\"ic_delete\" format=\"reference\" />\n+    <attr name=\"content_new\" format=\"reference\" />\n+    <attr name=\"content_remove_from_queue\" format=\"reference\" />\n+    <attr name=\"storage\" format=\"reference\" />\n+    <attr name=\"statistics\" format=\"reference\" />\n+    <attr name=\"feed\" format=\"reference\" />\n+    <attr name=\"location_web_site\" format=\"reference\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDI0OA==", "bodyText": "I would prefer if you could move this to the bottom of the theme definition. I think that the primary accent color should be on top, so that it is easier to see the key aspects of the theme directly.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450504248", "createdAt": "2020-07-06T22:06:11Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/styles.xml", "diffHunk": "@@ -1,11 +1,17 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources xmlns:tools=\"http://schemas.android.com/tools\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\">\n \n     <style name=\"Theme.AntennaPod.Light\" parent=\"Theme.Base.AntennaPod.Light\">\n         <!-- Room for API dependent attributes -->\n     </style>\n \n     <style name=\"Theme.Base.AntennaPod.Light\" parent=\"Theme.MaterialComponents.Light\">\n+        <item name=\"filter_dialog_button_background\">\n+            @drawable/filter_dialog_button_background_light\n+        </item>\n+        <item name=\"filter_dialog_button_clear\">@drawable/filter_dialog_button_clear</item>\n+        <item name=\"filter_dialog_clear_active\">@color/dialog_filter_clear_active_light</item>\n+        <item name=\"filter_dialog_clear_inactive\">@color/dialog_filter_clear_inactive_light</item>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNjIxOA==", "bodyText": "I am not 100% sure but I think that this file does not need to be copied two times. When using an attr for the color, it can support light and dark theme with only one drawable file:\n\nic_filter_close includes with attr ?attr/filter_close_color\n\n@color/filter_close_light is a selector depending on state\n\n@color/dialog_filter_button_active_light\n@color/dialog_filter_button_inactive_light\n\n\n@color/filter_close_dark is a selector depending on state\n\n@color/dialog_filter_button_active_dark\n@color/dialog_filter_button_inactive_dark\n\n\n\n\n\nI hope that it is clear what I mean. This would reduce code duplication of a rather complex file.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450506218", "createdAt": "2020-07-06T22:11:42Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/drawable/ic_filter_close_light.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <item", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06f36d12d8ac3e9f00e39f47eda4dfd48dd5e69a", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/06f36d12d8ac3e9f00e39f47eda4dfd48dd5e69a", "committedDate": "2020-07-07T14:44:29Z", "message": "Merge pull request #8 from AntennaPod/develop\n\nupdate me"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/2ce23f6868a1205996955f7cbbbb004246ebf9b1", "committedDate": "2020-07-07T14:55:56Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTY5MTEz", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#pullrequestreview-444169113", "createdAt": "2020-07-07T19:01:43Z", "commit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTowMjoyNFrOGuLujQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOToxMjowM1rOGuMB_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3OTgyMQ==", "bodyText": "Please also move this to the bottom. Why did you add line breaks here? The other theme definitions do not use line breaks.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451079821", "createdAt": "2020-07-07T19:02:24Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/styles.xml", "diffHunk": "@@ -1,11 +1,14 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources xmlns:tools=\"http://schemas.android.com/tools\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\">\n \n     <style name=\"Theme.AntennaPod.Light\" parent=\"Theme.Base.AntennaPod.Light\">\n         <!-- Room for API dependent attributes -->\n     </style>\n \n     <style name=\"Theme.Base.AntennaPod.Light\" parent=\"Theme.MaterialComponents.Light\">\n+        <item name=\"filter_dialog_button_background\">\n+            @drawable/filter_dialog_button_background_light\n+        </item>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTA0OA==", "bodyText": "Those are only colors, so they can be moved to the color directory.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451081048", "createdAt": "2020-07-07T19:04:55Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/drawable/filter_dialog_button_background_dark.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@color/dialog_filter_button_active_dark\" android:state_checked=\"true\" />\n+    <item android:drawable=\"@color/dialog_filter_button_inactive_dark\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTY1OA==", "bodyText": "This should be a different resource for light and dark theme, I think", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451081658", "createdAt": "2020-07-07T19:06:05Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/styles.xml", "diffHunk": "@@ -148,6 +157,13 @@\n         <item name=\"ic_key\">@drawable/ic_key_white</item>\n         <item name=\"ic_volume_adaption\">@drawable/ic_volume_adaption_white</item>\n         <item name=\"scrollbar_thumb\">@drawable/scrollbar_thumb_dark</item>\n+\n+        <item name=\"filter_dialog_button_background\">\n+            @drawable/filter_dialog_button_background_dark\n+        </item>\n+        <item name=\"filter_dialog_clear_active\">@color/dialog_filter_clear_active_dark</item>\n+        <item name=\"filter_dialog_clear_inactive\">@color/dialog_filter_clear_inactive_dark</item>\n+        <item name=\"filter_dialog_close\">@color/filter_dialog_close</item>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDIwMw==", "bodyText": "Instead of using new attrs, I think you can re-use ?attr/colorOnSecondary (when active) and ?attr/textColorPrimary (when not active). This saves a few additional definition and therefore ensures consistency.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451084203", "createdAt": "2020-07-07T19:10:55Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/color/filter_dialog_button_text.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:color=\"?attr/filter_dialog_text_active\" android:state_checked=\"true\" />\n+    <item android:color=\"?attr/filter_dialog_text_inactive\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDc5Nw==", "bodyText": "Material Design uses multiples of 8dp for spacing (see https://material.io/design/layout/spacing-methods.html#baseline-grid). Other dialogs in AntennaPod use 16dp for padding.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451084797", "createdAt": "2020-07-07T19:12:03Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/res/layout/filter_dialog.xml", "diffHunk": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingLeft=\"20dp\"\n+    android:paddingTop=\"25dp\"\n+    android:paddingRight=\"20dp\"\n+    android:paddingBottom=\"0dp\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d90ca124c0f755651334011d11584f58dd0ce3bc", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/d90ca124c0f755651334011d11584f58dd0ce3bc", "committedDate": "2020-07-11T16:01:41Z", "message": "Merge pull request #9 from AntennaPod/develop\n\nupdate me"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "722bc2616ef25a7f209d4603f04963fec10d3d06", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/722bc2616ef25a7f209d4603f04963fec10d3d06", "committedDate": "2020-07-11T16:07:39Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "051714dff81061d33fe8cbc14aa9f278b97ccbfe", "author": {"user": {"login": "bws9000", "name": "Burt Snyder"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/051714dff81061d33fe8cbc14aa9f278b97ccbfe", "committedDate": "2020-07-11T21:09:50Z", "message": "Redesign filter dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a26a41514ae79af7cd9bdfa8838ce62bde1b1c35", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/a26a41514ae79af7cd9bdfa8838ce62bde1b1c35", "committedDate": "2020-07-13T09:45:01Z", "message": "Resize filter rows automatically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03f2198ed5e977c37f0413483a10ad421d06d153", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/03f2198ed5e977c37f0413483a10ad421d06d153", "committedDate": "2020-07-13T10:06:34Z", "message": "Fixed colors in dark theme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655c7a9884504206747b2789f0c10cdf72ac3608", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/655c7a9884504206747b2789f0c10cdf72ac3608", "committedDate": "2020-07-13T10:10:00Z", "message": "Fixed clear button clearing all values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "364444e4d64f31ba8d3f8f551680448b2e48edb8", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/364444e4d64f31ba8d3f8f551680448b2e48edb8", "committedDate": "2020-07-13T10:14:23Z", "message": "Reverted unrelated changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2770, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}