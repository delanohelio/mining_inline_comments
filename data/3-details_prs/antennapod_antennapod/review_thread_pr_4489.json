{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzU1MTY3", "number": 4489, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMDo0NFrOEqGSmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDo1NDoyNlrOEsMb7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTc4NzE1OnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMDo0NFrOHcIJsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMDo0NFrOHcIJsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NTczMA==", "bodyText": "I don't know why CI did not detect that but please add a space between ) and {", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r499255730", "createdAt": "2020-10-04T15:00:44Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a82150f40ad69b72911eb17d59d2e2f67c6d02"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTc4NzM0OnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMDo1OFrOHcIJzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMDo1OFrOHcIJzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NTc1Ng==", "bodyText": "Please delete the comment", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r499255756", "createdAt": "2020-10-04T15:00:58Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog(){\n+    }\n+\n+    private static final String TAG = RatingDialog.class.getSimpleName();\n+    private static final int AFTER_DAYS = 7;\n+\n+    private static WeakReference<Context> mContext;\n+    private static SharedPreferences mPreferences;\n+\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    public static void init(Context context) {\n+        mContext = new WeakReference<>(context);\n+        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+\n+        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n+        if (firstDate == 0) {\n+            resetStartDate();\n+        }\n+    }\n+\n+    public static void check() {\n+        if (shouldShow()) {\n+            try {\n+                showInAppReview();\n+            } catch (Exception e) {\n+                Log.e(TAG, Log.getStackTraceString(e));\n+            }\n+        }\n+    }\n+\n+    private static void showInAppReview() {\n+        Context context = mContext.get();\n+        if (context == null) {\n+            return;\n+        }\n+\n+        //ReviewManager manager = new FakeReviewManager(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a82150f40ad69b72911eb17d59d2e2f67c6d02"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTc4ODMwOnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMTo1NVrOHcIKPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMTo1NVrOHcIKPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NTg2OA==", "bodyText": "Please make this one line instead of breaking to the next line. Then the following lines can be intended a bit less. That way, the code is a lot more \"compact\"", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r499255868", "createdAt": "2020-10-04T15:01:55Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog(){\n+    }\n+\n+    private static final String TAG = RatingDialog.class.getSimpleName();\n+    private static final int AFTER_DAYS = 7;\n+\n+    private static WeakReference<Context> mContext;\n+    private static SharedPreferences mPreferences;\n+\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    public static void init(Context context) {\n+        mContext = new WeakReference<>(context);\n+        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+\n+        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n+        if (firstDate == 0) {\n+            resetStartDate();\n+        }\n+    }\n+\n+    public static void check() {\n+        if (shouldShow()) {\n+            try {\n+                showInAppReview();\n+            } catch (Exception e) {\n+                Log.e(TAG, Log.getStackTraceString(e));\n+            }\n+        }\n+    }\n+\n+    private static void showInAppReview() {\n+        Context context = mContext.get();\n+        if (context == null) {\n+            return;\n+        }\n+\n+        //ReviewManager manager = new FakeReviewManager(context);\n+        ReviewManager manager = ReviewManagerFactory.create(context);\n+        Task<ReviewInfo> request = manager.requestReviewFlow();\n+\n+        request\n+                .addOnCompleteListener(task -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a82150f40ad69b72911eb17d59d2e2f67c6d02"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTc4ODU4OnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMjoxMlrOHcIKYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMjoxMlrOHcIKYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NTkwNA==", "bodyText": "Same here. Please do not add a line break.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r499255904", "createdAt": "2020-10-04T15:02:12Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog(){\n+    }\n+\n+    private static final String TAG = RatingDialog.class.getSimpleName();\n+    private static final int AFTER_DAYS = 7;\n+\n+    private static WeakReference<Context> mContext;\n+    private static SharedPreferences mPreferences;\n+\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    public static void init(Context context) {\n+        mContext = new WeakReference<>(context);\n+        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+\n+        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n+        if (firstDate == 0) {\n+            resetStartDate();\n+        }\n+    }\n+\n+    public static void check() {\n+        if (shouldShow()) {\n+            try {\n+                showInAppReview();\n+            } catch (Exception e) {\n+                Log.e(TAG, Log.getStackTraceString(e));\n+            }\n+        }\n+    }\n+\n+    private static void showInAppReview() {\n+        Context context = mContext.get();\n+        if (context == null) {\n+            return;\n+        }\n+\n+        //ReviewManager manager = new FakeReviewManager(context);\n+        ReviewManager manager = ReviewManagerFactory.create(context);\n+        Task<ReviewInfo> request = manager.requestReviewFlow();\n+\n+        request\n+                .addOnCompleteListener(task -> {\n+                    if (task.isSuccessful()) {\n+                        ReviewInfo reviewInfo = task.getResult();\n+                        Task<Void> flow = manager.launchReviewFlow((Activity) context, reviewInfo);\n+                        flow\n+                                .addOnCompleteListener(task1 -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a82150f40ad69b72911eb17d59d2e2f67c6d02"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTc4ODgyOnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMjozMVrOHcIKgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNTowMjozMVrOHcIKgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NTkzNw==", "bodyText": "I think users know that. No need to display the toast. Also, it is not really correct since the same code path is also executed when the review is cancelled.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r499255937", "createdAt": "2020-10-04T15:02:31Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog(){\n+    }\n+\n+    private static final String TAG = RatingDialog.class.getSimpleName();\n+    private static final int AFTER_DAYS = 7;\n+\n+    private static WeakReference<Context> mContext;\n+    private static SharedPreferences mPreferences;\n+\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    public static void init(Context context) {\n+        mContext = new WeakReference<>(context);\n+        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+\n+        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n+        if (firstDate == 0) {\n+            resetStartDate();\n+        }\n+    }\n+\n+    public static void check() {\n+        if (shouldShow()) {\n+            try {\n+                showInAppReview();\n+            } catch (Exception e) {\n+                Log.e(TAG, Log.getStackTraceString(e));\n+            }\n+        }\n+    }\n+\n+    private static void showInAppReview() {\n+        Context context = mContext.get();\n+        if (context == null) {\n+            return;\n+        }\n+\n+        //ReviewManager manager = new FakeReviewManager(context);\n+        ReviewManager manager = ReviewManagerFactory.create(context);\n+        Task<ReviewInfo> request = manager.requestReviewFlow();\n+\n+        request\n+                .addOnCompleteListener(task -> {\n+                    if (task.isSuccessful()) {\n+                        ReviewInfo reviewInfo = task.getResult();\n+                        Task<Void> flow = manager.launchReviewFlow((Activity) context, reviewInfo);\n+                        flow\n+                                .addOnCompleteListener(task1 -> {\n+                                    saveRated();\n+                                    Toast.makeText(context, \"Review saved\", Toast.LENGTH_SHORT).show();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a82150f40ad69b72911eb17d59d2e2f67c6d02"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzc2NDMyOnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDo1Mzo1NVrOHfYUxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDo1Mzo1NVrOHfYUxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY2NjQzNw==", "bodyText": "Looks like the definition of the NUMBER_OF_REVIEW_ATTEMPTS variable is missing", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r502666437", "createdAt": "2020-10-09T20:53:55Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog() {\n+    }\n+\n+    private static final String TAG = RatingDialog.class.getSimpleName();\n+    private static final int AFTER_DAYS = 14;\n+\n+    private static WeakReference<Context> mContext;\n+    private static SharedPreferences mPreferences;\n+\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    public static void init(Context context) {\n+        mContext = new WeakReference<>(context);\n+        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+\n+        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n+        if (firstDate == 0) {\n+            resetStartDate();\n+        }\n+    }\n+\n+    public static void check() {\n+        if (shouldShow()) {\n+            try {\n+                showInAppReview();\n+            } catch (Exception e) {\n+                Log.e(TAG, Log.getStackTraceString(e));\n+            }\n+        }\n+    }\n+\n+    private static void showInAppReview() {\n+        Context context = mContext.get();\n+        if (context == null) {\n+            return;\n+        }\n+\n+        ReviewManager manager = ReviewManagerFactory.create(context);\n+        Task<ReviewInfo> request = manager.requestReviewFlow();\n+\n+        request.addOnCompleteListener(task -> {\n+            if (task.isSuccessful()) {\n+                ReviewInfo reviewInfo = task.getResult();\n+                Task<Void> flow = manager.launchReviewFlow((Activity) context, reviewInfo);\n+                flow.addOnCompleteListener(task1 -> {\n+                    int previousAttempts = mPreferences.getInt(NUMBER_OF_REVIEW_ATTEMPTS, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c207db2546fe8bb8647d7411e908b8e0beb26c62"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzc2NTU4OnYy", "diffSide": "RIGHT", "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDo1NDoyNlrOHfYVlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDo1NDoyNlrOHfYVlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY2NjY0NA==", "bodyText": "I think it should also reset the date here", "url": "https://github.com/AntennaPod/AntennaPod/pull/4489#discussion_r502666644", "createdAt": "2020-10-09T20:54:26Z", "author": {"login": "ByteHamster"}, "path": "app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Activity;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.VisibleForTesting;\n+import android.util.Log;\n+import android.widget.Toast;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.android.play.core.review.ReviewInfo;\n+import com.google.android.play.core.review.ReviewManager;\n+import com.google.android.play.core.review.ReviewManagerFactory;\n+import com.google.android.play.core.tasks.Task;\n+\n+public class RatingDialog {\n+\n+    private RatingDialog() {\n+    }\n+\n+    private static final String TAG = RatingDialog.class.getSimpleName();\n+    private static final int AFTER_DAYS = 14;\n+\n+    private static WeakReference<Context> mContext;\n+    private static SharedPreferences mPreferences;\n+\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    public static void init(Context context) {\n+        mContext = new WeakReference<>(context);\n+        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+\n+        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n+        if (firstDate == 0) {\n+            resetStartDate();\n+        }\n+    }\n+\n+    public static void check() {\n+        if (shouldShow()) {\n+            try {\n+                showInAppReview();\n+            } catch (Exception e) {\n+                Log.e(TAG, Log.getStackTraceString(e));\n+            }\n+        }\n+    }\n+\n+    private static void showInAppReview() {\n+        Context context = mContext.get();\n+        if (context == null) {\n+            return;\n+        }\n+\n+        ReviewManager manager = ReviewManagerFactory.create(context);\n+        Task<ReviewInfo> request = manager.requestReviewFlow();\n+\n+        request.addOnCompleteListener(task -> {\n+            if (task.isSuccessful()) {\n+                ReviewInfo reviewInfo = task.getResult();\n+                Task<Void> flow = manager.launchReviewFlow((Activity) context, reviewInfo);\n+                flow.addOnCompleteListener(task1 -> {\n+                    int previousAttempts = mPreferences.getInt(NUMBER_OF_REVIEW_ATTEMPTS, 0);\n+                    if (previousAttempts >= 3) {\n+                        saveRated();\n+                    } else {\n+                        mPreferences", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c207db2546fe8bb8647d7411e908b8e0beb26c62"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4672, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}