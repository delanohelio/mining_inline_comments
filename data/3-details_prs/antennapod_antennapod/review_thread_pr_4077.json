{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDk1ODQz", "number": 4077, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMToyODoxMVrOD9HeYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozMjoyM1rOEn_5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDEyMTkzOnYy", "diffSide": "RIGHT", "path": "core/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMToyODoxMVrOGWcvjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDoxODozMlrOGXGI0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5Mjc4Mg==", "bodyText": "I think the variable can be inlined without adding \"+\"", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r426192782", "createdAt": "2020-05-16T21:28:11Z", "author": {"login": "ByteHamster"}, "path": "core/build.gradle", "diffHunk": "@@ -86,7 +86,8 @@ dependencies {\n         playApi \"com.google.android.gms:play-services-cast:$playServicesVersion\"\n         api \"com.google.android.support:wearable:$wearableSupportVersion\"\n     } else {\n-        System.out.println(\"core: free build hack, skipping some dependencies\")\n+        System.out.println(\"core: free build hack, skipping some dependencies and bundling conscrypt (\"+\"$conscryptVersion\"+\")\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "420d32363e4512b929fb2ee86ec4a0ba4e2f99f2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg3MDk5Mg==", "bodyText": "I think the variable can be inlined without adding \"+\"\n\nI think you're correct. I tried adding the variable inside the text string and it got substituted correctly. I'll change it later (I also see there's a conflict in build.gradle that I need to adjust).", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r426870992", "createdAt": "2020-05-18T20:18:32Z", "author": {"login": "Slinger"}, "path": "core/build.gradle", "diffHunk": "@@ -86,7 +86,8 @@ dependencies {\n         playApi \"com.google.android.gms:play-services-cast:$playServicesVersion\"\n         api \"com.google.android.support:wearable:$wearableSupportVersion\"\n     } else {\n-        System.out.println(\"core: free build hack, skipping some dependencies\")\n+        System.out.println(\"core: free build hack, skipping some dependencies and bundling conscrypt (\"+\"$conscryptVersion\"+\")\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5Mjc4Mg=="}, "originalCommit": {"oid": "420d32363e4512b929fb2ee86ec4a0ba4e2f99f2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDEyNTU4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMTozNjozNFrOGWcxjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTo0MzoxMlrOGXmtYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MzI5NA==", "bodyText": "Are you sure that this does not break anything? Podcast publishers use pretty horrible setups sometimes (invalid xml, broken certificates, duplicate or changing GUIDs, old tls versions (?)) and users then blame AntennaPod for that. What are the default protocols if we did not call this at all?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r426193294", "createdAt": "2020-05-16T21:36:34Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java", "diffHunk": "@@ -260,7 +286,15 @@ public Socket createSocket(InetAddress var1, int var2, InetAddress var3, int var\n         }\n \n         private void configureSocket(SSLSocket s) {\n-            s.setEnabledProtocols(new String[] { \"TLSv1.2\", \"TLSv1.1\", \"TLSv1\" } );\n+            if (Flavors.FLAVOR == Flavors.FREE) {\n+                // Free flavor (bundles modern conscrypt): TLSv1.3 and modern cipher suites are\n+                // guaranteed. Protocols older than TLSv1.2 are now deprecated and can be disabled.\n+                s.setEnabledProtocols(new String[] { \"TLSv1.3\", \"TLSv1.2\" });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "420d32363e4512b929fb2ee86ec4a0ba4e2f99f2"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg3Njk4Ng==", "bodyText": "As long as\nsslContext = SSLContext.getInstance(\"TLSv1.3\");\n\ngets run, TLSv1.3 and TLSv1.2 should be supported on all devices without setEnabledProtocols()... I think. My experiments so far indicates this (on the devices I've tested) but I can't guarantee it. What other protocols are enabled seems to vary by platform and doesn't have a specific default(?). I think SSL3 gets enabled by default on older devices unless explicitly disabled (like this).\nApart form just ensuring that TLSv1.3 and TLSv1.2 are enabled (inspired by the original reason for this class: to enable TLSv1.2 on KitKat), my main reason for this was to ensure old protocols are not enabled. This includes SSL3, TLS1 and TLS1.1. For the same reason I removed enabling of the two old cipher suites (TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA and TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA) when Conscrypt is bundled - they are insecure and not needed any more.\nI understand your concern. If there is a chance a podcast out there still doesn't support TLSv1.2, this could be a problem. But I've read Firefox, Chrome/Chromium and Safari have or are dropping support for TLS1.1 (and older) this year. But if that's not enough to force server administrators to support modern protocols, it makes me think that maybe we should re-enable SSLv3? I mean, maybe there's a podcast server out there that doesn't even support TLS at all? (I did not mean this in a sarcastic way: someone could be listening to a really old podcast on an old server that they found without ever visiting it with a browser).\nDo you know some way to try finding podcasts that might not support TLSv1.2? Obviously the ones I'm listening to works, but that's an insignificant subset of all podcasts out there...", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r426876986", "createdAt": "2020-05-18T20:31:14Z", "author": {"login": "Slinger"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java", "diffHunk": "@@ -260,7 +286,15 @@ public Socket createSocket(InetAddress var1, int var2, InetAddress var3, int var\n         }\n \n         private void configureSocket(SSLSocket s) {\n-            s.setEnabledProtocols(new String[] { \"TLSv1.2\", \"TLSv1.1\", \"TLSv1\" } );\n+            if (Flavors.FLAVOR == Flavors.FREE) {\n+                // Free flavor (bundles modern conscrypt): TLSv1.3 and modern cipher suites are\n+                // guaranteed. Protocols older than TLSv1.2 are now deprecated and can be disabled.\n+                s.setEnabledProtocols(new String[] { \"TLSv1.3\", \"TLSv1.2\" });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MzI5NA=="}, "originalCommit": {"oid": "420d32363e4512b929fb2ee86ec4a0ba4e2f99f2"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQwNDY0Mg==", "bodyText": "Do you know some way to try finding podcasts that might not support TLSv1.2?\n\nNot really :/ One could ask the gpodder developers: They crawl podcasts anyway. They have not been too active in the last few months and I do not want to cause them additional work, though.\n\nI've read Firefox, Chrome/Chromium and Safari have or are dropping support for TLS1.1 (and older) this year\n\nOkay, let's remove it and see if users complain.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r427404642", "createdAt": "2020-05-19T15:43:12Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java", "diffHunk": "@@ -260,7 +286,15 @@ public Socket createSocket(InetAddress var1, int var2, InetAddress var3, int var\n         }\n \n         private void configureSocket(SSLSocket s) {\n-            s.setEnabledProtocols(new String[] { \"TLSv1.2\", \"TLSv1.1\", \"TLSv1\" } );\n+            if (Flavors.FLAVOR == Flavors.FREE) {\n+                // Free flavor (bundles modern conscrypt): TLSv1.3 and modern cipher suites are\n+                // guaranteed. Protocols older than TLSv1.2 are now deprecated and can be disabled.\n+                s.setEnabledProtocols(new String[] { \"TLSv1.3\", \"TLSv1.2\" });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MzI5NA=="}, "originalCommit": {"oid": "420d32363e4512b929fb2ee86ec4a0ba4e2f99f2"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTExMjU1OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0NjoyMVrOGpXEnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0NjoyMVrOGpXEnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMjgxNQ==", "bodyText": "Are these lines related? Looks like a merge artifact.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r446022815", "createdAt": "2020-06-26T07:46:21Z", "author": {"login": "ByteHamster"}, "path": "build.gradle", "diffHunk": "@@ -65,6 +65,16 @@ project.ext {\n     rxAndroidVersion = \"2.1.1\"\n     rxJavaVersion = \"2.2.2\"\n     iconifyVersion = \"2.2.2\"\n+    rxJavaRulesVersion = \"1.3.3.0\"\n+    triangleLabelViewVersion = \"1.1.2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba3c7d3b881cf47545debc48fa4a394a77c75e21"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTEyMDI2OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0OTowMlrOGpXJeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0OTowMlrOGpXJeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyNDA1Ng==", "bodyText": "Can you please remove this comment for the alternative? latest.release is not specific to conscrypt, so I do not think that it needs to be mentioned here. I prefer keeping explicit versions because that way, you can not get into the situation that the app suddenly stops working without changing the source code.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r446024056", "createdAt": "2020-06-26T07:49:02Z", "author": {"login": "ByteHamster"}, "path": "build.gradle", "diffHunk": "@@ -65,6 +65,16 @@ project.ext {\n     rxAndroidVersion = \"2.1.1\"\n     rxJavaVersion = \"2.2.2\"\n     iconifyVersion = \"2.2.2\"\n+    rxJavaRulesVersion = \"1.3.3.0\"\n+    triangleLabelViewVersion = \"1.1.2\"\n+\n+    // Only used for free builds. This version should be updated regularly.\n+    conscryptVersion = \"2.4.0\"\n+    // Alternatively one can just use:\n+    //  conscryptVersion = \"latest.release\"\n+    // but it will mess up reproducible builds.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba3c7d3b881cf47545debc48fa4a394a77c75e21"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzY4ODc0OnYy", "diffSide": "RIGHT", "path": "core/src/main/res/values/strings.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxMjowMFrOHY1CJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTozMjo0N1rOHaZOWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5Njc3Mg==", "bodyText": "This change looks like it was introduced when rebasing", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r495796772", "createdAt": "2020-09-28T09:12:00Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -391,7 +391,7 @@\n     <string name=\"pref_autoUpdateIntervallOrTime_every\">every %1$s</string>\n     <string name=\"pref_autoUpdateIntervallOrTime_at\">at %1$s</string>\n     <string name=\"pref_followQueue_title\">Continuous Playback</string>\n-    <string name=\"pref_pauseOnHeadsetDisconnect_title\">Headphones Disconnect</string>\n+    <string name=\"pref_pauseOnHeadsetDisconnect_title\">Headphones or Bluetooth disconnect</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0b685de9ecef46afbfdcf35a879ecfd64e986f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzODI5OA==", "bodyText": "Looks like commit 5be6880 sneaked in from develop. I was foolish and assumed develop had been merged into master at some point after my last rebase against develop (which was a long time ago), but I should have looked closer at the commits after rebasing against master. Sorry! I will \"disappear it.\"", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r497438298", "createdAt": "2020-09-30T11:32:47Z", "author": {"login": "Slinger"}, "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -391,7 +391,7 @@\n     <string name=\"pref_autoUpdateIntervallOrTime_every\">every %1$s</string>\n     <string name=\"pref_autoUpdateIntervallOrTime_at\">at %1$s</string>\n     <string name=\"pref_followQueue_title\">Continuous Playback</string>\n-    <string name=\"pref_pauseOnHeadsetDisconnect_title\">Headphones Disconnect</string>\n+    <string name=\"pref_pauseOnHeadsetDisconnect_title\">Headphones or Bluetooth disconnect</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5Njc3Mg=="}, "originalCommit": {"oid": "f0b685de9ecef46afbfdcf35a879ecfd64e986f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzc2ODU3OnYy", "diffSide": "RIGHT", "path": "core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozMjoyM1rOHY1xPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTowNTo1OVrOHaiMrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwODgzMA==", "bodyText": "Could this be fixed by using freeImplementation \"org.conscrypt:conscrypt-android:$conscryptVersion\" instead of using the free build hack? I am not sure if that hack is even needed anymore but that's out of scope for your PR :) I created #4457 for that.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r495808830", "createdAt": "2020-09-28T09:32:23Z", "author": {"login": "ByteHamster"}, "path": "core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java", "diffHunk": "@@ -1,6 +1,16 @@\n package de.danoeh.antennapod.core;\n \n import android.content.Context;\n+import java.security.Security;\n+\n+/*\n+ * If you get an error here (\"package org.conscrypt does not exist\"), you are probably doing a free\n+ * build and didn't pass \"-PfreeBuild\" to gradle (e.g. \"./gradlew assembleFreeRelease -PfreeBuild\").\n+ *\n+ * If you are doing a non-free build using \"assembleRelease\" or \"assembleDebug\" and get this error,\n+ * use \"assemblePlayRelease\" or \"assemblePlayDebug\" instead (e.g. \"./gradlew assemblePlayRelease\").", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0b685de9ecef46afbfdcf35a879ecfd64e986f5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDczNQ==", "bodyText": "Interesting! If you think the \"-PfreeBuild\" hack can be removed in master (if it's reliable enough for the 2.0.0 release) then I'll be happy to change my PR accordingly.\nThat reminds me, if it gets changed the circleci goals and F-Droid build meta should then be updated as well. I remember when I first worked on this PR and naively tried to figure out how to \"use the Java preprocessor\"... it took some time to find the -PfreeBuild  used for the f-droid meta (but not circleci I meant: assembleRelease instead of assemblePlayRelease in circleci). That's why I wrote the comment above, telling others to use it (and adding it to circleci). It'd be great if it can be banished altogether.\nNow Java just needs a preprocessor so all those \"duplicate\" Free/Play files can be joined together. \ud83d\ude04", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r497444735", "createdAt": "2020-09-30T11:45:15Z", "author": {"login": "Slinger"}, "path": "core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java", "diffHunk": "@@ -1,6 +1,16 @@\n package de.danoeh.antennapod.core;\n \n import android.content.Context;\n+import java.security.Security;\n+\n+/*\n+ * If you get an error here (\"package org.conscrypt does not exist\"), you are probably doing a free\n+ * build and didn't pass \"-PfreeBuild\" to gradle (e.g. \"./gradlew assembleFreeRelease -PfreeBuild\").\n+ *\n+ * If you are doing a non-free build using \"assembleRelease\" or \"assembleDebug\" and get this error,\n+ * use \"assemblePlayRelease\" or \"assemblePlayDebug\" instead (e.g. \"./gradlew assemblePlayRelease\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwODgzMA=="}, "originalCommit": {"oid": "f0b685de9ecef46afbfdcf35a879ecfd64e986f5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4NTMyNw==", "bodyText": "Yeah, that comment is pretty useful. Though, making it \"just work\" would be even better than a comment :) I think Android Studio automatically selects the free flavour by default, so every new contributor would be suspended by this.\n\nIf you think the \"-PfreeBuild\" hack can be removed in master\n\nMy idea would be to still use -PfreeBuild for the proprietary dependencies and to only use freeImplementation for conscrypt. As far as I understood the reason for originally adding the hack is that Gradle sometimes builds other flavours in addition to the one you actually need. On F-Droid's build machine without the proprietary libraries, this then causes issues. The other way around (loading conscrypt unneccessarily) does not hurt that much. This still needs to be confirmed but I am pretty sure that when using freeImplementation, conscrypt does not end up in the final play build. Even if the Gradle error was still there, it would only affect the build and not the final apk.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4077#discussion_r497585327", "createdAt": "2020-09-30T15:05:59Z", "author": {"login": "ByteHamster"}, "path": "core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java", "diffHunk": "@@ -1,6 +1,16 @@\n package de.danoeh.antennapod.core;\n \n import android.content.Context;\n+import java.security.Security;\n+\n+/*\n+ * If you get an error here (\"package org.conscrypt does not exist\"), you are probably doing a free\n+ * build and didn't pass \"-PfreeBuild\" to gradle (e.g. \"./gradlew assembleFreeRelease -PfreeBuild\").\n+ *\n+ * If you are doing a non-free build using \"assembleRelease\" or \"assembleDebug\" and get this error,\n+ * use \"assemblePlayRelease\" or \"assemblePlayDebug\" instead (e.g. \"./gradlew assemblePlayRelease\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwODgzMA=="}, "originalCommit": {"oid": "f0b685de9ecef46afbfdcf35a879ecfd64e986f5"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4783, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}