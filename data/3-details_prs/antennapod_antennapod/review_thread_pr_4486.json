{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NDQwMjY3", "number": 4486, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNDo0M1rOEplKfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxNjoyNFrOEuKBxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDM1OTY0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNDo0M1rOHbVfOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo0MDo1NFrOHbwQeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNTY1OA==", "bodyText": "Hmm, I think I would skip the mute functionality. For Audio, it is kind of pointless.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498425658", "createdAt": "2020-10-01T18:04:43Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1NTQzNA==", "bodyText": "Yes, I agree this is a personal decision but as most of the users use AntennaPod without an hardware keyboard and @alexanderadam wants a mute function, I think this should stay implemented, anyway.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498455434", "createdAt": "2020-10-01T19:02:20Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNTY1OA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwOTQxMw==", "bodyText": "The issue is only about video (and it contains things like captioning, which AntennaPod does not support).\n@alexanderadam Do you actually need muting for audio podcasts or was the table just an example?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498509413", "createdAt": "2020-10-01T20:57:58Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNTY1OA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNjY0OQ==", "bodyText": "Ah sorry! @ByteHamster you're absolutely right, this was just an example. I copied these shortcuts from somewhere.\nI just removed the mute stuff from my comment.\nSorry about the confusion.\nIMHO mute really doesn't make any sense. I would simply stop the track if I don't want (or can't) to listen anymore.\n@asdoi thank you so much for working on this! \ud83d\ude4f", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498636649", "createdAt": "2020-10-02T06:29:36Z", "author": {"login": "alexanderadam"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNTY1OA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg2NDI0OQ==", "bodyText": "Ok. I now removed it for audio podcasts (MainActivty) should I also remove it for videos (VideoPlayerActivity)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498864249", "createdAt": "2020-10-02T14:40:54Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNTY1OA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDM2NTgyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNjo0MVrOHbVjLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo0MzowMFrOHbwVjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNjY3MA==", "bodyText": "The media button receiver is not a service. I would try using a broadcast instead. I think we have a method somewhere that is called \"sendLocalBroadcast\" or something like that.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498426670", "createdAt": "2020-10-01T18:06:41Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (customKeyCode != null) {\n+            serviceIntent.putExtra(MediaButtonReceiver.EXTRA_KEYCODE, customKeyCode);\n+            ContextCompat.startForegroundService(this, serviceIntent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1MzU3Ng==", "bodyText": "I am using the PlaybackService (l. 523), I only use the EXTRA_KEYCODE from MediaButtonReceiver as name of the extras.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498453576", "createdAt": "2020-10-01T18:58:37Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (customKeyCode != null) {\n+            serviceIntent.putExtra(MediaButtonReceiver.EXTRA_KEYCODE, customKeyCode);\n+            ContextCompat.startForegroundService(this, serviceIntent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNjY3MA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwNjk3Mg==", "bodyText": "Oh, sorry. That line was pretty far away. I'm wondering if this could lead to problems. MediaButtonReceiver uses a few more arguments for the PlaybackService. Maybe it would be better to send this to MediaButtonReceiver, just like the widget does. Not 100% sure.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498506972", "createdAt": "2020-10-01T20:53:00Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (customKeyCode != null) {\n+            serviceIntent.putExtra(MediaButtonReceiver.EXTRA_KEYCODE, customKeyCode);\n+            ContextCompat.startForegroundService(this, serviceIntent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNjY3MA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg2NTU0OQ==", "bodyText": "If I send the new KeyEvent to MediaButtonReceiver the delay between the press and the responding action increased (on my emulator) a lot. Furthermore I took the intent from the MediaButtonReceiver, so the behaviour is the same.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498865549", "createdAt": "2020-10-02T14:43:00Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,61 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (customKeyCode != null) {\n+            serviceIntent.putExtra(MediaButtonReceiver.EXTRA_KEYCODE, customKeyCode);\n+            ContextCompat.startForegroundService(this, serviceIntent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNjY3MA=="}, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDM3MDI5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowODowNVrOHbVmDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowODowNVrOHbVmDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNzQwNA==", "bodyText": "For double-tapping forward and backward, we already have a nice little animation. Could you try to add it here, too?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498427404", "createdAt": "2020-10-01T18:08:05Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,96 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244dc207c9ed199077b528d26ed12d4d1a8c63d"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDg2NDA5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDo1ODo1MVrOHbaoBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo0NDowOFrOHbwYMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwOTgyOQ==", "bodyText": "This could be painful for the ears. I think it would be better to only have that feature on supported Android versions and do nothing on older systems.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498509829", "createdAt": "2020-10-01T20:58:51Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,102 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,\n+                                audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg2NjIyNg==", "bodyText": "Yes I agree, I removed the Unmute part, should I also remove the mute part?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498866226", "createdAt": "2020-10-02T14:44:08Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,102 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,\n+                                audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwOTgyOQ=="}, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDg3MDY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTowMToxMVrOHbasdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTowMToxMVrOHbasdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMDk2Ng==", "bodyText": "This looks a bit strange. Doesn't Android have key bindings for going back, anyway?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498510966", "createdAt": "2020-10-01T21:01:11Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,102 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,\n+                                audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_ESCAPE:\n+            case KeyEvent.KEYCODE_F:\n+                //Exit fullscreen mode\n+                onOptionsItemSelected(new ActionMenuItem(this, 0, android.R.id.home, 0, 0, \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDg3NTI2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTowMjo0N1rOHbavZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1MzowNVrOHbwuPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMTcxNw==", "bodyText": "I think this could lead to problems. If AntennaPod swallows key events, standard system keys could no longer work (things like copy-paste?)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498511717", "createdAt": "2020-10-01T21:02:47Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,102 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,\n+                                audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_ESCAPE:\n+            case KeyEvent.KEYCODE_F:\n+                //Exit fullscreen mode\n+                onOptionsItemSelected(new ActionMenuItem(this, 0, android.R.id.home, 0, 0, \"\"));\n+                break;\n+            case KeyEvent.KEYCODE_P:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                break;\n+            //Go to x% of video:\n+            case KeyEvent.KEYCODE_0:\n+                videoPercent = 0f;\n+                break;\n+            case KeyEvent.KEYCODE_1:\n+                videoPercent = 0.1f;\n+                break;\n+            case KeyEvent.KEYCODE_2:\n+                videoPercent = 0.2f;\n+                break;\n+            case KeyEvent.KEYCODE_3:\n+                videoPercent = 0.3f;\n+                break;\n+            case KeyEvent.KEYCODE_4:\n+                videoPercent = 0.4f;\n+                break;\n+            case KeyEvent.KEYCODE_5:\n+                videoPercent = 0.5f;\n+                break;\n+            case KeyEvent.KEYCODE_6:\n+                videoPercent = 0.6f;\n+                break;\n+            case KeyEvent.KEYCODE_7:\n+                videoPercent = 0.7f;\n+                break;\n+            case KeyEvent.KEYCODE_8:\n+                videoPercent = 0.8f;\n+                break;\n+            case KeyEvent.KEYCODE_9:\n+                videoPercent = 0.9f;\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (videoPercent != null) {\n+            controller.seekTo((int) (videoPercent * controller.getDuration()));\n+        }\n+        return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3MTg2OQ==", "bodyText": "For unhandled keycodes the default case is called which calls super.onKeyUp(keyCode, event); (l. 573)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498871869", "createdAt": "2020-10-02T14:53:05Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,102 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) == 0) {\n+                        //Unmute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,\n+                                audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC), 0);\n+                    } else {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);\n+                    }\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_ESCAPE:\n+            case KeyEvent.KEYCODE_F:\n+                //Exit fullscreen mode\n+                onOptionsItemSelected(new ActionMenuItem(this, 0, android.R.id.home, 0, 0, \"\"));\n+                break;\n+            case KeyEvent.KEYCODE_P:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                break;\n+            //Go to x% of video:\n+            case KeyEvent.KEYCODE_0:\n+                videoPercent = 0f;\n+                break;\n+            case KeyEvent.KEYCODE_1:\n+                videoPercent = 0.1f;\n+                break;\n+            case KeyEvent.KEYCODE_2:\n+                videoPercent = 0.2f;\n+                break;\n+            case KeyEvent.KEYCODE_3:\n+                videoPercent = 0.3f;\n+                break;\n+            case KeyEvent.KEYCODE_4:\n+                videoPercent = 0.4f;\n+                break;\n+            case KeyEvent.KEYCODE_5:\n+                videoPercent = 0.5f;\n+                break;\n+            case KeyEvent.KEYCODE_6:\n+                videoPercent = 0.6f;\n+                break;\n+            case KeyEvent.KEYCODE_7:\n+                videoPercent = 0.7f;\n+                break;\n+            case KeyEvent.KEYCODE_8:\n+                videoPercent = 0.8f;\n+                break;\n+            case KeyEvent.KEYCODE_9:\n+                videoPercent = 0.9f;\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (videoPercent != null) {\n+            controller.seekTo((int) (videoPercent * controller.getDuration()));\n+        }\n+        return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMTcxNw=="}, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDg3ODM5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTowNDowMVrOHbaxbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTozMDowOFrOHbyFFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMjIzOA==", "bodyText": "Does this conflict with navigating the app using a dpad? (related: #445)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498512238", "createdAt": "2020-10-01T21:04:01Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,64 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3MjkzOA==", "bodyText": "Yes, on my emulator the arrow buttons sometimes also change the current focused view. I did not find a way to disable this.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498872938", "createdAt": "2020-10-02T14:54:53Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,64 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMjIzOA=="}, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5NDEwMQ==", "bodyText": "Hmm. Then this mapping could cause issues with devices that do not have a touch screen (eg. Android TV). I would rather use a key mapping that does not interfere with navigation.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498894101", "createdAt": "2020-10-02T15:30:08Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,64 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        Intent serviceIntent = new Intent(this, PlaybackService.class);\n+        serviceIntent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);\n+\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMjIzOA=="}, "originalCommit": {"oid": "f3a82acba4b3a208013a66ddf1b515717b4837d3"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzI2MjE4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTozMTozOVrOHbyIgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODo0MzowOVrOHb4Apg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5NDk3OQ==", "bodyText": "Does the \"forward button skips\" preference influence the behavior of the key bindings? If I recall correctly, that was somehow related to the hardwarebutton extra.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498894979", "createdAt": "2020-10-02T15:31:39Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,48 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (customKeyCode != null) {\n+            Intent intent = new Intent(this, PlaybackService.class);\n+            intent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0978cce38b0d6785a0c6118d841d8a4bdd7e8573"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk5MTI3MA==", "bodyText": "No it does not have any affect but as this line is not needed, let us keep it save", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498991270", "createdAt": "2020-10-02T18:43:09Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,48 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            default:\n+                return super.onKeyUp(keyCode, event);\n+        }\n+\n+        if (customKeyCode != null) {\n+            Intent intent = new Intent(this, PlaybackService.class);\n+            intent.putExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5NDk3OQ=="}, "originalCommit": {"oid": "0978cce38b0d6785a0c6118d841d8a4bdd7e8573"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzI4NjY5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTozODo1NlrOHbyYUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTozODo1NlrOHbyYUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5OTAyNg==", "bodyText": "I would also remove the mute part. Could be confusing otherwise.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r498899026", "createdAt": "2020-10-02T15:38:56Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,98 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    if (audioManager.getStreamVolume(AudioManager.STREAM_MUSIC) > 0) {\n+                        //Mute\n+                        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0978cce38b0d6785a0c6118d841d8a4bdd7e8573"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDE4ODMzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDo1MjozN1rOHb7TXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDo1MjozN1rOHb7TXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0NTIxNA==", "bodyText": "Something like the following would make the code shorter and also allows to remove the variable videoPercent. I think having super.onKeyUp(keyCode, event) in the end of the method would also make it easier to see that the method still calls the system method.\nThis is a pretty common pattern when converting chars in c/c++, so I guess it should be okay to understand (even if it is a bit less self-explanatory than your version).\nif (keyCode >= KeyEvent.KEYCODE_0 && keyCode <= KeyEvent.KEYCODE_9) {\n    controller.seekTo((int) (0.1f * (keyCode - KeyEvent.KEYCODE_0) * controller.getDuration()));\n    return true;\n}", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r499045214", "createdAt": "2020-10-02T20:52:37Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,95 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Float videoPercent = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_ENTER: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                break;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                } else {\n+                    return super.onKeyUp(keyCode, event);\n+                }\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_UP:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_DPAD_DOWN:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                break;\n+            case KeyEvent.KEYCODE_ESCAPE:\n+            case KeyEvent.KEYCODE_F:\n+                //Exit fullscreen mode\n+                onBackPressed();\n+                break;\n+            case KeyEvent.KEYCODE_P:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                break;\n+            //Go to x% of video:\n+            case KeyEvent.KEYCODE_0:\n+                videoPercent = 0f;\n+                break;\n+            case KeyEvent.KEYCODE_1:\n+                videoPercent = 0.1f;\n+                break;\n+            case KeyEvent.KEYCODE_2:\n+                videoPercent = 0.2f;\n+                break;\n+            case KeyEvent.KEYCODE_3:\n+                videoPercent = 0.3f;\n+                break;\n+            case KeyEvent.KEYCODE_4:\n+                videoPercent = 0.4f;\n+                break;\n+            case KeyEvent.KEYCODE_5:\n+                videoPercent = 0.5f;\n+                break;\n+            case KeyEvent.KEYCODE_6:\n+                videoPercent = 0.6f;\n+                break;\n+            case KeyEvent.KEYCODE_7:\n+                videoPercent = 0.7f;\n+                break;\n+            case KeyEvent.KEYCODE_8:\n+                videoPercent = 0.8f;\n+                break;\n+            case KeyEvent.KEYCODE_9:\n+                videoPercent = 0.9f;\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a048ba7fd8d17440937f3efc2e6ec71be875d2"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjczMTcwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTowMzoxMFrOHhhCPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTowMzoxMFrOHhhCPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwNjMwMw==", "bodyText": "Could you please add AudioManager.FLAG_SHOW_UI here, too?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r504906303", "createdAt": "2020-10-14T19:03:10Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,68 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                return true;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                return true;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                return true;\n+            case KeyEvent.KEYCODE_F:\n+            case KeyEvent.KEYCODE_ESCAPE:\n+                //Exit fullscreen mode\n+                onBackPressed();\n+                return true;\n+            case KeyEvent.KEYCODE_I:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                return true;\n+            case KeyEvent.KEYCODE_PLUS: //Fallthrough\n+            case KeyEvent.KEYCODE_W:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_MINUS: //Fallthrough\n+            case KeyEvent.KEYCODE_S:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9fa719705ba1066e7504c8226eedf181f81b254"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjczMjc0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTowMzoyN1rOHhhC2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzozMDoxMlrOHiSiKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwNjQ1OQ==", "bodyText": "Checkstyle complains that there is no default case.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r504906459", "createdAt": "2020-10-14T19:03:27Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,68 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                return true;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                return true;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                return true;\n+            case KeyEvent.KEYCODE_F:\n+            case KeyEvent.KEYCODE_ESCAPE:\n+                //Exit fullscreen mode\n+                onBackPressed();\n+                return true;\n+            case KeyEvent.KEYCODE_I:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                return true;\n+            case KeyEvent.KEYCODE_PLUS: //Fallthrough\n+            case KeyEvent.KEYCODE_W:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_MINUS: //Fallthrough\n+            case KeyEvent.KEYCODE_S:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                    return true;\n+                }\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9fa719705ba1066e7504c8226eedf181f81b254"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyMjM3MQ==", "bodyText": "But there is no need for a default case.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r505622371", "createdAt": "2020-10-15T15:09:34Z", "author": {"login": "asdoi"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,68 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                return true;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                return true;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                return true;\n+            case KeyEvent.KEYCODE_F:\n+            case KeyEvent.KEYCODE_ESCAPE:\n+                //Exit fullscreen mode\n+                onBackPressed();\n+                return true;\n+            case KeyEvent.KEYCODE_I:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                return true;\n+            case KeyEvent.KEYCODE_PLUS: //Fallthrough\n+            case KeyEvent.KEYCODE_W:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_MINUS: //Fallthrough\n+            case KeyEvent.KEYCODE_S:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                    return true;\n+                }\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwNjQ1OQ=="}, "originalCommit": {"oid": "c9fa719705ba1066e7504c8226eedf181f81b254"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxNzI4OQ==", "bodyText": "Okay, I can merge it as-is (even though merging things with failing tests shows scary warnings :P)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r505717289", "createdAt": "2020-10-15T17:30:12Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,68 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                return true;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                return true;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                return true;\n+            case KeyEvent.KEYCODE_F:\n+            case KeyEvent.KEYCODE_ESCAPE:\n+                //Exit fullscreen mode\n+                onBackPressed();\n+                return true;\n+            case KeyEvent.KEYCODE_I:\n+                //Toggle picture-in-picture mode\n+                compatEnterPictureInPicture();\n+                return true;\n+            case KeyEvent.KEYCODE_PLUS: //Fallthrough\n+            case KeyEvent.KEYCODE_W:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_MINUS: //Fallthrough\n+            case KeyEvent.KEYCODE_S:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_M:\n+                //Mute/Unmute\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, 0);\n+                    return true;\n+                }\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwNjQ1OQ=="}, "originalCommit": {"oid": "c9fa719705ba1066e7504c8226eedf181f81b254"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzcwNTA0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxODoyOVrOHiSHqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxODoyOVrOHiSHqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxMDUwNA==", "bodyText": "This should be lowering ;)\nActually, I would suggest to just remove the comments explaining what is done. I think it's pretty obvious what the code does and it is always just a single line. Comments that basically just repeat the code make the code harder to read (more information readers needs to process).\nComments like Fallthrough explain things that developers need to have an eye on. The comment Go to x% of video is also fine because when looking at the code, it could take a second to get what it does. In contrast, a comment like Toggle picture-in-picture mode immediately followed compatEnterPictureInPicture(); does not really add value, in my opinion.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r505710504", "createdAt": "2020-10-15T17:18:29Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,58 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P:\n+                //Play/Pause\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                //Go Back\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                //Go Forward\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_PLUS: //Fallthrough\n+            case KeyEvent.KEYCODE_W:\n+                //Raise volume\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_MINUS: //Fallthrough\n+            case KeyEvent.KEYCODE_S:\n+                //Raise volume", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9ede3d9adc0045d27a1890f83c54424b69f24a"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzcwNjk3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxOTowM1rOHiSI5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxOTowM1rOHiSI5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxMDgyMQ==", "bodyText": "Fallthrough comment missing :)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r505710821", "createdAt": "2020-10-15T17:19:03Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java", "diffHunk": "@@ -480,4 +484,68 @@ void stop() {\n \n     }\n \n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P: //Fallthrough\n+            case KeyEvent.KEYCODE_SPACE:\n+                //Play/Pause\n+                onPlayPause();\n+                toggleVideoControlsVisibility();\n+                return true;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                //Go Back\n+                onRewind();\n+                showSkipAnimation(false);\n+                return true;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                //Go Forward\n+                onFastForward();\n+                showSkipAnimation(true);\n+                return true;\n+            case KeyEvent.KEYCODE_F:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9ede3d9adc0045d27a1890f83c54424b69f24a"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODM0MjQ3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxNjoyNFrOHiYXBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxNjoyNFrOHiYXBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxMjc0Mg==", "bodyText": "Could you please make this line shorter (same for the mute feature of the other class)? That checkstyle issue can be fixed more cleanly than the missing default case :)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4486#discussion_r505812742", "createdAt": "2020-10-15T20:16:24Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +516,52 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    //Hardware keyboard support\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        AudioManager audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\n+        Integer customKeyCode = null;\n+\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_P:\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;\n+                break;\n+            case KeyEvent.KEYCODE_J: //Fallthrough\n+            case KeyEvent.KEYCODE_A:\n+            case KeyEvent.KEYCODE_COMMA:\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_REWIND;\n+                break;\n+            case KeyEvent.KEYCODE_K: //Fallthrough\n+            case KeyEvent.KEYCODE_D:\n+            case KeyEvent.KEYCODE_PERIOD:\n+                customKeyCode = KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;\n+                break;\n+            case KeyEvent.KEYCODE_PLUS: //Fallthrough\n+            case KeyEvent.KEYCODE_W:\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_MINUS: //Fallthrough\n+            case KeyEvent.KEYCODE_S:\n+                audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,\n+                        AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);\n+                return true;\n+            case KeyEvent.KEYCODE_M:\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_TOGGLE_MUTE, AudioManager.FLAG_SHOW_UI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3893bf6cf3a4c8e2af407b2742d216a66170d173"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4670, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}