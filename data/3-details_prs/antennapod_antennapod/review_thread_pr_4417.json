{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MDA2NDcz", "number": 4417, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxOTo0NDowNVrOEizePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjo0NToyMFrOEn2mfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTMwMzY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/res/xml/actions.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxOTo0NDowNVrOHQ3GRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTozNjowNVrOHR9fug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MTk5MQ==", "bodyText": "This can be any URL, right? Is there a best-practice what to use? What do you think about using https://antennapod.org/deeplink/search{?query}", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r487441991", "createdAt": "2020-09-12T19:44:05Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/res/xml/actions.xml", "diffHunk": "@@ -0,0 +1,33 @@\n+<?xml version =\"1.0\" encoding =\"utf-8\"?>\n+<!--  You can learn more about App Actions and how to use them in the documentation:\n+https://developers.google.com/assistant/app/overview -->\n+\n+<actions>\n+    <action intentName=\"actions.intent.OPEN_APP_FEATURE\">\n+        <fulfillment urlTemplate=\"https://de.danoeh.antennapod/main{?featureName}\">\n+            <parameter-mapping\n+                intentParameter=\"feature\"\n+                urlParameter=\"featureName\" />\n+        </fulfillment>\n+        <parameter name=\"feature\">\n+            <entity-set-reference entitySetId=\"featureEntitySet\" />\n+        </parameter>\n+    </action>\n+\n+    <action intentName=\"actions.intent.GET_THING\">\n+        <fulfillment urlTemplate=\"https://de.danoeh.antennapod/search{?query}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5NTM4Ng==", "bodyText": "Yes, it can be any URL. I\u2019ve changed it to your preferred one.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r488595386", "createdAt": "2020-09-15T11:36:05Z", "author": {"login": "mgborowiec"}, "path": "app/src/main/res/xml/actions.xml", "diffHunk": "@@ -0,0 +1,33 @@\n+<?xml version =\"1.0\" encoding =\"utf-8\"?>\n+<!--  You can learn more about App Actions and how to use them in the documentation:\n+https://developers.google.com/assistant/app/overview -->\n+\n+<actions>\n+    <action intentName=\"actions.intent.OPEN_APP_FEATURE\">\n+        <fulfillment urlTemplate=\"https://de.danoeh.antennapod/main{?featureName}\">\n+            <parameter-mapping\n+                intentParameter=\"feature\"\n+                urlParameter=\"featureName\" />\n+        </fulfillment>\n+        <parameter name=\"feature\">\n+            <entity-set-reference entitySetId=\"featureEntitySet\" />\n+        </parameter>\n+    </action>\n+\n+    <action intentName=\"actions.intent.GET_THING\">\n+        <fulfillment urlTemplate=\"https://de.danoeh.antennapod/search{?query}\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MTk5MQ=="}, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTMwNTE2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxOTo0NTo0NlrOHQ3G-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzowMTo1MVrOHYomnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MjE3MQ==", "bodyText": "This looks pretty similar to the switch in loadFragment. Could that one be re-used instead of creating another switch?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r487442171", "createdAt": "2020-09-12T19:45:46Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +543,57 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    /**\n+     * Handles the deep link incoming via App Actions.\n+     * Performs an in-app search or opens the relevant feature of the app\n+     * depending on the query.\n+     *\n+     * @param uri incoming deep link\n+     */\n+    private void handleDeeplink(Uri uri) {\n+        if (uri == null || uri.getPath() == null) {\n+           return;\n+        }\n+\n+        switch (uri.getPath()) {\n+            case \"/search\":\n+                String query = uri.getQueryParameter(\"query\");\n+                if (query == null) {\n+                    return;\n+                }\n+\n+                this.loadChildFragment(OnlineSearchFragment.newInstance(CombinedSearcher.class, query));\n+                break;\n+\n+            case \"/main\":\n+                String feature = uri.getQueryParameter(\"featureName\");\n+                if (feature == null) {\n+                    return;\n+                }\n+\n+                feature = feature.toLowerCase();\n+                switch (feature) {\n+                    case \"downloads\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5NTE1MA==", "bodyText": "The feature names (and therefore, the parameters used in a potential user query in the Assistant) don\u2019t exactly match the Strings in the loadFragment switch so it\u2019s not possible to simply re-use it. One solution would be to add an additional method to convert the strings first, which would then get rid of the second switch.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r488595150", "createdAt": "2020-09-15T11:35:39Z", "author": {"login": "mgborowiec"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +543,57 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    /**\n+     * Handles the deep link incoming via App Actions.\n+     * Performs an in-app search or opens the relevant feature of the app\n+     * depending on the query.\n+     *\n+     * @param uri incoming deep link\n+     */\n+    private void handleDeeplink(Uri uri) {\n+        if (uri == null || uri.getPath() == null) {\n+           return;\n+        }\n+\n+        switch (uri.getPath()) {\n+            case \"/search\":\n+                String query = uri.getQueryParameter(\"query\");\n+                if (query == null) {\n+                    return;\n+                }\n+\n+                this.loadChildFragment(OnlineSearchFragment.newInstance(CombinedSearcher.class, query));\n+                break;\n+\n+            case \"/main\":\n+                String feature = uri.getQueryParameter(\"featureName\");\n+                if (feature == null) {\n+                    return;\n+                }\n+\n+                feature = feature.toLowerCase();\n+                switch (feature) {\n+                    case \"downloads\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MjE3MQ=="}, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MzExNw==", "bodyText": "Is this the same as the identifier specified in actions.xml (entity identifier=\"DOWNLOADS\")? If so, why do you use lower case here and upper case in actions.xml?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r495593117", "createdAt": "2020-09-27T17:01:51Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -511,4 +543,57 @@ public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n     public Snackbar showSnackbarAbovePlayer(int text, int duration) {\n         return showSnackbarAbovePlayer(getResources().getText(text), duration);\n     }\n+\n+    /**\n+     * Handles the deep link incoming via App Actions.\n+     * Performs an in-app search or opens the relevant feature of the app\n+     * depending on the query.\n+     *\n+     * @param uri incoming deep link\n+     */\n+    private void handleDeeplink(Uri uri) {\n+        if (uri == null || uri.getPath() == null) {\n+           return;\n+        }\n+\n+        switch (uri.getPath()) {\n+            case \"/search\":\n+                String query = uri.getQueryParameter(\"query\");\n+                if (query == null) {\n+                    return;\n+                }\n+\n+                this.loadChildFragment(OnlineSearchFragment.newInstance(CombinedSearcher.class, query));\n+                break;\n+\n+            case \"/main\":\n+                String feature = uri.getQueryParameter(\"featureName\");\n+                if (feature == null) {\n+                    return;\n+                }\n+\n+                feature = feature.toLowerCase();\n+                switch (feature) {\n+                    case \"downloads\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MjE3MQ=="}, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTMwNTg5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxOTo0NzowNlrOHQ3HVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTozNToyMVrOHR9eSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MjI2MA==", "bodyText": "We already have a function named handleNavIntent. Could those functions be combined? They seem to do pretty similar things.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r487442260", "createdAt": "2020-09-12T19:47:06Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -492,6 +498,32 @@ private void handleNavIntent() {\n     protected void onNewIntent(Intent intent) {\n         super.onNewIntent(intent);\n         setIntent(intent);\n+\n+        handleIntent(intent);\n+    }\n+\n+    /**\n+     *  Handles the incoming intent. If the activity was launched via a deep link,\n+     *  passes the uri to handleDeeplink().\n+     *\n+     *  Added an SDK version check since the minimum SDK supported by AntennaPod is 16\n+     *  and Object.equals(Obj1, Obj2) is only supported in API 19+.\n+     *\n+     * @param intent incoming intent\n+     */\n+    private void handleIntent(Intent intent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5NTAxNw==", "bodyText": "They could potentially be combined, however, I think keeping them separate is beneficial as they are meant for slightly different purposes.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r488595017", "createdAt": "2020-09-15T11:35:21Z", "author": {"login": "mgborowiec"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java", "diffHunk": "@@ -492,6 +498,32 @@ private void handleNavIntent() {\n     protected void onNewIntent(Intent intent) {\n         super.onNewIntent(intent);\n         setIntent(intent);\n+\n+        handleIntent(intent);\n+    }\n+\n+    /**\n+     *  Handles the incoming intent. If the activity was launched via a deep link,\n+     *  passes the uri to handleDeeplink().\n+     *\n+     *  Added an SDK version check since the minimum SDK supported by AntennaPod is 16\n+     *  and Object.equals(Obj1, Obj2) is only supported in API 19+.\n+     *\n+     * @param intent incoming intent\n+     */\n+    private void handleIntent(Intent intent) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MjI2MA=="}, "originalCommit": {"oid": "25c3429d5587e3e280ba35699c454816a02fe73d"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjI0NTExOnYy", "diffSide": "RIGHT", "path": "app/src/main/res/xml/actions.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjo0NToyMFrOHYogcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjo0NToyMFrOHYogcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MTUzOA==", "bodyText": "Can the name be a @string/ resource, too? That would allow localization of the screen names.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4417#discussion_r495591538", "createdAt": "2020-09-27T16:45:20Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/res/xml/actions.xml", "diffHunk": "@@ -0,0 +1,33 @@\n+<?xml version =\"1.0\" encoding =\"utf-8\"?>\n+<!--  You can learn more about App Actions and how to use them in the documentation:\n+https://developers.google.com/assistant/app/overview -->\n+\n+<actions>\n+    <action intentName=\"actions.intent.OPEN_APP_FEATURE\">\n+        <fulfillment urlTemplate=\"https://antennapod.org/deeplink/main{?featureName}\">\n+            <parameter-mapping\n+                intentParameter=\"feature\"\n+                urlParameter=\"featureName\" />\n+        </fulfillment>\n+        <parameter name=\"feature\">\n+            <entity-set-reference entitySetId=\"featureEntitySet\" />\n+        </parameter>\n+    </action>\n+\n+    <action intentName=\"actions.intent.GET_THING\">\n+        <fulfillment urlTemplate=\"https://antennapod.org/deeplink/search{?query}\">\n+            <parameter-mapping\n+                intentParameter=\"thing.name\"\n+                urlParameter=\"query\"/>\n+        </fulfillment>\n+    </action>\n+\n+    <entity-set entitySetId=\"featureEntitySet\">\n+        <entity identifier=\"QUEUE\" name=\"Queue\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f1ec18b84b1d670ce7daa550245b0b9b1fe745b"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4649, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}