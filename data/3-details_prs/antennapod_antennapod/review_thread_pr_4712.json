{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MjEwNjI0", "number": 4712, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMTowNlrOE89kNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMzoyMlrOE89pdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzU4NzEwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMTowNlrOH5ZQnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMTowNlrOH5ZQnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0NDczMw==", "bodyText": "Could you please move this export code to a new function? This is now a really long method and would be easier to read if split in two.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4712#discussion_r529944733", "createdAt": "2020-11-24T22:31:06Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "diffHunk": "@@ -67,42 +72,60 @@ protected void onCreate(Bundle savedInstanceState) {\n             clipboard.setPrimaryClip(clip);\n             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();\n         });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.bug_report_options, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n \n-        findViewById(R.id.btn_export_logcat).setOnClickListener(v -> {\n-            try {\n-                File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n-                filename.createNewFile();\n-                String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n-                Runtime.getRuntime().exec(cmd);\n-                //share file\n+    @Override\n+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+        if (item.getItemId() == R.id.export_logcat) {\n+            AlertDialog.Builder alertBuilder = new AlertDialog.Builder(this);\n+            alertBuilder.setTitle(\"Warning!\").setMessage(\"Logs may contain sensitive information\");\n+            alertBuilder.setPositiveButton(\"Continue\", (dialog, which) -> {\n                 try {\n-                    Intent i = new Intent(Intent.ACTION_SEND);\n-                    i.setType(\"text/*\");\n-                    String authString = getString(de.danoeh.antennapod.core.R.string.provider_authority);\n-                    Uri fileUri = FileProvider.getUriForFile(this, authString, filename);\n-                    i.putExtra(Intent.EXTRA_STREAM,  fileUri);\n-                    i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n-                    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT) {\n-                        PackageManager pm = getPackageManager();\n-                        List<ResolveInfo> resInfos = pm.queryIntentActivities(i, PackageManager.MATCH_DEFAULT_ONLY);\n-                        for (ResolveInfo resolveInfo : resInfos) {\n-                            String packageName = resolveInfo.activityInfo.packageName;\n-                            grantUriPermission(packageName, fileUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                    File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76316852ee2bd499cbae60f38824e1a3c2903ac3"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzU4OTk2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMTozNVrOH5ZSdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMTozNVrOH5ZSdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0NTIwNQ==", "bodyText": "Please use string resources, so the text can be translated.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4712#discussion_r529945205", "createdAt": "2020-11-24T22:31:35Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "diffHunk": "@@ -67,42 +72,60 @@ protected void onCreate(Bundle savedInstanceState) {\n             clipboard.setPrimaryClip(clip);\n             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();\n         });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.bug_report_options, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n \n-        findViewById(R.id.btn_export_logcat).setOnClickListener(v -> {\n-            try {\n-                File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n-                filename.createNewFile();\n-                String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n-                Runtime.getRuntime().exec(cmd);\n-                //share file\n+    @Override\n+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+        if (item.getItemId() == R.id.export_logcat) {\n+            AlertDialog.Builder alertBuilder = new AlertDialog.Builder(this);\n+            alertBuilder.setTitle(\"Warning!\").setMessage(\"Logs may contain sensitive information\");\n+            alertBuilder.setPositiveButton(\"Continue\", (dialog, which) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76316852ee2bd499cbae60f38824e1a3c2903ac3"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzU5NDc5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMjoyMlrOH5ZVnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMjoyMlrOH5ZVnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0NjAxMw==", "bodyText": "Please make this two lines to be more consistent.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        alertBuilder.setTitle(\"Warning!\").setMessage(\"Logs may contain sensitive information\");\n          \n          \n            \n                        alertBuilder.setTitle(\"Warning!\");\n          \n          \n            \n                        alertBuilder.setMessage(\"Logs may contain sensitive information\");", "url": "https://github.com/AntennaPod/AntennaPod/pull/4712#discussion_r529946013", "createdAt": "2020-11-24T22:32:22Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "diffHunk": "@@ -67,42 +72,60 @@ protected void onCreate(Bundle savedInstanceState) {\n             clipboard.setPrimaryClip(clip);\n             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();\n         });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.bug_report_options, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n \n-        findViewById(R.id.btn_export_logcat).setOnClickListener(v -> {\n-            try {\n-                File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n-                filename.createNewFile();\n-                String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n-                Runtime.getRuntime().exec(cmd);\n-                //share file\n+    @Override\n+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+        if (item.getItemId() == R.id.export_logcat) {\n+            AlertDialog.Builder alertBuilder = new AlertDialog.Builder(this);\n+            alertBuilder.setTitle(\"Warning!\").setMessage(\"Logs may contain sensitive information\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76316852ee2bd499cbae60f38824e1a3c2903ac3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzU5NzY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMjo1MlrOH5ZXgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMjo1MlrOH5ZXgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0NjQ5OQ==", "bodyText": "Calling create is not needed if you show it afterwards. You can just delete this line.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4712#discussion_r529946499", "createdAt": "2020-11-24T22:32:52Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "diffHunk": "@@ -67,42 +72,60 @@ protected void onCreate(Bundle savedInstanceState) {\n             clipboard.setPrimaryClip(clip);\n             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();\n         });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.bug_report_options, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n \n-        findViewById(R.id.btn_export_logcat).setOnClickListener(v -> {\n-            try {\n-                File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n-                filename.createNewFile();\n-                String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n-                Runtime.getRuntime().exec(cmd);\n-                //share file\n+    @Override\n+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+        if (item.getItemId() == R.id.export_logcat) {\n+            AlertDialog.Builder alertBuilder = new AlertDialog.Builder(this);\n+            alertBuilder.setTitle(\"Warning!\").setMessage(\"Logs may contain sensitive information\");\n+            alertBuilder.setPositiveButton(\"Continue\", (dialog, which) -> {\n                 try {\n-                    Intent i = new Intent(Intent.ACTION_SEND);\n-                    i.setType(\"text/*\");\n-                    String authString = getString(de.danoeh.antennapod.core.R.string.provider_authority);\n-                    Uri fileUri = FileProvider.getUriForFile(this, authString, filename);\n-                    i.putExtra(Intent.EXTRA_STREAM,  fileUri);\n-                    i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n-                    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT) {\n-                        PackageManager pm = getPackageManager();\n-                        List<ResolveInfo> resInfos = pm.queryIntentActivities(i, PackageManager.MATCH_DEFAULT_ONLY);\n-                        for (ResolveInfo resolveInfo : resInfos) {\n-                            String packageName = resolveInfo.activityInfo.packageName;\n-                            grantUriPermission(packageName, fileUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                    File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n+                    filename.createNewFile();\n+                    String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n+                    Runtime.getRuntime().exec(cmd);\n+                    //share file\n+                    try {\n+                        Intent i = new Intent(Intent.ACTION_SEND);\n+                        i.setType(\"text/*\");\n+                        String authString = getString(de.danoeh.antennapod.core.R.string.provider_authority);\n+                        Uri fileUri = FileProvider.getUriForFile(this, authString, filename);\n+                        i.putExtra(Intent.EXTRA_STREAM, fileUri);\n+                        i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT) {\n+                            PackageManager pm = getPackageManager();\n+                            List<ResolveInfo> resInfos = pm.queryIntentActivities(i, PackageManager.MATCH_DEFAULT_ONLY);\n+                            for (ResolveInfo resolveInfo : resInfos) {\n+                                String packageName = resolveInfo.activityInfo.packageName;\n+                                grantUriPermission(packageName, fileUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                            }\n                         }\n+                        String chooserTitle = getString(de.danoeh.antennapod.core.R.string.share_file_label);\n+                        startActivity(Intent.createChooser(i, chooserTitle));\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                        int strResId = R.string.log_file_share_exception;\n+                        Snackbar.make(findViewById(android.R.id.content), strResId, Snackbar.LENGTH_LONG)\n+                                .show();\n                     }\n-                    String chooserTitle =  getString(de.danoeh.antennapod.core.R.string.share_file_label);\n-                    startActivity(Intent.createChooser(i, chooserTitle));\n-                } catch (Exception e) {\n+                } catch (IOException e) {\n                     e.printStackTrace();\n-                    int strResId = R.string.log_file_share_exception;\n-                    Snackbar.make(findViewById(android.R.id.content), strResId, Snackbar.LENGTH_LONG)\n-                            .show();\n+                    Snackbar.make(findViewById(android.R.id.content), e.getMessage(), Snackbar.LENGTH_LONG).show();\n                 }\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-                Snackbar.make(findViewById(android.R.id.content), e.getMessage(), Snackbar.LENGTH_LONG).show();\n-            }\n-        });\n+                dialog.dismiss();\n+            });\n+            alertBuilder.setNegativeButton(\"Cancel\", (dialog, which) -> dialog.cancel());\n+            alertBuilder.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76316852ee2bd499cbae60f38824e1a3c2903ac3"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzYwMDUzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMzoyMlrOH5ZZeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozMzoyMlrOH5ZZeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0NzAwMQ==", "bodyText": "For a button action that just closes the dialog, you can also pass null as the second argument", "url": "https://github.com/AntennaPod/AntennaPod/pull/4712#discussion_r529947001", "createdAt": "2020-11-24T22:33:22Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java", "diffHunk": "@@ -67,42 +72,60 @@ protected void onCreate(Bundle savedInstanceState) {\n             clipboard.setPrimaryClip(clip);\n             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();\n         });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.bug_report_options, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n \n-        findViewById(R.id.btn_export_logcat).setOnClickListener(v -> {\n-            try {\n-                File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n-                filename.createNewFile();\n-                String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n-                Runtime.getRuntime().exec(cmd);\n-                //share file\n+    @Override\n+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+        if (item.getItemId() == R.id.export_logcat) {\n+            AlertDialog.Builder alertBuilder = new AlertDialog.Builder(this);\n+            alertBuilder.setTitle(\"Warning!\").setMessage(\"Logs may contain sensitive information\");\n+            alertBuilder.setPositiveButton(\"Continue\", (dialog, which) -> {\n                 try {\n-                    Intent i = new Intent(Intent.ACTION_SEND);\n-                    i.setType(\"text/*\");\n-                    String authString = getString(de.danoeh.antennapod.core.R.string.provider_authority);\n-                    Uri fileUri = FileProvider.getUriForFile(this, authString, filename);\n-                    i.putExtra(Intent.EXTRA_STREAM,  fileUri);\n-                    i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n-                    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT) {\n-                        PackageManager pm = getPackageManager();\n-                        List<ResolveInfo> resInfos = pm.queryIntentActivities(i, PackageManager.MATCH_DEFAULT_ONLY);\n-                        for (ResolveInfo resolveInfo : resInfos) {\n-                            String packageName = resolveInfo.activityInfo.packageName;\n-                            grantUriPermission(packageName, fileUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                    File filename = new File(UserPreferences.getDataFolder(null), \"full-logs.txt\");\n+                    filename.createNewFile();\n+                    String cmd = \"logcat -d -f \" + filename.getAbsolutePath();\n+                    Runtime.getRuntime().exec(cmd);\n+                    //share file\n+                    try {\n+                        Intent i = new Intent(Intent.ACTION_SEND);\n+                        i.setType(\"text/*\");\n+                        String authString = getString(de.danoeh.antennapod.core.R.string.provider_authority);\n+                        Uri fileUri = FileProvider.getUriForFile(this, authString, filename);\n+                        i.putExtra(Intent.EXTRA_STREAM, fileUri);\n+                        i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT) {\n+                            PackageManager pm = getPackageManager();\n+                            List<ResolveInfo> resInfos = pm.queryIntentActivities(i, PackageManager.MATCH_DEFAULT_ONLY);\n+                            for (ResolveInfo resolveInfo : resInfos) {\n+                                String packageName = resolveInfo.activityInfo.packageName;\n+                                grantUriPermission(packageName, fileUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+                            }\n                         }\n+                        String chooserTitle = getString(de.danoeh.antennapod.core.R.string.share_file_label);\n+                        startActivity(Intent.createChooser(i, chooserTitle));\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                        int strResId = R.string.log_file_share_exception;\n+                        Snackbar.make(findViewById(android.R.id.content), strResId, Snackbar.LENGTH_LONG)\n+                                .show();\n                     }\n-                    String chooserTitle =  getString(de.danoeh.antennapod.core.R.string.share_file_label);\n-                    startActivity(Intent.createChooser(i, chooserTitle));\n-                } catch (Exception e) {\n+                } catch (IOException e) {\n                     e.printStackTrace();\n-                    int strResId = R.string.log_file_share_exception;\n-                    Snackbar.make(findViewById(android.R.id.content), strResId, Snackbar.LENGTH_LONG)\n-                            .show();\n+                    Snackbar.make(findViewById(android.R.id.content), e.getMessage(), Snackbar.LENGTH_LONG).show();\n                 }\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-                Snackbar.make(findViewById(android.R.id.content), e.getMessage(), Snackbar.LENGTH_LONG).show();\n-            }\n-        });\n+                dialog.dismiss();\n+            });\n+            alertBuilder.setNegativeButton(\"Cancel\", (dialog, which) -> dialog.cancel());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76316852ee2bd499cbae60f38824e1a3c2903ac3"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4617, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}