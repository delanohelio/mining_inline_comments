{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NTgxNjY1", "number": 4646, "title": "Add Notifications for episodes", "bodyText": "Currently this branch builds, installs and the added feature works as expected, except for one bug later described with updating old notifications. That being said some parts of the code are clearly in need of refactoring.\nDefinitely TBD (somewhat in order):\n\nMove the code away from FeedUpdateWorker to a better location, this elimination the need for a DownloadFinishedEvent-Class (I don't know where to).\nChange to a more consistency wording (sometimes i called it \"feed update notification\" sometimes \"notify episodes\" etc.)\nSetting the version in the DB migration (how do I figure out which version I set it to).\nSquashing commits so I don't ruin the git blame\nTagging the corresponding issue (not doing yet to avoid create empty excitement)\n\nMaybe TBD (maybe to be done, maybe to be added in another PR):\n\nCurrently if there a notification for 2 episodes and another is found, the notification gets updated with only the newly found episodes (e.g 1) instead of adding the previous episodes (e.g. 3). I just don't know where i should store this data. Should I rely on the already existing new field in the DB, create a new one, save it in memory? (depending on the wanted implementation this can quite easily get quite big).\nAdd podcast cover to the notification\nAdd custom icon\nreimplement Group notifications with setGroupAlertBehavior.\nChange code so that Notifications only appear for auto refreshes\nWhen opening a feed the notification should maybe disappear, because the user now definitely knows about the episode (should it?).\nAdd actions buttons to notification:\n\nto mark episodes as played\nplay episodes in background\n\n\nAdding tests\n\nCloses #213", "createdAt": "2020-11-04T19:01:35Z", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646", "merged": true, "mergeCommit": {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507"}, "closed": true, "closedAt": "2021-01-22T16:27:47Z", "author": {"login": "connectety"}, "timelineItems": {"totalCount": 57, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZSRPiAH2gAyNTE1NTgxNjY1OmU2OTI3ZTZkOTZhMmZlMmFhMjAwNGI3MjA2YThjMjBhY2JmMDdhM2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdyq448AH2gAyNTE1NTgxNjY1OjQxODQ5ZjNmNzI5MTllYzg2NzA3MjNjNTU1MmEyNWM0YzM0YzEzZGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6927e6d96a2fe2aa2004b7206a8c20acbf07a3e", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/e6927e6d96a2fe2aa2004b7206a8c20acbf07a3e", "committedDate": "2020-11-04T18:42:28Z", "message": "add basic implementation of episode notification."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0090f9d55e3cd8e11eaee1aa650245365e77fefc", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/0090f9d55e3cd8e11eaee1aa650245365e77fefc", "committedDate": "2020-11-04T18:42:51Z", "message": "add intent for opening feed on clicking the notification."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa1c0ba7b4296940bd7d79dcb474b4269634ee65", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/aa1c0ba7b4296940bd7d79dcb474b4269634ee65", "committedDate": "2020-11-04T18:42:51Z", "message": "fixed not showing new episode notification."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4ab744f446e6c990a58fe980c3f402e94562ffc", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/e4ab744f446e6c990a58fe980c3f402e94562ffc", "committedDate": "2020-11-04T18:42:51Z", "message": "fixed notification not opening podcast feed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7966d80932b81d81de05e1adf263ff131a4db5f", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/d7966d80932b81d81de05e1adf263ff131a4db5f", "committedDate": "2020-11-04T18:42:51Z", "message": "add handling for when podcast does not yet have an episode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89422b8e28ce975e792f07d18dcaaf3c401eb355", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/89422b8e28ce975e792f07d18dcaaf3c401eb355", "committedDate": "2020-11-04T18:42:51Z", "message": "put code for creating channel next to similar code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029cfadc0b9ceb20e7300411d8f98867537c0fe4", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/029cfadc0b9ceb20e7300411d8f98867537c0fe4", "committedDate": "2020-11-04T18:42:51Z", "message": "fix race condition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ea778c89c9a30120f2be2656c524b44b0139b2", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/02ea778c89c9a30120f2be2656c524b44b0139b2", "committedDate": "2020-11-04T18:42:51Z", "message": "use ic_notifications instead of own image to remove duplicate assets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d20fa6b57ef38e1f080334066eeb75fac6153d0", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/6d20fa6b57ef38e1f080334066eeb75fac6153d0", "committedDate": "2020-11-04T18:42:51Z", "message": "use tag for episode notification so only correct notifications are overwritten."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/433a2ff29a5205ebbea5b19b042d236c105013e6", "committedDate": "2020-11-04T19:29:45Z", "message": "some minor code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55f07fa244648a50aa178c21ec3466d6cd54c564", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/55f07fa244648a50aa178c21ec3466d6cd54c564", "committedDate": "2020-11-04T22:10:21Z", "message": "fix NullPointerException in hashCode in FeedItem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzYxNzE1", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-523761715", "createdAt": "2020-11-04T21:51:51Z", "commit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMTo1MTo1MVrOHtq_Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMjoyNTo0MFrOHtr5qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1MjI3OA==", "bodyText": "For the new code, please use the same indention as the rest of the file (12 spaces vs 8 spaces)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517652278", "createdAt": "2020-11-04T21:51:51Z", "author": {"login": "ByteHamster"}, "path": "app/src/main/res/xml/feed_settings.xml", "diffHunk": "@@ -9,6 +9,14 @@\n             android:title=\"@string/keep_updated\"\n             android:summary=\"@string/keep_updated_summary\"/>\n \n+    <SwitchPreferenceCompat\n+        android:key=\"episodeNotification\"\n+        android:defaultValue=\"false\"\n+        android:dependency=\"keepUpdated\"\n+        android:icon=\"?attr/ic_notifications\"\n+        android:title=\"@string/episode_notification\"\n+        android:summary=\"@string/episode_notification_summary\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NDc5Ng==", "bodyText": "Please always use braces. You can find more details about the code style in the wiki: https://github.com/AntennaPod/AntennaPod/wiki/Code-style\nEdit: not sure if this will still be needed when using the \"new\" episodes (see other comments)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517654796", "createdAt": "2020-11-04T21:57:18Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java", "diffHunk": "@@ -489,4 +489,27 @@ public boolean isAutoDownloadable() {\n     public String toString() {\n         return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = 17;\n+\n+        result = 31 * result + itemIdentifier.hashCode();\n+        result = 31 * result + (int) (feedId ^ (feedId >>> 32));\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzE2NA==", "bodyText": "How about Show a notification when a new episode is released.?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517657164", "createdAt": "2020-11-04T22:02:28Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -719,6 +719,8 @@\n     <string name=\"statistics_episodes_on_device\">Episodes on the device:</string>\n     <string name=\"statistics_space_used\">Space used:</string>\n     <string name=\"statistics_view_all\">View for all podcasts \u00bb</string>\n+    <string name=\"episode_notification\">Episode Notifications</string>\n+    <string name=\"episode_notification_summary\">Shows a notification when a new episode comes out.</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzY2Ng==", "bodyText": "Could you please remove the newline before this and move new_episode_message further up to episode_notification_summary? I think the section here is only about the notification channels themselves.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517657666", "createdAt": "2020-11-04T22:03:41Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -863,6 +865,13 @@\n     <string name=\"notification_channel_auto_download\">Auto Downloads</string>\n     <string name=\"notification_channel_episode_auto_download\">Shown when episodes have been automatically downloaded.</string>\n \n+    <string name=\"notification_channel_new_episode\">New Episode</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MDkxOA==", "bodyText": "I think it is a bit risky doing this with an event. The worker could already be stopped (because refreshing is performed in a service, not the worker here) and could therefore not receive events when the download service is stopped. I think it would be better to create a new class NewEpisodesNotification (?) next to the DownloadServiceNotification class and call the method directly from DownloadService. Currently, that's just a broad direction. I am aware that it does not directly work like I suggested (storing state etc). Just a broad direction that I would find more clean and stable.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517660918", "createdAt": "2020-11-04T22:11:03Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java", "diffHunk": "@@ -44,4 +89,51 @@ public Result doWork() {\n \n         return Result.success();\n     }\n+\n+    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MjU0Nw==", "bodyText": "In the worst case, this will load all episodes of all feeds. That will lead to out-of-memory errors when using a big list of feeds. Something similar was done in another location and I just recently found out that this is responsible for a pretty decent number of crashes. So there must be some way to do that without storing all episodes.\nDo we actually need to store what episodes are new? I think the \"new\" flag in the database is basically meant to be used for exactly that purpose: an episode that users have not interacted with yet. Using the \"new\" flag will also fix this case:\n\nCurrently if there a notification for 2 episodes and another is found, the notification gets updated with only the newly found episodes (e.g 1) instead of adding the previous episodes", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517662547", "createdAt": "2020-11-04T22:14:47Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java", "diffHunk": "@@ -31,6 +56,26 @@ public Result doWork() {\n         ClientConfig.initialize(getApplicationContext());\n \n         if (NetworkUtils.networkAvailable() && NetworkUtils.isFeedRefreshAllowed()) {\n+            List<Feed> feeds = new ArrayList<>();\n+            Map<Long, FeedItem> lastItemsMap = new HashMap<>();\n+\n+            for (Feed feed : DBReader.getFeedList()) {\n+                FeedPreferences prefs = feed.getPreferences();\n+                if (prefs.getKeepUpdated() && prefs.getShowNotification()) {\n+                    List<FeedItem> outdatedFeedItems = DBReader.getFeedItemList(feed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MzU0Nw==", "bodyText": "It's stored in PodDBAdapter.VERSION. I usually use the expected release version code for that change. As this will be released in AntennaPod 2.2.0, the code would be 2020000.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517663547", "createdAt": "2020-11-04T22:17:02Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/storage/DBUpgrader.java", "diffHunk": "@@ -310,6 +310,10 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new\n             db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEEDS +\n                     \" ADD COLUMN \" + PodDBAdapter.KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0;\");\n         }\n+        if (oldVersion < 1090001) { // fixme / todo: fix  version", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a2ff29a5205ebbea5b19b042d236c105013e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2NzI0MQ==", "bodyText": "How about adding another string when multiple feeds have new episodes? Could be something like %1$s and %2$s have %3$d new episodes. This can't be done by Android automatically, switching between the messages would need to be done manually.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r517667241", "createdAt": "2020-11-04T22:25:40Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -863,6 +865,13 @@\n     <string name=\"notification_channel_auto_download\">Auto Downloads</string>\n     <string name=\"notification_channel_episode_auto_download\">Shown when episodes have been automatically downloaded.</string>\n \n+    <string name=\"notification_channel_new_episode\">New Episode</string>\n+    <string name=\"notification_channel_new_episode_description\">Shown when a new episode of a podcast was found, where notifications are enabled</string>\n+    <plurals name=\"new_episode_message\">\n+        <item quantity=\"one\">%2$s has a new episode</item>\n+        <item quantity=\"other\">%2$s has %1$d new episodes</item>\n+    </plurals>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55f07fa244648a50aa178c21ec3466d6cd54c564"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7834999f9f683388937c4af52ec166f7f4c20e5", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/a7834999f9f683388937c4af52ec166f7f4c20e5", "committedDate": "2020-11-04T22:37:41Z", "message": "fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70024630793a999b4978552cf25af36a48ed9c14", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/70024630793a999b4978552cf25af36a48ed9c14", "committedDate": "2020-11-04T22:40:54Z", "message": "add braces to if"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dcdf0f704277f8552dfc2a6a9df195ba146ff30", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/1dcdf0f704277f8552dfc2a6a9df195ba146ff30", "committedDate": "2020-11-04T22:49:52Z", "message": "fix placement of strings in strings file and update episode_notification_summary string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f3dbfa31a86765fc3e2446512c81fc581bdb4a7", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/8f3dbfa31a86765fc3e2446512c81fc581bdb4a7", "committedDate": "2020-11-06T10:13:21Z", "message": "create EpisodesNotification class for displaying Episodes Notifications\nthis removes the need for EventBus and thus removes the DownloadFinishedEvent class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adaf21a5f04a08ee8c5b94f23ed534aca48aa051", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/adaf21a5f04a08ee8c5b94f23ed534aca48aa051", "committedDate": "2020-11-06T11:30:53Z", "message": "set correct version in DBUpgrader"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9adbade5e5866dbb5095836e5dff7112424837e", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/e9adbade5e5866dbb5095836e5dff7112424837e", "committedDate": "2020-11-06T11:30:04Z", "message": "set correct version"}, "afterCommit": {"oid": "adaf21a5f04a08ee8c5b94f23ed534aca48aa051", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/adaf21a5f04a08ee8c5b94f23ed534aca48aa051", "committedDate": "2020-11-06T11:30:53Z", "message": "set correct version in DBUpgrader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87cc5978ff00b9beb51b50e2e56eeff2d2b698f2", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/87cc5978ff00b9beb51b50e2e56eeff2d2b698f2", "committedDate": "2020-11-06T13:53:49Z", "message": "rename EpisodeNotification to NewEpisodesNotification bc the name didn't have a distinct meaning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "425e7fd2b6288b0dc2e6f5fceae42dc02412ac50", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/425e7fd2b6288b0dc2e6f5fceae42dc02412ac50", "committedDate": "2020-11-06T23:28:27Z", "message": "Make proper use of NewEpisodesNotification instead of using it as a wrapper class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55c5e6300adff360fc4b708f91cdeedc2cf47918", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/55c5e6300adff360fc4b708f91cdeedc2cf47918", "committedDate": "2020-11-06T23:50:38Z", "message": "use consistent wording for episode notifications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjM4ODcz", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-525638873", "createdAt": "2020-11-07T08:52:13Z", "commit": {"oid": "55c5e6300adff360fc4b708f91cdeedc2cf47918"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwODo1MjoxNFrOHvGrdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwODo1MjoxNFrOHvGrdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE1NDU0OQ==", "bodyText": "How about storing just the FeedItem id here instead of the whole FeedItem? That avoids storing data unnecessarily.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r519154549", "createdAt": "2020-11-07T08:52:14Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    private final List<Feed> feeds = new ArrayList<>();\n+    private final Map<Long, FeedItem> lastItemsMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55c5e6300adff360fc4b708f91cdeedc2cf47918"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13d7403594490143970b3140a15b770ba4240547", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/13d7403594490143970b3140a15b770ba4240547", "committedDate": "2020-11-07T12:36:45Z", "message": "use ids instead of full objects for storing vars to decrease memory consumption"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Nzg3NjAx", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-525787601", "createdAt": "2020-11-08T08:56:17Z", "commit": {"oid": "13d7403594490143970b3140a15b770ba4240547"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwODo1NjoxN1rOHvPvjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwODo1NjoxN1rOHvPvjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMwMzA1Mw==", "bodyText": "Sorry for all the back and forth. I just noticed a problem with this method. This executes database operations on the main thread, which could lead to problems when having a big number of feeds. How about moving notification handling to handleSuccessfulDownload? That one is executed in the background. Also, the FeedSyncTask that it called there needs to load the feed anyway. Maybe that task could get another property that shows if there was a new item.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r519303053", "createdAt": "2020-11-08T08:56:17Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java", "diffHunk": "@@ -178,6 +180,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n     @Override\n     public void onCreate() {\n         Log.d(TAG, \"Service started\");\n+        newEpisodesNotification = new NewEpisodesNotification(getApplicationContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13d7403594490143970b3140a15b770ba4240547"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b90575c03808dc9bc7ddd3c7b8950c64b840902b", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/b90575c03808dc9bc7ddd3c7b8950c64b840902b", "committedDate": "2020-11-08T14:37:43Z", "message": "add Grouping to episode notifications"}, "afterCommit": {"oid": "9ebaf0b32231806d22186d5128fe196a0f196ea5", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/9ebaf0b32231806d22186d5128fe196a0f196ea5", "committedDate": "2020-11-08T14:41:02Z", "message": "add Grouping to episode notifications & make the title translatable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af1a59149d1fdcbfe304fa3cf40a3c94ecd818e", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/9af1a59149d1fdcbfe304fa3cf40a3c94ecd818e", "committedDate": "2020-11-08T14:49:07Z", "message": "add Grouping to episode notifications, make the title translatable and place the string in a more correct place in strings.xml"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ebaf0b32231806d22186d5128fe196a0f196ea5", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/9ebaf0b32231806d22186d5128fe196a0f196ea5", "committedDate": "2020-11-08T14:41:02Z", "message": "add Grouping to episode notifications & make the title translatable"}, "afterCommit": {"oid": "9af1a59149d1fdcbfe304fa3cf40a3c94ecd818e", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/9af1a59149d1fdcbfe304fa3cf40a3c94ecd818e", "committedDate": "2020-11-08T14:49:07Z", "message": "add Grouping to episode notifications, make the title translatable and place the string in a more correct place in strings.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "318be891e864e3ea0b9187a9f4440982621f561f", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/318be891e864e3ea0b9187a9f4440982621f561f", "committedDate": "2020-11-09T20:15:51Z", "message": "reduce memory usage by deleting an feedIDs-Arraylist and using lastItemsMap more instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe165cdf18ced967a29bf8aace400c9f2b917eb", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/dfe165cdf18ced967a29bf8aace400c9f2b917eb", "committedDate": "2020-11-09T22:06:05Z", "message": "fix all checkstyle errors in previously changed lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a072b7ac358a622dc51ed5e3fa3dee052acae4", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/30a072b7ac358a622dc51ed5e3fa3dee052acae4", "committedDate": "2020-11-19T00:11:52Z", "message": "fix incorrectly using feedId instead of lastKnownEpisodeId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe14bb7dc7dfa4c842fa59f2ce13f609d5aab0f", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/abe14bb7dc7dfa4c842fa59f2ce13f609d5aab0f", "committedDate": "2020-11-27T22:53:13Z", "message": "call NewEpisodesNotification from FeedSyncTask"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3037dc6bc6bfcf0ac11f10b7acd1d0238b69310e", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/3037dc6bc6bfcf0ac11f10b7acd1d0238b69310e", "committedDate": "2020-11-19T00:14:31Z", "message": "move newEpisodesNotification.showNotifications to handleSuccessfulDownload"}, "afterCommit": {"oid": "abe14bb7dc7dfa4c842fa59f2ce13f609d5aab0f", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/abe14bb7dc7dfa4c842fa59f2ce13f609d5aab0f", "committedDate": "2020-11-27T22:53:13Z", "message": "call NewEpisodesNotification from FeedSyncTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f5dde4ec49c86e75eca4cd73aeeddeaca449c0c", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/4f5dde4ec49c86e75eca4cd73aeeddeaca449c0c", "committedDate": "2020-11-27T23:25:41Z", "message": "remove unused imports and \"this.\" ."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2d4d96d09104e5430047f7e72f508eace9e2878", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/d2d4d96d09104e5430047f7e72f508eace9e2878", "committedDate": "2020-11-28T00:01:44Z", "message": "get feed from FeedSyncTask.run instead of storing the feedID and creating a feed via DB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d456ad462fb96626fd57893125e9c1a684b8173", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/2d456ad462fb96626fd57893125e9c1a684b8173", "committedDate": "2020-11-28T00:12:17Z", "message": "Merge remote-tracking branch 'upstream/develop' into notify-change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzk3NTg0", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-540797584", "createdAt": "2020-11-30T10:55:44Z", "commit": {"oid": "d2d4d96d09104e5430047f7e72f508eace9e2878"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo1NTo0NFrOH71yJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTowMjozNVrOH72Ceg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUwOTIyMQ==", "bodyText": "How about naming this showIfNeeded()?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532509221", "createdAt": "2020-11-30T10:55:44Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import java.util.List;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final Long lastEpisodeID;\n+    private final boolean dontShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            dontShowNotification = true;\n+            lastEpisodeID = null;\n+            return;\n+        }\n+\n+        List<FeedItem> feedItems = DBReader.getFeedItemList(feed);\n+\n+        Long newestEpisodeId = null;\n+        if (!feedItems.isEmpty()) {\n+            newestEpisodeId = feedItems.get(0).getId();\n+        }\n+\n+        dontShowNotification = false;\n+\n+        // newestEpisodeId is null if the feed does not have an an episode yet\n+        lastEpisodeID = newestEpisodeId;\n+    }\n+\n+    public void showNotification(Context context, Feed feed) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d4d96d09104e5430047f7e72f508eace9e2878"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMjc5MQ==", "bodyText": "How about using PodDbAdapter.getFeedCounters here? If you make the setting an argument of the method, the code here can only load the number of new items for a specific feed instead of loading the whole feed and all its items. I know this is slightly different to what I wrote earlier but that way, it could be even more efficient ;)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532512791", "createdAt": "2020-11-30T11:01:33Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import java.util.List;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final Long lastEpisodeID;\n+    private final boolean dontShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            dontShowNotification = true;\n+            lastEpisodeID = null;\n+            return;\n+        }\n+\n+        List<FeedItem> feedItems = DBReader.getFeedItemList(feed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d4d96d09104e5430047f7e72f508eace9e2878"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMzAyMg==", "bodyText": "Please remove this change, so that the PR does not touch unrelated files", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532513022", "createdAt": "2020-11-30T11:01:59Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java", "diffHunk": "@@ -178,6 +178,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n     @Override\n     public void onCreate() {\n         Log.d(TAG, \"Service started\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d4d96d09104e5430047f7e72f508eace9e2878"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMzQwMg==", "bodyText": "I think those methods are no longer needed. Could you please remove them again?", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532513402", "createdAt": "2020-11-30T11:02:35Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java", "diffHunk": "@@ -489,4 +489,29 @@ public boolean isAutoDownloadable() {\n     public String toString() {\n         return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = itemIdentifier != null ? itemIdentifier.hashCode() : 0;\n+        result = 31 * result + (int) (feedId ^ (feedId >>> 32));\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        FeedItem other = (FeedItem) obj;\n+        if (feedId != other.feedId) {\n+            return false;\n+        }\n+        return getIdentifyingValue().equals(other.getIdentifyingValue());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d4d96d09104e5430047f7e72f508eace9e2878"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6139dfe83bdbdb70d314791a45a6905881746866", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/6139dfe83bdbdb70d314791a45a6905881746866", "committedDate": "2020-11-30T12:20:17Z", "message": "undo accidentally creating a new line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ccefb16c779a7c74eb7d228d1ded92986bccb0d", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/4ccefb16c779a7c74eb7d228d1ded92986bccb0d", "committedDate": "2020-11-30T12:49:55Z", "message": "use PodDBAdapter.getFeedCounters() instead of comparing the feed items in NewEpisodesNotification. This also eliminates the need for equals in FeedItem."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7628be1055337bf1ad033578bb068b53935fc20d", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/7628be1055337bf1ad033578bb068b53935fc20d", "committedDate": "2020-11-30T12:53:14Z", "message": "rename NewEpisodesNotification.showNotification to showIfNeeded"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjA4NTU5", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-541208559", "createdAt": "2020-11-30T19:06:58Z", "commit": {"oid": "7628be1055337bf1ad033578bb068b53935fc20d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowNjo1OVrOH8Jf4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOToxNzozN1rOH8J4Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMjIyNQ==", "bodyText": "Even if the adapter's open and close methods currently don't do much, please use them for consistency.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int episodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);\n          \n          \n            \n                    PodDBAdapter adapter = PodDBAdapter.getInstance();\n          \n          \n            \n                    adapter.open();\n          \n          \n            \n                    int episodeCount = adapter.getFeedCounters(feedId).get(feedId);\n          \n          \n            \n                    adapter.close();", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532832225", "createdAt": "2020-11-30T19:06:59Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean dontShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            dontShowNotification = true;\n+            lastEpisodeCount = -1;\n+            return;\n+        }\n+\n+        lastEpisodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);\n+\n+        dontShowNotification = false;\n+    }\n+\n+    public void showIfNeeded(Context context, Feed feed) {\n+        if (dontShowNotification) {\n+            return;\n+        }\n+\n+        long feedId = feed.getId();\n+        int episodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7628be1055337bf1ad033578bb068b53935fc20d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMjY4Ng==", "bodyText": "Please move this ) to the line above", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532832686", "createdAt": "2020-11-30T19:07:46Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean dontShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            dontShowNotification = true;\n+            lastEpisodeCount = -1;\n+            return;\n+        }\n+\n+        lastEpisodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);\n+\n+        dontShowNotification = false;\n+    }\n+\n+    public void showIfNeeded(Context context, Feed feed) {\n+        if (dontShowNotification) {\n+            return;\n+        }\n+\n+        long feedId = feed.getId();\n+        int episodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);\n+        int newEpisodes = episodeCount - lastEpisodeCount;\n+\n+        if (newEpisodes > 0) {\n+            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n+            showNotification(newEpisodes, feed, context, notificationManager);\n+        }\n+    }\n+\n+    private static void showNotification(int newEpisodes, Feed feed, Context context,\n+                                         NotificationManagerCompat notificationManager) {\n+        Resources res = context.getResources();\n+        String text = res.getQuantityString(\n+                R.plurals.new_episode_notification_message, newEpisodes, newEpisodes, feed.getTitle()\n+        );\n+        String title = res.getQuantityString(R.plurals.new_episode_notification_title, newEpisodes);\n+\n+        Intent intent = new Intent();\n+        intent.setComponent(new ComponentName(context, \"de.danoeh.antennapod.activity.MainActivity\"));\n+\n+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\n+        intent.putExtra(\"fragment_feed_id\", feed.getId());\n+        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);\n+\n+        Notification notification = new NotificationCompat.Builder(\n+                context, NotificationUtils.CHANNEL_ID_EPISODE_NOTIFICATIONS\n+        )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7628be1055337bf1ad033578bb068b53935fc20d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzNTA0Mg==", "bodyText": "Could you please reverse this variable? I think the positive form shouldShowNotification is easier to read.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532835042", "createdAt": "2020-11-30T19:11:48Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean dontShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            dontShowNotification = true;\n+            lastEpisodeCount = -1;\n+            return;\n+        }\n+\n+        lastEpisodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);\n+\n+        dontShowNotification = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7628be1055337bf1ad033578bb068b53935fc20d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzODQ2Nw==", "bodyText": "getFeedCounters loads a different counter depending on user settings. Please add another argument to that method and call getFeedCounters(UserPreferences.FEED_COUNTER_SHOW_NEW, feedId) here. The only other usage of that method can then pass the user setting.\nI mean something like this in PodDBAdapter:\npublic final LongIntMap getFeedCounters(int setting, long... feedIds) {", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r532838467", "createdAt": "2020-11-30T19:17:37Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean dontShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            dontShowNotification = true;\n+            lastEpisodeCount = -1;\n+            return;\n+        }\n+\n+        lastEpisodeCount = PodDBAdapter.getInstance().getFeedCounters(feedId).get(feedId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7628be1055337bf1ad033578bb068b53935fc20d"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d3ea94ad69697dd6439ead110b22a18b130f21f", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/7d3ea94ad69697dd6439ead110b22a18b130f21f", "committedDate": "2020-12-01T08:39:21Z", "message": "change things addressed in review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37a0257e7f3054985abb827cfdee41bfbe36eba5", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/37a0257e7f3054985abb827cfdee41bfbe36eba5", "committedDate": "2020-12-01T08:45:57Z", "message": "fixes for checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c181a02eb79b55d7c23925181414735c2a222bfe", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/c181a02eb79b55d7c23925181414735c2a222bfe", "committedDate": "2020-12-02T15:05:38Z", "message": "fix crash on subscribing to podcast"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ba3adbbb883add30079566d42c6366cd058856", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/07ba3adbbb883add30079566d42c6366cd058856", "committedDate": "2020-12-02T15:13:33Z", "message": "set Category for Episode Notifications."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca4baada00ec12641a0e0386493552c5aa6ecce9", "author": {"user": {"login": "connectety", "name": "Connectety"}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/ca4baada00ec12641a0e0386493552c5aa6ecce9", "committedDate": "2020-12-02T15:20:35Z", "message": "use episodes flagged instead of the delta from last time when showing episode Notifications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTkyNDI1", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-543192425", "createdAt": "2020-12-02T20:01:50Z", "commit": {"oid": "ca4baada00ec12641a0e0386493552c5aa6ecce9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDowMTo1MFrOH9r9yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxOTo1M1rOH9skzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NTUxMg==", "bodyText": "Hmm, this adds some complexity here. How about moving the check inside NewEpisodesNotification? It can then set shouldShowNotification to false when the id is 0", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r534445512", "createdAt": "2020-12-02T20:01:50Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java", "diffHunk": "@@ -22,6 +24,9 @@ public FeedSyncTask(Context context, DownloadRequest request) {\n     }\n \n     public boolean run() {\n+        final NewEpisodesNotification newEpisodesNotification =\n+                request.getFeedfileId() == 0 ? null : new NewEpisodesNotification(request.getFeedfileId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4baada00ec12641a0e0386493552c5aa6ecce9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0ODA2MA==", "bodyText": "Just created some mock-ups for the notification icons. Do you have another idea? If not, I can draw the images and add them to the branding repo.\nPlayer:\n\nNew episodes: (this PR)\n\nAuto download completed: (another PR)", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r534448060", "createdAt": "2020-12-02T20:06:13Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean shouldShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            shouldShowNotification = false;\n+            lastEpisodeCount = -1;\n+            return;\n+        }\n+\n+        lastEpisodeCount = getNewEpisodeCount(feedId);\n+        shouldShowNotification = true;\n+    }\n+\n+    public void showIfNeeded(Context context, Feed feed) {\n+        if (!shouldShowNotification) {\n+            return;\n+        }\n+\n+        long feedId = feed.getId();\n+        int newEpisodes = getNewEpisodeCount(feedId);\n+\n+        if (newEpisodes > lastEpisodeCount) {\n+            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n+            showNotification(newEpisodes, feed, context, notificationManager);\n+        }\n+    }\n+\n+    private static void showNotification(int newEpisodes, Feed feed, Context context,\n+                                         NotificationManagerCompat notificationManager) {\n+        Resources res = context.getResources();\n+        String text = res.getQuantityString(\n+                R.plurals.new_episode_notification_message, newEpisodes, newEpisodes, feed.getTitle()\n+        );\n+        String title = res.getQuantityString(R.plurals.new_episode_notification_title, newEpisodes);\n+\n+        Intent intent = new Intent();\n+        intent.setComponent(new ComponentName(context, \"de.danoeh.antennapod.activity.MainActivity\"));\n+\n+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\n+        intent.putExtra(\"fragment_feed_id\", feed.getId());\n+        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);\n+\n+        Notification notification = new NotificationCompat.Builder(\n+                context, NotificationUtils.CHANNEL_ID_EPISODE_NOTIFICATIONS)\n+                .setSmallIcon(R.drawable.ic_notification)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4baada00ec12641a0e0386493552c5aa6ecce9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1NDQyNQ==", "bodyText": "Maybe I would still use the commit from notify-change-pref-cursor because at the moment we unesarally fetch feed info like LastModifiedDate, author etc.\n\nOh, I was not aware that DBReader.getFeed also loads all items of the feed. I don't think author etc are a problem - they don't need much space. The whole list of feed items definitely does, though. I think it would be good to add a method DBReader.getFeedWithoutItems that can then also be used by other classes. The method with a Cursor does not decouple the classes enough, in my opinion. I think notification code should not know anything about database internals.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r534454425", "createdAt": "2020-12-02T20:17:50Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean shouldShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4baada00ec12641a0e0386493552c5aa6ecce9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1NTUwMg==", "bodyText": "I personally dislike that solution, because i feel like I will be more disinformed as suposed to informed by that. But I guess I will implement it soon (DONE).\n\nMaybe we could ask this question in the original issue. Also, the manual/automatic thing could be interesting to ask there.", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r534455502", "createdAt": "2020-12-02T20:19:53Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/service/download/NewEpisodesNotification.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.Notification;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Resources;\n+\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedPreferences;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.PodDBAdapter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+\n+public class NewEpisodesNotification {\n+    static final String GROUP_KEY = \"de.danoeh.antennapod.EPISODES\";\n+\n+    private final int lastEpisodeCount;\n+    private final boolean shouldShowNotification;\n+\n+    public NewEpisodesNotification(Long feedId) {\n+        Feed feed = DBReader.getFeed(feedId);\n+\n+        FeedPreferences prefs = feed.getPreferences();\n+        if (!prefs.getKeepUpdated() || !prefs.getShowEpisodeNotification()) {\n+            shouldShowNotification = false;\n+            lastEpisodeCount = -1;\n+            return;\n+        }\n+\n+        lastEpisodeCount = getNewEpisodeCount(feedId);\n+        shouldShowNotification = true;\n+    }\n+\n+    public void showIfNeeded(Context context, Feed feed) {\n+        if (!shouldShowNotification) {\n+            return;\n+        }\n+\n+        long feedId = feed.getId();\n+        int newEpisodes = getNewEpisodeCount(feedId);\n+\n+        if (newEpisodes > lastEpisodeCount) {\n+            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n+            showNotification(newEpisodes, feed, context, notificationManager);\n+        }\n+    }\n+\n+    private static void showNotification(int newEpisodes, Feed feed, Context context,\n+                                         NotificationManagerCompat notificationManager) {\n+        Resources res = context.getResources();\n+        String text = res.getQuantityString(\n+                R.plurals.new_episode_notification_message, newEpisodes, newEpisodes, feed.getTitle()\n+        );\n+        String title = res.getQuantityString(R.plurals.new_episode_notification_title, newEpisodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4baada00ec12641a0e0386493552c5aa6ecce9"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5844608bf807710a28c8c30640b9788fc04671ad", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/5844608bf807710a28c8c30640b9788fc04671ad", "committedDate": "2021-01-02T11:37:52Z", "message": "Updated new episode notification icon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c3dacb8c17524c1d5e0b6a41db5075b232e2b78", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/8c3dacb8c17524c1d5e0b6a41db5075b232e2b78", "committedDate": "2021-01-02T11:50:22Z", "message": "Added summary notification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e33b01c635bf5d35ac90053a01eddf2b6fd64d0", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/6e33b01c635bf5d35ac90053a01eddf2b6fd64d0", "committedDate": "2021-01-02T11:54:12Z", "message": "Added icon to new episode notification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9044a00151b476cb5d98d53a64e96f72a381771", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/e9044a00151b476cb5d98d53a64e96f72a381771", "committedDate": "2021-01-21T12:48:22Z", "message": "Merge branch 'develop' into notify-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fc0acf66ffa50db4868fb5b501172b669becebf", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/2fc0acf66ffa50db4868fb5b501172b669becebf", "committedDate": "2021-01-21T12:51:57Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0291fd783c58cb7501975a0795606e7472a24a8", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/c0291fd783c58cb7501975a0795606e7472a24a8", "committedDate": "2021-01-21T13:17:50Z", "message": "Load feed counters when starting DownloadService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8c501a7ca0de768b4190e7f0c807a35d0e508ed", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/f8c501a7ca0de768b4190e7f0c807a35d0e508ed", "committedDate": "2021-01-21T13:25:53Z", "message": "Do not show notification for manual refresh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2518e898dd736421ac7a3046442e3d211c7761f", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/b2518e898dd736421ac7a3046442e3d211c7761f", "committedDate": "2021-01-21T13:38:53Z", "message": "Bug fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MzY0ODkx", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#pullrequestreview-574364891", "createdAt": "2021-01-22T15:29:13Z", "commit": {"oid": "b2518e898dd736421ac7a3046442e3d211c7761f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxNToyOToxM1rOIYpHUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxNToyOToxM1rOIYpHUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjcxMDM1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <item quantity=\"one\">%2$s has a new episode</item>\n          \n          \n            \n                    <item quantity=\"other\">%2$s has %1$d episodes flagged as new.</item>\n          \n          \n            \n                    <item quantity=\"one\">%2$s has a new episode</item>\n          \n          \n            \n                    <item quantity=\"other\">%2$s has %1$d new episodes</item>", "url": "https://github.com/AntennaPod/AntennaPod/pull/4646#discussion_r562710355", "createdAt": "2021-01-22T15:29:13Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -133,6 +133,17 @@\n         <item quantity=\"other\">%d episodes</item>\n     </plurals>\n     <string name=\"loading_more\">Loading more\u2026</string>\n+    <string name=\"episode_notification\">Episode Notifications</string>\n+    <string name=\"episode_notification_summary\">Show a notification when a new episode is released.</string>\n+    <plurals name=\"new_episode_notification_message\">\n+        <item quantity=\"one\">%2$s has a new episode</item>\n+        <item quantity=\"other\">%2$s has %1$d episodes flagged as new.</item>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2518e898dd736421ac7a3046442e3d211c7761f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97256b0f1e8e4929afd88eb8c0e4caf7c1eb1d0a", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/97256b0f1e8e4929afd88eb8c0e4caf7c1eb1d0a", "committedDate": "2021-01-22T15:29:20Z", "message": "Update core/src/main/res/values/strings.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41849f3f72919ec8670723c5552a25c4c34c13df", "author": {"user": {"login": "ByteHamster", "name": null}}, "url": "https://github.com/AntennaPod/AntennaPod/commit/41849f3f72919ec8670723c5552a25c4c34c13df", "committedDate": "2021-01-22T15:31:36Z", "message": "Execute database upgrades"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2628, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}