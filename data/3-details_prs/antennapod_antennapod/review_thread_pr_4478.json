{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1OTc1MTIx", "number": 4478, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0NzoxNlrOEpVgtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0NzoxNlrOEpVgtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzc5NTExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0NzoxNlrOHa8kMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0NzoxNlrOHa8kMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxNzMyOA==", "bodyText": "I think this should be \"AND\" (and use \"()\" around the \"OR\" parts). The search feature should only return episodes that contain all keywords, not only one of them", "url": "https://github.com/AntennaPod/AntennaPod/pull/4478#discussion_r498017328", "createdAt": "2020-10-01T06:47:16Z", "author": {"login": "ByteHamster"}, "path": "core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java", "diffHunk": "@@ -1233,14 +1237,27 @@ public Cursor searchItems(long feedID, String searchQuery) {\n             queryFeedId = \"1 = 1\";\n         }\n \n-        String query = SELECT_FEED_ITEMS_AND_MEDIA_WITH_DESCRIPTION\n-                + \" WHERE \" + queryFeedId + \" AND (\"\n-                + KEY_DESCRIPTION + \" LIKE '%\" + preparedQuery + \"%' OR \"\n-                + KEY_CONTENT_ENCODED + \" LIKE '%\" + preparedQuery + \"%' OR \"\n-                + KEY_TITLE + \" LIKE '%\" + preparedQuery + \"%'\"\n-                + \") ORDER BY \" + KEY_PUBDATE + \" DESC \"\n-                + \"LIMIT 300\";\n-        return db.rawQuery(query, null);\n+        String queryStart = SELECT_FEED_ITEMS_AND_MEDIA_WITH_DESCRIPTION\n+                + \" WHERE \" + queryFeedId + \" AND (\";\n+        StringBuilder sb = new StringBuilder(queryStart);\n+\n+        for (int i = 0; i < queryWords.length; i++) {\n+            sb\n+                    .append(KEY_DESCRIPTION + \" LIKE '%\").append(queryWords[i])\n+                    .append(\"%' OR \")\n+                    .append(KEY_CONTENT_ENCODED).append(\" LIKE '%\").append(queryWords[i])\n+                    .append(\"%' OR \")\n+                    .append(KEY_TITLE).append(\" LIKE '%\").append(queryWords[i])\n+                    .append(\"%' \");\n+\n+            if (i != queryWords.length - 1) {\n+                sb.append(\"OR \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde90ed7311927594f7ad10e4317e06dfdd5d2a3"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4661, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}