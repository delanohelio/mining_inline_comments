{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzA2OTMy", "number": 994, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNDo0Mzo1OVrOEnThKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNDo0ODo1MVrOEnTkKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjQ5NzA0OnYy", "diffSide": "RIGHT", "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/couchdb/lucene/LuceneAwareDatabaseConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNDo0Mzo1OVrOHX0yJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjoyODoyNFrOHX2l9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc0NDEwMg==", "bodyText": "I believe stale parameter is used in line no. 168 as well for every database, in case it failing without it. May be no need to specifically handle it only for User DB. here?", "url": "https://github.com/eclipse/sw360/pull/994#discussion_r494744102", "createdAt": "2020-09-25T04:43:59Z", "author": {"login": "smrutis1"}, "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/couchdb/lucene/LuceneAwareDatabaseConnector.java", "diffHunk": "@@ -149,18 +149,33 @@ private LuceneResult callLuceneDirectly(LuceneSearchView function, String queryS\n         if (resultLimit > 0) {\n             queryURI.param(\"limit\", resultLimit);\n         }\n+        if (dbNameForLuceneSearch.equals(DatabaseSettings.COUCH_DB_USERS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a053810cb6a969854e74a9d8956b542bf77486"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3Mzc1MQ==", "bodyText": "Changes done.", "url": "https://github.com/eclipse/sw360/pull/994#discussion_r494773751", "createdAt": "2020-09-25T06:28:24Z", "author": {"login": "JaideepPalit"}, "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/couchdb/lucene/LuceneAwareDatabaseConnector.java", "diffHunk": "@@ -149,18 +149,33 @@ private LuceneResult callLuceneDirectly(LuceneSearchView function, String queryS\n         if (resultLimit > 0) {\n             queryURI.param(\"limit\", resultLimit);\n         }\n+        if (dbNameForLuceneSearch.equals(DatabaseSettings.COUCH_DB_USERS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc0NDEwMg=="}, "originalCommit": {"oid": "93a053810cb6a969854e74a9d8956b542bf77486"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjUwNDcyOnYy", "diffSide": "RIGHT", "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/couchdb/lucene/LuceneAwareDatabaseConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNDo0ODo1MVrOHX02lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjoyODozN1rOHX2mYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc0NTIzNg==", "bodyText": "Indentation may be like } else {. same in line number 175", "url": "https://github.com/eclipse/sw360/pull/994#discussion_r494745236", "createdAt": "2020-09-25T04:48:51Z", "author": {"login": "smrutis1"}, "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/couchdb/lucene/LuceneAwareDatabaseConnector.java", "diffHunk": "@@ -149,18 +149,33 @@ private LuceneResult callLuceneDirectly(LuceneSearchView function, String queryS\n         if (resultLimit > 0) {\n             queryURI.param(\"limit\", resultLimit);\n         }\n+        if (dbNameForLuceneSearch.equals(DatabaseSettings.COUCH_DB_USERS)) {\n+            queryURI.param(\"stale\", \"ok\");\n+        }\n         queryURI.param(\"q\", queryString.toString());\n         URL luceneResourceUrl = new URL(DatabaseSettings.COUCH_DB_LUCENE_URL + queryURI.toString());\n+        ObjectMapper objectMapper = new EktorpLuceneObjectMapperFactory().createObjectMapper();\n         HttpURLConnection connection = null;\n         try {\n-            connection = (HttpURLConnection) luceneResourceUrl.openConnection();\n-            connection.setRequestMethod(\"GET\");\n-            connection.connect();\n+            connection = makeLuceneRequest(luceneResourceUrl);\n             int responseCode = connection.getResponseCode();\n             if (responseCode == 200) {\n-                ObjectMapper objectMapper = new EktorpLuceneObjectMapperFactory().createObjectMapper();\n                 return objectMapper.readValue(connection.getInputStream(), LuceneResult.class);\n             }\n+            else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a053810cb6a969854e74a9d8956b542bf77486"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3Mzg1OA==", "bodyText": "Changes done.", "url": "https://github.com/eclipse/sw360/pull/994#discussion_r494773858", "createdAt": "2020-09-25T06:28:37Z", "author": {"login": "JaideepPalit"}, "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/couchdb/lucene/LuceneAwareDatabaseConnector.java", "diffHunk": "@@ -149,18 +149,33 @@ private LuceneResult callLuceneDirectly(LuceneSearchView function, String queryS\n         if (resultLimit > 0) {\n             queryURI.param(\"limit\", resultLimit);\n         }\n+        if (dbNameForLuceneSearch.equals(DatabaseSettings.COUCH_DB_USERS)) {\n+            queryURI.param(\"stale\", \"ok\");\n+        }\n         queryURI.param(\"q\", queryString.toString());\n         URL luceneResourceUrl = new URL(DatabaseSettings.COUCH_DB_LUCENE_URL + queryURI.toString());\n+        ObjectMapper objectMapper = new EktorpLuceneObjectMapperFactory().createObjectMapper();\n         HttpURLConnection connection = null;\n         try {\n-            connection = (HttpURLConnection) luceneResourceUrl.openConnection();\n-            connection.setRequestMethod(\"GET\");\n-            connection.connect();\n+            connection = makeLuceneRequest(luceneResourceUrl);\n             int responseCode = connection.getResponseCode();\n             if (responseCode == 200) {\n-                ObjectMapper objectMapper = new EktorpLuceneObjectMapperFactory().createObjectMapper();\n                 return objectMapper.readValue(connection.getInputStream(), LuceneResult.class);\n             }\n+            else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc0NTIzNg=="}, "originalCommit": {"oid": "93a053810cb6a969854e74a9d8956b542bf77486"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1186, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}