{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDg2Mzg2", "number": 849, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjo1MzoxNFrOD-FMNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjo1MzoxNFrOD-FMNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDIzMzQ5OnYy", "diffSide": "RIGHT", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjo1MzoxNFrOGX9l6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjo1MzoxNFrOGX9l6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3OTU2Mw==", "bodyText": "If possible, consider using StringBuilder for concatenation.", "url": "https://github.com/eclipse/sw360/pull/849#discussion_r427779563", "createdAt": "2020-05-20T06:53:14Z", "author": {"login": "akapti"}, "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java", "diffHunk": "@@ -804,14 +806,24 @@ private void transferReleases(Set<String> releaseIds, Component mergeTarget, Com\n         releaseIds.forEach(mergeTarget::addToReleaseIds);\n     }\n \n-    private void updateReleasesAfterMerge(Set<String> releaseIds, Component mergeSelection, Component mergeTarget, User sessionUser) throws SW360Exception {\n+    private void updateReleasesAfterMerge(Set<String> targetComponentReleaseIds, Set<String> srcComponentReleaseIds,\n+            Component mergeSelection, Component mergeTarget, User sessionUser) throws SW360Exception {\n         // Change release name if appropriate\n-        List<Release> releases = getReleasesForClearingStateSummary(releaseIds);\n+        List<Release> targetComponentReleases = getReleasesForClearingStateSummary(targetComponentReleaseIds);\n+        List<Release> srcComponentReleases = getReleasesForClearingStateSummary(srcComponentReleaseIds);\n+        Set<String> targetComponentReleaseVersions = targetComponentReleases.stream().map(Release::getVersion)\n+                .collect(Collectors.toSet());\n+        Set<Release> releases = Stream.concat(targetComponentReleases.stream(), srcComponentReleases.stream())\n+                .collect(Collectors.toSet());\n+\n         List<Release> releasesToUpdate = releases.stream()\n             .filter( r -> {\n                 return !(r.getComponentId().equals(mergeTarget.getId()) && r.getName().equals(mergeSelection.getName()));\n             }).map(r -> {\n                 Release releaseBefore = r.deepCopy();\n+                if (srcComponentReleases.contains(r) && targetComponentReleaseVersions.contains(r.getVersion())) {\n+                        r.setVersion(r.getVersion() + \"_conflict (\" + r.getId() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f5c9d4d67396f35c597f0908c6885362e24a07"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1260, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}