{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTE5NjMx", "number": 947, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyODoxNVrOEY6B1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzozODowMFrOEY7n-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTUyMDIxOnYy", "diffSide": "RIGHT", "path": "frontend/sw360-portlet/src/main/resources/META-INF/resources/html/projects/includes/projects/administrationEdit.jspf", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyODoxNVrOHBbMWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyODoxNVrOHBbMWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1NjE1Mg==", "bodyText": "if (!textarea) make more sense here.\nsame applies to... if (!$(textarea)[0])", "url": "https://github.com/eclipse/sw360/pull/947#discussion_r471256152", "createdAt": "2020-08-17T06:28:15Z", "author": {"login": "akapti"}, "path": "frontend/sw360-portlet/src/main/resources/META-INF/resources/html/projects/includes/projects/administrationEdit.jspf", "diffHunk": "@@ -289,7 +289,9 @@\n         $('.datepicker').datepicker({changeMonth:true,changeYear:true,dateFormat: \"yy-mm-dd\"});\n \n         function setDefaultTextAndResize(textarea) {\n+            if(textarea == null||textarea == undefined) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75724090b28260db9a68f7eaae1610235c6aefdd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTUyMzAwOnYy", "diffSide": "RIGHT", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyOTo0MFrOHBbOAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyOTo0MFrOHBbOAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1NjU3Nw==", "bodyText": "fix the indentation.", "url": "https://github.com/eclipse/sw360/pull/947#discussion_r471256577", "createdAt": "2020-08-17T06:29:40Z", "author": {"login": "akapti"}, "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "diffHunk": "@@ -404,6 +406,51 @@ public RequestStatus updateProject(Project project, User user) throws SW360Excep\n         }\n     }\n \n+    private void setRequestedDateAndTrimComment(Project project, Project actual, User user) {\n+        Set<String> actualReleaseIds = null;\n+        if (Objects.nonNull(actual)&&Objects.nonNull(actual.getReleaseIdToUsage())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75724090b28260db9a68f7eaae1610235c6aefdd"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTU3MjEzOnYy", "diffSide": "RIGHT", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjo1MDoxNlrOHBbqrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjo1MDoxNlrOHBbqrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2MzkxNg==", "bodyText": "please get this map project.getReleaseIdToUsage() once and store in variable, rather than fetching it each time in line 416, 417, 424, 433 and 445.", "url": "https://github.com/eclipse/sw360/pull/947#discussion_r471263916", "createdAt": "2020-08-17T06:50:16Z", "author": {"login": "akapti"}, "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "diffHunk": "@@ -404,6 +406,51 @@ public RequestStatus updateProject(Project project, User user) throws SW360Excep\n         }\n     }\n \n+    private void setRequestedDateAndTrimComment(Project project, Project actual, User user) {\n+        Set<String> actualReleaseIds = null;\n+        if (Objects.nonNull(actual)&&Objects.nonNull(actual.getReleaseIdToUsage())) {\n+            actualReleaseIds = CommonUtils.nullToEmptySet(actual.getReleaseIdToUsage().keySet());\n+        }\n+        final Set<String> actualReleaseIdsFinal = CommonUtils.nullToEmptySet(actualReleaseIds);\n+        Set<String> updatedReleaseIds = null;\n+        if (Objects.nonNull(project.getReleaseIdToUsage())) {\n+            updatedReleaseIds = CommonUtils.nullToEmptySet(project.getReleaseIdToUsage().keySet());\n+        } else {\n+            updatedReleaseIds = new HashSet<>();\n+        }\n+\n+        updatedReleaseIds.stream().filter(updatedReleaseId -> !actualReleaseIdsFinal.contains(updatedReleaseId))\n+                .forEach(updatedReleaseId -> {\n+                    ProjectReleaseRelationship projectReleaseRelationship = project.getReleaseIdToUsage()\n+                            .get(updatedReleaseId);\n+                    if (Objects.nonNull(projectReleaseRelationship))\n+                        projectReleaseRelationship.setCreatedOn(SW360Utils.getCreatedOn());\n+                    projectReleaseRelationship.setCreatedBy(user.getEmail());\n+                });\n+\n+        updatedReleaseIds.stream().filter(commonReleaseId -> actualReleaseIdsFinal.contains(commonReleaseId))\n+                .forEach(commonReleaseId -> {\n+                    ProjectReleaseRelationship projectReleaseRelationship = project.getReleaseIdToUsage()\n+                            .get(commonReleaseId);\n+                    ProjectReleaseRelationship actualProjectReleaseRelationship = actual.getReleaseIdToUsage()\n+                            .get(commonReleaseId);\n+                    if (Objects.nonNull(projectReleaseRelationship)\n+                            && Objects.nonNull(actualProjectReleaseRelationship))\n+                        projectReleaseRelationship\n+                                .setCreatedOn(actualProjectReleaseRelationship.getCreatedOn());\n+                    projectReleaseRelationship\n+                    .setCreatedBy(actualProjectReleaseRelationship.getCreatedBy());\n+                });\n+\n+        if (Objects.nonNull(project.getReleaseIdToUsage())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75724090b28260db9a68f7eaae1610235c6aefdd"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTU5MzA3OnYy", "diffSide": "RIGHT", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjo1Nzo0NlrOHBb2vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjo1Nzo0NlrOHBb2vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NzAwNg==", "bodyText": "No need to define a variable, we can directly pass empty string in method call (line 1428).", "url": "https://github.com/eclipse/sw360/pull/947#discussion_r471267006", "createdAt": "2020-08-17T06:57:46Z", "author": {"login": "akapti"}, "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "diffHunk": "@@ -1370,13 +1418,14 @@ private void flattenlinkedReleaseOfRelease(Map<String, ReleaseRelationship> rele\n         releaseIdToRelationship.entrySet().stream().forEach(rl -> wrapTException(() -> {\n             String relation = ThriftEnumUtils.enumToString(rl.getValue());\n             String projectMailLineState = \"\";\n+            String comment = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75724090b28260db9a68f7eaae1610235c6aefdd"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTc4MTY5OnYy", "diffSide": "RIGHT", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzozODowMFrOHBdpYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzozODowMFrOHBdpYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5NjM1NQ==", "bodyText": "please use braces as there are more than one statement inside if clause.\nSame applies to if clause in line 437.", "url": "https://github.com/eclipse/sw360/pull/947#discussion_r471296355", "createdAt": "2020-08-17T07:38:00Z", "author": {"login": "akapti"}, "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "diffHunk": "@@ -404,6 +406,51 @@ public RequestStatus updateProject(Project project, User user) throws SW360Excep\n         }\n     }\n \n+    private void setRequestedDateAndTrimComment(Project project, Project actual, User user) {\n+        Set<String> actualReleaseIds = null;\n+        if (Objects.nonNull(actual)&&Objects.nonNull(actual.getReleaseIdToUsage())) {\n+            actualReleaseIds = CommonUtils.nullToEmptySet(actual.getReleaseIdToUsage().keySet());\n+        }\n+        final Set<String> actualReleaseIdsFinal = CommonUtils.nullToEmptySet(actualReleaseIds);\n+        Set<String> updatedReleaseIds = null;\n+        if (Objects.nonNull(project.getReleaseIdToUsage())) {\n+            updatedReleaseIds = CommonUtils.nullToEmptySet(project.getReleaseIdToUsage().keySet());\n+        } else {\n+            updatedReleaseIds = new HashSet<>();\n+        }\n+\n+        updatedReleaseIds.stream().filter(updatedReleaseId -> !actualReleaseIdsFinal.contains(updatedReleaseId))\n+                .forEach(updatedReleaseId -> {\n+                    ProjectReleaseRelationship projectReleaseRelationship = project.getReleaseIdToUsage()\n+                            .get(updatedReleaseId);\n+                    if (Objects.nonNull(projectReleaseRelationship))\n+                        projectReleaseRelationship.setCreatedOn(SW360Utils.getCreatedOn());\n+                    projectReleaseRelationship.setCreatedBy(user.getEmail());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75724090b28260db9a68f7eaae1610235c6aefdd"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1165, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}