{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTU5MzY0", "number": 2169, "title": "Upgrade DataStax cassandra driver to 4.9.0 [full build]", "bodyText": "Mostly based on #1733 .\nThis PR adds 2 DataStax drivers into janusgraph-cql:\n\nDataStax 4.9.0 is the main driver which is now used.\nDataStax 3.10.2 is the driver which is now used for Hadoop. CqlBinaryRecordReader which is used for Hadoop jobs is still using DataStax Cassandra Driver 3.x.y.\n\nNotice, even so this PR adds 2 different versions of DataStax Cassandra Driver in the same module, those drivers are binary incompatible and share different classpath, thus they don't conflict with each other and can be used simultaneously.\nLater we can move CQL Hadoop formats from janusgraph-cql to a new module like janusgraph-hadoop-cql or something like that. It will allow to include only 4.x version of the driver into classpath for users who use janusgraph-cql but don't use janusgraph-hadoop-cql.\nTests passed:\n\nCustom integration tests. Storage backend: ScyllaDB 4.2.0 (cql driver). Index backend: ElasticSearch 7.6.0 (es driver).\nDistribution build. janusgraph.sh starts Cassandra and ElasticSearch. janusgraph-server successfully connects to storage backends via cql driver.\njanusgraph-full distribution successfully logs different metrics via JMX (#1087 (comment)), console, slf4j.\nEmbedded janusgraph successfully logs different metrics via JMX, console, slf4j. Also, tried to log new CQL Session Level and Node Level metrics via JMX exporter. New CQL Session Level and Node Level metrics to enable are provided via storage.cql.metrics.session-enabled and storage.cql.metrics.node-enabled respectively.\nAll TinkerPop tests passed. Executed with mvn clean install -Dtest.skip.tp=false -DskipTests=true.\nTravisCI [full build] passed.\n\nCompared performance of master branch (f5001e6) and this PR (65cad01). The performance is fairly the same. I tried several times to execute custom integration tests which showed that the PR branch in most cases runs about 1%-1.5% faster than master branch. I tried to execute CQL TP tests 2 times for each branch which showed again that this PR runs 1%-1.5% faster (in average 4:20 h for this PR and 4:25 h for master branch). The performance improvement most likely achieved because of a slightly more optimal CQLPagingIterator implementation and most likely not directly related to driver upgrade. Overall I would say that the performance is the same but I didn't get enough statistics for real comparison. The custom integration tests were executed on  ScyllaDB 4.2.0 on the same machine with JanusGraph in embedded mode with no replication.\nChangelog: https://docs.datastax.com/en/developer/java-driver/4.9/changelog/\nFixes #1510\nPotentially solves #2254 for master branch (0.6.0 release)\nSigned-off-by: Oleksandr Porunov alexandr.porunov@gmail.com\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-07-14T15:38:28Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2169", "merged": true, "mergeCommit": {"oid": "b26794c014e3657805f4f95f0e4edf140c7879ae"}, "closed": true, "closedAt": "2020-11-28T10:32:37Z", "author": {"login": "porunov"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc042rWgBqjM1NDUwMTkyOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgRCgSAFqTUzOTIyMDg2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e67ec89432fef3c9d5cc96ad3b243bcf410e73f", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/1e67ec89432fef3c9d5cc96ad3b243bcf410e73f", "committedDate": "2020-07-14T15:30:36Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "65274ad7fffe5b0acd2d7c12cf7ffe23c7e01376", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/65274ad7fffe5b0acd2d7c12cf7ffe23c7e01376", "committedDate": "2020-07-14T16:44:19Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65274ad7fffe5b0acd2d7c12cf7ffe23c7e01376", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/65274ad7fffe5b0acd2d7c12cf7ffe23c7e01376", "committedDate": "2020-07-14T16:44:19Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "db52ea36e63016f9ce44154bd5a3f838533fa83a", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/db52ea36e63016f9ce44154bd5a3f838533fa83a", "committedDate": "2020-07-20T08:00:51Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db52ea36e63016f9ce44154bd5a3f838533fa83a", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/db52ea36e63016f9ce44154bd5a3f838533fa83a", "committedDate": "2020-07-20T08:00:51Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "36741358b03c6b9135a5c200aa1aa35260672be5", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/36741358b03c6b9135a5c200aa1aa35260672be5", "committedDate": "2020-07-20T08:26:48Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36741358b03c6b9135a5c200aa1aa35260672be5", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/36741358b03c6b9135a5c200aa1aa35260672be5", "committedDate": "2020-07-20T08:26:48Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "8bdfeb4543563af4914ad973142b44ed4e42fd11", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8bdfeb4543563af4914ad973142b44ed4e42fd11", "committedDate": "2020-07-24T08:50:05Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzgzNTAw", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-456383500", "createdAt": "2020-07-28T07:48:06Z", "commit": {"oid": "8bdfeb4543563af4914ad973142b44ed4e42fd11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0ODowNlrOG4At7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0ODowNlrOG4At7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4NTE5OA==", "bodyText": "@porunov Looks like isExhausted() was removed in driver 4.x but it wasn't replaced by isFullyFetched() as that also existed in version 3.x. From looking at the implementation of currentResultSet.one() I assume that here we should be writing:\n            return currentResultSet.iterator().hasNext();\nThat seems to get a few more tests passing.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r461385198", "createdAt": "2020-07-28T07:48:06Z", "author": {"login": "smcquillan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLKeyColumnValueStore.java", "diffHunk": "@@ -450,7 +473,7 @@ public CQLPagingIterator(final int pageSize, Supplier<Statement> statementSuppli\n \n         @Override\n         public boolean hasNext() {\n-            return !currentResultSet.isExhausted();\n+            return !currentResultSet.isFullyFetched();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bdfeb4543563af4914ad973142b44ed4e42fd11"}, "originalPosition": 462}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bdfeb4543563af4914ad973142b44ed4e42fd11", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8bdfeb4543563af4914ad973142b44ed4e42fd11", "committedDate": "2020-07-24T08:50:05Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "39d0a674df18186835aeae295dc05c401a8b1618", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/39d0a674df18186835aeae295dc05c401a8b1618", "committedDate": "2020-07-28T08:40:57Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NDE1MDEx", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-457415011", "createdAt": "2020-07-29T11:01:49Z", "commit": {"oid": "39d0a674df18186835aeae295dc05c401a8b1618"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMTowMTo0OVrOG4za9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMTowMTo0OVrOG4za9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxNTkyNA==", "bodyText": "@porunov Think I finally now understand the reason why some of the tests are failing with the Mockito exception\norg.mockito.exceptions.misusing.UnnecessaryStubbingException\n\nAnd it's because the session member variable was made final and this prevents the @InjectMocks annotation in CQLStoreTest from injecting the mock session instance which the tests are expecting. When I remove the final qualifier from the session the tests pass for me.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r462215924", "createdAt": "2020-07-29T11:01:49Z", "author": {"login": "smcquillan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLStoreManager.java", "diffHunk": "@@ -148,9 +82,7 @@\n     final ExecutorService executorService;\n \n     @Resource\n-    private Cluster cluster;\n-    @Resource\n-    private Session session;\n+    private final CqlSession session;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d0a674df18186835aeae295dc05c401a8b1618"}, "originalPosition": 165}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39d0a674df18186835aeae295dc05c401a8b1618", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/39d0a674df18186835aeae295dc05c401a8b1618", "committedDate": "2020-07-28T08:40:57Z", "message": "Upgrade DataStax cassandra driver to 4.7.2 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "a42af456a8fcb8303a17a1856a2035f4a812adfd", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a42af456a8fcb8303a17a1856a2035f4a812adfd", "committedDate": "2020-07-29T11:18:11Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a42af456a8fcb8303a17a1856a2035f4a812adfd", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a42af456a8fcb8303a17a1856a2035f4a812adfd", "committedDate": "2020-07-29T11:18:11Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "a623a674c44ee28dd4aaad0769b01e2fe83f8aec", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a623a674c44ee28dd4aaad0769b01e2fe83f8aec", "committedDate": "2020-07-29T11:41:56Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjM5ODc0", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-458239874", "createdAt": "2020-07-30T09:32:13Z", "commit": {"oid": "a623a674c44ee28dd4aaad0769b01e2fe83f8aec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozMjoxM1rOG5bgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozMjoxM1rOG5bgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3MjU4Mw==", "bodyText": "@porunov Build is  failing on cassandra3-murmur-ssl with:\njava.lang.IllegalArgumentException: Invalid configuration value for [root.storage.cql.ssl.keystore.location]:\n\nThis is because we're setting the key store options when client auth has not been enabled. So these options need moved out to something like:\n            if(configuration.get(SSL_CLIENT_AUTHENTICATION_ENABLED)) {\n            \tconfigLoaderBuilder.withString(DefaultDriverOption.SSL_KEYSTORE_PATH, configuration.get(SSL_KEYSTORE_LOCATION))\n                                   .withString(DefaultDriverOption.SSL_KEYSTORE_PASSWORD, configuration.get(SSL_KEYSTORE_KEY_PASSWORD));\n            }", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r462872583", "createdAt": "2020-07-30T09:32:13Z", "author": {"login": "smcquillan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLStoreManager.java", "diffHunk": "@@ -227,114 +159,71 @@ public CQLStoreManager(final Configuration configuration) throws BackendExceptio\n         this.openStores = new ConcurrentHashMap<>();\n     }\n \n-    private void initializeJmxMetrics() {\n-        final Configuration configuration = getStorageConfig();\n-        if (configuration.get(METRICS_JMX_ENABLED) && configuration.get(BASIC_METRICS)) {\n-            MetricManager.INSTANCE.getRegistry().registerAll(cluster.getMetrics().getRegistry());\n-        }\n-    }\n-\n-    Cluster initializeCluster() throws PermanentBackendException {\n+    CqlSession initializeSession() throws PermanentBackendException {\n         final Configuration configuration = getStorageConfig();\n \n         final List<InetSocketAddress> contactPoints;\n         try {\n             contactPoints = Array.of(this.hostnames)\n-                    .map(hostName -> hostName.split(\":\"))\n-                    .map(array -> Tuple.of(array[0], array.length == 2 ? Integer.parseInt(array[1]) : this.port))\n-                    .map(tuple -> new InetSocketAddress(tuple._1, tuple._2))\n-                    .toJavaList();\n+                .map(hostName -> hostName.split(\":\"))\n+                .map(array -> Tuple.of(array[0], array.length == 2 ? Integer.parseInt(array[1]) : this.port))\n+                .map(tuple -> new InetSocketAddress(tuple._1, tuple._2))\n+                .toJavaList();\n         } catch (SecurityException | ArrayIndexOutOfBoundsException | NumberFormatException e) {\n             throw new PermanentBackendException(\"Error initialising cluster contact points\", e);\n         }\n \n-        final Builder builder = Cluster.builder()\n-            .withoutJMXReporting()\n-            .addContactPointsWithPorts(contactPoints)\n-            .withClusterName(configuration.get(CLUSTER_NAME));\n+        final CqlSessionBuilder builder = CqlSession.builder()\n+            .addContactPoints(contactPoints)\n+            .withLocalDatacenter(configuration.get(LOCAL_DATACENTER));\n+\n+        ProgrammaticDriverConfigLoaderBuilder configLoaderBuilder = DriverConfigLoader.programmaticBuilder();\n+        configLoaderBuilder.withString(DefaultDriverOption.SESSION_NAME, configuration.get(SESSION_NAME));\n \n         if (configuration.get(PROTOCOL_VERSION) != 0) {\n-            builder.withProtocolVersion(ProtocolVersion.fromInt(configuration.get(PROTOCOL_VERSION)));\n+            configLoaderBuilder.withInt(DefaultDriverOption.PROTOCOL_VERSION, configuration.get(PROTOCOL_VERSION));\n         }\n \n         if (configuration.has(AUTH_USERNAME) && configuration.has(AUTH_PASSWORD)) {\n-            builder.withCredentials(configuration.get(AUTH_USERNAME), configuration.get(AUTH_PASSWORD));\n-        }\n-\n-        if (configuration.has(LOCAL_DATACENTER)) {\n-            builder.withLoadBalancingPolicy(new TokenAwarePolicy(DCAwareRoundRobinPolicy.builder()\n-                    .withLocalDc(configuration.get(LOCAL_DATACENTER))\n-                    .build()));\n+            configLoaderBuilder\n+                .withClass(DefaultDriverOption.AUTH_PROVIDER_CLASS, PlainTextAuthProvider.class)\n+                .withString(DefaultDriverOption.AUTH_PROVIDER_USER_NAME, configuration.get(AUTH_USERNAME))\n+                .withString(DefaultDriverOption.AUTH_PROVIDER_PASSWORD, configuration.get(AUTH_PASSWORD));\n         }\n \n         if (configuration.get(SSL_ENABLED)) {\n-            try {\n-                KeyManager[] keyManagers = null;\n-                if(configuration.get(SSL_CLIENT_AUTHENTICATION_ENABLED)) {\n-                    try (final FileInputStream keyStoreStream = new FileInputStream(configuration.get(SSL_KEYSTORE_LOCATION))) {\n-                        final KeyStore keystore = KeyStore.getInstance(\"jks\");\n-                        keystore.load(keyStoreStream, configuration.get(SSL_KEYSTORE_STORE_PASSWORD).toCharArray());\n-                        final KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n-                        keyManagerFactory.init(keystore, configuration.get(SSL_KEYSTORE_KEY_PASSWORD).toCharArray());\n-                        keyManagers = keyManagerFactory.getKeyManagers();\n-                    }\n-                }\n-                final TrustManager[] trustManagers;\n-                try (final FileInputStream keyStoreStream = new FileInputStream(configuration.get(SSL_TRUSTSTORE_LOCATION))) {\n-                    final KeyStore keystore = KeyStore.getInstance(\"jks\");\n-                    keystore.load(keyStoreStream, configuration.get(SSL_TRUSTSTORE_PASSWORD).toCharArray());\n-                    final TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n-                    trustManagerFactory.init(keystore);\n-                    trustManagers = trustManagerFactory.getTrustManagers();\n-                }\n-\n-                final SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n-                sslContext.init(keyManagers, trustManagers, null);\n-\n-                final JdkSSLOptions sslOptions = JdkSSLOptions.builder()\n-                        .withSSLContext(sslContext)\n-                        .build();\n-                builder.withSSL(sslOptions);\n-\n-            } catch (UnrecoverableKeyException | NoSuchAlgorithmException | CertificateException | IOException | KeyStoreException | KeyManagementException e) {\n-                throw new PermanentBackendException(\"Error initialising SSL connection properties\", e);\n-            }\n+            configLoaderBuilder\n+                .withClass(DefaultDriverOption.SSL_ENGINE_FACTORY_CLASS, DefaultSslEngineFactory.class)\n+                .withString(DefaultDriverOption.SSL_KEYSTORE_PATH, configuration.get(SSL_KEYSTORE_LOCATION))\n+                .withString(DefaultDriverOption.SSL_KEYSTORE_PASSWORD, configuration.get(SSL_KEYSTORE_KEY_PASSWORD))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a623a674c44ee28dd4aaad0769b01e2fe83f8aec"}, "originalPosition": 285}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a623a674c44ee28dd4aaad0769b01e2fe83f8aec", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a623a674c44ee28dd4aaad0769b01e2fe83f8aec", "committedDate": "2020-07-29T11:41:56Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "2ee05636dcab914f041256cf8423ff9e1c671978", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/2ee05636dcab914f041256cf8423ff9e1c671978", "committedDate": "2020-07-31T09:06:29Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ee05636dcab914f041256cf8423ff9e1c671978", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/2ee05636dcab914f041256cf8423ff9e1c671978", "committedDate": "2020-07-31T09:06:29Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "98d47581855030cfe7a23ee69f6191f7c19c6117", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/98d47581855030cfe7a23ee69f6191f7c19c6117", "committedDate": "2020-08-05T15:14:22Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98d47581855030cfe7a23ee69f6191f7c19c6117", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/98d47581855030cfe7a23ee69f6191f7c19c6117", "committedDate": "2020-08-05T15:14:22Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "46cb514ca0f73681499705aa5f7e5a8ffefcbf17", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/46cb514ca0f73681499705aa5f7e5a8ffefcbf17", "committedDate": "2020-08-06T16:04:51Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46cb514ca0f73681499705aa5f7e5a8ffefcbf17", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/46cb514ca0f73681499705aa5f7e5a8ffefcbf17", "committedDate": "2020-08-06T16:04:51Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "86587a3873b6554b18650d1e54ca72db7e53d0b5", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/86587a3873b6554b18650d1e54ca72db7e53d0b5", "committedDate": "2020-08-06T16:06:46Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86587a3873b6554b18650d1e54ca72db7e53d0b5", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/86587a3873b6554b18650d1e54ca72db7e53d0b5", "committedDate": "2020-08-06T16:06:46Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "25430508a29441bb84e847efad06aefee3c5432a", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/25430508a29441bb84e847efad06aefee3c5432a", "committedDate": "2020-08-06T18:10:23Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25430508a29441bb84e847efad06aefee3c5432a", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/25430508a29441bb84e847efad06aefee3c5432a", "committedDate": "2020-08-06T18:10:23Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "74fec9e0d6d3c151b9f61a0a96541ccb6c9f8244", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/74fec9e0d6d3c151b9f61a0a96541ccb6c9f8244", "committedDate": "2020-08-06T18:32:27Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74fec9e0d6d3c151b9f61a0a96541ccb6c9f8244", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/74fec9e0d6d3c151b9f61a0a96541ccb6c9f8244", "committedDate": "2020-08-06T18:32:27Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "7637103b87ec20f3b7737a65aab7a6434ab0155c", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/7637103b87ec20f3b7737a65aab7a6434ab0155c", "committedDate": "2020-08-06T20:41:38Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7637103b87ec20f3b7737a65aab7a6434ab0155c", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/7637103b87ec20f3b7737a65aab7a6434ab0155c", "committedDate": "2020-08-06T20:41:38Z", "message": "Upgrade DataStax cassandra driver to 4.8.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "2f16cb766b069031351ff09068303c14fe42af62", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/2f16cb766b069031351ff09068303c14fe42af62", "committedDate": "2020-09-11T08:45:50Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f16cb766b069031351ff09068303c14fe42af62", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/2f16cb766b069031351ff09068303c14fe42af62", "committedDate": "2020-09-11T08:45:50Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "6b08b5303b871b897ef535d2ca6813ac62149b6b", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/6b08b5303b871b897ef535d2ca6813ac62149b6b", "committedDate": "2020-09-11T09:49:41Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 and TinkerPop to 3.4.8 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b08b5303b871b897ef535d2ca6813ac62149b6b", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/6b08b5303b871b897ef535d2ca6813ac62149b6b", "committedDate": "2020-09-11T09:49:41Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 and TinkerPop to 3.4.8 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "e9b3ae6bdc4deac34dc21426126627dd09805777", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e9b3ae6bdc4deac34dc21426126627dd09805777", "committedDate": "2020-09-11T11:14:34Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9b3ae6bdc4deac34dc21426126627dd09805777", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e9b3ae6bdc4deac34dc21426126627dd09805777", "committedDate": "2020-09-11T11:14:34Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "d9d3b24b150596496ba523408b9e3aedbd5a1815", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d9d3b24b150596496ba523408b9e3aedbd5a1815", "committedDate": "2020-09-12T09:02:00Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9d3b24b150596496ba523408b9e3aedbd5a1815", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d9d3b24b150596496ba523408b9e3aedbd5a1815", "committedDate": "2020-09-12T09:02:00Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "9bce257566c57307cbb9dbed9b73235fe2c15d41", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9bce257566c57307cbb9dbed9b73235fe2c15d41", "committedDate": "2020-11-13T20:34:12Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bce257566c57307cbb9dbed9b73235fe2c15d41", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9bce257566c57307cbb9dbed9b73235fe2c15d41", "committedDate": "2020-11-13T20:34:12Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "20cae066cd9c8bb31e7e4cc5a086bcf9b9dd6e5e", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/20cae066cd9c8bb31e7e4cc5a086bcf9b9dd6e5e", "committedDate": "2020-11-14T00:10:48Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20cae066cd9c8bb31e7e4cc5a086bcf9b9dd6e5e", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/20cae066cd9c8bb31e7e4cc5a086bcf9b9dd6e5e", "committedDate": "2020-11-14T00:10:48Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "ff9a0e612a5d13682a91e543acdff05688d0f43c", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ff9a0e612a5d13682a91e543acdff05688d0f43c", "committedDate": "2020-11-14T00:24:51Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff9a0e612a5d13682a91e543acdff05688d0f43c", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ff9a0e612a5d13682a91e543acdff05688d0f43c", "committedDate": "2020-11-14T00:24:51Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "ea4abfd4b67a99b8adcb2ce3e5fdb5f2289d65dd", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ea4abfd4b67a99b8adcb2ce3e5fdb5f2289d65dd", "committedDate": "2020-11-14T00:32:04Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea4abfd4b67a99b8adcb2ce3e5fdb5f2289d65dd", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ea4abfd4b67a99b8adcb2ce3e5fdb5f2289d65dd", "committedDate": "2020-11-14T00:32:04Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "66dede423113a5b7ad2d49605bc083443e4472a6", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/66dede423113a5b7ad2d49605bc083443e4472a6", "committedDate": "2020-11-14T15:20:18Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66dede423113a5b7ad2d49605bc083443e4472a6", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/66dede423113a5b7ad2d49605bc083443e4472a6", "committedDate": "2020-11-14T15:20:18Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "709322ea55075d3e174954222f4ae8056eaa7d00", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/709322ea55075d3e174954222f4ae8056eaa7d00", "committedDate": "2020-11-14T16:14:33Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "709322ea55075d3e174954222f4ae8056eaa7d00", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/709322ea55075d3e174954222f4ae8056eaa7d00", "committedDate": "2020-11-14T16:14:33Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/672bfb0c37039deefedeb7522afc761803b00e81", "committedDate": "2020-11-14T16:17:43Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNDY2MDQy", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-531466042", "createdAt": "2020-11-16T16:04:27Z", "commit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowNDoyOFrOH0FsvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowNDoyOFrOH0FsvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4MTM3Mg==", "bodyText": "Do you know when this line will be executed? Codecov shows this is not covered. By testing locally, I created a graph with a million vertices and did a full scan, but still, this line was not executed.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r524381372", "createdAt": "2020-11-16T16:04:28Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLKeyColumnValueStore.java", "diffHunk": "@@ -434,43 +444,43 @@ public KeyIterator getKeys(final SliceQuery query, final StoreTransaction txh) t\n     private class CQLPagingIterator implements Iterator<Row> {\n \n         private ResultSet currentResultSet;\n+        private java.util.Iterator<Row> currentPageIterator;\n \n-        private int index;\n-        private int paginatedResultSize;\n-        private final Supplier<Statement> statementSupplier;\n+        private final Supplier<BatchableStatement<BoundStatement>> statementSupplier;\n \n-        private byte[] lastPagingState = null;\n-\n-        public CQLPagingIterator(final int pageSize, Supplier<Statement> statementSupplier) {\n-            this.index = 0;\n-            this.paginatedResultSize = pageSize;\n+        public CQLPagingIterator(Supplier<BatchableStatement<BoundStatement>> statementSupplier) {\n             this.statementSupplier = statementSupplier;\n-            this.currentResultSet = getResultSet();\n+            updateResultSet();\n         }\n \n         @Override\n         public boolean hasNext() {\n-            return !currentResultSet.isExhausted();\n+            if(currentPageIterator.hasNext()){\n+                return true;\n+            }\n+            if(currentResultSet.isFullyFetched()){\n+                return false;\n+            }\n+            updateResultSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81"}, "originalPosition": 505}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTUzNDIx", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-533153421", "createdAt": "2020-11-18T07:08:40Z", "commit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNzowODo0MFrOH1fu8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjowMzo1N1rOH11JOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1NjQ5Nw==", "bodyText": "The change log says storage.cql.local-datacenter is mandatory now, but config doc still suggests it can be \"unset or set to whitespace\".", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r525856497", "createdAt": "2020-11-18T07:08:40Z", "author": {"login": "li-boxuan"}, "path": "docs/basics/janusgraph-cfg.md", "diffHunk": "@@ -371,29 +371,58 @@ CQL storage backend options\n | ---- | ---- | ---- | ---- | ---- |\n | storage.cql.atomic-batch-mutate | True to use Cassandra atomic batch mutation, false to use non-atomic batches | Boolean | false | MASKABLE |\n | storage.cql.batch-statement-size | The number of statements in each batch | Integer | 20 | MASKABLE |\n-| storage.cql.cluster-name | Default name for the Cassandra cluster | String | JanusGraph Cluster | MASKABLE |\n | storage.cql.compaction-strategy-class | The compaction strategy to use for JanusGraph tables | String | (no default value) | FIXED |\n | storage.cql.compaction-strategy-options | Compaction strategy options.  This list is interpreted as a map.  It must have an even number of elements in [key,val,key,val,...] form. | String[] | (no default value) | FIXED |\n | storage.cql.compression | Whether the storage backend should use compression when storing the data | Boolean | true | FIXED |\n | storage.cql.compression-block-size | The size of the compression blocks in kilobytes | Integer | 64 | FIXED |\n | storage.cql.compression-type | The sstable_compression value JanusGraph uses when creating column families. This accepts any value allowed by Cassandra's sstable_compression option. Leave this unset to disable sstable_compression on JanusGraph-created CFs. | String | LZ4Compressor | MASKABLE |\n+| storage.cql.heartbeat-interval | The connection heartbeat interval in milliseconds. | Long | (no default value) | MASKABLE |\n+| storage.cql.heartbeat-timeout | How long the driver waits for the response (in milliseconds) to a heartbeat. | Long | (no default value) | MASKABLE |\n | storage.cql.keyspace | The name of JanusGraph's keyspace.  It will be created if it does not exist. | String | janusgraph | LOCAL |\n-| storage.cql.local-core-connections-per-host | The number of connections initially created and kept open to each host for local datacenter | Integer | 1 | FIXED |\n-| storage.cql.local-datacenter | The name of the local or closest Cassandra datacenter.  When set and not whitespace, this value will be passed into ConnectionPoolConfigurationImpl.setLocalDatacenter. When unset or set to whitespace, setLocalDatacenter will not be invoked. | String | (no default value) | MASKABLE |\n+| storage.cql.local-datacenter | The name of the local or closest Cassandra datacenter.  When set and not whitespace, this value will be passed into ConnectionPoolConfigurationImpl.setLocalDatacenter. When unset or set to whitespace, setLocalDatacenter will not be invoked. | String | datacenter1 | MASKABLE |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAyNDc2NQ==", "bodyText": "nitpick: Missing space after the period. If you search \"between 0 and 5\" you will see the other two places where space is missing between two sentences.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r526024765", "createdAt": "2020-11-18T11:46:47Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLConfigOptions.java", "diffHunk": "@@ -283,6 +284,175 @@\n              * the same Cassandra DC.\n              */\n             ConfigOption.Type.MASKABLE,\n-            String.class);\n-\n+            String.class,\n+        \"datacenter1\");\n+\n+    // Netty\n+\n+    ConfigNamespace NETTY = new ConfigNamespace(\n+        CQL_NS,\n+        \"netty\",\n+        \"Configuration options related to the Netty event loop groups used internally by the CQL driver.\");\n+\n+    ConfigOption<Integer> NETTY_IO_SIZE = new ConfigOption<>(\n+        NETTY,\n+        \"io-size\",\n+        \"The number of threads for the event loop group used for I/O operations \" +\n+            \"(reading and writing to Cassandra nodes). \" +\n+            \"If this is set to 0, the driver will use `Runtime.getRuntime().availableProcessors() * 2`.\",\n+        ConfigOption.Type.LOCAL,\n+        Integer.class,\n+        0);\n+\n+    ConfigOption<Integer> NETTY_ADMIN_SIZE = new ConfigOption<>(\n+        NETTY,\n+        \"admin-size\",\n+        \"The number of threads for the event loop group used for admin tasks not related to request I/O \" +\n+            \"(handle cluster events, refresh metadata, schedule reconnections, etc.). \" +\n+            \"If this is set to 0, the driver will use `Runtime.getRuntime().availableProcessors() * 2`.\",\n+        ConfigOption.Type.LOCAL,\n+        Integer.class,\n+        0);\n+\n+    ConfigOption<Long> NETTY_TIMER_TICK_DURATION = new ConfigOption<>(\n+        NETTY,\n+        \"timer-tick-duration\",\n+        \"The timer tick duration in milliseconds. This is how frequent the timer should wake up to check for timed-out tasks \" +\n+            \"or speculative executions. See DataStax Java Driver option \" +\n+            DefaultDriverOption.NETTY_TIMER_TICK_DURATION.getPath() + \" for more information.\",\n+        ConfigOption.Type.LOCAL,\n+        Long.class);\n+\n+    ConfigOption<Integer> NETTY_TIMER_TICKS_PER_WHEEL = new ConfigOption<>(\n+        NETTY,\n+        \"timer-ticks-per-wheel\",\n+        \"Number of ticks in a Timer wheel. See DataStax Java Driver option \" +\n+            DefaultDriverOption.NETTY_TIMER_TICKS_PER_WHEEL.getPath() + \" for more information.\",\n+        ConfigOption.Type.LOCAL,\n+        Integer.class);\n+\n+    // Metrics\n+\n+    ConfigNamespace METRICS = new ConfigNamespace(\n+        CQL_NS,\n+        \"metrics\",\n+        \"Configuration options for CQL metrics\");\n+\n+    ConfigOption<String[]> METRICS_SESSION_ENABLED = new ConfigOption<>(\n+        METRICS,\n+        \"session-enabled\",\n+        \"Comma separated list of enabled session metrics. Used only when basic metrics are enabled. \" +\n+            \"Check DataStax Cassandra Driver 4 documentation for available metrics \" +\n+            \"(example: bytes-sent, bytes-received, connected-nodes).\",\n+        ConfigOption.Type.LOCAL,\n+        String[].class);\n+\n+    ConfigOption<Long> METRICS_SESSION_REQUESTS_HIGHEST_LATENCY = new ConfigOption<>(\n+        METRICS,\n+        \"cql-requests-highest-latency\",\n+        \"The largest latency that we expect to record for requests in milliseconds. \" +\n+            \"Used if 'cql-requests' session metric is enabled. \"+\n+            \"See DataStax driver configuration option `\"\n+            +DefaultDriverOption.METRICS_SESSION_CQL_REQUESTS_HIGHEST.getPath()+\"`\",\n+        ConfigOption.Type.LOCAL,\n+        Long.class);\n+\n+    ConfigOption<Integer> METRICS_SESSION_REQUESTS_SIGNIFICANT_DIGITS = new ConfigOption<>(\n+        METRICS,\n+        \"cql-requests-significant-digits\",\n+        \"The number of significant decimal digits to which internal structures will maintain value resolution \" +\n+            \"and separation for requests. This must be between 0 and 5.\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIwNzI5MQ==", "bodyText": "nitpick: missing backquote around DefaultDriverOption.NETTY_TIMER_TICK_DURATION.getPath(). Same for next config option.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r526207291", "createdAt": "2020-11-18T16:03:57Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLConfigOptions.java", "diffHunk": "@@ -283,6 +284,175 @@\n              * the same Cassandra DC.\n              */\n             ConfigOption.Type.MASKABLE,\n-            String.class);\n-\n+            String.class,\n+        \"datacenter1\");\n+\n+    // Netty\n+\n+    ConfigNamespace NETTY = new ConfigNamespace(\n+        CQL_NS,\n+        \"netty\",\n+        \"Configuration options related to the Netty event loop groups used internally by the CQL driver.\");\n+\n+    ConfigOption<Integer> NETTY_IO_SIZE = new ConfigOption<>(\n+        NETTY,\n+        \"io-size\",\n+        \"The number of threads for the event loop group used for I/O operations \" +\n+            \"(reading and writing to Cassandra nodes). \" +\n+            \"If this is set to 0, the driver will use `Runtime.getRuntime().availableProcessors() * 2`.\",\n+        ConfigOption.Type.LOCAL,\n+        Integer.class,\n+        0);\n+\n+    ConfigOption<Integer> NETTY_ADMIN_SIZE = new ConfigOption<>(\n+        NETTY,\n+        \"admin-size\",\n+        \"The number of threads for the event loop group used for admin tasks not related to request I/O \" +\n+            \"(handle cluster events, refresh metadata, schedule reconnections, etc.). \" +\n+            \"If this is set to 0, the driver will use `Runtime.getRuntime().availableProcessors() * 2`.\",\n+        ConfigOption.Type.LOCAL,\n+        Integer.class,\n+        0);\n+\n+    ConfigOption<Long> NETTY_TIMER_TICK_DURATION = new ConfigOption<>(\n+        NETTY,\n+        \"timer-tick-duration\",\n+        \"The timer tick duration in milliseconds. This is how frequent the timer should wake up to check for timed-out tasks \" +\n+            \"or speculative executions. See DataStax Java Driver option \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81"}, "originalPosition": 136}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "672bfb0c37039deefedeb7522afc761803b00e81", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/672bfb0c37039deefedeb7522afc761803b00e81", "committedDate": "2020-11-14T16:17:43Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "eba708f181a22ce9e7698f7a1d8d449c0d132e45", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/eba708f181a22ce9e7698f7a1d8d449c0d132e45", "committedDate": "2020-11-19T00:00:03Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NjQxNDA5", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-534641409", "createdAt": "2020-11-19T16:44:27Z", "commit": {"oid": "eba708f181a22ce9e7698f7a1d8d449c0d132e45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo0NDoyOFrOH2ns5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo0NDoyOFrOH2ns5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAzNTYyMg==", "bodyText": "Nice! Just a nitpick:\nNow this line seems unreachable. See codecov: https://app.codecov.io/gh/JanusGraph/janusgraph/compare/2169/diff\nAlso sample test code:\n    @Test\n    public void testPagingIterator() {\n        clopen(option(PAGE_SIZE), 10);\n        int numVertices = 10;\n        for (int i = 0; i < numVertices; i++) {\n            graph.addVertex().property(\"prop\", i);\n        }\n        graph.tx().commit();\n\n        List<Object> values = graph.traversal().V().values(\"prop\").toList();\n        assertEquals(numVertices, values.size());\n        assertEquals(numVertices, new HashSet<>(values).size());\n    }\nSeems the underlying Datastax driver needs to execute the query once more to know that the current result set is fully fetched. Thus this if-statement seems to be useless.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r527035622", "createdAt": "2020-11-19T16:44:28Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLKeyColumnValueStore.java", "diffHunk": "@@ -434,43 +443,48 @@ public KeyIterator getKeys(final SliceQuery query, final StoreTransaction txh) t\n     private class CQLPagingIterator implements Iterator<Row> {\n \n         private ResultSet currentResultSet;\n+        private java.util.Iterator<Row> currentPageIterator;\n \n         private int index;\n-        private int paginatedResultSize;\n-        private final Supplier<Statement> statementSupplier;\n+        private final int paginatedResultSize;\n \n-        private byte[] lastPagingState = null;\n+        private BoundStatement boundStatement;\n \n-        public CQLPagingIterator(final int pageSize, Supplier<Statement> statementSupplier) {\n-            this.index = 0;\n+        public CQLPagingIterator(final int pageSize, BoundStatement boundStatement) {\n             this.paginatedResultSize = pageSize;\n-            this.statementSupplier = statementSupplier;\n-            this.currentResultSet = getResultSet();\n+            this.boundStatement = boundStatement;\n+            updateResultSet();\n         }\n \n         @Override\n         public boolean hasNext() {\n-            return !currentResultSet.isExhausted();\n+            if(index<paginatedResultSize){\n+                return currentPageIterator.hasNext();\n+            }\n+            if(currentResultSet.isFullyFetched()){\n+                return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eba708f181a22ce9e7698f7a1d8d449c0d132e45"}, "originalPosition": 512}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eba708f181a22ce9e7698f7a1d8d449c0d132e45", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/eba708f181a22ce9e7698f7a1d8d449c0d132e45", "committedDate": "2020-11-19T00:00:03Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/70321725c0cd1be7a40ceedd36a43a94127d0eb1", "committedDate": "2020-11-19T18:28:34Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NzM5MTc1", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-534739175", "createdAt": "2020-11-19T18:36:08Z", "commit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODozNjowOVrOH2sV2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODozNjowOVrOH2sV2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzExMTY0Mw==", "bodyText": "This part should be unreachable in most cases. The possible case I think about when this part is actually reachable is when we have storage.page-size=1 and call next(); hasNext(); next();. In such case it's possible that during the last next() operation our dseStoredExecutionInfos.size() will be equal to 3. In normal scenarios when we always call hasNext() before next() we shouldn't reach this else case.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r527111643", "createdAt": "2020-11-19T18:36:09Z", "author": {"login": "porunov"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLKeyColumnValueStore.java", "diffHunk": "@@ -414,63 +423,50 @@ public KeyIterator getKeys(final SliceQuery query, final StoreTransaction txh) t\n         return Try.of(() -> new CQLResultSetKeyIterator(\n                 query,\n                 this.getter,\n-                new CQLPagingIterator(this.storeManager.getPageSize(), () ->\n-                    getKeysAll.bind()\n-                        .setBytes(SLICE_START_BINDING, query.getSliceStart().asByteBuffer())\n-                        .setBytes(SLICE_END_BINDING, query.getSliceEnd().asByteBuffer())\n-                        .setFetchSize(this.storeManager.getPageSize())\n-                        .setConsistencyLevel(getTransaction(txh).getReadConsistencyLevel()))))\n+                new CQLPagingIterator(\n+                    getKeysAll.boundStatementBuilder()\n+                        .setByteBuffer(SLICE_START_BINDING, query.getSliceStart().asByteBuffer())\n+                        .setByteBuffer(SLICE_END_BINDING, query.getSliceEnd().asByteBuffer())\n+                        .setPageSize(this.storeManager.getPageSize())\n+                        .setConsistencyLevel(getTransaction(txh).getReadConsistencyLevel()).build())))\n                 .getOrElseThrow(EXCEPTION_MAPPER);\n     }\n \n     /**\n      * This class provides a paging implementation that sits on top of the DSE Cassandra driver. The driver already\n      * has its own built in paging support but this has limitations when doing a full scan of the key ring due\n      * to how driver paging metadata is stored. The driver stores a full history of a given query's paging metadata\n-     * which can lead to OOM issues on non-trivially sized data sets. This class overcomes this by doing another level\n-     * of paging that re-executes the query after a configurable number of rows. When the original query is re-executed\n-     * it is initialized to the correct offset using the last page's metadata.\n+     * which can lead to OOM issues on non-trivially sized data sets. This class overcomes this by forcing the internal\n+     * metadata which isn't needed anymore to be deleted to be free for GC.\n      */\n     private class CQLPagingIterator implements Iterator<Row> {\n \n-        private ResultSet currentResultSet;\n-\n-        private int index;\n-        private int paginatedResultSize;\n-        private final Supplier<Statement> statementSupplier;\n-\n-        private byte[] lastPagingState = null;\n+        private final List<ExecutionInfo> dseStoredExecutionInfos;\n+        private final java.util.Iterator<Row> currentPageIterator;\n \n-        public CQLPagingIterator(final int pageSize, Supplier<Statement> statementSupplier) {\n-            this.index = 0;\n-            this.paginatedResultSize = pageSize;\n-            this.statementSupplier = statementSupplier;\n-            this.currentResultSet = getResultSet();\n+        public CQLPagingIterator(BoundStatement boundStatement) {\n+            ResultSet currentResultSet = session.execute(boundStatement);\n+            currentPageIterator = currentResultSet.iterator();\n+            this.dseStoredExecutionInfos = currentResultSet.getExecutionInfos();\n         }\n \n         @Override\n         public boolean hasNext() {\n-            return !currentResultSet.isExhausted();\n+            return currentPageIterator.hasNext();\n         }\n \n         @Override\n         public Row next() {\n-            if(index == paginatedResultSize) {\n-                currentResultSet = getResultSet();\n-                this.index = 0;\n-            }\n-            this.index++;\n-            lastPagingState = currentResultSet.getExecutionInfo().getPagingStateUnsafe();\n-            return currentResultSet.one();\n-\n-        }\n-\n-        private ResultSet getResultSet() {\n-            final Statement boundStmnt = statementSupplier.get();\n-            if (lastPagingState != null) {\n-                boundStmnt.setPagingStateUnsafe(lastPagingState);\n+            if(dseStoredExecutionInfos.size()>1){\n+                if(dseStoredExecutionInfos.size()==2){\n+                    dseStoredExecutionInfos.set(0, dseStoredExecutionInfos.remove(1));\n+                } else {\n+                    ExecutionInfo lastExecutionInfo = dseStoredExecutionInfos.get(dseStoredExecutionInfos.size()-1);\n+                    dseStoredExecutionInfos.clear();\n+                    dseStoredExecutionInfos.add(lastExecutionInfo);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1"}, "originalPosition": 543}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NzQzNDUy", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-534743452", "createdAt": "2020-11-19T18:41:39Z", "commit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODo0MTozOVrOH2siDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODo0MTozOVrOH2siDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzExNDc2Nw==", "bodyText": "Current DSE ResultSet implementations return mutable ArrayList when getExecutionInfos() is called. The only case when this list is Immutable is when SinglePageResultSet is used but we won't mutate that list because it always has the size of 1. Thus, it's not possible to enter this if statement with that Immutable list.", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r527114767", "createdAt": "2020-11-19T18:41:39Z", "author": {"login": "porunov"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLKeyColumnValueStore.java", "diffHunk": "@@ -414,63 +423,50 @@ public KeyIterator getKeys(final SliceQuery query, final StoreTransaction txh) t\n         return Try.of(() -> new CQLResultSetKeyIterator(\n                 query,\n                 this.getter,\n-                new CQLPagingIterator(this.storeManager.getPageSize(), () ->\n-                    getKeysAll.bind()\n-                        .setBytes(SLICE_START_BINDING, query.getSliceStart().asByteBuffer())\n-                        .setBytes(SLICE_END_BINDING, query.getSliceEnd().asByteBuffer())\n-                        .setFetchSize(this.storeManager.getPageSize())\n-                        .setConsistencyLevel(getTransaction(txh).getReadConsistencyLevel()))))\n+                new CQLPagingIterator(\n+                    getKeysAll.boundStatementBuilder()\n+                        .setByteBuffer(SLICE_START_BINDING, query.getSliceStart().asByteBuffer())\n+                        .setByteBuffer(SLICE_END_BINDING, query.getSliceEnd().asByteBuffer())\n+                        .setPageSize(this.storeManager.getPageSize())\n+                        .setConsistencyLevel(getTransaction(txh).getReadConsistencyLevel()).build())))\n                 .getOrElseThrow(EXCEPTION_MAPPER);\n     }\n \n     /**\n      * This class provides a paging implementation that sits on top of the DSE Cassandra driver. The driver already\n      * has its own built in paging support but this has limitations when doing a full scan of the key ring due\n      * to how driver paging metadata is stored. The driver stores a full history of a given query's paging metadata\n-     * which can lead to OOM issues on non-trivially sized data sets. This class overcomes this by doing another level\n-     * of paging that re-executes the query after a configurable number of rows. When the original query is re-executed\n-     * it is initialized to the correct offset using the last page's metadata.\n+     * which can lead to OOM issues on non-trivially sized data sets. This class overcomes this by forcing the internal\n+     * metadata which isn't needed anymore to be deleted to be free for GC.\n      */\n     private class CQLPagingIterator implements Iterator<Row> {\n \n-        private ResultSet currentResultSet;\n-\n-        private int index;\n-        private int paginatedResultSize;\n-        private final Supplier<Statement> statementSupplier;\n-\n-        private byte[] lastPagingState = null;\n+        private final List<ExecutionInfo> dseStoredExecutionInfos;\n+        private final java.util.Iterator<Row> currentPageIterator;\n \n-        public CQLPagingIterator(final int pageSize, Supplier<Statement> statementSupplier) {\n-            this.index = 0;\n-            this.paginatedResultSize = pageSize;\n-            this.statementSupplier = statementSupplier;\n-            this.currentResultSet = getResultSet();\n+        public CQLPagingIterator(BoundStatement boundStatement) {\n+            ResultSet currentResultSet = session.execute(boundStatement);\n+            currentPageIterator = currentResultSet.iterator();\n+            this.dseStoredExecutionInfos = currentResultSet.getExecutionInfos();\n         }\n \n         @Override\n         public boolean hasNext() {\n-            return !currentResultSet.isExhausted();\n+            return currentPageIterator.hasNext();\n         }\n \n         @Override\n         public Row next() {\n-            if(index == paginatedResultSize) {\n-                currentResultSet = getResultSet();\n-                this.index = 0;\n-            }\n-            this.index++;\n-            lastPagingState = currentResultSet.getExecutionInfo().getPagingStateUnsafe();\n-            return currentResultSet.one();\n-\n-        }\n-\n-        private ResultSet getResultSet() {\n-            final Statement boundStmnt = statementSupplier.get();\n-            if (lastPagingState != null) {\n-                boundStmnt.setPagingStateUnsafe(lastPagingState);\n+            if(dseStoredExecutionInfos.size()>1){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1"}, "originalPosition": 536}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTcyMDYx", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-535972061", "createdAt": "2020-11-21T15:03:18Z", "commit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxNTowMzoxOFrOH3vHRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxNTowMzoxOFrOH3vHRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIwNTYzOQ==", "bodyText": "What about dseStoredExecutionInfos.remove(0)? Actually, if we simply do dseStoredExecutionInfos.remove(0), or use your code in the else branch, then we don't need two branches at all. Is there any specific reason to keep the if(dseStoredExecutionInfos.size()==2) condition here?", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#discussion_r528205639", "createdAt": "2020-11-21T15:03:18Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLKeyColumnValueStore.java", "diffHunk": "@@ -414,63 +423,50 @@ public KeyIterator getKeys(final SliceQuery query, final StoreTransaction txh) t\n         return Try.of(() -> new CQLResultSetKeyIterator(\n                 query,\n                 this.getter,\n-                new CQLPagingIterator(this.storeManager.getPageSize(), () ->\n-                    getKeysAll.bind()\n-                        .setBytes(SLICE_START_BINDING, query.getSliceStart().asByteBuffer())\n-                        .setBytes(SLICE_END_BINDING, query.getSliceEnd().asByteBuffer())\n-                        .setFetchSize(this.storeManager.getPageSize())\n-                        .setConsistencyLevel(getTransaction(txh).getReadConsistencyLevel()))))\n+                new CQLPagingIterator(\n+                    getKeysAll.boundStatementBuilder()\n+                        .setByteBuffer(SLICE_START_BINDING, query.getSliceStart().asByteBuffer())\n+                        .setByteBuffer(SLICE_END_BINDING, query.getSliceEnd().asByteBuffer())\n+                        .setPageSize(this.storeManager.getPageSize())\n+                        .setConsistencyLevel(getTransaction(txh).getReadConsistencyLevel()).build())))\n                 .getOrElseThrow(EXCEPTION_MAPPER);\n     }\n \n     /**\n      * This class provides a paging implementation that sits on top of the DSE Cassandra driver. The driver already\n      * has its own built in paging support but this has limitations when doing a full scan of the key ring due\n      * to how driver paging metadata is stored. The driver stores a full history of a given query's paging metadata\n-     * which can lead to OOM issues on non-trivially sized data sets. This class overcomes this by doing another level\n-     * of paging that re-executes the query after a configurable number of rows. When the original query is re-executed\n-     * it is initialized to the correct offset using the last page's metadata.\n+     * which can lead to OOM issues on non-trivially sized data sets. This class overcomes this by forcing the internal\n+     * metadata which isn't needed anymore to be deleted to be free for GC.\n      */\n     private class CQLPagingIterator implements Iterator<Row> {\n \n-        private ResultSet currentResultSet;\n-\n-        private int index;\n-        private int paginatedResultSize;\n-        private final Supplier<Statement> statementSupplier;\n-\n-        private byte[] lastPagingState = null;\n+        private final List<ExecutionInfo> dseStoredExecutionInfos;\n+        private final java.util.Iterator<Row> currentPageIterator;\n \n-        public CQLPagingIterator(final int pageSize, Supplier<Statement> statementSupplier) {\n-            this.index = 0;\n-            this.paginatedResultSize = pageSize;\n-            this.statementSupplier = statementSupplier;\n-            this.currentResultSet = getResultSet();\n+        public CQLPagingIterator(BoundStatement boundStatement) {\n+            ResultSet currentResultSet = session.execute(boundStatement);\n+            currentPageIterator = currentResultSet.iterator();\n+            this.dseStoredExecutionInfos = currentResultSet.getExecutionInfos();\n         }\n \n         @Override\n         public boolean hasNext() {\n-            return !currentResultSet.isExhausted();\n+            return currentPageIterator.hasNext();\n         }\n \n         @Override\n         public Row next() {\n-            if(index == paginatedResultSize) {\n-                currentResultSet = getResultSet();\n-                this.index = 0;\n-            }\n-            this.index++;\n-            lastPagingState = currentResultSet.getExecutionInfo().getPagingStateUnsafe();\n-            return currentResultSet.one();\n-\n-        }\n-\n-        private ResultSet getResultSet() {\n-            final Statement boundStmnt = statementSupplier.get();\n-            if (lastPagingState != null) {\n-                boundStmnt.setPagingStateUnsafe(lastPagingState);\n+            if(dseStoredExecutionInfos.size()>1){\n+                if(dseStoredExecutionInfos.size()==2){\n+                    dseStoredExecutionInfos.set(0, dseStoredExecutionInfos.remove(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1"}, "originalPosition": 538}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65cad01828f1a455cc51435f8efaf309111c0768", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/65cad01828f1a455cc51435f8efaf309111c0768", "committedDate": "2020-11-21T19:46:45Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70321725c0cd1be7a40ceedd36a43a94127d0eb1", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/70321725c0cd1be7a40ceedd36a43a94127d0eb1", "committedDate": "2020-11-19T18:28:34Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "65cad01828f1a455cc51435f8efaf309111c0768", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/65cad01828f1a455cc51435f8efaf309111c0768", "committedDate": "2020-11-21T19:46:45Z", "message": "Upgrade DataStax cassandra driver to 4.9.0 [full build]\n\nFixes #1510\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4OTk3NTU4", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-538997558", "createdAt": "2020-11-26T05:08:51Z", "commit": {"oid": "65cad01828f1a455cc51435f8efaf309111c0768"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjIwODY0", "url": "https://github.com/JanusGraph/janusgraph/pull/2169#pullrequestreview-539220864", "createdAt": "2020-11-26T11:13:56Z", "commit": {"oid": "65cad01828f1a455cc51435f8efaf309111c0768"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}