{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODc4ODA1", "number": 2165, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOToxMDowNFrOEPCrpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzozNjozNVrOEPbeuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjA4MDM4OnYy", "diffSide": "RIGHT", "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOToxMDowNFrOGyiF5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOToxMDowNFrOGyiF5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY0MDU1MA==", "bodyText": "Please, don't create a new instance of LevenshteinDistance for each search.\nWe have 3 possible distance values (0, 1 and 2). So, just create 3 constants of LevenshteinDistance and reuse them.\nI.e.\nprivate static final LevenshteinDistance ZERO_LEVENSHTEIN_DISTANCE = new LevenshteinDistance(0);\nprivate static final LevenshteinDistance ONE_LEVENSHTEIN_DISTANCE = new LevenshteinDistance(1);\nprivate static final LevenshteinDistance TWO_LEVENSHTEIN_DISTANCE = new LevenshteinDistance(2);\n\nAfter that we can rewrite the method to be as following:\nprivate static boolean isFuzzy(String term, String value){\n    term = term.trim();\n    if (term.length() < 3) {\n        return ZERO_LEVENSHTEIN_DISTANCE.apply(value, term) == 0;\n    } else if (term.length() < 6) {\n        int levenshteinDist = ONE_LEVENSHTEIN_DISTANCE.apply(value, term);\n        return levenshteinDist <= 1 && levenshteinDist >= 0;\n    }\n    int levenshteinDist = TWO_LEVENSHTEIN_DISTANCE.apply(value, term);\n    return levenshteinDist <= 2 && levenshteinDist >= 0;\n}", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#discussion_r455640550", "createdAt": "2020-07-16T09:10:04Z", "author": {"login": "porunov"}, "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "diffHunk": "@@ -263,7 +263,9 @@ private static boolean isFuzzy(String term, String value){\n         } else {\n             distance = 2;\n         }\n-        return LevenshteinDistance.getDefaultInstance().apply(value, term)<=distance;\n+        // LevenshteinDistance returns -1 if distance is larger than threshold\n+        int levenshteinDist = new LevenshteinDistance(distance).apply(value, term);\n+        return levenshteinDist <= distance && levenshteinDist >= 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ebc6b355b9395a2ce3266c8d0fa1e5a09828e86"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjE0MzI5OnYy", "diffSide": "RIGHT", "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzozNjozNVrOGzImwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzo0Mjo1NlrOGzIymw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTU1NA==", "bodyText": "Just thinking. Won't it be a little bit more efficient if we would use return value.equals(term); here?\nAs I understand LevenshteinDistance is 0 only for equal strings, if I am not missing anything.", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#discussion_r456271554", "createdAt": "2020-07-17T07:36:35Z", "author": {"login": "porunov"}, "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "diffHunk": "@@ -254,16 +258,15 @@ public String toString() {\n      * @return true if {@code term} is similar to {@code value} \n      */\n     private static boolean isFuzzy(String term, String value){\n-        int distance;\n         term = term.trim();\n         if (term.length() < 3) {\n-            distance = 0;\n+            return ZERO_LEVENSHTEIN_DISTANCE.apply(value, term) == 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d753560df7250fce2774a37788532fac3d8ea1aa"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NDU4Nw==", "bodyText": "Ouch, why didn't I think about this in the first place... I think you are right. I'll update it later today.", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#discussion_r456274587", "createdAt": "2020-07-17T07:42:56Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "diffHunk": "@@ -254,16 +258,15 @@ public String toString() {\n      * @return true if {@code term} is similar to {@code value} \n      */\n     private static boolean isFuzzy(String term, String value){\n-        int distance;\n         term = term.trim();\n         if (term.length() < 3) {\n-            distance = 0;\n+            return ZERO_LEVENSHTEIN_DISTANCE.apply(value, term) == 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTU1NA=="}, "originalCommit": {"oid": "d753560df7250fce2774a37788532fac3d8ea1aa"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1326, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}