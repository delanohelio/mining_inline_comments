{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODg0Mjgx", "number": 2202, "title": "Reorganize optimization strategies", "bodyText": "As more and more optimization strategies are created, the wish for better organization \u00ad\u2014 especially in the testing area \u2014 emerged. This PR restructures the current state by applying the following changes:\n\nSplit optimization strategies, custom steps and optimization utilities into separate packages. These are:\n\n\norg.janusgraph.graphdb.tinkerpop.optimize.strategy\norg.janusgraph.graphdb.tinkerpop.optimize.step\norg.janusgraph.graphdb.tinkerpop.optimize\n\n\nSplit up the tests. Before, most of the tests were bundled in a single Method within JanusGraphTest and were therefore executed for every backend. Since most of the strategies are completely agnostic of the backend, I moved them from janusgraph-backend-testutils to janusgraph-test. Furthermore, every strategy now has it's own test class.\nOne test which had to remain in JanusGraphTest because of it's backend dependency has been renamed accordingly.\n\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-09-08T08:43:06Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2202", "merged": true, "mergeCommit": {"oid": "ac97c6ff162e74945870e4c31e0bbf317c6a529c"}, "closed": true, "closedAt": "2020-10-08T06:45:46Z", "author": {"login": "rngcntr"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJGYv8gBqjM3Njc5MjkzMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNSBjHABqjM4MTQwNzI4NTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45c459bf68337dd01d6110c1ba1b5940f67b11cb", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/45c459bf68337dd01d6110c1ba1b5940f67b11cb", "committedDate": "2020-09-08T08:33:16Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}, "afterCommit": {"oid": "3e4744400ead117f5a96aae0947a07f6ee8858ff", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/3e4744400ead117f5a96aae0947a07f6ee8858ff", "committedDate": "2020-09-15T11:48:21Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e4744400ead117f5a96aae0947a07f6ee8858ff", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/3e4744400ead117f5a96aae0947a07f6ee8858ff", "committedDate": "2020-09-15T11:48:21Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}, "afterCommit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e8fef8a28ace8e31392864296d7ba7fb00abc2d4", "committedDate": "2020-09-18T05:20:56Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTM4MjQx", "url": "https://github.com/JanusGraph/janusgraph/pull/2202#pullrequestreview-496938241", "createdAt": "2020-09-26T04:08:39Z", "commit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNDowODozOVrOHYdiRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNDoyNzo0MVrOHYdn1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQxMTc4MA==", "bodyText": "Is there any way to compare steps other than toString()?", "url": "https://github.com/JanusGraph/janusgraph/pull/2202#discussion_r495411780", "createdAt": "2020-09-26T04:08:39Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/testutil/JanusGraphAssert.java", "diffHunk": "@@ -81,4 +91,57 @@ private static boolean isEmpty(Object obj) {\n         throw new IllegalArgumentException(\"Cannot determine size of: \" + obj);\n     }\n \n+    public static void assertNumStep(int expectedResults, int expectedSteps, GraphTraversal traversal, Class<? extends Step>... expectedStepTypes) {\n+        int num = 0;\n+        while (traversal.hasNext()) {\n+            traversal.next();\n+            num++;\n+        }\n+\n+        assertEquals(expectedResults, num);\n+\n+        //Verify that steps line up with what is expected after JanusGraph's optimizations are applied\n+        List<Step> steps = traversal.asAdmin().getSteps();\n+        Set<Class<? extends Step>> expSteps = Sets.newHashSet(expectedStepTypes);\n+        int numSteps = 0;\n+        for (Step s : steps) {\n+            if (s.getClass().equals(GraphStep.class) || s.getClass().equals(StartStep.class)) continue;\n+\n+            if (expSteps.contains(s.getClass())) {\n+                numSteps++;\n+            }\n+        }\n+        assertEquals(expectedSteps, numSteps);\n+    }\n+\n+    public static void assertOptimization(Traversal<?, ?> expectedTraversal, Traversal<?, ?> originalTraversal,\n+                                          TraversalStrategy... optimizationStrategies) {\n+        final TraversalStrategies optimizations = new DefaultTraversalStrategies();\n+        for (final TraversalStrategy<?> strategy : optimizationStrategies) {\n+            optimizations.addStrategies(strategy);\n+        }\n+\n+        originalTraversal.asAdmin().setStrategies(optimizations);\n+        originalTraversal.asAdmin().applyStrategies();\n+\n+        assertEquals(expectedTraversal.asAdmin().getSteps().toString(),\n+            originalTraversal.asAdmin().getSteps().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQxMTg2OQ==", "bodyText": "Do we have to iterate and count? What about this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(expectedResults, num);\n          \n          \n            \n                    assertEquals(expectedResults, traversal.toList().size());", "url": "https://github.com/JanusGraph/janusgraph/pull/2202#discussion_r495411869", "createdAt": "2020-09-26T04:10:03Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/testutil/JanusGraphAssert.java", "diffHunk": "@@ -81,4 +91,57 @@ private static boolean isEmpty(Object obj) {\n         throw new IllegalArgumentException(\"Cannot determine size of: \" + obj);\n     }\n \n+    public static void assertNumStep(int expectedResults, int expectedSteps, GraphTraversal traversal, Class<? extends Step>... expectedStepTypes) {\n+        int num = 0;\n+        while (traversal.hasNext()) {\n+            traversal.next();\n+            num++;\n+        }\n+\n+        assertEquals(expectedResults, num);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQxMTk3NQ==", "bodyText": "nitpick: Can you add Javadoc for this method? The method name itself is not clear enough to understand its usage.", "url": "https://github.com/JanusGraph/janusgraph/pull/2202#discussion_r495411975", "createdAt": "2020-09-26T04:11:02Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/testutil/JanusGraphAssert.java", "diffHunk": "@@ -81,4 +91,57 @@ private static boolean isEmpty(Object obj) {\n         throw new IllegalArgumentException(\"Cannot determine size of: \" + obj);\n     }\n \n+    public static void assertNumStep(int expectedResults, int expectedSteps, GraphTraversal traversal, Class<? extends Step>... expectedStepTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQxMzIwNA==", "bodyText": "This test involves composite indexes, which is worth testing against different backends IMO.", "url": "https://github.com/JanusGraph/janusgraph/pull/2202#discussion_r495413204", "createdAt": "2020-09-26T04:27:41Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphTest.java", "diffHunk": "@@ -4058,24 +4037,7 @@ public void testTinkerPopCardinality() {\n     }\n \n     @Test\n-    public void testTinkerPopOptimizationStrategies() {\n-        PropertyKey id = mgmt.makePropertyKey(\"id\").cardinality(Cardinality.SINGLE).dataType(Integer.class).make();\n-        PropertyKey weight = mgmt.makePropertyKey(\"weight\").cardinality(Cardinality.SINGLE).dataType(Integer.class).make();\n-\n-        mgmt.buildIndex(\"byId\", Vertex.class).addKey(id).buildCompositeIndex();\n-        mgmt.buildIndex(\"byWeight\", Vertex.class).addKey(weight).buildCompositeIndex();\n-        mgmt.buildIndex(\"byIdWeight\", Vertex.class).addKey(id).addKey(weight).buildCompositeIndex();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b7aea76abdc3ead93e01e3a0f43d743b2c4494a", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9b7aea76abdc3ead93e01e3a0f43d743b2c4494a", "committedDate": "2020-09-28T11:36:03Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8fef8a28ace8e31392864296d7ba7fb00abc2d4", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e8fef8a28ace8e31392864296d7ba7fb00abc2d4", "committedDate": "2020-09-18T05:20:56Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}, "afterCommit": {"oid": "9b7aea76abdc3ead93e01e3a0f43d743b2c4494a", "author": {"user": {"login": "rngcntr", "name": null}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9b7aea76abdc3ead93e01e3a0f43d743b2c4494a", "committedDate": "2020-09-28T11:36:03Z", "message": "Reorganize optimization strategies\n\nSigned-off-by: Florian Grieskamp <florian.grieskamp@gdata.de>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4627, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}