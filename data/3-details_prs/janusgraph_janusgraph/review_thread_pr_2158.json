{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDA3NDYw", "number": 2158, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjo1OTozMlrOEL8tiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowOTowNFrOEL83yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTY0NDkxOnYy", "diffSide": "RIGHT", "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLStoreManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjo1OTozMlrOGtxfEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjo1OTozMlrOGtxfEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0OTg3NQ==", "bodyText": "I thought our policy is to not use a star import.", "url": "https://github.com/JanusGraph/janusgraph/pull/2158#discussion_r450649875", "createdAt": "2020-07-07T06:59:32Z", "author": {"login": "farodin91"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLStoreManager.java", "diffHunk": "@@ -21,32 +21,7 @@\n import static io.vavr.API.$;\n import static io.vavr.API.Case;\n import static io.vavr.API.Match;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.ATOMIC_BATCH_MUTATE;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.BATCH_STATEMENT_SIZE;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.CLUSTER_NAME;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.ONLY_USE_LOCAL_CONSISTENCY_FOR_SYSTEM_OPERATIONS;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.KEYSPACE;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.LOCAL_CORE_CONNECTIONS_PER_HOST;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.LOCAL_DATACENTER;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.LOCAL_MAX_CONNECTIONS_PER_HOST;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.LOCAL_MAX_REQUESTS_PER_CONNECTION;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.PROTOCOL_VERSION;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.READ_CONSISTENCY;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.REMOTE_CORE_CONNECTIONS_PER_HOST;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.REMOTE_MAX_CONNECTIONS_PER_HOST;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.REMOTE_MAX_REQUESTS_PER_CONNECTION;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.REPLICATION_FACTOR;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.REPLICATION_OPTIONS;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.REPLICATION_STRATEGY;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_ENABLED;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_TRUSTSTORE_LOCATION;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_TRUSTSTORE_PASSWORD;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_CLIENT_AUTHENTICATION_ENABLED;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_KEYSTORE_LOCATION;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_KEYSTORE_KEY_PASSWORD;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.SSL_KEYSTORE_STORE_PASSWORD;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.WRITE_CONSISTENCY;\n-import static org.janusgraph.diskstorage.cql.CQLConfigOptions.USE_EXTERNAL_LOCKING;\n+import static org.janusgraph.diskstorage.cql.CQLConfigOptions.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005742cdcdc24b8a765407967a920fc722c783e5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTY1NDg1OnYy", "diffSide": "RIGHT", "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLConfigOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowMzowOVrOGtxlBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowNTo0M1rOGtxpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MTM5OA==", "bodyText": "It would be okay to have on default value.", "url": "https://github.com/JanusGraph/janusgraph/pull/2158#discussion_r450651398", "createdAt": "2020-07-07T07:03:09Z", "author": {"login": "farodin91"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLConfigOptions.java", "diffHunk": "@@ -285,4 +285,44 @@\n             ConfigOption.Type.MASKABLE,\n             String.class);\n \n+    // Query logger\n+    ConfigNamespace QUERY_LOGGER = new ConfigNamespace(\n+        CQL_NS,\n+        \"query-logger\",\n+        \"CQL query logger options\");\n+\n+    ConfigOption<Boolean> QUERY_LOGGER_ENABLED = new ConfigOption<>(\n+        QUERY_LOGGER,\n+        \"enabled\",\n+        \"Registers a query logger with datastax cassandra driver\",\n+        ConfigOption.Type.LOCAL,\n+        false);\n+\n+    ConfigOption<Integer> QUERY_LOGGER_MAX_QUERY_STRING_LENGTH = new ConfigOption<>(\n+        QUERY_LOGGER,\n+        \"max-query-string-length\",\n+        \"Max query string length to be logged when query logger is enabled. Use '-1' to use datastax default value.\",\n+        ConfigOption.Type.LOCAL,\n+        -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005742cdcdc24b8a765407967a920fc722c783e5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MjQ1Nw==", "bodyText": "https://github.com/JanusGraph/janusgraph/blob/master/janusgraph-core/src/main/java/org/janusgraph/graphdb/configuration/GraphDatabaseConfiguration.java#L394", "url": "https://github.com/JanusGraph/janusgraph/pull/2158#discussion_r450652457", "createdAt": "2020-07-07T07:05:43Z", "author": {"login": "farodin91"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLConfigOptions.java", "diffHunk": "@@ -285,4 +285,44 @@\n             ConfigOption.Type.MASKABLE,\n             String.class);\n \n+    // Query logger\n+    ConfigNamespace QUERY_LOGGER = new ConfigNamespace(\n+        CQL_NS,\n+        \"query-logger\",\n+        \"CQL query logger options\");\n+\n+    ConfigOption<Boolean> QUERY_LOGGER_ENABLED = new ConfigOption<>(\n+        QUERY_LOGGER,\n+        \"enabled\",\n+        \"Registers a query logger with datastax cassandra driver\",\n+        ConfigOption.Type.LOCAL,\n+        false);\n+\n+    ConfigOption<Integer> QUERY_LOGGER_MAX_QUERY_STRING_LENGTH = new ConfigOption<>(\n+        QUERY_LOGGER,\n+        \"max-query-string-length\",\n+        \"Max query string length to be logged when query logger is enabled. Use '-1' to use datastax default value.\",\n+        ConfigOption.Type.LOCAL,\n+        -1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MTM5OA=="}, "originalCommit": {"oid": "005742cdcdc24b8a765407967a920fc722c783e5"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTY3MTEzOnYy", "diffSide": "RIGHT", "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLStoreManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowOTowNFrOGtxvFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowOTowNFrOGtxvFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1Mzk3NQ==", "bodyText": "You forgot a space in each if.", "url": "https://github.com/JanusGraph/janusgraph/pull/2158#discussion_r450653975", "createdAt": "2020-07-07T07:09:04Z", "author": {"login": "farodin91"}, "path": "janusgraph-cql/src/main/java/org/janusgraph/diskstorage/cql/CQLStoreManager.java", "diffHunk": "@@ -316,7 +281,35 @@ Cluster initializeCluster() throws PermanentBackendException {\n                     HostDistance.REMOTE,\n                     configuration.get(REMOTE_CORE_CONNECTIONS_PER_HOST),\n                     configuration.get(REMOTE_MAX_CONNECTIONS_PER_HOST));\n-        return builder.withPoolingOptions(poolingOptions).build();\n+\n+        Cluster cluster = builder.withPoolingOptions(poolingOptions).build();\n+\n+        if(configuration.get(QUERY_LOGGER_ENABLED)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005742cdcdc24b8a765407967a920fc722c783e5"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1322, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}