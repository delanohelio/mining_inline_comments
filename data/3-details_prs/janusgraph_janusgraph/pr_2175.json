{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NTcwNDMy", "number": 2175, "title": "Add mixed index support for has(key) query", "bodyText": "Currently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\nRelated to #284\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-07-25T05:49:03Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2175", "merged": true, "mergeCommit": {"oid": "01cef90120eb5f858a2942c3f58a541a9af490a3"}, "closed": true, "closedAt": "2021-01-03T02:09:41Z", "author": {"login": "li-boxuan"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4WfoRABqjM1ODYxODM3ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdsPiJzgFqTU2MDY0MzE5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "148f5a583cf24827533ccbf229996ffffdd921d3", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/148f5a583cf24827533ccbf229996ffffdd921d3", "committedDate": "2020-07-25T05:45:02Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "7b25885c5b969b980d5898ee43d52d4d50660403", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/7b25885c5b969b980d5898ee43d52d4d50660403", "committedDate": "2020-07-25T10:58:09Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b25885c5b969b980d5898ee43d52d4d50660403", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/7b25885c5b969b980d5898ee43d52d4d50660403", "committedDate": "2020-07-25T10:58:09Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "8daaed39d245d3e0bf3ffc48aac2b16756e73888", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8daaed39d245d3e0bf3ffc48aac2b16756e73888", "committedDate": "2020-07-25T12:45:20Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzMzMzA3", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-455333307", "createdAt": "2020-07-26T05:36:39Z", "commit": {"oid": "8daaed39d245d3e0bf3ffc48aac2b16756e73888"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwNTozNjozOVrOG3JjfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwNTozNjozOVrOG3JjfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ4MTQwNA==", "bodyText": "This uncovers an existing issue (#2176), which causes CI to fail. If we drop this part, OR fix #2176, OR comment out the flaky assertion, the CI should pass.", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r460481404", "createdAt": "2020-07-26T05:36:39Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/query/index/AbstractIndexSelectionStrategy.java", "diffHunk": "@@ -215,7 +216,12 @@ private boolean coversAll(final MixedIndexType index, Condition<JanusGraphElemen\n             .filter(field -> field.getStatus() == SchemaStatus.ENABLED)\n             .filter(field -> field.getFieldKey().equals(key))\n             .findAny().orElse(null);\n-        return match != null && indexInfo.supports(index, match, atom.getPredicate());\n+        if (match == null) {\n+            return false;\n+        }\n+        // Although Full-text search does not support NOT_EQUAL query, NOT_EQUAL(null) is an exception since it matches all\n+        boolean isAllMatch = atom.getPredicate() == Cmp.NOT_EQUAL && atom.getValue() == null;\n+        return isAllMatch || indexInfo.supports(index, match, atom.getPredicate());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8daaed39d245d3e0bf3ffc48aac2b16756e73888"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjYwMjQ2", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-459660246", "createdAt": "2020-08-02T16:03:21Z", "commit": {"oid": "8daaed39d245d3e0bf3ffc48aac2b16756e73888"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNjowMzoyMVrOG6mF5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNjowMzoyMVrOG6mF5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5NDY5NQ==", "bodyText": "But document may not contain field with this key name", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r464094695", "createdAt": "2020-08-02T16:03:21Z", "author": {"login": "mad"}, "path": "janusgraph-lucene/src/main/java/org/janusgraph/diskstorage/lucene/LuceneIndex.java", "diffHunk": "@@ -702,7 +702,9 @@ private SearchParams convertQuery(Condition<?> condition, final KeyInformation.S\n             final String key = atom.getKey();\n             KeyInformation ki = information.get(key);\n             final JanusGraphPredicate janusgraphPredicate = atom.getPredicate();\n-            if (value instanceof Number) {\n+            if (value == null && janusgraphPredicate == Cmp.NOT_EQUAL) {\n+                params.addQuery(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8daaed39d245d3e0bf3ffc48aac2b16756e73888"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8daaed39d245d3e0bf3ffc48aac2b16756e73888", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8daaed39d245d3e0bf3ffc48aac2b16756e73888", "committedDate": "2020-07-25T12:45:20Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "907134b8a2c778197c434913a40a5704ca6b79f1", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/907134b8a2c778197c434913a40a5704ca6b79f1", "committedDate": "2020-08-13T14:47:50Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "907134b8a2c778197c434913a40a5704ca6b79f1", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/907134b8a2c778197c434913a40a5704ca6b79f1", "committedDate": "2020-08-13T14:47:50Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "de0921305c83ee3b3816f775f34da6814c06317a", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/de0921305c83ee3b3816f775f34da6814c06317a", "committedDate": "2020-08-13T14:49:07Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de0921305c83ee3b3816f775f34da6814c06317a", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/de0921305c83ee3b3816f775f34da6814c06317a", "committedDate": "2020-08-13T14:49:07Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Composite index support,\nhowever, is not possible due to the data modeling design of composite\nindex.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "ed92164ff45ef52eeb27ece095e91c2cbda5ce6f", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ed92164ff45ef52eeb27ece095e91c2cbda5ce6f", "committedDate": "2020-08-14T17:14:10Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed92164ff45ef52eeb27ece095e91c2cbda5ce6f", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ed92164ff45ef52eeb27ece095e91c2cbda5ce6f", "committedDate": "2020-08-14T17:14:10Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "8d0c33bc45d1d11b4254131af06151ddf73843ae", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8d0c33bc45d1d11b4254131af06151ddf73843ae", "committedDate": "2020-08-30T15:37:38Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d0c33bc45d1d11b4254131af06151ddf73843ae", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8d0c33bc45d1d11b4254131af06151ddf73843ae", "committedDate": "2020-08-30T15:37:38Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "bf22a5fa5feb044a989125c7faf056b159dc10cb", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/bf22a5fa5feb044a989125c7faf056b159dc10cb", "committedDate": "2020-09-01T14:40:04Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf22a5fa5feb044a989125c7faf056b159dc10cb", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/bf22a5fa5feb044a989125c7faf056b159dc10cb", "committedDate": "2020-09-01T14:40:04Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "d8042dc9822f81fb37e23cc0e2ee6c2c56329713", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d8042dc9822f81fb37e23cc0e2ee6c2c56329713", "committedDate": "2020-09-03T14:40:56Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8042dc9822f81fb37e23cc0e2ee6c2c56329713", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d8042dc9822f81fb37e23cc0e2ee6c2c56329713", "committedDate": "2020-09-03T14:40:56Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/324b4f52ef1dc1da22d3a4dab96f4a3395a13410", "committedDate": "2020-09-06T13:48:17Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTczNDU3", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-488573457", "createdAt": "2020-09-15T11:11:12Z", "commit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMToxMToxMlrOHR8rTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTozMDoyNFrOHR9UCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4MTk2NA==", "bodyText": "This should be checked in isHasFilterStep, too", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r488581964", "createdAt": "2020-09-15T11:11:12Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/tinkerpop/optimize/HasStepFolder.java", "diffHunk": "@@ -212,6 +221,41 @@ static boolean validFoldInHasContainer(final Step<?, ?>  tinkerpopStep, final bo\n         return Boolean.TRUE.equals(toReturn);\n     }\n \n+    /**\n+     * Check if a given step is a has(key) step\n+     * Tinkerpop translates has(key) gremlin query into TraversalFilterStep(PropertiesStep)\n+     * @param step\n+     * @return true if given step is essentially a \"has(key)\" step\n+     */\n+    static boolean isHasFilterStep(final Step<?, ?> step) {\n+        if (step instanceof TraversalFilterStep) {\n+            List<Traversal.Admin> traversals = ((TraversalFilterStep) step).getLocalChildren();\n+            assert (traversals.size() == 1);\n+            List<Step> steps = traversals.get(0).getSteps();\n+            return steps.size() == 1 && steps.get(0) instanceof PropertiesStep;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Convert a TraversalFilterStep that is essentially \"has(key)\" into a normal HasStep\n+     * @param traversal local traversal\n+     * @param currentStep\n+     */\n+    static void foldInHasFilter(final Traversal.Admin<?, ?> traversal, final TraversalFilterStep<?> currentStep) {\n+        List<? extends Traversal.Admin<?, ?>> traversals = currentStep.getLocalChildren();\n+        assert(traversals.size() == 1);\n+        List<Step> steps = traversals.get(0).getSteps();\n+        assert(steps.size() == 1 && steps.get(0) instanceof  PropertiesStep);\n+        String[] propertyKeys = ((PropertiesStep) steps.get(0)).getPropertyKeys();\n+        assert(propertyKeys.length == 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4MzgzMA==", "bodyText": "Why is the currentStep's successor set here, if that step is removed anyway?", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r488583830", "createdAt": "2020-09-15T11:14:53Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/tinkerpop/optimize/HasStepFolder.java", "diffHunk": "@@ -212,6 +221,41 @@ static boolean validFoldInHasContainer(final Step<?, ?>  tinkerpopStep, final bo\n         return Boolean.TRUE.equals(toReturn);\n     }\n \n+    /**\n+     * Check if a given step is a has(key) step\n+     * Tinkerpop translates has(key) gremlin query into TraversalFilterStep(PropertiesStep)\n+     * @param step\n+     * @return true if given step is essentially a \"has(key)\" step\n+     */\n+    static boolean isHasFilterStep(final Step<?, ?> step) {\n+        if (step instanceof TraversalFilterStep) {\n+            List<Traversal.Admin> traversals = ((TraversalFilterStep) step).getLocalChildren();\n+            assert (traversals.size() == 1);\n+            List<Step> steps = traversals.get(0).getSteps();\n+            return steps.size() == 1 && steps.get(0) instanceof PropertiesStep;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Convert a TraversalFilterStep that is essentially \"has(key)\" into a normal HasStep\n+     * @param traversal local traversal\n+     * @param currentStep\n+     */\n+    static void foldInHasFilter(final Traversal.Admin<?, ?> traversal, final TraversalFilterStep<?> currentStep) {\n+        List<? extends Traversal.Admin<?, ?>> traversals = currentStep.getLocalChildren();\n+        assert(traversals.size() == 1);\n+        List<Step> steps = traversals.get(0).getSteps();\n+        assert(steps.size() == 1 && steps.get(0) instanceof  PropertiesStep);\n+        String[] propertyKeys = ((PropertiesStep) steps.get(0)).getPropertyKeys();\n+        assert(propertyKeys.length == 1);\n+        HasStep hasStep = new HasStep(traversal, new HasContainer(propertyKeys[0], P.neq(null)));\n+        currentStep.getLabels().forEach(hasStep::addLabel);\n+        traversal.addStep(TraversalHelper.stepIndex(currentStep, traversal), hasStep);\n+        currentStep.setNextStep(hasStep);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4NDIzMw==", "bodyText": "You could use TraversalHelper.replaceStep(currentStep, hasStep, traversal)", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r488584233", "createdAt": "2020-09-15T11:15:39Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/tinkerpop/optimize/HasStepFolder.java", "diffHunk": "@@ -212,6 +221,41 @@ static boolean validFoldInHasContainer(final Step<?, ?>  tinkerpopStep, final bo\n         return Boolean.TRUE.equals(toReturn);\n     }\n \n+    /**\n+     * Check if a given step is a has(key) step\n+     * Tinkerpop translates has(key) gremlin query into TraversalFilterStep(PropertiesStep)\n+     * @param step\n+     * @return true if given step is essentially a \"has(key)\" step\n+     */\n+    static boolean isHasFilterStep(final Step<?, ?> step) {\n+        if (step instanceof TraversalFilterStep) {\n+            List<Traversal.Admin> traversals = ((TraversalFilterStep) step).getLocalChildren();\n+            assert (traversals.size() == 1);\n+            List<Step> steps = traversals.get(0).getSteps();\n+            return steps.size() == 1 && steps.get(0) instanceof PropertiesStep;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Convert a TraversalFilterStep that is essentially \"has(key)\" into a normal HasStep\n+     * @param traversal local traversal\n+     * @param currentStep\n+     */\n+    static void foldInHasFilter(final Traversal.Admin<?, ?> traversal, final TraversalFilterStep<?> currentStep) {\n+        List<? extends Traversal.Admin<?, ?>> traversals = currentStep.getLocalChildren();\n+        assert(traversals.size() == 1);\n+        List<Step> steps = traversals.get(0).getSteps();\n+        assert(steps.size() == 1 && steps.get(0) instanceof  PropertiesStep);\n+        String[] propertyKeys = ((PropertiesStep) steps.get(0)).getPropertyKeys();\n+        assert(propertyKeys.length == 1);\n+        HasStep hasStep = new HasStep(traversal, new HasContainer(propertyKeys[0], P.neq(null)));\n+        currentStep.getLabels().forEach(hasStep::addLabel);\n+        traversal.addStep(TraversalHelper.stepIndex(currentStep, traversal), hasStep);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5MDc2NQ==", "bodyText": "Nit: A nicer solution would be to split this test up into two separate methods and have one of them test Geoshape and one everything else but Geoshape. You can then @disable the Geoshape test in the Lucene and Solr implementations of JanusGraphIndexTest.\nThis way, the abstract test class stays free of backend related stuff. For examples, have a look at JanusGraphTest and it's implementing classes for different storage backends.", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r488590765", "createdAt": "2020-09-15T11:27:30Z", "author": {"login": "rngcntr"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -212,6 +214,111 @@ private static void assertStorageExists(Backend backend, boolean exists) throws\n         }\n     }\n \n+    /**\n+     * Test that has(key) query utilizes mixed index if possible\n+     * All data types supported by mixed index are tested\n+     */\n+    @Test\n+    public void testHasKeyQuery() {\n+        VertexLabel person = mgmt.makeVertexLabel(\"person\").make();\n+        PropertyKey name = mgmt.makePropertyKey(\"name\").dataType(String.class).make();\n+        PropertyKey nickname = mgmt.makePropertyKey(\"nickname\").dataType(String.class).make();\n+        PropertyKey age = mgmt.makePropertyKey(\"age\").dataType(Integer.class).make();\n+        PropertyKey houses = mgmt.makePropertyKey(\"houses\").dataType(Integer.class).make();\n+        PropertyKey sex = mgmt.makePropertyKey(\"sex\").dataType(String.class).make();\n+        PropertyKey single = mgmt.makePropertyKey(\"single\").dataType(Boolean.class).make();\n+        PropertyKey phone = mgmt.makePropertyKey(\"phone\").dataType(Long.class).make();\n+        PropertyKey flag = mgmt.makePropertyKey(\"flag\").dataType(Boolean.class).make();\n+        PropertyKey byteKey = mgmt.makePropertyKey(\"byte\").dataType(Byte.class).make();\n+        PropertyKey cars = mgmt.makePropertyKey(\"cars\").dataType(Short.class).make();\n+        PropertyKey deposit = mgmt.makePropertyKey(\"deposit\").dataType(Float.class).make();\n+        PropertyKey address = mgmt.makePropertyKey(\"address\").dataType(Geoshape.class).make();\n+        PropertyKey birthday = mgmt.makePropertyKey(\"birthday\").dataType(Date.class).make();\n+        PropertyKey instant = mgmt.makePropertyKey(\"instant\").dataType(Instant.class).make();\n+        PropertyKey uuid = mgmt.makePropertyKey(\"uuid\").dataType(UUID.class).make();\n+\n+        mgmt.buildIndex(\"age\", Vertex.class).addKey(age).buildCompositeIndex();\n+        mgmt.buildIndex(\"namev\", Vertex.class).addKey(name, Mapping.STRING.asParameter())\n+            .buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"nameidx\", Vertex.class).addKey(nickname, Mapping.TEXT.asParameter())\n+            .buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"mixed\", Vertex.class).addKey(sex, Mapping.TEXT.asParameter()).addKey(phone)\n+            .addKey(instant).addKey(single).buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"mi\", Vertex.class).addKey(houses).addKey(deposit).addKey(uuid).buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"theIndex\", Vertex.class).addKey(address).addKey(deposit).addKey(byteKey)\n+            .addKey(cars).addKey(birthday).buildMixedIndex(INDEX);\n+        finishSchema();\n+\n+        JanusGraphVertex v = tx.addVertex(T.label, \"person\", \"name\", \"\", \"age\", 30, \"sex\", \"male\", \"houses\", 0,\n+            \"cars\", 0, \"deposit\", 0.0, \"birthday\", new Date(), \"instant\", Instant.ofEpochMilli(1), \"uuid\", UUID.randomUUID());\n+        v.property(\"age\").property(\"flag\", true);\n+        tx.addVertex(T.label, \"person\", \"name\", \"robert\", \"nickname\", \"bob\", \"sex\", \"female\", \"phone\", 12345678L,\n+            \"deposit\", 100000.5, \"instant\", Instant.ofEpochMilli(100), \"uuid\", UUID.randomUUID(), \"single\", true);\n+        tx.addVertex(T.label, \"person\", \"nickname\", \"anonym is my name\", \"phone\", 23456789L,\n+            \"byte\", Byte.MIN_VALUE, \"uuid\", UUID.randomUUID());\n+        tx.addVertex(T.label, \"person\", \"houses\", 2, \"cars\", 1, \"address\", Geoshape.point(37.97, 23.72));\n+        tx.commit();\n+\n+        /* force index to be used */\n+        clopen(option(FORCE_INDEX_USAGE), true);\n+\n+        // test has(key) -> has(key, NOT_EQUAL, null) (exists query) transformation in JanusGraph GraphCentricQuery\n+        assertCount(2, tx.query().has(\"name\").vertices());\n+        assertCount(2, tx.query().has(\"nickname\").vertices());\n+        assertCount(2, tx.query().has(\"houses\").vertices());\n+        assertCount(2, tx.query().has(\"cars\").vertices());\n+        assertCount(1, tx.query().has(\"byte\").vertices());\n+        assertCount(2, tx.query().has(\"deposit\").vertices());\n+        assertCount(1, tx.query().has(\"birthday\").vertices());\n+        assertCount(2, tx.query().has(\"instant\").vertices());\n+        assertCount(3, tx.query().has(\"uuid\").vertices());\n+        assertCount(1, tx.query().has(\"single\").vertices());\n+\n+        // test has(key) -> has(key, neq(null)) transformation in Gremlin query\n+        assertEquals(2, graph.traversal().V().has(\"name\").count().next());\n+        assertEquals(2, graph.traversal().V().has(\"nickname\").count().next());\n+        assertEquals(2, graph.traversal().V().has(\"houses\").count().next());\n+        assertEquals(2, graph.traversal().V().has(\"cars\").count().next());\n+        assertEquals(1, graph.traversal().V().has(\"byte\").count().next());\n+        assertEquals(2, graph.traversal().V().has(\"deposit\").count().next());\n+        assertEquals(1, graph.traversal().V().has(\"birthday\").count().next());\n+        assertEquals(2, graph.traversal().V().has(\"instant\").count().next());\n+        assertEquals(3, graph.traversal().V().has(\"uuid\").count().next());\n+        assertEquals(1, graph.traversal().V().has(\"single\").count().next());\n+\n+        final String backend = readConfig.get(INDEX_BACKEND, INDEX);\n+        if (!backend.equals(\"lucene\") && !backend.equals(\"solr\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5MjM5NA==", "bodyText": "I find it easier to understand what these different properties are used for, if each one is named by the data type it uses. In addition, the selection of properties can be trimmed down to only contain a single property per data type.", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r488592394", "createdAt": "2020-09-15T11:30:24Z", "author": {"login": "rngcntr"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -212,6 +214,111 @@ private static void assertStorageExists(Backend backend, boolean exists) throws\n         }\n     }\n \n+    /**\n+     * Test that has(key) query utilizes mixed index if possible\n+     * All data types supported by mixed index are tested\n+     */\n+    @Test\n+    public void testHasKeyQuery() {\n+        VertexLabel person = mgmt.makeVertexLabel(\"person\").make();\n+        PropertyKey name = mgmt.makePropertyKey(\"name\").dataType(String.class).make();\n+        PropertyKey nickname = mgmt.makePropertyKey(\"nickname\").dataType(String.class).make();\n+        PropertyKey age = mgmt.makePropertyKey(\"age\").dataType(Integer.class).make();\n+        PropertyKey houses = mgmt.makePropertyKey(\"houses\").dataType(Integer.class).make();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODU0MDky", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-488854092", "createdAt": "2020-09-15T16:21:10Z", "commit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoyMToxMFrOHSJz0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoyMToxMFrOHSJz0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NzEzOQ==", "bodyText": "has(\"key\").as(\"label\") should also be tested", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r488797139", "createdAt": "2020-09-15T16:21:10Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -212,6 +214,111 @@ private static void assertStorageExists(Backend backend, boolean exists) throws\n         }\n     }\n \n+    /**\n+     * Test that has(key) query utilizes mixed index if possible\n+     * All data types supported by mixed index are tested\n+     */\n+    @Test\n+    public void testHasKeyQuery() {\n+        VertexLabel person = mgmt.makeVertexLabel(\"person\").make();\n+        PropertyKey name = mgmt.makePropertyKey(\"name\").dataType(String.class).make();\n+        PropertyKey nickname = mgmt.makePropertyKey(\"nickname\").dataType(String.class).make();\n+        PropertyKey age = mgmt.makePropertyKey(\"age\").dataType(Integer.class).make();\n+        PropertyKey houses = mgmt.makePropertyKey(\"houses\").dataType(Integer.class).make();\n+        PropertyKey sex = mgmt.makePropertyKey(\"sex\").dataType(String.class).make();\n+        PropertyKey single = mgmt.makePropertyKey(\"single\").dataType(Boolean.class).make();\n+        PropertyKey phone = mgmt.makePropertyKey(\"phone\").dataType(Long.class).make();\n+        PropertyKey flag = mgmt.makePropertyKey(\"flag\").dataType(Boolean.class).make();\n+        PropertyKey byteKey = mgmt.makePropertyKey(\"byte\").dataType(Byte.class).make();\n+        PropertyKey cars = mgmt.makePropertyKey(\"cars\").dataType(Short.class).make();\n+        PropertyKey deposit = mgmt.makePropertyKey(\"deposit\").dataType(Float.class).make();\n+        PropertyKey address = mgmt.makePropertyKey(\"address\").dataType(Geoshape.class).make();\n+        PropertyKey birthday = mgmt.makePropertyKey(\"birthday\").dataType(Date.class).make();\n+        PropertyKey instant = mgmt.makePropertyKey(\"instant\").dataType(Instant.class).make();\n+        PropertyKey uuid = mgmt.makePropertyKey(\"uuid\").dataType(UUID.class).make();\n+\n+        mgmt.buildIndex(\"age\", Vertex.class).addKey(age).buildCompositeIndex();\n+        mgmt.buildIndex(\"namev\", Vertex.class).addKey(name, Mapping.STRING.asParameter())\n+            .buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"nameidx\", Vertex.class).addKey(nickname, Mapping.TEXT.asParameter())\n+            .buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"mixed\", Vertex.class).addKey(sex, Mapping.TEXT.asParameter()).addKey(phone)\n+            .addKey(instant).addKey(single).buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"mi\", Vertex.class).addKey(houses).addKey(deposit).addKey(uuid).buildMixedIndex(INDEX);\n+        mgmt.buildIndex(\"theIndex\", Vertex.class).addKey(address).addKey(deposit).addKey(byteKey)\n+            .addKey(cars).addKey(birthday).buildMixedIndex(INDEX);\n+        finishSchema();\n+\n+        JanusGraphVertex v = tx.addVertex(T.label, \"person\", \"name\", \"\", \"age\", 30, \"sex\", \"male\", \"houses\", 0,\n+            \"cars\", 0, \"deposit\", 0.0, \"birthday\", new Date(), \"instant\", Instant.ofEpochMilli(1), \"uuid\", UUID.randomUUID());\n+        v.property(\"age\").property(\"flag\", true);\n+        tx.addVertex(T.label, \"person\", \"name\", \"robert\", \"nickname\", \"bob\", \"sex\", \"female\", \"phone\", 12345678L,\n+            \"deposit\", 100000.5, \"instant\", Instant.ofEpochMilli(100), \"uuid\", UUID.randomUUID(), \"single\", true);\n+        tx.addVertex(T.label, \"person\", \"nickname\", \"anonym is my name\", \"phone\", 23456789L,\n+            \"byte\", Byte.MIN_VALUE, \"uuid\", UUID.randomUUID());\n+        tx.addVertex(T.label, \"person\", \"houses\", 2, \"cars\", 1, \"address\", Geoshape.point(37.97, 23.72));\n+        tx.commit();\n+\n+        /* force index to be used */\n+        clopen(option(FORCE_INDEX_USAGE), true);\n+\n+        // test has(key) -> has(key, NOT_EQUAL, null) (exists query) transformation in JanusGraph GraphCentricQuery\n+        assertCount(2, tx.query().has(\"name\").vertices());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410"}, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "324b4f52ef1dc1da22d3a4dab96f4a3395a13410", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/324b4f52ef1dc1da22d3a4dab96f4a3395a13410", "committedDate": "2020-09-06T13:48:17Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "489195eb6e7407dac8ed674d904819ca5100ac6a", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/489195eb6e7407dac8ed674d904819ca5100ac6a", "committedDate": "2020-09-20T03:55:50Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mzg5MTk4", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-497389198", "createdAt": "2020-09-28T10:38:23Z", "commit": {"oid": "489195eb6e7407dac8ed674d904819ca5100ac6a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDE3MjUz", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-497417253", "createdAt": "2020-09-28T11:22:34Z", "commit": {"oid": "489195eb6e7407dac8ed674d904819ca5100ac6a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMToyMjozNFrOHY5USA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMToyMjozNFrOHY5USA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg2Njk1Mg==", "bodyText": "I'm not sure .has(\"prop\", P.neq(null)) and .has(\"prop\") are equal. At least, in TinkerPop 3.5.0 null values are supported.\nThat said, I didn't check this PR much. Maybe I just miss something", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#discussion_r495866952", "createdAt": "2020-09-28T11:22:34Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/tinkerpop/optimize/HasStepFolder.java", "diffHunk": "@@ -212,6 +223,41 @@ static boolean validFoldInHasContainer(final Step<?, ?>  tinkerpopStep, final bo\n         return Boolean.TRUE.equals(toReturn);\n     }\n \n+    /**\n+     * Check if a given step is an \"exists\" step, i.e. has(key) step\n+     * Tinkerpop translates has(key) gremlin query into TraversalFilterStep(PropertiesStep)\n+     * @param step\n+     * @return true if given step is essentially an \"exists\" step\n+     */\n+    static boolean isExistsStep(final Step<?, ?> step) {\n+        if (step instanceof TraversalFilterStep) {\n+            List<Traversal.Admin> traversals = ((TraversalFilterStep) step).getLocalChildren();\n+            assert (traversals.size() == 1);\n+            List<Step> steps = traversals.get(0).getSteps();\n+            if (!(steps.size() == 1 && steps.get(0) instanceof PropertiesStep)) return false;\n+            return ((PropertiesStep) steps.get(0)).getPropertyKeys().length == 1;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Convert a TraversalFilterStep that is essentially \"has(key)\" into a normal HasStep\n+     * @param traversal local traversal\n+     * @param currentStep\n+     */\n+    static Step foldInHasFilter(final Traversal.Admin<?, ?> traversal, final TraversalFilterStep<?> currentStep) {\n+        List<? extends Traversal.Admin<?, ?>> traversals = currentStep.getLocalChildren();\n+        assert(traversals.size() == 1);\n+        List<Step> steps = traversals.get(0).getSteps();\n+        assert(steps.size() == 1 && steps.get(0) instanceof PropertiesStep);\n+        String[] propertyKeys = ((PropertiesStep) steps.get(0)).getPropertyKeys();\n+        assert(propertyKeys.length == 1);\n+        HasStep hasStep = new HasStep(traversal, new HasContainer(propertyKeys[0], P.neq(null)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489195eb6e7407dac8ed674d904819ca5100ac6a"}, "originalPosition": 77}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "489195eb6e7407dac8ed674d904819ca5100ac6a", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/489195eb6e7407dac8ed674d904819ca5100ac6a", "committedDate": "2020-09-20T03:55:50Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "c971dc7b7bcb9381ded9968cf264a18a2c26ccf2", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c971dc7b7bcb9381ded9968cf264a18a2c26ccf2", "committedDate": "2020-10-06T13:02:03Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c971dc7b7bcb9381ded9968cf264a18a2c26ccf2", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c971dc7b7bcb9381ded9968cf264a18a2c26ccf2", "committedDate": "2020-10-06T13:02:03Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "8caec946f0af96b197abf4cb478db35f5ff17809", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8caec946f0af96b197abf4cb478db35f5ff17809", "committedDate": "2020-10-08T16:20:05Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8caec946f0af96b197abf4cb478db35f5ff17809", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8caec946f0af96b197abf4cb478db35f5ff17809", "committedDate": "2020-10-08T16:20:05Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "5e1c8566933b8d3eed2d7eb31c931622c41e95a1", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/5e1c8566933b8d3eed2d7eb31c931622c41e95a1", "committedDate": "2020-11-02T13:36:43Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "728ad10f1b8e096adc559657d7ac7d623f012cb6", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/728ad10f1b8e096adc559657d7ac7d623f012cb6", "committedDate": "2021-01-02T14:48:23Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e1c8566933b8d3eed2d7eb31c931622c41e95a1", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/5e1c8566933b8d3eed2d7eb31c931622c41e95a1", "committedDate": "2020-11-02T13:36:43Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "728ad10f1b8e096adc559657d7ac7d623f012cb6", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/728ad10f1b8e096adc559657d7ac7d623f012cb6", "committedDate": "2021-01-02T14:48:23Z", "message": "Add mixed index support for has(key) query\n\nCurrently, has(key) query does not use index at all. This commit\ntries to use mixed index if possible. Geoshape type exists query\nis not supported by Lucene and Solr index backends.\n\nRelated to #284\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjQzMTk0", "url": "https://github.com/JanusGraph/janusgraph/pull/2175#pullrequestreview-560643194", "createdAt": "2021-01-02T16:15:47Z", "commit": {"oid": "728ad10f1b8e096adc559657d7ac7d623f012cb6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4603, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}