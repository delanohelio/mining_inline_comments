{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODc4ODA1", "number": 2165, "title": "Optimize LevenshteinDistance used in Fuzzy predicates", "bodyText": "This reduces time complexity of fuzzy match from O(n^2) to O(n), where n\nis the length of the string. This also adds tests which use fuzzy\npredicates without index.\nCloses #2164\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-07-12T10:05:54Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2165", "merged": true, "mergeCommit": {"oid": "33967fdb9144be2f2013e96c684eed3a8ce86251"}, "closed": true, "closedAt": "2020-07-24T06:45:10Z", "author": {"login": "li-boxuan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1bkkhgFqTQ0OTY2MzExMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc12a1RgFqTQ1MDc5NjE2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NjYzMTEy", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#pullrequestreview-449663112", "createdAt": "2020-07-16T09:10:04Z", "commit": {"oid": "5ebc6b355b9395a2ce3266c8d0fa1e5a09828e86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOToxMDowNFrOGyiF5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOToxMDowNFrOGyiF5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY0MDU1MA==", "bodyText": "Please, don't create a new instance of LevenshteinDistance for each search.\nWe have 3 possible distance values (0, 1 and 2). So, just create 3 constants of LevenshteinDistance and reuse them.\nI.e.\nprivate static final LevenshteinDistance ZERO_LEVENSHTEIN_DISTANCE = new LevenshteinDistance(0);\nprivate static final LevenshteinDistance ONE_LEVENSHTEIN_DISTANCE = new LevenshteinDistance(1);\nprivate static final LevenshteinDistance TWO_LEVENSHTEIN_DISTANCE = new LevenshteinDistance(2);\n\nAfter that we can rewrite the method to be as following:\nprivate static boolean isFuzzy(String term, String value){\n    term = term.trim();\n    if (term.length() < 3) {\n        return ZERO_LEVENSHTEIN_DISTANCE.apply(value, term) == 0;\n    } else if (term.length() < 6) {\n        int levenshteinDist = ONE_LEVENSHTEIN_DISTANCE.apply(value, term);\n        return levenshteinDist <= 1 && levenshteinDist >= 0;\n    }\n    int levenshteinDist = TWO_LEVENSHTEIN_DISTANCE.apply(value, term);\n    return levenshteinDist <= 2 && levenshteinDist >= 0;\n}", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#discussion_r455640550", "createdAt": "2020-07-16T09:10:04Z", "author": {"login": "porunov"}, "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "diffHunk": "@@ -263,7 +263,9 @@ private static boolean isFuzzy(String term, String value){\n         } else {\n             distance = 2;\n         }\n-        return LevenshteinDistance.getDefaultInstance().apply(value, term)<=distance;\n+        // LevenshteinDistance returns -1 if distance is larger than threshold\n+        int levenshteinDist = new LevenshteinDistance(distance).apply(value, term);\n+        return levenshteinDist <= distance && levenshteinDist >= 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ebc6b355b9395a2ce3266c8d0fa1e5a09828e86"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ebc6b355b9395a2ce3266c8d0fa1e5a09828e86", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/5ebc6b355b9395a2ce3266c8d0fa1e5a09828e86", "committedDate": "2020-07-12T09:42:02Z", "message": "Optimize LevenshteinDistance used in Fuzzy predicates\n\nThis reduces latency of fuzzy match by n/2 times, where n is the\nlength of the shorter string. This also adds tests which use fuzzy\npredicates without index.\n\nCloses #2164\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "d753560df7250fce2774a37788532fac3d8ea1aa", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d753560df7250fce2774a37788532fac3d8ea1aa", "committedDate": "2020-07-16T15:29:10Z", "message": "Optimize LevenshteinDistance used in Fuzzy predicates\n\nThis reduces time complexity of fuzzy match from O(n^2) to O(n), where n\nis the length of the shorter string. This also adds tests which use fuzzy\npredicates without index.\n\nCloses #2164\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNDM3MjE0", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#pullrequestreview-450437214", "createdAt": "2020-07-17T07:36:35Z", "commit": {"oid": "d753560df7250fce2774a37788532fac3d8ea1aa"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzozNjozNVrOGzImwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzozNjozNVrOGzImwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTU1NA==", "bodyText": "Just thinking. Won't it be a little bit more efficient if we would use return value.equals(term); here?\nAs I understand LevenshteinDistance is 0 only for equal strings, if I am not missing anything.", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#discussion_r456271554", "createdAt": "2020-07-17T07:36:35Z", "author": {"login": "porunov"}, "path": "janusgraph-driver/src/main/java/org/janusgraph/core/attribute/Text.java", "diffHunk": "@@ -254,16 +258,15 @@ public String toString() {\n      * @return true if {@code term} is similar to {@code value} \n      */\n     private static boolean isFuzzy(String term, String value){\n-        int distance;\n         term = term.trim();\n         if (term.length() < 3) {\n-            distance = 0;\n+            return ZERO_LEVENSHTEIN_DISTANCE.apply(value, term) == 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d753560df7250fce2774a37788532fac3d8ea1aa"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45af378dc0deee9c16834ef9c40eaeaffc757f12", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/45af378dc0deee9c16834ef9c40eaeaffc757f12", "committedDate": "2020-07-17T12:05:52Z", "message": "Optimize LevenshteinDistance used in Fuzzy predicates\n\nThis reduces time complexity of fuzzy match from O(n^2) to O(n), where n\nis the length of the string. This also adds tests which use fuzzy\npredicates without index.\n\nCloses #2164\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d753560df7250fce2774a37788532fac3d8ea1aa", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d753560df7250fce2774a37788532fac3d8ea1aa", "committedDate": "2020-07-16T15:29:10Z", "message": "Optimize LevenshteinDistance used in Fuzzy predicates\n\nThis reduces time complexity of fuzzy match from O(n^2) to O(n), where n\nis the length of the shorter string. This also adds tests which use fuzzy\npredicates without index.\n\nCloses #2164\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "45af378dc0deee9c16834ef9c40eaeaffc757f12", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/45af378dc0deee9c16834ef9c40eaeaffc757f12", "committedDate": "2020-07-17T12:05:52Z", "message": "Optimize LevenshteinDistance used in Fuzzy predicates\n\nThis reduces time complexity of fuzzy match from O(n^2) to O(n), where n\nis the length of the string. This also adds tests which use fuzzy\npredicates without index.\n\nCloses #2164\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNzk2MTYz", "url": "https://github.com/JanusGraph/janusgraph/pull/2165#pullrequestreview-450796163", "createdAt": "2020-07-17T16:28:15Z", "commit": {"oid": "45af378dc0deee9c16834ef9c40eaeaffc757f12"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4591, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}