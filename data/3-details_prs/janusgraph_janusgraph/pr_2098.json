{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODQ1MTAx", "number": 2098, "title": "Reduce guava usage [full build]", "bodyText": "This PR reduces guava usage. It's hard to fully remove guava usage in once but we can slowly rewriting code to not depend on guava. I think, the biggest challenge will be guava caches usage.\nThis PR mostly moves deprecated guava collection initializers to direct java collections initializations. Also, most of immutable objects were replaced by java unmodifiable objects.\nThis PR mostly covers janusgraph-driver and janusgraph-core packages. I didn't touch the code where logic explicitly depends on immutable objects but we can move that to unmodifiable collections later on.\nAlso, I noticed we often used copyOf method of guava immutable objects but I believe that in some places the code doesn't need immutable copy of collection, it is OK to use just unmodifiable collection there but I didn't touch logic which I didn't investigate.\nRelated to #2033\nSigned-off-by: Oleksandr Porunov alexandr.porunov@gmail.com\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-04-25T04:12:40Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2098", "merged": true, "mergeCommit": {"oid": "9ba0b2d850066a32551f9da4af0780f643288376"}, "closed": true, "closedAt": "2020-05-02T02:00:31Z", "author": {"login": "porunov"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca-6lYgBqjMyNzE1ODYzNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdJPXggFqTQwNDQyNzMyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59135ccc3e3eb691bd8187e4b070fafd6b540b30", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/59135ccc3e3eb691bd8187e4b070fafd6b540b30", "committedDate": "2020-04-25T03:31:42Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "e0fc8cff8d9d9c74ff9990740318d0394d5b3c06", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e0fc8cff8d9d9c74ff9990740318d0394d5b3c06", "committedDate": "2020-04-25T05:05:55Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0fc8cff8d9d9c74ff9990740318d0394d5b3c06", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e0fc8cff8d9d9c74ff9990740318d0394d5b3c06", "committedDate": "2020-04-25T05:05:55Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "56ed788f4e3c506ad3793e6f7b3ffaa59d8c0b5a", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/56ed788f4e3c506ad3793e6f7b3ffaa59d8c0b5a", "committedDate": "2020-04-25T06:21:18Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzY0ODQ0", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-400364844", "createdAt": "2020-04-25T06:25:58Z", "commit": {"oid": "56ed788f4e3c506ad3793e6f7b3ffaa59d8c0b5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwNjoyNTo1OFrOGLxQVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwNjoyNTo1OFrOGLxQVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk5NDUxOQ==", "bodyText": "There is no need for a new copy of the list because orders don't change in IndexSerializer where it is accessed. Thus I've changed this code to Collections.unmodifiableList(orders) to return a reference to orders wrapped in unmodifiableList instead of copying all elements to a new list.", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r414994519", "createdAt": "2020-04-25T06:25:58Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/query/graph/IndexQueryBuilder.java", "diffHunk": "@@ -121,8 +121,8 @@ public String getQuery() {\n         return query;\n     }\n \n-    public ImmutableList<Parameter<Order>> getOrders() {\n-        return ImmutableList.copyOf(orders);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56ed788f4e3c506ad3793e6f7b3ffaa59d8c0b5a"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56ed788f4e3c506ad3793e6f7b3ffaa59d8c0b5a", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/56ed788f4e3c506ad3793e6f7b3ffaa59d8c0b5a", "committedDate": "2020-04-25T06:21:18Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "52ef5f7171442fd77169b542a3c320dafd8b9951", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/52ef5f7171442fd77169b542a3c320dafd8b9951", "committedDate": "2020-04-25T08:16:04Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52ef5f7171442fd77169b542a3c320dafd8b9951", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/52ef5f7171442fd77169b542a3c320dafd8b9951", "committedDate": "2020-04-25T08:16:04Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "ad690063140ba3f6d61e995ef14dfe2e12160e54", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ad690063140ba3f6d61e995ef14dfe2e12160e54", "committedDate": "2020-04-25T08:48:33Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad690063140ba3f6d61e995ef14dfe2e12160e54", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ad690063140ba3f6d61e995ef14dfe2e12160e54", "committedDate": "2020-04-25T08:48:33Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "c9278f80a88c1cd7aad774ccc6adcdc087184a6f", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c9278f80a88c1cd7aad774ccc6adcdc087184a6f", "committedDate": "2020-04-25T08:50:13Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9278f80a88c1cd7aad774ccc6adcdc087184a6f", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c9278f80a88c1cd7aad774ccc6adcdc087184a6f", "committedDate": "2020-04-25T08:50:13Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "973473df31cdbd89f123a942c96a12bd2f940913", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/973473df31cdbd89f123a942c96a12bd2f940913", "committedDate": "2020-04-25T09:14:20Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzk3MzU2", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-400397356", "createdAt": "2020-04-25T14:12:39Z", "commit": {"oid": "973473df31cdbd89f123a942c96a12bd2f940913"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNDoxMjo0MFrOGL16gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNDozMzowMlrOGL2Iiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA3MDg0OA==", "bodyText": "java 8 has Function.identity() too", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415070848", "createdAt": "2020-04-25T14:12:40Z", "author": {"login": "mad"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/keycolumnvalue/KCVMutation.java", "diffHunk": "@@ -30,17 +30,19 @@\n \n public class KCVMutation extends Mutation<Entry,StaticBuffer> {\n \n+    public static final Function<StaticBuffer,StaticBuffer> IDENTITY_FUNCTION = key -> key;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973473df31cdbd89f123a942c96a12bd2f940913"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA3NDQ0Mw==", "bodyText": "I think we should avoid stream API for work intensive place like this, some benchmark https://stackoverflow.com/questions/22658322/java-8-performance-of-streams-vs-collections shows slows performance vs vanilla java\nI run benchmark based from SO\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\n@BenchmarkMode(Mode.AverageTime)\n@OperationsPerInvocation(StreamVsVanilla.N)\npublic class StreamVsVanilla {\n    public static final int N = 100000;\n\n    static List<String> sourceList = new ArrayList<>();\n\n    static {\n        for (int i = 0; i < N; i++) {\n            sourceList.add(\"hello\");\n        }\n    }\n\n    @Benchmark\n    public Set<String> vanilla() {\n        Set<String> adds = new HashSet<>();\n        for (final String s : sourceList) {\n            adds.add((String) Function.identity().apply(s));\n        }\n        return adds;\n    }\n\n    @Benchmark\n    public Set<String> stream() {\n        Function<String, String> identity = Function.identity();\n        Set<String> adds = sourceList.stream().map(identity).collect(Collectors.toSet());\n        return adds;\n    }\n}\n\nResult is\nBenchmark                Mode  Cnt   Score   Error  Units\nStreamVsVanilla.stream   avgt   25  10.169 \u00b1 0.576  ns/op\nStreamVsVanilla.vanilla  avgt   25   8.789 \u00b1 0.328  ns/op", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415074443", "createdAt": "2020-04-25T14:33:02Z", "author": {"login": "mad"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/Mutation.java", "diffHunk": "@@ -149,15 +150,15 @@ public int getTotalMutations() {\n      */\n     public<V> void consolidate(Function<E,V> convertAdditions, Function<K,V> convertDeletions) {\n         if (hasDeletions() && hasAdditions()) {\n-            Set<V> adds = Sets.newHashSet(Iterables.transform(additions,convertAdditions));\n+            Set<V> adds = additions.stream().map(convertAdditions).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973473df31cdbd89f123a942c96a12bd2f940913"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "973473df31cdbd89f123a942c96a12bd2f940913", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/973473df31cdbd89f123a942c96a12bd2f940913", "committedDate": "2020-04-25T09:14:20Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "522e2b554cb06ad5d63ee8bc75e1c0ac5940cb8f", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/522e2b554cb06ad5d63ee8bc75e1c0ac5940cb8f", "committedDate": "2020-04-25T20:06:36Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "522e2b554cb06ad5d63ee8bc75e1c0ac5940cb8f", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/522e2b554cb06ad5d63ee8bc75e1c0ac5940cb8f", "committedDate": "2020-04-25T20:06:36Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "708a869a3097e454a41dd21165382eabd560c31e", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/708a869a3097e454a41dd21165382eabd560c31e", "committedDate": "2020-04-25T20:08:50Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "708a869a3097e454a41dd21165382eabd560c31e", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/708a869a3097e454a41dd21165382eabd560c31e", "committedDate": "2020-04-25T20:08:50Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "f6083e198704e459112eb21320a76311d87bf71e", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/f6083e198704e459112eb21320a76311d87bf71e", "committedDate": "2020-04-25T23:45:27Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6083e198704e459112eb21320a76311d87bf71e", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/f6083e198704e459112eb21320a76311d87bf71e", "committedDate": "2020-04-25T23:45:27Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/27adaf9195904d83598bfeb56aef851b987a0841", "committedDate": "2020-04-26T00:17:47Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjUwODE2", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-400650816", "createdAt": "2020-04-27T06:12:44Z", "commit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoxMjo0NFrOGMSX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzo1NjowOFrOGMVxmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNzEwNg==", "bodyText": "The StringBuilder/Iterator pattern appears tree times in this class, with very similar code for each. I suggest replacing this logic and use Java's included String.join. How about something like this:\nprivate static <E> String join(Stream<E> elements, Function<E,String> elementToString, String entrySeparator) {\n    Stream<String> convertedElements = elements.map(elementToString);\n    return String.join(entrySeparator, (Iterable<String>) convertedElements::iterator);\n}\nYou can then wrap this method for Inputs of type Map<?,?>, Object[] and Collection<?>.", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415537106", "createdAt": "2020-04-27T06:12:44Z", "author": {"login": "rngcntr"}, "path": "janusgraph-driver/src/main/java/org/janusgraph/util/StringUtils.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.util;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class StringUtils {\n+\n+    public static String join(Map<?, ?> elements, String keyValueSeparator, String entriesSeparator){\n+        if(elements == null){\n+            return \"\";\n+        }\n+        Iterator<? extends Map.Entry<?, ?>> it = elements.entrySet().iterator();\n+        if(it.hasNext()){\n+            Map.Entry<?, ?> entry = it.next();\n+            StringBuilder stringBuilder = new StringBuilder();\n+            stringBuilder.append(entry.getKey()).append(keyValueSeparator).append(entry.getValue());\n+            while (it.hasNext()){\n+                entry = it.next();\n+                stringBuilder.append(entriesSeparator).append(entry.getKey()).append(keyValueSeparator).append(entry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODQ1Mw==", "bodyText": "Nitpick: !sortKeyHashSet.retainAll(signature).isEmpty() does exactly what you are implementing here.", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415548453", "createdAt": "2020-04-27T06:37:52Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/types/StandardRelationTypeMaker.java", "diffHunk": "@@ -79,8 +78,12 @@ private void checkGeneralArguments() {\n         checkSortKey(sortKey);\n         Preconditions.checkArgument(sortOrder==Order.ASC || hasSortKey(),\"Must define a sort key to use ordering\");\n         checkSignature(signature);\n-        Preconditions.checkArgument(Sets.intersection(Sets.newHashSet(sortKey), Sets.newHashSet(signature)).isEmpty(),\n-                \"Signature and sort key must be disjoined\");\n+        HashSet<PropertyKey> sortKeyHashSet = new HashSet<>(sortKey);\n+        for(PropertyKey propertyKey : signature){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU2NDcwMg==", "bodyText": "Nitpick: How about this?\nthis.propertyKeys = StreamSupport.stream(keys.spliterator, false)\n    .map(PropertyKey::longId)\n    .collect(Collectors.toCollection(HashSet::new));", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415564702", "createdAt": "2020-04-27T07:10:24Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/database/management/ManagementSystem.java", "diffHunk": "@@ -946,13 +950,15 @@ private UpdateStatusTrigger(StandardJanusGraph graph, JanusGraphSchemaVertex ver\n             this.graph = graph;\n             this.schemaVertexId = vertex.longId();\n             this.newStatus = newStatus;\n-            this.propertyKeys = Sets.newHashSet(Iterables.transform(keys, new Function<PropertyKey, Long>() {\n+            Iterable<? extends Long> it = Iterables.transform(keys, new Function<PropertyKey, Long>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3MDkwMA==", "bodyText": "Nit: StreamSupport.stream(configuration.getKeys().spliterator(), false)\nSee stackoverflow post", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415570900", "createdAt": "2020-04-27T07:21:15Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/core/JanusGraphFactory.java", "diffHunk": "@@ -373,7 +373,9 @@ private static ReadConfiguration getLocalConfiguration(File file) {\n                                   Pattern.quote(INDEX_CONF_FILE.getName()) +  \")\"\n             + \")\");\n \n-            final Iterator<String> keysToMangle = Iterators.filter(configuration.getKeys(), key -> null != key && p.matcher(key).matches());\n+            final Iterator<String> keysToMangle = StreamSupport.stream(\n+                Spliterators.spliteratorUnknownSize(configuration.getKeys(), 0), false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3ODgwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        kcvs.mutateEntries(key, list, KCVSCache.NO_DELETIONS,tx);\n          \n          \n            \n                        kcvs.mutateEntries(key, Arrays.asList(cell), KCVSCache.NO_DELETIONS, tx);", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415578800", "createdAt": "2020-04-27T07:34:27Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/log/kcvs/ExternalCachePersistor.java", "diffHunk": "@@ -38,7 +40,9 @@ public ExternalCachePersistor(KCVSCache kcvs, CacheTransaction tx) {\n     @Override\n     public void add(StaticBuffer key, Entry cell) {\n         try {\n-            kcvs.mutateEntries(key, Lists.newArrayList(cell), KCVSCache.NO_DELETIONS,tx);\n+            List<Entry> list = new ArrayList<>(1);\n+            list.add(cell);\n+            kcvs.mutateEntries(key, list, KCVSCache.NO_DELETIONS,tx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4NDAxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        deletions = new ArrayList<>(1);\n          \n          \n            \n                        deletions = Arrays.asList(column);", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415584011", "createdAt": "2020-04-27T07:42:46Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/configuration/backend/KCVSConfiguration.java", "diffHunk": "@@ -134,7 +130,8 @@ public String toString() {\n             additions.add(StaticArrayEntry.of(column, val));\n         } else { //Deletion\n             additions = KeyColumnValueStore.NO_ADDITIONS;\n-            deletions = Lists.newArrayList(column);\n+            deletions = new ArrayList<>(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4NzY4Mw==", "bodyText": "Nit: Maybe add a comment that the order of instructions matters here. Just do avoid bugs if anybody edits this code in the future.", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415587683", "createdAt": "2020-04-27T07:48:27Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/configuration/MergedConfiguration.java", "diffHunk": "@@ -48,27 +44,22 @@ public boolean has(ConfigOption option, boolean includeRoot, String... umbrellaE\n     @Override\n     public Set<String> getContainedNamespaces(ConfigNamespace umbrella,\n             String... umbrellaElements) {\n-        ImmutableSet.Builder<String> b = ImmutableSet.builder();\n-        b.addAll(first.getContainedNamespaces(umbrella, umbrellaElements));\n-        b.addAll(second.getContainedNamespaces(umbrella, umbrellaElements));\n-        return b.build();\n+        Set<String> firstContainedNamespaces = first.getContainedNamespaces(umbrella, umbrellaElements);\n+        Set<String> secondContainedNamespaces = second.getContainedNamespaces(umbrella, umbrellaElements);\n+        Set<String> b = new HashSet<>(firstContainedNamespaces.size()+secondContainedNamespaces.size());\n+        b.addAll(firstContainedNamespaces);\n+        b.addAll(secondContainedNamespaces);\n+        return Collections.unmodifiableSet(b);\n     }\n     @Override\n     public Map<String, Object> getSubset(ConfigNamespace umbrella,\n             String... umbrellaElements) {\n-        ImmutableMap.Builder<String, Object> b = ImmutableMap.builder();\n         Map<String, Object> fm = first.getSubset(umbrella, umbrellaElements);\n         Map<String, Object> sm = second.getSubset(umbrella, umbrellaElements);\n-\n-        b.putAll(first.getSubset(umbrella, umbrellaElements));\n-\n-        for (Map.Entry<String, Object> secondEntry : sm.entrySet()) {\n-            if (!fm.containsKey(secondEntry.getKey())) {\n-                b.put(secondEntry);\n-            }\n-        }\n-\n-        return b.build();\n+        Map<String, Object> b = new HashMap<>(fm.size()+sm.size());\n+        b.putAll(sm);\n+        b.putAll(fm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU5Mjg1OA==", "bodyText": "Is there any particular reason to go with LinkedHashSet here? Just asking.", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r415592858", "createdAt": "2020-04-27T07:56:08Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/StandardIndexProvider.java", "diffHunk": "@@ -14,39 +14,33 @@\n \n package org.janusgraph.diskstorage;\n \n-import com.google.common.collect.ImmutableList;\n-import com.google.common.collect.ImmutableMap;\n-\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n+import java.util.*;\n \n /**\n  * This enum is only intended for use by JanusGraph internals.\n  * It is subject to backwards-incompatible change.\n  */\n public enum StandardIndexProvider {\n     LUCENE(\"org.janusgraph.diskstorage.lucene.LuceneIndex\", \"lucene\"),\n-    ELASTICSEARCH(\"org.janusgraph.diskstorage.es.ElasticSearchIndex\", ImmutableList.of(\"elasticsearch\", \"es\")),\n+    ELASTICSEARCH(\"org.janusgraph.diskstorage.es.ElasticSearchIndex\", Arrays.asList(\"elasticsearch\", \"es\")),\n     SOLR(\"org.janusgraph.diskstorage.solr.SolrIndex\", \"solr\");\n \n+    private static final Set<String> ALL_SHORTHANDS;\n+    private static final Map<String, String> ALL_MANAGER_CLASSES;\n+\n     private final String providerName;\n-    private final ImmutableList<String> shorthands;\n+    private final Set<String> shorthands;\n \n     StandardIndexProvider(String providerName, String shorthand) {\n-        this(providerName, ImmutableList.of(shorthand));\n+        this(providerName, Collections.singleton(shorthand));\n     }\n \n-    StandardIndexProvider(String providerName, ImmutableList<String> shorthands) {\n+    StandardIndexProvider(String providerName, Collection<String> shorthands) {\n         this.providerName = providerName;\n-        this.shorthands = shorthands;\n+        this.shorthands = Collections.unmodifiableSet(new LinkedHashSet<>(shorthands));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27adaf9195904d83598bfeb56aef851b987a0841", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/27adaf9195904d83598bfeb56aef851b987a0841", "committedDate": "2020-04-26T00:17:47Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "4b8dd4e10a0d8f38e6c831aed3f4472707cfce24", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/4b8dd4e10a0d8f38e6c831aed3f4472707cfce24", "committedDate": "2020-04-27T19:45:29Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b8dd4e10a0d8f38e6c831aed3f4472707cfce24", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/4b8dd4e10a0d8f38e6c831aed3f4472707cfce24", "committedDate": "2020-04-27T19:45:29Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "67adfc0066708db8efe293b7904e18c93a5c0b65", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/67adfc0066708db8efe293b7904e18c93a5c0b65", "committedDate": "2020-04-27T19:53:14Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67adfc0066708db8efe293b7904e18c93a5c0b65", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/67adfc0066708db8efe293b7904e18c93a5c0b65", "committedDate": "2020-04-27T19:53:14Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/be12be0554c2e347a77c8a509656267d64dd4cd0", "committedDate": "2020-04-30T01:36:06Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTQ5Nzkw", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-403149790", "createdAt": "2020-04-30T01:38:35Z", "commit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMTozODozNVrOGOW2Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMTozODozNVrOGOW2Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwNzYxOA==", "bodyText": "We don't need immutable list here because the list isn't used anywhere and was used only for iterator creation. Thus, changed it to Stream.of(...).iterator()", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r417707618", "createdAt": "2020-04-30T01:38:35Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/core/JanusGraphEdge.java", "diffHunk": "@@ -76,13 +75,10 @@ default JanusGraphVertex inVertex() {\n \n     @Override\n     default Iterator<Vertex> vertices(Direction direction) {\n-        final List<Vertex> vertices;\n         if (direction==Direction.BOTH) {\n-            vertices = ImmutableList.of(vertex(Direction.OUT), vertex(Direction.IN));\n-        } else {\n-            vertices = ImmutableList.of(vertex(direction));\n+            return Stream.of((Vertex) vertex(Direction.OUT), vertex(Direction.IN)).iterator();\n         }\n-        return vertices.iterator();\n+        return Stream.of((Vertex) vertex(direction)).iterator();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTUwNzEy", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-403150712", "createdAt": "2020-04-30T01:41:52Z", "commit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMTo0MTo1MlrOGOW5zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMTo0MTo1MlrOGOW5zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwODQ5Mw==", "bodyText": "No need making this map immutable because it is passed into the VertexMapJob and isn't used anywhere except VertexMapJob itself. Moreover the constructor  allows mutable maps to be passed (which is passed in FulgoraGraphComputer).", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r417708493", "createdAt": "2020-04-30T01:41:52Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/olap/computer/VertexMapJob.java", "diffHunk": "@@ -82,11 +82,11 @@ private VertexMapJob(IDManager idManager, FulgoraVertexMemory vertexMemory,\n \n     @Override\n     public VertexMapJob clone() {\n-        ImmutableMap.Builder<MapReduce, FulgoraMapEmitter> cloneMap = ImmutableMap.builder();\n+        Map<MapReduce, FulgoraMapEmitter> cloneMap = new HashMap<>(mapJobs.size());\n         for (Map.Entry<MapReduce, FulgoraMapEmitter> entry : mapJobs.entrySet()) {\n             cloneMap.put(entry.getKey().clone(), entry.getValue());\n         }\n-        return new VertexMapJob(idManager, vertexMemory, cloneMap.build());\n+        return new VertexMapJob(idManager, vertexMemory, cloneMap);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMjY3MzUw", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-403267350", "createdAt": "2020-04-30T07:28:47Z", "commit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MzM2NzYz", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-404336763", "createdAt": "2020-05-01T18:55:09Z", "commit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1NToxMFrOGPSjQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxMToxMVrOGPS9_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NTc2MA==", "bodyText": "Why you removed this check?", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r418685760", "createdAt": "2020-05-01T18:55:10Z", "author": {"login": "farodin91"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/log/kcvs/KCVSLog.java", "diffHunk": "@@ -241,7 +241,7 @@ public KCVSLog(String name, KCVSLogManager manager, KeyColumnValueStore store, C\n         this.times = config.get(TIMESTAMP_PROVIDER);\n         this.keyConsistentOperations = config.get(LOG_KEY_CONSISTENT);\n         this.numBuckets = config.get(LOG_NUM_BUCKETS);\n-        Preconditions.checkArgument(numBuckets>=1 && numBuckets<=Integer.MAX_VALUE);\n+        Preconditions.checkArgument(numBuckets >= 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NjkzNA==", "bodyText": "Is there no more elegant way?", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r418686934", "createdAt": "2020-05-01T18:57:32Z", "author": {"login": "farodin91"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/database/idassigner/placement/PropertyPlacementStrategy.java", "diffHunk": "@@ -89,8 +89,14 @@ private int getPartitionIDbyKey(JanusGraphVertex vertex) {\n                 \"PropertyPlacementStrategy has not been initialized correctly\");\n         assert idManager.getPartitionBound()<=Integer.MAX_VALUE;\n         int partitionBound = (int)idManager.getPartitionBound();\n-        final JanusGraphVertexProperty p = Iterables.getFirst(vertex.query().keys(key).properties(), null);\n-        if (p==null) return -1;\n+        Iterator<JanusGraphVertexProperty> it = vertex.query().keys(key).properties().iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5MjYwNA==", "bodyText": "Isn't the part .collect(Collectors.toSet())); dupilcated?", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#discussion_r418692604", "createdAt": "2020-05-01T19:11:11Z", "author": {"login": "farodin91"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/types/system/SystemTypeManager.java", "diffHunk": "@@ -33,26 +35,25 @@\n \n     static {\n         synchronized (SystemTypeManager.class) {\n-            ImmutableMap.Builder<Long, SystemRelationType> idBuilder = ImmutableMap.builder();\n-            ImmutableMap.Builder<String, SystemRelationType> nameBuilder = ImmutableMap.builder();\n-            for (SystemRelationType et : new SystemRelationType[]{BaseKey.SchemaCategory, BaseKey.SchemaDefinitionDesc,\n-                    BaseKey.SchemaDefinitionProperty, BaseKey.SchemaName, BaseKey.SchemaUpdateTime,\n-                    BaseKey.VertexExists,\n-                    BaseLabel.VertexLabelEdge, BaseLabel.SchemaDefinitionEdge,\n-                    ImplicitKey.ID, ImplicitKey.JANUSGRAPHID, ImplicitKey.LABEL,\n-                    ImplicitKey.KEY, ImplicitKey.VALUE, ImplicitKey.ADJACENT_ID,\n-                    ImplicitKey.TIMESTAMP, ImplicitKey.TTL, ImplicitKey.VISIBILITY\n-                }) {\n+            SystemRelationType[] systemRelationTypes = new SystemRelationType[]{BaseKey.SchemaCategory, BaseKey.SchemaDefinitionDesc,\n+                BaseKey.SchemaDefinitionProperty, BaseKey.SchemaName, BaseKey.SchemaUpdateTime,\n+                BaseKey.VertexExists,\n+                BaseLabel.VertexLabelEdge, BaseLabel.SchemaDefinitionEdge,\n+                ImplicitKey.ID, ImplicitKey.JANUSGRAPHID, ImplicitKey.LABEL,\n+                ImplicitKey.KEY, ImplicitKey.VALUE, ImplicitKey.ADJACENT_ID,\n+                ImplicitKey.TIMESTAMP, ImplicitKey.TTL, ImplicitKey.VISIBILITY\n+            };\n+            Map<Long, SystemRelationType> idBuilder = new HashMap<>(systemRelationTypes.length);\n+            Map<String, SystemRelationType> nameBuilder = new HashMap<>(systemRelationTypes.length);\n+            for (SystemRelationType et : systemRelationTypes) {\n                 idBuilder.put(et.longId(), et);\n                 nameBuilder.put(et.name(),et);\n             }\n+            SYSTEM_TYPES_BY_ID = Collections.unmodifiableMap(idBuilder);\n+            SYSTEM_TYPES_BY_NAME = Collections.unmodifiableMap(nameBuilder);\n \n-            SYSTEM_TYPES_BY_ID = idBuilder.build();\n-            SYSTEM_TYPES_BY_NAME = nameBuilder.build();\n-\n-\n-            ADDITIONAL_RESERVED_NAMES = ImmutableSet.of(\n-                \"key\", \"vertex\", \"edge\", \"element\", \"property\", \"label\");\n+            ADDITIONAL_RESERVED_NAMES = Collections.unmodifiableSet(\n+                Stream.of(\"key\", \"vertex\", \"edge\", \"element\", \"property\", \"label\").collect(Collectors.toSet()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9792ca3d9a741e77f55edbb30ea4695c9d994c71", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9792ca3d9a741e77f55edbb30ea4695c9d994c71", "committedDate": "2020-05-01T22:01:25Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be12be0554c2e347a77c8a509656267d64dd4cd0", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/be12be0554c2e347a77c8a509656267d64dd4cd0", "committedDate": "2020-04-30T01:36:06Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}, "afterCommit": {"oid": "9792ca3d9a741e77f55edbb30ea4695c9d994c71", "author": {"user": {"login": "porunov", "name": "Oleksandr Porunov"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9792ca3d9a741e77f55edbb30ea4695c9d994c71", "committedDate": "2020-05-01T22:01:25Z", "message": "Reduce guava usage [full build]\n\nRelated to #2033\n\nSigned-off-by: Oleksandr Porunov <alexandr.porunov@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDI3MzIy", "url": "https://github.com/JanusGraph/janusgraph/pull/2098#pullrequestreview-404427322", "createdAt": "2020-05-01T22:15:49Z", "commit": {"oid": "9792ca3d9a741e77f55edbb30ea4695c9d994c71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4758, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}