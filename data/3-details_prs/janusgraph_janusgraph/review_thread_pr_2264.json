{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMTMwMjg4", "number": 2264, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMTo1Mjo1MFrOFBhYlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMTo1Mjo1MFrOFBhYlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTM5ODYxOnYy", "diffSide": "RIGHT", "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMTo1Mjo1MFrOIAP66Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNDo0Mjo0NFrOIM_pkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEzMTc1Mw==", "bodyText": "It would cool to replace these lines with assertThrows.", "url": "https://github.com/JanusGraph/janusgraph/pull/2264#discussion_r537131753", "createdAt": "2020-12-06T21:52:50Z", "author": {"login": "farodin91"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphTest.java", "diffHunk": "@@ -2959,17 +2960,31 @@ private void executeLockConflictingTransactionJobs(JanusGraph graph, Transaction\n                 tx2.commit();\n                 fail(\"Storage backend does not abort conflicting transactions\");\n             } catch (JanusGraphException ignored) {\n+                Throwable rootCause = ignored.getCause().getCause();\n+                assertTrue(rootCause instanceof PermanentLockingException);\n+                assertTrue(rootCause.getMessage().contains(\"Expected value mismatch for\"));\n             }\n         } else {\n             try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83fbdf7d901f075a5dbca75c0e8bada8959069a4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4MzA4OQ==", "bodyText": "AFAIK, assertThrows can only assert the outmost exception but not inner exception(s).", "url": "https://github.com/JanusGraph/janusgraph/pull/2264#discussion_r537183089", "createdAt": "2020-12-07T02:05:39Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphTest.java", "diffHunk": "@@ -2959,17 +2960,31 @@ private void executeLockConflictingTransactionJobs(JanusGraph graph, Transaction\n                 tx2.commit();\n                 fail(\"Storage backend does not abort conflicting transactions\");\n             } catch (JanusGraphException ignored) {\n+                Throwable rootCause = ignored.getCause().getCause();\n+                assertTrue(rootCause instanceof PermanentLockingException);\n+                assertTrue(rootCause.getMessage().contains(\"Expected value mismatch for\"));\n             }\n         } else {\n             try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEzMTc1Mw=="}, "originalCommit": {"oid": "83fbdf7d901f075a5dbca75c0e8bada8959069a4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjYzMA==", "bodyText": "JanusGraphException janusGraphException = assertThrows(JanusGraphException.class, () -> tx2.commit());\nThrowable rootCause = janusGraphException.getCause().getCause();\nassertTrue(rootCause instanceof PermanentLockingException);\nassertTrue(rootCause.getMessage().contains(\"Expected value mismatch for\"));", "url": "https://github.com/JanusGraph/janusgraph/pull/2264#discussion_r550496630", "createdAt": "2020-12-31T14:42:36Z", "author": {"login": "farodin91"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphTest.java", "diffHunk": "@@ -2959,17 +2960,31 @@ private void executeLockConflictingTransactionJobs(JanusGraph graph, Transaction\n                 tx2.commit();\n                 fail(\"Storage backend does not abort conflicting transactions\");\n             } catch (JanusGraphException ignored) {\n+                Throwable rootCause = ignored.getCause().getCause();\n+                assertTrue(rootCause instanceof PermanentLockingException);\n+                assertTrue(rootCause.getMessage().contains(\"Expected value mismatch for\"));\n             }\n         } else {\n             try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEzMTc1Mw=="}, "originalCommit": {"oid": "83fbdf7d901f075a5dbca75c0e8bada8959069a4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjY1Ng==", "bodyText": "This was my idea.", "url": "https://github.com/JanusGraph/janusgraph/pull/2264#discussion_r550496656", "createdAt": "2020-12-31T14:42:44Z", "author": {"login": "farodin91"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphTest.java", "diffHunk": "@@ -2959,17 +2960,31 @@ private void executeLockConflictingTransactionJobs(JanusGraph graph, Transaction\n                 tx2.commit();\n                 fail(\"Storage backend does not abort conflicting transactions\");\n             } catch (JanusGraphException ignored) {\n+                Throwable rootCause = ignored.getCause().getCause();\n+                assertTrue(rootCause instanceof PermanentLockingException);\n+                assertTrue(rootCause.getMessage().contains(\"Expected value mismatch for\"));\n             }\n         } else {\n             try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEzMTc1Mw=="}, "originalCommit": {"oid": "83fbdf7d901f075a5dbca75c0e8bada8959069a4"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1410, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}