{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTg0MDEx", "number": 2221, "title": "Add grpc server to janusgraph-server", "bodyText": "Part of #1853\n\nAdd basic config parameters to the gremlin-server.yaml\nAdd first server component to get a janusgraph which is managed by a graphmanager by name\nSetup protobuf building process\nAllow testing of new grpc components\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de\n\nFollow up PRs\n\nadd basic schema interaction using grpc\nadd basic driver part\nsetup integration test\nadd auth and security\n\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?", "createdAt": "2020-09-22T20:42:08Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2221", "merged": true, "mergeCommit": {"oid": "d1f036ef0a1dd7c88ea2e22f76023428a2125473"}, "closed": true, "closedAt": "2021-02-17T07:54:14Z", "author": {"login": "farodin91"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOLcdcgFqTUwMDAwODc1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd67muCAFqTU5MTkwMTk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDA4NzU1", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#pullrequestreview-500008755", "createdAt": "2020-10-01T04:58:14Z", "commit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNDo1ODoxNFrOHa6hoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMjowM1rOHa8MkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk4MzkwNA==", "bodyText": "There is an open issue that says we should try to remove dependencies to guava if possible. If it is easily possible to replace the corresponding code by a different solution, please do so. If not, just ignore this comment.", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r497983904", "createdAt": "2020-10-01T04:58:14Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/pom.xml", "diffHunk": "@@ -22,6 +24,33 @@\n             <groupId>org.apache.tinkerpop</groupId>\n             <artifactId>gremlin-server</artifactId>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MTgzOA==", "bodyText": "Where do JanusGraphManagerGrpc, JanusGraphManagerImplBase, GetJanusGraphContextRequest, JanusGraphContext and GetJanusGraphContextByGraphNameRequest come from? Although I do see the correlation to the messages in the proto definition for these ones, I can't find the point where this file is referenced.", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r497991838", "createdAt": "2020-10-01T05:29:58Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphManagerImpl.java", "diffHunk": "@@ -0,0 +1,69 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import io.grpc.Status;\n+import io.grpc.stub.StreamObserver;\n+import org.apache.commons.lang.NullArgumentException;\n+import org.apache.tinkerpop.gremlin.server.GraphManager;\n+import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.janusgraph.core.JanusGraph;\n+\n+public class JanusGraphManagerImpl extends JanusGraphManagerGrpc.JanusGraphManagerImplBase {\n+    private final GraphManager graphManager;\n+\n+    public JanusGraphManagerImpl(GraphManager graphManager) {\n+        this.graphManager = graphManager;\n+    }\n+\n+    @Override\n+    public void getJanusGraphContexts(GetJanusGraphContextsRequest request, StreamObserver<JanusGraphContext> responseObserver) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwMzI5Ng==", "bodyText": "I find it very error-prone to just copy&paste the code from the TinkerPop Settings class here. Especially because SnakeYaml uses Reflection, the compiler will not instantly notice a change in the TinkerPop class and therefore resulting incompatibilities.\nWould it be possible to call super.read(...) and somehow integrate the obtained Settings object into the JanusGraphSettings? This isn't a nice solution either but at least it would not require to duplicate code.", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r498003296", "createdAt": "2020-10-01T06:09:45Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphSettings.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.yaml.snakeyaml.TypeDescription;\n+import org.yaml.snakeyaml.Yaml;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.InputStream;\n+import java.util.Objects;\n+\n+public class JanusGraphSettings extends Settings {\n+    public JanusGraphSettings.GrpcServerSettings grpcServer = new JanusGraphSettings.GrpcServerSettings();\n+\n+    public static class GrpcServerSettings {\n+        public boolean enable = true;\n+        public int port = 10182;\n+    }\n+\n+    public static JanusGraphSettings read(final String file) throws Exception {\n+        InputStream input = new FileInputStream(new File(file));\n+        return read(input);\n+    }\n+\n+    public static JanusGraphSettings read(final InputStream stream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwNTk0NA==", "bodyText": "Alright, @farodin91 says the classes are generated by maven. I never used proto, so is there a way to have the classes compiled and present so the IDE can resolve them?", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r498005944", "createdAt": "2020-10-01T06:17:08Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphManagerImpl.java", "diffHunk": "@@ -0,0 +1,69 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import io.grpc.Status;\n+import io.grpc.stub.StreamObserver;\n+import org.apache.commons.lang.NullArgumentException;\n+import org.apache.tinkerpop.gremlin.server.GraphManager;\n+import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.janusgraph.core.JanusGraph;\n+\n+public class JanusGraphManagerImpl extends JanusGraphManagerGrpc.JanusGraphManagerImplBase {\n+    private final GraphManager graphManager;\n+\n+    public JanusGraphManagerImpl(GraphManager graphManager) {\n+        this.graphManager = graphManager;\n+    }\n+\n+    @Override\n+    public void getJanusGraphContexts(GetJanusGraphContextsRequest request, StreamObserver<JanusGraphContext> responseObserver) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MTgzOA=="}, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwNzEwMg==", "bodyText": "You should add more tests which also overwrite the default values.", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r498007102", "createdAt": "2020-10-01T06:20:26Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/src/test/java/org/janusgraph/graphdb/server/JanusGraphSettingsTest.java", "diffHunk": "@@ -0,0 +1,31 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class JanusGraphSettingsTest {\n+\n+    @Test\n+    public void testGrpcServerDefaultValues() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwOTY3OA==", "bodyText": "Nit: These two lines are often repeated so you could move them to a method which then takes the graph name as a parameter and returns the JanusGraphContext.", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r498009678", "createdAt": "2020-10-01T06:27:39Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/src/test/java/org/janusgraph/graphdb/server/JanusGraphManagerImplTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.Server;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.inprocess.InProcessChannelBuilder;\n+import io.grpc.inprocess.InProcessServerBuilder;\n+import org.apache.tinkerpop.gremlin.server.GraphManager;\n+import org.apache.tinkerpop.gremlin.server.GremlinServer;\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.apache.tinkerpop.gremlin.server.util.DefaultGraphManager;\n+import org.javatuples.Pair;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class JanusGraphManagerImplTest {\n+\n+    private GraphManager getGraphManager() {\n+        Settings settings = new Settings();\n+        HashMap<String, String> map = new HashMap<>();\n+        map.put(\"graph\", \"src/test/resources/janusgraph-inmemory.properties\");\n+        map.put(\"graph2\", \"src/test/resources/janusgraph-inmemory.properties\");\n+        map.put(\"tinkergraph\", \"src/test/resources/tinkergraph.properties\");\n+        settings.graphs = map;\n+        return new DefaultGraphManager(settings);\n+    }\n+\n+    private Pair<Server, String> createServer(GraphManager graphManager) throws IOException {\n+        String serverName = InProcessServerBuilder.generateName();\n+        Server server = InProcessServerBuilder\n+            .forName(serverName).directExecutor().addService(new JanusGraphManagerImpl(graphManager)).build().start();\n+        return new Pair<>(server, serverName);\n+    }\n+\n+    private Pair<TestingServerClosable, JanusGraphManagerGrpc.JanusGraphManagerBlockingStub> createServerStub(GraphManager graphManager) throws IOException {\n+        Pair<Server, String> server = createServer(graphManager);\n+        ManagedChannel channel = InProcessChannelBuilder.forName(server.getValue1()).directExecutor().build();\n+        JanusGraphManagerGrpc.JanusGraphManagerBlockingStub stub = JanusGraphManagerGrpc.newBlockingStub(channel);\n+        TestingServerClosable testingServerClosable = new TestingServerClosable(server.getValue0(), channel);\n+        return new Pair<>(testingServerClosable, stub);\n+    }\n+\n+    @Test\n+    public void testContextIsReturnedForGivenGraphName() throws IOException {\n+        GraphManager graphManager = getGraphManager();\n+        Pair<TestingServerClosable, JanusGraphManagerGrpc.JanusGraphManagerBlockingStub> serverStub = createServerStub(graphManager);\n+\n+        JanusGraphContext test = serverStub.getValue1().getJanusGraphContextByGraphName(\n+            GetJanusGraphContextByGraphNameRequest.newBuilder().setGraphName(\"graph\").build());\n+\n+        assertEquals(\"graph\", test.getGraphName());\n+        serverStub.getValue0().close();\n+    }\n+\n+    @Test\n+    public void testErrorIsReturnedForGivenGraphNameWhichIsNotAJanusGraph() throws IOException {\n+        GraphManager graphManager = getGraphManager();\n+        Pair<TestingServerClosable, JanusGraphManagerGrpc.JanusGraphManagerBlockingStub> serverStub = createServerStub(graphManager);\n+\n+        assertThrows(StatusRuntimeException.class, () ->\n+            serverStub.getValue1().getJanusGraphContextByGraphName(\n+                GetJanusGraphContextByGraphNameRequest.newBuilder().setGraphName(\"tinkergraph\").build()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTI4MQ==", "bodyText": "Nit: If this class is only going to be used in JanusGraphManagerImplTest, it can be moved there as a private inner class.", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r498011281", "createdAt": "2020-10-01T06:32:03Z", "author": {"login": "rngcntr"}, "path": "janusgraph-server/src/test/java/org/janusgraph/graphdb/server/TestingServerClosable.java", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.Server;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+public class TestingServerClosable implements Closeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd71056ba753c3990e010856b1f1e46df815bcf2", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/dd71056ba753c3990e010856b1f1e46df815bcf2", "committedDate": "2020-09-22T20:10:53Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "fecf510ecbf5b76b8adf1ac70bcd4cb844817eda", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/fecf510ecbf5b76b8adf1ac70bcd4cb844817eda", "committedDate": "2020-10-06T06:20:45Z", "message": "add test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fecf510ecbf5b76b8adf1ac70bcd4cb844817eda", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/fecf510ecbf5b76b8adf1ac70bcd4cb844817eda", "committedDate": "2020-10-06T06:20:45Z", "message": "add test"}, "afterCommit": {"oid": "abb92f129ba5c7f1113f40773f5bafcf6614b311", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/abb92f129ba5c7f1113f40773f5bafcf6614b311", "committedDate": "2020-10-07T07:27:02Z", "message": "add test\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abb92f129ba5c7f1113f40773f5bafcf6614b311", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/abb92f129ba5c7f1113f40773f5bafcf6614b311", "committedDate": "2020-10-07T07:27:02Z", "message": "add test\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "a10e2ab3a3dd5711d6018062e0957b35b90a32b2", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a10e2ab3a3dd5711d6018062e0957b35b90a32b2", "committedDate": "2020-11-18T10:08:22Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a10e2ab3a3dd5711d6018062e0957b35b90a32b2", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a10e2ab3a3dd5711d6018062e0957b35b90a32b2", "committedDate": "2020-11-18T10:08:22Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "857c8f1f970a3a277757a83ed576e144baeb98bf", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/857c8f1f970a3a277757a83ed576e144baeb98bf", "committedDate": "2020-12-29T15:34:54Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMDkxODA2", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#pullrequestreview-560091806", "createdAt": "2020-12-30T15:24:56Z", "commit": {"oid": "857c8f1f970a3a277757a83ed576e144baeb98bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNToyNDo1NlrOIMvdJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNToyNDo1NlrOIMvdJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIzMTMzMw==", "bodyText": "@spmallette Do you have a better idea to extend default gremlin server config by custom values?", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r550231333", "createdAt": "2020-12-30T15:24:56Z", "author": {"login": "farodin91"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphSettings.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.yaml.snakeyaml.TypeDescription;\n+import org.yaml.snakeyaml.Yaml;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+import org.yaml.snakeyaml.representer.Representer;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.FileInputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class JanusGraphSettings {\n+    public JanusGraphSettings.GrpcServerSettings grpcServer = new JanusGraphSettings.GrpcServerSettings();\n+\n+    public static class GrpcServerSettings {\n+        public boolean enable = false;\n+        public int port = 10182;\n+    }\n+    private Settings gremlinSettings;\n+\n+    public Settings GetGremlinSettings() {\n+        return gremlinSettings;\n+    }\n+\n+    public static JanusGraphSettings read(final String file) throws Exception {\n+        InputStream input = new FileInputStream(file);\n+        return read(input);\n+    }\n+\n+    public static JanusGraphSettings read(final InputStream stream) throws IOException {\n+        Objects.requireNonNull(stream);\n+        Constructor constructor = new Constructor(JanusGraphSettings.class);\n+        TypeDescription grpcServerSettings = new TypeDescription(JanusGraphSettings.GrpcServerSettings.class);\n+        constructor.addTypeDescription(grpcServerSettings);\n+        Representer representer = new Representer();\n+        representer.getPropertyUtils().setSkipMissingProperties(true);\n+\n+        String yamlInput = getStringFromInputStream(stream);\n+\n+        Yaml yaml = new Yaml(constructor, representer);\n+        JanusGraphSettings settings = yaml.loadAs(yamlInput, JanusGraphSettings.class);\n+        Yaml yamlMap = new Yaml();\n+        Map<String, Object> obj = yamlMap.load(yamlInput);\n+        obj.remove(\"grpcServer\");\n+        String dump = yamlMap.dump(obj);\n+        settings.gremlinSettings = Settings.read(new ByteArrayInputStream(dump.getBytes()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857c8f1f970a3a277757a83ed576e144baeb98bf"}, "originalPosition": 64}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "857c8f1f970a3a277757a83ed576e144baeb98bf", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/857c8f1f970a3a277757a83ed576e144baeb98bf", "committedDate": "2020-12-29T15:34:54Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "df368d93129b5bc9e4c50c8a10addf10e61e418a", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/df368d93129b5bc9e4c50c8a10addf10e61e418a", "committedDate": "2020-12-31T12:42:45Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df368d93129b5bc9e4c50c8a10addf10e61e418a", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/df368d93129b5bc9e4c50c8a10addf10e61e418a", "committedDate": "2020-12-31T12:42:45Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "c8d0a1f562c48bcd2a7d9892575f2f5a91e0a34f", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c8d0a1f562c48bcd2a7d9892575f2f5a91e0a34f", "committedDate": "2021-01-04T12:34:31Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8d0a1f562c48bcd2a7d9892575f2f5a91e0a34f", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c8d0a1f562c48bcd2a7d9892575f2f5a91e0a34f", "committedDate": "2021-01-04T12:34:31Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "bc6b51e4e1b1c55e0d25fd2ebcb412ed1bbd5221", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/bc6b51e4e1b1c55e0d25fd2ebcb412ed1bbd5221", "committedDate": "2021-01-06T09:58:03Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc6b51e4e1b1c55e0d25fd2ebcb412ed1bbd5221", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/bc6b51e4e1b1c55e0d25fd2ebcb412ed1bbd5221", "committedDate": "2021-01-06T09:58:03Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "3bce5e9813dbd6f29e06c6d49364dfb6481e247f", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/3bce5e9813dbd6f29e06c6d49364dfb6481e247f", "committedDate": "2021-01-15T16:54:34Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bce5e9813dbd6f29e06c6d49364dfb6481e247f", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/3bce5e9813dbd6f29e06c6d49364dfb6481e247f", "committedDate": "2021-01-15T16:54:34Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "2da5c0b4584c04bd0afe4e604517ef98e16e3f52", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/2da5c0b4584c04bd0afe4e604517ef98e16e3f52", "committedDate": "2021-01-28T11:58:32Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2da5c0b4584c04bd0afe4e604517ef98e16e3f52", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/2da5c0b4584c04bd0afe4e604517ef98e16e3f52", "committedDate": "2021-01-28T11:58:32Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "64c0ebc8a2b0146ef36c2acdd3ea41f6154a34df", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/64c0ebc8a2b0146ef36c2acdd3ea41f6154a34df", "committedDate": "2021-02-03T13:47:07Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64c0ebc8a2b0146ef36c2acdd3ea41f6154a34df", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/64c0ebc8a2b0146ef36c2acdd3ea41f6154a34df", "committedDate": "2021-02-03T13:47:07Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "ab7e4aea1a7a013c6dfff499110f89ff81f16dc0", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ab7e4aea1a7a013c6dfff499110f89ff81f16dc0", "committedDate": "2021-02-05T07:24:37Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab7e4aea1a7a013c6dfff499110f89ff81f16dc0", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/ab7e4aea1a7a013c6dfff499110f89ff81f16dc0", "committedDate": "2021-02-05T07:24:37Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "9872589fd3c07888cffb2a181b2966d29d5983cb", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9872589fd3c07888cffb2a181b2966d29d5983cb", "committedDate": "2021-02-05T07:43:32Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/89edea7b0bd0870a284840ec543d446c111d6735", "committedDate": "2021-02-08T08:39:49Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9872589fd3c07888cffb2a181b2966d29d5983cb", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/9872589fd3c07888cffb2a181b2966d29d5983cb", "committedDate": "2021-02-05T07:43:32Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/89edea7b0bd0870a284840ec543d446c111d6735", "committedDate": "2021-02-08T08:39:49Z", "message": "Add grpc server to janusgraph-server\n\n* Add basic config parameters to the gremlin-server.yaml\n* Add first server component to get all configured JanusGraph graphNames.\n* Setup protobuf building process\n* Allow testing of new grpc components\n\nPart of #1853\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2MzIxNzYz", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#pullrequestreview-586321763", "createdAt": "2021-02-09T09:09:51Z", "commit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQwOTowOTo1MVrOIiLdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQwNjoxNzoyN1rOIi6HKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjcxMDE2Nw==", "bodyText": "why 2? Is 1 is reserved for future use?", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r572710167", "createdAt": "2021-02-09T09:09:51Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-server/src/main/proto/graph-manager.proto", "diffHunk": "@@ -0,0 +1,38 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package grpc;\n+\n+option java_multiple_files = true;\n+option java_package = \"org.janusgraph.graphdb.server\";\n+option java_outer_classname = \"GraphManagerProto\";\n+\n+message JanusGraphContext {\n+    string graphName = 1;\n+}\n+\n+message GetJanusGraphContextByGraphNameRequest {\n+    string graphName = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzQzNTExNA==", "bodyText": "nitpick: this line is not correctly indented", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r573435114", "createdAt": "2021-02-10T04:19:33Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-server/pom.xml", "diffHunk": "@@ -22,6 +24,39 @@\n             <groupId>org.apache.tinkerpop</groupId>\n             <artifactId>gremlin-server</artifactId>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.protobuf</groupId>\n+            <artifactId>protobuf-java-util</artifactId>\n+            <version>${protobuf.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.grpc</groupId>\n+            <artifactId>grpc-netty-shaded</artifactId>\n+            <scope>runtime</scope>\n+            <version>${grpc.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.grpc</groupId>\n+            <artifactId>grpc-protobuf</artifactId>\n+            <version>${grpc.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.grpc</groupId>\n+            <artifactId>grpc-stub</artifactId>\n+            <version>${grpc.version}</version>\n+        </dependency>\n+        <dependency> <!-- necessary for Java 9+ -->\n+            <groupId>org.apache.tomcat</groupId>\n+            <artifactId>annotations-api</artifactId>\n+            <version>6.0.53</version>\n+            <scope>provided</scope>\n+          </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzQzOTA2Mg==", "bodyText": "Why making them public? Is this a requirement for snakeyaml?", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r573439062", "createdAt": "2021-02-10T04:34:17Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphSettings.java", "diffHunk": "@@ -0,0 +1,76 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.yaml.snakeyaml.TypeDescription;\n+import org.yaml.snakeyaml.Yaml;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+import org.yaml.snakeyaml.representer.Representer;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class JanusGraphSettings {\n+    public JanusGraphSettings.GrpcServerSettings grpcServer = new JanusGraphSettings.GrpcServerSettings();\n+\n+    private Settings gremlinSettings;\n+\n+    public static class GrpcServerSettings {\n+        public boolean enable = false;\n+        public int port = 10182;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzQ2MDg3MQ==", "bodyText": "@farodin91 Do you want to leave a TODO here and include the link to the proposed change (if you already created a thread on TinkerPop dev list)?", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r573460871", "createdAt": "2021-02-10T05:35:25Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphSettings.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.yaml.snakeyaml.TypeDescription;\n+import org.yaml.snakeyaml.Yaml;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+import org.yaml.snakeyaml.representer.Representer;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.FileInputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class JanusGraphSettings {\n+    public JanusGraphSettings.GrpcServerSettings grpcServer = new JanusGraphSettings.GrpcServerSettings();\n+\n+    public static class GrpcServerSettings {\n+        public boolean enable = false;\n+        public int port = 10182;\n+    }\n+    private Settings gremlinSettings;\n+\n+    public Settings GetGremlinSettings() {\n+        return gremlinSettings;\n+    }\n+\n+    public static JanusGraphSettings read(final String file) throws Exception {\n+        InputStream input = new FileInputStream(file);\n+        return read(input);\n+    }\n+\n+    public static JanusGraphSettings read(final InputStream stream) throws IOException {\n+        Objects.requireNonNull(stream);\n+        Constructor constructor = new Constructor(JanusGraphSettings.class);\n+        TypeDescription grpcServerSettings = new TypeDescription(JanusGraphSettings.GrpcServerSettings.class);\n+        constructor.addTypeDescription(grpcServerSettings);\n+        Representer representer = new Representer();\n+        representer.getPropertyUtils().setSkipMissingProperties(true);\n+\n+        String yamlInput = getStringFromInputStream(stream);\n+\n+        Yaml yaml = new Yaml(constructor, representer);\n+        JanusGraphSettings settings = yaml.loadAs(yamlInput, JanusGraphSettings.class);\n+        Yaml yamlMap = new Yaml();\n+        Map<String, Object> obj = yamlMap.load(yamlInput);\n+        obj.remove(\"grpcServer\");\n+        String dump = yamlMap.dump(obj);\n+        settings.gremlinSettings = Settings.read(new ByteArrayInputStream(dump.getBytes()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIzMTMzMw=="}, "originalCommit": {"oid": "857c8f1f970a3a277757a83ed576e144baeb98bf"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzQ3MzU1OQ==", "bodyText": "\"enabled\" sounds more suitable to me", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r573473559", "createdAt": "2021-02-10T06:14:24Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-server/src/main/java/org/janusgraph/graphdb/server/JanusGraphSettings.java", "diffHunk": "@@ -0,0 +1,76 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.yaml.snakeyaml.TypeDescription;\n+import org.yaml.snakeyaml.Yaml;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+import org.yaml.snakeyaml.representer.Representer;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class JanusGraphSettings {\n+    public JanusGraphSettings.GrpcServerSettings grpcServer = new JanusGraphSettings.GrpcServerSettings();\n+\n+    private Settings gremlinSettings;\n+\n+    public static class GrpcServerSettings {\n+        public boolean enable = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzQ3NDYwMA==", "bodyText": "janusgraph-server-with-server-configs.yaml sounds a bit confusing to me, coz it gives me an illusion that janusgraph-server-with(out)-serializers.yaml does not contain server configs. What about janusgraph-server-with-rpc.yaml?", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#discussion_r573474600", "createdAt": "2021-02-10T06:17:27Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-server/src/test/java/org/janusgraph/graphdb/server/JanusGraphSettingsTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.graphdb.server;\n+\n+import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class JanusGraphSettingsTest {\n+\n+    @Test\n+    public void testGrpcServerDefaultValues() throws Exception {\n+        JanusGraphSettings settings = JanusGraphSettings.read(\"src/test/resources/janusgraph-server-without-serializers.yaml\");\n+\n+        assertFalse(settings.grpcServer.enable);\n+        assertEquals(10182, settings.grpcServer.port);\n+    }\n+\n+    @Test\n+    public void testGrpcServerOverwriteDefaultValues() throws Exception {\n+        JanusGraphSettings settings = JanusGraphSettings.read(\"src/test/resources/janusgraph-server-with-server-configs.yaml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89edea7b0bd0870a284840ec543d446c111d6735"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8d7e7ab60dfbe2221b31200b27637c0f0653a18", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/a8d7e7ab60dfbe2221b31200b27637c0f0653a18", "committedDate": "2021-02-11T11:16:34Z", "message": "resolve pr comments"}, "afterCommit": {"oid": "3b4004011363eaf608fb307e8d6c577564c46097", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/3b4004011363eaf608fb307e8d6c577564c46097", "committedDate": "2021-02-11T11:16:52Z", "message": "resolve pr comments\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0dfc62fa68c1305fef2f99f77ec801ffb209a4f", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c0dfc62fa68c1305fef2f99f77ec801ffb209a4f", "committedDate": "2021-02-11T11:41:59Z", "message": "resolve pr comments\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b4004011363eaf608fb307e8d6c577564c46097", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/3b4004011363eaf608fb307e8d6c577564c46097", "committedDate": "2021-02-11T11:16:52Z", "message": "resolve pr comments\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}, "afterCommit": {"oid": "c0dfc62fa68c1305fef2f99f77ec801ffb209a4f", "author": {"user": {"login": "farodin91", "name": "Jan Jansen"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/c0dfc62fa68c1305fef2f99f77ec801ffb209a4f", "committedDate": "2021-02-11T11:41:59Z", "message": "resolve pr comments\n\nSigned-off-by: Jan Jansen <jan.jansen@gdata.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMDE4MzQw", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#pullrequestreview-590018340", "createdAt": "2021-02-14T06:21:46Z", "commit": {"oid": "c0dfc62fa68c1305fef2f99f77ec801ffb209a4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTAxOTg0", "url": "https://github.com/JanusGraph/janusgraph/pull/2221#pullrequestreview-591901984", "createdAt": "2021-02-17T07:31:32Z", "commit": {"oid": "c0dfc62fa68c1305fef2f99f77ec801ffb209a4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4640, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}