{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2OTcyMjc1", "number": 2279, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMjozMzo1M1rOFI0N1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxMDozMjozMlrOFJPNfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0Nzg4NDM5OnYy", "diffSide": "RIGHT", "path": "janusgraph-driver/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMjozMzo1M1rOIK88eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzoxMjo1MFrOILBLkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1NTE5Mg==", "bodyText": "Any reason for moving the  section?", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548355192", "createdAt": "2020-12-24T02:33:53Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-driver/pom.xml", "diffHunk": "@@ -229,4 +194,39 @@\n             </plugin>\n         </plugins>\n     </build>\n+    <profiles>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyNDU5NQ==", "bodyText": "Not really just cleanup the profile section is most of our Pom at the end of the file.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548424595", "createdAt": "2020-12-24T07:12:50Z", "author": {"login": "farodin91"}, "path": "janusgraph-driver/pom.xml", "diffHunk": "@@ -229,4 +194,39 @@\n             </plugin>\n         </plugins>\n     </build>\n+    <profiles>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1NTE5Mg=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzkwNzI5OnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-core.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMjo0OTo0OVrOIK9I_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzoxMTozMlrOILBKaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1ODM5Nw==", "bodyText": "Maybe I am missing some context, but I just wonder why you put berkeleyje in \"CI Core\" while CQL and Hbase have their separate workflows? Similarly, lucene is in \"CI Core\" while ES has its separate workflow.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548358397", "createdAt": "2020-12-24T02:49:49Z", "author": {"login": "li-boxuan"}, "path": ".github/workflows/ci-core.yml", "diffHunk": "@@ -0,0 +1,81 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Core\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: driver\n+          - module: server\n+          - module: test\n+          - module: inmemory\n+            args: \"-Dtest.skip.tp=false\"\n+          - module: berkeleyje\n+          - module: lucene", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyNDI5OQ==", "bodyText": "It is a timing thing. Core thing are not running for a long time. To restart a failed job you to have restart the complete job.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548424299", "createdAt": "2020-12-24T07:11:32Z", "author": {"login": "farodin91"}, "path": ".github/workflows/ci-core.yml", "diffHunk": "@@ -0,0 +1,81 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Core\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: driver\n+          - module: server\n+          - module: test\n+          - module: inmemory\n+            args: \"-Dtest.skip.tp=false\"\n+          - module: berkeleyje\n+          - module: lucene", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1ODM5Nw=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzkzNzA4OnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-backend-cql.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzoxMDo1NVrOIK9ZcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODoyODoyOVrOILtaYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MjYwOA==", "bodyText": "What about following the same rule as [tp-tests]?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if: \"contains(github.event.head_commit.message, '[cql-tests]')\"\n          \n          \n            \n                    if: \"github.event_name == 'push' && contains(github.event.head_commit.message, '[cql-tests]') || github.event_name == 'pull_request' && contains(github.event.pull_request.title, '[cql-tests]')\"\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\nand in RELEASING.md, shall we mention [cql-tests] in the Create a release commit section as well?", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548362608", "createdAt": "2020-12-24T03:10:55Z", "author": {"login": "li-boxuan"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18\n+        if: \"contains(github.event.head_commit.message, '[cql-tests]')\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2NDQyNQ==", "bodyText": "You may even make [full build] = [cql-tests] + [tp-tests] + (just in case more compatibility test suites added in the future)", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548364425", "createdAt": "2020-12-24T03:19:36Z", "author": {"login": "li-boxuan"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18\n+        if: \"contains(github.event.head_commit.message, '[cql-tests]')\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MjYwOA=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyNTc2MQ==", "bodyText": "I would move the full build stuff to a next PR.\nI will update check for CQL.\nI will try add some sentence to the releasing section.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548425761", "createdAt": "2020-12-24T07:17:11Z", "author": {"login": "farodin91"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18\n+        if: \"contains(github.event.head_commit.message, '[cql-tests]')\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MjYwOA=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE0OTI4Mg==", "bodyText": "#2302", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r549149282", "createdAt": "2020-12-27T18:28:29Z", "author": {"login": "farodin91"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18\n+        if: \"contains(github.event.head_commit.message, '[cql-tests]')\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MjYwOA=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0Nzk1MzE4OnYy", "diffSide": "RIGHT", "path": "janusgraph-all/src/test/java/org/janusgraph/core/EnsureCacheTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzoyMTo0NVrOIK9h9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxMDozNDozN1rOILiaMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2NDc4OQ==", "bodyText": "From your comment in the PR, I can see you added this test so that test dependencies can be cached in GitHub workflow. Can you add Javadoc here to illustrate it? By simply looking at the code itself, one might be confused.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548364789", "createdAt": "2020-12-24T03:21:45Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-all/src/test/java/org/janusgraph/core/EnsureCacheTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.core;\n+\n+import org.apache.commons.configuration.MapConfiguration;\n+import org.janusgraph.diskstorage.configuration.backend.CommonsConfiguration;\n+import org.janusgraph.graphdb.configuration.builder.GraphDatabaseConfigurationBuilder;\n+import org.janusgraph.graphdb.database.StandardJanusGraph;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.janusgraph.graphdb.configuration.GraphDatabaseConfiguration.STORAGE_BACKEND;\n+\n+public class EnsureCacheTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2OTAxMA==", "bodyText": "Agree here. It's not obvious what this test does. It's better to add some comments/javadoc to explain it", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548969010", "createdAt": "2020-12-26T10:34:37Z", "author": {"login": "porunov"}, "path": "janusgraph-all/src/test/java/org/janusgraph/core/EnsureCacheTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright 2020 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.core;\n+\n+import org.apache.commons.configuration.MapConfiguration;\n+import org.janusgraph.diskstorage.configuration.backend.CommonsConfiguration;\n+import org.janusgraph.graphdb.configuration.builder.GraphDatabaseConfigurationBuilder;\n+import org.janusgraph.graphdb.database.StandardJanusGraph;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.janusgraph.graphdb.configuration.GraphDatabaseConfiguration.STORAGE_BACKEND;\n+\n+public class EnsureCacheTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2NDc4OQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTE3MDQzOnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-backend-cql.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOTowNjo0N1rOILafZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxMDozNzo1NlrOILibSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgzOTI3MQ==", "bodyText": "In TravicCI when we run full build we also test 3.11.4 in addition to 3.0.18 and non-specified version", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548839271", "createdAt": "2020-12-25T09:06:47Z", "author": {"login": "porunov"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0ODY2MQ==", "bodyText": "3.11.4 which is 5 patch version below the no specified 3.11.9", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548848661", "createdAt": "2020-12-25T10:05:25Z", "author": {"login": "farodin91"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgzOTI3MQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2OTI5MQ==", "bodyText": "Got it. I'm good with skipping tests for 3.11.4 and leaving tests for 3.11.9 and 3.0.18", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548969291", "createdAt": "2020-12-26T10:37:56Z", "author": {"login": "porunov"}, "path": ".github/workflows/ci-backend-cql.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend CQL\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/diskstorage/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-byteordered -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/graphdb/cql/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur -Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-ssl -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+          - module: cql\n+            args: \"-Pcassandra3-murmur-client-auth -Dtest=\\\"**/diskstorage/cql/CQLStoreTest.java\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}\n+      - run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS }} ${{ matrix.args }}\n+      - name: cql 3.0.18", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgzOTI3MQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTE3ODg2OnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-backend-hbase.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToxNDoyMVrOILaj-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxODozMToyN1rOILeNmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MDQ0Mg==", "bodyText": "In TravisCI we also have arguments -Dmaven.javadoc.skip=true --show-version", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548840442", "createdAt": "2020-12-25T09:14:21Z", "author": {"login": "porunov"}, "path": ".github/workflows/ci-backend-hbase.yml", "diffHunk": "@@ -0,0 +1,89 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend Hbase\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/diskstorage/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/graphdb/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/diskstorage/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/graphdb/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/hadoop/*\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0ODg2Ng==", "bodyText": "I'm not sure what this brings. I will look up the introduction commit", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548848866", "createdAt": "2020-12-25T10:06:44Z", "author": {"login": "farodin91"}, "path": ".github/workflows/ci-backend-hbase.yml", "diffHunk": "@@ -0,0 +1,89 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend Hbase\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/diskstorage/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/graphdb/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/diskstorage/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/graphdb/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/hadoop/*\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MDQ0Mg=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkwMDI0OQ==", "bodyText": "I don't know if we need these options. I just noticed that we used them before.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548900249", "createdAt": "2020-12-25T18:31:27Z", "author": {"login": "porunov"}, "path": ".github/workflows/ci-backend-hbase.yml", "diffHunk": "@@ -0,0 +1,89 @@\n+# Copyright 2020 JanusGraph Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: CI Backend Hbase\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+  push:\n+    paths-ignore:\n+    - 'docs/**'\n+    - '.github/workflows/ci-docs.yml'\n+    - 'requirements.txt'\n+    - 'docs.Dockerfile'\n+    - '*.md'\n+\n+env:\n+  BUILD_MAVEN_OPTS: \"-DskipTests=true --batch-mode --also-make\"\n+  VERIFY_MAVEN_OPTS: \"-Pcoverage\"\n+\n+jobs:\n+  build-all:\n+    runs-on: ubuntu-20.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}\n+      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}\n+\n+  tests:\n+    runs-on: ubuntu-20.04\n+    needs: build-all\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        include:\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/diskstorage/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/graphdb/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            args: \"-Dtest=\\\"**/hadoop/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/diskstorage/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/graphdb/hbase/*\\\"\"\n+          - module: hbase-parent/janusgraph-hbase-10\n+            install-args: \"-Dhbase.profile -Phbase2\"\n+            args: \"-Dtest=\\\"**/hadoop/*\\\"\"\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS }} ${{ matrix.install-args }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MDQ0Mg=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MjMwNDc2OnYy", "diffSide": "RIGHT", "path": "janusgraph-cql/src/test/java/org/janusgraph/diskstorage/cql/CQLDistributedStoreManagerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxMDoyODoyN1rOILiYhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODozODo0OVrOILtehw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2ODU4MQ==", "bodyText": "I think we may need to add an issue to either fix this test to be able to run in GitHub Actions or rewrite this test. So that we could enable it back later. As for now I'm fine disabling it", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548968581", "createdAt": "2020-12-26T10:28:27Z", "author": {"login": "porunov"}, "path": "janusgraph-cql/src/test/java/org/janusgraph/diskstorage/cql/CQLDistributedStoreManagerTest.java", "diffHunk": "@@ -54,6 +55,7 @@ public void tearDown() throws BackendException {\n     @Override\n     @Test\n     @FeatureFlag(feature = JanusGraphFeature.OrderedScan)\n+    @Disabled(value = \"Test can't run inside of a container\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk3MTY2OA==", "bodyText": "For me, we could also remove the test. I don\u2018t see any value of the current test.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548971668", "createdAt": "2020-12-26T11:08:48Z", "author": {"login": "farodin91"}, "path": "janusgraph-cql/src/test/java/org/janusgraph/diskstorage/cql/CQLDistributedStoreManagerTest.java", "diffHunk": "@@ -54,6 +55,7 @@ public void tearDown() throws BackendException {\n     @Override\n     @Test\n     @FeatureFlag(feature = JanusGraphFeature.OrderedScan)\n+    @Disabled(value = \"Test can't run inside of a container\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2ODU4MQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk3MjIzNg==", "bodyText": "Let's just open an issue for this test and then either fix it or remove as a separate PR. Don't remove it in this PR", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548972236", "createdAt": "2020-12-26T11:15:59Z", "author": {"login": "porunov"}, "path": "janusgraph-cql/src/test/java/org/janusgraph/diskstorage/cql/CQLDistributedStoreManagerTest.java", "diffHunk": "@@ -54,6 +55,7 @@ public void tearDown() throws BackendException {\n     @Override\n     @Test\n     @FeatureFlag(feature = JanusGraphFeature.OrderedScan)\n+    @Disabled(value = \"Test can't run inside of a container\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2ODU4MQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDM0Mw==", "bodyText": "#2303", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r549150343", "createdAt": "2020-12-27T18:38:49Z", "author": {"login": "farodin91"}, "path": "janusgraph-cql/src/test/java/org/janusgraph/diskstorage/cql/CQLDistributedStoreManagerTest.java", "diffHunk": "@@ -54,6 +55,7 @@ public void tearDown() throws BackendException {\n     @Override\n     @Test\n     @FeatureFlag(feature = JanusGraphFeature.OrderedScan)\n+    @Disabled(value = \"Test can't run inside of a container\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2ODU4MQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MjMwNzE3OnYy", "diffSide": "RIGHT", "path": "janusgraph-berkeleyje/src/test/java/org/janusgraph/graphdb/berkeleyje/BerkeleyGraphTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxMDozMjozMlrOILiZjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo0MjowOFrOILtfpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2ODg0NQ==", "bodyText": "This test is just very Flaky test. If renew takes less then 1 MS, it will not throw an error and so the test will fail.\nI think we just need to add an issue to rewrite this test later to artificially increase renew time.", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r548968845", "createdAt": "2020-12-26T10:32:32Z", "author": {"login": "porunov"}, "path": "janusgraph-berkeleyje/src/test/java/org/janusgraph/graphdb/berkeleyje/BerkeleyGraphTest.java", "diffHunk": "@@ -112,19 +113,15 @@ public void testConcurrentConsistencyEnforcement() {\n         //Do nothing TODO: Figure out why this is failing in BerkeleyDB!!\n     }\n \n+    @Disabled(\"Unable to run on GitHub Actions.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDYzMA==", "bodyText": "#2304", "url": "https://github.com/JanusGraph/janusgraph/pull/2279#discussion_r549150630", "createdAt": "2020-12-27T18:42:08Z", "author": {"login": "farodin91"}, "path": "janusgraph-berkeleyje/src/test/java/org/janusgraph/graphdb/berkeleyje/BerkeleyGraphTest.java", "diffHunk": "@@ -112,19 +113,15 @@ public void testConcurrentConsistencyEnforcement() {\n         //Do nothing TODO: Figure out why this is failing in BerkeleyDB!!\n     }\n \n+    @Disabled(\"Unable to run on GitHub Actions.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk2ODg0NQ=="}, "originalCommit": {"oid": "328654dc71dfd1a6a0b1682a8e252d8e15b754a7"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1423, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}