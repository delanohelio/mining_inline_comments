{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTg2Mjc5", "number": 2237, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzoxNjo0MVrOEtQf3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMToxMToxMFrOFXaudg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODkxNjc3OnYy", "diffSide": "RIGHT", "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzoxNjo0MVrOHg8vMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowMjozOVrOHxf6_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMTYwMw==", "bodyText": "might be a good idea to keep _traversal here and in line 249 below as a referenced constant.\nSeems to imply assumption of convention used in multiple places as a \"magic string\". In which case, changing in 1 place will break overall & dependent functions.\nAlso referenced here in the master branch.", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r504311603", "createdAt": "2020-10-13T23:16:41Z", "author": {"login": "angadsalaria"}, "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "diffHunk": "@@ -139,6 +139,7 @@ public static JanusGraph close(String graphName) throws Exception {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final Graph graph = jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(graphName + \"_traversal\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NTI3Ng==", "bodyText": "Agree with @angadsalaria .\nWe can also make a static method which converts graphName to Traversal Source name. Something like:\npublic static String toTraversalSourceName(String graphName){\n    return graphName + \"_traversal\";\n}\n\nand then use that method to convert graphName to traversalSourceName.\nI.e.:\njgm.removeTraversalSource(toTraversalSourceName(graphName));", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521665276", "createdAt": "2020-11-11T22:02:39Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "diffHunk": "@@ -139,6 +139,7 @@ public static JanusGraph close(String graphName) throws Exception {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final Graph graph = jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(graphName + \"_traversal\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMTYwMw=="}, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDM5MjQyOnYy", "diffSide": "RIGHT", "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMTo1NTo0NVrOHxfu3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODozNjozOFrOIF_BUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2MjE3Mg==", "bodyText": "As I understand, we should remove null bindings for the key as well. Thus, I don't think we need if (bindings.get(key) != null).\nI.e. instead of:\nif (bindings.get(key) != null) {\n    gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n}\n\nWe need just:\nbindings.remove(key);\n\nCorrect me if I'm wrong here", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521662172", "createdAt": "2020-11-11T21:55:45Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -270,5 +274,13 @@ private void updateTraversalSource(String graphName, Graph graph, GremlinExecuto\n         graphManager.putTraversalSource(traversalName, traversalSource);\n     }\n \n+    private void removeBinding(String key) {\n+        if (null != gremlinExecutor) {\n+            final Bindings bindings = gremlinExecutor.getScriptEngineManager().getBindings();\n+            if (bindings.get(key) != null) {\n+                gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NjMyMQ==", "bodyText": "Bindings.get(key) == null  is ambiguous. From the docs:\n\n[...] if this map contains a mapping from a key k to a value v such that (key==null ? k==null : key.equals(k)), then this method returns v; otherwise it returns null.\n\nTherefore !=null means that the binding contains a key which is also not null. However, I did not research how a null entry in a Binding arises and which meaning it has in the context of the GremlinExecutor and therefore I'm not sure if such an entry should remain here or not. But from my naive understanding, @porunov is right here.", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r543146321", "createdAt": "2020-12-15T08:36:38Z", "author": {"login": "rngcntr"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -270,5 +274,13 @@ private void updateTraversalSource(String graphName, Graph graph, GremlinExecuto\n         graphManager.putTraversalSource(traversalName, traversalSource);\n     }\n \n+    private void removeBinding(String key) {\n+        if (null != gremlinExecutor) {\n+            final Bindings bindings = gremlinExecutor.getScriptEngineManager().getBindings();\n+            if (bindings.get(key) != null) {\n+                gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2MjE3Mg=="}, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQxNTAyOnYy", "diffSide": "RIGHT", "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowMzo0MlrOHxf8hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowMzo0MlrOHxf8hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NTY2OA==", "bodyText": "Same here, if we would have a dedicated method to convert graphName to traversalSourceName we could change this line to:\njgm.removeTraversalSource(toTraversalSourceName(graphName));", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521665668", "createdAt": "2020-11-11T22:03:42Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "diffHunk": "@@ -243,7 +244,9 @@ private static void removeGraphFromCache(final String graphName) {\n     private static void removeGraphFromCache(final JanusGraph graph) {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n-        jgm.removeGraph(((StandardJanusGraph) graph).getGraphName());\n+        final String graphName = ((StandardJanusGraph) graph).getGraphName();\n+        jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(graphName + \"_traversal\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQxODcyOnYy", "diffSide": "RIGHT", "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNDo1OFrOHxf-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQyMDoyNzo1N1rOIgF7pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA==", "bodyText": "Shouldn't we convert gName to tsName? I.e. removeBinding(gName + \"_traversal\");", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521666240", "createdAt": "2020-11-11T22:04:58Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -252,6 +254,8 @@ public Graph openGraph(String gName, Function<String, Graph> thunk) {\n     @Override\n     public Graph removeGraph(String gName) {\n         if (gName == null) return null;\n+        // Remove the graph from the script engine bindings so that closed/dropped graph instances do not leak\n+        removeBinding(gName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDUwMDgxOA==", "bodyText": "In this case, we need to refer the graph itself so I believe it should be gName.", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r570500818", "createdAt": "2021-02-04T19:50:10Z", "author": {"login": "twilmes"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -252,6 +254,8 @@ public Graph openGraph(String gName, Function<String, Graph> thunk) {\n     @Override\n     public Graph removeGraph(String gName) {\n         if (gName == null) return null;\n+        // Remove the graph from the script engine bindings so that closed/dropped graph instances do not leak\n+        removeBinding(gName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA=="}, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDUyMjUzNA==", "bodyText": "You right, thanks!", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r570522534", "createdAt": "2021-02-04T20:27:57Z", "author": {"login": "porunov"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -252,6 +254,8 @@ public Graph openGraph(String gName, Function<String, Graph> thunk) {\n     @Override\n     public Graph removeGraph(String gName) {\n         if (gName == null) return null;\n+        // Remove the graph from the script engine bindings so that closed/dropped graph instances do not leak\n+        removeBinding(gName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA=="}, "originalCommit": {"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwMDk5NDQ2OnYy", "diffSide": "RIGHT", "path": "janusgraph-test/src/test/java/org/janusgraph/core/ConfiguredGraphFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMToxMToxMFrOIg8Utg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMToxMToxMFrOIg8Utg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQxMzY4Ng==", "bodyText": "This test seems to be flaky. I encountered \"ConfiguredGraphFactoryTest.dropShouldCleanUpTraversalSourceAndBindings:312 expected:  but was: \" twice and had to retry to make it pass.", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r571413686", "createdAt": "2021-02-06T11:11:10Z", "author": {"login": "li-boxuan"}, "path": "janusgraph-test/src/test/java/org/janusgraph/core/ConfiguredGraphFactoryTest.java", "diffHunk": "@@ -278,5 +286,54 @@ public void ensureCallingGraphCloseResultsInNewGraphReferenceOnNextCallToOpen()\n             ConfiguredGraphFactory.close(\"graph1\");\n         }\n     }\n+\n+    @Test\n+    public void dropShouldCleanUpTraversalSourceAndBindings() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49405b1fc8e29af42df2c6b6858e731720099fca"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1383, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}