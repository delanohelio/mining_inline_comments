{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTIzMTAy", "number": 2007, "title": "Fix some issues with FulgoraGraphComputer", "bodyText": "Add support for job without combiner - just combine message into list\nDetach elements before it will be written into graph for avoid serialization issue\nNow ConnectedComponentTest and ShortestPathVertexProgramTest passed\nTP tests for BerkeleyJanusGraphComputerTest passed\nOnly two failed but on master too\nWhereTest$Traversals\nWhereTest$Traversals.g_V_hasXageX_asXaX_out_in_hasXageX_asXbX_selectXa_bX_whereXa_outXknowsX_bX\nWhereTest$Traversals.g_V_asXaX_outXcreatedX_whereXasXaX_name_isXjoshXX_inXcreatedX_name\n\nPossible cause is PathProcessorStrategy it generate random alias for step for each vertexJob iteration. If I setup is.testing that tests passed\nSigned-off-by: Pavel Ershov owner.mad.epa@gmail.com\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-03-03T12:28:49Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2007", "merged": true, "mergeCommit": {"oid": "1a5a261a97dae68bda901b1b479bac70b55d17bf"}, "closed": true, "closedAt": "2020-04-09T13:34:22Z", "author": {"login": "mad"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKBVD3AH2gAyMzgyOTIzMTAyOmU1NzdkODRhZDY3ZDA1MzQ3ODRiYWYwM2U3ZjMyM2I3MWJlZDU4ZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSsdyugFqTM4Mzc0NzIwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e577d84ad67d0534784baf03e7f323b71bed58dc", "author": {"user": {"login": "mad", "name": "Pavel"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/e577d84ad67d0534784baf03e7f323b71bed58dc", "committedDate": "2020-03-03T12:18:14Z", "message": "Fix some issues with FulgoraGraphComputer\n\nAdd support for job without combiner - just combine message into list\nDetach elements before it will be written into graph for avoid serialization issue\n\nNow ConnectedComponentTest and ShortestPathVertexProgramTest passed\n\nSigned-off-by: Pavel Ershov <owner.mad.epa@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTc1NzIw", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#pullrequestreview-367975720", "createdAt": "2020-03-03T13:28:38Z", "commit": {"oid": "e577d84ad67d0534784baf03e7f323b71bed58dc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzoyODozOFrOFxFrbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToxODoyNlrOFxKHxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxNzU4Mw==", "bodyText": "Why did you remove this opt-in?", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#discussion_r387017583", "createdAt": "2020-03-03T13:28:38Z", "author": {"login": "FlorianHockmann"}, "path": "janusgraph-core/src/main/java/org/janusgraph/core/JanusGraph.java", "diffHunk": "@@ -30,7 +30,6 @@\n @Graph.OptIn(Graph.OptIn.SUITE_STRUCTURE_STANDARD)\n @Graph.OptIn(Graph.OptIn.SUITE_PROCESS_STANDARD)\n @Graph.OptIn(Graph.OptIn.SUITE_PROCESS_COMPUTER)\n-@Graph.OptIn(\"org.janusgraph.blueprints.process.traversal.strategy.JanusGraphStrategySuite\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e577d84ad67d0534784baf03e7f323b71bed58dc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5MDM3Mw==", "bodyText": "(nitpick) I tried to understand what this function does but failed. If you can move some of this into its own method and give that a good name that tells what the code does, then that would be helpful to any future reader in my opinion.\nHowever, all the Fulgora code is written this way so this added code fits in nicely here \ud83d\ude05", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#discussion_r387090373", "createdAt": "2020-03-03T15:18:26Z", "author": {"login": "FlorianHockmann"}, "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/olap/computer/FulgoraGraphComputer.java", "diffHunk": "@@ -373,13 +378,21 @@ private Graph writeMutatedPropertiesBackIntoGraph() {\n             }\n \n             //TODO: Filter based on VertexProgram\n+            HaltedTraverserStrategy haltedTraverserStrategy = HaltedTraverserStrategy.reference();\n             Map<Long, Map<String, Object>> mutatedProperties = Maps.transformValues(vertexMemory.getMutableVertexProperties(),\n-                new Function<Map<String, Object>, Map<String, Object>>() {\n-                    @Nullable\n-                    @Override\n-                    public Map<String, Object> apply(final Map<String, Object> o) {\n-                        return Maps.filterKeys(o, s -> !VertexProgramHelper.isTransientVertexComputeKey(s, vertexProgram.getVertexComputeKeys()));\n-                    }\n+                (Function<Map<String, Object>, Map<String, Object>>) o -> {\n+                    Map<String, Object> nonTransientKeys =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e577d84ad67d0534784baf03e7f323b71bed58dc"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzQ3MjA4", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#pullrequestreview-383747208", "createdAt": "2020-03-30T11:05:05Z", "commit": {"oid": "e577d84ad67d0534784baf03e7f323b71bed58dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4723, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}