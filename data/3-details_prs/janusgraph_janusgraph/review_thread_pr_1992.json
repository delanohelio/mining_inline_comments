{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxODI5NDk2", "number": 1992, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjoyNzozMFrODkP5RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjoyNzozMFrODkP5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM1NzQ4OnYy", "diffSide": "RIGHT", "path": "docs/basics/schema.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjoyNzozMFrOFwdvqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDowMDo1M1rOFwgfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2MzMwNQ==", "bodyText": "Please highlight Integer  and int as code by using ``: Integer and `int`.\nAlso, are those really called object types? I just searched for a term for these and found either wrapper classes or reference types.", "url": "https://github.com/JanusGraph/janusgraph/pull/1992#discussion_r386363305", "createdAt": "2020-03-02T12:27:30Z", "author": {"login": "FlorianHockmann"}, "path": "docs/basics/schema.md", "diffHunk": "@@ -105,7 +105,8 @@ Use `dataType(Class)` to define the data type of a property key.\n JanusGraph will enforce that all values associated with the key have the\n configured data type and thereby ensures that data added to the graph is\n valid. For instance, one can define that the `name` key has a String\n-data type.\n+data type. Note that primitive types are not supported. Use the corresponding\n+object type, e.g. Integer instead of int.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3c43bb74222f8207d9f1a6107b94472d9f4015"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MzI5Mg==", "bodyText": "Edited. I agree wrapper class or reference type sounds more correct. I was using 'object type' simply because the code said so. I can edit that exception message as well in this PR if needed.\n\n  \n    \n      janusgraph/janusgraph-core/src/main/java/org/janusgraph/graphdb/types/StandardPropertyKeyMaker.java\n    \n    \n        Lines 103 to 106\n      in\n      d0e5eff\n    \n    \n    \n    \n\n        \n          \n           public PropertyKey make() { \n        \n\n        \n          \n               Preconditions.checkArgument(dataType != null, \"Need to specify a datatype\"); \n        \n\n        \n          \n               Preconditions.checkArgument(tx.validDataType(dataType), \"Not a supported data type: %s\",dataType); \n        \n\n        \n          \n               Preconditions.checkArgument(!dataType.isPrimitive(), \"Primitive types are not supported. Use the corresponding object type, e.g. Integer.class instead of int.class [%s]\", dataType);", "url": "https://github.com/JanusGraph/janusgraph/pull/1992#discussion_r386373292", "createdAt": "2020-03-02T12:50:36Z", "author": {"login": "li-boxuan"}, "path": "docs/basics/schema.md", "diffHunk": "@@ -105,7 +105,8 @@ Use `dataType(Class)` to define the data type of a property key.\n JanusGraph will enforce that all values associated with the key have the\n configured data type and thereby ensures that data added to the graph is\n valid. For instance, one can define that the `name` key has a String\n-data type.\n+data type. Note that primitive types are not supported. Use the corresponding\n+object type, e.g. Integer instead of int.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2MzMwNQ=="}, "originalCommit": {"oid": "7e3c43bb74222f8207d9f1a6107b94472d9f4015"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwNTA0NA==", "bodyText": "Oh, I didn't compare the two messages. Would be good to have this consistent between docs and the error message so it would be good if you could also update the error message.", "url": "https://github.com/JanusGraph/janusgraph/pull/1992#discussion_r386405044", "createdAt": "2020-03-02T13:54:59Z", "author": {"login": "FlorianHockmann"}, "path": "docs/basics/schema.md", "diffHunk": "@@ -105,7 +105,8 @@ Use `dataType(Class)` to define the data type of a property key.\n JanusGraph will enforce that all values associated with the key have the\n configured data type and thereby ensures that data added to the graph is\n valid. For instance, one can define that the `name` key has a String\n-data type.\n+data type. Note that primitive types are not supported. Use the corresponding\n+object type, e.g. Integer instead of int.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2MzMwNQ=="}, "originalCommit": {"oid": "7e3c43bb74222f8207d9f1a6107b94472d9f4015"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwODM4NA==", "bodyText": "Sure, done", "url": "https://github.com/JanusGraph/janusgraph/pull/1992#discussion_r386408384", "createdAt": "2020-03-02T14:00:53Z", "author": {"login": "li-boxuan"}, "path": "docs/basics/schema.md", "diffHunk": "@@ -105,7 +105,8 @@ Use `dataType(Class)` to define the data type of a property key.\n JanusGraph will enforce that all values associated with the key have the\n configured data type and thereby ensures that data added to the graph is\n valid. For instance, one can define that the `name` key has a String\n-data type.\n+data type. Note that primitive types are not supported. Use the corresponding\n+object type, e.g. Integer instead of int.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2MzMwNQ=="}, "originalCommit": {"oid": "7e3c43bb74222f8207d9f1a6107b94472d9f4015"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1544, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}