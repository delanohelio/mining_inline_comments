{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MTAyNzA2", "number": 2182, "title": "Fix testNestedWrites testcase in JanusGraphIndexTest", "bodyText": "The test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\nRelated to #2176\nNote that this does not fix the problem stated in #2176, but fix the\nflaky test itself to uncover the problem.\n\nThank you for contributing to JanusGraph!\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n Is there an issue associated with this PR? Is it referenced in the commit message?\n Does your PR body contain #xyz where xyz is the issue number you are trying to resolve?\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n Is your initial contribution a single, squashed commit?\n\nFor code changes:\n\n Have you written and/or updated unit tests to verify your changes?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE.txt file, including the main LICENSE.txt file in the root of this repository?\n If applicable, have you updated the NOTICE.txt file, including the main NOTICE.txt file found in the root of this repository?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n If this PR is a documentation-only change, have you added a [doc only]\ntag to the first line of your commit message to avoid spending CPU cycles in\nTravis CI when no code, tests, or build configuration are modified?\n\nNote:\nPlease ensure that once the PR is submitted, you check Travis CI for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-08-09T03:49:16Z", "url": "https://github.com/JanusGraph/janusgraph/pull/2182", "merged": true, "mergeCommit": {"oid": "677333bcd699b7519ebb9caa198f41354307e49d"}, "closed": true, "closedAt": "2020-10-06T12:51:29Z", "author": {"login": "li-boxuan"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9FaHngBqjM2MzYxNTU0NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPyGUJgFqTUwMjYwODA3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8422c93d52c19be987408c7f067ee9d3c242b30a", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/8422c93d52c19be987408c7f067ee9d3c242b30a", "committedDate": "2020-08-09T03:47:25Z", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "d32db08b5c4322c49887faf245a0b4848a9e906e", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d32db08b5c4322c49887faf245a0b4848a9e906e", "committedDate": "2020-08-09T03:52:50Z", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTIwNzYy", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#pullrequestreview-473120762", "createdAt": "2020-08-24T05:00:29Z", "commit": {"oid": "d32db08b5c4322c49887faf245a0b4848a9e906e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTowMDoyOVrOHFUq1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTowMjozMVrOHFUsyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0MzU3Mg==", "bodyText": "What if there are valid non-ghost vertices within the Iterable that just have no neighbors?\nI think they are considered \"removed\" here, right? Should they?", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475343572", "createdAt": "2020-08-24T05:00:29Z", "author": {"login": "rngcntr"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -1809,14 +1810,39 @@ private void testNestedWrites(String initialValue, String updatedValue, TestInfo\n         propDeleter.commit();\n \n         // The vertex must not exist after deletion\n+        // See https://github.com/JanusGraph/janusgraph/issues/2176. The vertex is deleted from storage backend, but\n+        // may not be deleted from index backend\n         graph.tx().rollback();\n         assertNull(getV(graph, id));\n-        assertEmpty(graph.query().has(propName).vertices());\n+        assertTrue(verticesRemoved(graph.query().has(propName).vertices()));\n         if (null != updatedValue)\n-            assertEmpty(graph.query().has(propName, updatedValue).vertices());\n+            assertTrue(verticesRemoved(graph.query().has(propName, updatedValue).vertices()));\n         graph.tx().rollback();\n     }\n \n+    /**\n+     * Check whether given iterable does not contain any valid vertex\n+     * This function returns true if either of the following conditions holds:\n+     * 1) the iterable is empty\n+     * 2) all vertices in the iterable are phantom vertices\n+     * @param vertices An iterable of vertices\n+     * @return boolean indicating if given vertices do not exist\n+     */\n+    private boolean verticesRemoved(Iterable<JanusGraphVertex> vertices) {\n+        if (Iterables.isEmpty(vertices)) {\n+            return true;\n+        }\n+        StandardJanusGraphTx queryTx = (StandardJanusGraphTx) graph.newTransaction();\n+        for (JanusGraphVertex v : vertices) {\n+            if (!graph.edgeQuery(v.longId(), graph.vertexExistenceQuery, queryTx.getTxHandle()).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d32db08b5c4322c49887faf245a0b4848a9e906e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NDA3Mw==", "bodyText": "What's the logical difference between this line and the original one?", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475344073", "createdAt": "2020-08-24T05:02:31Z", "author": {"login": "rngcntr"}, "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -1785,7 +1786,7 @@ private void testNestedWrites(String initialValue, String updatedValue, TestInfo\n \n         // Write schema and one vertex\n         final PropertyKey prop = makeKey(propName, String.class);\n-        createExternalVertexIndex(prop, INDEX);\n+        mgmt.buildIndex(\"mixed\", Vertex.class).addKey(prop, Mapping.STRING.asParameter()).buildMixedIndex(INDEX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d32db08b5c4322c49887faf245a0b4848a9e906e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc2c1e0c79e836948c206d383d3e1c287d4e1283", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/bc2c1e0c79e836948c206d383d3e1c287d4e1283", "committedDate": "2020-08-30T15:34:34Z", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d32db08b5c4322c49887faf245a0b4848a9e906e", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/d32db08b5c4322c49887faf245a0b4848a9e906e", "committedDate": "2020-08-09T03:52:50Z", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}, "afterCommit": {"oid": "bc2c1e0c79e836948c206d383d3e1c287d4e1283", "author": {"user": {"login": "li-boxuan", "name": "Boxuan Li"}}, "url": "https://github.com/JanusGraph/janusgraph/commit/bc2c1e0c79e836948c206d383d3e1c287d4e1283", "committedDate": "2020-08-30T15:34:34Z", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjA4MDcz", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#pullrequestreview-502608073", "createdAt": "2020-10-06T06:08:15Z", "commit": {"oid": "bc2c1e0c79e836948c206d383d3e1c287d4e1283"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4609, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}