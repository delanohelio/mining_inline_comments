{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzI1MDA0", "number": 1976, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNzoyMTo0N1rODhal7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTozMTo1NlrODjP9Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MzY1Mjk0OnYy", "diffSide": "RIGHT", "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/log/kcvs/KCVSLog.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNzoyMTo0N1rOFsIgvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxOTo1MzoxMFrOGL5o0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyMTExNw==", "bodyText": "Issue found: An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.", "url": "https://github.com/JanusGraph/janusgraph/pull/1976#discussion_r381821117", "createdAt": "2020-02-20T07:21:47Z", "author": {"login": "FlorianHockmann"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/log/kcvs/KCVSLog.java", "diffHunk": "@@ -741,6 +741,9 @@ public void run() {\n                 }\n                 messageTimeStart = messageTimeEnd;\n             } catch (Throwable e) {\n+                if (e instanceof PermanentBackendException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ac81803b292cdc8d9dc7d815189bfd0cfe13ee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4MDA2OA==", "bodyText": "Good point", "url": "https://github.com/JanusGraph/janusgraph/pull/1976#discussion_r384780068", "createdAt": "2020-02-26T21:34:35Z", "author": {"login": "farodin91"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/log/kcvs/KCVSLog.java", "diffHunk": "@@ -741,6 +741,9 @@ public void run() {\n                 }\n                 messageTimeStart = messageTimeEnd;\n             } catch (Throwable e) {\n+                if (e instanceof PermanentBackendException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyMTExNw=="}, "originalCommit": {"oid": "f1ac81803b292cdc8d9dc7d815189bfd0cfe13ee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzMTg1OA==", "bodyText": "I add another fix for that. PermanentBackendException will be contains in Throwable cause but not direct exception", "url": "https://github.com/JanusGraph/janusgraph/pull/1976#discussion_r415131858", "createdAt": "2020-04-25T19:53:10Z", "author": {"login": "mad"}, "path": "janusgraph-core/src/main/java/org/janusgraph/diskstorage/log/kcvs/KCVSLog.java", "diffHunk": "@@ -741,6 +741,9 @@ public void run() {\n                 }\n                 messageTimeStart = messageTimeEnd;\n             } catch (Throwable e) {\n+                if (e instanceof PermanentBackendException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyMTExNw=="}, "originalCommit": {"oid": "f1ac81803b292cdc8d9dc7d815189bfd0cfe13ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mjg4MTQyOnYy", "diffSide": "RIGHT", "path": "janusgraph-berkeleyje/src/main/java/org/janusgraph/diskstorage/berkeleyje/BerkeleyJEStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTozMTo1NlrOFu9B0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxOToyODo1MVrOGL5YYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3ODcwNA==", "bodyText": "It would be good to know all possibilities here.", "url": "https://github.com/JanusGraph/janusgraph/pull/1976#discussion_r384778704", "createdAt": "2020-02-26T21:31:56Z", "author": {"login": "farodin91"}, "path": "janusgraph-berkeleyje/src/main/java/org/janusgraph/diskstorage/berkeleyje/BerkeleyJEStoreManager.java", "diffHunk": "@@ -67,6 +67,11 @@\n             \"The BDB record lock mode used for read operations\",\n             ConfigOption.Type.MASKABLE, String.class, LockMode.DEFAULT.toString(), disallowEmpty(String.class));\n \n+    public static final ConfigOption<String> CACHE_MODE =\n+        new ConfigOption<>(BERKELEY_NS, \"cache-mode\",\n+            \"Modes that can be specified for control over caching of records in the JE in-memory cache\",\n+            ConfigOption.Type.MASKABLE,  String.class, CacheMode.DEFAULT.toString(), disallowEmpty(String.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ac81803b292cdc8d9dc7d815189bfd0cfe13ee"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEyNzY1MQ==", "bodyText": "I don't think this possibilities will be useful, because it is internal modes of bdb and for understanding it required consult with javadoc", "url": "https://github.com/JanusGraph/janusgraph/pull/1976#discussion_r415127651", "createdAt": "2020-04-25T19:28:51Z", "author": {"login": "mad"}, "path": "janusgraph-berkeleyje/src/main/java/org/janusgraph/diskstorage/berkeleyje/BerkeleyJEStoreManager.java", "diffHunk": "@@ -67,6 +67,11 @@\n             \"The BDB record lock mode used for read operations\",\n             ConfigOption.Type.MASKABLE, String.class, LockMode.DEFAULT.toString(), disallowEmpty(String.class));\n \n+    public static final ConfigOption<String> CACHE_MODE =\n+        new ConfigOption<>(BERKELEY_NS, \"cache-mode\",\n+            \"Modes that can be specified for control over caching of records in the JE in-memory cache\",\n+            ConfigOption.Type.MASKABLE,  String.class, CacheMode.DEFAULT.toString(), disallowEmpty(String.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3ODcwNA=="}, "originalCommit": {"oid": "f1ac81803b292cdc8d9dc7d815189bfd0cfe13ee"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1532, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}