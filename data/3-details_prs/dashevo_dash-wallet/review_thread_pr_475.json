{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNjk3MDU2", "number": 475, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozOTowNlrOEVnSmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTo1NDozMlrOEYaQDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDk5MjkxOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/PaymentsPayFragment.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozOTowNlrOG8eMpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoxNzozM1rOG81mIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjUwMQ==", "bodyText": "This is commented out until I determine which contacts should be included.  Currently all payable contacts are included, even those we didn't accept.\nActually, the Live data should do this filter before it posts the results.", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r466062501", "createdAt": "2020-08-05T23:39:06Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/PaymentsPayFragment.kt", "diffHunk": "@@ -195,4 +227,18 @@ class PaymentsPayFragment : Fragment() {\n         fun selectContactToPay()\n     }\n \n+    private fun processResults(data: List<UsernameSearchResult>) {\n+        val results = ArrayList<UsernameSearchResult>()\n+\n+        val contacts = data.filter { /*it.requestSent &&*/ it.requestReceived }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086a8adcfdea08efa723778deced20e396580bf8"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0NTg1Nw==", "bodyText": "This has been resolved: 1cc68c7", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r466445857", "createdAt": "2020-08-06T14:17:33Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/PaymentsPayFragment.kt", "diffHunk": "@@ -195,4 +227,18 @@ class PaymentsPayFragment : Fragment() {\n         fun selectContactToPay()\n     }\n \n+    private fun processResults(data: List<UsernameSearchResult>) {\n+        val results = ArrayList<UsernameSearchResult>()\n+\n+        val contacts = data.filter { /*it.requestSent &&*/ it.requestReceived }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjUwMQ=="}, "originalCommit": {"oid": "086a8adcfdea08efa723778deced20e396580bf8"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDk5NTE2OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/FrequentContactsAdapter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo0MDowM1rOG8eN2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo0MDowM1rOG8eN2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjgxMQ==", "bodyText": "This is probably now in 3 adapter classes.  It can be refactored to a utility class.", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r466062811", "createdAt": "2020-08-05T23:40:03Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/FrequentContactsAdapter.kt", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Dash Core Group.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.view.LayoutInflater\n+import android.view.ViewGroup\n+/*\n+ * Copyright 2020 Dash Core Group\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import androidx.recyclerview.widget.RecyclerView\n+import de.schildbach.wallet.data.UsernameSearchResult\n+import org.dashevo.dpp.util.HashUtils\n+import java.math.BigInteger\n+\n+class FrequentContactsAdapter() :\n+        RecyclerView.Adapter<FrequentContactViewHolder>() {\n+\n+    init {\n+        setHasStableIds(true)\n+    }\n+\n+    var itemClickListener: OnContactItemClickListener? = null\n+    var results: ArrayList<UsernameSearchResult> = arrayListOf()\n+        set(value) {\n+            field = value\n+            notifyDataSetChanged()\n+        }\n+\n+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): FrequentContactViewHolder {\n+         return FrequentContactViewHolder(LayoutInflater.from(parent.context), parent, itemClickListener)\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return results.size\n+    }\n+\n+    private fun getLongValue(s: String): Long {\n+        val byteArray = HashUtils.byteArrayFromString(s)\n+        val bigInteger = BigInteger(byteArray)\n+        return bigInteger.toLong()\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086a8adcfdea08efa723778deced20e396580bf8"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDk5Nzk5OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/FrequentContactsLiveData.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo0MToyNVrOG8ePdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoxODowMVrOG81nRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzIyMw==", "bodyText": "This is where the contactRequests.data should be filtered to only use the proper contacts for the rest of the \"calculations\"", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r466063223", "createdAt": "2020-08-05T23:41:25Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/FrequentContactsLiveData.kt", "diffHunk": "@@ -0,0 +1,113 @@\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.text.format.DateUtils\n+import androidx.lifecycle.LiveData\n+import de.schildbach.wallet.WalletApplication\n+import de.schildbach.wallet.data.UsernameSearchResult\n+import de.schildbach.wallet.data.UsernameSortOrderBy\n+import de.schildbach.wallet.livedata.Resource\n+import de.schildbach.wallet.livedata.Status\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.dashevo.dashpay.BlockchainIdentity\n+import java.util.*\n+\n+class FrequentContactsLiveData(val walletApplication: WalletApplication, private val platformRepo: PlatformRepo) : LiveData<Resource<List<UsernameSearchResult>>>(), OnContactsUpdated {\n+\n+    companion object {\n+        const val TIMESPAN: Long = DateUtils.DAY_IN_MILLIS * 90 // 90 days\n+        const val TOP_CONTACT_COUNT = 4\n+    }\n+\n+    private var listening = false\n+\n+    override fun onActive() {\n+        maybeAddEventListener()\n+        onContactsUpdated()\n+    }\n+\n+    override fun onInactive() {\n+        maybeRemoveEventListener()\n+    }\n+\n+    private fun maybeAddEventListener() {\n+        if (!listening && hasActiveObservers()) {\n+            platformRepo.addContactsUpdatedListener(this)\n+            listening = true\n+        }\n+    }\n+\n+    private fun maybeRemoveEventListener() {\n+        if (listening) {\n+            platformRepo.removeContactsUpdatedListener(this)\n+            listening = false\n+        }\n+    }\n+\n+    override fun onContactsUpdated() {\n+        getFrequentContacts()\n+    }\n+\n+    fun getFrequentContacts() {\n+        GlobalScope.launch(Dispatchers.IO) {\n+            val contactRequests = platformRepo.searchContacts(\"\", UsernameSortOrderBy.DATE_ADDED)\n+            when (contactRequests.status) {\n+                Status.SUCCESS -> {\n+                    val blockchainIdentity = platformRepo.getBlockchainIdentity() ?: return@launch\n+                    val threeMonthsAgo = Date().time - TIMESPAN\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086a8adcfdea08efa723778deced20e396580bf8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0NjE0OQ==", "bodyText": "Resolved here: 1cc68c7", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r466446149", "createdAt": "2020-08-06T14:18:01Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/FrequentContactsLiveData.kt", "diffHunk": "@@ -0,0 +1,113 @@\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.text.format.DateUtils\n+import androidx.lifecycle.LiveData\n+import de.schildbach.wallet.WalletApplication\n+import de.schildbach.wallet.data.UsernameSearchResult\n+import de.schildbach.wallet.data.UsernameSortOrderBy\n+import de.schildbach.wallet.livedata.Resource\n+import de.schildbach.wallet.livedata.Status\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.dashevo.dashpay.BlockchainIdentity\n+import java.util.*\n+\n+class FrequentContactsLiveData(val walletApplication: WalletApplication, private val platformRepo: PlatformRepo) : LiveData<Resource<List<UsernameSearchResult>>>(), OnContactsUpdated {\n+\n+    companion object {\n+        const val TIMESPAN: Long = DateUtils.DAY_IN_MILLIS * 90 // 90 days\n+        const val TOP_CONTACT_COUNT = 4\n+    }\n+\n+    private var listening = false\n+\n+    override fun onActive() {\n+        maybeAddEventListener()\n+        onContactsUpdated()\n+    }\n+\n+    override fun onInactive() {\n+        maybeRemoveEventListener()\n+    }\n+\n+    private fun maybeAddEventListener() {\n+        if (!listening && hasActiveObservers()) {\n+            platformRepo.addContactsUpdatedListener(this)\n+            listening = true\n+        }\n+    }\n+\n+    private fun maybeRemoveEventListener() {\n+        if (listening) {\n+            platformRepo.removeContactsUpdatedListener(this)\n+            listening = false\n+        }\n+    }\n+\n+    override fun onContactsUpdated() {\n+        getFrequentContacts()\n+    }\n+\n+    fun getFrequentContacts() {\n+        GlobalScope.launch(Dispatchers.IO) {\n+            val contactRequests = platformRepo.searchContacts(\"\", UsernameSortOrderBy.DATE_ADDED)\n+            when (contactRequests.status) {\n+                Status.SUCCESS -> {\n+                    val blockchainIdentity = platformRepo.getBlockchainIdentity() ?: return@launch\n+                    val threeMonthsAgo = Date().time - TIMESPAN\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzIyMw=="}, "originalCommit": {"oid": "086a8adcfdea08efa723778deced20e396580bf8"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDMxMzc0OnYy", "diffSide": "RIGHT", "path": "wallet/res/layout/fragment_payments_pay.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTo1NDozMlrOHAuxDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDowNDowNlrOHA1zSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUyODI3MA==", "bodyText": "I'm wondering why this margin is 30dp wide, it adds awkward looking indentation:\n\nShouldn't it be 15dp as in @style/MenuRow?", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r470528270", "createdAt": "2020-08-14T09:54:32Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/res/layout/fragment_payments_pay.xml", "diffHunk": "@@ -16,6 +16,13 @@\n         app:pb_sub_title=\"@string/payments_pay_to_contact_sub_title\"\n         app:pb_title=\"@string/payments_pay_to_contact_title\" />\n \n+    <androidx.recyclerview.widget.RecyclerView\n+        android:id=\"@+id/frequent_contacts_rv\"\n+        android:layout_marginStart=\"30dp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09a186502740ad26689e2e4879c1ee0027c6cdb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYzNDYzMg==", "bodyText": "That was a good question.  I am trying to copy this design, but there are many other differences that make it look differnet (no blue buttons, no rounded white rectangles for each MenuRow, etc.", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r470634632", "createdAt": "2020-08-14T13:48:54Z", "author": {"login": "HashEngineering"}, "path": "wallet/res/layout/fragment_payments_pay.xml", "diffHunk": "@@ -16,6 +16,13 @@\n         app:pb_sub_title=\"@string/payments_pay_to_contact_sub_title\"\n         app:pb_title=\"@string/payments_pay_to_contact_title\" />\n \n+    <androidx.recyclerview.widget.RecyclerView\n+        android:id=\"@+id/frequent_contacts_rv\"\n+        android:layout_marginStart=\"30dp\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUyODI3MA=="}, "originalCommit": {"oid": "b09a186502740ad26689e2e4879c1ee0027c6cdb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY0MzUyOQ==", "bodyText": "Let's merge it as it is and fix during the UI polishing stage if needed", "url": "https://github.com/dashevo/dash-wallet/pull/475#discussion_r470643529", "createdAt": "2020-08-14T14:04:06Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/res/layout/fragment_payments_pay.xml", "diffHunk": "@@ -16,6 +16,13 @@\n         app:pb_sub_title=\"@string/payments_pay_to_contact_sub_title\"\n         app:pb_title=\"@string/payments_pay_to_contact_title\" />\n \n+    <androidx.recyclerview.widget.RecyclerView\n+        android:id=\"@+id/frequent_contacts_rv\"\n+        android:layout_marginStart=\"30dp\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUyODI3MA=="}, "originalCommit": {"oid": "b09a186502740ad26689e2e4879c1ee0027c6cdb"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 565, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}