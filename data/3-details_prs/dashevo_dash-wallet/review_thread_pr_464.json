{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NDY0MjI1", "number": 464, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowODozOVrOESmg8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzowMzo1OVrOEU_VOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTQwODUxOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NotificationsAdapter.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowODozOVrOG3342A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowODozOVrOG3342A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MDUzNg==", "bodyText": "This was copy/pasted from the TransactionAdapter.java class.  Ideally this should be refactored into a separate file that can be used on the Home Screen and any Notifications screen.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r461240536", "createdAt": "2020-07-28T00:08:39Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NotificationsAdapter.kt", "diffHunk": "@@ -268,4 +307,135 @@ class NotificationsAdapter(val onContactRequestButtonClickListener: OnContactReq\n         fun onAcceptRequest(usernameSearchResult: UsernameSearchResult, position: Int)\n         fun onIgnoreRequest(usernameSearchResult: UsernameSearchResult, position: Int)\n     }\n+\n+    private val transactionCache: HashMap<Sha256Hash, TransactionCacheEntry> = HashMap()\n+\n+    private class TransactionCacheEntry constructor(val value: Coin, val sent: Boolean, val self: Boolean, val showFee: Boolean, val address: Address?,\n+                                                            val addressLabel: String?, val type: Transaction.Type)\n+\n+    inner class TransactionViewHolder (inflater: LayoutInflater, parent: ViewGroup) : ViewHolder(R.layout.notification_transaction_row, inflater, parent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a7a0919ac9c1eb4298534c53f0a4131297612"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTQxMDc1OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NotificationsForUserLiveData.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowOTozMlrOG336GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowOTozMlrOG336GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MDg1Nw==", "bodyText": "should call the BlockchainIdentity method instead of wallet.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r461240857", "createdAt": "2020-07-28T00:09:32Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NotificationsForUserLiveData.kt", "diffHunk": "@@ -0,0 +1,45 @@\n+package de.schildbach.wallet.ui.dashpay\n+\n+import de.schildbach.wallet.WalletApplication\n+import de.schildbach.wallet.data.NotificationItem\n+import de.schildbach.wallet.data.UsernameSortOrderBy\n+import de.schildbach.wallet.livedata.Resource\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.bitcoinj.evolution.EvolutionContact\n+\n+class NotificationsForUserLiveData(walletApplication: WalletApplication, platformRepo: PlatformRepo) : NotificationsLiveData(walletApplication, platformRepo) {\n+\n+    override fun searchNotifications(userId: String) {\n+        this.query = userId\n+        GlobalScope.launch {\n+            val results = arrayListOf<NotificationItem>()\n+            val contactRequests = platformRepo.searchContacts(\"\", UsernameSortOrderBy.DATE_ADDED)\n+\n+            //TODO: gather other notification types\n+            // * invitations\n+            // * payments\n+            // * other\n+\n+            if(contactRequests.data != null) {\n+                contactRequests.data.filter {\n+                    cr -> cr.dashPayProfile.userId == userId\n+                }.forEach {\n+                    results.add(NotificationItem(it))\n+                }\n+            }\n+\n+            val blockchainIdentity = platformRepo.getBlockchainIdentity()!!\n+\n+            val contact = EvolutionContact(blockchainIdentity.uniqueIdString, userId)\n+\n+            val txs = walletApplication.wallet.getTransactionsWithFriend(contact)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a7a0919ac9c1eb4298534c53f0a4131297612"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTk4NDE4OnYy", "diffSide": "LEFT", "path": "wallet/src/de/schildbach/wallet/data/PaymentIntent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo0NDoyMFrOG4QLrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo0NDoyMFrOG4QLrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzODU3Mw==", "bodyText": "We no longer need InstantSend indicators for PaymentIntent. This was necessary when it was possible to specify InstantSend as a requirement for a transaction which required an extra fee.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r461638573", "createdAt": "2020-07-28T14:44:20Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/data/PaymentIntent.java", "diffHunk": "@@ -163,18 +164,16 @@ private Output(final Parcel in) {\n     @Nullable\n     public final byte[] paymentRequestHash;\n \n-    public boolean useInstantX = false;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a7a0919ac9c1eb4298534c53f0a4131297612"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjAyOTY0OnYy", "diffSide": "LEFT", "path": "wallet/src/de/schildbach/wallet/ui/DashPayUserActivity.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1Mjo1OVrOG4QnUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1Mjo1OVrOG4QnUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NTY1MA==", "bodyText": "These are read in the constructor", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r461645650", "createdAt": "2020-07-28T14:52:59Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/DashPayUserActivity.kt", "diffHunk": "@@ -126,37 +175,121 @@ class DashPayUserActivity : InteractionAwareActivity() {\n     }\n \n     private fun updateContactRelationUi() {\n-        val contactRequestSent = intent.getBooleanExtra(CONTACT_REQUEST_SENT, false)\n-        val contactRequestReceived = intent.getBooleanExtra(CONTACT_REQUEST_RECEIVED, false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a7a0919ac9c1eb4298534c53f0a4131297612"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODQwMTM3OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzowOTo1MFrOG5NXVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzowOTo1MFrOG5NXVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0MDk4Mg==", "bodyText": "There were bugs in the wallet that upon loading when the app started, the app would require a blockchain reset.  This is still a possibility, given the amount of changes that were required to support payments from and to contacts.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r462640982", "createdAt": "2020-07-29T23:09:50Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -630,9 +659,16 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n \n         val blockchainIdentityData = blockchainIdentityDataDaoAsync.load() ?: return\n         val userId = blockchainIdentityData!!.getIdentity(walletApplication.wallet) ?: return\n+        if (blockchainIdentityData.username == null) {\n+            return // this is here because the wallet is being reset without removing blockchainIdentityData\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e177219ce5e80e9e02aa4c868d50874936a61192"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODQ2ODkxOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0MjoxMFrOG5N-qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0MjoxMFrOG5N-qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MTA1MQ==", "bodyText": "Should we use an observer instead?  perhaps a LiveData that returns a BlockchainIdentity object?", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r462651051", "createdAt": "2020-07-29T23:42:10Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -75,7 +86,9 @@ class TransactionResultActivity : AbstractWalletActivity() {\n         val txId = intent.getSerializableExtra(EXTRA_TX_ID) as Sha256Hash\n         setContentView(R.layout.activity_successful_transaction)\n \n-        val transactionResultViewBinder = TransactionResultViewBinder(container)\n+        val blockchainIdentity: BlockchainIdentity? = runBlocking { PlatformRepo.getInstance().getBlockchainIdentity() }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e177219ce5e80e9e02aa4c868d50874936a61192"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODQ3MDAwOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultViewBinder.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0Mjo0NVrOG5N_TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0Mjo0NVrOG5N_TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MTIxMg==", "bodyText": "Should we use an observer instead?", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r462651212", "createdAt": "2020-07-29T23:42:45Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultViewBinder.kt", "diffHunk": "@@ -187,6 +198,38 @@ class TransactionResultViewBinder(private val containerView: View) {\n             }\n         }\n \n+        // handle dashpay\n+        var profile: DashPayProfile? = null\n+        if (blockchainIdentity != null) {\n+            val userId = blockchainIdentity.getContactForTransaction(tx)\n+            if (userId != null) {\n+                profile = runBlocking { AppDatabase.getAppDatabase().dashPayProfileDaoAsync().load(userId) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e177219ce5e80e9e02aa4c868d50874936a61192"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODQ3MzcyOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/DashPayViewModel.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0NDoyN1rOG5OBbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0NDoyN1rOG5OBbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MTc1Nw==", "bodyText": "It seems strange to have a runBlocking inside a view Model.  Should we use a liveData instead to get the next address for a particular user?", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r462651757", "createdAt": "2020-07-29T23:44:27Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/DashPayViewModel.kt", "diffHunk": "@@ -132,6 +140,14 @@ class DashPayViewModel(application: Application) : AndroidViewModel(application)\n         }\n     }\n \n+    fun getNextContactAddress(userId: String): Address {\n+        var address: Address? = null\n+        runBlocking {\n+            address = platformRepo.getNextContactAddress(userId)\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e177219ce5e80e9e02aa4c868d50874936a61192"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODQ3ODI4OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/DashPayUserActivity.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0NjoyOVrOG5OD7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0NzoyNlrOG5OFOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MjM5Ng==", "bodyText": "getLocalUsernameSearchResult actually makes three queries to the database.  A MediatorLiveData, i think, could be used instead.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r462652396", "createdAt": "2020-07-29T23:46:29Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/DashPayUserActivity.kt", "diffHunk": "@@ -63,13 +77,24 @@ class DashPayUserActivity : InteractionAwareActivity() {\n             intent.putExtra(CONTACT_REQUEST_RECEIVED, contactRequestReceived)\n             return intent\n         }\n+\n+        @JvmStatic\n+        fun createIntent(context: Context, userId: String): Intent {\n+            val usernameSearchResult = runBlocking { PlatformRepo.getInstance().getLocalUsernameSearchResult(userId) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e177219ce5e80e9e02aa4c868d50874936a61192"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MjczMA==", "bodyText": "though the calling method should perhaps call the access livedata.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r462652730", "createdAt": "2020-07-29T23:47:26Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/DashPayUserActivity.kt", "diffHunk": "@@ -63,13 +77,24 @@ class DashPayUserActivity : InteractionAwareActivity() {\n             intent.putExtra(CONTACT_REQUEST_RECEIVED, contactRequestReceived)\n             return intent\n         }\n+\n+        @JvmStatic\n+        fun createIntent(context: Context, userId: String): Intent {\n+            val usernameSearchResult = runBlocking { PlatformRepo.getInstance().getLocalUsernameSearchResult(userId) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MjM5Ng=="}, "originalCommit": {"oid": "e177219ce5e80e9e02aa4c868d50874936a61192"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDQyNTExOnYy", "diffSide": "LEFT", "path": "wallet/src/de/schildbach/wallet/livedata/EncryptWalletLiveData.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1ODoyMVrOG7fNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1ODoyMVrOG7fNKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMDQ0MQ==", "bodyText": "This was moved out of the background thread therefore we should retest all the wallet initialization scenarios.\n2e3d14e#diff-05204d8915f357bdf7c4bfcbed61d7c3R79", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r465030441", "createdAt": "2020-08-04T12:58:21Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/livedata/EncryptWalletLiveData.kt", "diffHunk": "@@ -95,10 +95,6 @@ class EncryptWalletLiveData(application: Application) : MutableLiveData<Resource\n                 // initialize the authentication key chains to allow recovery of the username\n                 wallet.initializeAuthenticationKeyChains(decryptedSeed, newKey);\n \n-                if(initialize) {\n-                    walletApplication.saveWalletAndFinalizeInitialization()\n-                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e3d14ee5c8b890750694f8fb0ed65bb25e43c90"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDQ0MjU3OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzowMzowNFrOG7fYag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzowMzowNFrOG7fYag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMzMyMg==", "bodyText": "This will load the blockchainIdentity and start periodic contacts sync without the need of using Handler.\nGlobalScope is active as long as the app is launched.\nPeriodic contacts sync will not start if there is no blockchainIdentity yet.", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r465033322", "createdAt": "2020-08-04T13:03:04Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -94,11 +94,36 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n     private val dashPayProfileDaoAsync = AppDatabase.getAppDatabase().dashPayProfileDaoAsync()\n     private val dashPayContactRequestDaoAsync = AppDatabase.getAppDatabase().dashPayContactRequestDaoAsync()\n \n+    private val securityGuard = SecurityGuard()\n     private lateinit var blockchainIdentity: BlockchainIdentity\n+\n     private val backgroundThread = HandlerThread(\"background\", Process.THREAD_PRIORITY_BACKGROUND)\n-    private val backgroundHandler by lazy {\n+    private val backgroundHandler: Handler\n+\n+    init {\n         backgroundThread.start()\n-        Handler(backgroundThread.looper)\n+        backgroundHandler = Handler(backgroundThread.looper)\n+    }\n+\n+    fun init() {\n+        GlobalScope.launch {\n+            blockchainIdentityDataDaoAsync.load()?.let {\n+                blockchainIdentity = initBlockchainIdentity(it, walletApplication.wallet)\n+                while (isActive) {\n+                    log.info(\"Timer: Update contacts\")\n+                    platformRepoInstance.updateContactRequests()\n+                    delay(UPDATE_TIMER_DELAY)\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "172460c5a66c9482f6c46bc2a7e6db96975667fe"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDQ0NjAyOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/CreateIdentityService.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzowMzo1OVrOG7fafg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzowMzo1OVrOG7fafg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMzg1NA==", "bodyText": "This will also start the periodic contacts sync", "url": "https://github.com/dashevo/dash-wallet/pull/464#discussion_r465033854", "createdAt": "2020-08-04T13:03:59Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/CreateIdentityService.kt", "diffHunk": "@@ -317,6 +317,8 @@ class CreateIdentityService : LifecycleService() {\n             platformRepo.updateCreationState(blockchainIdentityData, CreationState.DONE)\n         }\n \n+        PlatformRepo.getInstance().init()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "172460c5a66c9482f6c46bc2a7e6db96975667fe"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 562, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}