{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzA1NjQ0", "number": 453, "title": "NMA-506 Uphold Error Handling - Funds Availability", "bodyText": "Issue being fixed or feature implemented\n\n\nWhat was done?\n\nHow Has This Been Tested?\n\n\n\nBreaking Changes\n\n\nChecklist:\n\n\n I have performed a self-review of my own code\n I have commented my code, particularly in hard-to-understand areas\n I have added or updated relevant unit/integration/functional/e2e tests\n I have made corresponding changes to the documentation\n\nFor repository code-owners and collaborators only\n\n I have assigned this pull request to a milestone", "createdAt": "2020-07-02T19:33:46Z", "url": "https://github.com/dashevo/dash-wallet/pull/453", "merged": true, "mergeCommit": {"oid": "cf8f317d3b20a2db87caa467d082ebf61695e8d1"}, "closed": true, "closedAt": "2020-07-08T23:07:33Z", "author": {"login": "tomasz-ludek"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxEEpYAH2gAyNDQzNzA1NjQ0OjhkMjE2MWJhYTNkOGUyMjZlNGZkNjAxYmZhNWJhMjA3NzAxYTg5MDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczCumoAFqTQ0NTE4NjgzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d2161baa3d8e226e4fd601bfa5ba207701a8903", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/8d2161baa3d8e226e4fd601bfa5ba207701a8903", "committedDate": "2020-07-02T19:33:04Z", "message": "Custom handling of most common API errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTcwMTcw", "url": "https://github.com/dashevo/dash-wallet/pull/453#pullrequestreview-441970170", "createdAt": "2020-07-02T19:35:00Z", "commit": {"oid": "8d2161baa3d8e226e4fd601bfa5ba207701a8903"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOTozNTowMFrOGsatUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOTozNTowMFrOGsatUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyODExNQ==", "bodyText": "There seem to be an issue with deploying from master branch, this line was added for debugging purposes.", "url": "https://github.com/dashevo/dash-wallet/pull/453#discussion_r449228115", "createdAt": "2020-07-02T19:35:00Z", "author": {"login": "tomasz-ludek"}, "path": ".travis.yml", "diffHunk": "@@ -83,6 +83,7 @@ script:\n \n before_deploy:\n   - openssl aes-256-cbc -K $encrypted_945ec88d7d8f_key -iv $encrypted_945ec88d7d8f_iv -in .deploy/id_rsa.enc -out .deploy/id_rsa -d\n+  - ls -ll .deploy/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2161baa3d8e226e4fd601bfa5ba207701a8903"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6096074977f2b2fab517efcef204236e8748c202", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/6096074977f2b2fab517efcef204236e8748c202", "committedDate": "2020-07-03T08:52:53Z", "message": "Final improvements of custom handling of most common Uphold API errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzk1MjUy", "url": "https://github.com/dashevo/dash-wallet/pull/453#pullrequestreview-442395252", "createdAt": "2020-07-03T12:56:51Z", "commit": {"oid": "6096074977f2b2fab517efcef204236e8748c202"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1Njo1MVrOGsvk5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1Njo1MVrOGsvk5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDAyMw==", "bodyText": "This error message is rather long.  Lets see what the product owner says about it.", "url": "https://github.com/dashevo/dash-wallet/pull/453#discussion_r449570023", "createdAt": "2020-07-03T12:56:51Z", "author": {"login": "HashEngineering"}, "path": "uphold-integration/src/main/res/values/strings-uphold.xml", "diffHunk": "@@ -25,4 +25,9 @@\n     <string name=\"uphold_error_not_available\">The Uphold service is not available.  Please try again later.</string>\n     <string name=\"uphold_error_report_issue\">Please report this issue to the Dash Wallet support team using \"Report Issue\" from the main menu.</string>\n \n+    <string name=\"uphold_general_error_title\">Error</string>\n+    <string name=\"uphold_api_error_title\">Uphold error</string>\n+    <string name=\"uphold_api_error_identity\">Uphold account isn\u2019t verified so funds cannot be withdrawn yet.</string>\n+    <string name=\"uphold_api_error_403_description\">Your Uphold account has been flagged for review.\\nDon\u2019t worry, flags can be triggered for lots of reasons and most can be sorted out easily.\\nIn the meantime, Uphold had to temporarily restrict your account while more information is gathered. You can still trade but you won\u2019t be able to withdraw funds.\\n\\nUphold will be in touch to help you sort this out quickly.</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096074977f2b2fab517efcef204236e8748c202"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzk1NzM1", "url": "https://github.com/dashevo/dash-wallet/pull/453#pullrequestreview-442395735", "createdAt": "2020-07-03T12:57:38Z", "commit": {"oid": "6096074977f2b2fab517efcef204236e8748c202"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1NzozOVrOGsvmYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1NzozOVrOGsvmYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDQwMw==", "bodyText": "It would be great if the time was formatted into a locale specific local time.", "url": "https://github.com/dashevo/dash-wallet/pull/453#discussion_r449570403", "createdAt": "2020-07-03T12:57:39Z", "author": {"login": "HashEngineering"}, "path": "uphold-integration/src/main/java/org/dash/wallet/integration/uphold/data/UpholdApiException.java", "diffHunk": "@@ -0,0 +1,179 @@\n+package org.dash.wallet.integration.uphold.data;\n+\n+\n+import android.content.Context;\n+\n+import org.dash.wallet.integration.uphold.R;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import retrofit2.Response;\n+\n+public class UpholdApiException extends Exception {\n+\n+    public static final String IDENTITY_ERROR_KEY = \"identity\";\n+    public static final String TOKEN_ERROR_KEY = \"token\";\n+    public static final String LOCKED_FUNDS_KEY = \"sufficient_unlocked_funds\";\n+    public static final String AVAILABLE_AT_KEY = \"availableAt\";\n+\n+    private int httpStatusCode;\n+\n+    //{\n+    //    \"code\":\"sufficient_unlocked_funds\",\n+    //    \"message\":\"You will have sufficient funds by 2020-04-17T22:42:00.151Z\"\n+    //    \"args\":{\n+    //        \"availableAt\":\"2020-04-17T22:42:00.151Z\",\n+    //        \"missing\":\"1.03430005\",\n+    //        \"currency\":\"DASH\"\n+    //    },\n+    //}\n+    private JSONObject errorBody;\n+\n+    public UpholdApiException(Response response) {\n+        this.httpStatusCode = response.code();\n+        if (response.errorBody() != null) {\n+            try {\n+                errorBody = new JSONObject(response.errorBody().string());\n+            } catch (Exception e) {\n+                errorBody = null;\n+            }\n+        }\n+    }\n+\n+    public UpholdApiException(int httpStatusCode) {\n+        this.httpStatusCode = httpStatusCode;\n+    }\n+\n+    public String getErrorCode() {\n+        if (errorBody != null) {\n+            try {\n+                return errorBody.getString(\"code\");\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public JSONObject getErrors() {\n+        if (errorBody != null) {\n+            try {\n+                return errorBody.getJSONObject(\"errors\");\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private JSONObject getError(String errorKey) {\n+        JSONObject errors = getErrors();\n+        if (errors != null) {\n+            try {\n+                return errors.getJSONObject(errorKey);\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private String getErrorField(String errorKey, String errorField) {\n+        JSONObject error = getError(errorKey);\n+        if (error != null) {\n+            try {\n+                return error.getString(errorField);\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public String getErrorCode(String errorKey) {\n+        return getErrorField(errorKey, \"code\");\n+    }\n+\n+    public String getErrorMessage(String errorKey) {\n+        return getErrorField(errorKey, \"message\");\n+    }\n+\n+    public boolean hasError(String errorField) {\n+        JSONObject errors = getErrors();\n+        return (errors != null) && errors.has(errorField);\n+    }\n+\n+    public boolean isTokenError() {\n+        JSONObject errors = getErrors();\n+        return (errors != null) && errors.has(TOKEN_ERROR_KEY);\n+    }\n+\n+    public boolean isIdentityError() {\n+        JSONObject errors = getErrors();\n+        return (errors != null) && errors.has(IDENTITY_ERROR_KEY);\n+    }\n+\n+    private JSONObject getErrorArgs() {\n+        if (errorBody != null) {\n+            try {\n+                return errorBody.getJSONObject(\"args\");\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public String getErrorArg(String errorArgKey) {\n+        JSONObject errorArgs = getErrorArgs();\n+        if (errorArgs != null) {\n+            try {\n+                return errorArgs.getString(errorArgKey);\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public int getCode() {\n+        return httpStatusCode;\n+    }\n+\n+    public String getDescription(Context context, Object... formatArgs) {\n+        if (isIdentityError()) {\n+            return context.getString(R.string.uphold_api_error_identity);\n+        } else if (httpStatusCode == 400) {\n+            return context.getString(R.string.uphold_api_error_400_description, formatArgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096074977f2b2fab517efcef204236e8748c202"}, "originalPosition": 147}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzk2MDYy", "url": "https://github.com/dashevo/dash-wallet/pull/453#pullrequestreview-442396062", "createdAt": "2020-07-03T12:58:12Z", "commit": {"oid": "6096074977f2b2fab517efcef204236e8748c202"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "469c23e34cabb858d66cad1e3973e6e44cbb8708", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/469c23e34cabb858d66cad1e3973e6e44cbb8708", "committedDate": "2020-07-07T08:12:46Z", "message": "Debugging deploy.sh script"}, "afterCommit": {"oid": "bed7df346f5e92b4763fe2445682844687d66c95", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/bed7df346f5e92b4763fe2445682844687d66c95", "committedDate": "2020-07-07T07:48:49Z", "message": "Debugging deploy.sh script"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bed7df346f5e92b4763fe2445682844687d66c95", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/bed7df346f5e92b4763fe2445682844687d66c95", "committedDate": "2020-07-07T07:48:49Z", "message": "Debugging deploy.sh script"}, "afterCommit": {"oid": "6096074977f2b2fab517efcef204236e8748c202", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/6096074977f2b2fab517efcef204236e8748c202", "committedDate": "2020-07-03T08:52:53Z", "message": "Final improvements of custom handling of most common Uphold API errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01bab282c18c40c67b13cf104f7e5d8aae8ae4f9", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/01bab282c18c40c67b13cf104f7e5d8aae8ae4f9", "committedDate": "2020-07-07T10:39:31Z", "message": "Adding back skip_cleanup parameters\nIt seems that our Travis doesn't use the dpl v2 yet and without the skip_cleanup build files are removed before deploy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aba58fea1ca8bbe4d6a5deb5e22c68ef716a68c1", "author": {"user": {"login": "HashEngineering", "name": "Hash Engineering Solutions"}}, "url": "https://github.com/dashevo/dash-wallet/commit/aba58fea1ca8bbe4d6a5deb5e22c68ef716a68c1", "committedDate": "2020-07-08T23:04:50Z", "message": "Modify strings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTg2ODMx", "url": "https://github.com/dashevo/dash-wallet/pull/453#pullrequestreview-445186831", "createdAt": "2020-07-08T23:06:56Z", "commit": {"oid": "aba58fea1ca8bbe4d6a5deb5e22c68ef716a68c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2951, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}