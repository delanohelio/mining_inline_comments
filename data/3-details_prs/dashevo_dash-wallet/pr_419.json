{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDIxMDY4", "number": 419, "title": "NMA-309 Home Screen Status | Restart from Error (UI)", "bodyText": "", "createdAt": "2020-05-28T11:21:21Z", "url": "https://github.com/dashevo/dash-wallet/pull/419", "merged": true, "mergeCommit": {"oid": "398afd815e41764e7c08d9c7d6b088bd9f1ba548"}, "closed": true, "closedAt": "2020-05-29T16:02:58Z", "author": {"login": "tomasz-ludek"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclq6O_AH2gAyNDI0NDIxMDY4OjA1YmFhNDMzMzRjYjk0MTQ0ODZkYmIyMzY1ZGUwZDA0MmE5YTUzYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmB7_TAH2gAyNDI0NDIxMDY4OjZhMTI0NTk1MzM2NDI4MDM1NDcwMmRkYzAxNTBlMWE0ODBlYmEyNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05baa43334cb9414486dbb2365de0d042a9a53c1", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/05baa43334cb9414486dbb2365de0d042a9a53c1", "committedDate": "2020-05-28T10:00:54Z", "message": "Replaced IdentityCreationState by equivalent fields in BlockchainIdentityData class.\nPersisting some additional fields from BlockchainIdentity inside BlockchainIdentityData for future use.\nMoved the code related to exchanging data between database and Platform (primarily bindings between BlockchainIdentity and BlockchainIdentityData) into PlatformRepo class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/1cd06941d7fcf9c43adc45bcca1421b55cb094d3", "committedDate": "2020-05-28T11:05:35Z", "message": "Added BlockchainIdentityBaseData being a simplified version of BlockchainIdentityData intended for use when only basic info are needed (this will improve the speed of queries by reducing the IO cost)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDYwNjUx", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420060651", "createdAt": "2020-05-28T12:34:17Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozNDoxOFrOGbzAGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozNDoxOFrOGbzAGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMDM0NQ==", "bodyText": "Technically, we don't need to save this (lockedOutpoint) in the database because it is part of the credit funding transaction.", "url": "https://github.com/dashevo/dash-wallet/pull/419#discussion_r431800345", "createdAt": "2020-05-28T12:34:18Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/data/BlockchainIdentityData.kt", "diffHunk": "@@ -19,24 +19,44 @@ package de.schildbach.wallet.data\n \n import androidx.room.Entity\n import androidx.room.PrimaryKey\n+import org.bitcoinj.core.Coin\n import org.bitcoinj.core.Sha256Hash\n-import org.bitcoinj.core.TransactionOutPoint\n-import org.bitcoinj.evolution.CreditFundingTransaction\n import org.dashevo.dashpay.BlockchainIdentity\n+import org.dashevo.dpp.identity.IdentityPublicKey\n \n @Entity(tableName = \"blockchain_identity\")\n-class BlockchainIdentityData(var index: Int?,\n+data class BlockchainIdentityData(var creationState: State?,\n+                             var creationStateError: Boolean,\n                              var username: String?,\n                              var creditFundingTxId: Sha256Hash? = null,\n-                             var lockedOutpoint: TransactionOutPoint? = null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDYzNjc2", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420063676", "createdAt": "2020-05-28T12:38:17Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozODoxN1rOGbzI3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozODoxN1rOGbzI3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMjU4OQ==", "bodyText": "I think I had a check for status == null because it could be null, perhaps this problem is addressed elsewhere.", "url": "https://github.com/dashevo/dash-wallet/pull/419#discussion_r431802589", "createdAt": "2020-05-28T12:38:17Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/WalletActivity.java", "diffHunk": "@@ -326,9 +326,9 @@ public void onChanged(Resource<Boolean> status) {\n         AppDatabase.getAppDatabase().blockchainIdentityDataDao().load().observe(this, new Observer<BlockchainIdentityData>() {\n             @Override\n             public void onChanged(BlockchainIdentityData blockchainIdentityData) {\n-                if(blockchainIdentityData != null) {\n+                if (blockchainIdentityData != null) {\n                     BlockchainIdentity.RegistrationStatus status = blockchainIdentityData.getRegistrationStatus();\n-                    hasIdentity = status != null ? status == BlockchainIdentity.RegistrationStatus.REGISTERED : false;\n+                    hasIdentity = (status == BlockchainIdentity.RegistrationStatus.REGISTERED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDY2MTE5", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420066119", "createdAt": "2020-05-28T12:41:32Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo0MTozMlrOGbzP9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo0MTozMlrOGbzP9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwNDQwNQ==", "bodyText": "Domain will probably be a default that won't change.  Currently it is \"\", but later will be \"dash\".", "url": "https://github.com/dashevo/dash-wallet/pull/419#discussion_r431804405", "createdAt": "2020-05-28T12:41:32Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -142,9 +150,66 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n     suspend fun isNameRegisteredAsync(blockchainIdentity: BlockchainIdentity) {\n         withContext(Dispatchers.IO) {\n             val (result, usernames) = blockchainIdentity.watchUsernames(blockchainIdentity.getUsernamesWithStatus(BlockchainIdentity.UsernameStatus.REGISTRATION_PENDING), 10, 5000, BlockchainIdentity.RetryDelayType.SLOW20)\n-            if(!result) {\n+            if (!result) {\n                 throw TimeoutException(\"the usernames: $usernames were not found to be registered in the allotted amount of time\")\n             }\n         }\n     }\n+\n+    suspend fun initBlockchainIdentityData(username: String): BlockchainIdentityData {\n+        return blockchainIdentityDataDaoAsync.load()\n+                ?: BlockchainIdentityData(BlockchainIdentityData.State.UPGRADING_WALLET, false, username)\n+    }\n+\n+    fun initBlockchainIdentity(blockchainIdentityData: BlockchainIdentityData, wallet: Wallet): BlockchainIdentity {\n+        if (blockchainIdentityData.creditFundingTxId != null) {\n+            val creditFundingTx = wallet.getTransaction(blockchainIdentityData.creditFundingTxId)\n+            if (creditFundingTx != null) {\n+                val creditFundingTransaction = wallet.getCreditFundingTransaction(creditFundingTx)\n+                return BlockchainIdentity(Identity.IdentityType.USER, creditFundingTransaction, wallet).apply {\n+                    currentUsername = blockchainIdentityData.username\n+                    // should we load `preorderSalt` somehow?\n+                    registrationStatus = blockchainIdentityData.registrationStatus!!\n+                    // should we load `usernameStatus` somehow?\n+                    // should we load `domain` somehow?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b652fd895aa1f1b2ba97512ef3e2376915fb292a", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/b652fd895aa1f1b2ba97512ef3e2376915fb292a", "committedDate": "2020-05-28T12:47:46Z", "message": "Merge branch 'evonet-develop' into evonet-create-identity-error-handling\n\n# Conflicts:\n#\twallet/src/de/schildbach/wallet/AppDatabase.java\n#\twallet/src/de/schildbach/wallet/data/IdentityCreationState.kt\n#\twallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt\n#\twallet/src/de/schildbach/wallet/ui/dashpay/ProcessingIdentityViewHolder.kt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDcyMzA3", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420072307", "createdAt": "2020-05-28T12:49:31Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo0OTozMVrOGbzh_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo0OTozMVrOGbzh_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwOTAyMQ==", "bodyText": "Yes.\nvar usernameStatus = HashMap<String, Any>()\nusernameStatus[BLOCKCHAIN_USERNAME_STATUS] = blockchainIdentityData.usernameStatus\nusernameStatus[BLOCKCHAIN_USERNAME_SALT] = blockchainIdentityData.preorderSalt\nusernameStatuses[username] = usernameStatus\n\nThere may be a cooler way to do the code in Kotlin.", "url": "https://github.com/dashevo/dash-wallet/pull/419#discussion_r431809021", "createdAt": "2020-05-28T12:49:31Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -142,9 +150,66 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n     suspend fun isNameRegisteredAsync(blockchainIdentity: BlockchainIdentity) {\n         withContext(Dispatchers.IO) {\n             val (result, usernames) = blockchainIdentity.watchUsernames(blockchainIdentity.getUsernamesWithStatus(BlockchainIdentity.UsernameStatus.REGISTRATION_PENDING), 10, 5000, BlockchainIdentity.RetryDelayType.SLOW20)\n-            if(!result) {\n+            if (!result) {\n                 throw TimeoutException(\"the usernames: $usernames were not found to be registered in the allotted amount of time\")\n             }\n         }\n     }\n+\n+    suspend fun initBlockchainIdentityData(username: String): BlockchainIdentityData {\n+        return blockchainIdentityDataDaoAsync.load()\n+                ?: BlockchainIdentityData(BlockchainIdentityData.State.UPGRADING_WALLET, false, username)\n+    }\n+\n+    fun initBlockchainIdentity(blockchainIdentityData: BlockchainIdentityData, wallet: Wallet): BlockchainIdentity {\n+        if (blockchainIdentityData.creditFundingTxId != null) {\n+            val creditFundingTx = wallet.getTransaction(blockchainIdentityData.creditFundingTxId)\n+            if (creditFundingTx != null) {\n+                val creditFundingTransaction = wallet.getCreditFundingTransaction(creditFundingTx)\n+                return BlockchainIdentity(Identity.IdentityType.USER, creditFundingTransaction, wallet).apply {\n+                    currentUsername = blockchainIdentityData.username\n+                    // should we load `preorderSalt` somehow?\n+                    registrationStatus = blockchainIdentityData.registrationStatus!!\n+                    // should we load `usernameStatus` somehow?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDc0MDgw", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420074080", "createdAt": "2020-05-28T12:51:44Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo1MTo0NFrOGbznVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo1MTo0NFrOGbznVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxMDM5MQ==", "bodyText": "Domain will probably be removed.", "url": "https://github.com/dashevo/dash-wallet/pull/419#discussion_r431810391", "createdAt": "2020-05-28T12:51:44Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -142,9 +150,66 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n     suspend fun isNameRegisteredAsync(blockchainIdentity: BlockchainIdentity) {\n         withContext(Dispatchers.IO) {\n             val (result, usernames) = blockchainIdentity.watchUsernames(blockchainIdentity.getUsernamesWithStatus(BlockchainIdentity.UsernameStatus.REGISTRATION_PENDING), 10, 5000, BlockchainIdentity.RetryDelayType.SLOW20)\n-            if(!result) {\n+            if (!result) {\n                 throw TimeoutException(\"the usernames: $usernames were not found to be registered in the allotted amount of time\")\n             }\n         }\n     }\n+\n+    suspend fun initBlockchainIdentityData(username: String): BlockchainIdentityData {\n+        return blockchainIdentityDataDaoAsync.load()\n+                ?: BlockchainIdentityData(BlockchainIdentityData.State.UPGRADING_WALLET, false, username)\n+    }\n+\n+    fun initBlockchainIdentity(blockchainIdentityData: BlockchainIdentityData, wallet: Wallet): BlockchainIdentity {\n+        if (blockchainIdentityData.creditFundingTxId != null) {\n+            val creditFundingTx = wallet.getTransaction(blockchainIdentityData.creditFundingTxId)\n+            if (creditFundingTx != null) {\n+                val creditFundingTransaction = wallet.getCreditFundingTransaction(creditFundingTx)\n+                return BlockchainIdentity(Identity.IdentityType.USER, creditFundingTransaction, wallet).apply {\n+                    currentUsername = blockchainIdentityData.username\n+                    // should we load `preorderSalt` somehow?\n+                    registrationStatus = blockchainIdentityData.registrationStatus!!\n+                    // should we load `usernameStatus` somehow?\n+                    // should we load `domain` somehow?\n+                    creditBalance = blockchainIdentityData.creditBalance ?: Coin.ZERO\n+                    activeKeyCount = blockchainIdentityData.activeKeyCount ?: 0\n+                    totalKeyCount = blockchainIdentityData.totalKeyCount ?: 0\n+                    keysCreated = blockchainIdentityData.keysCreated ?: 0\n+                    currentMainKeyIndex = blockchainIdentityData.currentMainKeyIndex ?: 0\n+                    currentMainKeyType = blockchainIdentityData.currentMainKeyType\n+                            ?: IdentityPublicKey.TYPES.ECDSA_SECP256K1\n+                }\n+            }\n+        }\n+        return BlockchainIdentity(Identity.IdentityType.USER, 0, wallet)\n+    }\n+\n+    suspend fun updateBlockchainIdentityData(blockchainIdentityData: BlockchainIdentityData, blockchainIdentity: BlockchainIdentity) {\n+        blockchainIdentityData.apply {\n+            if (blockchainIdentity.creditFundingTransaction != null) {\n+                creditFundingTxId = blockchainIdentity.creditFundingTransaction!!.txId\n+            }\n+            registrationStatus = blockchainIdentity.registrationStatus\n+            if (blockchainIdentity.currentUsername != null &&\n+                    blockchainIdentity.registrationStatus == BlockchainIdentity.RegistrationStatus.REGISTERED) {\n+                domain = Names.DEFAULT_PARENT_DOMAIN\n+                username = blockchainIdentity.currentUsername\n+                preorderSalt = blockchainIdentity.saltForUsername(blockchainIdentity.currentUsername!!, false)\n+                usernameStatus = blockchainIdentity.statusOfUsername(blockchainIdentity.currentUsername!!)\n+\n+                // should we load `preorderSalt` somehow?\n+                registrationStatus = blockchainIdentity.registrationStatus\n+                // should we load `usernameStatus` somehow?\n+                // should we load `domain` somehow?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDc1NjMy", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420075632", "createdAt": "2020-05-28T12:53:36Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo1MzozNlrOGbzr_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo1MzozNlrOGbzr_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxMTU4MQ==", "bodyText": "We can use this code that was removed from a previous file:  https://github.com/dashevo/dash-wallet/pull/419/files#diff-52bbf8452a1888bfec68c85225efb675L198\nblockchainIdentityData.preorderSalt = blockchainIdentity.saltForUsername(blockchainIdentity.currentUsername!!, false)\nblockchainIdentityData.usernameStatus = blockchainIdentity.statusOfUsername(blockchainIdentity.currentUsername!!)", "url": "https://github.com/dashevo/dash-wallet/pull/419#discussion_r431811581", "createdAt": "2020-05-28T12:53:36Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -142,9 +150,66 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n     suspend fun isNameRegisteredAsync(blockchainIdentity: BlockchainIdentity) {\n         withContext(Dispatchers.IO) {\n             val (result, usernames) = blockchainIdentity.watchUsernames(blockchainIdentity.getUsernamesWithStatus(BlockchainIdentity.UsernameStatus.REGISTRATION_PENDING), 10, 5000, BlockchainIdentity.RetryDelayType.SLOW20)\n-            if(!result) {\n+            if (!result) {\n                 throw TimeoutException(\"the usernames: $usernames were not found to be registered in the allotted amount of time\")\n             }\n         }\n     }\n+\n+    suspend fun initBlockchainIdentityData(username: String): BlockchainIdentityData {\n+        return blockchainIdentityDataDaoAsync.load()\n+                ?: BlockchainIdentityData(BlockchainIdentityData.State.UPGRADING_WALLET, false, username)\n+    }\n+\n+    fun initBlockchainIdentity(blockchainIdentityData: BlockchainIdentityData, wallet: Wallet): BlockchainIdentity {\n+        if (blockchainIdentityData.creditFundingTxId != null) {\n+            val creditFundingTx = wallet.getTransaction(blockchainIdentityData.creditFundingTxId)\n+            if (creditFundingTx != null) {\n+                val creditFundingTransaction = wallet.getCreditFundingTransaction(creditFundingTx)\n+                return BlockchainIdentity(Identity.IdentityType.USER, creditFundingTransaction, wallet).apply {\n+                    currentUsername = blockchainIdentityData.username\n+                    // should we load `preorderSalt` somehow?\n+                    registrationStatus = blockchainIdentityData.registrationStatus!!\n+                    // should we load `usernameStatus` somehow?\n+                    // should we load `domain` somehow?\n+                    creditBalance = blockchainIdentityData.creditBalance ?: Coin.ZERO\n+                    activeKeyCount = blockchainIdentityData.activeKeyCount ?: 0\n+                    totalKeyCount = blockchainIdentityData.totalKeyCount ?: 0\n+                    keysCreated = blockchainIdentityData.keysCreated ?: 0\n+                    currentMainKeyIndex = blockchainIdentityData.currentMainKeyIndex ?: 0\n+                    currentMainKeyType = blockchainIdentityData.currentMainKeyType\n+                            ?: IdentityPublicKey.TYPES.ECDSA_SECP256K1\n+                }\n+            }\n+        }\n+        return BlockchainIdentity(Identity.IdentityType.USER, 0, wallet)\n+    }\n+\n+    suspend fun updateBlockchainIdentityData(blockchainIdentityData: BlockchainIdentityData, blockchainIdentity: BlockchainIdentity) {\n+        blockchainIdentityData.apply {\n+            if (blockchainIdentity.creditFundingTransaction != null) {\n+                creditFundingTxId = blockchainIdentity.creditFundingTransaction!!.txId\n+            }\n+            registrationStatus = blockchainIdentity.registrationStatus\n+            if (blockchainIdentity.currentUsername != null &&\n+                    blockchainIdentity.registrationStatus == BlockchainIdentity.RegistrationStatus.REGISTERED) {\n+                domain = Names.DEFAULT_PARENT_DOMAIN\n+                username = blockchainIdentity.currentUsername\n+                preorderSalt = blockchainIdentity.saltForUsername(blockchainIdentity.currentUsername!!, false)\n+                usernameStatus = blockchainIdentity.statusOfUsername(blockchainIdentity.currentUsername!!)\n+\n+                // should we load `preorderSalt` somehow?\n+                registrationStatus = blockchainIdentity.registrationStatus\n+                // should we load `usernameStatus` somehow?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDc3ODIy", "url": "https://github.com/dashevo/dash-wallet/pull/419#pullrequestreview-420077822", "createdAt": "2020-05-28T12:56:14Z", "commit": {"oid": "1cd06941d7fcf9c43adc45bcca1421b55cb094d3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b68660b77aa8c94b1c7a521705ba1d25bb154cb9", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/b68660b77aa8c94b1c7a521705ba1d25bb154cb9", "committedDate": "2020-05-28T16:07:27Z", "message": "Added ability to restore the process of identity creation at any point of time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a5d6e1802342ef8f6fb1f2122311cdfbb787245", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/1a5d6e1802342ef8f6fb1f2122311cdfbb787245", "committedDate": "2020-05-28T16:17:17Z", "message": "Added useful log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3581261c20fcae778814c27b2f89b24d363270a3", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/3581261c20fcae778814c27b2f89b24d363270a3", "committedDate": "2020-05-28T17:45:02Z", "message": "Added ability to restore the process of identity creation at any point of time (improvements)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec502d1949baec6235ee65a490aebe8f37716c49", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/ec502d1949baec6235ee65a490aebe8f37716c49", "committedDate": "2020-05-28T21:06:58Z", "message": "Added ability to restore the process of identity creation at any point of time (additional improvements)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ed7707183671ef4587f609941ec7ba146665d36", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/7ed7707183671ef4587f609941ec7ba146665d36", "committedDate": "2020-05-29T05:35:48Z", "message": "Removed testing exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f430e16073a1a2613cfbdcb441549581ede6641", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/1f430e16073a1a2613cfbdcb441549581ede6641", "committedDate": "2020-05-29T05:37:28Z", "message": "Added missing comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85902b616c0fc275608a7ed39922a6ab477cf298", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/85902b616c0fc275608a7ed39922a6ab477cf298", "committedDate": "2020-05-29T07:34:54Z", "message": "Added ability to restore the process of identity creation at any point of time (improvements)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea03fe11b42ba85690efe875440df7c1c11efe52", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/ea03fe11b42ba85690efe875440df7c1c11efe52", "committedDate": "2020-05-29T09:36:02Z", "message": "Added ability to restore the process of identity creation at any point of time (improvements)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a1245953364280354702ddc0150e1a480eba279", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/6a1245953364280354702ddc0150e1a480eba279", "committedDate": "2020-05-29T12:50:38Z", "message": "Added ability to restore the process of identity creation at any point of time (improvements)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}