{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NTA2NTU0", "number": 501, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozMjowNlrOEfgzEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozNDozNlrOEfg3SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDc4NjczOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/DashPayViewModel.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozMjowNlrOHL1C1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozMjowNlrOHL1C1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NTQ2MQ==", "bodyText": "This should be a liveData similar to searchUsernames/searchUsernamesLiveData.\nIf a user scans one user's QR code follows by a second QR code that results in an error, then once the payment completes, the first user's profile page will be displayed.", "url": "https://github.com/dashevo/dash-wallet/pull/501#discussion_r482165461", "createdAt": "2020-09-02T15:32:06Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/DashPayViewModel.kt", "diffHunk": "@@ -96,6 +96,16 @@ class DashPayViewModel(application: Application) : AndroidViewModel(application)\n         userSearchLiveData.value = text\n     }\n \n+    fun loadUser(username: String) {\n+        getUserLiveData.value = username\n+        viewModelScope.launch(Dispatchers.IO) {\n+            val result = platformRepo.searchUsernames(username, true)\n+            if (result.exception == null && result.data != null && result.data.isNotEmpty()) {\n+                platformRepo.lastLoadedUser = result.data.first()\n+            }\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821007f27568c7c560626e2ca4140f2dfe1429ef"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDc4ODc1OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozMjozNlrOHL1EGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozMjozNlrOHL1EGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NTc4NQ==", "bodyText": "great idea.", "url": "https://github.com/dashevo/dash-wallet/pull/501#discussion_r482165785", "createdAt": "2020-09-02T15:32:36Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -164,13 +166,17 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n         }\n     }\n \n+    suspend fun getUser(username: String): Resource<List<UsernameSearchResult>> {\n+        return searchUsernames(username, true)\n+    }\n+\n     /**\n      * gets all the name documents for usernames starting with text\n      *\n      * @param text The beginning of a username to search for\n      * @return\n      */\n-    suspend fun searchUsernames(text: String): Resource<List<UsernameSearchResult>> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): Resource<List<UsernameSearchResult>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821007f27568c7c560626e2ca4140f2dfe1429ef"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDc5NzUzOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozNDozNlrOHL1Jow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToyMjo1NVrOHM__NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzIwMw==", "bodyText": "lastLoadedUser should come from observing liveData. https://github.com/dashevo/dash-wallet/pull/501/files#r482165461", "url": "https://github.com/dashevo/dash-wallet/pull/501#discussion_r482167203", "createdAt": "2020-09-02T15:34:36Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -164,6 +172,15 @@ class TransactionResultActivity : AbstractWalletActivity() {\n         dashPayViewModel = ViewModelProvider(this).get(DashPayViewModel::class.java)\n     }\n \n+    override fun finish() {\n+        val dashPayUsername = intent.extras?.getString(EXTRA_DASHPAY_USERNAME)\n+        val lastLoadedUser = PlatformRepo.getInstance().lastLoadedUser", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821007f27568c7c560626e2ca4140f2dfe1429ef"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzQ1MA==", "bodyText": "In my Story for paying pending contacts (and also Contacts) from a QR code, I will need an observer.  Maybe you don't need to change this to use an observer, since I will be doing it.", "url": "https://github.com/dashevo/dash-wallet/pull/501#discussion_r483377450", "createdAt": "2020-09-04T04:22:25Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -164,6 +172,15 @@ class TransactionResultActivity : AbstractWalletActivity() {\n         dashPayViewModel = ViewModelProvider(this).get(DashPayViewModel::class.java)\n     }\n \n+    override fun finish() {\n+        val dashPayUsername = intent.extras?.getString(EXTRA_DASHPAY_USERNAME)\n+        val lastLoadedUser = PlatformRepo.getInstance().lastLoadedUser", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzIwMw=="}, "originalCommit": {"oid": "821007f27568c7c560626e2ca4140f2dfe1429ef"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5MzMzMw==", "bodyText": "Nevermind, my liveData doesn't work for your case because my liveData is from the local database, but stranger data comes from Platform.", "url": "https://github.com/dashevo/dash-wallet/pull/501#discussion_r483393333", "createdAt": "2020-09-04T05:22:55Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -164,6 +172,15 @@ class TransactionResultActivity : AbstractWalletActivity() {\n         dashPayViewModel = ViewModelProvider(this).get(DashPayViewModel::class.java)\n     }\n \n+    override fun finish() {\n+        val dashPayUsername = intent.extras?.getString(EXTRA_DASHPAY_USERNAME)\n+        val lastLoadedUser = PlatformRepo.getInstance().lastLoadedUser", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzIwMw=="}, "originalCommit": {"oid": "821007f27568c7c560626e2ca4140f2dfe1429ef"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 581, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}