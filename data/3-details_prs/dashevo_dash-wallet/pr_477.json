{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NzE3MzAy", "number": 477, "title": "NMA-378 User Profile | Transaction History", "bodyText": "Issue being fixed or feature implemented\n\n\n\nNMA-378 User Profile | Transaction History\nRelated PR's and Dependencies\n\nScreenshots / Videos\n\n\nHow Has This Been Tested?\n\n\n\n\n QA (Mobile Team)\n\nChecklist:\n\n\n I have performed a self-review of my own code and added comments where necessary\n I have added or updated relevant unit/integration/functional/e2e tests", "createdAt": "2020-08-10T20:33:32Z", "url": "https://github.com/dashevo/dash-wallet/pull/477", "merged": true, "mergeCommit": {"oid": "02432ce357e97a476a502dde57e732615ffca210"}, "closed": true, "closedAt": "2020-08-14T15:36:01Z", "author": {"login": "tomasz-ludek"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9n_IbgH2gAyNDY1NzE3MzAyOmNhNDRhZDhkOGMzMjNhMDIwNTc5MzhjZWYwNzljM2Q2MDY5ZWQ2ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-wygoAH2gAyNDY1NzE3MzAyOmZjM2RjMGIyYmJiMmI5MmMzNzA3OTM0ZGRlODFhNzBkNjA0ZmRkMTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca44ad8d8c323a02057938cef079c3d6069ed6d8", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/ca44ad8d8c323a02057938cef079c3d6069ed6d8", "committedDate": "2020-08-10T20:10:43Z", "message": "Refactored NotificationsAdapter, moved ViewHolder's to separate classes, optimised code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd7dfccaf81d12e4b0aeeca6db222e470d2b88f5", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/bd7dfccaf81d12e4b0aeeca6db222e470d2b88f5", "committedDate": "2020-08-12T00:06:59Z", "message": "Further refactoring of NotificationAdapter, replaced ContactViewHolder and ContactRequestViewHolder with a single class NotificationViewHolder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTA4MzA3", "url": "https://github.com/dashevo/dash-wallet/pull/477#pullrequestreview-465508307", "createdAt": "2020-08-12T00:08:58Z", "commit": {"oid": "bd7dfccaf81d12e4b0aeeca6db222e470d2b88f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowODo1OFrOG_NWHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowODo1OFrOG_NWHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzMjEyNQ==", "bodyText": "Is it the right approach?\nI generate \"invitationItem\" for each established contacts so that it could be displayed in the history.", "url": "https://github.com/dashevo/dash-wallet/pull/477#discussion_r468932125", "createdAt": "2020-08-12T00:08:58Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NotificationsForUserLiveData.kt", "diffHunk": "@@ -13,13 +12,17 @@ class NotificationsForUserLiveData(walletApplication: WalletApplication, platfor\n         this.query = userId\n         GlobalScope.launch {\n             val results = arrayListOf<NotificationItem>()\n-            val contactRequests = platformRepo.searchContacts(\"\", UsernameSortOrderBy.DATE_ADDED)\n+            val contactRequests = platformRepo.searchContacts(\"\", UsernameSortOrderBy.DATE_ADDED, true)\n \n-            if(contactRequests.data != null) {\n-                contactRequests.data.filter {\n-                    cr -> cr.dashPayProfile.userId == userId\n+            if (contactRequests.data != null) {\n+                contactRequests.data.filter { cr ->\n+                    cr.dashPayProfile.userId == userId\n                 }.forEach {\n-                    results.add(NotificationItem(it))\n+                    results.add(NotificationItemContact(it))\n+                    if (it.type == UsernameSearchResult.Type.CONTACT_ESTABLISHED) {\n+                        val invitationItem = if (it.incoming) it.copy(toContactRequest = null) else it.copy(fromContactRequest = null)\n+                        results.add(NotificationItemContact(invitationItem, isInvitationOfEstablished = true))\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd7dfccaf81d12e4b0aeeca6db222e470d2b88f5"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTc5Njc2", "url": "https://github.com/dashevo/dash-wallet/pull/477#pullrequestreview-465579676", "createdAt": "2020-08-12T04:16:31Z", "commit": {"oid": "bd7dfccaf81d12e4b0aeeca6db222e470d2b88f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNDoxNjozMVrOG_RMdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNDoxNjozMVrOG_RMdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk5NTE4OA==", "bodyText": "Here, incoming appears to mean that we received a request first, then we sent our request later.\nOne issue here is that a UserSearchResult is also used for pending contact requests, in which cases toContactRequest will be null.  The NotificationActivity and ContactsFragment.  At this time, I don't think incoming will be used on either screen.\nFor the DashPayUserActivity screen, currently, or at least the way I wrote it, the history is only shown when there is a contact request going both ways (neither toContactRequest or fromContactRequest is null).\nAlso, I think the SearchUserActivity screen also uses UsernameSearchResult to hold a sent request where fromContactRequest is null.  While we don't use incoming in that activity, maybe it is better to make this getter null pointer exception proof.", "url": "https://github.com/dashevo/dash-wallet/pull/477#discussion_r468995188", "createdAt": "2020-08-12T04:16:31Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/data/UsernameSearchResult.kt", "diffHunk": "@@ -1,30 +1,45 @@\n package de.schildbach.wallet.data\n \n-import kotlin.math.max\n-\n data class UsernameSearchResult(val username: String,\n                                 val dashPayProfile: DashPayProfile,\n                                 var toContactRequest: DashPayContactRequest?,\n                                 var fromContactRequest: DashPayContactRequest?) {\n     val requestSent: Boolean\n-            get() = toContactRequest != null\n+        get() = toContactRequest != null\n     val requestReceived: Boolean\n-            get () = fromContactRequest != null\n+        get() = fromContactRequest != null\n     val isPendingRequest: Boolean\n-            get() = requestReceived && !requestSent\n+        get() = requestReceived && !requestSent\n+\n     val date: Long // milliseconds\n-            get() {\n-                return when (requestSent to requestReceived) {\n-                    true to true -> {\n-                        fromContactRequest!!.timestamp\n-                    }\n-                    true to false -> {\n-                        toContactRequest!!.timestamp\n-                    }\n-                    false to true -> {\n-                        fromContactRequest!!.timestamp\n-                    }\n-                    else -> 0.00\n-                }.toLong() * 1000\n-            }\n+        get() {\n+            return when (type) {\n+                Type.CONTACT_ESTABLISHED -> {\n+                    fromContactRequest!!.timestamp\n+                }\n+                Type.REQUEST_SENT -> {\n+                    toContactRequest!!.timestamp\n+                }\n+                Type.REQUEST_RECEIVED -> {\n+                    fromContactRequest!!.timestamp\n+                }\n+            }.toLong() * 1000\n+        }\n+\n+    val type: Type\n+        get() = when (requestSent to requestReceived) {\n+            true to true -> Type.CONTACT_ESTABLISHED\n+            false to true -> Type.REQUEST_RECEIVED\n+            true to false -> Type.REQUEST_SENT\n+            else -> throw IllegalStateException(\"toContactRequest and fromContactRequest can't both be null at the same time\")\n+        }\n+\n+    val incoming: Boolean\n+        get() = toContactRequest!!.timestamp > fromContactRequest!!.timestamp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd7dfccaf81d12e4b0aeeca6db222e470d2b88f5"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0d599d340bc9a57b0cba9bfc392992880269ca", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/ba0d599d340bc9a57b0cba9bfc392992880269ca", "committedDate": "2020-08-13T18:59:09Z", "message": "Final improvements of NotificationsAdapter and related data model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5a620c5c2e20b8cb0e0e221036701dac5614b2a", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/c5a620c5c2e20b8cb0e0e221036701dac5614b2a", "committedDate": "2020-08-13T19:18:17Z", "message": "Changed the way of displaying TransactionDetailsDialogFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9125288946d9b76ed2014017aac470731af40d", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/5c9125288946d9b76ed2014017aac470731af40d", "committedDate": "2020-08-13T19:32:32Z", "message": "Code refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MTM3MjYz", "url": "https://github.com/dashevo/dash-wallet/pull/477#pullrequestreview-467137263", "createdAt": "2020-08-13T21:18:05Z", "commit": {"oid": "5c9125288946d9b76ed2014017aac470731af40d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMToxODowNVrOHAeCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTo0MTo0MlrOHAet0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1NDI1OA==", "bodyText": "are these changes for debugging?", "url": "https://github.com/dashevo/dash-wallet/pull/477#discussion_r470254258", "createdAt": "2020-08-13T21:18:05Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/WalletFragment.kt", "diffHunk": "@@ -86,9 +91,23 @@ class WalletFragment : Fragment() {\n         if (walletFragmentView == null) {\n             walletFragmentView = inflater.inflate(R.layout.home_content, container, false)\n         }\n+\n+        process()\n+\n         return walletFragmentView\n     }\n \n+    private fun process() {\n+        GlobalScope.launch {\n+            val contactRequests = PlatformRepo1.getInstance().searchContacts(\"\", UsernameSortOrderBy.DATE_ADDED, true)\n+            if(contactRequests.data != null) {\n+                contactRequests.data.forEach {\n+                    println(\"contactRequests:\\t$it\")\n+                }\n+            }\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9125288946d9b76ed2014017aac470731af40d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1NTY5NA==", "bodyText": "This is the only place that has a conflict with my PR #475, which is pretty impressive.  there are some imports, so the merge process will very easy.", "url": "https://github.com/dashevo/dash-wallet/pull/477#discussion_r470255694", "createdAt": "2020-08-13T21:21:00Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NotificationsAdapter.kt", "diffHunk": "@@ -115,321 +82,64 @@ class NotificationsAdapter(val context: Context, val wallet: Wallet, val onConta\n     }\n \n     override fun getItemId(position: Int): Long {\n-        return when (results[position].viewType) {\n-            NOTIFICATION_NEW_HEADER -> 1L\n-            NOTIFICATION_NEW_EMPTY -> 2L\n-            NOTIFICATION_CONTACT_REQUEST_RECEIVED -> getLongValue(results[position].notificationItem!!.id)\n-            NOTIFICATION_EARLIER_HEADER -> 3L\n-            NOTIFICATION_CONTACT_ADDED -> getLongValue(results[position].notificationItem!!.id)\n-            NOTIFICATION_PAYMENT -> getLongValue(results[position].notificationItem!!.id)\n-            else -> throw IllegalArgumentException(\"Invalid viewType ${results[position].viewType}\")\n-        }\n-    }\n-\n-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n-        when (results[position].viewType) {\n-            NOTIFICATION_CONTACT_REQUEST_RECEIVED,\n-            NOTIFICATION_CONTACT_ADDED -> holder.bind(results[position].notificationItem!!.usernameSearchResult!!, results[position].isNew)\n-            NOTIFICATION_NEW_HEADER -> (holder as HeaderViewHolder).bind(R.string.notifications_new)\n-            NOTIFICATION_EARLIER_HEADER -> (holder as HeaderViewHolder).bind(R.string.notifications_earlier)\n-            NOTIFICATION_NEW_EMPTY -> (holder as ImageViewHolder).bind(R.drawable.ic_notification_new_empty, R.string.notifications_none_new)\n-            NOTIFICATION_PAYMENT -> (holder as TransactionViewHolder).bind(results[position].notificationItem!!.tx!!)\n-            else -> throw IllegalArgumentException(\"Invalid viewType ${results[position].viewType}\")\n+        return when (getItemViewType(position)) {\n+            NOTIFICATION_HEADER -> 1L\n+            NOTIFICATION_EMPTY -> 2L\n+            else -> getLongValue(getItem(position).notificationItem.getId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9125288946d9b76ed2014017aac470731af40d"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1NjM4OA==", "bodyText": "very good!", "url": "https://github.com/dashevo/dash-wallet/pull/477#discussion_r470256388", "createdAt": "2020-08-13T21:22:24Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -299,9 +299,7 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n                 val usernameSearchResult = UsernameSearchResult(profile.value!!.username,\n                         profile.value!!, toContact, fromContact)\n \n-                // only include contacts that have sent requests to us (we may have accepted them)\n-                // do not include contactRequest that we have sent but have not been accepted\n-                if (usernameSearchResult.requestReceived)\n+                if (usernameSearchResult.requestReceived || (includeSentPending && usernameSearchResult.requestSent))\n                     usernameSearchResults.add(usernameSearchResult)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9125288946d9b76ed2014017aac470731af40d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI2NTI5Ng==", "bodyText": "Very good! this gets the formatting to match the designs. I had no idea how make the display name bold.", "url": "https://github.com/dashevo/dash-wallet/pull/477#discussion_r470265296", "createdAt": "2020-08-13T21:41:42Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/notification/ContactViewHolder.kt", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2020 Dash Core Group.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package de.schildbach.wallet.ui.dashpay.notification\n+\n+import android.text.Html\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import com.bumptech.glide.Glide\n+import de.schildbach.wallet.data.NotificationItem\n+import de.schildbach.wallet.data.NotificationItemContact\n+import de.schildbach.wallet.data.UsernameSearchResult\n+import de.schildbach.wallet.ui.UserAvatarPlaceholderDrawable\n+import de.schildbach.wallet_test.R\n+import kotlinx.android.synthetic.main.notification_contact_request_received_row.view.*\n+import java.text.SimpleDateFormat\n+import java.util.*\n+\n+open class ContactViewHolder(inflater: LayoutInflater, parent: ViewGroup) :\n+        NotificationViewHolder(R.layout.notification_contact_request_received_row, inflater, parent) {\n+\n+    private val dateFormat = SimpleDateFormat(\"MMM dd, yyyy KK:mm a\", Locale.getDefault())\n+\n+    private fun formatDate(timeStamp: Long): String {\n+        return dateFormat.format(timeStamp).replace(\"AM\", \"am\").replace(\"PM\",\"pm\")\n+    }\n+\n+    override fun bind(notificationItem: NotificationItem, vararg args: Any) {\n+        (notificationItem as NotificationItemContact).run {\n+            bind(usernameSearchResult, (args[0] as Boolean), isInvitationOfEstablished, (args[1] as Boolean), (args[2] as OnContactActionClickListener))\n+        }\n+    }\n+\n+    private fun bind(usernameSearchResult: UsernameSearchResult, isNew: Boolean, isInvitationOfEstablished: Boolean,\n+                     showAvatar: Boolean, onActionClickListener: OnContactActionClickListener? = null) {\n+\n+        val defaultAvatar = UserAvatarPlaceholderDrawable.getDrawable(itemView.context,\n+                usernameSearchResult.username[0])\n+\n+        itemView.apply {\n+            setBackgroundResource(if (isNew) R.drawable.selectable_round_corners else R.drawable.selectable_round_corners_dark)\n+            date.text = formatDate(usernameSearchResult.date)\n+\n+            val dashPayProfile = usernameSearchResult.dashPayProfile\n+            val name = if (dashPayProfile.displayName.isEmpty()) {\n+                dashPayProfile.username\n+            } else {\n+                dashPayProfile.displayName\n+            }\n+\n+            val displayNameResId = when (usernameSearchResult.type) {\n+                UsernameSearchResult.Type.CONTACT_ESTABLISHED -> {\n+                    contact_added.setImageResource(R.drawable.ic_contact_added)\n+                    val sentDate = usernameSearchResult.toContactRequest!!.timestamp\n+                    val receivedDate = usernameSearchResult.fromContactRequest!!.timestamp\n+                    if (sentDate > receivedDate) {\n+                        R.string.notifications_you_have_accepted\n+                    } else {\n+                        R.string.notifications_contact_has_accepted\n+                    }\n+                }\n+                UsernameSearchResult.Type.REQUEST_RECEIVED -> {\n+                    contact_added.setImageResource(R.drawable.ic_add_contact)\n+                    R.string.notifications_you_received\n+                }\n+                UsernameSearchResult.Type.REQUEST_SENT -> {\n+                    contact_added.setImageResource(R.drawable.ic_add_contact)\n+                    R.string.notifications_you_sent\n+                }\n+            }\n+\n+            @Suppress(\"DEPRECATION\")\n+            val displayNameText = context.getString(displayNameResId, \"<b>$name</b>\")\n+            displayName.text = Html.fromHtml(displayNameText)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9125288946d9b76ed2014017aac470731af40d"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a16ef467b088bcfcbf528f4239da402fb835e9", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/72a16ef467b088bcfcbf528f4239da402fb835e9", "committedDate": "2020-08-14T08:26:34Z", "message": "Added a missing comment from https://github.com/dashevo/dash-wallet/pull/473"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c550ffae0add9944b9539e3add515877bf75a37", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/8c550ffae0add9944b9539e3add515877bf75a37", "committedDate": "2020-08-14T08:33:36Z", "message": "Removed debugging code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc9bb62c1d139b4b6f282881641341469f055e01", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/cc9bb62c1d139b4b6f282881641341469f055e01", "committedDate": "2020-08-14T08:37:49Z", "message": "Code refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2a8a828e8b6ab38e8c99302a6611a9facfef8c", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/3a2a8a828e8b6ab38e8c99302a6611a9facfef8c", "committedDate": "2020-08-14T08:39:25Z", "message": "Merge branch 'evonet-develop' into user-profile-transaction-history-bis\n\n# Conflicts:\n#\twallet/res/layout/receive_info_view.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc3dc0b2bbb2b92c3707934dde81a70d604fdd17", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/fc3dc0b2bbb2b92c3707934dde81a70d604fdd17", "committedDate": "2020-08-14T09:00:00Z", "message": "Improved id generation for HeaderViewItem and ImageViewItem"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2791, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}