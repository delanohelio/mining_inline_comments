{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODg2Mjkw", "number": 566, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNjo1OVrOFAjJoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzoyNDowOFrOFGC0XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTIwMjI0OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNjo1OVrOH-6GDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjozODoyMlrOIGp1jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNTU4MA==", "bodyText": "limit is set to 3 earlier in the process, but limit is supplied as the startAt argument of search\nCurrently, search does not support a limit parameter.\n    /**\n     * Searches for and returns a list of all name documents that match the given name based\n     * on these criteria: starts with.  Contains is not supported\n     * @param text String\n     * @param parentDomain String\n     * @param retrieveAll Boolean\n     * @param startAtIndex Int\n     * @return List<Documents>\n     */\n    fun search(text: String, parentDomain: String, retrieveAll: Boolean, startAtIndex: Int = 0): List<Document>", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r535725580", "createdAt": "2020-12-03T23:36:59Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,\n+                false, limit)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98d7ab4d1818258028a437678b725c88089abf22"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNzQ3Mw==", "bodyText": "if startAtIndex is set to 3, then no results are returned if there are less than 3 items that match the search.\nOn the Search username screen, the limit is set to 100, so the first 100 usernames are ignored.", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r535727473", "createdAt": "2020-12-03T23:41:39Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,\n+                false, limit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNTU4MA=="}, "originalCommit": {"oid": "98d7ab4d1818258028a437678b725c88089abf22"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyODUxMQ==", "bodyText": "There are two solutions:\n\nPrune search results to match the limit\nadd a limit parameter in the dashpay/platform library for Names.search", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r535728511", "createdAt": "2020-12-03T23:44:10Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,\n+                false, limit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNTU4MA=="}, "originalCommit": {"oid": "98d7ab4d1818258028a437678b725c88089abf22"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwMDQ5NA==", "bodyText": "Since dashpay PR https://github.com/dashevo/android-dashpay/pull/30/files#diff-4aaba3784c9fd97aaa67d814745186f6d8fdd8c6e7faa8118eb398103bb73211R235 adds a limit parameter, shouldn't your code have a limit = limit, otherwise limit is the value used for startAtIndex?\nThough when I tested this PR, it did display three results, but not sure if they were the first three or the second three.", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r538800494", "createdAt": "2020-12-08T20:55:48Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,\n+                false, limit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNTU4MA=="}, "originalCommit": {"oid": "98d7ab4d1818258028a437678b725c88089abf22"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0NzgyMg==", "bodyText": "Fixed on bb9ff71", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r543847822", "createdAt": "2020-12-16T02:38:22Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,\n+                false, limit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNTU4MA=="}, "originalCommit": {"oid": "98d7ab4d1818258028a437678b725c88089abf22"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTY2MzM3OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ContactsFragment.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDo1Mjo1OVrOH_hnWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzoxOTozOVrOIG3J8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3MzA4Mg==", "bodyText": "if query is \"\" (empty) then we shouldn't execute the search.\nI/DapiClient: [DefaultDispatcher-worker-3] getDocuments(H9AxLAvgxEpq72pDg41nsqR3bY5Cv9hTT6yZdKzY3PaE, domain, {limit=3, orderBy=[[normalizedLabel, asc]], where=[[normalizedParentDomainName, ==, dash], [normalizedLabel, startsWith, ]], startAt=0})\n...\nW/DapiClient: [DefaultDispatcher-worker-3] RPC failed with 34.216.205.76: Status{code=INVALID_ARGUMENT, description=Invalid query: should be equal to one of the allowed values, cause=null}: Metadata(server=nginx/1.19.3,date=Fri, 04 Dec 2020 20:41:46 GMT,content-type=application/grpc,content-length=0,errors=[{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"enum\",\"dataPath\":\".where[1][1]\",\"schemaPath\":\"#/properties/where/items/oneOf/0/items/1/enum\",\"params\":{\"allowedValues\":[\"<\",\"<=\",\"==\",\">\",\">=\"]}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"enum\",\"dataPath\":\".where[1][0]\",\"schemaPath\":\"#/properties/where/items/oneOf/1/items/0/enum\",\"params\":{\"allowedValues\":[\"$createdAt\",\"$updatedAt\"]}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"const\",\"dataPath\":\".where[1][1]\",\"schemaPath\":\"#/properties/where/items/oneOf/2/items/1/const\",\"params\":{\"allowedValue\":\"in\"}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"minLength\",\"dataPath\":\".where[1][2]\",\"schemaPath\":\"#/properties/where/items/oneOf/3/items/2/minLength\",\"params\":{\"limit\":1}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"const\",\"dataPath\":\".where[1][1]\",\"schemaPath\":\"#/properties/where/items/oneOf/4/items/1/const\",\"params\":{\"allowedValue\":\"elementMatch\"}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"const\",\"dataPath\":\".where[1][1]\",\"schemaPath\":\"#/properties/where/items/oneOf/5/items/1/const\",\"params\":{\"allowedValue\":\"length\"}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"const\",\"dataPath\":\".where[1][1]\",\"schemaPath\":\"#/properties/where/items/oneOf/6/items/1/const\",\"params\":{\"allowedValue\":\"contains\"}},{\"name\":\"JsonSchemaValidationError\",\"keyword\":\"oneOf\",\"dataPath\":\".where[1]\",\"schemaPath\":\"#/properties/where/items/oneOf\",\"params\":{\"passingSchemas\":null}}])\n..\nE/Documents: [DefaultDispatcher-worker-3] Document creation: unable to get documents of H9AxLAvgxEpq72pDg41nsqR3bY5Cv9hTT6yZdKzY3PaE: io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Invalid query: should be equal to one of the allowed values\nE/DashPayViewModel: [DefaultDispatcher-worker-3] search usernames: INVALID_ARGUMENT: Invalid query: should be equal to one of the allowed values", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r536373082", "createdAt": "2020-12-04T20:52:59Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ContactsFragment.kt", "diffHunk": "@@ -123,12 +136,18 @@ class ContactsFragment : Fragment(R.layout.fragment_contacts_root), TextWatcher,\n                 if (initialSearch && (mode != MODE_VIEW_REQUESTS)) {\n                     if (it.data == null || it.data.isEmpty() || it.data.find { u -> u.requestReceived } == null) {\n                         empty_state_pane.visibility = View.VISIBLE\n-                        contacts_pane.visibility = View.GONE\n+                        search.visibility = View.GONE\n+                        icon.visibility = View.GONE\n                     } else {\n+                        search.visibility = View.VISIBLE\n+                        icon.visibility = View.VISIBLE\n                         empty_state_pane.visibility = View.GONE\n-                        contacts_pane.visibility = View.VISIBLE\n                     }\n                     initialSearch = false\n+                } else {\n+                    if (it.data == null || it.data.isEmpty()) {\n+                        dashPayViewModel.searchUsernames(query, 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87a1a1343c927948a2a81b99371353a5b3f36a2a"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg3MTkyMg==", "bodyText": "Fixed in 1c633ae", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r543871922", "createdAt": "2020-12-16T03:09:22Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ContactsFragment.kt", "diffHunk": "@@ -123,12 +136,18 @@ class ContactsFragment : Fragment(R.layout.fragment_contacts_root), TextWatcher,\n                 if (initialSearch && (mode != MODE_VIEW_REQUESTS)) {\n                     if (it.data == null || it.data.isEmpty() || it.data.find { u -> u.requestReceived } == null) {\n                         empty_state_pane.visibility = View.VISIBLE\n-                        contacts_pane.visibility = View.GONE\n+                        search.visibility = View.GONE\n+                        icon.visibility = View.GONE\n                     } else {\n+                        search.visibility = View.VISIBLE\n+                        icon.visibility = View.VISIBLE\n                         empty_state_pane.visibility = View.GONE\n-                        contacts_pane.visibility = View.VISIBLE\n                     }\n                     initialSearch = false\n+                } else {\n+                    if (it.data == null || it.data.isEmpty()) {\n+                        dashPayViewModel.searchUsernames(query, 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3MzA4Mg=="}, "originalCommit": {"oid": "87a1a1343c927948a2a81b99371353a5b3f36a2a"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA2NjAzMw==", "bodyText": "Excellent.", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r544066033", "createdAt": "2020-12-16T07:19:39Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ContactsFragment.kt", "diffHunk": "@@ -123,12 +136,18 @@ class ContactsFragment : Fragment(R.layout.fragment_contacts_root), TextWatcher,\n                 if (initialSearch && (mode != MODE_VIEW_REQUESTS)) {\n                     if (it.data == null || it.data.isEmpty() || it.data.find { u -> u.requestReceived } == null) {\n                         empty_state_pane.visibility = View.VISIBLE\n-                        contacts_pane.visibility = View.GONE\n+                        search.visibility = View.GONE\n+                        icon.visibility = View.GONE\n                     } else {\n+                        search.visibility = View.VISIBLE\n+                        icon.visibility = View.VISIBLE\n                         empty_state_pane.visibility = View.GONE\n-                        contacts_pane.visibility = View.VISIBLE\n                     }\n                     initialSearch = false\n+                } else {\n+                    if (it.data == null || it.data.isEmpty()) {\n+                        dashPayViewModel.searchUsernames(query, 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3MzA4Mg=="}, "originalCommit": {"oid": "87a1a1343c927948a2a81b99371353a5b3f36a2a"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODgxOTQ4OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzoyNDowOFrOIG3VOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjozMDoxNFrOIHh0-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA2ODkyMw==", "bodyText": "This solution relies on https://github.com/dashevo/android-dashpay/pull/30/files which has merge conflicts due to parameter order differences with Names.search.  Either the merge conflicts on the previously mentioned android-dashpay PR must be resolved or the parameter order must be changed here.", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r544068923", "createdAt": "2020-12-16T07:24:08Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c633ae301fccf67b410a4ded440bcc3c56485a2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc2NTE3OA==", "bodyText": "Well spotted!\nFixed on 8fa8341", "url": "https://github.com/dashevo/dash-wallet/pull/566#discussion_r544765178", "createdAt": "2020-12-17T02:30:14Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -195,13 +195,14 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      */\n \n     @Throws(Exception::class)\n-    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n+    suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false, limit: Int = -1): List<UsernameSearchResult> {\n         val userIdString = blockchainIdentity.uniqueIdString\n         val userId = blockchainIdentity.uniqueIdentifier\n \n         // Names.search does support retrieving 100 names at a time if retrieveAll = false\n         //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results\n-        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, false)\n+        val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA2ODkyMw=="}, "originalCommit": {"oid": "1c633ae301fccf67b410a4ded440bcc3c56485a2"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 549, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}