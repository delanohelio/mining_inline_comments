{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTIzNjE0", "number": 520, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNDoyOVrOEp9dGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo1NzozNlrOEqcTuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDMzOTQ0OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/EditProfileActivity.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNDoyOVrOHb8wGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNDoyOVrOHb8wGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODk1Mw==", "bodyText": "The purpose of this method is to support the updating the profile if it was changed on another device.\nHowever, one the user starts typing, then the observer is removed.\nOriginally, I had the observer turned back on after the update operation was successful and finished, but then the observer is called with the previous values in the profile and then the screen would change all the text fields back to the previous values.  Though, if one goes back to the More screen, then he newly changed Display Name would show up.\nFor now, after editing, then the View is no longer live.  This may actually be a bad idea to have the view being live.  It is perhaps unlikely that a user would update their profile on two devices at the same time.", "url": "https://github.com/dashevo/dash-wallet/pull/520#discussion_r499068953", "createdAt": "2020-10-02T22:04:29Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/EditProfileActivity.kt", "diffHunk": "@@ -116,8 +161,25 @@ class EditProfileActivity : BaseMenuActivity() {\n             dashpayUserAvatar.setImageDrawable(defaultAvatar)\n         }\n \n-        aboutMe.setText(profile.publicMessage)\n-        displayName.setText(profile.displayName)\n+        about_me.setText(profile.publicMessage)\n+        display_name.setText(profile.displayName)\n+    }\n+\n+    // This method works well when it is called the first time,\n+    // but when it is called after updating the profile, `it` is the old profile\n+    private val dashPayProfileObserver = Observer<DashPayProfile?> {\n+        if (it != null) {\n+            dashPayProfile = it\n+            showProfileInfo(it)\n+        }\n+    }\n+\n+    private fun setEditingState(isEditing: Boolean) {\n+        if (!isEditing) {\n+            editProfileViewModel.dashPayProfileData.observe(this, dashPayProfileObserver)\n+        } else {\n+            editProfileViewModel.dashPayProfileData.removeObserver(dashPayProfileObserver)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e73aa7aab094f18c8abfe4e9f1f97bf57660f0"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDM0NDU4OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/MoreFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzoxNVrOHb8zOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzoxNVrOHb8zOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTc1NQ==", "bodyText": "This observer seems to be called after a update operation is finished in the EditProfileActivity and the user returns to the More Screen.", "url": "https://github.com/dashevo/dash-wallet/pull/520#discussion_r499069755", "createdAt": "2020-10-02T22:07:15Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/MoreFragment.kt", "diffHunk": "@@ -66,14 +78,54 @@ class MoreFragment : Fragment(R.layout.activity_more) {\n                     WalletApplication.getInstance()).show()\n         }\n \n+        update_profile_status_container.visibility = View.GONE\n+\n         val blockchainIdentity = PlatformRepo.getInstance().getBlockchainIdentity()\n         if (blockchainIdentity != null && blockchainIdentity.registrationStatus == BlockchainIdentity.RegistrationStatus.REGISTERED) {\n-            AppDatabase.getAppDatabase().dashPayProfileDaoAsync().loadByUserIdDistinct(blockchainIdentity.uniqueIdString)\n+            editProfileViewModel.dashPayProfileData\n                     .observe(viewLifecycleOwner, Observer {\n                         if (it != null) {\n+                            dashPayProfile = it\n                             showProfileSection(it)\n                         }\n                     })\n+\n+            //show updating profile animation if necessary\n+\n+            editProfileViewModel.updateProfileRequestState.observe(context!!.lifecycleOwner()!!, Observer {\n+                if (it != null && it.containsKey(dashPayProfile.userId)) {\n+                    val state = it[dashPayProfile.userId]\n+                    when(state!!.status) {\n+                        Status.SUCCESS -> {\n+                            Toast.makeText(requireActivity(), \"Update successful\", Toast.LENGTH_LONG).show()\n+                            update_profile_status_container.visibility = View.GONE\n+                            editProfile.visibility = View.VISIBLE\n+                        }\n+                        Status.ERROR -> {\n+                            var msg = state.message\n+                            if (msg == null) {\n+                                msg = \"!!Error!!  ${state.exception!!.message}\"\n+                            }\n+                            Toast.makeText(requireActivity(), msg, Toast.LENGTH_LONG).show()\n+                            update_profile_status_container.visibility = View.VISIBLE\n+                            update_status_text.text = msg\n+                            editProfile.visibility = View.VISIBLE\n+                        }\n+                        Status.LOADING -> {\n+                            Toast.makeText(requireActivity(), \"Processing update\", Toast.LENGTH_LONG).show()\n+                            update_profile_status_container.visibility = View.VISIBLE\n+                            editProfile.visibility = View.GONE\n+                        }\n+                        Status.CANCELED -> {\n+                            update_profile_status_container.visibility = View.VISIBLE\n+                            update_status_text.text = \"Cancelled\" //hard coded text\n+                            editProfile.visibility = View.VISIBLE\n+                        }\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e73aa7aab094f18c8abfe4e9f1f97bf57660f0"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTM5NDQ5OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/EditProfileActivity.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo1NzozNlrOHcpv9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo1NzozNlrOHcpv9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwNjE5Nw==", "bodyText": "This is where I thought we could turn the observer back ON, but it the data loaded was old.", "url": "https://github.com/dashevo/dash-wallet/pull/520#discussion_r499806197", "createdAt": "2020-10-05T18:57:36Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/EditProfileActivity.kt", "diffHunk": "@@ -104,6 +113,41 @@ class EditProfileActivity : BaseMenuActivity() {\n             }\n \n         })\n+\n+        editProfileViewModel.updateProfileRequestState.observe(this, Observer {\n+            if (it != null) {\n+                when (it.status) {\n+                    Status.SUCCESS -> {\n+                        Toast.makeText(this@EditProfileActivity, \"Update successful\", Toast.LENGTH_LONG).show()\n+                        //setEditingState(false) // if this line is here, then the Profile changes to the previous value (crazy?)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee5a72d54be47197b7797b426b057b4a947987c8"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 596, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}