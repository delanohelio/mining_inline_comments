{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NDkxMDE3", "number": 519, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjoxMzoxOVrOEppTTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODozNzoyMlrOEpvCXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTAzNzU5OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/MainActivity.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjoxMzoxOVrOHbcXhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMTowMDoxOVrOHbe2XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUzODM3NQ==", "bodyText": "blockchainIdentityDataDao was renamed blockchainIdentityDataDaoAsync.  This PR must be based on an older commit from the evonet-develop branch.\nNot sure why this doesn't have a merge conflict.", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498538375", "createdAt": "2020-10-01T22:13:19Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/MainActivity.kt", "diffHunk": "@@ -115,6 +134,32 @@ class MainActivity : AbstractBindServiceActivity(), ActivityCompat.OnRequestPerm\n         handleIntent(intent!!)\n     }\n \n+    override fun onWalletFragmentViewCreated() {\n+        AppDatabase.getAppDatabase().blockchainStateDao().load().observe(this, Observer {\n+            blockchainState = it\n+            walletFragment.setBlockchainState(blockchainState)\n+        })\n+        dashPayViewModel = ViewModelProvider(this)[DashPayViewModel::class.java]\n+        dashPayViewModel!!.isPlatformAvailableLiveData.observe(this, Observer<Resource<Boolean?>?> { status ->\n+            if (status?.status === Status.SUCCESS) {\n+                if (status.data != null) {\n+                    isPlatformAvailable = status.data\n+                }\n+            } else {\n+                isPlatformAvailable = false\n+            }\n+            walletFragment.setPlatformAvailability(isPlatformAvailable)\n+        })\n+        AppDatabase.getAppDatabase().blockchainIdentityDataDao().loadBase().observe(this,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de3d53e2ab7a86e9f8b9801a192abf49314d506d"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUzODczNQ==", "bodyText": "blockchainIdentityDataDao() is now only to be used in suspend methods, while blockchainIdentityDataDaoAsync() is actually asynchronous.", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498538735", "createdAt": "2020-10-01T22:14:34Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/MainActivity.kt", "diffHunk": "@@ -115,6 +134,32 @@ class MainActivity : AbstractBindServiceActivity(), ActivityCompat.OnRequestPerm\n         handleIntent(intent!!)\n     }\n \n+    override fun onWalletFragmentViewCreated() {\n+        AppDatabase.getAppDatabase().blockchainStateDao().load().observe(this, Observer {\n+            blockchainState = it\n+            walletFragment.setBlockchainState(blockchainState)\n+        })\n+        dashPayViewModel = ViewModelProvider(this)[DashPayViewModel::class.java]\n+        dashPayViewModel!!.isPlatformAvailableLiveData.observe(this, Observer<Resource<Boolean?>?> { status ->\n+            if (status?.status === Status.SUCCESS) {\n+                if (status.data != null) {\n+                    isPlatformAvailable = status.data\n+                }\n+            } else {\n+                isPlatformAvailable = false\n+            }\n+            walletFragment.setPlatformAvailability(isPlatformAvailable)\n+        })\n+        AppDatabase.getAppDatabase().blockchainIdentityDataDao().loadBase().observe(this,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUzODM3NQ=="}, "originalCommit": {"oid": "de3d53e2ab7a86e9f8b9801a192abf49314d506d"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU3OTAzNg==", "bodyText": "Fixed on https://github.com/sambarboza/dash-wallet/commit/964b74e840cd75422b5beaaee8e6c853f207c2c8", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498579036", "createdAt": "2020-10-02T01:00:19Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/MainActivity.kt", "diffHunk": "@@ -115,6 +134,32 @@ class MainActivity : AbstractBindServiceActivity(), ActivityCompat.OnRequestPerm\n         handleIntent(intent!!)\n     }\n \n+    override fun onWalletFragmentViewCreated() {\n+        AppDatabase.getAppDatabase().blockchainStateDao().load().observe(this, Observer {\n+            blockchainState = it\n+            walletFragment.setBlockchainState(blockchainState)\n+        })\n+        dashPayViewModel = ViewModelProvider(this)[DashPayViewModel::class.java]\n+        dashPayViewModel!!.isPlatformAvailableLiveData.observe(this, Observer<Resource<Boolean?>?> { status ->\n+            if (status?.status === Status.SUCCESS) {\n+                if (status.data != null) {\n+                    isPlatformAvailable = status.data\n+                }\n+            } else {\n+                isPlatformAvailable = false\n+            }\n+            walletFragment.setPlatformAvailability(isPlatformAvailable)\n+        })\n+        AppDatabase.getAppDatabase().blockchainIdentityDataDao().loadBase().observe(this,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUzODM3NQ=="}, "originalCommit": {"oid": "de3d53e2ab7a86e9f8b9801a192abf49314d506d"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTA1NDMxOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/util/WalletExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjoyMToyOVrOHbchwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0NjoyN1rOHbl1WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0MDk5Mw==", "bodyText": "My question is not related to this PR, but what happens when the user only has 0.01 DASH and they try to register.  Will it succeed or fail?  The reason for the question is that there is a fee that is required to send the transaction.  Though, in the case of sending all the value, then the fee may be taken out of the 0.01.  What if the balance is 0.01 - something less than the fee?  We can have QA figure this out and make a new ticket if there is a problem.", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498540993", "createdAt": "2020-10-01T22:21:29Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/util/WalletExtensions.kt", "diffHunk": "@@ -0,0 +1,11 @@\n+package de.schildbach.wallet.util\n+\n+import de.schildbach.wallet.Constants\n+import org.bitcoinj.core.Coin\n+import org.bitcoinj.wallet.Wallet\n+\n+fun Wallet.canAffordIdentityCreation(): Boolean {\n+    val walletBalance: Coin = getBalance(Wallet.BalanceType.ESTIMATED)\n+    return (walletBalance.isGreaterThan(Constants.DASH_PAY_FEE)\n+            || walletBalance == Constants.DASH_PAY_FEE)\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de3d53e2ab7a86e9f8b9801a192abf49314d506d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5MzQ2NQ==", "bodyText": "@HashEngineering when I sent 0.01 to the new wallet and try to create an Identity it fails due to insufficient funds exception...", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498693465", "createdAt": "2020-10-02T08:46:27Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/util/WalletExtensions.kt", "diffHunk": "@@ -0,0 +1,11 @@\n+package de.schildbach.wallet.util\n+\n+import de.schildbach.wallet.Constants\n+import org.bitcoinj.core.Coin\n+import org.bitcoinj.wallet.Wallet\n+\n+fun Wallet.canAffordIdentityCreation(): Boolean {\n+    val walletBalance: Coin = getBalance(Wallet.BalanceType.ESTIMATED)\n+    return (walletBalance.isGreaterThan(Constants.DASH_PAY_FEE)\n+            || walletBalance == Constants.DASH_PAY_FEE)\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0MDk5Mw=="}, "originalCommit": {"oid": "de3d53e2ab7a86e9f8b9801a192abf49314d506d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTk2OTExOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/MainActivity.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODozNDo0NlrOHbldtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODozNDo0NlrOHbldtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4NzQxMg==", "bodyText": "Those empty observers could be replaced by other way of triggering data loading but let's leave it as it is\nI'll fix it when working on \"JoinDash\" shortcut when #516 in merged (it will be merged after this PR)", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498687412", "createdAt": "2020-10-02T08:34:46Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/MainActivity.kt", "diffHunk": "@@ -102,6 +115,21 @@ class MainActivity : AbstractBindServiceActivity(), ActivityCompat.OnRequestPerm\n         setupBottomNavigation()\n     }\n \n+    fun initViewModel() {\n+        viewModel = ViewModelProvider(this)[MainActivityViewModel::class.java]\n+        viewModel.blockchainStateData.observe(this, Observer {\n+            // just to trigger data loading\n+        })\n+        viewModel.isPlatformAvailableData.observe(this, Observer {\n+            // just to trigger data loading\n+        })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6db8aabc49cef4ebfca621df5ca163ce24e5da"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTk3NzI3OnYy", "diffSide": "LEFT", "path": "wallet/src/de/schildbach/wallet/ui/WalletFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODozNzoyMlrOHbli0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODozNzoyMlrOHbli0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4ODcyMA==", "bodyText": "this shouldn't be needed when using LiveDatas", "url": "https://github.com/dashevo/dash-wallet/pull/519#discussion_r498688720", "createdAt": "2020-10-02T08:37:22Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/WalletFragment.kt", "diffHunk": "@@ -119,27 +132,7 @@ class WalletFragment : Fragment() {\n         showHideJoinDashPayAction()\n     }\n \n-    fun setBlockchainState(blockchainState: BlockchainState?) {\n-        this.blockchainState = blockchainState\n-        if (isDetached || !isVisible) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6db8aabc49cef4ebfca621df5ca163ce24e5da"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 594, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}