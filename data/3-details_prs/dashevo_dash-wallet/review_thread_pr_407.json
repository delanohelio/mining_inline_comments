{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTA3OTI2", "number": 407, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTowNDo0NFrOD8MvvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTowNDo0NFrOD8MvvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDQ5OTgwOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTowNDo0NFrOGU_miQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMzoyNTo0OVrOGVcHyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2Njc2MQ==", "bodyText": "This section will have merge conflicts with #406 .", "url": "https://github.com/dashevo/dash-wallet/pull/407#discussion_r424666761", "createdAt": "2020-05-13T19:04:44Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -52,11 +52,11 @@ class TransactionResultActivity : AbstractWalletActivity() {\n \n         @JvmStatic\n         fun createIntent(context: Context, transaction: Transaction, userAuthorized: Boolean,\n-                         payeeName: String? = null, payeeVerifiedBy: String? = null): Intent {\n+                         paymentMemo: String? = null, payeeVerifiedBy: String? = null): Intent {\n             val transactionResultIntent = Intent(context, TransactionResultActivity::class.java)\n             transactionResultIntent.putExtra(EXTRA_TX_ID, transaction.txId)\n             transactionResultIntent.putExtra(EXTRA_USER_AUTHORIZED_RESULT_EXTRA, userAuthorized)\n-            transactionResultIntent.putExtra(EXTRA_PAYEE_NAME, payeeName)\n+            transactionResultIntent.putExtra(EXTRA_PAYMENT_MEMO, paymentMemo)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa74a432803abcabb8b68f10f320cfae5e3cfe0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk5MTA2Nw==", "bodyText": "I merged deeplink-payment-fix into bip70-updates and resolved conflicts.\nThis PR should be merged before #406.", "url": "https://github.com/dashevo/dash-wallet/pull/407#discussion_r424991067", "createdAt": "2020-05-14T09:16:50Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -52,11 +52,11 @@ class TransactionResultActivity : AbstractWalletActivity() {\n \n         @JvmStatic\n         fun createIntent(context: Context, transaction: Transaction, userAuthorized: Boolean,\n-                         payeeName: String? = null, payeeVerifiedBy: String? = null): Intent {\n+                         paymentMemo: String? = null, payeeVerifiedBy: String? = null): Intent {\n             val transactionResultIntent = Intent(context, TransactionResultActivity::class.java)\n             transactionResultIntent.putExtra(EXTRA_TX_ID, transaction.txId)\n             transactionResultIntent.putExtra(EXTRA_USER_AUTHORIZED_RESULT_EXTRA, userAuthorized)\n-            transactionResultIntent.putExtra(EXTRA_PAYEE_NAME, payeeName)\n+            transactionResultIntent.putExtra(EXTRA_PAYMENT_MEMO, paymentMemo)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2Njc2MQ=="}, "originalCommit": {"oid": "3fa74a432803abcabb8b68f10f320cfae5e3cfe0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEzNDAyNQ==", "bodyText": "If deeplink-payment-fix was merged into this PR, shouldn't #406 be merged to master before this PR #407?  Otherwise it seems that #406 would be an empty merge since all the code was merged with #406.  In any case, I will try it out locally before doing it on GitHub.", "url": "https://github.com/dashevo/dash-wallet/pull/407#discussion_r425134025", "createdAt": "2020-05-14T13:25:49Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/TransactionResultActivity.kt", "diffHunk": "@@ -52,11 +52,11 @@ class TransactionResultActivity : AbstractWalletActivity() {\n \n         @JvmStatic\n         fun createIntent(context: Context, transaction: Transaction, userAuthorized: Boolean,\n-                         payeeName: String? = null, payeeVerifiedBy: String? = null): Intent {\n+                         paymentMemo: String? = null, payeeVerifiedBy: String? = null): Intent {\n             val transactionResultIntent = Intent(context, TransactionResultActivity::class.java)\n             transactionResultIntent.putExtra(EXTRA_TX_ID, transaction.txId)\n             transactionResultIntent.putExtra(EXTRA_USER_AUTHORIZED_RESULT_EXTRA, userAuthorized)\n-            transactionResultIntent.putExtra(EXTRA_PAYEE_NAME, payeeName)\n+            transactionResultIntent.putExtra(EXTRA_PAYMENT_MEMO, paymentMemo)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2Njc2MQ=="}, "originalCommit": {"oid": "3fa74a432803abcabb8b68f10f320cfae5e3cfe0"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 651, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}