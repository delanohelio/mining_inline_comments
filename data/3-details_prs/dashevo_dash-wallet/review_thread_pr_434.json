{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTE2NjE1", "number": 434, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjo1MToxOVrOECYxgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjo1MToxOVrOECYxgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTM4NDk2OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjo1MToxOVrOGe0BYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMTo0NlrOGfWbUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2Mjc4NA==", "bodyText": "I agree with this change, since I don't think we need a userId argument since it will always be  the current userId of the user's blockchainIdentity.", "url": "https://github.com/dashevo/dash-wallet/pull/434#discussion_r434962784", "createdAt": "2020-06-04T02:51:19Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -86,19 +85,23 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n      * gets all the name documents for usernames starting with text\n      *\n      * @param text The beginning of a username to search for\n-     * @param userId The current userId for which to search contacts\n      * @return\n      */\n-    fun searchUsernames(text: String, userId: String): Resource<List<UsernameSearchResult>> {\n+    suspend fun searchUsernames(text: String): Resource<List<UsernameSearchResult>> {\n         return try {\n+            val blockchainIdentity = blockchainIdentityDataDaoAsync.load()\n+            //We don't check for nullity here because if it's null, it'll be thrown, caputred below\n+            //and sent as a Resource.error\n+            val userId = blockchainIdentity!!.creditFundingTxId!!.toStringBase58()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce4e981e106464ce813f3ac9ebd33960f8cbdeb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjQ4MA==", "bodyText": "creditFundingTxId should be creditBurnIdentityIdentifier", "url": "https://github.com/dashevo/dash-wallet/pull/434#discussion_r435526480", "createdAt": "2020-06-04T20:21:46Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -86,19 +85,23 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n      * gets all the name documents for usernames starting with text\n      *\n      * @param text The beginning of a username to search for\n-     * @param userId The current userId for which to search contacts\n      * @return\n      */\n-    fun searchUsernames(text: String, userId: String): Resource<List<UsernameSearchResult>> {\n+    suspend fun searchUsernames(text: String): Resource<List<UsernameSearchResult>> {\n         return try {\n+            val blockchainIdentity = blockchainIdentityDataDaoAsync.load()\n+            //We don't check for nullity here because if it's null, it'll be thrown, caputred below\n+            //and sent as a Resource.error\n+            val userId = blockchainIdentity!!.creditFundingTxId!!.toStringBase58()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2Mjc4NA=="}, "originalCommit": {"oid": "6ce4e981e106464ce813f3ac9ebd33960f8cbdeb"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 669, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}