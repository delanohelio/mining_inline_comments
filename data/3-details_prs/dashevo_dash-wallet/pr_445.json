{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5Mzg3Nzc1", "number": 445, "title": "Evonet send contact request backend", "bodyText": "Issue being fixed or feature implemented\n\n\nWhat was done?\n\nHow Has This Been Tested?\n\n\n\nBreaking Changes\n\n\nChecklist:\n\n\n I have performed a self-review of my own code\n I have commented my code, particularly in hard-to-understand areas\n I have added or updated relevant unit/integration/functional/e2e tests\n I have made corresponding changes to the documentation\n\nFor repository code-owners and collaborators only\n\n I have assigned this pull request to a milestone", "createdAt": "2020-06-24T18:41:07Z", "url": "https://github.com/dashevo/dash-wallet/pull/445", "merged": true, "mergeCommit": {"oid": "c378bb061cb522610e0680cec3dd3da2437969d0"}, "closed": true, "closedAt": "2020-06-26T18:08:42Z", "author": {"login": "sambarboza"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuKzrrAH2gAyNDM5Mzg3Nzc1OjI1NjdhZDc3M2Y1ODE2NjExOTE4NDFjZmM3M2EyNWU1ZWI1NjhiNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvHR1IAFqTQzODQ5NzY2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2567ad773f581661191841cfc73a25e5eb568b6e", "author": {"user": {"login": "sambarboza", "name": "Sam B."}}, "url": "https://github.com/dashevo/dash-wallet/commit/2567ad773f581661191841cfc73a25e5eb568b6e", "committedDate": "2020-06-23T19:42:06Z", "message": "contact request first steps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f3e783e87b4fede90477e71b23edefe63e3496", "author": {"user": {"login": "sambarboza", "name": "Sam B."}}, "url": "https://github.com/dashevo/dash-wallet/commit/d6f3e783e87b4fede90477e71b23edefe63e3496", "committedDate": "2020-06-24T14:40:30Z", "message": "Creating contact request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead", "author": {"user": {"login": "sambarboza", "name": "Sam B."}}, "url": "https://github.com/dashevo/dash-wallet/commit/0294039c749446a45210c5598403722e1fa58ead", "committedDate": "2020-06-24T22:49:58Z", "message": "Contact Request inital verification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDk2ODUx", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437096851", "createdAt": "2020-06-25T00:42:02Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo0MjowM1rOGonsqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo0MjowM1rOGonsqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0NjYzMw==", "bodyText": "https://github.com/dashevo/dash-wallet/blob/evonet-develop/wallet/src/de/schildbach/wallet/ui/dashpay/CreateIdentityService.kt#L400\nWe have a co-routine version here.", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445246633", "createdAt": "2020-06-25T00:42:03Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/DashPayViewModel.kt", "diffHunk": "@@ -104,4 +113,43 @@ class DashPayViewModel(application: Application) : AndroidViewModel(application)\n             platformRepo.doneAndDismiss()\n         }\n     }\n+\n+    //TODO: this can probably be simplified using coroutines\n+    private fun deriveEncryptionKey(onSuccess: (KeyParameter) -> Unit, onError: (Exception) -> Unit) {\n+        val walletApplication = WalletApplication.getInstance()\n+        val backgroundThread = HandlerThread(\"background\", Process.THREAD_PRIORITY_BACKGROUND)\n+        backgroundThread.start()\n+        val backgroundHandler = android.os.Handler(backgroundThread.looper)\n+        val securityGuard = SecurityGuard()\n+        val password = securityGuard.retrievePassword()\n+        object : DeriveKeyTask(backgroundHandler, walletApplication.scryptIterationsTarget()) {\n+            override fun onSuccess(encryptionKey: KeyParameter, wasChanged: Boolean) {\n+                onSuccess(encryptionKey)\n+            }\n+\n+            override fun onFailure(ex: KeyCrypterException) {\n+                onError(ex)\n+            }\n+        }.deriveKey(walletApplication.wallet, password)\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDk3NzEw", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437097710", "createdAt": "2020-06-25T00:45:01Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo0NTowMVrOGonvrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo0NTowMVrOGonvrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0NzQwNA==", "bodyText": "This does not appear to be used, but having this method in here could help remove a lot of callback type methods.", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445247404", "createdAt": "2020-06-25T00:45:01Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -239,6 +250,51 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n         }\n     }\n \n+    /**\n+     *  Wraps callbacks of DeriveKeyTask as Coroutine\n+     */\n+    private suspend fun deriveKey(handler: Handler, wallet: Wallet, password: String): KeyParameter {\n+        return suspendCoroutine { continuation ->\n+            object : DeriveKeyTask(handler, walletApplication.scryptIterationsTarget()) {\n+\n+                override fun onSuccess(encryptionKey: KeyParameter, wasChanged: Boolean) {\n+                    continuation.resume(encryptionKey)\n+                }\n+\n+                override fun onFailure(ex: KeyCrypterException?) {\n+                    //CreateIdentityService.log.error(\"unable to decrypt wallet\", ex)\n+                    continuation.resumeWithException(ex as Throwable)\n+                }\n+\n+            }.deriveKey(wallet, password)\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTAwMTM0", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437100134", "createdAt": "2020-06-25T00:53:32Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1MzozMlrOGon3ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1MzozMlrOGon3ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0OTQ2Ng==", "bodyText": "We get this userId from this.blockchainIdentity.uniqueIdString\nWhat is the purpose of making a query to Platform to verify the existance of our identity?", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445249466", "createdAt": "2020-06-25T00:53:32Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -239,6 +250,51 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n         }\n     }\n \n+    /**\n+     *  Wraps callbacks of DeriveKeyTask as Coroutine\n+     */\n+    private suspend fun deriveKey(handler: Handler, wallet: Wallet, password: String): KeyParameter {\n+        return suspendCoroutine { continuation ->\n+            object : DeriveKeyTask(handler, walletApplication.scryptIterationsTarget()) {\n+\n+                override fun onSuccess(encryptionKey: KeyParameter, wasChanged: Boolean) {\n+                    continuation.resume(encryptionKey)\n+                }\n+\n+                override fun onFailure(ex: KeyCrypterException?) {\n+                    //CreateIdentityService.log.error(\"unable to decrypt wallet\", ex)\n+                    continuation.resumeWithException(ex as Throwable)\n+                }\n+\n+            }.deriveKey(wallet, password)\n+        }\n+    }\n+\n+    suspend fun sendContactRequest(userId: String, encryptionKey: KeyParameter): Resource<Nothing> {\n+        return try {\n+            val identity = platform.identities.get(userId)\n+            println(\"identity: $identity\")\n+            val blockchainIdentityData = blockchainIdentityDataDaoAsync.load()!!\n+            this.blockchainIdentity = initBlockchainIdentity(blockchainIdentityData,\n+                    walletApplication.wallet)\n+\n+            val userId = this.blockchainIdentity.watchIdentity(3, 500, RetryDelayType.SLOW20)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTAwMjUx", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437100251", "createdAt": "2020-06-25T00:53:59Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1Mzo1OVrOGon4Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1Mzo1OVrOGon4Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0OTU3MA==", "bodyText": "these println should be log.info", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445249570", "createdAt": "2020-06-25T00:53:59Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -239,6 +250,51 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n         }\n     }\n \n+    /**\n+     *  Wraps callbacks of DeriveKeyTask as Coroutine\n+     */\n+    private suspend fun deriveKey(handler: Handler, wallet: Wallet, password: String): KeyParameter {\n+        return suspendCoroutine { continuation ->\n+            object : DeriveKeyTask(handler, walletApplication.scryptIterationsTarget()) {\n+\n+                override fun onSuccess(encryptionKey: KeyParameter, wasChanged: Boolean) {\n+                    continuation.resume(encryptionKey)\n+                }\n+\n+                override fun onFailure(ex: KeyCrypterException?) {\n+                    //CreateIdentityService.log.error(\"unable to decrypt wallet\", ex)\n+                    continuation.resumeWithException(ex as Throwable)\n+                }\n+\n+            }.deriveKey(wallet, password)\n+        }\n+    }\n+\n+    suspend fun sendContactRequest(userId: String, encryptionKey: KeyParameter): Resource<Nothing> {\n+        return try {\n+            val identity = platform.identities.get(userId)\n+            println(\"identity: $identity\")\n+            val blockchainIdentityData = blockchainIdentityDataDaoAsync.load()!!\n+            this.blockchainIdentity = initBlockchainIdentity(blockchainIdentityData,\n+                    walletApplication.wallet)\n+\n+            val userId = this.blockchainIdentity.watchIdentity(3, 500, RetryDelayType.SLOW20)\n+            if (userId != null) {\n+                val contactRequests = ContactRequests(platform)\n+                contactRequests.create(blockchainIdentity, identity!!, encryptionKey)\n+                println(\"contact request sent\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTAwODkw", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437100890", "createdAt": "2020-06-25T00:56:22Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1NjoyMlrOGon6Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1NjoyMlrOGon6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1MDEzMQ==", "bodyText": "Recently, I have found that if there is a KotlinNullPointerException, then e.localizedMessage is null, which results in another crash.\nadding logging to this for the various status results.", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445250131", "createdAt": "2020-06-25T00:56:22Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -239,6 +250,51 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n         }\n     }\n \n+    /**\n+     *  Wraps callbacks of DeriveKeyTask as Coroutine\n+     */\n+    private suspend fun deriveKey(handler: Handler, wallet: Wallet, password: String): KeyParameter {\n+        return suspendCoroutine { continuation ->\n+            object : DeriveKeyTask(handler, walletApplication.scryptIterationsTarget()) {\n+\n+                override fun onSuccess(encryptionKey: KeyParameter, wasChanged: Boolean) {\n+                    continuation.resume(encryptionKey)\n+                }\n+\n+                override fun onFailure(ex: KeyCrypterException?) {\n+                    //CreateIdentityService.log.error(\"unable to decrypt wallet\", ex)\n+                    continuation.resumeWithException(ex as Throwable)\n+                }\n+\n+            }.deriveKey(wallet, password)\n+        }\n+    }\n+\n+    suspend fun sendContactRequest(userId: String, encryptionKey: KeyParameter): Resource<Nothing> {\n+        return try {\n+            val identity = platform.identities.get(userId)\n+            println(\"identity: $identity\")\n+            val blockchainIdentityData = blockchainIdentityDataDaoAsync.load()!!\n+            this.blockchainIdentity = initBlockchainIdentity(blockchainIdentityData,\n+                    walletApplication.wallet)\n+\n+            val userId = this.blockchainIdentity.watchIdentity(3, 500, RetryDelayType.SLOW20)\n+            if (userId != null) {\n+                val contactRequests = ContactRequests(platform)\n+                contactRequests.create(blockchainIdentity, identity!!, encryptionKey)\n+                println(\"contact request sent\")\n+                val cr = contactRequests.watchContactRequest(this.blockchainIdentity.uniqueIdString, userId, 100, 500, RetryDelayType.LINEAR)\n+                println(\"contact request: $cr\")\n+\n+                Resource.success(null)\n+            } else {\n+                Resource.error(\"failed to get contact identity\")\n+            }\n+        } catch (e: Exception) {\n+            Resource.error(e.localizedMessage)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTAxMTY0", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437101164", "createdAt": "2020-06-25T00:57:20Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1NzoyMFrOGon7VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDo1NzoyMFrOGon7VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1MDM4OA==", "bodyText": "Travis CI failed due to RetryDelayType being an undefined symbol.", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445250388", "createdAt": "2020-06-25T00:57:20Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -277,7 +333,7 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n     //\n     suspend fun verifyIdentityRegisteredAsync(blockchainIdentity: BlockchainIdentity) {\n         withContext(Dispatchers.IO) {\n-            blockchainIdentity.watchIdentity(10, 5000, BlockchainIdentity.RetryDelayType.SLOW20)\n+            blockchainIdentity.watchIdentity(10, 5000, RetryDelayType.SLOW20)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 132}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTAzOTIx", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437103921", "createdAt": "2020-06-25T01:06:10Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTE4OTI4", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-437918928", "createdAt": "2020-06-25T23:11:57Z", "commit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzoxMTo1N1rOGpOy5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzoxMTo1N1rOGpOy5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4NzIwNg==", "bodyText": "this watchContactRequest method is called with the same userId for the first and second parameter.  Therefore it will return no documents.", "url": "https://github.com/dashevo/dash-wallet/pull/445#discussion_r445887206", "createdAt": "2020-06-25T23:11:57Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -239,6 +250,51 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n         }\n     }\n \n+    /**\n+     *  Wraps callbacks of DeriveKeyTask as Coroutine\n+     */\n+    private suspend fun deriveKey(handler: Handler, wallet: Wallet, password: String): KeyParameter {\n+        return suspendCoroutine { continuation ->\n+            object : DeriveKeyTask(handler, walletApplication.scryptIterationsTarget()) {\n+\n+                override fun onSuccess(encryptionKey: KeyParameter, wasChanged: Boolean) {\n+                    continuation.resume(encryptionKey)\n+                }\n+\n+                override fun onFailure(ex: KeyCrypterException?) {\n+                    //CreateIdentityService.log.error(\"unable to decrypt wallet\", ex)\n+                    continuation.resumeWithException(ex as Throwable)\n+                }\n+\n+            }.deriveKey(wallet, password)\n+        }\n+    }\n+\n+    suspend fun sendContactRequest(userId: String, encryptionKey: KeyParameter): Resource<Nothing> {\n+        return try {\n+            val identity = platform.identities.get(userId)\n+            println(\"identity: $identity\")\n+            val blockchainIdentityData = blockchainIdentityDataDaoAsync.load()!!\n+            this.blockchainIdentity = initBlockchainIdentity(blockchainIdentityData,\n+                    walletApplication.wallet)\n+\n+            val userId = this.blockchainIdentity.watchIdentity(3, 500, RetryDelayType.SLOW20)\n+            if (userId != null) {\n+                val contactRequests = ContactRequests(platform)\n+                contactRequests.create(blockchainIdentity, identity!!, encryptionKey)\n+                println(\"contact request sent\")\n+                val cr = contactRequests.watchContactRequest(this.blockchainIdentity.uniqueIdString, userId, 100, 500, RetryDelayType.LINEAR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0294039c749446a45210c5598403722e1fa58ead"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "649a4132c3e6d9188eab54690644755e28c535bd", "author": {"user": {"login": "sambarboza", "name": "Sam B."}}, "url": "https://github.com/dashevo/dash-wallet/commit/649a4132c3e6d9188eab54690644755e28c535bd", "committedDate": "2020-06-26T02:11:29Z", "message": "Removing observer after contact request is sent."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b24a224c39c0b48d54fccb78746abb68d4de0c95", "author": {"user": {"login": "sambarboza", "name": "Sam B."}}, "url": "https://github.com/dashevo/dash-wallet/commit/b24a224c39c0b48d54fccb78746abb68d4de0c95", "committedDate": "2020-06-26T02:14:12Z", "message": "Sending contact request to the correct identity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21aa58fdee0e4e0c2881d1e5c1a0a9f373740015", "author": {"user": {"login": "sambarboza", "name": "Sam B."}}, "url": "https://github.com/dashevo/dash-wallet/commit/21aa58fdee0e4e0c2881d1e5c1a0a9f373740015", "committedDate": "2020-06-26T02:14:33Z", "message": "Removing fake data."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDk3NjY2", "url": "https://github.com/dashevo/dash-wallet/pull/445#pullrequestreview-438497666", "createdAt": "2020-06-26T18:09:20Z", "commit": {"oid": "21aa58fdee0e4e0c2881d1e5c1a0a9f373740015"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2938, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}