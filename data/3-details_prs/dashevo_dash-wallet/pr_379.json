{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MTUyNjQx", "number": 379, "title": "NMA-303  Fund New Account | Confirm Transaction (UI)", "bodyText": "Updated designs", "createdAt": "2020-04-17T14:04:45Z", "url": "https://github.com/dashevo/dash-wallet/pull/379", "merged": true, "mergeCommit": {"oid": "185bec549f6d0c7a3e3cb9d717b8dd9527767112"}, "closed": true, "closedAt": "2020-04-24T19:05:51Z", "author": {"login": "tomasz-ludek"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYhYlVgH2gAyNDA1MTUyNjQxOjJkYmJmMWFlZTRlZjhlNWI3ZGU2YTE1YTgzNmRmMWQwNmUzYWQ4NGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABca2VMQAFqTQwMDIwMjI1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2dbbf1aee4ef8e5b7de6a15a836df1d06e3ad84e", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/2dbbf1aee4ef8e5b7de6a15a836df1d06e3ad84e", "committedDate": "2020-04-17T13:33:59Z", "message": "Applied new designs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NjAwODYw", "url": "https://github.com/dashevo/dash-wallet/pull/379#pullrequestreview-398600860", "createdAt": "2020-04-22T21:24:38Z", "commit": {"oid": "2dbbf1aee4ef8e5b7de6a15a836df1d06e3ad84e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMToyNDozOVrOGKMfXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMToyNDozOVrOGKMfXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0MzU4MA==", "bodyText": "We can use a single string resource for this.", "url": "https://github.com/dashevo/dash-wallet/pull/379#discussion_r413343580", "createdAt": "2020-04-22T21:24:39Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NewAccountConfirmDialog.kt", "diffHunk": "@@ -58,27 +71,48 @@ class NewAccountConfirmDialog : BaseBottomSheetDialogFragment() {\n             dismiss()\n             sharedViewModel.clickConfirmButtonEvent.call(true)\n         }\n+    }\n+\n+    override fun onActivityCreated(savedInstanceState: Bundle?) {\n+        super.onActivityCreated(savedInstanceState)\n+        sharedViewModel = activity?.run {\n+            ViewModelProviders.of(this)[SingleActionSharedViewModel::class.java]\n+        } ?: throw IllegalStateException(\"Invalid Activity\")\n+        viewModel = ViewModelProviders.of(this).get(NewAccountConfirmDialogViewModel::class.java)\n+        viewModel.exchangeRateData.observe(viewLifecycleOwner, Observer {\n+            updateView()\n+        })\n+        updateView()\n+    }\n+\n+    private fun updateView() {\n+        val upgradeFee = Coin.valueOf(arguments!!.getLong(ARG_UPGRADE_FEE))\n+\n+        val upgradeFeeStr = MonetaryFormat.BTC.noCode().format(upgradeFee).toString()\n+        val fiatUpgradeFee = viewModel.exchangeRate?.coinToFiat(upgradeFee)\n+        // if the exchange rate is not available, then show \"Not Available\"\n+        val upgradeFeeFiatStr = if (fiatUpgradeFee != null) Constants.LOCAL_FORMAT.format(fiatUpgradeFee).toString() else getString(R.string.transaction_row_rate_not_available)\n+        val fiatSymbol = if (fiatUpgradeFee != null) GenericUtils.currencySymbol(fiatUpgradeFee.currencyCode) else \"\"\n \n-        val creatingCost = SpannableStringBuilder(\"0.01\").run {\n+        input_value.text = upgradeFeeStr\n+        fiat_symbol.text = upgradeFeeFiatStr\n+        fiat_value.text = fiatSymbol\n+\n+        val username = \"\u201c${arguments!!.getString(ARG_USERNAME)}\u201d\"\n+\n+        val usernameSpan = SpannableStringBuilder(username).run {\n             setSpan(StyleSpan(Typeface.BOLD), 0, length, 0)\n //            setSpan(RelativeSizeSpan(1.1f), 0, length, 0)\n             this\n         }\n-        val costWithDashSymbol = GenericUtils.insertDashSymbol(context, creatingCost, 0, true, true, 1.1f)\n         val builder = SpannableStringBuilder().run {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbbf1aee4ef8e5b7de6a15a836df1d06e3ad84e"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "495d2096d0ba362e4350322c2e875842627e3e11", "author": {"user": {"login": "tomasz-ludek", "name": null}}, "url": "https://github.com/dashevo/dash-wallet/commit/495d2096d0ba362e4350322c2e875842627e3e11", "committedDate": "2020-04-23T20:08:00Z", "message": "Changed the way of resource string formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODI3MjEz", "url": "https://github.com/dashevo/dash-wallet/pull/379#pullrequestreview-398827213", "createdAt": "2020-04-23T07:27:06Z", "commit": {"oid": "2dbbf1aee4ef8e5b7de6a15a836df1d06e3ad84e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzoyNzowNlrOGKaq8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzoyNzowNlrOGKaq8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NTkyMg==", "bodyText": "Yea, I know. I split it to avoid issues in translations.\nI will reconsider this, maybe it isn't an issue.", "url": "https://github.com/dashevo/dash-wallet/pull/379#discussion_r413575922", "createdAt": "2020-04-23T07:27:06Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/NewAccountConfirmDialog.kt", "diffHunk": "@@ -58,27 +71,48 @@ class NewAccountConfirmDialog : BaseBottomSheetDialogFragment() {\n             dismiss()\n             sharedViewModel.clickConfirmButtonEvent.call(true)\n         }\n+    }\n+\n+    override fun onActivityCreated(savedInstanceState: Bundle?) {\n+        super.onActivityCreated(savedInstanceState)\n+        sharedViewModel = activity?.run {\n+            ViewModelProviders.of(this)[SingleActionSharedViewModel::class.java]\n+        } ?: throw IllegalStateException(\"Invalid Activity\")\n+        viewModel = ViewModelProviders.of(this).get(NewAccountConfirmDialogViewModel::class.java)\n+        viewModel.exchangeRateData.observe(viewLifecycleOwner, Observer {\n+            updateView()\n+        })\n+        updateView()\n+    }\n+\n+    private fun updateView() {\n+        val upgradeFee = Coin.valueOf(arguments!!.getLong(ARG_UPGRADE_FEE))\n+\n+        val upgradeFeeStr = MonetaryFormat.BTC.noCode().format(upgradeFee).toString()\n+        val fiatUpgradeFee = viewModel.exchangeRate?.coinToFiat(upgradeFee)\n+        // if the exchange rate is not available, then show \"Not Available\"\n+        val upgradeFeeFiatStr = if (fiatUpgradeFee != null) Constants.LOCAL_FORMAT.format(fiatUpgradeFee).toString() else getString(R.string.transaction_row_rate_not_available)\n+        val fiatSymbol = if (fiatUpgradeFee != null) GenericUtils.currencySymbol(fiatUpgradeFee.currencyCode) else \"\"\n \n-        val creatingCost = SpannableStringBuilder(\"0.01\").run {\n+        input_value.text = upgradeFeeStr\n+        fiat_symbol.text = upgradeFeeFiatStr\n+        fiat_value.text = fiatSymbol\n+\n+        val username = \"\u201c${arguments!!.getString(ARG_USERNAME)}\u201d\"\n+\n+        val usernameSpan = SpannableStringBuilder(username).run {\n             setSpan(StyleSpan(Typeface.BOLD), 0, length, 0)\n //            setSpan(RelativeSizeSpan(1.1f), 0, length, 0)\n             this\n         }\n-        val costWithDashSymbol = GenericUtils.insertDashSymbol(context, creatingCost, 0, true, true, 1.1f)\n         val builder = SpannableStringBuilder().run {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0MzU4MA=="}, "originalCommit": {"oid": "2dbbf1aee4ef8e5b7de6a15a836df1d06e3ad84e"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjcxNzY4", "url": "https://github.com/dashevo/dash-wallet/pull/379#pullrequestreview-399671768", "createdAt": "2020-04-24T06:28:53Z", "commit": {"oid": "495d2096d0ba362e4350322c2e875842627e3e11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjAyMjUz", "url": "https://github.com/dashevo/dash-wallet/pull/379#pullrequestreview-400202253", "createdAt": "2020-04-24T19:06:08Z", "commit": {"oid": "495d2096d0ba362e4350322c2e875842627e3e11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2890, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}