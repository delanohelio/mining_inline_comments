{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTM0NDU1", "number": 438, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNToxMlrOEEd-Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1OToyNFrOEEeWWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTIwODQzOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/data/UsernameSearchResult.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNToxMlrOGiHHtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNToxMlrOGiHHtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyMTQyOA==", "bodyText": "In my PR the profileDocument is non-nullable and it is assigned a default \"empty\" profile if no profile exists.  In the database, we will be storing the username associated with a profile.\nThis does not need to be changed in this PR.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438421428", "createdAt": "2020-06-10T21:35:12Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/data/UsernameSearchResult.kt", "diffHunk": "@@ -9,8 +9,10 @@ import org.dashevo.dpp.document.Document\n \n data class UsernameSearchResult(val username: String,\n                                 val domainDocument: Document,\n+                                //TODO: Make non-nullable after profile creation is implemented in iOS\n+                                val profileDocument: Document?,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTIwOTg5OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/data/UsernameSearchResult.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNTo0M1rOGiHIng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNTo0M1rOGiHIng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyMTY2Mg==", "bodyText": "In my PR, I also renamed these, but I like these names better.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438421662", "createdAt": "2020-06-10T21:35:43Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/data/UsernameSearchResult.kt", "diffHunk": "@@ -9,8 +9,10 @@ import org.dashevo.dpp.document.Document\n \n data class UsernameSearchResult(val username: String,\n                                 val domainDocument: Document,\n+                                //TODO: Make non-nullable after profile creation is implemented in iOS\n+                                val profileDocument: Document?,\n                                 val toContactRequest: Document?,\n                                 val fromContactRequest: Document?) {\n-    val hasRequested = toContactRequest != null\n-    val hasAccepted = fromContactRequest != null\n+    val requestSent = toContactRequest != null\n+    val requestReceived = fromContactRequest != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTI1Mjc3OnYy", "diffSide": "RIGHT", "path": "ui-redesign/src/main/res/drawable/medium_gray_button.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1MjowN1rOGiHkQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1MjowN1rOGiHkQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyODczNw==", "bodyText": "This file might be useful in my Contact Request Row.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438428737", "createdAt": "2020-06-10T21:52:07Z", "author": {"login": "HashEngineering"}, "path": "ui-redesign/src/main/res/drawable/medium_gray_button.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_enabled=\"false\">\n+        <shape android:shape=\"rectangle\">\n+            <corners android:radius=\"10dp\" />\n+            <solid android:color=\"@color/dash_light_gray\" />\n+        </shape>\n+    </item>\n+    <item android:state_pressed=\"true\">\n+        <shape android:shape=\"rectangle\">\n+            <corners android:radius=\"10dp\" />\n+            <solid android:color=\"@color/dash_gray\" />\n+        </shape>\n+    </item>\n+    <item>\n+        <shape android:shape=\"rectangle\">\n+            <corners android:radius=\"10dp\" />\n+            <solid android:color=\"@color/dash_medium_gray\" />\n+        </shape>\n+    </item>\n+</selector>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTI1ODU3OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/data/DashPayProfile.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1NDozMVrOGiHn9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1NDozMVrOGiHn9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyOTY4NQ==", "bodyText": "On my PR, I added the username to the profile so there is an associated between userId and username.  I like the fromDocument method which will probably get used a lot.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438429685", "createdAt": "2020-06-10T21:54:31Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/data/DashPayProfile.kt", "diffHunk": "@@ -1,8 +1,25 @@\n package de.schildbach.wallet.data\n \n+import android.os.Parcelable\n import androidx.room.Entity\n import androidx.room.PrimaryKey\n+import kotlinx.android.parcel.Parcelize\n+import org.dashevo.dpp.document.Document\n \n+@Parcelize\n @Entity(tableName = \"dashpay_profile\")\n data class DashPayProfile(@PrimaryKey val userId: String, val displayName: String,\n-                          val publicMessage: String, val avatarUrl: String)\n\\ No newline at end of file\n+                          val publicMessage: String, val avatarUrl: String) : Parcelable {\n+    companion object {\n+        fun fromDocument(document: Document): DashPayProfile? {\n+            return try {\n+                DashPayProfile(document.userId,\n+                        document.data[\"displayName\"] as String,\n+                        document.data[\"publicMessage\"] as String,\n+                        document.data[\"avatarUrl\"] as String)\n+            } catch (e: Exception) {\n+                null\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTI2MzQxOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/HeaderBalanceFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1NjozM1rOGiHrIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1NjozM1rOGiHrIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMDQ5Ng==", "bodyText": "This will be used instead of my method in my PR.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438430496", "createdAt": "2020-06-10T21:56:33Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/HeaderBalanceFragment.java", "diffHunk": "@@ -201,23 +201,8 @@ private void setDefaultUserAvatar(String letters) {\n             return;\n         }\n         dashpayUserAvatar.setVisibility(View.VISIBLE);\n-        float[] hsv = new float[3];\n-        //Ascii codes for A: 65 - Z: 90, 0: 48 - 9: 57\n-        float firstChar = letters.charAt(0);\n-        float charIndex;\n-        if (firstChar <= 57) { //57 == '9' in Ascii table\n-            charIndex = (firstChar - 48f) / 36f; // 48 == '0', 36 == total count of supported\n-        } else {\n-            charIndex = (firstChar - 65f + 10f) / 36f; // 65 == 'A', 10 == count of digits\n-        }\n-        hsv[0] = charIndex * 360f;\n-        hsv[1] = 0.3f;\n-        hsv[2] = 0.6f;\n-        int bgColor = Color.HSVToColor(hsv);\n-        final TextDrawable defaultAvatar = TextDrawable.builder().beginConfig().textColor(Color.WHITE)\n-                .useFont(ResourcesCompat.getFont(getContext(), R.font.montserrat_regular))\n-                .endConfig().buildRound(letters, bgColor);\n-        dashpayUserAvatar.setBackground(defaultAvatar);\n+        dashpayUserAvatar.setBackground(UserAvatarPlaceholderDrawable.getDrawable(getContext(),\n+                letters.charAt(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTI2NjY5OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1Nzo1M1rOGiHtSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjowMDo1MFrOGiHxsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMTA1MA==", "bodyText": "Good point on the 100 items.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438431050", "createdAt": "2020-06-10T21:57:53Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -96,7 +97,13 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n             val creditFundingTx = wallet.getCreditFundingTransaction(wallet.getTransaction(blockchainIdentity!!.creditFundingTxId))\n             val userId = creditFundingTx.creditBurnIdentityIdentifier.toStringBase58()\n             // Names.search does support retrieving 100 names at a time if retrieveAll = false\n-            val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, true)\n+            //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMjE3OQ==", "bodyText": "I also changed this method in my PR, but I will realign it to match these changes.", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438432179", "createdAt": "2020-06-10T22:00:50Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -96,7 +97,13 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n             val creditFundingTx = wallet.getCreditFundingTransaction(wallet.getTransaction(blockchainIdentity!!.creditFundingTxId))\n             val userId = creditFundingTx.creditBurnIdentityIdentifier.toStringBase58()\n             // Names.search does support retrieving 100 names at a time if retrieveAll = false\n-            val nameDocuments = platform.names.search(text, Names.DEFAULT_PARENT_DOMAIN, true)\n+            //TODO: Maybe add pagination later? Is very unlikely that a user will scroll past 100 search results", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMTA1MA=="}, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTI3MDAxOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1OToyNFrOGiHvbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1OToyNFrOGiHvbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMTU5Nw==", "bodyText": "This could use DashPayProfile.fromDocument()", "url": "https://github.com/dashevo/dash-wallet/pull/438#discussion_r438431597", "createdAt": "2020-06-10T21:59:24Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -378,7 +387,7 @@ class PlatformRepo(val walletApplication: WalletApplication) {\n             // blockchainIdentity doesn't yet keep track of the profile, so we will load it\n             // into the database directly\n             val dashPayProfile = DashPayProfile(blockchainIdentity.uniqueIdString,\n-                    profile!!.data[\"displayName\"] as String,\n+                    profile.data[\"displayName\"] as String,\n                     profile.data[\"publicMessage\"] as String,\n                     profile.data[\"avatarUrl\"] as String)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3623ed561ba4d5784d3dc121833a6743fd5168"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 672, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}