{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTY0MzY1", "number": 313, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNDozOTozNFrODdNaNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNDo1ODo1NVrODdNjJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTU0OTk5OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/VerifySeedActivity.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNDozOTozNFrOFlrmeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoxOTo1NlrOFl3ZZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA1NTk5Mw==", "bodyText": "Do we need this empty block?", "url": "https://github.com/dashevo/dash-wallet/pull/313#discussion_r375055993", "createdAt": "2020-02-05T04:39:34Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/VerifySeedActivity.kt", "diffHunk": "@@ -32,30 +35,59 @@ class VerifySeedActivity : AppCompatActivity(), VerifySeedActions {\n     companion object {\n \n         private const val EXTRA_SEED = \"extra_seed\"\n+        private const val EXTRA_PIN = \"extra_pin\"\n \n         @JvmStatic\n         fun createIntent(context: Context, seed: Array<String>): Intent {\n             val intent = Intent(context, VerifySeedActivity::class.java)\n             intent.putExtra(EXTRA_SEED, seed)\n             return intent\n         }\n+\n+        @JvmStatic\n+        fun createIntent(context: Context, pin: String): Intent {\n+            val intent = Intent(context, VerifySeedActivity::class.java)\n+            intent.putExtra(EXTRA_PIN, pin)\n+            return intent\n+        }\n     }\n \n+    private lateinit var decryptSeedViewModel: DecryptSeedViewModel\n+\n     private var seed: Array<String> = arrayOf()\n \n     override fun onCreate(savedInstanceState: Bundle?) {\n         super.onCreate(savedInstanceState)\n         setContentView(R.layout.activity_verify_seed)\n \n-        seed = if (intent.extras?.containsKey(EXTRA_SEED)!!) {\n-            intent.extras!!.getStringArray(EXTRA_SEED)!!\n+        if (intent.extras!!.containsKey(EXTRA_SEED)) {\n+            seed = intent.extras!!.getStringArray(EXTRA_SEED)!!\n         } else {\n-            throw IllegalStateException(\"This activity needs to receive a String[] Intent Extra \" +\n-                    \"containing the recovery seed.\")\n+            initViewModel()\n+            val pin = intent.extras!!.getString(EXTRA_PIN)!!\n+            decryptSeedViewModel.checkPin(pin)\n         }\n \n         supportFragmentManager.beginTransaction().add(R.id.container,\n-                    VerifySeedSecureNowFragment.newInstance()).commit()\n+                VerifySeedSecureNowFragment.newInstance()).commit()\n+    }\n+\n+    private fun initViewModel() {\n+        decryptSeedViewModel = ViewModelProviders.of(this).get(DecryptSeedViewModel::class.java)\n+        decryptSeedViewModel.decryptSeedLiveData.observe(this, Observer {\n+            when (it.status) {\n+                Status.ERROR -> {\n+                    finish()\n+                }\n+                Status.LOADING -> {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81fa5c862398def2edb001f0225c955b6f5ae373"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0OTI1NQ==", "bodyText": "Removed :)", "url": "https://github.com/dashevo/dash-wallet/pull/313#discussion_r375249255", "createdAt": "2020-02-05T13:19:56Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/VerifySeedActivity.kt", "diffHunk": "@@ -32,30 +35,59 @@ class VerifySeedActivity : AppCompatActivity(), VerifySeedActions {\n     companion object {\n \n         private const val EXTRA_SEED = \"extra_seed\"\n+        private const val EXTRA_PIN = \"extra_pin\"\n \n         @JvmStatic\n         fun createIntent(context: Context, seed: Array<String>): Intent {\n             val intent = Intent(context, VerifySeedActivity::class.java)\n             intent.putExtra(EXTRA_SEED, seed)\n             return intent\n         }\n+\n+        @JvmStatic\n+        fun createIntent(context: Context, pin: String): Intent {\n+            val intent = Intent(context, VerifySeedActivity::class.java)\n+            intent.putExtra(EXTRA_PIN, pin)\n+            return intent\n+        }\n     }\n \n+    private lateinit var decryptSeedViewModel: DecryptSeedViewModel\n+\n     private var seed: Array<String> = arrayOf()\n \n     override fun onCreate(savedInstanceState: Bundle?) {\n         super.onCreate(savedInstanceState)\n         setContentView(R.layout.activity_verify_seed)\n \n-        seed = if (intent.extras?.containsKey(EXTRA_SEED)!!) {\n-            intent.extras!!.getStringArray(EXTRA_SEED)!!\n+        if (intent.extras!!.containsKey(EXTRA_SEED)) {\n+            seed = intent.extras!!.getStringArray(EXTRA_SEED)!!\n         } else {\n-            throw IllegalStateException(\"This activity needs to receive a String[] Intent Extra \" +\n-                    \"containing the recovery seed.\")\n+            initViewModel()\n+            val pin = intent.extras!!.getString(EXTRA_PIN)!!\n+            decryptSeedViewModel.checkPin(pin)\n         }\n \n         supportFragmentManager.beginTransaction().add(R.id.container,\n-                    VerifySeedSecureNowFragment.newInstance()).commit()\n+                VerifySeedSecureNowFragment.newInstance()).commit()\n+    }\n+\n+    private fun initViewModel() {\n+        decryptSeedViewModel = ViewModelProviders.of(this).get(DecryptSeedViewModel::class.java)\n+        decryptSeedViewModel.decryptSeedLiveData.observe(this, Observer {\n+            when (it.status) {\n+                Status.ERROR -> {\n+                    finish()\n+                }\n+                Status.LOADING -> {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA1NTk5Mw=="}, "originalCommit": {"oid": "81fa5c862398def2edb001f0225c955b6f5ae373"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTU3Mjg2OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNDo1ODo1NVrOFlr0Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyMzozMVrOFl3f5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA1OTUyNg==", "bodyText": "I would advise creating an interface so we don't tie this fragment to the SendCoinsActivity as this can cause some problems eventually.", "url": "https://github.com/dashevo/dash-wallet/pull/313#discussion_r375059526", "createdAt": "2020-02-05T04:58:55Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java", "diffHunk": "@@ -158,7 +161,7 @@ public void onClick(final DialogInterface dialog, final int which) {\n     public void onAttach(final Context context) {\n         super.onAttach(context);\n \n-        this.activity = (AbstractBindServiceActivity) context;\n+        this.activity = (SendCoinsActivity) context;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81fa5c862398def2edb001f0225c955b6f5ae373"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MDkxOQ==", "bodyText": "Good point, however, in this case, I don't want to add additional complexity to already complex changeset. Let's leave it as it is for now.", "url": "https://github.com/dashevo/dash-wallet/pull/313#discussion_r375250919", "createdAt": "2020-02-05T13:23:31Z", "author": {"login": "tomasz-ludek"}, "path": "wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java", "diffHunk": "@@ -158,7 +161,7 @@ public void onClick(final DialogInterface dialog, final int which) {\n     public void onAttach(final Context context) {\n         super.onAttach(context);\n \n-        this.activity = (AbstractBindServiceActivity) context;\n+        this.activity = (SendCoinsActivity) context;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA1OTUyNg=="}, "originalCommit": {"oid": "81fa5c862398def2edb001f0225c955b6f5ae373"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 702, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}