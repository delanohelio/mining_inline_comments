{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MzAyODgz", "number": 546, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNToyNDowMlrOE4frRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTo1Nzo1OFrOE4gBWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Njc0NjkzOnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ChooseStorageServiceDialog.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNToyNDowMlrOHyczbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzo1Mjo1NFrOHznfjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2Mjc2NQ==", "bodyText": "Please run optimize imports on this class.", "url": "https://github.com/dashevo/dash-wallet/pull/546#discussion_r522662765", "createdAt": "2020-11-13T05:24:02Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ChooseStorageServiceDialog.kt", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Dash Core Group\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.annotation.SuppressLint\n+import android.app.Dialog\n+import android.graphics.Bitmap\n+import android.graphics.drawable.BitmapDrawable\n+import android.graphics.drawable.Drawable\n+import android.net.Uri\n+import android.os.Bundle\n+import android.text.Editable\n+import android.text.TextWatcher\n+import android.view.View\n+import android.widget.Button\n+import android.widget.EditText\n+import android.widget.ImageView\n+import android.widget.TextView\n+import android.widget.Toast\n+import androidx.annotation.NonNull\n+import androidx.annotation.Nullable\n+import androidx.appcompat.app.AlertDialog\n+import androidx.constraintlayout.widget.ConstraintLayout\n+import androidx.fragment.app.DialogFragment\n+import androidx.lifecycle.ViewModelProvider\n+import com.bumptech.glide.Glide\n+import com.bumptech.glide.load.DataSource\n+import com.bumptech.glide.load.engine.GlideException\n+import com.bumptech.glide.request.RequestListener\n+import com.bumptech.glide.request.target.CustomTarget\n+import com.bumptech.glide.request.target.Target\n+import com.bumptech.glide.request.transition.Transition\n+import de.schildbach.wallet.ui.ExternalUrlProfilePictureViewModel\n+import de.schildbach.wallet.ui.RestoreWalletFromFileViewModel\n+import de.schildbach.wallet.util.KeyboardUtil\n+import de.schildbach.wallet_test.R\n+import org.slf4j.LoggerFactory\n+\n+\n+class ChooseStorageServiceDialog : DialogFragment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87a66dd0c5ace7c0500427a3cdc10bba75a3f84a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4NjQ3OQ==", "bodyText": "These imports are not used in this class.  removed: 56ef5b8", "url": "https://github.com/dashevo/dash-wallet/pull/546#discussion_r523886479", "createdAt": "2020-11-16T03:52:54Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ChooseStorageServiceDialog.kt", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Dash Core Group\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.annotation.SuppressLint\n+import android.app.Dialog\n+import android.graphics.Bitmap\n+import android.graphics.drawable.BitmapDrawable\n+import android.graphics.drawable.Drawable\n+import android.net.Uri\n+import android.os.Bundle\n+import android.text.Editable\n+import android.text.TextWatcher\n+import android.view.View\n+import android.widget.Button\n+import android.widget.EditText\n+import android.widget.ImageView\n+import android.widget.TextView\n+import android.widget.Toast\n+import androidx.annotation.NonNull\n+import androidx.annotation.Nullable\n+import androidx.appcompat.app.AlertDialog\n+import androidx.constraintlayout.widget.ConstraintLayout\n+import androidx.fragment.app.DialogFragment\n+import androidx.lifecycle.ViewModelProvider\n+import com.bumptech.glide.Glide\n+import com.bumptech.glide.load.DataSource\n+import com.bumptech.glide.load.engine.GlideException\n+import com.bumptech.glide.request.RequestListener\n+import com.bumptech.glide.request.target.CustomTarget\n+import com.bumptech.glide.request.target.Target\n+import com.bumptech.glide.request.transition.Transition\n+import de.schildbach.wallet.ui.ExternalUrlProfilePictureViewModel\n+import de.schildbach.wallet.ui.RestoreWalletFromFileViewModel\n+import de.schildbach.wallet.util.KeyboardUtil\n+import de.schildbach.wallet_test.R\n+import org.slf4j.LoggerFactory\n+\n+\n+class ChooseStorageServiceDialog : DialogFragment() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2Mjc2NQ=="}, "originalCommit": {"oid": "87a66dd0c5ace7c0500427a3cdc10bba75a3f84a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NjgwMzQ0OnYy", "diffSide": "RIGHT", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ChooseStorageServiceDialog.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTo1Nzo1OFrOHydTpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNzoyNjowMlrOHygnvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MTAxMw==", "bodyText": "Is this being used/will be used?", "url": "https://github.com/dashevo/dash-wallet/pull/546#discussion_r522671013", "createdAt": "2020-11-13T05:57:58Z", "author": {"login": "sambarboza"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ChooseStorageServiceDialog.kt", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Dash Core Group\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.annotation.SuppressLint\n+import android.app.Dialog\n+import android.graphics.Bitmap\n+import android.graphics.drawable.BitmapDrawable\n+import android.graphics.drawable.Drawable\n+import android.net.Uri\n+import android.os.Bundle\n+import android.text.Editable\n+import android.text.TextWatcher\n+import android.view.View\n+import android.widget.Button\n+import android.widget.EditText\n+import android.widget.ImageView\n+import android.widget.TextView\n+import android.widget.Toast\n+import androidx.annotation.NonNull\n+import androidx.annotation.Nullable\n+import androidx.appcompat.app.AlertDialog\n+import androidx.constraintlayout.widget.ConstraintLayout\n+import androidx.fragment.app.DialogFragment\n+import androidx.lifecycle.ViewModelProvider\n+import com.bumptech.glide.Glide\n+import com.bumptech.glide.load.DataSource\n+import com.bumptech.glide.load.engine.GlideException\n+import com.bumptech.glide.request.RequestListener\n+import com.bumptech.glide.request.target.CustomTarget\n+import com.bumptech.glide.request.target.Target\n+import com.bumptech.glide.request.transition.Transition\n+import de.schildbach.wallet.ui.ExternalUrlProfilePictureViewModel\n+import de.schildbach.wallet.ui.RestoreWalletFromFileViewModel\n+import de.schildbach.wallet.util.KeyboardUtil\n+import de.schildbach.wallet_test.R\n+import org.slf4j.LoggerFactory\n+\n+\n+class ChooseStorageServiceDialog : DialogFragment() {\n+\n+    companion object {\n+\n+        private val log = LoggerFactory.getLogger(ChooseStorageServiceDialog::class.java)\n+\n+        private const val ARG_INITIAL_URL = \"arg_initial_url\"\n+\n+        @JvmStatic\n+        fun newInstance(): ChooseStorageServiceDialog {\n+            val dialog = ChooseStorageServiceDialog()\n+            return dialog\n+        }\n+    }\n+\n+    private val initialUrl by lazy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87a66dd0c5ace7c0500427a3cdc10bba75a3f84a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjcyNTMxMQ==", "bodyText": "no, this is a copy/paste leftover along with some other stuff in this PR.", "url": "https://github.com/dashevo/dash-wallet/pull/546#discussion_r522725311", "createdAt": "2020-11-13T07:26:02Z", "author": {"login": "HashEngineering"}, "path": "wallet/src/de/schildbach/wallet/ui/dashpay/ChooseStorageServiceDialog.kt", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Dash Core Group\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package de.schildbach.wallet.ui.dashpay\n+\n+import android.annotation.SuppressLint\n+import android.app.Dialog\n+import android.graphics.Bitmap\n+import android.graphics.drawable.BitmapDrawable\n+import android.graphics.drawable.Drawable\n+import android.net.Uri\n+import android.os.Bundle\n+import android.text.Editable\n+import android.text.TextWatcher\n+import android.view.View\n+import android.widget.Button\n+import android.widget.EditText\n+import android.widget.ImageView\n+import android.widget.TextView\n+import android.widget.Toast\n+import androidx.annotation.NonNull\n+import androidx.annotation.Nullable\n+import androidx.appcompat.app.AlertDialog\n+import androidx.constraintlayout.widget.ConstraintLayout\n+import androidx.fragment.app.DialogFragment\n+import androidx.lifecycle.ViewModelProvider\n+import com.bumptech.glide.Glide\n+import com.bumptech.glide.load.DataSource\n+import com.bumptech.glide.load.engine.GlideException\n+import com.bumptech.glide.request.RequestListener\n+import com.bumptech.glide.request.target.CustomTarget\n+import com.bumptech.glide.request.target.Target\n+import com.bumptech.glide.request.transition.Transition\n+import de.schildbach.wallet.ui.ExternalUrlProfilePictureViewModel\n+import de.schildbach.wallet.ui.RestoreWalletFromFileViewModel\n+import de.schildbach.wallet.util.KeyboardUtil\n+import de.schildbach.wallet_test.R\n+import org.slf4j.LoggerFactory\n+\n+\n+class ChooseStorageServiceDialog : DialogFragment() {\n+\n+    companion object {\n+\n+        private val log = LoggerFactory.getLogger(ChooseStorageServiceDialog::class.java)\n+\n+        private const val ARG_INITIAL_URL = \"arg_initial_url\"\n+\n+        @JvmStatic\n+        fun newInstance(): ChooseStorageServiceDialog {\n+            val dialog = ChooseStorageServiceDialog()\n+            return dialog\n+        }\n+    }\n+\n+    private val initialUrl by lazy {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MTAxMw=="}, "originalCommit": {"oid": "87a66dd0c5ace7c0500427a3cdc10bba75a3f84a"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 621, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}