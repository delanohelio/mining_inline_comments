{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNDIyNTM3", "number": 3199, "title": "KOGITO-1157: [DMN Designer] New models must be named with the file name on VSCode", "bodyText": "See: https://issues.redhat.com/browse/KOGITO-1157", "createdAt": "2020-02-28T14:35:23Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199", "merged": true, "mergeCommit": {"oid": "27db3dc4a0baaf1ede4b94431d0d3c042c6137e0"}, "closed": true, "closedAt": "2020-03-03T14:41:16Z", "author": {"login": "danielzhe"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIxWtpAFqTM2NjQ2MTU3Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKDWJlAH2gAyMzgxNDIyNTM3OmNjOWIyNjg5MDdiMDAwMjVmNDFmZTdkNTgzMGExNDRlMmFiM2IyNWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDYxNTc2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#pullrequestreview-366461576", "createdAt": "2020-02-28T15:03:52Z", "commit": {"oid": "bce71ffb6b447e06066f62d83ba60c34ea896679"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTowMzo1MlrOFv3-AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTowNjoxOVrOFv4DPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NDM4NA==", "bodyText": "Do we really have to mock the behaviour of this method!?!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#discussion_r385744384", "createdAt": "2020-02-28T15:03:52Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/DMNClientDiagramServiceImplTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.services;\n+\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.stunner.core.client.service.ServiceCallback;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(GwtMockitoTestRunner.class)\n+public class DMNClientDiagramServiceImplTest {\n+\n+    private DMNClientDiagramServiceImpl service;\n+\n+    @Before\n+    public void setup() {\n+        service = spy(new DMNClientDiagramServiceImpl());\n+    }\n+\n+    @Test\n+    public void testTransformWhenFileIsNew() {\n+        final String fileName = \"file.dmn\";\n+        final String xml = \"\";\n+        final ServiceCallback<Diagram> callback = mock(ServiceCallback.class);\n+        final String title = \"title\";\n+\n+        doReturn(title).when(service).getDiagramTitle(fileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bce71ffb6b447e06066f62d83ba60c34ea896679"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NDQ0NQ==", "bodyText": "Do we really have to mock the behaviour of this method!?!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#discussion_r385744445", "createdAt": "2020-02-28T15:03:59Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/DMNClientDiagramServiceImplTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.services;\n+\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.stunner.core.client.service.ServiceCallback;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(GwtMockitoTestRunner.class)\n+public class DMNClientDiagramServiceImplTest {\n+\n+    private DMNClientDiagramServiceImpl service;\n+\n+    @Before\n+    public void setup() {\n+        service = spy(new DMNClientDiagramServiceImpl());\n+    }\n+\n+    @Test\n+    public void testTransformWhenFileIsNew() {\n+        final String fileName = \"file.dmn\";\n+        final String xml = \"\";\n+        final ServiceCallback<Diagram> callback = mock(ServiceCallback.class);\n+        final String title = \"title\";\n+\n+        doReturn(title).when(service).getDiagramTitle(fileName);\n+        doNothing().when(service).doNewDiagram(title, callback);\n+\n+        service.transform(fileName, xml, callback);\n+\n+        verify(service).doNewDiagram(title, callback);\n+    }\n+\n+    @Test\n+    public void testTransformWhenFileIsNotNew() {\n+        final String fileName = \"file.dmn\";\n+        final String xml = \"xml\";\n+        final ServiceCallback<Diagram> callback = mock(ServiceCallback.class);\n+        final String title = \"title\";\n+\n+        doReturn(title).when(service).getDiagramTitle(fileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bce71ffb6b447e06066f62d83ba60c34ea896679"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NTY2Mw==", "bodyText": "I'm a stickler for parameters on new lines.. but it's just my opinion, so I state it but don't expect it to be fixed.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#discussion_r385745663", "createdAt": "2020-02-28T15:06:13Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/DMNClientDiagramServiceImpl.java", "diffHunk": "@@ -95,17 +95,39 @@ public DMNClientDiagramServiceImpl(final DMNMarshallerKogitoUnmarshaller dmnMars\n     //Kogito requirements\n \n     @Override\n-    public void transform(final String xml,\n-                          final ServiceCallback<Diagram> callback) {\n+    public void transform(final String fileName, final String xml, final ServiceCallback<Diagram> callback) {\n         if (Objects.isNull(xml) || xml.isEmpty()) {\n-            doNewDiagram(callback);\n+            doNewDiagram(getDiagramTitle(fileName), callback);\n         } else {\n             doTransformation(xml, callback);\n         }\n     }\n \n-    private void doNewDiagram(final ServiceCallback<Diagram> callback) {\n-        final String title = UUID.uuid();\n+    String getDiagramTitle(final String fileName) {\n+        final String diagramTitle;\n+        if (StringUtils.isEmpty(fileName)) {\n+            diagramTitle = generateDiagramTitle();\n+        } else {\n+            if (fileName.contains(\".\")) {\n+                diagramTitle = fileName.substring(0, fileName.lastIndexOf('.'));\n+            } else {\n+                diagramTitle = fileName;\n+            }\n+        }\n+        return diagramTitle;\n+    }\n+\n+    String generateDiagramTitle() {\n+        return UUID.uuid();\n+    }\n+\n+    @Override\n+    public void transform(final String xml,\n+                          final ServiceCallback<Diagram> callback) {\n+        transform(UUID.uuid(), xml, callback);\n+    }\n+\n+    void doNewDiagram(final String title, final ServiceCallback<Diagram> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bce71ffb6b447e06066f62d83ba60c34ea896679"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NTcyNQ==", "bodyText": "I'm a stickler for parameters on new lines.. but it's just my opinion, so I state it but don't expect it to be fixed.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#discussion_r385745725", "createdAt": "2020-02-28T15:06:19Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/DMNClientDiagramServiceImpl.java", "diffHunk": "@@ -95,17 +95,39 @@ public DMNClientDiagramServiceImpl(final DMNMarshallerKogitoUnmarshaller dmnMars\n     //Kogito requirements\n \n     @Override\n-    public void transform(final String xml,\n-                          final ServiceCallback<Diagram> callback) {\n+    public void transform(final String fileName, final String xml, final ServiceCallback<Diagram> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bce71ffb6b447e06066f62d83ba60c34ea896679"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDg0Mzc5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#pullrequestreview-367084379", "createdAt": "2020-03-02T10:16:43Z", "commit": {"oid": "6be3b9704d27d2f27530b2ed968d1a3413ca3c46"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96943a7aa8185c0fae4ed3fd0f329632872c3e1e", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/96943a7aa8185c0fae4ed3fd0f329632872c3e1e", "committedDate": "2020-03-02T13:08:41Z", "message": "KOGITO-1157: [DMN Designer] New models must be named with the file name on VSCode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d19692da01d31a16ac27fcdcee5fdaddca0d2f12", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d19692da01d31a16ac27fcdcee5fdaddca0d2f12", "committedDate": "2020-03-02T13:08:42Z", "message": "Code review #1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adf48bf7cd01a1a8de1b3167d0913a04f82c6e21", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/adf48bf7cd01a1a8de1b3167d0913a04f82c6e21", "committedDate": "2020-03-02T18:59:14Z", "message": "Fix issue with full path."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6be3b9704d27d2f27530b2ed968d1a3413ca3c46", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6be3b9704d27d2f27530b2ed968d1a3413ca3c46", "committedDate": "2020-02-28T18:52:23Z", "message": "Code review #1"}, "afterCommit": {"oid": "adf48bf7cd01a1a8de1b3167d0913a04f82c6e21", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/adf48bf7cd01a1a8de1b3167d0913a04f82c6e21", "committedDate": "2020-03-02T18:59:14Z", "message": "Fix issue with full path."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff7c8571578eb2756172cfa7a1736bef211348e", "author": {"user": {"login": "jomarko", "name": "Jozef Marko"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7ff7c8571578eb2756172cfa7a1736bef211348e", "committedDate": "2020-03-03T08:25:58Z", "message": "KOGITO-1157: Cover more complex file names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Nzc4OTY0", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#pullrequestreview-367778964", "createdAt": "2020-03-03T08:27:39Z", "commit": {"oid": "adf48bf7cd01a1a8de1b3167d0913a04f82c6e21"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzkwMjUw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#pullrequestreview-367790250", "createdAt": "2020-03-03T08:46:22Z", "commit": {"oid": "adf48bf7cd01a1a8de1b3167d0913a04f82c6e21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODMyMDE1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3199#pullrequestreview-367832015", "createdAt": "2020-03-03T09:46:18Z", "commit": {"oid": "adf48bf7cd01a1a8de1b3167d0913a04f82c6e21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc9b268907b00025f41fe7d5830a144e2ab3b25e", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cc9b268907b00025f41fe7d5830a144e2ab3b25e", "committedDate": "2020-03-03T14:39:14Z", "message": "Merge pull request #5 from jomarko/PR-KOGITO-1157\n\nKOGITO-1157: Cover more complex file names"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 511, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}