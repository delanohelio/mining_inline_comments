{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODYzOTg2", "number": 3336, "title": "KOGITO-764: Create a Guided Tour for first time users on DMN editor", "bodyText": "See https://issues.redhat.com/browse/KOGITO-764\n\n\n\nPart of an ensemble:\n\nkiegroup/appformer#988\n#3336\nkiegroup/kogito-tooling#182\n\n\nAssumptions:\n\nThis PR does not include i18n for any tour. It will be separately implemented by https://issues.redhat.com/browse/KOGITO-2471;\nThis PR does not include the final version of the tour, and the steps are a mix of the preliminary input provided by Liz and the Learn DMN in 15 minutes (as accordingly with @ederign).", "createdAt": "2020-06-17T13:47:16Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336", "merged": true, "mergeCommit": {"oid": "90f71de889dd7e20623ba4bcf21264c3cfa3f55d"}, "closed": true, "closedAt": "2020-07-01T12:08:58Z", "author": {"login": "karreiro"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcshgj9gFqTQzMzQxNjQ5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwVzgrgFqTQ0MDAyMzM5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDE2NDkx", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#pullrequestreview-433416491", "createdAt": "2020-06-18T15:46:17Z", "commit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTo0NjoxOVrOGl1ahQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1NzowNlrOGl4LLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyNTYzNw==", "bodyText": "Maybe we could be consistent in naming and use init instead of initialize. WDYT?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442325637", "createdAt": "2020-06-18T15:46:19Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/AbstractDMNDiagramEditor.java", "diffHunk": "@@ -202,6 +206,7 @@ public void onStartup(final PlaceRequest place) {\n         decisionNavigatorDock.init(PERSPECTIVE_ID);\n         diagramPropertiesDock.init(PERSPECTIVE_ID);\n         diagramPreviewAndExplorerDock.init(PERSPECTIVE_ID);\n+        guidedTourBridgeInitializer.initialize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyNjQyMQ==", "bodyText": "Could we please add javadoc to new classes which do not implement new interfaces from appformer part of ensemble?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442326421", "createdAt": "2020-06-18T15:47:30Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/GuidedTourBridgeInitializer.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour;\n+\n+import javax.inject.Inject;\n+\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourBridge;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.observers.GuidedTourGraphObserver;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.observers.GuidedTourGridObserver;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers.GuidedTourGraphElementPositionUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers.GuidedTourHTMLElementPositionUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial.DMNTutorial;\n+\n+public class GuidedTourBridgeInitializer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzODA4MQ==", "bodyText": "Could you please explain why this is needed? I see graphObserver and gridObserver has @Observes annotation in use. Then if I remember correctly is enough to fire such event instance from any other place and java ee world will invoke those @Observes methods. Why do we need to store and pass graphObserver and and gridObserver instances?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442338081", "createdAt": "2020-06-18T16:04:38Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/GuidedTourBridgeInitializer.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour;\n+\n+import javax.inject.Inject;\n+\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourBridge;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.observers.GuidedTourGraphObserver;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.observers.GuidedTourGridObserver;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers.GuidedTourGraphElementPositionUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers.GuidedTourHTMLElementPositionUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial.DMNTutorial;\n+\n+public class GuidedTourBridgeInitializer {\n+\n+    private final GuidedTourGraphObserver graphObserver;\n+\n+    private final GuidedTourGridObserver gridObserver;\n+\n+    private final GuidedTourGraphElementPositionUtils graphPositionUtils;\n+\n+    private final GuidedTourHTMLElementPositionUtils htmlPositionUtils;\n+\n+    private final GuidedTourBridge monitorBridge;\n+\n+    private final DMNTutorial dmnTutorial;\n+\n+    @Inject\n+    public GuidedTourBridgeInitializer(final GuidedTourGraphObserver graphObserver,\n+                                       final GuidedTourGridObserver gridObserver,\n+                                       final GuidedTourGraphElementPositionUtils graphPositionUtils,\n+                                       final GuidedTourHTMLElementPositionUtils htmlPositionUtils,\n+                                       final GuidedTourBridge monitorBridge,\n+                                       final DMNTutorial dmnTutorial) {\n+        this.graphObserver = graphObserver;\n+        this.gridObserver = gridObserver;\n+        this.graphPositionUtils = graphPositionUtils;\n+        this.htmlPositionUtils = htmlPositionUtils;\n+        this.monitorBridge = monitorBridge;\n+        this.dmnTutorial = dmnTutorial;\n+    }\n+\n+    public void initialize() {\n+        registerPositionProviders();\n+        registerObservers();\n+        registerTutorials();\n+    }\n+\n+    private void registerPositionProviders() {\n+        monitorBridge.registerPositionProvider(\"DMNEditorGraph\", graphPositionUtils.getPositionProviderFunction());\n+        monitorBridge.registerPositionProvider(\"DMNEditorHTMLElement\", htmlPositionUtils.getPositionProviderFunction());\n+    }\n+\n+    private void registerObservers() {\n+        monitorBridge.registerObserver(graphObserver);\n+        monitorBridge.registerObserver(gridObserver);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0NDg2MA==", "bodyText": "I think we can improve the naming. Utils suffix suggest to me set of public methods related to position, however the only one public method is a one of given PositionProvider interface. Should we rename Utils suffix?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442344860", "createdAt": "2020-06-18T16:15:16Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/providers/GuidedTourGraphElementPositionUtils.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+import javax.inject.Inject;\n+\n+import elemental2.dom.ClientRect;\n+import elemental2.dom.Element;\n+import elemental2.dom.HTMLElement;\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourCustomSelectorPositionProvider.PositionProviderFunction;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Rect;\n+import org.jboss.errai.common.client.dom.elemental2.Elemental2DomUtil;\n+import org.kie.workbench.common.dmn.client.graph.DMNGraphUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.common.GuidedTourUtils;\n+import org.kie.workbench.common.stunner.client.lienzo.canvas.wires.WiresCanvas;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.graph.Node;\n+import org.kie.workbench.common.stunner.core.graph.content.Bounds;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.graph.impl.NodeImpl;\n+\n+public class GuidedTourGraphElementPositionUtils implements PositionProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0Nzk3NA==", "bodyText": "Spotted here, it is more related to appformer part of ensemble, why we please need appformer Rect next to elemenatl2 ClientRect. They seem to have the same functionality.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442347974", "createdAt": "2020-06-18T16:20:07Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/providers/GuidedTourGraphElementPositionUtils.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+import javax.inject.Inject;\n+\n+import elemental2.dom.ClientRect;\n+import elemental2.dom.Element;\n+import elemental2.dom.HTMLElement;\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourCustomSelectorPositionProvider.PositionProviderFunction;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Rect;\n+import org.jboss.errai.common.client.dom.elemental2.Elemental2DomUtil;\n+import org.kie.workbench.common.dmn.client.graph.DMNGraphUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.common.GuidedTourUtils;\n+import org.kie.workbench.common.stunner.client.lienzo.canvas.wires.WiresCanvas;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.graph.Node;\n+import org.kie.workbench.common.stunner.core.graph.content.Bounds;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.graph.impl.NodeImpl;\n+\n+public class GuidedTourGraphElementPositionUtils implements PositionProvider {\n+\n+    private final DMNGraphUtils dmnGraphUtils;\n+\n+    private final GuidedTourUtils guidedTourUtils;\n+\n+    private final Elemental2DomUtil elemental2DomUtil;\n+\n+    @Inject\n+    public GuidedTourGraphElementPositionUtils(final DMNGraphUtils dmnGraphUtils,\n+                                               final GuidedTourUtils guidedTourUtils,\n+                                               final Elemental2DomUtil elemental2DomUtil) {\n+        this.dmnGraphUtils = dmnGraphUtils;\n+        this.guidedTourUtils = guidedTourUtils;\n+        this.elemental2DomUtil = elemental2DomUtil;\n+    }\n+\n+    public PositionProviderFunction getPositionProviderFunction() {\n+        return selector ->\n+                getGraphNodes()\n+                        .map(guidedTourUtils::asNodeImpl)\n+                        .filter(node -> Objects.equals(getName(node), selector))\n+                        .findFirst()\n+                        .map(this::calculateNodeRelativePosition)\n+                        .orElse(Rect.NONE());\n+    }\n+\n+    private Rect calculateNodeRelativePosition(final NodeImpl<View> node) {\n+\n+        final Bounds bounds = node.getContent().getBounds();\n+        final Optional<ClientRect> containerRect = getContainerRect();\n+        final double canvasLeft = containerRect.map(rect -> rect.left).orElse(0d);\n+        final double canvasTop = containerRect.map(rect -> rect.top).orElse(0d);\n+\n+        final int left = (int) (canvasLeft + bounds.getX());\n+        final int top = (int) (canvasTop + bounds.getY());\n+        final int height = (int) bounds.getHeight();\n+        final int width = (int) bounds.getWidth();\n+\n+        return makeRect(left, top, height, width);\n+    }\n+\n+    Rect makeRect(final int left,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mjk4NQ==", "bodyText": "Similar question, Rect vs ClientRect", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442352985", "createdAt": "2020-06-18T16:28:09Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/providers/GuidedTourHTMLElementPositionUtils.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers;\n+\n+import java.util.Optional;\n+\n+import elemental2.dom.ClientRect;\n+import elemental2.dom.DomGlobal;\n+import elemental2.dom.Element;\n+import elemental2.dom.HTMLDocument;\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourCustomSelectorPositionProvider.PositionProviderFunction;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Rect;\n+\n+public class GuidedTourHTMLElementPositionUtils implements PositionProvider {\n+\n+    public PositionProviderFunction getPositionProviderFunction() {\n+        return selector ->\n+                Optional.ofNullable(document().querySelector(selector))\n+                        .map(this::makeRect)\n+                        .orElse(Rect.NONE());\n+    }\n+\n+    private Rect makeRect(final Element element) {\n+\n+        final ClientRect clientRect = element.getBoundingClientRect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NjAzNw==", "bodyText": "Some of these are very hard to understand. I mean to know what part of our editor is is.\nIf we merge kiegroup/appformer#987 and #3333 before this ensmeble, could be some of your locators improved?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442356037", "createdAt": "2020-06-18T16:32:55Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/tutorial/DMNTutorial.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.core.JsArray;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.BlockMode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Mode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Step;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Tutorial;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.UserInteraction;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.uberfire.client.mvp.UberElemental;\n+\n+import static java.util.Arrays.asList;\n+\n+@ApplicationScoped\n+public class DMNTutorial {\n+\n+    private final View view;\n+\n+    @Inject\n+    public DMNTutorial(final View view) {\n+        this.view = view;\n+    }\n+\n+    @PostConstruct\n+    void setup() {\n+        view.init(this);\n+    }\n+\n+    public Tutorial getTutorial() {\n+        final List<String> commonAllowedElements = asList(\"canvas\",\n+                                                          \"body\",\n+                                                          \"div.nameEditBoxTable\",\n+                                                          \"i.fa.fa-chevron-right.fa-fw\",\n+                                                          \"i[data-field=\\\"saveButton\\\"].fa.fa-check.nameEditBoxButton.fa-2x\",\n+                                                          \"ul.nav.nav-tabs.uf-tabbar-panel-nav-tabs.nav-tabs-pf\",\n+                                                          \"input[data-field=\\\"nameField\\\"].form-control.nameEditBoxNameBox\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NzI2Ng==", "bodyText": "Could you please explain this 101 number?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442357266", "createdAt": "2020-06-18T16:35:04Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/tutorial/DMNTutorial.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.core.JsArray;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.BlockMode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Mode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Step;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Tutorial;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.UserInteraction;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.uberfire.client.mvp.UberElemental;\n+\n+import static java.util.Arrays.asList;\n+\n+@ApplicationScoped\n+public class DMNTutorial {\n+\n+    private final View view;\n+\n+    @Inject\n+    public DMNTutorial(final View view) {\n+        this.view = view;\n+    }\n+\n+    @PostConstruct\n+    void setup() {\n+        view.init(this);\n+    }\n+\n+    public Tutorial getTutorial() {\n+        final List<String> commonAllowedElements = asList(\"canvas\",\n+                                                          \"body\",\n+                                                          \"div.nameEditBoxTable\",\n+                                                          \"i.fa.fa-chevron-right.fa-fw\",\n+                                                          \"i[data-field=\\\"saveButton\\\"].fa.fa-check.nameEditBoxButton.fa-2x\",\n+                                                          \"ul.nav.nav-tabs.uf-tabbar-panel-nav-tabs.nav-tabs-pf\",\n+                                                          \"input[data-field=\\\"nameField\\\"].form-control.nameEditBoxNameBox\");\n+        final Tutorial tutorial = new Tutorial();\n+        tutorial.setLabel(\"DMN 101 Tutorial\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1ODY0MA==", "bodyText": "We should pass action as GuidedTourActions instead of String. This way will clearly define set of allowed values.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442358640", "createdAt": "2020-06-18T16:37:24Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/tutorial/DMNTutorial.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.core.JsArray;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.BlockMode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Mode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Step;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Tutorial;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.UserInteraction;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.uberfire.client.mvp.UberElemental;\n+\n+import static java.util.Arrays.asList;\n+\n+@ApplicationScoped\n+public class DMNTutorial {\n+\n+    private final View view;\n+\n+    @Inject\n+    public DMNTutorial(final View view) {\n+        this.view = view;\n+    }\n+\n+    @PostConstruct\n+    void setup() {\n+        view.init(this);\n+    }\n+\n+    public Tutorial getTutorial() {\n+        final List<String> commonAllowedElements = asList(\"canvas\",\n+                                                          \"body\",\n+                                                          \"div.nameEditBoxTable\",\n+                                                          \"i.fa.fa-chevron-right.fa-fw\",\n+                                                          \"i[data-field=\\\"saveButton\\\"].fa.fa-check.nameEditBoxButton.fa-2x\",\n+                                                          \"ul.nav.nav-tabs.uf-tabbar-panel-nav-tabs.nav-tabs-pf\",\n+                                                          \"input[data-field=\\\"nameField\\\"].form-control.nameEditBoxNameBox\");\n+        final Tutorial tutorial = new Tutorial();\n+        tutorial.setLabel(\"DMN 101 Tutorial\");\n+        tutorial.setSteps(asJsArray(asList(\n+\n+                getStep(view.getStepContent(0),\n+                        blockMode(userInteraction(\"CREATED\", \"Decision-\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(1),\n+                        blockMode(userInteraction(\"UPDATED\", \"Can drive?\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::Decision-1\",\n+                        \"Try to double-click on the decision node to rename it to \\\"Can drive?\\\".\"),\n+\n+                getStep(view.getStepContent(2),\n+                        blockMode(userInteraction(\"CREATED\", \"InputData-\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rounded corner rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(3),\n+                        blockMode(userInteraction(\"UPDATED\", \"Age\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::InputData-1\",\n+                        \"Try to double-click on the input node to rename it to \\\"Age\\\".\"),\n+\n+                getStep(view.getStepContent(4),\n+                        blockMode(userInteraction(\"CLICK\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\"), allowedSelectors(commonAllowedElements, \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\")),\n+                        \"left\",\n+                        \"DMNEditorHTMLElement:::i.fa.fa-pencil-square-o.fa-lg.fa-fw\",\n+                        \"Open the properties panel by clicking on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(5),\n+                        blockMode(userInteraction(\"CREATED\", \"BOXED_EXPRESSION\"), allowedSelectors(commonAllowedElements, \"Can drive?\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Select the decision node and click on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(6),\n+                        blockMode(userInteraction(\"CLICK\", \"span[data-field=\\\"text\\\"]\"), allowedSelectors(commonAllowedElements)),\n+                        \"center\",\n+                        \"\",\n+                        \"Select one of the available boxed expressions by clicking on \\\"Select expression\\\".\"),\n+\n+                getStep(view.getStepContent(7),\n+                        blockMode(userInteraction(\"CLICK\", \"a[data-field=\\\"returnToLink\\\"]\"), allowedSelectors(\"a[data-field=\\\"returnToLink\\\"]\", \"div.kie-dmn-return-to-link\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Click on the \\\"Back to new-file\\\" link to go back to the canvas.\")\n+\n+        )));\n+        return tutorial;\n+    }\n+\n+    private BlockMode blockMode(final UserInteraction userInteraction,\n+                                final JsArray<String> allowedSelectors) {\n+        final BlockMode blockMode = new BlockMode();\n+        blockMode.setUserInteraction(userInteraction);\n+        blockMode.setAllowedSelectors(allowedSelectors);\n+        return blockMode;\n+    }\n+\n+    private UserInteraction userInteraction(final String action, final String target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1OTEwNg==", "bodyText": "Similar comment as above, we should have enum to clearly define set of allowed values.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442359106", "createdAt": "2020-06-18T16:38:07Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/tutorial/DMNTutorial.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.core.JsArray;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.BlockMode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Mode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Step;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Tutorial;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.UserInteraction;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.uberfire.client.mvp.UberElemental;\n+\n+import static java.util.Arrays.asList;\n+\n+@ApplicationScoped\n+public class DMNTutorial {\n+\n+    private final View view;\n+\n+    @Inject\n+    public DMNTutorial(final View view) {\n+        this.view = view;\n+    }\n+\n+    @PostConstruct\n+    void setup() {\n+        view.init(this);\n+    }\n+\n+    public Tutorial getTutorial() {\n+        final List<String> commonAllowedElements = asList(\"canvas\",\n+                                                          \"body\",\n+                                                          \"div.nameEditBoxTable\",\n+                                                          \"i.fa.fa-chevron-right.fa-fw\",\n+                                                          \"i[data-field=\\\"saveButton\\\"].fa.fa-check.nameEditBoxButton.fa-2x\",\n+                                                          \"ul.nav.nav-tabs.uf-tabbar-panel-nav-tabs.nav-tabs-pf\",\n+                                                          \"input[data-field=\\\"nameField\\\"].form-control.nameEditBoxNameBox\");\n+        final Tutorial tutorial = new Tutorial();\n+        tutorial.setLabel(\"DMN 101 Tutorial\");\n+        tutorial.setSteps(asJsArray(asList(\n+\n+                getStep(view.getStepContent(0),\n+                        blockMode(userInteraction(\"CREATED\", \"Decision-\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(1),\n+                        blockMode(userInteraction(\"UPDATED\", \"Can drive?\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::Decision-1\",\n+                        \"Try to double-click on the decision node to rename it to \\\"Can drive?\\\".\"),\n+\n+                getStep(view.getStepContent(2),\n+                        blockMode(userInteraction(\"CREATED\", \"InputData-\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rounded corner rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(3),\n+                        blockMode(userInteraction(\"UPDATED\", \"Age\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::InputData-1\",\n+                        \"Try to double-click on the input node to rename it to \\\"Age\\\".\"),\n+\n+                getStep(view.getStepContent(4),\n+                        blockMode(userInteraction(\"CLICK\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\"), allowedSelectors(commonAllowedElements, \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\")),\n+                        \"left\",\n+                        \"DMNEditorHTMLElement:::i.fa.fa-pencil-square-o.fa-lg.fa-fw\",\n+                        \"Open the properties panel by clicking on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(5),\n+                        blockMode(userInteraction(\"CREATED\", \"BOXED_EXPRESSION\"), allowedSelectors(commonAllowedElements, \"Can drive?\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Select the decision node and click on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(6),\n+                        blockMode(userInteraction(\"CLICK\", \"span[data-field=\\\"text\\\"]\"), allowedSelectors(commonAllowedElements)),\n+                        \"center\",\n+                        \"\",\n+                        \"Select one of the available boxed expressions by clicking on \\\"Select expression\\\".\"),\n+\n+                getStep(view.getStepContent(7),\n+                        blockMode(userInteraction(\"CLICK\", \"a[data-field=\\\"returnToLink\\\"]\"), allowedSelectors(\"a[data-field=\\\"returnToLink\\\"]\", \"div.kie-dmn-return-to-link\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Click on the \\\"Back to new-file\\\" link to go back to the canvas.\")\n+\n+        )));\n+        return tutorial;\n+    }\n+\n+    private BlockMode blockMode(final UserInteraction userInteraction,\n+                                final JsArray<String> allowedSelectors) {\n+        final BlockMode blockMode = new BlockMode();\n+        blockMode.setUserInteraction(userInteraction);\n+        blockMode.setAllowedSelectors(allowedSelectors);\n+        return blockMode;\n+    }\n+\n+    private UserInteraction userInteraction(final String action, final String target) {\n+        final UserInteraction userInteraction = new UserInteraction();\n+        userInteraction.setAction(action);\n+        userInteraction.setTarget(target);\n+        return userInteraction;\n+    }\n+\n+    private JsArray<String> allowedSelectors(final String... selectors) {\n+        return asJsArray(asList(selectors));\n+    }\n+\n+    private JsArray<String> allowedSelectors(final List<String> selectorsList,\n+                                             final String... selectors) {\n+        final List<String> allowedSelectors = new ArrayList<>();\n+        allowedSelectors.addAll(selectorsList);\n+        allowedSelectors.addAll(asList(selectors));\n+        return asJsArray(allowedSelectors);\n+    }\n+\n+    private Step getStep(final String content,\n+                         final Mode mode,\n+                         final String position,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MDEwMg==", "bodyText": "Could we please implement OuiaComponent interface introduced as part of kiegroup/appformer#987 and #333?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442360102", "createdAt": "2020-06-18T16:39:46Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/tutorial/DMNTutorial.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.core.JsArray;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.BlockMode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Mode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Step;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Tutorial;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.UserInteraction;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.uberfire.client.mvp.UberElemental;\n+\n+import static java.util.Arrays.asList;\n+\n+@ApplicationScoped\n+public class DMNTutorial {\n+\n+    private final View view;\n+\n+    @Inject\n+    public DMNTutorial(final View view) {\n+        this.view = view;\n+    }\n+\n+    @PostConstruct\n+    void setup() {\n+        view.init(this);\n+    }\n+\n+    public Tutorial getTutorial() {\n+        final List<String> commonAllowedElements = asList(\"canvas\",\n+                                                          \"body\",\n+                                                          \"div.nameEditBoxTable\",\n+                                                          \"i.fa.fa-chevron-right.fa-fw\",\n+                                                          \"i[data-field=\\\"saveButton\\\"].fa.fa-check.nameEditBoxButton.fa-2x\",\n+                                                          \"ul.nav.nav-tabs.uf-tabbar-panel-nav-tabs.nav-tabs-pf\",\n+                                                          \"input[data-field=\\\"nameField\\\"].form-control.nameEditBoxNameBox\");\n+        final Tutorial tutorial = new Tutorial();\n+        tutorial.setLabel(\"DMN 101 Tutorial\");\n+        tutorial.setSteps(asJsArray(asList(\n+\n+                getStep(view.getStepContent(0),\n+                        blockMode(userInteraction(\"CREATED\", \"Decision-\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(1),\n+                        blockMode(userInteraction(\"UPDATED\", \"Can drive?\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::Decision-1\",\n+                        \"Try to double-click on the decision node to rename it to \\\"Can drive?\\\".\"),\n+\n+                getStep(view.getStepContent(2),\n+                        blockMode(userInteraction(\"CREATED\", \"InputData-\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rounded corner rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(3),\n+                        blockMode(userInteraction(\"UPDATED\", \"Age\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::InputData-1\",\n+                        \"Try to double-click on the input node to rename it to \\\"Age\\\".\"),\n+\n+                getStep(view.getStepContent(4),\n+                        blockMode(userInteraction(\"CLICK\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\"), allowedSelectors(commonAllowedElements, \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\")),\n+                        \"left\",\n+                        \"DMNEditorHTMLElement:::i.fa.fa-pencil-square-o.fa-lg.fa-fw\",\n+                        \"Open the properties panel by clicking on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(5),\n+                        blockMode(userInteraction(\"CREATED\", \"BOXED_EXPRESSION\"), allowedSelectors(commonAllowedElements, \"Can drive?\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Select the decision node and click on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(6),\n+                        blockMode(userInteraction(\"CLICK\", \"span[data-field=\\\"text\\\"]\"), allowedSelectors(commonAllowedElements)),\n+                        \"center\",\n+                        \"\",\n+                        \"Select one of the available boxed expressions by clicking on \\\"Select expression\\\".\"),\n+\n+                getStep(view.getStepContent(7),\n+                        blockMode(userInteraction(\"CLICK\", \"a[data-field=\\\"returnToLink\\\"]\"), allowedSelectors(\"a[data-field=\\\"returnToLink\\\"]\", \"div.kie-dmn-return-to-link\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Click on the \\\"Back to new-file\\\" link to go back to the canvas.\")\n+\n+        )));\n+        return tutorial;\n+    }\n+\n+    private BlockMode blockMode(final UserInteraction userInteraction,\n+                                final JsArray<String> allowedSelectors) {\n+        final BlockMode blockMode = new BlockMode();\n+        blockMode.setUserInteraction(userInteraction);\n+        blockMode.setAllowedSelectors(allowedSelectors);\n+        return blockMode;\n+    }\n+\n+    private UserInteraction userInteraction(final String action, final String target) {\n+        final UserInteraction userInteraction = new UserInteraction();\n+        userInteraction.setAction(action);\n+        userInteraction.setTarget(target);\n+        return userInteraction;\n+    }\n+\n+    private JsArray<String> allowedSelectors(final String... selectors) {\n+        return asJsArray(asList(selectors));\n+    }\n+\n+    private JsArray<String> allowedSelectors(final List<String> selectorsList,\n+                                             final String... selectors) {\n+        final List<String> allowedSelectors = new ArrayList<>();\n+        allowedSelectors.addAll(selectorsList);\n+        allowedSelectors.addAll(asList(selectors));\n+        return asJsArray(allowedSelectors);\n+    }\n+\n+    private Step getStep(final String content,\n+                         final Mode mode,\n+                         final String position,\n+                         final String selector,\n+                         final String negativeReinforcementMessage) {\n+        final Step step = new Step();\n+        step.setContent(content);\n+        step.setMode(mode);\n+        step.setPosition(position);\n+        step.setSelector(selector);\n+        step.setNegativeReinforcementMessage(negativeReinforcementMessage);\n+        return step;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T> JsArray<T> asJsArray(final List<T> javaList) {\n+        final JsArray<T> jsArray = new JsArray<>();\n+        javaList.forEach(jsArray::push);\n+        return jsArray;\n+    }\n+\n+    public interface View extends UberElemental<DMNTutorial>,\n+                                  IsElement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NjcxNg==", "bodyText": "This test made mo to look on asNodeImpl implementation. Now I have concern there we try to make NodeImpl without any instanceof check.\nWhat if we have test\n    @Test\n    public void testAsNodeImpl_Edge() {\n        final Element<View> e = new EdgeImpl<>(\"uuid\");\n        assertEquals(e, utils.asNodeImpl(e));\n    }", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442366716", "createdAt": "2020-06-18T16:50:00Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/common/GuidedTourUtilsTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.common;\n+\n+import java.util.Optional;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.controls.actions.TextPropertyProvider;\n+import org.kie.workbench.common.stunner.core.client.canvas.controls.actions.TextPropertyProviderFactory;\n+import org.kie.workbench.common.stunner.core.client.canvas.event.registration.CanvasElementAddedEvent;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.graph.impl.EdgeImpl;\n+import org.kie.workbench.common.stunner.core.graph.impl.NodeImpl;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class GuidedTourUtilsTest {\n+\n+    @Mock\n+    private TextPropertyProviderFactory textPropertyProviderFactory;\n+\n+    private GuidedTourUtils utils;\n+\n+    @Before\n+    public void setup() {\n+        utils = new GuidedTourUtils(textPropertyProviderFactory);\n+    }\n+\n+    @Test\n+    public void testGetNode() {\n+        final NodeImpl<View> expectedNode = new NodeImpl<>(\"uuid\");\n+        final CanvasHandler canvasHandler = mock(CanvasHandler.class);\n+        final CanvasElementAddedEvent event = new CanvasElementAddedEvent(canvasHandler, expectedNode);\n+\n+        final Optional<NodeImpl<View>> actualNode = utils.getNode(event);\n+\n+        assertTrue(actualNode.isPresent());\n+        assertEquals(expectedNode, actualNode.get());\n+    }\n+\n+    @Test\n+    public void testGetNodeWhenElementIsNotNodeImpl() {\n+        final EdgeImpl<View> edge = new EdgeImpl<>(\"uuid\");\n+        final CanvasHandler canvasHandler = mock(CanvasHandler.class);\n+        final CanvasElementAddedEvent event = new CanvasElementAddedEvent(canvasHandler, edge);\n+\n+        assertFalse(utils.getNode(event).isPresent());\n+    }\n+\n+    @Test\n+    public void testGetName() {\n+        final NodeImpl<View> node = new NodeImpl<>(\"uuid\");\n+        final TextPropertyProvider textPropertyProvider = mock(TextPropertyProvider.class);\n+        final String expectedNodeName = \"Decision-1\";\n+\n+        when(textPropertyProviderFactory.getProvider(node)).thenReturn(textPropertyProvider);\n+        when(textPropertyProvider.getText(node)).thenReturn(expectedNodeName);\n+\n+        final String actualNodeName = utils.getName(node);\n+\n+        assertEquals(expectedNodeName, actualNodeName);\n+    }\n+\n+    @Test\n+    public void testAsNodeImpl() {\n+        final NodeImpl<View> node = new NodeImpl<>(\"uuid\");\n+        assertEquals(node, utils.asNodeImpl(node));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MDU0NQ==", "bodyText": "I think to provide more context we should name the variable like nodeName.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442370545", "createdAt": "2020-06-18T16:56:36Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/providers/GuidedTourGraphElementPositionUtilsTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers;\n+\n+import java.util.stream.Stream;\n+\n+import com.google.gwt.user.client.Element;\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import elemental2.dom.ClientRect;\n+import elemental2.dom.HTMLElement;\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourCustomSelectorPositionProvider.PositionProviderFunction;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Rect;\n+import org.jboss.errai.common.client.dom.elemental2.Elemental2DomUtil;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.dmn.client.graph.DMNGraphUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.common.GuidedTourUtils;\n+import org.kie.workbench.common.stunner.client.lienzo.canvas.wires.WiresCanvas;\n+import org.kie.workbench.common.stunner.client.lienzo.canvas.wires.WiresCanvasView;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.graph.content.Bounds;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.graph.impl.NodeImpl;\n+import org.mockito.Mock;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(GwtMockitoTestRunner.class)\n+public class GuidedTourGraphElementPositionUtilsTest {\n+\n+    @Mock\n+    private DMNGraphUtils dmnGraphUtils;\n+\n+    @Mock\n+    private GuidedTourUtils guidedTourUtils;\n+\n+    @Mock\n+    private Elemental2DomUtil elemental2DomUtil;\n+\n+    private GuidedTourGraphElementPositionUtils utils;\n+\n+    @Before\n+    public void init() {\n+        utils = spy(new GuidedTourGraphElementPositionUtils(dmnGraphUtils, guidedTourUtils, elemental2DomUtil));\n+    }\n+\n+    @Test\n+    public void testGetPositionProviderFunction() {\n+        final PositionProviderFunction providerFunction = utils.getPositionProviderFunction();\n+        final NodeImpl<View> node = makeNodeImpl(\"0000\", 10, 10, 50, 100);\n+        final String decision1 = \"Decision-1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MDg2Mg==", "bodyText": "similar comment as above", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r442370862", "createdAt": "2020-06-18T16:57:06Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/providers/GuidedTourGraphElementPositionUtilsTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.providers;\n+\n+import java.util.stream.Stream;\n+\n+import com.google.gwt.user.client.Element;\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import elemental2.dom.ClientRect;\n+import elemental2.dom.HTMLElement;\n+import org.appformer.kogito.bridge.client.guided.tour.GuidedTourCustomSelectorPositionProvider.PositionProviderFunction;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Rect;\n+import org.jboss.errai.common.client.dom.elemental2.Elemental2DomUtil;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.dmn.client.graph.DMNGraphUtils;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.common.GuidedTourUtils;\n+import org.kie.workbench.common.stunner.client.lienzo.canvas.wires.WiresCanvas;\n+import org.kie.workbench.common.stunner.client.lienzo.canvas.wires.WiresCanvasView;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.graph.content.Bounds;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.graph.impl.NodeImpl;\n+import org.mockito.Mock;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(GwtMockitoTestRunner.class)\n+public class GuidedTourGraphElementPositionUtilsTest {\n+\n+    @Mock\n+    private DMNGraphUtils dmnGraphUtils;\n+\n+    @Mock\n+    private GuidedTourUtils guidedTourUtils;\n+\n+    @Mock\n+    private Elemental2DomUtil elemental2DomUtil;\n+\n+    private GuidedTourGraphElementPositionUtils utils;\n+\n+    @Before\n+    public void init() {\n+        utils = spy(new GuidedTourGraphElementPositionUtils(dmnGraphUtils, guidedTourUtils, elemental2DomUtil));\n+    }\n+\n+    @Test\n+    public void testGetPositionProviderFunction() {\n+        final PositionProviderFunction providerFunction = utils.getPositionProviderFunction();\n+        final NodeImpl<View> node = makeNodeImpl(\"0000\", 10, 10, 50, 100);\n+        final String decision1 = \"Decision-1\";\n+        final CanvasHandler canvasHandler = mock(CanvasHandler.class);\n+        final WiresCanvas canvas = mock(WiresCanvas.class);\n+        final WiresCanvasView wiresCanvasView = mock(WiresCanvasView.class);\n+        final Element deprecatedElement = mock(Element.class);\n+        final HTMLElement htmlElement = mock(HTMLElement.class);\n+        final ClientRect clientRect = makeClientRect(10, 10);\n+        final Rect expected = mock(Rect.class);\n+\n+        when(guidedTourUtils.asNodeImpl(node)).thenReturn(node);\n+        when(guidedTourUtils.getName(node)).thenReturn(decision1);\n+        when(dmnGraphUtils.getNodeStream()).thenReturn(Stream.of(node));\n+\n+        when(dmnGraphUtils.getCanvasHandler()).thenReturn(canvasHandler);\n+        when(canvasHandler.getCanvas()).thenReturn(canvas);\n+        when(canvas.getView()).thenReturn(wiresCanvasView);\n+        when(wiresCanvasView.getElement()).thenReturn(deprecatedElement);\n+        when(elemental2DomUtil.asHTMLElement(deprecatedElement)).thenReturn(htmlElement);\n+        when(htmlElement.getBoundingClientRect()).thenReturn(clientRect);\n+\n+        when(utils.makeRect(20, 20, 50, 100)).thenReturn(expected);\n+\n+        final Rect actual = providerFunction.call(\"Decision-1\");\n+\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    public void testGetPositionProviderFunctionWhenParentCanvasElementCannotBeFound() {\n+        final PositionProviderFunction providerFunction = utils.getPositionProviderFunction();\n+        final NodeImpl<View> node = makeNodeImpl(\"0000\", 10, 10, 50, 100);\n+        final String decision1 = \"Decision-1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a09d8a5207892c04c65254060d1ccf165fe8a6b", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3a09d8a5207892c04c65254060d1ccf165fe8a6b", "committedDate": "2020-06-22T21:23:59Z", "message": "KOGITO-764: Create a Guided Tour for first time users on DMN editor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18852a5b94b26fac106cd8428916e8d7fc430fc3", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/18852a5b94b26fac106cd8428916e8d7fc430fc3", "committedDate": "2020-06-22T21:23:59Z", "message": "Fix issue 12 - Now 'GuidedTourGridObserver' provides the node name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6a199c852369d53c4b66e3890dc24c1d3e1eeec", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c6a199c852369d53c4b66e3890dc24c1d3e1eeec", "committedDate": "2020-06-22T21:23:59Z", "message": "Fix issue 4, 5, 6 and 8 - Now DMN tutorial has improved messages, and refined interaction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80aa57e6aeaa4a92ff55924c484033851e054ca4", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/80aa57e6aeaa4a92ff55924c484033851e054ca4", "committedDate": "2020-06-17T13:45:51Z", "message": "KOGITO-764: Create a Guided Tour for first time users on DMN editor"}, "afterCommit": {"oid": "c6a199c852369d53c4b66e3890dc24c1d3e1eeec", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c6a199c852369d53c4b66e3890dc24c1d3e1eeec", "committedDate": "2020-06-22T21:23:59Z", "message": "Fix issue 4, 5, 6 and 8 - Now DMN tutorial has improved messages, and refined interaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80186ff3e7448e34aea54e06dbfc1db01387de90", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/80186ff3e7448e34aea54e06dbfc1db01387de90", "committedDate": "2020-06-23T01:10:52Z", "message": "Apply review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTIyNTc3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#pullrequestreview-439122577", "createdAt": "2020-06-29T13:06:38Z", "commit": {"oid": "80186ff3e7448e34aea54e06dbfc1db01387de90"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDA3NDE3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#pullrequestreview-440007417", "createdAt": "2020-06-30T13:22:26Z", "commit": {"oid": "80186ff3e7448e34aea54e06dbfc1db01387de90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzoyMjoyNlrOGq8DXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzoyMjoyNlrOGq8DXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NzI3Nw==", "bodyText": "I think we need to remove some whitespaces here.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#discussion_r447677277", "createdAt": "2020-06-30T13:22:26Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/tutorial/DMNTutorial.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.tour.tutorial;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.core.JsArray;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.BlockMode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Mode;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Step;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.Tutorial;\n+import org.appformer.kogito.bridge.client.guided.tour.service.api.UserInteraction;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.uberfire.client.mvp.UberElemental;\n+\n+import static java.util.Arrays.asList;\n+\n+@ApplicationScoped\n+public class DMNTutorial {\n+\n+    private final View view;\n+\n+    @Inject\n+    public DMNTutorial(final View view) {\n+        this.view = view;\n+    }\n+\n+    @PostConstruct\n+    void setup() {\n+        view.init(this);\n+    }\n+\n+    public Tutorial getTutorial() {\n+        final List<String> commonAllowedElements = asList(\"canvas\",\n+                                                          \"body\",\n+                                                          \"img\",\n+                                                          \"div.nameEditBoxTable\",\n+                                                          \"i.fa.fa-chevron-right.fa-fw\",\n+                                                          \"i[data-field=\\\"saveButton\\\"].fa.fa-check.nameEditBoxButton.fa-2x\",\n+                                                          \"ul.nav.nav-tabs.uf-tabbar-panel-nav-tabs.nav-tabs-pf\",\n+                                                          \"input[data-field=\\\"nameField\\\"].form-control.nameEditBoxNameBox\");\n+        final Tutorial tutorial = new Tutorial();\n+        tutorial.setLabel(\"DMN 101 Tutorial\");\n+        tutorial.setSteps(asJsArray(asList(\n+\n+                getStep(view.getStepContent(0),\n+                        blockMode(userInteraction(\"CREATED\", \"Decision-\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(1),\n+                        blockMode(userInteraction(\"UPDATED\", \"Can drive?\"), allowedSelectors(commonAllowedElements, \"Decision-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::Decision-1\",\n+                        \"Try to double-click on the decision node to rename it to \\\"Can drive?\\\".\"),\n+\n+                getStep(view.getStepContent(2),\n+                        blockMode(userInteraction(\"CREATED\", \"InputData-\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::.kie-palette\",\n+                        \"Try to drag the rounded corner rectangle icon from the palette to the canvas.\"),\n+\n+                getStep(view.getStepContent(3),\n+                        blockMode(userInteraction(\"UPDATED\", \"Age\"), allowedSelectors(commonAllowedElements, \"InputData-1\")),\n+                        \"bottom\",\n+                        \"DMNEditorGraph:::InputData-1\",\n+                        \"Try to double-click on the input node to rename it to \\\"Age\\\".\"),\n+\n+                getStep(view.getStepContent(4),\n+                        blockMode(userInteraction(\"CLICK\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\"), allowedSelectors(commonAllowedElements, \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\", \"button[data-animation=\\\"true\\\"][data-delay=\\\"{ \\\"show\\\": 0, \\\"hide\\\": 0 }\\\"][data-html=\\\"false\\\"][data-placement=\\\"left\\\"][data-template=\\\"<div class=\\\"tooltip\\\"><div class=\\\"tooltip-arrow\\\"></div><div class=\\\"tooltip-inner\\\"></div></div>\\\"][data-title=\\\"Properties\\\"][data-trigger=\\\"hover\\\"][data-viewport=\\\"{ \\\"selector\\\": \\\"body\\\", \\\"padding\\\": 0 }\\\"][data-container=\\\"body\\\"][data-original-title=\\\"\\\"].btn.btn-sm.GFVDQLFDIL.btn-link\")),\n+                        \"left\",\n+                        \"DMNEditorHTMLElement:::i.fa.fa-pencil-square-o.fa-lg.fa-fw\",\n+                        \"Open the properties panel by clicking on the pencil icon.\"),\n+\n+                getStep(view.getStepContent(5),\n+                        blockMode(userInteraction(\"CREATED\", \"BOXED_EXPRESSION:::Can drive?\"), allowedSelectors(commonAllowedElements, \"Age\", \"Can drive?\", \"i.fa.fa-pencil-square-o.fa-lg.fa-fw\", \"button[data-animation=\\\"true\\\"][data-delay=\\\"{ \\\"show\\\": 0, \\\"hide\\\": 0 }\\\"][data-html=\\\"false\\\"][data-placement=\\\"left\\\"][data-template=\\\"<div class=\\\"tooltip\\\"><div class=\\\"tooltip-arrow\\\"></div><div class=\\\"tooltip-inner\\\"></div></div>\\\"][data-title=\\\"Properties\\\"][data-trigger=\\\"hover\\\"][data-viewport=\\\"{ \\\"selector\\\": \\\"body\\\", \\\"padding\\\": 0 }\\\"][data-container=\\\"body\\\"][data-original-title=\\\"\\\"].btn.btn-sm.GFVDQLFDIL.btn-link\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Select the decision \\\"Can drive?\\\" and click on the pencil icon that appears at the left side of the node.\"),\n+\n+                getStep(view.getStepContent(6),\n+                        blockMode(userInteraction(\"CLICK\", \"span[data-field=\\\"text\\\"]\"), allowedSelectors(commonAllowedElements, \"div.kie-dmn-return-to-link\", \"BOXED_EXPRESSION:::Can drive?\")),\n+                        \"center\",\n+                        \"\",\n+                        \"Select one of the available boxed expressions by clicking on \\\"Select expression\\\" or pressing \\\"Enter\\\".\"),\n+\n+                getStep(view.getStepContent(7),\n+                        blockMode(userInteraction(\"CLICK\", \"a[data-field=\\\"returnToLink\\\"]\"), allowedSelectors(\"a[data-field=\\\"returnToLink\\\"]\", \"div.kie-dmn-return-to-link\")),\n+                        \"right\",\n+                        \"DMNEditorHTMLElement:::    a[data-field=\\\"returnToLink\\\"]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80186ff3e7448e34aea54e06dbfc1db01387de90"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a8848b56c1a349a5118de79b158c635d141d5aa", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5a8848b56c1a349a5118de79b158c635d141d5aa", "committedDate": "2020-06-30T13:37:57Z", "message": "Fix whitespace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDIzMzk4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3336#pullrequestreview-440023398", "createdAt": "2020-06-30T13:38:43Z", "commit": {"oid": "5a8848b56c1a349a5118de79b158c635d141d5aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 432, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}