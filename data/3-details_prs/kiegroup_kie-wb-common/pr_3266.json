{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzg5MzIy", "number": 3266, "title": "DROOLS-5148: [DMN Designer] Copy/Paste is not working", "bodyText": "Please refer to: https://issues.redhat.com/browse/DROOLS-5148\nIssue description: Ctrl + C / Ctrl + V was not working on DMN editor. When users try to copy and paste a node, the name and the boxed expression are not copied.\nProposed solution: Extension of already existing DeepCloneProcess for DMN nodes, by using Errai @Alternative (https://docs.jboss.org/author/display/ERRAI/Alternatives%20and%20Mocks.html)\nCore solution is in https://github.com/kiegroup/kie-wb-common/compare/master...vpellegrino:DROOLS-5148?expand=1#diff-28472fc6825a3ec1d291b65d60da5ab1\nSeveral other classes are providing a specific copy() method that is used during cloning phase.", "createdAt": "2020-04-15T14:19:46Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266", "merged": true, "mergeCommit": {"oid": "7a8d98411a666742b37c83c21de990246119f6a9"}, "closed": true, "closedAt": "2020-04-23T11:02:05Z", "author": {"login": "vpellegrino"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV8TmKAH2gAyNDAzNzg5MzIyOmYyZWY0OTVmYTIzMWFhYWE0ZDdiNGRmZDg0MzM4NDc1YTJiMjMyMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaOwnSgFqTM5ODU4NTA0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f2ef495fa231aaaa4d7b4dfd84338475a2b23223", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f2ef495fa231aaaa4d7b4dfd84338475a2b23223", "committedDate": "2020-04-09T13:14:12Z", "message": "Introducing in Stunner a parent type to be used in the @Alternative"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94e463d53d00b4249b9a625ff1c7bbb45932a1c", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b94e463d53d00b4249b9a625ff1c7bbb45932a1c", "committedDate": "2020-04-09T13:15:14Z", "message": "DMNDeepCloneProcess should be used, in DMN, in place of DeepCloneProcess by Stunner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8423a2e3abd540efc17ded8712348cbbb2a1ec76", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8423a2e3abd540efc17ded8712348cbbb2a1ec76", "committedDate": "2020-04-10T17:22:19Z", "message": "DMN deep clone: supporting all DMN nodes, except for Decision"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6e1c2b48f65161fce56aba66ba68212607be727", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a6e1c2b48f65161fce56aba66ba68212607be727", "committedDate": "2020-04-14T08:49:23Z", "message": "Implementing internal copy method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f27050b990158bc82e51959adb226882095df259", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f27050b990158bc82e51959adb226882095df259", "committedDate": "2020-04-14T12:11:47Z", "message": "Implementing copy method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a640fa4469e800e48ffed062b5e259851793c208", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a640fa4469e800e48ffed062b5e259851793c208", "committedDate": "2020-04-14T12:12:48Z", "message": "Adding copy as abstract method to be implemented in subclasses of Expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5074e9e14e7873efc397c7c21475a6a7922f05d9", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5074e9e14e7873efc397c7c21475a6a7922f05d9", "committedDate": "2020-04-15T09:05:35Z", "message": "Adding copy method to Property classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c0590b1eedf996ef16ead3e52e3a7bdea114128", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6c0590b1eedf996ef16ead3e52e3a7bdea114128", "committedDate": "2020-04-15T09:22:31Z", "message": "All subclasses of Expression must implement the copy method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e95703cf6b2a30229c4bd534d3e77da2a48bf18", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8e95703cf6b2a30229c4bd534d3e77da2a48bf18", "committedDate": "2020-04-15T09:24:41Z", "message": "All models used by DMN nodes must implement the copy method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4f7e243dcde8c9191ea2f4e5a40383794e4ecd07", "committedDate": "2020-04-15T14:07:47Z", "message": "Implementing deep clone core process for DMN nodes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODM2Mzg2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-393836386", "createdAt": "2020-04-15T14:35:37Z", "commit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDozNTozN1rOGF8wbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDozNTozN1rOGF8wbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg5MTUwMA==", "bodyText": "Sorry, I could not resist looking.. the possible issue with enabling the alternative is that it will also affect BPMN.\nI suggest testing with Business Central.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#discussion_r408891500", "createdAt": "2020-04-15T14:35:37Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/resources/META-INF/ErraiApp.properties", "diffHunk": "@@ -28,4 +28,5 @@\n # file, although it is rarely necessary. See the documentation at\n # https://docs.jboss.org/author/display/ERRAI/ErraiApp.properties\n # for details.\n+errai.ioc.enabled.alternatives=org.kie.workbench.common.dmn.client.commands.clone.DMNDeepCloneProcess", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MzE5NTg3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-394319587", "createdAt": "2020-04-16T06:00:26Z", "commit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjowMDoyNlrOGGVvWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjozNDowNlrOGGWgxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMwMDgyNw==", "bodyText": "Please implement unit tests for all added copy() methods.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#discussion_r409300827", "createdAt": "2020-04-16T06:00:26Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/Binding.java", "diffHunk": "@@ -35,6 +36,13 @@\n     private InformationItem parameter;\n     private Expression expression;\n \n+    public Binding copy() {\n+        final Binding bindingCloned = new Binding();\n+        bindingCloned.parameter = parameter.copy();\n+        bindingCloned.expression = Optional.ofNullable(expression).map(Expression::copy).orElse(null);\n+        return bindingCloned;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMwNDQ1NQ==", "bodyText": "Some classes just add new public copy method and some override abstract copy method. Just question if we can not  declare the abstract in DMNModelInstrumentedBase to achieve consistency in overriding?\nJust asking, haven't investigated limitations.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#discussion_r409304455", "createdAt": "2020-04-16T06:10:49Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/ContextEntry.java", "diffHunk": "@@ -37,6 +38,13 @@\n     private InformationItem variable;\n     private Expression expression;\n \n+    public ContextEntry copy() {\n+        final ContextEntry clonedContextEntry = new ContextEntry();\n+        clonedContextEntry.variable = Optional.ofNullable(variable).map(InformationItem::copy).orElse(null);\n+        clonedContextEntry.expression = Optional.ofNullable(expression).map(Expression::copy).orElse(null);\n+        return clonedContextEntry;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMwNTg2OA==", "bodyText": "We should add javadoc, explaining deep copy is made.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#discussion_r409305868", "createdAt": "2020-04-16T06:14:42Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/Expression.java", "diffHunk": "@@ -45,6 +45,8 @@ public Expression(final Id id,\n         this.typeRef = typeRef;\n     }\n \n+    public abstract Expression copy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxMjAyNw==", "bodyText": "We miss test for second link:\nassertThat(cloned.getLinksHolder().getValue().getLinks())\n                .extracting(\"url\")\n                .containsExactly(FIRST_URL, SECOND_URL);\nLooking on whole class, could we please use both URLs in all tests (where applicable)?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#discussion_r409312027", "createdAt": "2020-04-16T06:30:24Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/clone/DMNDeepCloneProcessTest.java", "diffHunk": "@@ -0,0 +1,257 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.clone;\n+\n+import java.util.ArrayList;\n+import java.util.stream.Stream;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.kie.workbench.common.dmn.api.definition.model.BusinessKnowledgeModel;\n+import org.kie.workbench.common.dmn.api.definition.model.Context;\n+import org.kie.workbench.common.dmn.api.definition.model.DRGElement;\n+import org.kie.workbench.common.dmn.api.definition.model.Decision;\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionService;\n+import org.kie.workbench.common.dmn.api.definition.model.FunctionDefinition;\n+import org.kie.workbench.common.dmn.api.definition.model.InformationItemPrimary;\n+import org.kie.workbench.common.dmn.api.definition.model.InputData;\n+import org.kie.workbench.common.dmn.api.definition.model.KnowledgeSource;\n+import org.kie.workbench.common.dmn.api.property.background.BackgroundSet;\n+import org.kie.workbench.common.dmn.api.property.dimensions.DecisionServiceRectangleDimensionsSet;\n+import org.kie.workbench.common.dmn.api.property.dimensions.GeneralRectangleDimensionsSet;\n+import org.kie.workbench.common.dmn.api.property.dmn.AllowedAnswers;\n+import org.kie.workbench.common.dmn.api.property.dmn.DMNExternalLink;\n+import org.kie.workbench.common.dmn.api.property.dmn.DecisionServiceDividerLineY;\n+import org.kie.workbench.common.dmn.api.property.dmn.Description;\n+import org.kie.workbench.common.dmn.api.property.dmn.Id;\n+import org.kie.workbench.common.dmn.api.property.dmn.KnowledgeSourceType;\n+import org.kie.workbench.common.dmn.api.property.dmn.LocationURI;\n+import org.kie.workbench.common.dmn.api.property.dmn.Name;\n+import org.kie.workbench.common.dmn.api.property.dmn.QName;\n+import org.kie.workbench.common.dmn.api.property.dmn.Question;\n+import org.kie.workbench.common.dmn.api.property.dmn.types.BuiltInType;\n+import org.kie.workbench.common.dmn.api.property.font.FontSet;\n+import org.kie.workbench.common.stunner.core.definition.clone.AbstractCloneProcessTest;\n+import org.kie.workbench.common.stunner.core.util.ClassUtils;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.kie.workbench.common.dmn.api.definition.model.FunctionDefinition.Kind.JAVA;\n+\n+public class DMNDeepCloneProcessTest extends AbstractCloneProcessTest {\n+\n+    public static final String SOURCE_ID = \"source-id\";\n+    public static final String INPUT_DATA_NAME = \"input-data\";\n+    public static final String FIRST_URL = \"firstURL\";\n+    public static final String SECOND_URL = \"secondURL\";\n+    public static final String DECISION_SERVICE_NAME = \"decision-service\";\n+    public static final String KNOWLEDGE_SOURCE_NAME = \"knowledge-source\";\n+    public static final String FUNCTION_ID = \"function-id\";\n+    public static final String CONTEXT_ID = \"context-id\";\n+    public static final String BKM_SOURCE_NAME = \"bkm-source\";\n+    public static final String DECISION_SOURCE_NAME = \"decision-source\";\n+    public static final String QUESTION = \"question?\";\n+    public static final String ANSWER = \"answer\";\n+    private DMNDeepCloneProcess dmnDeepCloneProcess;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        dmnDeepCloneProcess = new DMNDeepCloneProcess(factoryManager, adapterManager, new ClassUtils());\n+    }\n+\n+    @Test\n+    public void testCloneWhenSourceIsInputData() {\n+        final InputData source = buildInputData();\n+        setLinks(source, FIRST_URL, SECOND_URL);\n+\n+        final InputData cloned = dmnDeepCloneProcess.clone(source, new InputData());\n+\n+        assertThat(cloned).isNotNull();\n+        assertThat(cloned.getId().getValue()).isNotEqualTo(SOURCE_ID);\n+        assertThat(cloned.getName().getValue()).isEqualTo(INPUT_DATA_NAME);\n+        assertThat(cloned.getVariable().getTypeRef()).isEqualTo(BuiltInType.STRING.asQName());\n+        assertThat(cloned.getLinksHolder().getValue().getLinks()).hasSize(2);\n+        assertThat(cloned.getLinksHolder().getValue().getLinks()).first().extracting(\"url\").isEqualTo(FIRST_URL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxMzQ3Ng==", "bodyText": "Please add javadoc explaining purpose of this class", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#discussion_r409313476", "createdAt": "2020-04-16T06:34:06Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-core-common/src/main/java/org/kie/workbench/common/stunner/core/definition/clone/IDeepCloneProcess.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.core.definition.clone;\n+\n+public interface IDeepCloneProcess extends CloneProcess{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7e243dcde8c9191ea2f4e5a40383794e4ecd07"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0922aed35dc068a23084130e25f18fc7891fad2e", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0922aed35dc068a23084130e25f18fc7891fad2e", "committedDate": "2020-04-16T07:50:32Z", "message": "Mockito was not able to mock BindableTypeMock, because it was package private"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46e79c4a252d3fc774105020d4306aa4cb3d393", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e46e79c4a252d3fc774105020d4306aa4cb3d393", "committedDate": "2020-04-16T08:06:06Z", "message": "Adding java doc for IDeepCloneProcess"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec71bcdeef7d2b604bcd486af127cfb2a0317d49", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ec71bcdeef7d2b604bcd486af127cfb2a0317d49", "committedDate": "2020-04-16T08:17:56Z", "message": "Testing both links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dbe90aa35f295bf68626eef919b28d21cb46e8a", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7dbe90aa35f295bf68626eef919b28d21cb46e8a", "committedDate": "2020-04-16T08:30:48Z", "message": "Adding javadoc to explain better Expression and DMNDeepCloneProcess"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4fc6382b403f5d3c26b4cdbf22bd4ddbda81491", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c4fc6382b403f5d3c26b4cdbf22bd4ddbda81491", "committedDate": "2020-04-16T11:47:34Z", "message": "Adding test to clone method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06a82373718bc8ab1f93fdf3ddbd445ba6c99ab3", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/06a82373718bc8ab1f93fdf3ddbd445ba6c99ab3", "committedDate": "2020-04-16T12:44:43Z", "message": "Adding test to clone method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67754863963bc7e6fae301ce6a5c0d2b6269dae4", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/67754863963bc7e6fae301ce6a5c0d2b6269dae4", "committedDate": "2020-04-16T13:08:09Z", "message": "Adding test to clone method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ce97f0e400ea4b827f57fb4fe3193493d5b52ef", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3ce97f0e400ea4b827f57fb4fe3193493d5b52ef", "committedDate": "2020-04-16T13:27:20Z", "message": "All constants in tests should be private"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjIwMTE2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-395220116", "createdAt": "2020-04-17T07:26:03Z", "commit": {"oid": "3ce97f0e400ea4b827f57fb4fe3193493d5b52ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzAzNzk3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-395703797", "createdAt": "2020-04-17T19:04:22Z", "commit": {"oid": "3ce97f0e400ea4b827f57fb4fe3193493d5b52ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTY0NzYy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-396164762", "createdAt": "2020-04-20T06:15:38Z", "commit": {"oid": "3ce97f0e400ea4b827f57fb4fe3193493d5b52ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTg0NTQ5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-396184549", "createdAt": "2020-04-20T06:57:24Z", "commit": {"oid": "3ce97f0e400ea4b827f57fb4fe3193493d5b52ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTg1MDQ1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3266#pullrequestreview-398585045", "createdAt": "2020-04-22T20:59:53Z", "commit": {"oid": "3ce97f0e400ea4b827f57fb4fe3193493d5b52ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 581, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}