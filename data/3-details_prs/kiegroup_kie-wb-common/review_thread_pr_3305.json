{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MTUyOTQ5", "number": 3305, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMzo0OFrOECwR9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMzo0OFrOECwR9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzIzNjM3OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/model/Variable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMzo0OFrOGfaBOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozOToyMFrOGgbr7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4NTMzOA==", "bodyText": "I think it should be better for a domain object like this Variable class (in this case, talking about \"forms\" domain) moving whatever construction logic to a builder method (in same class), and trying to keep as much as possible a POJO approach - constructors would only be setting the internal fields, same for getters/setters, no spefici logic should be present...\nSo what about just moving these conditions into a builder class? eg:\npublic static class VariableBuilder {\n...\n    public Variable buidl() {\n    ...\n    }\n}", "url": "https://github.com/kiegroup/kie-wb-common/pull/3305#discussion_r435585338", "createdAt": "2020-06-04T22:23:48Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/model/Variable.java", "diffHunk": "@@ -40,23 +40,29 @@\n     private List<String> tags;\n \n     public Variable(VariableType variableType) {\n-        this.variableType = variableType;\n+        this(null, variableType, null, null, null);\n     }\n \n     public Variable(final String name,\n                     final VariableType variableType) {\n-        this.name = name;\n-        this.variableType = variableType;\n+        this(name, variableType, null, null, null);\n     }\n \n     public Variable(final String name,\n                     final VariableType variableType,\n                     final String dataType,\n                     final String customDataType) {\n-        this.name = name;\n-        this.variableType = variableType;\n-        this.dataType = dataType;\n-        this.customDataType = customDataType;\n+        this(name, variableType, dataType, customDataType, null);\n+    }\n+\n+    public Variable(final VariableRow row,\n+                    final Map<String, String> mapDataTypeDisplayNamesToNames) {\n+        this(row.getName(), row.getVariableType(), null, row.getCustomDataType(), row.getTags());\n+        if (row.getDataTypeDisplayName() != null && mapDataTypeDisplayNamesToNames.containsKey(row.getDataTypeDisplayName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "977967450dfbe99a8c432d302b3c3a3d97a2fee5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY2MTIzMQ==", "bodyText": "The constructor with logic in it is used only by one class. The logic is related to that class only and in my opinion it would be better to move it there. As we talked this will be resolved in this JIRA:\nhttps://issues.redhat.com/browse/JBPM-9181", "url": "https://github.com/kiegroup/kie-wb-common/pull/3305#discussion_r436661231", "createdAt": "2020-06-08T12:39:20Z", "author": {"login": "Josephblt"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/model/Variable.java", "diffHunk": "@@ -40,23 +40,29 @@\n     private List<String> tags;\n \n     public Variable(VariableType variableType) {\n-        this.variableType = variableType;\n+        this(null, variableType, null, null, null);\n     }\n \n     public Variable(final String name,\n                     final VariableType variableType) {\n-        this.name = name;\n-        this.variableType = variableType;\n+        this(name, variableType, null, null, null);\n     }\n \n     public Variable(final String name,\n                     final VariableType variableType,\n                     final String dataType,\n                     final String customDataType) {\n-        this.name = name;\n-        this.variableType = variableType;\n-        this.dataType = dataType;\n-        this.customDataType = customDataType;\n+        this(name, variableType, dataType, customDataType, null);\n+    }\n+\n+    public Variable(final VariableRow row,\n+                    final Map<String, String> mapDataTypeDisplayNamesToNames) {\n+        this(row.getName(), row.getVariableType(), null, row.getCustomDataType(), row.getTags());\n+        if (row.getDataTypeDisplayName() != null && mapDataTypeDisplayNamesToNames.containsKey(row.getDataTypeDisplayName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4NTMzOA=="}, "originalCommit": {"oid": "977967450dfbe99a8c432d302b3c3a3d97a2fee5"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1291, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}