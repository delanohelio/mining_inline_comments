{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MzkxNDU3", "number": 3498, "title": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly", "bodyText": "See:\n\nEditors refactoring at https://issues.redhat.com/browse/KOGITO-3891\nBPMN editor readonly support at https://issues.redhat.com/browse/KOGITO-540\n\nIt DEPENDS ON:\n\nkiegroup/droolsjbpm-build-bootstrap#1537\nkiegroup/drools-wb#1445\nkiegroup/jbpm-wb#1472\nkiegroup/kie-wb-distributions#1071\n\nThanks!", "createdAt": "2020-11-23T00:55:45Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498", "merged": true, "mergeCommit": {"oid": "38cb11270ce519b960f24cc4a2fa98b7e21304ba"}, "closed": true, "closedAt": "2021-03-26T14:38:19Z", "author": {"login": "romartin"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfoBt9AFqTUzNzM5NzI4OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeG6NeogFqTYyMjA5NzkyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Mzk3Mjg4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-537397288", "createdAt": "2020-11-24T11:26:57Z", "commit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMToyNjo1N1rOH48fbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMToyNjo1N1rOH48fbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3MzM5MA==", "bodyText": "TODO, putting a comment here so we do not forget about these tests", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r529473390", "createdAt": "2020-11-24T11:26:57Z", "author": {"login": "domhanak"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-project-client/src/test/java/org/kie/workbench/common/dmn/project/client/editor/DMNDiagramEditorTest.java", "diffHunk": "@@ -16,614 +16,10 @@\n \n package org.kie.workbench.common.dmn.project.client.editor;\n \n-import java.lang.annotation.Annotation;\n-import java.util.function.Consumer;\n-import java.util.function.Supplier;\n+// TODO @RunWith(GwtMockitoTestRunner.class)\n+// TODO @WithClassesToStub(PathPlaceRequest.class)\n+public class DMNDiagramEditorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Mzk4MTMw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-537398130", "createdAt": "2020-11-24T11:28:07Z", "commit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMToyODowN1rOH48h7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMToyODowN1rOH48h7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3NDAyOA==", "bodyText": "same as above", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r529474028", "createdAt": "2020-11-24T11:28:07Z", "author": {"login": "domhanak"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-project-client/src/test/java/org/kie/workbench/common/dmn/project/client/session/DMNEditorSessionCommandsTest.java", "diffHunk": "@@ -16,36 +16,9 @@\n \n package org.kie.workbench.common.dmn.project.client.session;\n \n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.kie.workbench.common.dmn.client.widgets.toolbar.DMNPerformAutomaticLayoutCommand;\n-import org.kie.workbench.common.dmn.project.client.session.command.SaveDiagramSessionCommand;\n-import org.kie.workbench.common.dmn.project.client.validation.DMNValidateSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.ClearSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.CopySelectionSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.CutSelectionSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.DeleteSelectionSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.ExportToJpgSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.ExportToPdfSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.ExportToPngSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.ExportToRawFormatSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.ExportToSvgSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.PasteSelectionSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.RedoSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.SwitchGridSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.UndoSessionCommand;\n-import org.kie.workbench.common.stunner.core.client.session.command.impl.VisitGraphSessionCommand;\n-import org.kie.workbench.common.stunner.kogito.client.session.EditorSessionCommands;\n-import org.kie.workbench.common.stunner.kogito.client.session.EditorSessionCommandsTest;\n-import org.mockito.InOrder;\n-import org.mockito.runners.MockitoJUnitRunner;\n-\n-import static org.mockito.Matchers.eq;\n-import static org.mockito.Mockito.inOrder;\n-import static org.mockito.Mockito.verify;\n-\n-@RunWith(MockitoJUnitRunner.class)\n-public class DMNEditorSessionCommandsTest extends EditorSessionCommandsTest {\n+// TODO\n+// @RunWith(MockitoJUnitRunner.class)\n+public class DMNEditorSessionCommandsTest /*extends EditorSessionCommandsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDA0OTI2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-537404926", "createdAt": "2020-11-24T11:37:19Z", "commit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozNzoxOVrOH4820w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozNzoxOVrOH4820w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3OTM3OQ==", "bodyText": "Could we have a javadoc for this class?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r529479379", "createdAt": "2020-11-24T11:37:19Z", "author": {"login": "domhanak"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-client/kie-wb-common-stunner-widgets/src/main/java/org/kie/workbench/common/stunner/client/widgets/editor/StunnerEditor.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.client.widgets.editor;\n+\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PreDestroy;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.core.client.Scheduler;\n+import com.google.gwt.user.client.ui.IsWidget;\n+import org.jboss.errai.ioc.client.api.ManagedInstance;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.Viewer;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.SessionDiagramPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.SessionPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.impl.SessionEditorPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.impl.SessionViewerPresenter;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.i18n.ClientTranslationService;\n+import org.kie.workbench.common.stunner.core.client.service.ClientRuntimeError;\n+import org.kie.workbench.common.stunner.core.client.session.ClientSession;\n+import org.kie.workbench.common.stunner.core.client.session.impl.EditorSession;\n+import org.kie.workbench.common.stunner.core.client.session.impl.ViewerSession;\n+import org.kie.workbench.common.stunner.core.definition.exception.DefinitionNotFoundException;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.diagram.DiagramParsingException;\n+import org.kie.workbench.common.stunner.core.i18n.CoreTranslationMessages;\n+import org.uberfire.client.workbench.widgets.common.ErrorPopupPresenter;\n+import org.uberfire.ext.widgets.common.client.ace.AceEditorMode;\n+import org.uberfire.ext.widgets.core.client.editors.texteditor.TextEditorView;\n+\n+@ApplicationScoped\n+public class StunnerEditor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDEyMzUy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-537412352", "createdAt": "2020-11-24T11:47:43Z", "commit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0Nzo0M1rOH49Nhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0Nzo0M1rOH49Nhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4NTE5MQ==", "bodyText": "Does it make sense to add some cases where opening ends in failure? For exampletestOpenFailure() ?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r529485191", "createdAt": "2020-11-24T11:47:43Z", "author": {"login": "domhanak"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-client/kie-wb-common-stunner-widgets/src/test/java/org/kie/workbench/common/stunner/client/widgets/editor/StunnerEditorTest.java", "diffHunk": "@@ -0,0 +1,268 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.client.widgets.editor;\n+\n+import java.util.function.Consumer;\n+\n+import com.google.gwt.user.client.ui.Widget;\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.jboss.errai.ioc.client.api.ManagedInstance;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.Viewer;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.SessionPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.impl.SessionEditorPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.impl.SessionViewerPresenter;\n+import org.kie.workbench.common.stunner.core.client.ManagedInstanceStub;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.i18n.ClientTranslationService;\n+import org.kie.workbench.common.stunner.core.client.service.ClientRuntimeError;\n+import org.kie.workbench.common.stunner.core.client.session.impl.EditorSession;\n+import org.kie.workbench.common.stunner.core.client.session.impl.ViewerSession;\n+import org.kie.workbench.common.stunner.core.diagram.DiagramImpl;\n+import org.kie.workbench.common.stunner.core.diagram.DiagramParsingException;\n+import org.kie.workbench.common.stunner.core.diagram.Metadata;\n+import org.kie.workbench.common.stunner.core.diagram.MetadataImpl;\n+import org.kie.workbench.common.stunner.core.graph.Graph;\n+import org.mockito.Mock;\n+import org.uberfire.client.workbench.widgets.common.ErrorPopupPresenter;\n+import org.uberfire.ext.widgets.common.client.ace.AceEditorMode;\n+import org.uberfire.ext.widgets.core.client.editors.texteditor.TextEditorView;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Matchers.anyBoolean;\n+import static org.mockito.Matchers.anyString;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(GwtMockitoTestRunner.class)\n+public class StunnerEditorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1635263895eddfecc1a5ea04640f084fc208fd77"}, "originalPosition": 64}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ee451e00424edfac08a02a1acbef17ffda16a14", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8ee451e00424edfac08a02a1acbef17ffda16a14", "committedDate": "2020-11-27T02:19:48Z", "message": "fix dmn editor error once opening in BC"}, "afterCommit": {"oid": "55b03618111596d49f8bfd8d7973f02851d5d238", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/55b03618111596d49f8bfd8d7973f02851d5d238", "committedDate": "2020-11-27T21:27:13Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55b03618111596d49f8bfd8d7973f02851d5d238", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/55b03618111596d49f8bfd8d7973f02851d5d238", "committedDate": "2020-11-27T21:27:13Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "b3a7fc60353e31282be510ee86f2acb440c8e838", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b3a7fc60353e31282be510ee86f2acb440c8e838", "committedDate": "2020-12-01T00:58:00Z", "message": "Tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3a7fc60353e31282be510ee86f2acb440c8e838", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b3a7fc60353e31282be510ee86f2acb440c8e838", "committedDate": "2020-12-01T00:58:00Z", "message": "Tests"}, "afterCommit": {"oid": "64ea710dd24391c0c48afc841d010697308aa137", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/64ea710dd24391c0c48afc841d010697308aa137", "committedDate": "2021-01-14T22:59:11Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64ea710dd24391c0c48afc841d010697308aa137", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/64ea710dd24391c0c48afc841d010697308aa137", "committedDate": "2021-01-14T22:59:11Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "031f11eb7e135eb3cdc5287935694670538b5d8d", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/031f11eb7e135eb3cdc5287935694670538b5d8d", "committedDate": "2021-01-22T23:49:31Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2MzMzMDM0", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-576333034", "createdAt": "2021-01-26T13:12:52Z", "commit": {"oid": "031f11eb7e135eb3cdc5287935694670538b5d8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMzoxMjo1MlrOIaWRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMzoxMjo1MlrOIaWRvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ5ODg3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              ~ Copyright 2019 Red Hat, Inc. and/or its affiliates. c\n          \n          \n            \n              ~ Copyright 2019 Red Hat, Inc. and/or its affiliates.\n          \n      \n    \n    \n  \n\nThere's an extra \"c\". :)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r564498877", "createdAt": "2021-01-26T13:12:52Z", "author": {"login": "caponetto"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/resources/org/kie/workbench/common/stunner/kogito/StunnerKogitoClient.gwt.xml", "diffHunk": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!--\n-  ~ Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+  ~ Copyright 2019 Red Hat, Inc. and/or its affiliates. c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "031f11eb7e135eb3cdc5287935694670538b5d8d"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3a83c925c3cd93d0061fde26fee40577123e92c", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f3a83c925c3cd93d0061fde26fee40577123e92c", "committedDate": "2021-01-26T00:20:15Z", "message": "Fixed graph hashcode computation"}, "afterCommit": {"oid": "1c95e36d4a51ebc79e932408b180083c2a1a44d6", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1c95e36d4a51ebc79e932408b180083c2a1a44d6", "committedDate": "2021-01-26T22:11:58Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c95e36d4a51ebc79e932408b180083c2a1a44d6", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1c95e36d4a51ebc79e932408b180083c2a1a44d6", "committedDate": "2021-01-26T22:11:58Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "dd0938d41708776173fa326bd4c8a727ba6323e1", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/dd0938d41708776173fa326bd4c8a727ba6323e1", "committedDate": "2021-01-27T00:53:50Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd0938d41708776173fa326bd4c8a727ba6323e1", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/dd0938d41708776173fa326bd4c8a727ba6323e1", "committedDate": "2021-01-27T00:53:50Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "fc1cda09336931f827f21a52ca1db97ec347d958", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/fc1cda09336931f827f21a52ca1db97ec347d958", "committedDate": "2021-01-27T01:35:38Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MTY2MzE1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-579166315", "createdAt": "2021-01-29T11:23:11Z", "commit": {"oid": "8a4308597edb960d1769139b3cf0ee926664444d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e6ce9b5dc98f2932b007a1f54bc05dea26f4466", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5e6ce9b5dc98f2932b007a1f54bc05dea26f4466", "committedDate": "2021-02-02T20:33:15Z", "message": "Fix BC editors validation not running once saving\nFix seq flow serialization issue for kogito editors"}, "afterCommit": {"oid": "c342d163a406e567a3c745a0256d5fb4e3ea4e29", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c342d163a406e567a3c745a0256d5fb4e3ea4e29", "committedDate": "2021-02-03T00:25:14Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c342d163a406e567a3c745a0256d5fb4e3ea4e29", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c342d163a406e567a3c745a0256d5fb4e3ea4e29", "committedDate": "2021-02-03T00:25:14Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "37fffcd3b274a1c1d8d837603c8a00a8b3cd9b21", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/37fffcd3b274a1c1d8d837603c8a00a8b3cd9b21", "committedDate": "2021-02-09T22:52:26Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzk2OTM4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-593396938", "createdAt": "2021-02-18T16:20:09Z", "commit": {"oid": "37fffcd3b274a1c1d8d837603c8a00a8b3cd9b21"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37fffcd3b274a1c1d8d837603c8a00a8b3cd9b21", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/37fffcd3b274a1c1d8d837603c8a00a8b3cd9b21", "committedDate": "2021-02-09T22:52:26Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831", "committedDate": "2021-02-23T21:25:10Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxMTI0NzIw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-601124720", "createdAt": "2021-03-01T20:12:47Z", "commit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMVQyMDoxMjo0N1rOIt6pKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMVQyMDo1ODo1OFrOIt8ToA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAxNzY0MQ==", "bodyText": "What is a status of this TODO please?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585017641", "createdAt": "2021-03-01T20:12:47Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-project-client/src/test/java/org/kie/workbench/common/dmn/project/client/editor/DMNDiagramEditorTest.java", "diffHunk": "@@ -398,142 +311,136 @@ public void testInitialiseKieEditorForSession() {\n \n     @Test\n     public void testInitialiseKieEditorForSessionWhenInitializingKieEditorForSessionThenDiagramAlreadyLoaded() {\n-        doNothing().when(diagramEditor).superInitialiseKieEditorForSession(any());\n         final InOrder inOrder = inOrder(diagramEditor);\n-\n         diagramEditor.initialiseKieEditorForSession(diagram);\n-\n         inOrder.verify(diagramEditor).onDiagramLoad();\n         inOrder.verify(diagramEditor).superInitialiseKieEditorForSession(any());\n     }\n \n     @Test\n     public void testSetupSearchComponent() {\n-\n         diagramEditor.setupSearchComponent();\n-\n         verify(searchBarComponent).init(editorSearchIndex);\n         verify(multiPage).addTabBarWidget(searchBarComponentWidget);\n     }\n \n-    @Test\n-    public void testOnDiagramLoadWhenCanvasHandlerIsNotNull() {\n-        when(sessionManager.getCurrentSession()).thenReturn(dmnEditorSession);\n-        when(dmnEditorSession.getCanvasHandler()).thenReturn(canvasHandler);\n-        when(canvasHandler.getDiagram()).thenReturn(diagram);\n-\n-        open();\n-\n-        verify(decisionNavigatorDock, atLeast(1)).reload();\n-        verify(expressionEditor, atLeast(1)).setToolbarStateHandler(Mockito.<DMNProjectToolbarStateHandler>any());\n-        verify(dataTypesPage, atLeast(1)).reload();\n-        verify(layoutHelper).applyLayout(diagram, layoutExecutor);\n-        verify(includedModelsPage, atLeast(1)).reload();\n-        verify(lazyCanvasFocusUtils, atLeast(1)).releaseFocus();\n-    }\n-\n-    @Test\n-    @SuppressWarnings(\"unchecked\")\n-    public void testOnDiagramLoadWhenCanvasHandlerIsNull() {\n-        diagramEditor.onDiagramLoad();\n-\n-        verify(expressionEditor, never()).setToolbarStateHandler(Mockito.<DMNProjectToolbarStateHandler>any());\n-        verify(decisionNavigatorDock, never()).reload();\n-        verify(decisionNavigatorDock, never()).open();\n-        verify(dataTypesPage, never()).reload();\n-        verify(includedModelsPage, never()).reload();\n-        verify(lazyCanvasFocusUtils, never()).releaseFocus();\n-    }\n-\n     @Test\n     public void testOnFocus() {\n-        doNothing().when(diagramEditor).superDoFocus();\n-\n+        when(stunnerEditor.isClosed()).thenReturn(false);\n         diagramEditor.onFocus();\n-\n-        verify(diagramEditor).superDoFocus();\n+        verify(stunnerEditor).focus();\n+        verify(stunnerEditor, never()).lostFocus();\n         verify(diagramEditor).onDiagramLoad();\n         verify(dataTypesPage).onFocus();\n+        verify(dataTypesPage, never()).onLostFocus();\n         verify(dataTypesPage).enableShortcuts();\n+        verify(dataTypesPage, never()).disableShortcuts();\n     }\n \n     @Test\n     public void testOnLostFocus() {\n+        when(stunnerEditor.isClosed()).thenReturn(false);\n         diagramEditor.onLostFocus();\n-\n+        verify(stunnerEditor).lostFocus();\n+        verify(stunnerEditor, never()).focus();\n         verify(dataTypesPage).onLostFocus();\n-    }\n-\n-    @Test\n-    public void testOnEditExpressionEvent() {\n-        when(editExpressionEvent.getSession()).thenReturn(dmnEditorSession);\n-        when(sessionManager.getCurrentSession()).thenReturn(dmnEditorSession);\n-        when(dmnEditorSession.getCanvasHandler()).thenReturn(canvasHandler);\n-\n-        open();\n-\n-        diagramEditor.onEditExpressionEvent(editExpressionEvent);\n-\n-        verify(searchBarComponent).disableSearch();\n-        verify(sessionCommandManager).execute(eq(canvasHandler),\n-                                              Mockito.<NavigateToExpressionEditorCommand>any());\n+        verify(dataTypesPage, never()).onFocus();\n     }\n \n     @Test\n     public void testOnDataTypePageNavTabActiveEvent() {\n         diagramEditor.onDataTypePageNavTabActiveEvent(mock(DataTypePageTabActiveEvent.class));\n-\n         verify(multiPage).selectPage(DATA_TYPES_PAGE_INDEX);\n     }\n \n     @Test\n     public void testOnDataTypeEditModeToggleWhenEditModeIsEnabled() {\n         final DataTypeEditModeToggleEvent editModeToggleEvent = mock(DataTypeEditModeToggleEvent.class);\n-\n         doNothing().when(diagramEditor).disableMenuItem(any());\n         when(editModeToggleEvent.isEditModeEnabled()).thenReturn(true);\n-\n         diagramEditor.getOnDataTypeEditModeToggleCallback(editModeToggleEvent).onInvoke();\n-\n         verify(diagramEditor).disableMenuItem(MenuItems.SAVE);\n     }\n \n     @Test\n     public void testOnDataTypeEditModeToggleWhenEditModeIsNotEnabled() {\n         final DataTypeEditModeToggleEvent editModeToggleEvent = mock(DataTypeEditModeToggleEvent.class);\n-\n         doNothing().when(diagramEditor).enableMenuItem(any());\n         when(editModeToggleEvent.isEditModeEnabled()).thenReturn(false);\n-\n         diagramEditor.getOnDataTypeEditModeToggleCallback(editModeToggleEvent).onInvoke();\n-\n         verify(diagramEditor).enableMenuItem(MenuItems.SAVE);\n     }\n \n     @Test\n     public void testShowDocks() {\n         diagramEditor.showDocks();\n-\n         verify(decisionNavigatorDock).open();\n         verify(docks).show();\n     }\n \n     @Test\n     public void testHideDocks() {\n         diagramEditor.hideDocks();\n-\n         verify(decisionNavigatorDock).close();\n         verify(decisionNavigatorDock).resetContent();\n         verify(docks).hide();\n     }\n \n     @Override\n     public void testDocksQualifiers() {\n-        final Annotation[] qualifiers = presenter.getDockQualifiers();\n+        final Annotation[] qualifiers = diagramEditor.getDockQualifiers();\n         assertEquals(1, qualifiers.length);\n         assertEquals(DMNEditor.class, qualifiers[0].annotationType());\n     }\n \n+    /*\n+\n+   // TODO: Complete all below", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 450}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyMDk2MA==", "bodyText": "not sure if this is needed, however if yes, then 2021", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585020960", "createdAt": "2021-03-01T20:18:15Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/DMNDiagramEditorView.html", "diffHunk": "@@ -1,5 +1,5 @@\n <!--\n-  ~ Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyMTAxNw==", "bodyText": "not sure if this is needed, however if yes, then 2021", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585021017", "createdAt": "2021-03-01T20:18:20Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/DMNDiagramEditorView.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyNDY0Mg==", "bodyText": "is this a proper year please?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585024642", "createdAt": "2021-03-01T20:24:39Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/src/test/java/org/kie/workbench/common/dmn/showcase/client/editor/DMNDiagramEditorTest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyNDkzNg==", "bodyText": "What is status of this TODO please?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585024936", "createdAt": "2021-03-01T20:25:09Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/src/test/java/org/kie/workbench/common/dmn/showcase/client/editor/DMNDiagramEditorTest.java", "diffHunk": "@@ -15,98 +15,8 @@\n  */\n package org.kie.workbench.common.dmn.showcase.client.editor;\n \n-import java.util.Collections;\n+// TODO @RunWith(GwtMockitoTestRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyNTI1Nw==", "bodyText": "what is status of this todo please?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585025257", "createdAt": "2021-03-01T20:25:40Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-testing/src/main/java/org/kie/workbench/common/dmn/showcase/client/editor/DMNDiagramEditor.java", "diffHunk": "@@ -240,9 +190,10 @@ private Path makeMetadataPath(final Metadata metadata) {\n         return PathFactory.newPath(fileName, uri + \"/\" + URIUtil.encode(fileName));\n     }\n \n+    // TODO: This was called by menus... who calls this now?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyNTY2Mw==", "bodyText": "will not comment this kind of change furthermore, however I am not sure if we should change the year for existing files.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585025663", "createdAt": "2021-03-01T20:26:18Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-testing/src/test/java/org/kie/workbench/common/dmn/showcase/client/editor/DMNDiagramEditorTest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyNTgzMg==", "bodyText": "what is a status of this todo please?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585025832", "createdAt": "2021-03-01T20:26:34Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-testing/src/test/java/org/kie/workbench/common/dmn/showcase/client/editor/DMNDiagramEditorTest.java", "diffHunk": "@@ -15,251 +15,7 @@\n  */\n package org.kie.workbench.common.dmn.showcase.client.editor;\n \n-import com.google.gwtmockito.GwtMockitoTestRunner;\n-import elemental2.dom.HTMLElement;\n-import org.appformer.client.context.EditorContextProvider;\n-import org.jboss.errai.common.client.ui.ElementWrapperWidget;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.kie.workbench.common.dmn.client.editors.types.listview.common.DataTypeEditModeToggleEvent;\n-import org.kie.workbench.common.dmn.showcase.client.navigator.DMNVFSService;\n-import org.kie.workbench.common.dmn.webapp.kogito.common.client.editor.AbstractDMNDiagramEditor;\n-import org.kie.workbench.common.dmn.webapp.kogito.common.client.editor.AbstractDMNDiagramEditorTest;\n-import org.kie.workbench.common.stunner.core.client.canvas.util.CanvasFileExport;\n-import org.kie.workbench.common.stunner.core.client.service.ServiceCallback;\n-import org.kie.workbench.common.stunner.kogito.client.PromiseMock;\n-import org.mockito.ArgumentCaptor;\n-import org.mockito.Captor;\n-import org.mockito.Mock;\n-import org.uberfire.backend.vfs.Path;\n-import org.uberfire.client.promise.Promises;\n-import org.uberfire.ext.editor.commons.client.file.popups.CopyPopUpPresenter;\n-import org.uberfire.ext.editor.commons.client.file.popups.DeletePopUpPresenter;\n-import org.uberfire.ext.editor.commons.client.file.popups.RenamePopUpPresenter;\n-import org.uberfire.ext.editor.commons.client.menu.BasicFileMenuBuilderImpl;\n-import org.uberfire.ext.editor.commons.client.menu.RestoreVersionCommandProvider;\n-import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n-import org.uberfire.mvp.Command;\n-import org.uberfire.mvp.PlaceRequest;\n-import org.uberfire.promise.SyncPromises;\n-import org.uberfire.util.URIUtil;\n-import org.uberfire.workbench.events.NotificationEvent;\n-import org.uberfire.workbench.model.menu.MenuItem;\n+// TODO @RunWith(GwtMockitoTestRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTAyOTQ5NA==", "bodyText": "is getCanvasHandler() always non null? asking because it is a public method (without a javadoc or a assertion) and we always call some other method in a fluent API way.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585029494", "createdAt": "2021-03-01T20:32:39Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-client/kie-wb-common-stunner-widgets/src/main/java/org/kie/workbench/common/stunner/client/widgets/editor/StunnerEditor.java", "diffHunk": "@@ -0,0 +1,261 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.client.widgets.editor;\n+\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PreDestroy;\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.core.client.Scheduler;\n+import com.google.gwt.user.client.ui.IsWidget;\n+import org.jboss.errai.ioc.client.api.ManagedInstance;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.Viewer;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.SessionDiagramPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.SessionPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.impl.SessionEditorPresenter;\n+import org.kie.workbench.common.stunner.client.widgets.presenters.session.impl.SessionViewerPresenter;\n+import org.kie.workbench.common.stunner.core.client.canvas.CanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.i18n.ClientTranslationService;\n+import org.kie.workbench.common.stunner.core.client.service.ClientRuntimeError;\n+import org.kie.workbench.common.stunner.core.client.session.ClientSession;\n+import org.kie.workbench.common.stunner.core.client.session.impl.EditorSession;\n+import org.kie.workbench.common.stunner.core.client.session.impl.ViewerSession;\n+import org.kie.workbench.common.stunner.core.definition.exception.DefinitionNotFoundException;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.diagram.DiagramParsingException;\n+import org.kie.workbench.common.stunner.core.i18n.CoreTranslationMessages;\n+import org.uberfire.client.workbench.widgets.common.ErrorPopupPresenter;\n+import org.uberfire.ext.widgets.common.client.ace.AceEditorMode;\n+import org.uberfire.ext.widgets.core.client.editors.texteditor.TextEditorView;\n+\n+@Dependent\n+public class StunnerEditor {\n+\n+    private final ManagedInstance<SessionEditorPresenter<EditorSession>> editorSessionPresenterInstances;\n+    private final ManagedInstance<SessionViewerPresenter<ViewerSession>> viewerSessionPresenterInstances;\n+    private final ClientTranslationService translationService;\n+    private final ManagedInstance<TextEditorView> xmlEditorViews;\n+    private final ErrorPopupPresenter errorPopupPresenter;\n+    private final StunnerEditorView view;\n+\n+    private SessionDiagramPresenter diagramPresenter;\n+    private TextEditorView xmlEditorView;\n+    private boolean isReadOnly;\n+    private Consumer<DiagramParsingException> parsingExceptionProcessor;\n+    private Consumer<Throwable> exceptionProcessor;\n+    private Consumer<Integer> onResetContentHashProcessor;\n+    private int contentHash;\n+\n+    // CDI proxy.\n+    public StunnerEditor() {\n+        this(null, null, null, null, null, null);\n+    }\n+\n+    @Inject\n+    public StunnerEditor(ManagedInstance<SessionEditorPresenter<EditorSession>> editorSessionPresenterInstances,\n+                         ManagedInstance<SessionViewerPresenter<ViewerSession>> viewerSessionPresenterInstances,\n+                         ClientTranslationService translationService,\n+                         ManagedInstance<TextEditorView> xmlEditorViews,\n+                         ErrorPopupPresenter errorPopupPresenter,\n+                         StunnerEditorView view) {\n+        this.editorSessionPresenterInstances = editorSessionPresenterInstances;\n+        this.viewerSessionPresenterInstances = viewerSessionPresenterInstances;\n+        this.translationService = translationService;\n+        this.xmlEditorViews = xmlEditorViews;\n+        this.errorPopupPresenter = errorPopupPresenter;\n+        this.isReadOnly = false;\n+        this.view = view;\n+        this.parsingExceptionProcessor = e -> {\n+        };\n+        this.exceptionProcessor = e -> {\n+        };\n+        this.onResetContentHashProcessor = e -> {\n+        };\n+    }\n+\n+    public void setReadOnly(boolean readOnly) {\n+        isReadOnly = readOnly;\n+    }\n+\n+    public void setOnResetContentHashProcessor(Consumer<Integer> onResetContentHashProcessor) {\n+        this.onResetContentHashProcessor = onResetContentHashProcessor;\n+    }\n+\n+    public void setParsingExceptionProcessor(Consumer<DiagramParsingException> parsingExceptionProcessor) {\n+        this.parsingExceptionProcessor = parsingExceptionProcessor;\n+    }\n+\n+    public void setExceptionProcessor(Consumer<Throwable> exceptionProcessor) {\n+        this.exceptionProcessor = exceptionProcessor;\n+    }\n+\n+    public void open(final Diagram diagram,\n+                     final Viewer.Callback callback) {\n+        // Close in case any diagram already being opened.\n+        close();\n+        // Instantiate.\n+        if (!isReadOnly) {\n+            diagramPresenter = editorSessionPresenterInstances.get();\n+        } else {\n+            diagramPresenter = viewerSessionPresenterInstances.get();\n+        }\n+        diagramPresenter.displayNotifications(type -> true);\n+        diagramPresenter.withPalette(!isReadOnly);\n+        diagramPresenter.withToolbar(false);\n+        view.setWidget(diagramPresenter.getView());\n+        // Open.\n+        diagramPresenter.open(diagram, new SessionPresenter.SessionPresenterCallback() {\n+            @Override\n+            public void onSuccess() {\n+                callback.onSuccess();\n+                resetContentHash();\n+            }\n+\n+            @Override\n+            public void onError(ClientRuntimeError error) {\n+                handleError(error);\n+                callback.onError(error);\n+            }\n+        });\n+    }\n+\n+    public int getCurrentContentHash() {\n+        if (isXmlEditorEnabled()) {\n+            return xmlEditorView.getContent().hashCode();\n+        }\n+        if (null == getSession()) {\n+            return 0;\n+        }\n+        if (null == getCanvasHandler().getDiagram()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA0NDg5Ng==", "bodyText": "Maybe such comment should be also in a pom.xml", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#discussion_r585044896", "createdAt": "2021-03-01T20:58:58Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/README.md", "diffHunk": "@@ -1,5 +1,6 @@\n Stunner - Kogito integration modules\n =======================================\n \n-These children modules provide the different assets and services to achieve the Stunner integration with the Kogito \n-initiative.\n\\ No newline at end of file\n+These children modules provide the different assets and services to achieve the Stunner integration with Kogito.\n+\n+PLEASE DO NOT turn this module into a dependency for Business Central, it's ONLY targeting Kogito space. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c88bf7f7d5e2b1e4e1009ae1c7e7306c43c831"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c77635ee35de3dfe19d3d487f982ee9d1b194ca4", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c77635ee35de3dfe19d3d487f982ee9d1b194ca4", "committedDate": "2021-03-08T21:43:30Z", "message": "Fix issue 01"}, "afterCommit": {"oid": "2cb704c56069f287ba5c275604e57ee8fd77122e", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2cb704c56069f287ba5c275604e57ee8fd77122e", "committedDate": "2021-03-09T23:12:26Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cb704c56069f287ba5c275604e57ee8fd77122e", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2cb704c56069f287ba5c275604e57ee8fd77122e", "committedDate": "2021-03-09T23:12:26Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}, "afterCommit": {"oid": "a5c00e0a47dd8dec86028b86b61fb7db279274ae", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a5c00e0a47dd8dec86028b86b61fb7db279274ae", "committedDate": "2021-03-10T23:48:34Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwMzcxNDI5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-610371429", "createdAt": "2021-03-12T01:07:55Z", "commit": {"oid": "a5c00e0a47dd8dec86028b86b61fb7db279274ae"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ac3cb0e4ac422c7d20253f23b3cac785ff02e06", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1ac3cb0e4ac422c7d20253f23b3cac785ff02e06", "committedDate": "2021-03-17T21:37:47Z", "message": "fix issue 05"}, "afterCommit": {"oid": "e89831a11670a84cd13610ed76a133c308ef3916", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e89831a11670a84cd13610ed76a133c308ef3916", "committedDate": "2021-03-21T21:07:26Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE4NzY1MjU3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-618765257", "createdAt": "2021-03-23T15:51:23Z", "commit": {"oid": "a3d1d2a7105ef8af2bd5beaabccce3e3cd15a2fd"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NDI2MTA0", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-619426104", "createdAt": "2021-03-24T08:13:12Z", "commit": {"oid": "fbaaee91ebdf4cfe0fd88981a86a0dd1e94dc36f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NTc3MDE5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-619577019", "createdAt": "2021-03-24T10:54:01Z", "commit": {"oid": "fbaaee91ebdf4cfe0fd88981a86a0dd1e94dc36f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMjkyMTE1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-620292115", "createdAt": "2021-03-24T22:47:47Z", "commit": {"oid": "fbaaee91ebdf4cfe0fd88981a86a0dd1e94dc36f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwOTUzODg1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-620953885", "createdAt": "2021-03-25T10:35:14Z", "commit": {"oid": "8b4770895d013acbc7a83c1a0b0d7de078d4ff4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwOTU2NTA1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-620956505", "createdAt": "2021-03-25T10:38:08Z", "commit": {"oid": "8b4770895d013acbc7a83c1a0b0d7de078d4ff4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30ed5073bf7cd9bdcef450561af7208499c341a8", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/30ed5073bf7cd9bdcef450561af7208499c341a8", "committedDate": "2021-03-25T23:39:05Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b4770895d013acbc7a83c1a0b0d7de078d4ff4f", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8b4770895d013acbc7a83c1a0b0d7de078d4ff4f", "committedDate": "2021-03-24T23:35:23Z", "message": "fix handling error when renaming"}, "afterCommit": {"oid": "30ed5073bf7cd9bdcef450561af7208499c341a8", "author": {"user": {"login": "romartin", "name": "Roger Mart\u00ednez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/30ed5073bf7cd9bdcef450561af7208499c341a8", "committedDate": "2021-03-25T23:39:05Z", "message": "KOGITO-3891 & KOGITO-540: Editors refactoring & BPMN editor readonly support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyMDk3OTIy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3498#pullrequestreview-622097922", "createdAt": "2021-03-26T12:41:09Z", "commit": {"oid": "30ed5073bf7cd9bdcef450561af7208499c341a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 277, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}