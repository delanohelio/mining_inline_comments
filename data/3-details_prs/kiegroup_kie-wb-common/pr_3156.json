{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0Mzc0OTA1", "number": 3156, "title": "KOGITO-879 KOGITO-880 KOGITO-881: State Control API (undo/redo)", "bodyText": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo\nOn this PR I moved CommandRegistry into appformer level, so the injected registry will depend on the context (Business Central or Kogito). The command execution remains the same, only changes where the commands are being stored.\n@romartin @manstis would you mind take a look?\nThis is part of an ensemble, please merge with:\nkiegroup/kogito-tooling#66\nkiegroup/droolsjbpm-build-bootstrap#1195\nkiegroup/appformer#894\n#3156\nkiegroup/jbpm-wb#1414\nkiegroup/drools-wb#1310\nkiegroup/kie-wb-distributions#1013", "createdAt": "2020-02-12T15:34:16Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156", "merged": true, "mergeCommit": {"oid": "5e87b074b2ca4c9e54b3d1b7f59cdc5d7467e401"}, "closed": true, "closedAt": "2020-02-28T17:01:54Z", "author": {"login": "pefernan"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDq9K-gBqjMwMzIwMTc3NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIipUngFqTM2NjAyOTgwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d45c5ed40e3eaba61fd5560b62efb40a8d09a5a", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7d45c5ed40e3eaba61fd5560b62efb40a8d09a5a", "committedDate": "2020-02-11T08:05:29Z", "message": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo"}, "afterCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7004856f059f375f6d8539525e18a2e00fe58a1c", "committedDate": "2020-02-12T18:50:24Z", "message": "- Enforcer dependency fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4ODg2NzY4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-358886768", "createdAt": "2020-02-14T11:45:07Z", "commit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTo0NTowOFrOFp0EWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjowMjoxM1rOFp0d3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4OTAxOA==", "bodyText": "What is the purpose of this event?! I see it fired by the command registry when commands are executed/undone (by setting the Registry's Change Listener) however I could not find any observers of the event (in kie-wb-common or appformer) so wonder what is its reason to exist!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379389018", "createdAt": "2020-02-14T11:45:08Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/session/DMNEditorSession.java", "diffHunk": "@@ -68,11 +70,13 @@\n     public DMNEditorSession(final ManagedSession session,\n                             final CanvasCommandManager<AbstractCanvasHandler> canvasCommandManager,\n                             final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n-                            final ClientCommandRegistry<org.kie.workbench.common.stunner.core.command.Command<AbstractCanvasHandler, CanvasViolation>> clientCommandRegistry) {\n+                            final CommandRegistry<org.kie.workbench.common.stunner.core.command.Command<AbstractCanvasHandler, CanvasViolation>> commandRegistry,\n+                            final Event<RegisterChangedEvent> registerChangedEvent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ==", "bodyText": "I struggle with this...\nI'd much prefer RedoSessionCommand to be written for Business Central (i.e. binds to session.getKeyboardControl().. control, L#74). Then have another (CDI) @Specializes implementation here that works with KogitoStateControlInitializer).\nI'd also like to have seen more re-use of EditorContextProvider.getChannel() as opposed to KogitoStateControlInitializer.isKogitoEnabled() to determine the environment in which the editor is running.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379395549", "createdAt": "2020-02-14T12:02:13Z", "author": {"login": "manstis"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/RedoSessionCommand.java", "diffHunk": "@@ -44,26 +45,34 @@\n public class RedoSessionCommand extends AbstractClientSessionCommand<EditorSession> {\n \n     private final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager;\n-    private final ClientRedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler;\n+    private final RedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler;\n+    private final KogitoStateControlInitializer stateControlInitializer;\n \n     protected RedoSessionCommand() {\n-        this(null,\n-             null);\n+        this(null, null, null);\n     }\n \n     @Inject\n     public RedoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n-                              final ClientRedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler) {\n+                              final RedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler,\n+                              final KogitoStateControlInitializer stateControlInitializer) {\n         super(false);\n         this.redoCommandHandler = redoCommandHandler;\n         this.sessionCommandManager = sessionCommandManager;\n+        this.stateControlInitializer = stateControlInitializer;\n     }\n \n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n         redoCommandHandler.setSession(getSession());\n+\n+        //If running in Kogito we should initialize the Kogito StateControl undo/redo commands. Otherwise we should keep the key binding.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NjUwNDA1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-359650405", "createdAt": "2020-02-17T10:57:49Z", "commit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDo1Nzo1MFrOFqgXNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDo1OTowMlrOFqgZbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNDc0MQ==", "bodyText": "Could you please clarify why this is needed in non-kogito modules?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r380114741", "createdAt": "2020-02-17T10:57:50Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-standalone/pom.xml", "diffHunk": "@@ -537,6 +537,17 @@\n     <dependency>\n       <groupId>com.google.elemental2</groupId>\n       <artifactId>elemental2-promise</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-js-bridge</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+      <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNTMwOQ==", "bodyText": "formatting", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r380115309", "createdAt": "2020-02-17T10:59:02Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommand.java", "diffHunk": "@@ -42,17 +43,26 @@\n public class UndoSessionCommand extends AbstractClientSessionCommand<EditorSession> {\n \n     private final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager;\n+    private final KogitoStateControlInitializer stateControlInitializer;\n \n     @Inject\n-    public UndoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager) {\n+    public UndoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n+                              final KogitoStateControlInitializer stateControlInitializer) {\n         super(false);\n         this.sessionCommandManager = sessionCommandManager;\n+        this.stateControlInitializer = stateControlInitializer;\n     }\n \n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n+\n+        //If running in Kogito we should initialize the Kogito StateControl undo/redo commands. Otherwise we should keep the key binding.\n+        if(stateControlInitializer.isKogitoEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7004856f059f375f6d8539525e18a2e00fe58a1c", "committedDate": "2020-02-12T18:50:24Z", "message": "- Enforcer dependency fix."}, "afterCommit": {"oid": "c652aa290f21025e5af17a4852b69ad482e58564", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c652aa290f21025e5af17a4852b69ad482e58564", "committedDate": "2020-02-18T17:11:19Z", "message": "- Code improvements."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTIxMjc3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-361121277", "createdAt": "2020-02-19T13:47:22Z", "commit": {"oid": "c652aa290f21025e5af17a4852b69ad482e58564"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo0NzoyMlrOFroqbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo1MDoyOFrOFroxdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5OTMwOA==", "bodyText": "I agree with @jomarko (and it's a great spot!) only the -kogito related modules should have dependencies on other -kogito modules which suggests a restructuring of the code in these PRs is needed (to move interfaces and default - Business Central - implementations from appformer-kogito-bridge to some where more generic in appformer and keep kogito specific implementations alone in appformer-kogito-bridge etc).", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r381299308", "createdAt": "2020-02-19T13:47:22Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-standalone/pom.xml", "diffHunk": "@@ -537,6 +537,17 @@\n     <dependency>\n       <groupId>com.google.elemental2</groupId>\n       <artifactId>elemental2-promise</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-js-bridge</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+      <scope>provided</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNDc0MQ=="}, "originalCommit": {"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMTEwOA==", "bodyText": "Did you want to remove this block?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r381301108", "createdAt": "2020-02-19T13:50:28Z", "author": {"login": "manstis"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommandTest.java", "diffHunk": "@@ -167,4 +167,28 @@ public void testOnCommandExecutedCheckWrongSession() {\n         verify(commandRegistry,\n                never()).clear();\n     }\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c652aa290f21025e5af17a4852b69ad482e58564"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c652aa290f21025e5af17a4852b69ad482e58564", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c652aa290f21025e5af17a4852b69ad482e58564", "committedDate": "2020-02-18T17:11:19Z", "message": "- Code improvements."}, "afterCommit": {"oid": "6a6421363144a681d09ea3127e895794e48ea716", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6a6421363144a681d09ea3127e895794e48ea716", "committedDate": "2020-02-21T17:33:50Z", "message": "- Code improvements."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a6421363144a681d09ea3127e895794e48ea716", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6a6421363144a681d09ea3127e895794e48ea716", "committedDate": "2020-02-21T17:33:50Z", "message": "- Code improvements."}, "afterCommit": {"oid": "9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "committedDate": "2020-02-24T09:34:23Z", "message": "- Code improvements."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "committedDate": "2020-02-24T09:34:23Z", "message": "- Code improvements."}, "afterCommit": {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9064ebe3c09937f89f17743d9b2475a18c86d360", "committedDate": "2020-02-24T12:35:46Z", "message": "- Code improvements."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDkzNjk4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-363493698", "createdAt": "2020-02-24T15:51:30Z", "commit": {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MTozMFrOFtlrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowNjo0OFrOFtmSSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NzU3Mg==", "bodyText": "Please could you explain why kie-wb-common-dmn-client doesn't need a dependency for the module where the CommandRegistry was introduced?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383347572", "createdAt": "2020-02-24T15:51:30Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/session/DMNEditorSessionTest.java", "diffHunk": "@@ -20,6 +20,7 @@\n import java.util.Map;\n \n import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.appformer.kogito.api.stateControl.registry.CommandRegistry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTEyMQ==", "bodyText": "Don't we need to inherit those appformer-kogito-api and appformer-kogito-bridge ?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383349121", "createdAt": "2020-02-24T15:53:44Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/src/main/resources/org/kie/workbench/common/dmn/showcase/DMNKogitoRuntimeWebapp.gwt.xml", "diffHunk": "@@ -19,6 +19,7 @@\n <module>\n \n   <inherits name=\"org.kie.workbench.common.dmn.webapp.kogito.common.DMNWebappKogitoCommon\"/>\n+  <inherits name=\"org.kie.workbench.common.stunner.kogito.runtime.StunnerKogitoRuntimeCommon\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTQwOA==", "bodyText": "@pefernan what about these commented tests?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383351408", "createdAt": "2020-02-24T15:57:16Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommandTest.java", "diffHunk": "@@ -167,4 +167,28 @@ public void testOnCommandExecutedCheckWrongSession() {\n         verify(commandRegistry,\n                never()).clear();\n     }\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMTEwOA=="}, "originalCommit": {"oid": "c652aa290f21025e5af17a4852b69ad482e58564"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NzUxNA==", "bodyText": "I think should be added to AbstractClientSessionCommand (or higher) interface level with javadoc what is purpose of this method", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383357514", "createdAt": "2020-02-24T16:06:48Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/RedoSessionCommand.java", "diffHunk": "@@ -62,8 +61,13 @@ public RedoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> ses\n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n         redoCommandHandler.setSession(getSession());\n+\n+        bindCommand();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73f1a033e46a35ad9cf67b9d755cbfabcdce277b", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/73f1a033e46a35ad9cf67b9d755cbfabcdce277b", "committedDate": "2020-02-24T16:53:49Z", "message": "- Code suggestions"}, "afterCommit": {"oid": "f1cf3ed127111fe17378df58d5c957dc9454de6d", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f1cf3ed127111fe17378df58d5c957dc9454de6d", "committedDate": "2020-02-24T17:41:01Z", "message": "- Code suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzOTc2NTI0", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-363976524", "createdAt": "2020-02-25T09:15:43Z", "commit": {"oid": "f1cf3ed127111fe17378df58d5c957dc9454de6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTQzOTEw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-364143910", "createdAt": "2020-02-25T13:36:50Z", "commit": {"oid": "f1cf3ed127111fe17378df58d5c957dc9454de6d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDA3ODY1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-364407865", "createdAt": "2020-02-25T19:59:02Z", "commit": {"oid": "97656c210409443b5df264755f73a0224449efe6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDgxNDkx", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-364481491", "createdAt": "2020-02-25T22:01:18Z", "commit": {"oid": "97656c210409443b5df264755f73a0224449efe6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjowMjo1M1rOFuW41w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjowMzowMlrOFuW5IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ==", "bodyText": "scope shoudn't be provided?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384153815", "createdAt": "2020-02-25T22:02:53Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-runtime-common/pom.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kie-wb-common-stunner-kogito</artifactId>\n+    <groupId>org.kie.workbench.stunner</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kie-wb-common-stunner-kogito-runtime-common</artifactId>\n+  <name>Kie Workbench - Common - Stunner - Kogito Runtime Common</name>\n+  <description>Kie Workbench - Common - Stunner - Kogito Runtime Common</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97656c210409443b5df264755f73a0224449efe6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1Mzg1MA==", "bodyText": "scope shoudn't be provided?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384153850", "createdAt": "2020-02-25T22:02:58Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-runtime-common/pom.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kie-wb-common-stunner-kogito</artifactId>\n+    <groupId>org.kie.workbench.stunner</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kie-wb-common-stunner-kogito-runtime-common</artifactId>\n+  <name>Kie Workbench - Common - Stunner - Kogito Runtime Common</name>\n+  <description>Kie Workbench - Common - Stunner - Kogito Runtime Common</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.workbench.stunner</groupId>\n+      <artifactId>kie-wb-common-stunner-client-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97656c210409443b5df264755f73a0224449efe6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1Mzg4OA==", "bodyText": "scope shoudn't be provided?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384153888", "createdAt": "2020-02-25T22:03:02Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-runtime-common/pom.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kie-wb-common-stunner-kogito</artifactId>\n+    <groupId>org.kie.workbench.stunner</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kie-wb-common-stunner-kogito-runtime-common</artifactId>\n+  <name>Kie Workbench - Common - Stunner - Kogito Runtime Common</name>\n+  <description>Kie Workbench - Common - Stunner - Kogito Runtime Common</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.workbench.stunner</groupId>\n+      <artifactId>kie-wb-common-stunner-client-api</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.workbench.stunner</groupId>\n+      <artifactId>kie-wb-common-stunner-client-common</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97656c210409443b5df264755f73a0224449efe6"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "400275abbe96222d9265404b024c62dd4f0b0d51", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/400275abbe96222d9265404b024c62dd4f0b0d51", "committedDate": "2020-02-27T16:05:49Z", "message": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c3d08240d8d587e7eea5fda063c38f36783133d", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1c3d08240d8d587e7eea5fda063c38f36783133d", "committedDate": "2020-02-27T16:05:49Z", "message": "- Enforcer dependency fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ade958e85ecbc6bd1022c7ec6958ff489eca30f7", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ade958e85ecbc6bd1022c7ec6958ff489eca30f7", "committedDate": "2020-02-27T16:05:49Z", "message": "- Code improvements."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8742f5fd87e394633372877c6273025c67a2a8d1", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8742f5fd87e394633372877c6273025c67a2a8d1", "committedDate": "2020-02-27T16:05:49Z", "message": "- Code improvements."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "668351dc7888158065c61893f3e4a14b55082b55", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/668351dc7888158065c61893f3e4a14b55082b55", "committedDate": "2020-02-27T16:05:49Z", "message": "- Code suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b53bf5860a19624f45e4b6e386071ea8e7ef6ef3", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b53bf5860a19624f45e4b6e386071ea8e7ef6ef3", "committedDate": "2020-02-27T16:05:49Z", "message": "- Module renaming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/90b8355af725c2554a625b93e37cb107fba8a07c", "committedDate": "2020-02-27T16:05:49Z", "message": "- Class renames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97656c210409443b5df264755f73a0224449efe6", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/97656c210409443b5df264755f73a0224449efe6", "committedDate": "2020-02-25T15:42:09Z", "message": "- Module renaming"}, "afterCommit": {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/90b8355af725c2554a625b93e37cb107fba8a07c", "committedDate": "2020-02-27T16:05:49Z", "message": "- Class renames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDI5ODAz", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#pullrequestreview-366029803", "createdAt": "2020-02-27T21:59:23Z", "commit": {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 707, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}