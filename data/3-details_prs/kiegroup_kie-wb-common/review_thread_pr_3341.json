{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDU4NDI1", "number": 3341, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNjowMVrOEHvOyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNzo0MlrOEHvQtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTQ5MzIxOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/customproperties/elements/GlobalVariablesElement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNjowMVrOGnR1vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNjowMVrOGnR1vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzOTkzMw==", "bodyText": "what's the reason for moving from private to protected access?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443839933", "createdAt": "2020-06-22T21:36:01Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -49,13 +49,7 @@ public void setValue(BaseElement element, String value) {\n         setStringValue(element, value);\n     }\n \n-    private void setStringValue(BaseElement element, String value) {\n-        Stream.of(value.split(\",\"))\n-                .map(this::extensionOf)\n-                .forEach(getExtensionElements(element)::add);\n-    }\n-\n-    private Optional<String> getStringValue(BaseElement element) {\n+    protected Optional<String> getStringValue(BaseElement element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTQ5NDM5OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/customproperties/elements/GlobalVariablesElement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNjoyN1rOGnR2bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNjoyN1rOGnR2bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0MDEwOQ==", "bodyText": "can it be private?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443840109", "createdAt": "2020-06-22T21:36:27Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -68,16 +62,18 @@ private void setStringValue(BaseElement element, String value) {\n                 .collect(Collectors.toList());\n \n         String globalVariables = globalExtensions.stream()\n-                .filter(globalType -> globalType.getIdentifier() != null &&\n-                        globalType.getIdentifier().length() > 0 &&\n-                        globalType.getType() != null &&\n-                        globalType.getType().length() > 0)\n                 .map(globalType -> globalType.getIdentifier() + \":\" + globalType.getType())\n                 .collect(Collectors.joining(\",\"));\n \n         return Optional.ofNullable(globalVariables);\n     }\n \n+    protected void setStringValue(BaseElement element, String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTQ5Nzk1OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/main/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/customproperties/elements/GlobalVariablesElement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNzozOVrOGnR4mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNzozOVrOGnR4mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0MDY2NQ==", "bodyText": "can it be static and private?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443840665", "createdAt": "2020-06-22T21:37:39Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/main/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -70,25 +63,28 @@ protected void setStringValue(BaseElement element, String value) {\n                 .collect(Collectors.toList());\n \n         String globalVariables = globalExtensions.stream()\n-                .filter(globalType -> globalType.getIdentifier() != null &&\n-                        globalType.getIdentifier().length() > 0 &&\n-                        globalType.getType() != null &&\n-                        globalType.getType().length() > 0)\n                 .map(globalType -> globalType.getIdentifier() + \":\" + globalType.getType())\n                 .collect(Collectors.joining(\",\"));\n \n         return Optional.ofNullable(globalVariables);\n     }\n \n-    private FeatureMap.Entry extensionOf(String variable) {\n+    @Override\n+    protected void setStringValue(BaseElement element, String value) {\n+        Stream.of(value.split(\",\"))\n+                .map(this::extensionOf)\n+                .forEach(getExtensionElements(element)::add);\n+    }\n+\n+    protected FeatureMap.Entry extensionOf(String variable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTQ5ODE0OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/main/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/customproperties/elements/GlobalVariablesElement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNzo0MlrOGnR4sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNzo0MlrOGnR4sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0MDY5MA==", "bodyText": "can it be static and private?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443840690", "createdAt": "2020-06-22T21:37:42Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/main/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -70,25 +63,28 @@ protected void setStringValue(BaseElement element, String value) {\n                 .collect(Collectors.toList());\n \n         String globalVariables = globalExtensions.stream()\n-                .filter(globalType -> globalType.getIdentifier() != null &&\n-                        globalType.getIdentifier().length() > 0 &&\n-                        globalType.getType() != null &&\n-                        globalType.getType().length() > 0)\n                 .map(globalType -> globalType.getIdentifier() + \":\" + globalType.getType())\n                 .collect(Collectors.joining(\",\"));\n \n         return Optional.ofNullable(globalVariables);\n     }\n \n-    private FeatureMap.Entry extensionOf(String variable) {\n+    @Override\n+    protected void setStringValue(BaseElement element, String value) {\n+        Stream.of(value.split(\",\"))\n+                .map(this::extensionOf)\n+                .forEach(getExtensionElements(element)::add);\n+    }\n+\n+    protected FeatureMap.Entry extensionOf(String variable) {\n         return new EStructuralFeatureImpl.SimpleFeatureMapEntry(\n                 (EStructuralFeature.Internal) DOCUMENT_ROOT__GLOBAL,\n                 globalTypeDataOf(variable));\n     }\n \n-    private GlobalType globalTypeDataOf(String variable) {\n+    protected GlobalType globalTypeDataOf(String variable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1330, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}