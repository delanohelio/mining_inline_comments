{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTM5NDQ4", "number": 3276, "title": "JBPM-7919 : Stunner - [BPMN] Support for Data Object", "bodyText": "Hi @romartin just firing up the builds to get Sonar Cloud issues while I work on additional things, so not ready yet for review", "createdAt": "2020-04-21T22:23:23Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276", "merged": true, "mergeCommit": {"oid": "5b73c1dda58ff2391aaee0de8c92321022ac7eb0"}, "closed": true, "closedAt": "2020-07-20T20:30:03Z", "author": {"login": "inodeman"}, "timelineItems": {"totalCount": 53, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaoWS0ABqjMyNjc2MDYwMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1lConABqjM1NTQ5NzA1ODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "898204cebb6095bc7213a3625af5c20e0a023236", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/898204cebb6095bc7213a3625af5c20e0a023236", "committedDate": "2020-04-21T22:12:55Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Rebased"}, "afterCommit": {"oid": "da805a1ef9f48aab3854620813a55c2baf096533", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/da805a1ef9f48aab3854620813a55c2baf096533", "committedDate": "2020-04-24T02:43:47Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da805a1ef9f48aab3854620813a55c2baf096533", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/da805a1ef9f48aab3854620813a55c2baf096533", "committedDate": "2020-04-24T02:43:47Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Tests"}, "afterCommit": {"oid": "635c51515fdbc423776eb211f8825d767e78476b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/635c51515fdbc423776eb211f8825d767e78476b", "committedDate": "2020-04-24T15:50:30Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a19f7db59bef9f01b95d698af8c54379f4ed05e", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7a19f7db59bef9f01b95d698af8c54379f4ed05e", "committedDate": "2020-04-25T00:00:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Tests"}, "afterCommit": {"oid": "bf713958947adac3ac7e85ce95898c1cc9d182db", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bf713958947adac3ac7e85ce95898c1cc9d182db", "committedDate": "2020-04-28T01:46:39Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23457a8fda290e050300b54f8720f83b7ea3e0e8", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/23457a8fda290e050300b54f8720f83b7ea3e0e8", "committedDate": "2020-04-29T21:54:31Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed SonarCloud Issues"}, "afterCommit": {"oid": "6bc56a8b5f8049a27c78168d32252d097e6bf19b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6bc56a8b5f8049a27c78168d32252d097e6bf19b", "committedDate": "2020-04-30T02:02:15Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed Build Error on Palette"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6bc56a8b5f8049a27c78168d32252d097e6bf19b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6bc56a8b5f8049a27c78168d32252d097e6bf19b", "committedDate": "2020-04-30T02:02:15Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed Build Error on Palette"}, "afterCommit": {"oid": "f66225bc2e650f3ea4c2f629352c5d537638b73c", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f66225bc2e650f3ea4c2f629352c5d537638b73c", "committedDate": "2020-05-07T03:10:59Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed Build Error on Palette Experimental Changes Fixed Dinamic Update Modified for Tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f66225bc2e650f3ea4c2f629352c5d537638b73c", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f66225bc2e650f3ea4c2f629352c5d537638b73c", "committedDate": "2020-05-07T03:10:59Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed Build Error on Palette Experimental Changes Fixed Dinamic Update Modified for Tests"}, "afterCommit": {"oid": "2f30726800643e740e8dea75717a8298f3fe6e43", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2f30726800643e740e8dea75717a8298f3fe6e43", "committedDate": "2020-05-07T23:37:43Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed issue with Chaining Updates / Undos"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9448226b0df40fe8c7708d5fad1c68caf4ac3a5", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b9448226b0df40fe8c7708d5fad1c68caf4ac3a5", "committedDate": "2020-05-08T02:05:08Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Fixed issue with Chaining Updates / Undos"}, "afterCommit": {"oid": "1248fac6d704e39241bb2ea959db74cd72bac14f", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1248fac6d704e39241bb2ea959db74cd72bac14f", "committedDate": "2020-05-12T18:26:05Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Visibility for Assignments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04ab415d3ea0ed6d197cb484e743c8a3efb3588b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/04ab415d3ea0ed6d197cb484e743c8a3efb3588b", "committedDate": "2020-05-13T23:07:44Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Visibility for Assignments and Fixed Issue about containers / Added Tests"}, "afterCommit": {"oid": "78edf1a546fbb56fe3c5080b8df1bc0fa0da5fc4", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/78edf1a546fbb56fe3c5080b8df1bc0fa0da5fc4", "committedDate": "2020-05-21T21:45:02Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Added Validators for Kogito and BC"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "642b87f7a6ae5a7761022b38d8fe71cff9a59136", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/642b87f7a6ae5a7761022b38d8fe71cff9a59136", "committedDate": "2020-05-22T17:33:07Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Rever to State Checker / Made Pop ups appear showing issue on Kogito and BC"}, "afterCommit": {"oid": "78bd964d377ad0f1a63b9ec655e6e8d37da8e304", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/78bd964d377ad0f1a63b9ec655e6e8d37da8e304", "committedDate": "2020-05-26T17:03:00Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Rever to State Checker / Made Pop ups appear showing issue on Kogito and BC"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78bd964d377ad0f1a63b9ec655e6e8d37da8e304", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/78bd964d377ad0f1a63b9ec655e6e8d37da8e304", "committedDate": "2020-05-26T17:03:00Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association / Rever to State Checker / Made Pop ups appear showing issue on Kogito and BC"}, "afterCommit": {"oid": "4782ed1a39fde6a22cd3e7fbd1a05ec1ac8298df", "author": {"user": null}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4782ed1a39fde6a22cd3e7fbd1a05ec1ac8298df", "committedDate": "2020-05-28T01:18:45Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4782ed1a39fde6a22cd3e7fbd1a05ec1ac8298df", "author": {"user": null}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4782ed1a39fde6a22cd3e7fbd1a05ec1ac8298df", "committedDate": "2020-05-28T01:18:45Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}, "afterCommit": {"oid": "7ecd802e930199cbe3ad62e061b670c98c635ca7", "author": {"user": null}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7ecd802e930199cbe3ad62e061b670c98c635ca7", "committedDate": "2020-05-28T20:09:56Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ecd802e930199cbe3ad62e061b670c98c635ca7", "author": {"user": null}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7ecd802e930199cbe3ad62e061b670c98c635ca7", "committedDate": "2020-05-28T20:09:56Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}, "afterCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/42b79557f958dd272fdeac77e8e60e178591fd03", "committedDate": "2020-06-02T13:48:18Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDAzNDk5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-424003499", "createdAt": "2020-06-03T23:26:24Z", "commit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "state": "COMMENTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMzoyNjoyNFrOGew2hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMDowMToyMlrOGexcGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMDg1Mg==", "bodyText": "is this method really necessary? does that null check really applies? Looking at the callers for it, maybe we can just replace it by the direct calls to the presenter instance: getEditor().getSessionPresenter().displayNotifications(t -> true/false);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434910852", "createdAt": "2020-06-03T23:26:24Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/editor/BPMNDiagramEditor.java", "diffHunk": "@@ -259,10 +269,31 @@ public String getEditorIdentifier() {\n         return EDITOR_ID;\n     }\n \n+    private void displayNotifications(final boolean displayNotifications) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMTU4Nw==", "bodyText": "why here displayNotifications are set to false, and set to true again at the end of this method? Looks tricky...\nI was just expecting a single (unique) call setting displayNotifications = false, once the presenter instance is being loaded for first time, and no need for more calls. Then the call to getEditor().getSessionPresenter().getView().showWarning(...); should work anyway, isn't it?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434911587", "createdAt": "2020-06-03T23:29:06Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/editor/BPMNDiagramEditor.java", "diffHunk": "@@ -259,10 +269,31 @@ public String getEditorIdentifier() {\n         return EDITOR_ID;\n     }\n \n+    private void displayNotifications(final boolean displayNotifications) {\n+        if (getEditor().getSessionPresenter() != null) {\n+            getEditor().getSessionPresenter().displayNotifications(t -> displayNotifications);\n+        }\n+    }\n     @GetContent\n     @Override\n     public Promise getContent() {\n         flush();\n+        displayNotifications(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMzA1Ng==", "bodyText": "Missing I18n for \"Error\" literal, it should be already available in the core messages...", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434913056", "createdAt": "2020-06-03T23:34:50Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/editor/BPMNDiagramEditor.java", "diffHunk": "@@ -259,10 +269,31 @@ public String getEditorIdentifier() {\n         return EDITOR_ID;\n     }\n \n+    private void displayNotifications(final boolean displayNotifications) {\n+        if (getEditor().getSessionPresenter() != null) {\n+            getEditor().getSessionPresenter().displayNotifications(t -> displayNotifications);\n+        }\n+    }\n     @GetContent\n     @Override\n     public Promise getContent() {\n         flush();\n+        displayNotifications(false);\n+        AbstractCanvasHandler canvasHandler = (AbstractCanvasHandler) getCanvasHandler();\n+        validator.validate(canvasHandler, violations -> {\n+\n+            if (!violations.isEmpty()) {\n+                List<String> violationMessages = new ArrayList<>();\n+                for (DiagramElementViolation<RuleViolation> next : violations) {\n+                    final Collection<DomainViolation> domainViolations = next.getDomainViolations();\n+\n+                    domainViolations.forEach(item -> violationMessages.add(\"Error: \" + item.getUUID() + \" - \" + item.getMessage() + \" - \" + item.getViolationType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMzA4Nw==", "bodyText": "Missing I18n for \"Errors\" literal, it should be already available in the core messages...", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434913087", "createdAt": "2020-06-03T23:34:57Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/editor/BPMNDiagramEditor.java", "diffHunk": "@@ -259,10 +269,31 @@ public String getEditorIdentifier() {\n         return EDITOR_ID;\n     }\n \n+    private void displayNotifications(final boolean displayNotifications) {\n+        if (getEditor().getSessionPresenter() != null) {\n+            getEditor().getSessionPresenter().displayNotifications(t -> displayNotifications);\n+        }\n+    }\n     @GetContent\n     @Override\n     public Promise getContent() {\n         flush();\n+        displayNotifications(false);\n+        AbstractCanvasHandler canvasHandler = (AbstractCanvasHandler) getCanvasHandler();\n+        validator.validate(canvasHandler, violations -> {\n+\n+            if (!violations.isEmpty()) {\n+                List<String> violationMessages = new ArrayList<>();\n+                for (DiagramElementViolation<RuleViolation> next : violations) {\n+                    final Collection<DomainViolation> domainViolations = next.getDomainViolations();\n+\n+                    domainViolations.forEach(item -> violationMessages.add(\"Error: \" + item.getUUID() + \" - \" + item.getMessage() + \" - \" + item.getViolationType()));\n+                }\n+\n+                getEditor().getSessionPresenter().getView().showWarning(\"Errors: \" + violationMessages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNDY2OQ==", "bodyText": "Does this makes sense? you're setting something to the pp instance, which value comes from the pp instance as well... is not p playing any role here? look at above lines, this looks incoherent\nAlso why I don't see this change in the DefinitionsConverter class for client side marshallers?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434914669", "createdAt": "2020-06-03T23:40:29Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/fromstunner/DefinitionsConverter.java", "diffHunk": "@@ -65,6 +65,7 @@ public Definitions toDefinitions() {\n         p.addAllRootElements(pp.getItemDefinitions());\n         p.addAllRootElements(pp.getRootElements());\n         p.addAllRootElements(pp.getInterfaces());\n+        pp.getProcess().getFlowElements().addAll(pp.getDataObjects());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNTU5MA==", "bodyText": "Missing I18n", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434915590", "createdAt": "2020-06-03T23:43:43Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/validation/BPMNDataObjectValidator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.bpmn.client.validation;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.workbench.common.stunner.bpmn.BPMNDefinitionSet;\n+import org.kie.workbench.common.stunner.bpmn.definition.DataObject;\n+import org.kie.workbench.common.stunner.bpmn.validation.BPMNViolation;\n+import org.kie.workbench.common.stunner.core.definition.adapter.binding.BindableAdapterUtils;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.graph.Element;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.validation.DomainValidator;\n+import org.kie.workbench.common.stunner.core.validation.DomainViolation;\n+import org.kie.workbench.common.stunner.core.validation.Violation;\n+\n+@ApplicationScoped\n+public class BPMNDataObjectValidator implements DomainValidator {\n+\n+    private static final String ALLOWED_CHARS = \"^[a-zA-Z0-9\\\\-\\\\_\\\\ \\\\+\\\\/\\\\*\\\\?\\\\'\\\\.]*$\";\n+\n+    @Override\n+    public String getDefinitionSetId() {\n+        return BindableAdapterUtils.getDefinitionSetId(BPMNDefinitionSet.class);\n+    }\n+\n+    @Override\n+    public void validate(Diagram diagram, Consumer<Collection<DomainViolation>> resultConsumer) {\n+        Iterator<Element> it = diagram.getGraph().nodes().iterator();\n+        Map<String, String> dataObjectsMap = new HashMap<>();\n+        List<DomainViolation> violations = new ArrayList<>();\n+        while (it.hasNext()) {\n+            Element element = it.next();\n+            if (element.getContent() instanceof View && ((View) element.getContent()).getDefinition() instanceof DataObject) {\n+                    DataObject dataObject = (DataObject) ((View) element.getContent()).getDefinition();\n+\n+                    String name = dataObject.getName().getValue();\n+                    String type = dataObject.getType().getValue().getType();\n+                    String containedType = dataObjectsMap.get(name);\n+\n+                    if (containedType != null && !type.equals(containedType)) { // If already defined with different type\n+                        BPMNViolation bpmnViolation = new BPMNViolation(\"Data Object Exists with Same Name and Different Type: \" + name, Violation.Type.WARNING, element.getUUID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNTYxMg==", "bodyText": "Missing I18n", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434915612", "createdAt": "2020-06-03T23:43:47Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/validation/BPMNDataObjectValidator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.bpmn.client.validation;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.workbench.common.stunner.bpmn.BPMNDefinitionSet;\n+import org.kie.workbench.common.stunner.bpmn.definition.DataObject;\n+import org.kie.workbench.common.stunner.bpmn.validation.BPMNViolation;\n+import org.kie.workbench.common.stunner.core.definition.adapter.binding.BindableAdapterUtils;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.graph.Element;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.validation.DomainValidator;\n+import org.kie.workbench.common.stunner.core.validation.DomainViolation;\n+import org.kie.workbench.common.stunner.core.validation.Violation;\n+\n+@ApplicationScoped\n+public class BPMNDataObjectValidator implements DomainValidator {\n+\n+    private static final String ALLOWED_CHARS = \"^[a-zA-Z0-9\\\\-\\\\_\\\\ \\\\+\\\\/\\\\*\\\\?\\\\'\\\\.]*$\";\n+\n+    @Override\n+    public String getDefinitionSetId() {\n+        return BindableAdapterUtils.getDefinitionSetId(BPMNDefinitionSet.class);\n+    }\n+\n+    @Override\n+    public void validate(Diagram diagram, Consumer<Collection<DomainViolation>> resultConsumer) {\n+        Iterator<Element> it = diagram.getGraph().nodes().iterator();\n+        Map<String, String> dataObjectsMap = new HashMap<>();\n+        List<DomainViolation> violations = new ArrayList<>();\n+        while (it.hasNext()) {\n+            Element element = it.next();\n+            if (element.getContent() instanceof View && ((View) element.getContent()).getDefinition() instanceof DataObject) {\n+                    DataObject dataObject = (DataObject) ((View) element.getContent()).getDefinition();\n+\n+                    String name = dataObject.getName().getValue();\n+                    String type = dataObject.getType().getValue().getType();\n+                    String containedType = dataObjectsMap.get(name);\n+\n+                    if (containedType != null && !type.equals(containedType)) { // If already defined with different type\n+                        BPMNViolation bpmnViolation = new BPMNViolation(\"Data Object Exists with Same Name and Different Type: \" + name, Violation.Type.WARNING, element.getUUID());\n+                        violations.add(bpmnViolation);\n+                    } else {\n+                        dataObjectsMap.put(name, type);\n+                    }\n+\n+                    if (!name.matches(ALLOWED_CHARS)) {\n+                        BPMNViolation bpmnViolation = new BPMNViolation(\"Data Object with Invalid Name Exists: \" + name, Violation.Type.WARNING, element.getUUID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNTgwNg==", "bodyText": "Maybe this class can be moved somewhere into the bpmn-api module, so making this validator available (in case) for both server and client side. Does it makes sense?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434915806", "createdAt": "2020-06-03T23:44:32Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/validation/BPMNDataObjectValidator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.bpmn.client.validation;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.workbench.common.stunner.bpmn.BPMNDefinitionSet;\n+import org.kie.workbench.common.stunner.bpmn.definition.DataObject;\n+import org.kie.workbench.common.stunner.bpmn.validation.BPMNViolation;\n+import org.kie.workbench.common.stunner.core.definition.adapter.binding.BindableAdapterUtils;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.graph.Element;\n+import org.kie.workbench.common.stunner.core.graph.content.view.View;\n+import org.kie.workbench.common.stunner.core.validation.DomainValidator;\n+import org.kie.workbench.common.stunner.core.validation.DomainViolation;\n+import org.kie.workbench.common.stunner.core.validation.Violation;\n+\n+@ApplicationScoped\n+public class BPMNDataObjectValidator implements DomainValidator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNjUxOA==", "bodyText": "This class, as part of the BPMN eclise model for client side (kie-wb-common-stunner-bpmn-emf),  is being auto-generated from an eclipse model / plugin, so we're NOT  allowed to manually change any class in this module!\nIs the code here really necessary???? Again, this should not be manually changed please.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434916518", "createdAt": "2020-06-03T23:47:13Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-emf/src/main/java/org/eclipse/bpmn2/impl/DataObjectImpl.java", "diffHunk": "@@ -1,19 +1,21 @@\n /**\n  * <copyright>\n- * \n+ *\n  * Copyright (c) 2010 SAP AG.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n  * http://www.eclipse.org/legal/epl-v10.html\n- * \n+ *\n  * Contributors:\n  *    Reiner Hille-Doering (SAP AG) - initial API and implementation and/or initial documentation\n- * \n+ *\n  * </copyright>\n  */\n package org.eclipse.bpmn2.impl;\n \n+import java.util.Objects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNzc1MA==", "bodyText": "no need for even variable creation, this argument and below ones can be inlined in the constructor for AssignmentData (eg: datainput != null ? datainput : null)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434917750", "createdAt": "2020-06-03T23:51:38Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODA0NQ==", "bodyText": "IMO no need for a helper method that calls also another single helper method...", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434918045", "createdAt": "2020-06-03T23:52:37Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {\n+        if (bpmnModel instanceof BaseUserTask) {\n+            return DEFAULT_IGNORED_PROPERTY_NAMES;\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    protected Node getSelectedElement() {\n+        String elementUUID = getSelectedElementUUID(canvasSessionManager.getCurrentSession());\n+        if (elementUUID != null) {\n+            return canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getGraph().getNode(elementUUID);\n+        }\n+        return null;\n+    }\n+\n+    protected Set<String> getParentIds() {\n+        Set<String> parentIds = new HashSet<>();\n+        final Node selectedElement = getSelectedElement();\n+        Element parent = GraphUtils.getParent(selectedElement);\n+\n+        if (selectedElement != null) {\n+            final String mainDiagramId = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getMetadata().getCanvasRootUUID();\n+            parentIds.add(parent.getUUID());\n+\n+            while (!parent.getUUID().equals(mainDiagramId)) {\n+                parent = getParentElement(parent.asNode());\n+                parentIds.add(parent.getUUID());\n+            }\n+        }\n+        return parentIds;\n+    }\n+\n+    private Set<DataObject> findDataObjects() {\n+        Iterable<Node> nodes = canvasSessionManager.getCurrentSession()\n+                .getCanvasHandler()\n+                .getDiagram()\n+                .getGraph()\n+                .nodes();\n+\n+        final Set<String> parentIds = getParentIds();\n+        // Only return Data Objects that have the same id as the current as the parent and its parent recursively\n+        return StreamSupport.stream(nodes.spliterator(), false)\n+                .filter(this::isBPMNDefinition)\n+                .map(elm -> (Node<View<BPMNDefinition>, Edge>) elm)\n+                .filter(elm -> {\n+                    if (elm.getContent().getDefinition() instanceof DataObject) {\n+                        final Element parent = getParentElement(elm);\n+                        if (parent == null) { // test\n+                            return true;\n+                        }\n+\n+                        return parentIds.contains(parent.getUUID());\n+                    }\n+                    return false;\n+                })\n+                .map(elm -> ((DataObject) elm.getContent().getDefinition()))\n+                .collect(Collectors.toSet());\n+    }\n+\n+    protected Element<?> getParentElement(final Node<?, ? extends Edge> element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODE2NQ==", "bodyText": "can be static", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434918165", "createdAt": "2020-06-03T23:52:59Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {\n+        if (bpmnModel instanceof BaseUserTask) {\n+            return DEFAULT_IGNORED_PROPERTY_NAMES;\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    protected Node getSelectedElement() {\n+        String elementUUID = getSelectedElementUUID(canvasSessionManager.getCurrentSession());\n+        if (elementUUID != null) {\n+            return canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getGraph().getNode(elementUUID);\n+        }\n+        return null;\n+    }\n+\n+    protected Set<String> getParentIds() {\n+        Set<String> parentIds = new HashSet<>();\n+        final Node selectedElement = getSelectedElement();\n+        Element parent = GraphUtils.getParent(selectedElement);\n+\n+        if (selectedElement != null) {\n+            final String mainDiagramId = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getMetadata().getCanvasRootUUID();\n+            parentIds.add(parent.getUUID());\n+\n+            while (!parent.getUUID().equals(mainDiagramId)) {\n+                parent = getParentElement(parent.asNode());\n+                parentIds.add(parent.getUUID());\n+            }\n+        }\n+        return parentIds;\n+    }\n+\n+    private Set<DataObject> findDataObjects() {\n+        Iterable<Node> nodes = canvasSessionManager.getCurrentSession()\n+                .getCanvasHandler()\n+                .getDiagram()\n+                .getGraph()\n+                .nodes();\n+\n+        final Set<String> parentIds = getParentIds();\n+        // Only return Data Objects that have the same id as the current as the parent and its parent recursively\n+        return StreamSupport.stream(nodes.spliterator(), false)\n+                .filter(this::isBPMNDefinition)\n+                .map(elm -> (Node<View<BPMNDefinition>, Edge>) elm)\n+                .filter(elm -> {\n+                    if (elm.getContent().getDefinition() instanceof DataObject) {\n+                        final Element parent = getParentElement(elm);\n+                        if (parent == null) { // test\n+                            return true;\n+                        }\n+\n+                        return parentIds.contains(parent.getUUID());\n+                    }\n+                    return false;\n+                })\n+                .map(elm -> ((DataObject) elm.getContent().getDefinition()))\n+                .collect(Collectors.toSet());\n+    }\n+\n+    protected Element<?> getParentElement(final Node<?, ? extends Edge> element) {\n+        return graphUtils.getParent(element);\n+    }\n+\n+    private String dataObjectToProcessVariableFormat(DataObject dataObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODUyMQ==", "bodyText": "no longer need for using StringBuilder class... it's redundant and causing complexity. The complier / transpiler already will do it efficiently even if you just concatenate strings... this way we can reduce all these lines into a single return line, isn't it?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434918521", "createdAt": "2020-06-03T23:54:22Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {\n+        if (bpmnModel instanceof BaseUserTask) {\n+            return DEFAULT_IGNORED_PROPERTY_NAMES;\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    protected Node getSelectedElement() {\n+        String elementUUID = getSelectedElementUUID(canvasSessionManager.getCurrentSession());\n+        if (elementUUID != null) {\n+            return canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getGraph().getNode(elementUUID);\n+        }\n+        return null;\n+    }\n+\n+    protected Set<String> getParentIds() {\n+        Set<String> parentIds = new HashSet<>();\n+        final Node selectedElement = getSelectedElement();\n+        Element parent = GraphUtils.getParent(selectedElement);\n+\n+        if (selectedElement != null) {\n+            final String mainDiagramId = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getMetadata().getCanvasRootUUID();\n+            parentIds.add(parent.getUUID());\n+\n+            while (!parent.getUUID().equals(mainDiagramId)) {\n+                parent = getParentElement(parent.asNode());\n+                parentIds.add(parent.getUUID());\n+            }\n+        }\n+        return parentIds;\n+    }\n+\n+    private Set<DataObject> findDataObjects() {\n+        Iterable<Node> nodes = canvasSessionManager.getCurrentSession()\n+                .getCanvasHandler()\n+                .getDiagram()\n+                .getGraph()\n+                .nodes();\n+\n+        final Set<String> parentIds = getParentIds();\n+        // Only return Data Objects that have the same id as the current as the parent and its parent recursively\n+        return StreamSupport.stream(nodes.spliterator(), false)\n+                .filter(this::isBPMNDefinition)\n+                .map(elm -> (Node<View<BPMNDefinition>, Edge>) elm)\n+                .filter(elm -> {\n+                    if (elm.getContent().getDefinition() instanceof DataObject) {\n+                        final Element parent = getParentElement(elm);\n+                        if (parent == null) { // test\n+                            return true;\n+                        }\n+\n+                        return parentIds.contains(parent.getUUID());\n+                    }\n+                    return false;\n+                })\n+                .map(elm -> ((DataObject) elm.getContent().getDefinition()))\n+                .collect(Collectors.toSet());\n+    }\n+\n+    protected Element<?> getParentElement(final Node<?, ? extends Edge> element) {\n+        return graphUtils.getParent(element);\n+    }\n+\n+    private String dataObjectToProcessVariableFormat(DataObject dataObject) {\n+        StringBuilder builder = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTAxMA==", "bodyText": "Maybe we can move this method into some helper class as an static method as well, in the BPMN modules, which receives the diagram or canvasHandler as argument, so you can call it from here by passing the instance returned by the sessionManager.getCurrentSession()", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919010", "createdAt": "2020-06-03T23:55:58Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {\n+        if (bpmnModel instanceof BaseUserTask) {\n+            return DEFAULT_IGNORED_PROPERTY_NAMES;\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    protected Node getSelectedElement() {\n+        String elementUUID = getSelectedElementUUID(canvasSessionManager.getCurrentSession());\n+        if (elementUUID != null) {\n+            return canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getGraph().getNode(elementUUID);\n+        }\n+        return null;\n+    }\n+\n+    protected Set<String> getParentIds() {\n+        Set<String> parentIds = new HashSet<>();\n+        final Node selectedElement = getSelectedElement();\n+        Element parent = GraphUtils.getParent(selectedElement);\n+\n+        if (selectedElement != null) {\n+            final String mainDiagramId = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getMetadata().getCanvasRootUUID();\n+            parentIds.add(parent.getUUID());\n+\n+            while (!parent.getUUID().equals(mainDiagramId)) {\n+                parent = getParentElement(parent.asNode());\n+                parentIds.add(parent.getUUID());\n+            }\n+        }\n+        return parentIds;\n+    }\n+\n+    private Set<DataObject> findDataObjects() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTIxNQ==", "bodyText": "can it be moved to some helper class for BPMN, which receives the diagram from here?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919215", "createdAt": "2020-06-03T23:56:46Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTM2MQ==", "bodyText": "can it be private", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919361", "createdAt": "2020-06-03T23:57:22Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {\n+        if (bpmnModel instanceof BaseUserTask) {\n+            return DEFAULT_IGNORED_PROPERTY_NAMES;\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    protected Node getSelectedElement() {\n+        String elementUUID = getSelectedElementUUID(canvasSessionManager.getCurrentSession());\n+        if (elementUUID != null) {\n+            return canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getGraph().getNode(elementUUID);\n+        }\n+        return null;\n+    }\n+\n+    protected Set<String> getParentIds() {\n+        Set<String> parentIds = new HashSet<>();\n+        final Node selectedElement = getSelectedElement();\n+        Element parent = GraphUtils.getParent(selectedElement);\n+\n+        if (selectedElement != null) {\n+            final String mainDiagramId = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getMetadata().getCanvasRootUUID();\n+            parentIds.add(parent.getUUID());\n+\n+            while (!parent.getUUID().equals(mainDiagramId)) {\n+                parent = getParentElement(parent.asNode());\n+                parentIds.add(parent.getUUID());\n+            }\n+        }\n+        return parentIds;\n+    }\n+\n+    private Set<DataObject> findDataObjects() {\n+        Iterable<Node> nodes = canvasSessionManager.getCurrentSession()\n+                .getCanvasHandler()\n+                .getDiagram()\n+                .getGraph()\n+                .nodes();\n+\n+        final Set<String> parentIds = getParentIds();\n+        // Only return Data Objects that have the same id as the current as the parent and its parent recursively\n+        return StreamSupport.stream(nodes.spliterator(), false)\n+                .filter(this::isBPMNDefinition)\n+                .map(elm -> (Node<View<BPMNDefinition>, Edge>) elm)\n+                .filter(elm -> {\n+                    if (elm.getContent().getDefinition() instanceof DataObject) {\n+                        final Element parent = getParentElement(elm);\n+                        if (parent == null) { // test\n+                            return true;\n+                        }\n+\n+                        return parentIds.contains(parent.getUUID());\n+                    }\n+                    return false;\n+                })\n+                .map(elm -> ((DataObject) elm.getContent().getDefinition()))\n+                .collect(Collectors.toSet());\n+    }\n+\n+    protected Element<?> getParentElement(final Node<?, ? extends Edge> element) {\n+        return graphUtils.getParent(element);\n+    }\n+\n+    private String dataObjectToProcessVariableFormat(DataObject dataObject) {\n+        StringBuilder builder = new StringBuilder();\n+        builder.append(dataObject.getName().getValue());\n+        builder.append(\":\");\n+        builder.append(dataObject.getType().getValue().getType());\n+        return builder.toString();\n+    }\n+\n+    protected String getSelectedElementUUID(ClientSession clientSession) {\n+        if (clientSession instanceof EditorSession) {\n+            final SelectionControl selectionControl = ((EditorSession) clientSession).getSelectionControl();\n+            if (null != selectionControl) {\n+                final Collection<String> selectedItems = selectionControl.getSelectedItems();\n+                if (null != selectedItems && !selectedItems.isEmpty()) {\n+                    return selectedItems.iterator().next();\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    protected boolean isBPMNDefinition(Node node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTQ0NA==", "bodyText": "can it be private", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919444", "createdAt": "2020-06-03T23:57:40Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {\n+        if (bpmnModel instanceof BaseUserTask) {\n+            return DEFAULT_IGNORED_PROPERTY_NAMES;\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    protected Node getSelectedElement() {\n+        String elementUUID = getSelectedElementUUID(canvasSessionManager.getCurrentSession());\n+        if (elementUUID != null) {\n+            return canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram().getGraph().getNode(elementUUID);\n+        }\n+        return null;\n+    }\n+\n+    protected Set<String> getParentIds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTQ2Mg==", "bodyText": "can it be private", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919462", "createdAt": "2020-06-03T23:57:44Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,\n+                                             final String datainputset,\n+                                             final String dataoutput,\n+                                             final String dataoutputset,\n+                                             final String processvars,\n+                                             final String assignments,\n+                                             final String disallowedpropertynames) {\n+        String inputvars = null;\n+        if (datainput != null) {\n+            inputvars = datainput;\n+        }\n+        if (datainputset != null) {\n+            inputvars = datainputset;\n+        }\n+        String outputvars = null;\n+        if (dataoutput != null) {\n+            outputvars = dataoutput;\n+        }\n+        if (dataoutputset != null) {\n+            outputvars = dataoutputset;\n+        }\n+        AssignmentData assignmentData = new AssignmentData(inputvars,\n+                                                           outputvars,\n+                                                           processvars,\n+                                                           assignments,\n+                                                           disallowedpropertynames);\n+        return assignmentData.getVariableCountsString(hasInputVars,\n+                                                      isSingleInputVar,\n+                                                      hasOutputVars,\n+                                                      isSingleOutputVar);\n+    }\n+\n+    protected String getProcessVariables() {\n+        Diagram diagram = canvasSessionManager.getCurrentSession().getCanvasHandler().getDiagram();\n+        Node selectedElement = getSelectedElement();\n+        String variables = VariableUtils.encodeProcessVariables(diagram, selectedElement);\n+        StringBuilder sb = new StringBuilder();\n+        if (!variables.isEmpty()) {\n+            sb.append(variables);\n+        }\n+\n+        String dataObjects =\n+                findDataObjects().stream()\n+                        .map(this::dataObjectToProcessVariableFormat)\n+                        .collect(Collectors.joining(\",\"));\n+\n+        if (!dataObjects.isEmpty()) {\n+            sb.append(dataObjects);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getDisallowedPropertyNames() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTUxMA==", "bodyText": "can it be private", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919510", "createdAt": "2020-06-03T23:57:53Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {\n+\n+        Map<String, String> assignmentsProperties = AssignmentParser.parseAssignmentsInfo(assignmentsInfo);\n+\n+        String variableCountsString = getVariableCountsString(assignmentsProperties.get(AssignmentParser.DATAINPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAINPUTSET),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUT),\n+                                                              assignmentsProperties.get(AssignmentParser.DATAOUTPUTSET),\n+                                                              getProcessVariables(),\n+                                                              assignmentsProperties.get(AssignmentParser.ASSIGNMENTS),\n+                                                              getDisallowedPropertyNames());\n+        assignmentsTextBox.setText(variableCountsString);\n+    }\n+\n+    protected String getVariableCountsString(final String datainput,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxOTU2OQ==", "bodyText": "can it be private", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434919569", "createdAt": "2020-06-03T23:58:03Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/assignmentsEditor/AssignmentsEditorWidget.java", "diffHunk": "@@ -142,6 +152,163 @@ public void setValue(final String value,\n         }\n     }\n \n+    protected void initTextBox() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkyMDEyMw==", "bodyText": "please still better using a org.jboss.errai.ioc.client.api.ManagedInstance instead of a regular Instance, for the injection points on client side.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434920123", "createdAt": "2020-06-04T00:00:08Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/validation/ClientDiagramValidator.java", "diffHunk": "@@ -40,10 +43,12 @@ protected ClientDiagramValidator() {\n     public ClientDiagramValidator(final DefinitionManager definitionManager,\n                                   final RuleManager ruleManager,\n                                   final TreeWalkTraverseProcessor treeWalkTraverseProcessor,\n-                                  final ModelValidator modelValidator) {\n+                                  final ModelValidator modelValidator,\n+                                  final Instance<DomainValidator> validators) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkyMDQ3NA==", "bodyText": "can it be static?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r434920474", "createdAt": "2020-06-04T00:01:22Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-core-common/src/main/java/org/kie/workbench/common/stunner/core/validation/impl/AbstractDiagramValidator.java", "diffHunk": "@@ -46,14 +54,38 @@\n     private final GraphValidatorImpl graphValidator;\n     private final ModelValidator modelValidator;\n \n+    private final Instance<DomainValidator> validators;\n+\n     protected AbstractDiagramValidator(final DefinitionManager definitionManager,\n                                        final RuleManager ruleManager,\n                                        final TreeWalkTraverseProcessor treeWalkTraverseProcessor,\n-                                       final ModelValidator modelValidator) {\n+                                       final ModelValidator modelValidator,\n+                                       final Instance<DomainValidator> validators) {\n+\n         this.graphValidator = new GraphValidatorImpl(definitionManager,\n                                                      ruleManager,\n                                                      treeWalkTraverseProcessor);\n         this.modelValidator = modelValidator;\n+        this.validators = validators;\n+    }\n+\n+    private Collection<DiagramElementViolation<RuleViolation>> validateDomain(Diagram diagram) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0Mzk0MDcy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-424394072", "createdAt": "2020-06-04T12:34:19Z", "commit": {"oid": "42b79557f958dd272fdeac77e8e60e178591fd03"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48a1a3a363df9d7fd95e6059087f6759c8e2fd70", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/48a1a3a363df9d7fd95e6059087f6759c8e2fd70", "committedDate": "2020-06-04T23:25:10Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Added Support for Lanes"}, "afterCommit": {"oid": "bda24a880c79df7996db61d1f2389ad0c2d8a09c", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bda24a880c79df7996db61d1f2389ad0c2d8a09c", "committedDate": "2020-06-05T15:29:26Z", "message": "fixup! JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bda24a880c79df7996db61d1f2389ad0c2d8a09c", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bda24a880c79df7996db61d1f2389ad0c2d8a09c", "committedDate": "2020-06-05T15:29:26Z", "message": "fixup! JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}, "afterCommit": {"oid": "7174a0ae9ce84632b3a01777a0551e86077260a7", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7174a0ae9ce84632b3a01777a0551e86077260a7", "committedDate": "2020-06-05T22:37:34Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7174a0ae9ce84632b3a01777a0551e86077260a7", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7174a0ae9ce84632b3a01777a0551e86077260a7", "committedDate": "2020-06-05T22:37:34Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters"}, "afterCommit": {"oid": "30e330c1b49581c297968a0092f2d8ff597ebbaf", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/30e330c1b49581c297968a0092f2d8ff597ebbaf", "committedDate": "2020-06-09T22:31:15Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters / Default Category and Blue Selection of Data Objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30e330c1b49581c297968a0092f2d8ff597ebbaf", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/30e330c1b49581c297968a0092f2d8ff597ebbaf", "committedDate": "2020-06-09T22:31:15Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters / Default Category and Blue Selection of Data Objects"}, "afterCommit": {"oid": "5b55132b139ebb1184980855ed04b51fb963b0be", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5b55132b139ebb1184980855ed04b51fb963b0be", "committedDate": "2020-06-10T21:15:48Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTE4NTAw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-429118500", "createdAt": "2020-06-11T17:12:51Z", "commit": {"oid": "2fa514cf5229a8daa1014962afb3e1a13a703e42"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fa514cf5229a8daa1014962afb3e1a13a703e42", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2fa514cf5229a8daa1014962afb3e1a13a703e42", "committedDate": "2020-06-10T21:33:58Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}, "afterCommit": {"oid": "450c1accb5c919f93b74e2f2e1271ca6f0a055ac", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/450c1accb5c919f93b74e2f2e1271ca6f0a055ac", "committedDate": "2020-06-11T19:30:23Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68fcdfeea7b071db0f7153f52d372f21d6eca720", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/68fcdfeea7b071db0f7153f52d372f21d6eca720", "committedDate": "2020-06-11T23:34:21Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}, "afterCommit": {"oid": "4f5bb7916382abbb4f230eb07819f7a4cf7d7f1c", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4f5bb7916382abbb4f230eb07819f7a4cf7d7f1c", "committedDate": "2020-06-15T17:08:19Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9dbed2e9834b66eac6432d45eb3f993dff90a27", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b9dbed2e9834b66eac6432d45eb3f993dff90a27", "committedDate": "2020-06-16T23:24:36Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed SVG File issues (Background, folding part having a color and rounding corners via SVG Paths"}, "afterCommit": {"oid": "5ac93723159140cbbd43e50b92ee42eff6895780", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5ac93723159140cbbd43e50b92ee42eff6895780", "committedDate": "2020-06-17T23:51:52Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Changed Data Object Type to Same as Variables Used Everywhere"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ac93723159140cbbd43e50b92ee42eff6895780", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5ac93723159140cbbd43e50b92ee42eff6895780", "committedDate": "2020-06-17T23:51:52Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Changed Data Object Type to Same as Variables Used Everywhere"}, "afterCommit": {"oid": "1693dfff07f358ef9d0d79a57dea9a23195271e0", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1693dfff07f358ef9d0d79a57dea9a23195271e0", "committedDate": "2020-06-19T00:06:16Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Bug in BC when saving SVG File and issue with curves and Data Object Type Issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzU5NTUz", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-435359553", "createdAt": "2020-06-23T00:26:19Z", "commit": {"oid": "dd7758b3b0aeae939506140c8743328d93fd70e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDoyNjoxOVrOGnVMKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDoyNjoxOVrOGnVMKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NDgyNw==", "bodyText": "please let's avoid changing this file at all, it's auto generated and no need for having changes in the VCS history...", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#discussion_r443894827", "createdAt": "2020-06-23T00:26:19Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-emf/src/main/java/org/eclipse/bpmn2/impl/DataObjectImpl.java", "diffHunk": "@@ -1,15 +1,15 @@\n /**\n  * <copyright>\n- * \n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd7758b3b0aeae939506140c8743328d93fd70e4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDc5NzQ4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-438479748", "createdAt": "2020-06-26T17:40:30Z", "commit": {"oid": "ec44165331ab6e64b46f6383c61c7cb6a2665be6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec44165331ab6e64b46f6383c61c7cb6a2665be6", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ec44165331ab6e64b46f6383c61c7cb6a2665be6", "committedDate": "2020-06-23T17:48:57Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Modified for Comments"}, "afterCommit": {"oid": "e0533b3165b3cfbf6dcd757791bf46eadd14d979", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e0533b3165b3cfbf6dcd757791bf46eadd14d979", "committedDate": "2020-06-30T18:37:00Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mzc2MTc4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-448376178", "createdAt": "2020-07-14T18:52:05Z", "commit": {"oid": "e0533b3165b3cfbf6dcd757791bf46eadd14d979"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0533b3165b3cfbf6dcd757791bf46eadd14d979", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e0533b3165b3cfbf6dcd757791bf46eadd14d979", "committedDate": "2020-06-30T18:37:00Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}, "afterCommit": {"oid": "0fc7337cdf67f0a413fb6d51f74d32856bcdc67d", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0fc7337cdf67f0a413fb6d51f74d32856bcdc67d", "committedDate": "2020-07-14T23:36:53Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MDA5NTM1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-449009535", "createdAt": "2020-07-15T14:27:12Z", "commit": {"oid": "0fc7337cdf67f0a413fb6d51f74d32856bcdc67d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTA4MTc0", "url": "https://github.com/kiegroup/kie-wb-common/pull/3276#pullrequestreview-449108174", "createdAt": "2020-07-15T16:14:53Z", "commit": {"oid": "0fc7337cdf67f0a413fb6d51f74d32856bcdc67d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19ffa7306faf681b8ae5054b7e3fd5975745e3a3", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/19ffa7306faf681b8ae5054b7e3fd5975745e3a3", "committedDate": "2020-07-16T20:13:10Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f307d5e4544acc6ee2a09eb1ef0880d6bb06d2fe", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f307d5e4544acc6ee2a09eb1ef0880d6bb06d2fe", "committedDate": "2020-07-16T20:13:10Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Added Support for Lanes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b81a196d2ad9fddbf2df6e35f901294d7406be93", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b81a196d2ad9fddbf2df6e35f901294d7406be93", "committedDate": "2020-07-16T20:13:10Z", "message": "fixup! JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "136ef700bdd71f163585ae0f7b37846d9ed2c487", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/136ef700bdd71f163585ae0f7b37846d9ed2c487", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b5e8fdc451ece7a5daf711cda3458bdad565e74", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4b5e8fdc451ece7a5daf711cda3458bdad565e74", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d57f9c2770d8cec658bc133a3d68d98d27158bf", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7d57f9c2770d8cec658bc133a3d68d98d27158bf", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Change for Escaping Characters / Default Category and Blue Selection of Data Objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d3199132b9c1897d5a077a076ad1a21ad75351f", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5d3199132b9c1897d5a077a076ad1a21ad75351f", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Added Fix for Case Management Bug / DataObjects Blue Selection Border"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b356206cd1f9dd21c28f1324f166457cdfc3c17", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3b356206cd1f9dd21c28f1324f166457cdfc3c17", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9d5ebba7568f50ebddde988ca3d39f7c499cb0", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6f9d5ebba7568f50ebddde988ca3d39f7c499cb0", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b2d29935d336d30f9cd7b1fcaada63e7812ec3", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/21b2d29935d336d30f9cd7b1fcaada63e7812ec3", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a46c6258cfb07638c3762a5a11b248908f027102", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a46c6258cfb07638c3762a5a11b248908f027102", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38d2202e3fecc03a1b99bc2d80807c44bed62a9b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/38d2202e3fecc03a1b99bc2d80807c44bed62a9b", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c55c753da1727d0253d3a493e2eab7d9ac69a78", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7c55c753da1727d0253d3a493e2eab7d9ac69a78", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb837e38b62063f6433e06861e4981ce01cb1f66", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/eb837e38b62063f6433e06861e4981ce01cb1f66", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb9d9f821ff65b48401e99cb60b04a9238d81ae", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9fb9d9f821ff65b48401e99cb60b04a9238d81ae", "committedDate": "2020-07-16T20:13:11Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed SVG File issues (Background, folding part having a color and rounding corners via SVG Paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a245c515cab7b21e38d1658ccd4c1aeca0a2200", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7a245c515cab7b21e38d1658ccd4c1aeca0a2200", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Changed Data Object Type to Same as Variables Used Everywhere"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ea68be78991b2e0670c27a3835ac20b12f5054d", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3ea68be78991b2e0670c27a3835ac20b12f5054d", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Bug in BC when saving SVG File and issue with curves"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fe0b023a0e3a86086ce6921efc921d28e2197bd", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0fe0b023a0e3a86086ce6921efc921d28e2197bd", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Bug in BC when saving SVG File and issue with curves and Data Object Type Issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dfeffd1941302fe47b64c880b07e40b6d349b3e", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8dfeffd1941302fe47b64c880b07e40b6d349b3e", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Bug in BC when saving SVG File and issue with curves and Data Object Type Issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee626e05ec65dd5643ba47a7e9f5317e60e08023", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ee626e05ec65dd5643ba47a7e9f5317e60e08023", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Modified for Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c098a7b876780acdc06d57b6bf988b032531da08", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c098a7b876780acdc06d57b6bf988b032531da08", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bba0d225052af693aff26f534eb8615d72e2e2b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7bba0d225052af693aff26f534eb8615d72e2e2b", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0fc7337cdf67f0a413fb6d51f74d32856bcdc67d", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0fc7337cdf67f0a413fb6d51f74d32856bcdc67d", "committedDate": "2020-07-14T23:36:53Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}, "afterCommit": {"oid": "7bba0d225052af693aff26f534eb8615d72e2e2b", "author": {"user": {"login": "inodeman", "name": "Jaime Enriquez"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7bba0d225052af693aff26f534eb8615d72e2e2b", "committedDate": "2020-07-16T20:13:12Z", "message": "JBPM-7919 : Stunner - [BPMN] Support for Data Object and Association Fixed Additional Issues"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 597, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}