{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDU4NDI1", "number": 3341, "title": "RHPAM-2990 / RHPAM-3015 - Variable Data Type related problems", "bodyText": "https://issues.redhat.com/browse/RHPAM-2990\nhttps://issues.redhat.com/browse/RHPAM-3015\nVariables accept empty data type values without problems.\nData types are loaded after save.\nThis applies for Assignment, Process and Global Variables.\nWars and artifacts:\nBusiness Central", "createdAt": "2020-06-22T16:40:16Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341", "merged": true, "mergeCommit": {"oid": "f3838272815f30c1dcc7e599d5797fa5d9782e03"}, "closed": true, "closedAt": "2020-06-25T10:37:57Z", "author": {"login": "Josephblt"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctxzuNgH2gAyNDM4MDU4NDI1OmQxYjExNWRiOGZkNzAzZGUxYjNiOWE4OWRhNDQ3YTljMTUwNDkwZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcusJ4igFqTQzNzM2ODU5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df", "author": {"user": {"login": "Josephblt", "name": "Wagner Scholl Lemos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d1b115db8fd703de1b3b9a89da447a9c150490df", "committedDate": "2020-06-22T14:34:31Z", "message": "JBPM-9182 - Error message when creating Global Variable without Data Type\n\nGlobal Variables accept empty data type values without problems."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjkxMDcw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#pullrequestreview-435291070", "createdAt": "2020-06-22T21:36:01Z", "commit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNjowMVrOGnR1vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozNzo0MlrOGnR4sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzOTkzMw==", "bodyText": "what's the reason for moving from private to protected access?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443839933", "createdAt": "2020-06-22T21:36:01Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -49,13 +49,7 @@ public void setValue(BaseElement element, String value) {\n         setStringValue(element, value);\n     }\n \n-    private void setStringValue(BaseElement element, String value) {\n-        Stream.of(value.split(\",\"))\n-                .map(this::extensionOf)\n-                .forEach(getExtensionElements(element)::add);\n-    }\n-\n-    private Optional<String> getStringValue(BaseElement element) {\n+    protected Optional<String> getStringValue(BaseElement element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0MDEwOQ==", "bodyText": "can it be private?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443840109", "createdAt": "2020-06-22T21:36:27Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -68,16 +62,18 @@ private void setStringValue(BaseElement element, String value) {\n                 .collect(Collectors.toList());\n \n         String globalVariables = globalExtensions.stream()\n-                .filter(globalType -> globalType.getIdentifier() != null &&\n-                        globalType.getIdentifier().length() > 0 &&\n-                        globalType.getType() != null &&\n-                        globalType.getType().length() > 0)\n                 .map(globalType -> globalType.getIdentifier() + \":\" + globalType.getType())\n                 .collect(Collectors.joining(\",\"));\n \n         return Optional.ofNullable(globalVariables);\n     }\n \n+    protected void setStringValue(BaseElement element, String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0MDY2NQ==", "bodyText": "can it be static and private?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443840665", "createdAt": "2020-06-22T21:37:39Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/main/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -70,25 +63,28 @@ protected void setStringValue(BaseElement element, String value) {\n                 .collect(Collectors.toList());\n \n         String globalVariables = globalExtensions.stream()\n-                .filter(globalType -> globalType.getIdentifier() != null &&\n-                        globalType.getIdentifier().length() > 0 &&\n-                        globalType.getType() != null &&\n-                        globalType.getType().length() > 0)\n                 .map(globalType -> globalType.getIdentifier() + \":\" + globalType.getType())\n                 .collect(Collectors.joining(\",\"));\n \n         return Optional.ofNullable(globalVariables);\n     }\n \n-    private FeatureMap.Entry extensionOf(String variable) {\n+    @Override\n+    protected void setStringValue(BaseElement element, String value) {\n+        Stream.of(value.split(\",\"))\n+                .map(this::extensionOf)\n+                .forEach(getExtensionElements(element)::add);\n+    }\n+\n+    protected FeatureMap.Entry extensionOf(String variable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0MDY5MA==", "bodyText": "can it be static and private?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#discussion_r443840690", "createdAt": "2020-06-22T21:37:42Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/main/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/customproperties/elements/GlobalVariablesElement.java", "diffHunk": "@@ -70,25 +63,28 @@ protected void setStringValue(BaseElement element, String value) {\n                 .collect(Collectors.toList());\n \n         String globalVariables = globalExtensions.stream()\n-                .filter(globalType -> globalType.getIdentifier() != null &&\n-                        globalType.getIdentifier().length() > 0 &&\n-                        globalType.getType() != null &&\n-                        globalType.getType().length() > 0)\n                 .map(globalType -> globalType.getIdentifier() + \":\" + globalType.getType())\n                 .collect(Collectors.joining(\",\"));\n \n         return Optional.ofNullable(globalVariables);\n     }\n \n-    private FeatureMap.Entry extensionOf(String variable) {\n+    @Override\n+    protected void setStringValue(BaseElement element, String value) {\n+        Stream.of(value.split(\",\"))\n+                .map(this::extensionOf)\n+                .forEach(getExtensionElements(element)::add);\n+    }\n+\n+    protected FeatureMap.Entry extensionOf(String variable) {\n         return new EStructuralFeatureImpl.SimpleFeatureMapEntry(\n                 (EStructuralFeature.Internal) DOCUMENT_ROOT__GLOBAL,\n                 globalTypeDataOf(variable));\n     }\n \n-    private GlobalType globalTypeDataOf(String variable) {\n+    protected GlobalType globalTypeDataOf(String variable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzI4OTcx", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#pullrequestreview-435328971", "createdAt": "2020-06-22T22:56:54Z", "commit": {"oid": "d1b115db8fd703de1b3b9a89da447a9c150490df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c22155af298eb0679e86e7129458cc8f8e50e37", "author": {"user": {"login": "Josephblt", "name": "Wagner Scholl Lemos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3c22155af298eb0679e86e7129458cc8f8e50e37", "committedDate": "2020-06-23T02:59:39Z", "message": "RHPAM-2990 - Requested changes, expanded test coverage, eliminated possible code-smells."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODQ2NTMw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#pullrequestreview-435846530", "createdAt": "2020-06-23T14:33:59Z", "commit": {"oid": "3c22155af298eb0679e86e7129458cc8f8e50e37"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NjQwNTIy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#pullrequestreview-436640522", "createdAt": "2020-06-24T13:22:54Z", "commit": {"oid": "3c22155af298eb0679e86e7129458cc8f8e50e37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzY4NTk3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3341#pullrequestreview-437368597", "createdAt": "2020-06-25T10:33:13Z", "commit": {"oid": "3c22155af298eb0679e86e7129458cc8f8e50e37"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 435, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}