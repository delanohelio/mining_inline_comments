{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTU1OTI2", "number": 3331, "title": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "bodyText": "Command to be executed on saveFile()\n\n\nUpdating VersionRecordManager and originalSourceHash after successful save operation\n\n\nEnsemble PR:\nkiegroup/appformer#996", "createdAt": "2020-06-16T11:37:26Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331", "merged": true, "mergeCommit": {"oid": "d447086242dfec5a93d56e2b85ff23527a1c5477"}, "closed": true, "closedAt": "2020-07-24T14:53:35Z", "author": {"login": "akumar074"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwZqDAABqjM0OTkwMjE1MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4FQhogFqTQ1NDk1MzYyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7912c24220c9ba19f6d39cfffcb8161554f334ae", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7912c24220c9ba19f6d39cfffcb8161554f334ae", "committedDate": "2020-06-16T11:36:18Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package\n\n * Command to be execute on saveFile()\n\n * Updating VersionRecordManager and originalSourceHash after successful save operation"}, "afterCommit": {"oid": "ec3be1856a06b818c07e44635504a2f1771c0658", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ec3be1856a06b818c07e44635504a2f1771c0658", "committedDate": "2020-06-30T18:05:15Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package\n\n * Command to be execute on saveFile()\n\n * Updating VersionRecordManager and originalSourceHash after successful save operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec3be1856a06b818c07e44635504a2f1771c0658", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ec3be1856a06b818c07e44635504a2f1771c0658", "committedDate": "2020-06-30T18:05:15Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package\n\n * Command to be execute on saveFile()\n\n * Updating VersionRecordManager and originalSourceHash after successful save operation"}, "afterCommit": {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cd5a27f5e745320e0dc7901d40e48be12bd6772a", "committedDate": "2020-07-15T07:33:25Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTAzMTIz", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#pullrequestreview-450103123", "createdAt": "2020-07-16T18:23:11Z", "commit": {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxODoyMzoxMVrOGy3Hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxODoyOTowM1rOGy3VgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NTA3MA==", "bodyText": "I would put this if block at the beginning of the method because there is no need to execute getModule and getPackage if path does not exist.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r455985070", "createdAt": "2020-07-16T18:23:11Z", "author": {"login": "caponetto"}, "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-backend/src/main/java/org/kie/workbench/common/screens/datamodeller/backend/server/indexing/JavaFileIndexer.java", "diffHunk": "@@ -102,6 +102,10 @@ public IndexBuilder fillIndexBuilder(final Path path) throws Exception {\n             return null;\n         }\n \n+        if (!ioService.exists(path)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NTczNg==", "bodyText": "Consider adding a log message and creating a unit test that exercises this new condition.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r455985736", "createdAt": "2020-07-16T18:24:16Z", "author": {"login": "caponetto"}, "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-backend/src/main/java/org/kie/workbench/common/screens/datamodeller/backend/server/indexing/JavaFileIndexer.java", "diffHunk": "@@ -102,6 +102,10 @@ public IndexBuilder fillIndexBuilder(final Path path) throws Exception {\n             return null;\n         }\n \n+        if (!ioService.exists(path)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4ODYwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                  () -> getSaveFileCommand(newTypeInfo).execute(),\n          \n          \n            \n                                                  getSaveFileCommand(newTypeInfo),\n          \n      \n    \n    \n  \n\nIt makes more sense to pass the function itself since it returns a Command.\nSame for the others below.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r455988609", "createdAt": "2020-07-16T18:29:03Z", "author": {"login": "caponetto"}, "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-client/src/main/java/org/kie/workbench/common/screens/datamodeller/client/DataModelerScreenPresenter.java", "diffHunk": "@@ -545,20 +545,20 @@ private void saveFile(final JavaTypeInfo newTypeInfo) {\n         if (hasPackageNameChanged(newTypeInfo)) {\n             view.showYesNoCancelPopup(CommonConstants.INSTANCE.Information(),\n                                       Constants.INSTANCE.modelEditor_confirm_file_package_refactoring(newTypeInfo.getPackageName()),\n-                                      () -> getSaveFileCommand(newTypeInfo),\n+                                      () -> getSaveFileCommand(newTypeInfo).execute(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cd5a27f5e745320e0dc7901d40e48be12bd6772a", "committedDate": "2020-07-15T07:33:25Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}, "afterCommit": {"oid": "bffd1e7320c26ada258a87cb06140a05084bdf20", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bffd1e7320c26ada258a87cb06140a05084bdf20", "committedDate": "2020-07-17T15:48:35Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bffd1e7320c26ada258a87cb06140a05084bdf20", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bffd1e7320c26ada258a87cb06140a05084bdf20", "committedDate": "2020-07-17T15:48:35Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}, "afterCommit": {"oid": "afa889d04e5db8410df473345e2d22e711bfaeab", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/afa889d04e5db8410df473345e2d22e711bfaeab", "committedDate": "2020-07-18T12:41:00Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03ccfb85d76143a354233aeb6463493e91afbf1a", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/03ccfb85d76143a354233aeb6463493e91afbf1a", "committedDate": "2020-07-21T13:53:58Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82bd6e5e6792fc4a4b70bc9ef14ddeb5f97e27ec", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/82bd6e5e6792fc4a4b70bc9ef14ddeb5f97e27ec", "committedDate": "2020-07-21T13:44:45Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}, "afterCommit": {"oid": "e7a7ec4307ed3b9520c841af3737a1d8d2ab3cee", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e7a7ec4307ed3b9520c841af3737a1d8d2ab3cee", "committedDate": "2020-07-21T13:53:58Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "720ecbba9784069f86086128285423cdcee60838", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/720ecbba9784069f86086128285423cdcee60838", "committedDate": "2020-07-21T13:59:06Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7a7ec4307ed3b9520c841af3737a1d8d2ab3cee", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e7a7ec4307ed3b9520c841af3737a1d8d2ab3cee", "committedDate": "2020-07-21T13:53:58Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}, "afterCommit": {"oid": "720ecbba9784069f86086128285423cdcee60838", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/720ecbba9784069f86086128285423cdcee60838", "committedDate": "2020-07-21T13:59:06Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTE3ODY3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#pullrequestreview-452517867", "createdAt": "2020-07-21T14:30:57Z", "commit": {"oid": "720ecbba9784069f86086128285423cdcee60838"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDozMDo1N1rOG060zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDozMDo1N1rOG060zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0MjkyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\n          \n          \n            \n            \n          \n          \n            \n            import org.junit.Assert;\n          \n          \n            \n            import org.kie.workbench.common.services.refactoring.backend.server.indexing.IndexBuilder;\n          \n          \n            \n            import org.uberfire.java.nio.file.Path;\n          \n          \n            \n            \n          \n          \n            \n            import org.junit.Test;\n          \n          \n            \n            import org.mockito.Mockito;\n          \n          \n            \n            import org.uberfire.io.IOService;\n          \n          \n            \n            \n          \n          \n            \n            public class JavaFileIndexerTest {\n          \n          \n            \n            \n          \n          \n            \n                @Test\n          \n          \n            \n                public void testFillIndexBuilderWithUnavailablePath () throws Exception {\n          \n          \n            \n                    final IOService ioService = Mockito.mock(IOService.class);\n          \n          \n            \n                    final JavaFileIndexer indexer = Mockito.mock(JavaFileIndexer.class);\n          \n          \n            \n                    final Path mockPath = Mockito.mock(Path.class);\n          \n          \n            \n                    Mockito.when(ioService.exists(mockPath)).thenReturn(false);\n          \n          \n            \n                    final IndexBuilder builder = indexer.fillIndexBuilder(mockPath);\n          \n          \n            \n                    Assert.assertNull(builder);\n          \n          \n            \n                }\n          \n          \n            \n            }\n          \n          \n            \n            /*\n          \n          \n            \n             * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n          \n          \n            \n             *\n          \n          \n            \n             * Licensed under the Apache License, Version 2.0 (the \"License\");\n          \n          \n            \n             * you may not use this file except in compliance with the License.\n          \n          \n            \n             * You may obtain a copy of the License at\n          \n          \n            \n             *\n          \n          \n            \n             *     http://www.apache.org/licenses/LICENSE-2.0\n          \n          \n            \n             *\n          \n          \n            \n             * Unless required by applicable law or agreed to in writing, software\n          \n          \n            \n             * distributed under the License is distributed on an \"AS IS\" BASIS,\n          \n          \n            \n             * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          \n          \n            \n             * See the License for the specific language governing permissions and\n          \n          \n            \n             * limitations under the License.\n          \n          \n            \n             */\n          \n          \n            \n            \n          \n          \n            \n            package org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\n          \n          \n            \n            \n          \n          \n            \n            import org.junit.Test;\n          \n          \n            \n            import org.junit.runner.RunWith;\n          \n          \n            \n            import org.mockito.InjectMocks;\n          \n          \n            \n            import org.mockito.Mock;\n          \n          \n            \n            import org.mockito.runners.MockitoJUnitRunner;\n          \n          \n            \n            import org.uberfire.io.IOService;\n          \n          \n            \n            import org.uberfire.java.nio.file.Path;\n          \n          \n            \n            \n          \n          \n            \n            import static org.junit.Assert.assertNull;\n          \n          \n            \n            import static org.mockito.Mockito.mock;\n          \n          \n            \n            import static org.mockito.Mockito.when;\n          \n          \n            \n            \n          \n          \n            \n            @RunWith(MockitoJUnitRunner.class)\n          \n          \n            \n            public class JavaFileIndexerTest {\n          \n          \n            \n            \n          \n          \n            \n                @Mock\n          \n          \n            \n                private IOService ioService;\n          \n          \n            \n            \n          \n          \n            \n                @InjectMocks\n          \n          \n            \n                private JavaFileIndexer indexer;\n          \n          \n            \n            \n          \n          \n            \n                @Test\n          \n          \n            \n                public void testFillIndexBuilderWithUnavailablePath() throws Exception {\n          \n          \n            \n                    final Path mockPath = mock(Path.class);\n          \n          \n            \n            \n          \n          \n            \n                    when(ioService.exists(mockPath)).thenReturn(false);\n          \n          \n            \n            \n          \n          \n            \n                    assertNull(indexer.fillIndexBuilder(mockPath));\n          \n          \n            \n                }\n          \n          \n            \n            }\n          \n      \n    \n    \n  \n\nConsider this code as a suggestion.\nI've simplified things a little bit and also added the copyright header.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r458142926", "createdAt": "2020-07-21T14:30:57Z", "author": {"login": "caponetto"}, "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-backend/src/test/java/org/kie/workbench/common/screens/datamodeller/backend/server/indexing/JavaFileIndexerTest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\n+\n+import org.junit.Assert;\n+import org.kie.workbench.common.services.refactoring.backend.server.indexing.IndexBuilder;\n+import org.uberfire.java.nio.file.Path;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.uberfire.io.IOService;\n+\n+public class JavaFileIndexerTest {\n+\n+    @Test\n+    public void testFillIndexBuilderWithUnavailablePath () throws Exception {\n+        final IOService ioService = Mockito.mock(IOService.class);\n+        final JavaFileIndexer indexer = Mockito.mock(JavaFileIndexer.class);\n+        final Path mockPath = Mockito.mock(Path.class);\n+        Mockito.when(ioService.exists(mockPath)).thenReturn(false);\n+        final IndexBuilder builder = indexer.fillIndexBuilder(mockPath);\n+        Assert.assertNull(builder);\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "720ecbba9784069f86086128285423cdcee60838"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed60b49d9a03ba081ccc2b725e7f979847f9d7e7", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ed60b49d9a03ba081ccc2b725e7f979847f9d7e7", "committedDate": "2020-07-21T17:20:40Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b5c89c0c9d20dc231420dc94dce7281b35969b8", "author": {"user": {"login": "akumar074", "name": "Abhishek Kumar"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3b5c89c0c9d20dc231420dc94dce7281b35969b8", "committedDate": "2020-07-21T18:55:13Z", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTk1MDM5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#pullrequestreview-453195039", "createdAt": "2020-07-22T10:34:22Z", "commit": {"oid": "3b5c89c0c9d20dc231420dc94dce7281b35969b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODkxNzEx", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#pullrequestreview-453891711", "createdAt": "2020-07-23T07:29:54Z", "commit": {"oid": "3b5c89c0c9d20dc231420dc94dce7281b35969b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTUzNjI3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#pullrequestreview-454953627", "createdAt": "2020-07-24T14:53:25Z", "commit": {"oid": "3b5c89c0c9d20dc231420dc94dce7281b35969b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 422, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}