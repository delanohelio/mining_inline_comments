{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTEzNTgw", "number": 3464, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjozOTo1MFrOE0yd4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDozMzoxNlrOE3ZvQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzg4MjU2OnYy", "diffSide": "LEFT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/grid/columns/factory/dom/MonacoEditorDOMElementTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjozOTo1MFrOHss-zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzo0MjoyNlrOHxBzrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzNjM2NA==", "bodyText": "where is the equivalent of this test? Cause the functionality from onMonacoLoaded method now is moved (but retained) into setupInternalComponent method - we should not throw away test coverage.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3464#discussion_r516636364", "createdAt": "2020-11-03T12:39:50Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/grid/columns/factory/dom/MonacoEditorDOMElementTest.java", "diffHunk": "@@ -128,54 +122,18 @@ public void testSetupContainerComponent() {\n     @Test\n     public void testSetupInternalComponent() {\n \n-        final MonacoEditorInitializer editorInitializer = mock(MonacoEditorInitializer.class);\n         final Element element = mock(Element.class);\n         final Style style = mock(Style.class);\n-        final Consumer<Monaco> onMonacoLoaded = m -> {/* Nothing. */};\n+        final elemental2.dom.Element mockedElement = mock(elemental2.dom.Element.class);\n \n-        doReturn(editorInitializer).when(domElement).makeMonacoEditorInitializer();\n-        doReturn(onMonacoLoaded).when(domElement).onMonacoLoaded();\n         when(widget.getElement()).thenReturn(element);\n         when(element.getStyle()).thenReturn(style);\n+        when(domElement.uncheckedCast(any())).thenReturn(mockedElement);\n \n         domElement.setupInternalComponent();\n \n         verify(style).setWidth(100, PCT);\n         verify(style).setHeight(100, PCT);\n-        verify(editorInitializer).require(onMonacoLoaded);\n-    }\n-\n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2df8ca798e9a23db752a5b0c12ac649eb3b8b8"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MjYxNw==", "bodyText": "I've now moved the checks to the setupInternalComponent test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3464#discussion_r517542617", "createdAt": "2020-11-04T18:20:18Z", "author": {"login": "paulovmr"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/grid/columns/factory/dom/MonacoEditorDOMElementTest.java", "diffHunk": "@@ -128,54 +122,18 @@ public void testSetupContainerComponent() {\n     @Test\n     public void testSetupInternalComponent() {\n \n-        final MonacoEditorInitializer editorInitializer = mock(MonacoEditorInitializer.class);\n         final Element element = mock(Element.class);\n         final Style style = mock(Style.class);\n-        final Consumer<Monaco> onMonacoLoaded = m -> {/* Nothing. */};\n+        final elemental2.dom.Element mockedElement = mock(elemental2.dom.Element.class);\n \n-        doReturn(editorInitializer).when(domElement).makeMonacoEditorInitializer();\n-        doReturn(onMonacoLoaded).when(domElement).onMonacoLoaded();\n         when(widget.getElement()).thenReturn(element);\n         when(element.getStyle()).thenReturn(style);\n+        when(domElement.uncheckedCast(any())).thenReturn(mockedElement);\n \n         domElement.setupInternalComponent();\n \n         verify(style).setWidth(100, PCT);\n         verify(style).setHeight(100, PCT);\n-        verify(editorInitializer).require(onMonacoLoaded);\n-    }\n-\n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzNjM2NA=="}, "originalCommit": {"oid": "3e2df8ca798e9a23db752a5b0c12ac649eb3b8b8"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE3MTg4Nw==", "bodyText": "Thanks", "url": "https://github.com/kiegroup/kie-wb-common/pull/3464#discussion_r521171887", "createdAt": "2020-11-11T07:42:26Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/grid/columns/factory/dom/MonacoEditorDOMElementTest.java", "diffHunk": "@@ -128,54 +122,18 @@ public void testSetupContainerComponent() {\n     @Test\n     public void testSetupInternalComponent() {\n \n-        final MonacoEditorInitializer editorInitializer = mock(MonacoEditorInitializer.class);\n         final Element element = mock(Element.class);\n         final Style style = mock(Style.class);\n-        final Consumer<Monaco> onMonacoLoaded = m -> {/* Nothing. */};\n+        final elemental2.dom.Element mockedElement = mock(elemental2.dom.Element.class);\n \n-        doReturn(editorInitializer).when(domElement).makeMonacoEditorInitializer();\n-        doReturn(onMonacoLoaded).when(domElement).onMonacoLoaded();\n         when(widget.getElement()).thenReturn(element);\n         when(element.getStyle()).thenReturn(style);\n+        when(domElement.uncheckedCast(any())).thenReturn(mockedElement);\n \n         domElement.setupInternalComponent();\n \n         verify(style).setWidth(100, PCT);\n         verify(style).setHeight(100, PCT);\n-        verify(editorInitializer).require(onMonacoLoaded);\n-    }\n-\n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzNjM2NA=="}, "originalCommit": {"oid": "3e2df8ca798e9a23db752a5b0c12ac649eb3b8b8"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTI4ODM0OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/components/monaco_editor/MonacoEditorView.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDozMzoxNlrOHwujGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDozMzoxNlrOHwujGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1NjM0NQ==", "bodyText": "I believe we can remove this parameter since we're not using it anymore :-)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3464#discussion_r520856345", "createdAt": "2020-11-10T20:33:16Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/components/monaco_editor/MonacoEditorView.java", "diffHunk": "@@ -110,7 +110,11 @@ public String getLanguage() {\n     public void load(String[] modules,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ae07fc9279a54301b118b6e16c676c1fbffc48"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1264, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}