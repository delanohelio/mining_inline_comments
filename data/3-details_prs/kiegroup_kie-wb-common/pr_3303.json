{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTg4MTgy", "number": 3303, "title": "DROOLS-4993: [DMN Designer] Code Completion - add keywords", "bodyText": "Please refer to: https://issues.redhat.com/browse/DROOLS-4993\nIssue description: FEEL code completion should present reserved keywords\nProposed solution: Give MonacoPropertiesFactory.java the ability to return reserved keywords as suggestions.", "createdAt": "2020-05-14T13:12:42Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303", "merged": true, "mergeCommit": {"oid": "bace3bfdedd41e89ec8760041f52382f8727e82e"}, "closed": true, "closedAt": "2020-05-18T15:43:20Z", "author": {"login": "vpellegrino"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg6KsbAH2gAyNDE3OTg4MTgyOmVmY2EzZjhmOWYwOGJlOWZlOGMwYTkyZWZhNjRlNzk3MWUwZGI5MGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcihxTzAFqTQxMzcxNDQwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "efca3f8f9f08be9fe8c0a92efa64e7971e0db90a", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/efca3f8f9f08be9fe8c0a92efa64e7971e0db90a", "committedDate": "2020-05-13T14:57:50Z", "message": "Moving FEEL reserved keyword list to dmn-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e423881ec182a7746cb9dd5e5467d3b4d5efb8b", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7e423881ec182a7746cb9dd5e5467d3b4d5efb8b", "committedDate": "2020-05-13T14:59:03Z", "message": "Adding reserved keywords as suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85bcc1d99a3fecad9a077ccef02d7a100c79c7e4", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/85bcc1d99a3fecad9a077ccef02d7a100c79c7e4", "committedDate": "2020-05-14T06:43:35Z", "message": "Highlight FEEL reserved keywords during typing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzU1NjE2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#pullrequestreview-412355616", "createdAt": "2020-05-15T05:25:32Z", "commit": {"oid": "85bcc1d99a3fecad9a077ccef02d7a100c79c7e4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNToyNTozMlrOGV26oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNTozMTowMVrOGV3BBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3MzAyNA==", "bodyText": "Does this mean we previously offered in autocompletion bigger snippet, e.g. if then else but now we will offer just single words if, then and else separately?\nOr the row notation is just tricky and no change, but amount of words.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#discussion_r425573024", "createdAt": "2020-05-15T05:25:32Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/widgets/codecompletion/MonacoPropertiesFactory.java", "diffHunk": "@@ -180,21 +184,25 @@ public JSONArray getRoot() {\n         push(root, row(\"[0-9]+\", \"feel-numeric\"));\n         push(root, row(\"(?:\\\\\\\"(?:.*?)\\\\\\\")\", \"feel-string\"));\n         push(root, row(\"(?:(?:[a-z ]+\\\\()|(?:\\\\()|(?:\\\\)))\", \"feel-function\"));\n-        push(root, row(\"(?:(\\\\bif\\\\b)|(\\\\bthen\\\\b)|(\\\\belse\\\\b))\", \"feel-keyword\"));\n-        push(root, row(\"(?:(\\\\bfor\\\\b)|(\\\\bin\\\\b)|(\\\\breturn\\\\b))\", \"feel-keyword\"));\n+        push(root, row(\"(?:(\\\\b\" + String.join(\"\\\\b)|(\\\\b\", FEEL_RESERVED_KEYWORDS) + \"\\\\b))\", \"feel-keyword\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bcc1d99a3fecad9a077ccef02d7a100c79c7e4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NDEzMg==", "bodyText": "here it shouldn't be keyword rather than function?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#discussion_r425574132", "createdAt": "2020-05-15T05:29:29Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/codecompletion/MonacoPropertiesFactoryTest.java", "diffHunk": "@@ -221,8 +221,55 @@ public void testGetRules() {\n     public void testGetSuggestions() {\n \n         final JSONArray expectedSuggestions = mock(JSONArray.class);\n-        final List<JSONValue> functions = new ArrayList<>();\n-        final List<List<String>> functionSuggestions = asList(\n+        final List<JSONValue> suggestions = new ArrayList<>();\n+        final List<String> variableSuggestions = buildVariableSuggestions();\n+\n+        when(this.variableSuggestions.getSuggestions()).thenReturn(variableSuggestions);\n+\n+        buildKeywordSuggestions().forEach(suggestion -> {\n+            final JSONValue function = mock(JSONValue.class);\n+            suggestions.add(function);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bcc1d99a3fecad9a077ccef02d7a100c79c7e4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NDQyMg==", "bodyText": "also here maybe variable instead of function?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#discussion_r425574422", "createdAt": "2020-05-15T05:30:22Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/codecompletion/MonacoPropertiesFactoryTest.java", "diffHunk": "@@ -221,8 +221,55 @@ public void testGetRules() {\n     public void testGetSuggestions() {\n \n         final JSONArray expectedSuggestions = mock(JSONArray.class);\n-        final List<JSONValue> functions = new ArrayList<>();\n-        final List<List<String>> functionSuggestions = asList(\n+        final List<JSONValue> suggestions = new ArrayList<>();\n+        final List<String> variableSuggestions = buildVariableSuggestions();\n+\n+        when(this.variableSuggestions.getSuggestions()).thenReturn(variableSuggestions);\n+\n+        buildKeywordSuggestions().forEach(suggestion -> {\n+            final JSONValue function = mock(JSONValue.class);\n+            suggestions.add(function);\n+            doReturn(function).when(factory).getKeywordSuggestion(suggestion);\n+        });\n+\n+        buildFunctionSuggestions().forEach(suggestion -> {\n+            final JSONValue function = mock(JSONValue.class);\n+            suggestions.add(function);\n+            doReturn(function).when(factory).getFunctionSuggestion(suggestion.get(0), suggestion.get(1));\n+        });\n+\n+        variableSuggestions.forEach(suggestion -> {\n+            final JSONValue function = mock(JSONValue.class);\n+            suggestions.add(function);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bcc1d99a3fecad9a077ccef02d7a100c79c7e4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NDY2Mw==", "bodyText": "is it fine we do not use whole FEEL_RESERVED_KEYWORDS", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#discussion_r425574663", "createdAt": "2020-05-15T05:31:01Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/widgets/codecompletion/MonacoPropertiesFactoryTest.java", "diffHunk": "@@ -364,40 +411,43 @@ public void testGetSuggestions() {\n                 asList(\"upper case(string)\", \"upper case($1)\"),\n                 asList(\"week of year(date)\", \"week of year($1)\"),\n                 asList(\"years and months duration(from, to)\", \"years and months duration($1, $2)\"));\n-        final List<String> variableSuggestions = asList(\n-                \"Decision-1\",\n-                \"Decision-2\",\n-                \"Decision-3\",\n-                \"Input-Data-1\",\n-                \"Input-Data-2\",\n-                \"Input-Data-3\",\n-                \"Data-Type-1\",\n-                \"Data-Type-2\",\n-                \"Data-Type-3\"\n-        );\n+    }\n \n-        when(this.variableSuggestions.getSuggestions()).thenReturn(variableSuggestions);\n+    private List<String> buildKeywordSuggestions() {\n+        return asList(\n+                \"in\",\n+                \"or\",\n+                \"and\",\n+                \"between\",\n+                \"if\",\n+                \"then\",\n+                \"else\",\n+                \"for\",\n+                \"return\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bcc1d99a3fecad9a077ccef02d7a100c79c7e4"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01adbfcea72e885e9d32994da74f169852fd0b1f", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/01adbfcea72e885e9d32994da74f169852fd0b1f", "committedDate": "2020-05-15T08:16:19Z", "message": "Making FEEL_RESERVED_KEYWORDS to solve sonar vulnerability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d28afcc710bb3601c245f7ca46ccfadd695d4d0", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5d28afcc710bb3601c245f7ca46ccfadd695d4d0", "committedDate": "2020-05-15T08:21:43Z", "message": "Using whole FEEL_RESERVED_KEYWORDS in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a677776b2509dbf8b4df03e96e2547d6d1c085", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/39a677776b2509dbf8b4df03e96e2547d6d1c085", "committedDate": "2020-05-15T08:23:42Z", "message": "Using proper variable names in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTU5ODQ2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#pullrequestreview-412559846", "createdAt": "2020-05-15T11:19:16Z", "commit": {"oid": "39a677776b2509dbf8b4df03e96e2547d6d1c085"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMToxOToxN1rOGWAydA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMToxOToxN1rOGWAydA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTczNDc3Mg==", "bodyText": "Thank you for solving that issue reported by sonarcloud @vpellegrino . I am just wondering if it is not \"too heavy hammer\" to solve. I am wondering if we can not use just build in java constructs and avoid adding dependency/import form another library.\nDo not know, just asking. Maybe your solution is better. What is your opinon?\n[1]\npublic static final List<String> FEEL_RESERVED_KEYWORDS = Collections.unmodifiableList(Arrays.asList(\n            \"for\", \"return\", \"if\", \"then\", \"else\", \"some\", \"every\", \"satisfies\", \"instance\", \"of\",\n            \"in\", \"function\", \"external\", \"or\", \"and\", \"between\", \"not\", \"null\", \"true\", \"false\"\n    ));", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#discussion_r425734772", "createdAt": "2020-05-15T11:19:17Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/widgets/codecompletion/MonacoFEELInitializer.java", "diffHunk": "@@ -33,9 +34,12 @@\n @ApplicationScoped\n public class MonacoFEELInitializer {\n \n-    private MonacoFEELInitializationStatus initializationStatus = NOT_INITIALIZED;\n-\n+    public static final ImmutableList<String> FEEL_RESERVED_KEYWORDS = ImmutableList.of(\n+            \"for\", \"return\", \"if\", \"then\", \"else\", \"some\", \"every\", \"satisfies\", \"instance\", \"of\",\n+            \"in\", \"function\", \"external\", \"or\", \"and\", \"between\", \"not\", \"null\", \"true\", \"false\"\n+    );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a677776b2509dbf8b4df03e96e2547d6d1c085"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTcyNDU3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#pullrequestreview-412572457", "createdAt": "2020-05-15T11:41:03Z", "commit": {"oid": "39a677776b2509dbf8b4df03e96e2547d6d1c085"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyODI4NDE5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#pullrequestreview-412828419", "createdAt": "2020-05-15T17:17:07Z", "commit": {"oid": "39a677776b2509dbf8b4df03e96e2547d6d1c085"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6542037e77409aad04da59e3d44b297d4871a6aa", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6542037e77409aad04da59e3d44b297d4871a6aa", "committedDate": "2020-05-17T13:33:03Z", "message": "Creating constants for repeating keys"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjY4ODYx", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#pullrequestreview-413668861", "createdAt": "2020-05-18T14:50:16Z", "commit": {"oid": "6542037e77409aad04da59e3d44b297d4871a6aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzE0NDA5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3303#pullrequestreview-413714409", "createdAt": "2020-05-18T15:40:14Z", "commit": {"oid": "6542037e77409aad04da59e3d44b297d4871a6aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 382, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}