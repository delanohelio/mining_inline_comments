{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzODc2NTQ3", "number": 3361, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjoyMDo1NFrOEVRlsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDozMDoyOFrOEWEwFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQzNzI5OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjoyMDo1NFrOG77ybw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNDo1M1rOG8zXKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5ODczNQ==", "bodyText": "Couldn't we implement temporarily as return contextProvider != null && contextProvider.getChannel() == GITHUB; ?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465498735", "createdAt": "2020-08-05T06:20:54Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+import javax.inject.Inject;\n+\n+import org.appformer.client.context.EditorContextProvider;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.stunner.core.client.ReadOnlyProvider;\n+\n+import static org.appformer.client.context.Channel.GITHUB;\n+\n+@Alternative\n+@ApplicationScoped\n+@DMNEditor\n+public class ReadOnlyProviderImpl implements ReadOnlyProvider {\n+\n+    private final EditorContextProvider contextProvider;\n+\n+    @Inject\n+    public ReadOnlyProviderImpl(final EditorContextProvider contextProvider) {\n+        this.contextProvider = contextProvider;\n+    }\n+\n+    @Override\n+    public boolean isReadOnlyDiagram() {\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61548de8c7f9ae42dd7278c39fca815c61f797f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwOTI1OQ==", "bodyText": "No, because it would make the editor always be in read only mode in Chrome and we been warned from the guys from Kogito team that this is not the expected behavior.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r466409259", "createdAt": "2020-08-06T13:24:53Z", "author": {"login": "danielzhe"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+import javax.inject.Inject;\n+\n+import org.appformer.client.context.EditorContextProvider;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.stunner.core.client.ReadOnlyProvider;\n+\n+import static org.appformer.client.context.Channel.GITHUB;\n+\n+@Alternative\n+@ApplicationScoped\n+@DMNEditor\n+public class ReadOnlyProviderImpl implements ReadOnlyProvider {\n+\n+    private final EditorContextProvider contextProvider;\n+\n+    @Inject\n+    public ReadOnlyProviderImpl(final EditorContextProvider contextProvider) {\n+        this.contextProvider = contextProvider;\n+    }\n+\n+    @Override\n+    public boolean isReadOnlyDiagram() {\n+        return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5ODczNQ=="}, "originalCommit": {"oid": "f61548de8c7f9ae42dd7278c39fca815c61f797f"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQ0MTYwOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjoyMjo0MVrOG7704Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjoyMjo0MVrOG7704Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5OTM2MQ==", "bodyText": "If my comment about isReadOnlyDiagram impl will be not applied, this needs to be removed.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465499361", "createdAt": "2020-08-05T06:22:41Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+import javax.inject.Inject;\n+\n+import org.appformer.client.context.EditorContextProvider;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.stunner.core.client.ReadOnlyProvider;\n+\n+import static org.appformer.client.context.Channel.GITHUB;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61548de8c7f9ae42dd7278c39fca815c61f797f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQ2NzE1OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozNDowMFrOG78E8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozNDowMFrOG78E8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwMzQ3Mw==", "bodyText": "As is single item list, we could use return Collections.singletonList(commonActionsToolboxFactories.get()); as we are just reading created list.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465503473", "createdAt": "2020-08-05T06:34:00Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java", "diffHunk": "@@ -35,18 +36,25 @@\n \n     private final ManagedInstance<ActionsToolboxFactory> flowActionsToolboxFactories;\n     private final ManagedInstance<ActionsToolboxFactory> commonActionsToolboxFactories;\n+    private final ReadOnlyProvider readonlyProvider;\n \n     @Inject\n     public DMNToolboxControl(final @Any @DMNFlowActionsToolbox ManagedInstance<ActionsToolboxFactory> flowActionsToolboxFactories,\n-                             final @Any @DMNCommonActionsToolbox ManagedInstance<ActionsToolboxFactory> commonActionsToolboxFactories) {\n+                             final @Any @DMNCommonActionsToolbox ManagedInstance<ActionsToolboxFactory> commonActionsToolboxFactories,\n+                             final @Any @DMNEditor ReadOnlyProvider readOnlyProvider) {\n         this.flowActionsToolboxFactories = flowActionsToolboxFactories;\n         this.commonActionsToolboxFactories = commonActionsToolboxFactories;\n+        this.readonlyProvider = readOnlyProvider;\n     }\n \n     @Override\n     protected List<ActionsToolboxFactory> getFactories() {\n-        return Arrays.asList(flowActionsToolboxFactories.get(),\n-                             commonActionsToolboxFactories.get());\n+        if (readonlyProvider.isReadOnlyDiagram()) {\n+            return Arrays.asList(commonActionsToolboxFactories.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61548de8c7f9ae42dd7278c39fca815c61f797f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODQ3OTExOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozMzowN1rOG8Fv0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozMzowN1rOG8Fv0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTkwNQ==", "bodyText": "unused import", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465661905", "createdAt": "2020-08-05T11:33:07Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.appformer.client.context.EditorContextProvider;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+\n+import static org.appformer.client.context.Channel.DEFAULT;\n+import static org.appformer.client.context.Channel.DESKTOP;\n+import static org.appformer.client.context.Channel.EMBEDDED;\n+import static org.appformer.client.context.Channel.GITHUB;\n+import static org.appformer.client.context.Channel.ONLINE;\n+import static org.appformer.client.context.Channel.VSCODE;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61548de8c7f9ae42dd7278c39fca815c61f797f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTgxOTc1OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDozMDoyOFrOG9MFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDozMDoyOFrOG9MFwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNDQwMQ==", "bodyText": "please remove this comment", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r466814401", "createdAt": "2020-08-07T04:30:28Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java", "diffHunk": "@@ -109,10 +114,11 @@ public void setup(final boolean isOnlyVisualChangeAllowed) {\n         when(sessionPresenter.getDisplayer()).thenReturn(sessionView);\n         when(sessionView.getView()).thenReturn(view);\n         when(editor.getView()).thenReturn(expressionEditorView);\n+        when(sessionPresenter.getPalette()).thenReturn(palette);\n \n         this.command = spy(getCommand(isOnlyVisualChangeAllowed));\n \n-        doNothing().when(command).hidePaletteWidget(any(Boolean.class));\n+        //doNothing().when(command).hidePaletteWidget(any(Boolean.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23549fda8aee6b7b192c1417b9efa0e9cb18075e"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1351, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}