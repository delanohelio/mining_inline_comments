{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTQyOTk3", "number": 3168, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1MDowN1rODhgvRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1Mzo1MFrODhgzjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDY1OTkxOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinitionEnricherTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1MDowOFrOFsSGew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOTozNDoyMFrOFsgdfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3ODIzNQ==", "bodyText": "Maybe I will shooot to my own leg, but in this case I have feeling having source and target as parameters of method would make the code more readable. WDYT?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3168#discussion_r381978235", "createdAt": "2020-02-20T12:50:08Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinitionEnricherTest.java", "diffHunk": "@@ -81,19 +87,46 @@\n \n     private InputData inputData2;\n \n+    private Decision decision1;\n+\n     @Before\n     public void setup() {\n         super.setup();\n \n         this.diagram = new DMNDiagram();\n         this.inputData1 = new InputData();\n         this.inputData2 = new InputData();\n+        this.decision1 = new Decision();\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void testModelEnrichmentWhenTopLevelDecisionTableWithDecision() {\n+        setupGraphWithDiagram();\n+        setupGraphWithDecision();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f50c865b72ef210fb11879a63caf4c400f1323d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxMzUwMA==", "bodyText": "Well... these methods replace the single setupGraph() method that used to exist (that set everything up for the tests). Now however, to be able to test just InputData or just Decision or both InputData and Decision I moved the separate setup codes to different methods and call the correct ones for each test.. I could refactor to take parameters but I'd simply be moving some code from inside the current setupXXX methods to outside it and then passing the result as a parameter. IMO it makes the setup less encapsulated.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3168#discussion_r382213500", "createdAt": "2020-02-20T19:34:20Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinitionEnricherTest.java", "diffHunk": "@@ -81,19 +87,46 @@\n \n     private InputData inputData2;\n \n+    private Decision decision1;\n+\n     @Before\n     public void setup() {\n         super.setup();\n \n         this.diagram = new DMNDiagram();\n         this.inputData1 = new InputData();\n         this.inputData2 = new InputData();\n+        this.decision1 = new Decision();\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void testModelEnrichmentWhenTopLevelDecisionTableWithDecision() {\n+        setupGraphWithDiagram();\n+        setupGraphWithDecision();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3ODIzNQ=="}, "originalCommit": {"oid": "8f50c865b72ef210fb11879a63caf4c400f1323d"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDY3MDg0OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinitionEnricherTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1Mzo1MFrOFsSNIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMDowNjoxOVrOFshcXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3OTkzNg==", "bodyText": "While here the parameters are not intuitive.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3168#discussion_r381979936", "createdAt": "2020-02-20T12:53:50Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinitionEnricherTest.java", "diffHunk": "@@ -81,19 +87,46 @@\n \n     private InputData inputData2;\n \n+    private Decision decision1;\n+\n     @Before\n     public void setup() {\n         super.setup();\n \n         this.diagram = new DMNDiagram();\n         this.inputData1 = new InputData();\n         this.inputData2 = new InputData();\n+        this.decision1 = new Decision();\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void testModelEnrichmentWhenTopLevelDecisionTableWithDecision() {\n+        setupGraphWithDiagram();\n+        setupGraphWithDecision();\n+\n+        final Optional<DecisionTable> oModel = definition.getModelClass();\n+        definition.enrich(Optional.of(NODE_UUID), decision, oModel);\n+\n+        final DecisionTable model = oModel.get();\n+        assertBasicEnrichment(model);\n+\n+        final List<InputClause> input = model.getInput();\n+        assertThat(input.size()).isEqualTo(1);\n+        assertThat(input.get(0).getInputExpression()).isInstanceOf(InputClauseLiteralExpression.class);\n+        assertThat(input.get(0).getInputExpression().getText().getValue()).isEqualTo(DECISION_NAME_1);\n+        assertThat(input.get(0).getInputExpression().getTypeRef()).isEqualTo(DECISION_QNAME_1);\n+\n+        assertStandardOutputClauseEnrichment(model);\n+        assertStandardDecisionRuleEnrichment(model, 1, 1);\n+        assertParentHierarchyEnrichment(model, 1, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f50c865b72ef210fb11879a63caf4c400f1323d"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyOTU5Nw==", "bodyText": "I've simplified the methods' signatures (to only need model).", "url": "https://github.com/kiegroup/kie-wb-common/pull/3168#discussion_r382229597", "createdAt": "2020-02-20T20:06:19Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinitionEnricherTest.java", "diffHunk": "@@ -81,19 +87,46 @@\n \n     private InputData inputData2;\n \n+    private Decision decision1;\n+\n     @Before\n     public void setup() {\n         super.setup();\n \n         this.diagram = new DMNDiagram();\n         this.inputData1 = new InputData();\n         this.inputData2 = new InputData();\n+        this.decision1 = new Decision();\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void testModelEnrichmentWhenTopLevelDecisionTableWithDecision() {\n+        setupGraphWithDiagram();\n+        setupGraphWithDecision();\n+\n+        final Optional<DecisionTable> oModel = definition.getModelClass();\n+        definition.enrich(Optional.of(NODE_UUID), decision, oModel);\n+\n+        final DecisionTable model = oModel.get();\n+        assertBasicEnrichment(model);\n+\n+        final List<InputClause> input = model.getInput();\n+        assertThat(input.size()).isEqualTo(1);\n+        assertThat(input.get(0).getInputExpression()).isInstanceOf(InputClauseLiteralExpression.class);\n+        assertThat(input.get(0).getInputExpression().getText().getValue()).isEqualTo(DECISION_NAME_1);\n+        assertThat(input.get(0).getInputExpression().getTypeRef()).isEqualTo(DECISION_QNAME_1);\n+\n+        assertStandardOutputClauseEnrichment(model);\n+        assertStandardDecisionRuleEnrichment(model, 1, 1);\n+        assertParentHierarchyEnrichment(model, 1, 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3OTkzNg=="}, "originalCommit": {"oid": "8f50c865b72ef210fb11879a63caf4c400f1323d"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1525, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}