{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjg0NTgx", "number": 3230, "title": "DROOLS-5045: [DMN Designer] Marshaller does not support DMN1.2 DecisionTable RuleAnnotation", "bodyText": "See: https://issues.redhat.com/browse/DROOLS-5045\n\nIf you open a file with rule that have the obsolete column \"Description\" it will be converted do the new rule annotation clause.\nThere's nothing in the spec that says that we need at least one rule annotation column, but we decided to use this approach to make it easier to the user, otherwise, when/where/how would we show the context menu to add annotation column?", "createdAt": "2020-03-19T23:29:33Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230", "merged": true, "mergeCommit": {"oid": "6a0065eea0eb7cb6f189772be3388b587d05c034"}, "closed": true, "closedAt": "2020-04-06T21:02:18Z", "author": {"login": "danielzhe"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPg6axgFqTM3ODUwMzI3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU6VQqgFqTM4ODAyODk3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NTAzMjcy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-378503272", "createdAt": "2020-03-20T13:55:43Z", "commit": {"oid": "d5dd26e841b4e61425beca93b3d46b81d3cd8fe7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5dd26e841b4e61425beca93b3d46b81d3cd8fe7", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d5dd26e841b4e61425beca93b3d46b81d3cd8fe7", "committedDate": "2020-03-19T23:17:55Z", "message": "DROOLS-5045: [DMN Designer] Marshaller does not support DMN1.2 DecisionTable RuleAnnotation"}, "afterCommit": {"oid": "c604b090ccb18a738c924348d8590512908865ff", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c604b090ccb18a738c924348d8590512908865ff", "committedDate": "2020-03-20T22:10:00Z", "message": "Fixing tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDc1MDAw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-379475000", "createdAt": "2020-03-23T14:21:15Z", "commit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoyMToxNVrOF6HnpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoyNTowMVrOF6HynQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4NjU2NA==", "bodyText": "@Bindable, @Definition and @FormDefinition and DomainObject all relate to instances of these classes appearing in the \"Properties Panel\". However since DecisionTableGrid.doAfterSelectionChange(..) and DecisionTableGrid.doAfterHeaderSelectionChange(..) are not calling BaseGrid.fireDomainObjectSelectionEvent(..) both RuleAnnotationClause and RuleAnnotationClauseText can have all these annotations/interfaces removed.\nIF you wanted RuleAnnotationClause to appear in the \"Properties Panel\" you would keep the annotations/interfaces and change DecisionTableGrid.doAfterHeaderSelectionChange(..) to call fireDomainObjectSelectionEvent(..) for the ANNOTATION_CLAUSES section.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396486564", "createdAt": "2020-03-23T14:21:15Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/RuleAnnotationClause.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.api.definition.model;\n+\n+import java.util.Set;\n+\n+import org.jboss.errai.common.client.api.annotations.Portable;\n+import org.jboss.errai.databinding.client.api.Bindable;\n+import org.kie.soup.commons.util.Sets;\n+import org.kie.workbench.common.dmn.api.definition.HasName;\n+import org.kie.workbench.common.dmn.api.property.dmn.Name;\n+import org.kie.workbench.common.dmn.api.resource.i18n.DMNAPIConstants;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.FieldParam;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.FormDefinition;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.FormField;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.i18n.I18nSettings;\n+import org.kie.workbench.common.forms.adf.definitions.settings.FieldPolicy;\n+import org.kie.workbench.common.stunner.core.definition.annotation.Definition;\n+import org.kie.workbench.common.stunner.core.definition.annotation.PropertySet;\n+import org.kie.workbench.common.stunner.core.definition.annotation.definition.Category;\n+import org.kie.workbench.common.stunner.core.definition.annotation.definition.Labels;\n+import org.kie.workbench.common.stunner.core.domainobject.DomainObject;\n+import org.kie.workbench.common.stunner.core.factory.graph.NodeFactory;\n+\n+import static org.kie.workbench.common.forms.adf.engine.shared.formGeneration.processing.fields.fieldInitializers.nestedForms.AbstractEmbeddedFormsInitializer.COLLAPSIBLE_CONTAINER;\n+import static org.kie.workbench.common.forms.adf.engine.shared.formGeneration.processing.fields.fieldInitializers.nestedForms.AbstractEmbeddedFormsInitializer.FIELD_CONTAINER_PARAM;\n+\n+@Portable\n+@Bindable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4OTM3Mw==", "bodyText": "This only adds a RuleAnnotationClause IF at least one existing row has a non-empty description.\nWhat happens if a DMN model is imported without any descriptions? We'd have no RuleAnnotationClause added and none could be added in the UI (as we need at least one RuleAnnotationClause column so that the context menu to add/remove others can be shown). I think we need to create a RuleAnnotationClause IF none exist; and copy the description to it (even if empty).", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396489373", "createdAt": "2020-03-23T14:25:01Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/definition/v1_1/DecisionTablePropertyConverter.java", "diffHunk": "@@ -39,6 +41,21 @@ public static DecisionTable wbFromDMN(final org.kie.dmn.model.api.DecisionTable\n         result.setDescription(description);\n         result.setTypeRef(typeRef);\n \n+        if (dmn.getRule().stream().anyMatch(r -> !StringUtils.isEmpty(r.getDescription()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTg2NjEw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-379586610", "createdAt": "2020-03-23T16:14:12Z", "commit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxNDoxMlrOF6M7Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjo0MjoyMlrOF6ONFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MzUzOA==", "bodyText": "Can this be package protected? It's only used by this class and the test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396573538", "createdAt": "2020-03-23T16:14:12Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/commands/expressions/types/dtable/AddRuleAnnotationClauseCommand.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.expressions.types.dtable;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionTable;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClause;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClauseText;\n+import org.kie.workbench.common.dmn.client.commands.VetoExecutionCommand;\n+import org.kie.workbench.common.dmn.client.commands.VetoUndoCommand;\n+import org.kie.workbench.common.dmn.client.commands.util.CommandUtils;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableDefaultValueUtilities;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapperHelper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.RuleAnnotationClauseColumn;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasGraphCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasViolation;\n+import org.kie.workbench.common.stunner.core.command.Command;\n+import org.kie.workbench.common.stunner.core.command.CommandResult;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandExecutionContext;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.graph.command.impl.AbstractGraphCommand;\n+import org.kie.workbench.common.stunner.core.rule.RuleViolation;\n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+import org.uberfire.ext.wires.core.grids.client.model.GridData;\n+\n+public class AddRuleAnnotationClauseCommand extends AbstractCanvasGraphCommand implements VetoExecutionCommand,\n+                                                                                          VetoUndoCommand {\n+\n+    private final DecisionTable decisionTable;\n+    private final RuleAnnotationClause ruleAnnotationClause;\n+    private final GridData uiModel;\n+    private final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier;\n+    private final int uiColumnIndex;\n+    private final DecisionTableUIModelMapper uiModelMapper;\n+    private final org.uberfire.mvp.Command executeCanvasOperation;\n+    private final org.uberfire.mvp.Command undoCanvasOperation;\n+    private String name;\n+\n+    private Optional<RuleAnnotationClauseColumn> uiModelColumn = Optional.empty();\n+\n+    public AddRuleAnnotationClauseCommand(final DecisionTable decisionTable,\n+                                          final RuleAnnotationClause ruleAnnotationClause,\n+                                          final GridData uiModel,\n+                                          final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier,\n+                                          final int uiColumnIndex,\n+                                          final DecisionTableUIModelMapper uiModelMapper,\n+                                          final org.uberfire.mvp.Command executeCanvasOperation,\n+                                          final org.uberfire.mvp.Command undoCanvasOperation) {\n+        this.decisionTable = decisionTable;\n+        this.ruleAnnotationClause = ruleAnnotationClause;\n+        this.uiModel = uiModel;\n+        this.uiModelColumnSupplier = uiModelColumnSupplier;\n+        this.uiColumnIndex = uiColumnIndex;\n+        this.uiModelMapper = uiModelMapper;\n+        this.executeCanvasOperation = executeCanvasOperation;\n+        this.undoCanvasOperation = undoCanvasOperation;\n+    }\n+\n+    public Optional<RuleAnnotationClauseColumn> getUiModelColumn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NDE3Mg==", "bodyText": "Can this be private (or at least package protected)? It's only used by this class.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396574172", "createdAt": "2020-03-23T16:15:00Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/commands/expressions/types/dtable/AddRuleAnnotationClauseCommand.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.expressions.types.dtable;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionTable;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClause;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClauseText;\n+import org.kie.workbench.common.dmn.client.commands.VetoExecutionCommand;\n+import org.kie.workbench.common.dmn.client.commands.VetoUndoCommand;\n+import org.kie.workbench.common.dmn.client.commands.util.CommandUtils;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableDefaultValueUtilities;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapperHelper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.RuleAnnotationClauseColumn;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasGraphCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasViolation;\n+import org.kie.workbench.common.stunner.core.command.Command;\n+import org.kie.workbench.common.stunner.core.command.CommandResult;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandExecutionContext;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.graph.command.impl.AbstractGraphCommand;\n+import org.kie.workbench.common.stunner.core.rule.RuleViolation;\n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+import org.uberfire.ext.wires.core.grids.client.model.GridData;\n+\n+public class AddRuleAnnotationClauseCommand extends AbstractCanvasGraphCommand implements VetoExecutionCommand,\n+                                                                                          VetoUndoCommand {\n+\n+    private final DecisionTable decisionTable;\n+    private final RuleAnnotationClause ruleAnnotationClause;\n+    private final GridData uiModel;\n+    private final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier;\n+    private final int uiColumnIndex;\n+    private final DecisionTableUIModelMapper uiModelMapper;\n+    private final org.uberfire.mvp.Command executeCanvasOperation;\n+    private final org.uberfire.mvp.Command undoCanvasOperation;\n+    private String name;\n+\n+    private Optional<RuleAnnotationClauseColumn> uiModelColumn = Optional.empty();\n+\n+    public AddRuleAnnotationClauseCommand(final DecisionTable decisionTable,\n+                                          final RuleAnnotationClause ruleAnnotationClause,\n+                                          final GridData uiModel,\n+                                          final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier,\n+                                          final int uiColumnIndex,\n+                                          final DecisionTableUIModelMapper uiModelMapper,\n+                                          final org.uberfire.mvp.Command executeCanvasOperation,\n+                                          final org.uberfire.mvp.Command undoCanvasOperation) {\n+        this.decisionTable = decisionTable;\n+        this.ruleAnnotationClause = ruleAnnotationClause;\n+        this.uiModel = uiModel;\n+        this.uiModelColumnSupplier = uiModelColumnSupplier;\n+        this.uiColumnIndex = uiColumnIndex;\n+        this.uiModelMapper = uiModelMapper;\n+        this.executeCanvasOperation = executeCanvasOperation;\n+        this.undoCanvasOperation = undoCanvasOperation;\n+    }\n+\n+    public Optional<RuleAnnotationClauseColumn> getUiModelColumn() {\n+        return uiModelColumn;\n+    }\n+\n+    public String getName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NjE5NA==", "bodyText": "In fact why do we need it at all!?\nIf it's only use is this class or the test, the value is know by the test already as it constructs the instance.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396576194", "createdAt": "2020-03-23T16:17:42Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/commands/expressions/types/dtable/AddRuleAnnotationClauseCommand.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.expressions.types.dtable;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionTable;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClause;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClauseText;\n+import org.kie.workbench.common.dmn.client.commands.VetoExecutionCommand;\n+import org.kie.workbench.common.dmn.client.commands.VetoUndoCommand;\n+import org.kie.workbench.common.dmn.client.commands.util.CommandUtils;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableDefaultValueUtilities;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapperHelper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.RuleAnnotationClauseColumn;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasGraphCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasViolation;\n+import org.kie.workbench.common.stunner.core.command.Command;\n+import org.kie.workbench.common.stunner.core.command.CommandResult;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandExecutionContext;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.graph.command.impl.AbstractGraphCommand;\n+import org.kie.workbench.common.stunner.core.rule.RuleViolation;\n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+import org.uberfire.ext.wires.core.grids.client.model.GridData;\n+\n+public class AddRuleAnnotationClauseCommand extends AbstractCanvasGraphCommand implements VetoExecutionCommand,\n+                                                                                          VetoUndoCommand {\n+\n+    private final DecisionTable decisionTable;\n+    private final RuleAnnotationClause ruleAnnotationClause;\n+    private final GridData uiModel;\n+    private final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier;\n+    private final int uiColumnIndex;\n+    private final DecisionTableUIModelMapper uiModelMapper;\n+    private final org.uberfire.mvp.Command executeCanvasOperation;\n+    private final org.uberfire.mvp.Command undoCanvasOperation;\n+    private String name;\n+\n+    private Optional<RuleAnnotationClauseColumn> uiModelColumn = Optional.empty();\n+\n+    public AddRuleAnnotationClauseCommand(final DecisionTable decisionTable,\n+                                          final RuleAnnotationClause ruleAnnotationClause,\n+                                          final GridData uiModel,\n+                                          final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier,\n+                                          final int uiColumnIndex,\n+                                          final DecisionTableUIModelMapper uiModelMapper,\n+                                          final org.uberfire.mvp.Command executeCanvasOperation,\n+                                          final org.uberfire.mvp.Command undoCanvasOperation) {\n+        this.decisionTable = decisionTable;\n+        this.ruleAnnotationClause = ruleAnnotationClause;\n+        this.uiModel = uiModel;\n+        this.uiModelColumnSupplier = uiModelColumnSupplier;\n+        this.uiColumnIndex = uiColumnIndex;\n+        this.uiModelMapper = uiModelMapper;\n+        this.executeCanvasOperation = executeCanvasOperation;\n+        this.undoCanvasOperation = undoCanvasOperation;\n+    }\n+\n+    public Optional<RuleAnnotationClauseColumn> getUiModelColumn() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MzUzOA=="}, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4NTA4OA==", "bodyText": "IIRC there's good reason the other add commands derive the name in the constructor and not at execution time. I also notice that add, add, rename, rename, undo, undo, undo, redo, redo, redo does not appear to work properly when I tried setting an expression to a Decision Table, add Annotation, add Annotation etc in the UI.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396585088", "createdAt": "2020-03-23T16:29:27Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/commands/expressions/types/dtable/AddRuleAnnotationClauseCommand.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.expressions.types.dtable;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionTable;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClause;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClauseText;\n+import org.kie.workbench.common.dmn.client.commands.VetoExecutionCommand;\n+import org.kie.workbench.common.dmn.client.commands.VetoUndoCommand;\n+import org.kie.workbench.common.dmn.client.commands.util.CommandUtils;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableDefaultValueUtilities;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapperHelper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.RuleAnnotationClauseColumn;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasGraphCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasViolation;\n+import org.kie.workbench.common.stunner.core.command.Command;\n+import org.kie.workbench.common.stunner.core.command.CommandResult;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandExecutionContext;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.graph.command.impl.AbstractGraphCommand;\n+import org.kie.workbench.common.stunner.core.rule.RuleViolation;\n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+import org.uberfire.ext.wires.core.grids.client.model.GridData;\n+\n+public class AddRuleAnnotationClauseCommand extends AbstractCanvasGraphCommand implements VetoExecutionCommand,\n+                                                                                          VetoUndoCommand {\n+\n+    private final DecisionTable decisionTable;\n+    private final RuleAnnotationClause ruleAnnotationClause;\n+    private final GridData uiModel;\n+    private final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier;\n+    private final int uiColumnIndex;\n+    private final DecisionTableUIModelMapper uiModelMapper;\n+    private final org.uberfire.mvp.Command executeCanvasOperation;\n+    private final org.uberfire.mvp.Command undoCanvasOperation;\n+    private String name;\n+\n+    private Optional<RuleAnnotationClauseColumn> uiModelColumn = Optional.empty();\n+\n+    public AddRuleAnnotationClauseCommand(final DecisionTable decisionTable,\n+                                          final RuleAnnotationClause ruleAnnotationClause,\n+                                          final GridData uiModel,\n+                                          final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier,\n+                                          final int uiColumnIndex,\n+                                          final DecisionTableUIModelMapper uiModelMapper,\n+                                          final org.uberfire.mvp.Command executeCanvasOperation,\n+                                          final org.uberfire.mvp.Command undoCanvasOperation) {\n+        this.decisionTable = decisionTable;\n+        this.ruleAnnotationClause = ruleAnnotationClause;\n+        this.uiModel = uiModel;\n+        this.uiModelColumnSupplier = uiModelColumnSupplier;\n+        this.uiColumnIndex = uiColumnIndex;\n+        this.uiModelMapper = uiModelMapper;\n+        this.executeCanvasOperation = executeCanvasOperation;\n+        this.undoCanvasOperation = undoCanvasOperation;\n+    }\n+\n+    public Optional<RuleAnnotationClauseColumn> getUiModelColumn() {\n+        return uiModelColumn;\n+    }\n+\n+    public String getName() {\n+        if (StringUtils.isEmpty(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MjI1OA==", "bodyText": "Being picky, it'd be nice to have these 2 new methods at the end of the class so that the method order is input related methods, output related methods and annotations related methods.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396592258", "createdAt": "2020-03-23T16:39:24Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableDefaultValueUtilities.java", "diffHunk": "@@ -54,6 +59,21 @@ private static int getMaxUnusedInputClauseIndex(final DecisionTable dtable) {\n         return maxIndex + 1;\n     }\n \n+    public static String getNewRuleAnnotationClauseName(final DecisionTable decisionTable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MjU4OA==", "bodyText": "I still wonder whether to have \"in cell\" editing of names vs popup. WDYT? Did you ask UX?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396592588", "createdAt": "2020-03-23T16:39:52Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableEditorDefinition.java", "diffHunk": "@@ -73,7 +74,8 @@ public DecisionTableEditorDefinition(final DefinitionUtils definitionUtils,\n                                          final TranslationService translationService,\n                                          final HitPolicyPopoverView.Presenter hitPolicyEditor,\n                                          final ManagedInstance<ValueAndDataTypePopoverView.Presenter> headerEditors,\n-                                         final DecisionTableEditorDefinitionEnricher enricher) {\n+                                         final DecisionTableEditorDefinitionEnricher enricher,\n+                                         final ManagedInstance<ValuePopoverView.Presenter> valueEditors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5NDQ1Mg==", "bodyText": "Please delete commented block.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396594452", "createdAt": "2020-03-23T16:42:22Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/types/dtable/DecisionTableUIModelMapperHelper.java", "diffHunk": "@@ -84,4 +83,32 @@ public static int getOutputEntryIndex(final DecisionTable dtable,\n         }\n         return _columnIndex;\n     }\n+\n+    public static int getAnnotationEntryIndex(final DecisionTable dtable,\n+                                              final int columnIndex) {\n+\n+        final int inputClauseColumnCount = dtable.getInput().size();\n+        final int outputClauseColumnCount = dtable.getOutput().size();\n+        final int annotationClauseColumnCount = dtable.getAnnotations().size();\n+\n+        int _columnIndex = columnIndex;\n+        if ((_columnIndex = _columnIndex - ROW_INDEX_COLUMN_COUNT) < 0) {\n+            throw new IllegalArgumentException(\"columnIndex referenced 'Row index' column. Should be a valid AnnotationEntry column.\");\n+        }\n+        if ((_columnIndex = _columnIndex - inputClauseColumnCount) < 0) {\n+            throw new IllegalArgumentException(\"columnIndex referenced an InputEntry column. Should be a valid AnnotationEntry column.\");\n+        }\n+        if ((_columnIndex = _columnIndex - outputClauseColumnCount) < 0) {\n+            throw new IllegalArgumentException(\"columnIndex referenced an OutputEntry column. Should be a valid AnnotationEntry column.\");\n+        }\n+        if (_columnIndex > annotationClauseColumnCount - 1) {\n+            throw new IllegalArgumentException(\"columnIndex did not reference a valid AnnotationEntry column.\");\n+        }\n+\n+        return _columnIndex;\n+//        final int annotationIndex = columnIndex - inputClauseColumnCount - outputClauseColumnCount - 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjIyNzQ0", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-379622744", "createdAt": "2020-03-23T16:52:37Z", "commit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjo1MjozN1rOF6OqKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjo1MjozN1rOF6OqKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwMTg5Ng==", "bodyText": "Not really a le here.. just a copy and paste artifact!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r396601896", "createdAt": "2020-03-23T16:52:37Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/commands/expressions/types/dtable/AddRuleAnnotationClauseCommand.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.expressions.types.dtable;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionTable;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClause;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClauseText;\n+import org.kie.workbench.common.dmn.client.commands.VetoExecutionCommand;\n+import org.kie.workbench.common.dmn.client.commands.VetoUndoCommand;\n+import org.kie.workbench.common.dmn.client.commands.util.CommandUtils;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableDefaultValueUtilities;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapperHelper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.RuleAnnotationClauseColumn;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasGraphCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasViolation;\n+import org.kie.workbench.common.stunner.core.command.Command;\n+import org.kie.workbench.common.stunner.core.command.CommandResult;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandExecutionContext;\n+import org.kie.workbench.common.stunner.core.graph.command.GraphCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.graph.command.impl.AbstractGraphCommand;\n+import org.kie.workbench.common.stunner.core.rule.RuleViolation;\n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+import org.uberfire.ext.wires.core.grids.client.model.GridData;\n+\n+public class AddRuleAnnotationClauseCommand extends AbstractCanvasGraphCommand implements VetoExecutionCommand,\n+                                                                                          VetoUndoCommand {\n+\n+    private final DecisionTable decisionTable;\n+    private final RuleAnnotationClause ruleAnnotationClause;\n+    private final GridData uiModel;\n+    private final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier;\n+    private final int uiColumnIndex;\n+    private final DecisionTableUIModelMapper uiModelMapper;\n+    private final org.uberfire.mvp.Command executeCanvasOperation;\n+    private final org.uberfire.mvp.Command undoCanvasOperation;\n+    private String name;\n+\n+    private Optional<RuleAnnotationClauseColumn> uiModelColumn = Optional.empty();\n+\n+    public AddRuleAnnotationClauseCommand(final DecisionTable decisionTable,\n+                                          final RuleAnnotationClause ruleAnnotationClause,\n+                                          final GridData uiModel,\n+                                          final Supplier<RuleAnnotationClauseColumn> uiModelColumnSupplier,\n+                                          final int uiColumnIndex,\n+                                          final DecisionTableUIModelMapper uiModelMapper,\n+                                          final org.uberfire.mvp.Command executeCanvasOperation,\n+                                          final org.uberfire.mvp.Command undoCanvasOperation) {\n+        this.decisionTable = decisionTable;\n+        this.ruleAnnotationClause = ruleAnnotationClause;\n+        this.uiModel = uiModel;\n+        this.uiModelColumnSupplier = uiModelColumnSupplier;\n+        this.uiColumnIndex = uiColumnIndex;\n+        this.uiModelMapper = uiModelMapper;\n+        this.executeCanvasOperation = executeCanvasOperation;\n+        this.undoCanvasOperation = undoCanvasOperation;\n+    }\n+\n+    public Optional<RuleAnnotationClauseColumn> getUiModelColumn() {\n+        return uiModelColumn;\n+    }\n+\n+    public String getName() {\n+        if (StringUtils.isEmpty(name)) {\n+            this.name = getNewRuleAnnotationClauseName();\n+        }\n+        return this.name;\n+    }\n+\n+    String getNewRuleAnnotationClauseName() {\n+        return DecisionTableDefaultValueUtilities.getNewRuleAnnotationClauseName(decisionTable);\n+    }\n+\n+    @Override\n+    protected Command<GraphCommandExecutionContext, RuleViolation> newGraphCommand(final AbstractCanvasHandler context) {\n+        return new AbstractGraphCommand() {\n+            @Override\n+            protected CommandResult<RuleViolation> check(final GraphCommandExecutionContext context) {\n+                return GraphCommandResultBuilder.SUCCESS;\n+            }\n+\n+            @Override\n+            public CommandResult<RuleViolation> execute(final GraphCommandExecutionContext context) {\n+                decisionTable.getComponentWidths().add(uiColumnIndex, null);\n+\n+                final int clauseIndex = getClauseIndex();\n+                decisionTable.getAnnotations().add(clauseIndex, ruleAnnotationClause);\n+                ruleAnnotationClause.getName().setValue(getName());\n+\n+                decisionTable.getRule().forEach(rule -> {\n+                    final RuleAnnotationClauseText le = new RuleAnnotationClauseText();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599"}, "originalPosition": 111}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11221c5eb9c9fe1e949ca6826ef0b760f46ba599", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/11221c5eb9c9fe1e949ca6826ef0b760f46ba599", "committedDate": "2020-03-20T23:30:32Z", "message": "Fix for moving column."}, "afterCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/dc3836d7c358ac60b1372fa4db4c3738d0bf460d", "committedDate": "2020-03-24T23:38:49Z", "message": "Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDg3MTE5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-381487119", "createdAt": "2020-03-25T19:54:33Z", "commit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTo1NDozM1rOF7r33g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDoxODoyNVrOF7sq3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyOTExOA==", "bodyText": "STATIC_COLUMNS should now be 1 (it used to be Row Number and Description columns, now it is only Row Number). Sorry, I think I must have missed this last time.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398129118", "createdAt": "2020-03-25T19:54:33Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/DecisionTable.java", "diffHunk": "@@ -150,7 +158,7 @@ public void setOutputLabel(final String value) {\n \n     @Override\n     public int getRequiredComponentWidthCount() {\n-        return getInput().size() + getOutput().size() + STATIC_COLUMNS;\n+        return getInput().size() + getOutput().size() + getAnnotations().size() + STATIC_COLUMNS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEzNzE1Nw==", "bodyText": "Is this still needed?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398137157", "createdAt": "2020-03-25T20:09:15Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/resources/org/kie/workbench/common/dmn/client/resources/i18n/DMNClientConstants.properties", "diffHunk": "@@ -120,6 +126,7 @@ DataTypeListView.ReadOnlyMessage2=You can edit them by opening the original file\n DataTypeListView.ImportDataObject=Import Data Object\n NameAndDataTypePopover.NameLabel=Name\n NameAndDataTypePopover.DataTypeLabel=Data Type\n+ValuePopover.ValueLabel=Value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEzNzI1OA==", "bodyText": "Is this still needed?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398137258", "createdAt": "2020-03-25T20:09:28Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/resources/i18n/DMNEditorConstants.java", "diffHunk": "@@ -271,6 +289,9 @@\n     @TranslationKey(defaultValue = \"\")\n     public static final String NameAndDataTypePopover_DataTypeLabel = \"NameAndDataTypePopover.DataTypeLabel\";\n \n+    @TranslationKey(defaultValue = \"\")\n+    public static final String ValuePopover_ValueLabel = \"ValuePopover.ValueLabel\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEzNzkzMQ==", "bodyText": "Is this still needed?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398137931", "createdAt": "2020-03-25T20:10:46Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/resources/i18n/DMNEditorConstants.java", "diffHunk": "@@ -172,6 +172,9 @@\n     @TranslationKey(defaultValue = \"\")\n     public static final String FunctionEditor_SelectFunctionKind = \"FunctionEditor.SelectFunctionKind\";\n \n+    @TranslationKey(defaultValue = \"\")\n+    public static final String DecisionTableEditor_SelectRuleAnnotationName = \"DecisionTableEditor.SelectRuleAnnotationName\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEzODE1Nw==", "bodyText": "I don't think this is needed either.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398138157", "createdAt": "2020-03-25T20:11:13Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/resources/i18n/DMNEditorConstants.java", "diffHunk": "@@ -172,6 +172,9 @@\n     @TranslationKey(defaultValue = \"\")\n     public static final String FunctionEditor_SelectFunctionKind = \"FunctionEditor.SelectFunctionKind\";\n \n+    @TranslationKey(defaultValue = \"\")\n+    public static final String DecisionTableEditor_SelectRuleAnnotationName = \"DecisionTableEditor.SelectRuleAnnotationName\";\n+\n     @TranslationKey(defaultValue = \"\")\n     public static final String DecisionTableEditor_DescriptionColumnHeader = \"DecisionTableEditor.DescriptionColumnHeader\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0MjE3NQ==", "bodyText": "You can probably remove all the form type stuff from this class too (like you did for RuleAnnotationClause).\nYou don't have support for selecting the annotation cells in DecisionTableGrid and hence their properties can never be shown in the Properties Panel and hence all the form binding stuff is not necessary.\nSee here where I give more detail.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398142175", "createdAt": "2020-03-25T20:18:25Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/RuleAnnotationClauseText.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.api.definition.model;\n+\n+import java.util.Set;\n+\n+import org.jboss.errai.common.client.api.annotations.Portable;\n+import org.jboss.errai.databinding.client.api.Bindable;\n+import org.kie.soup.commons.util.Sets;\n+import org.kie.workbench.common.dmn.api.definition.HasText;\n+import org.kie.workbench.common.dmn.api.property.dmn.Text;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.FieldParam;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.FormDefinition;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.i18n.I18nSettings;\n+import org.kie.workbench.common.forms.adf.definitions.settings.FieldPolicy;\n+import org.kie.workbench.common.stunner.core.definition.annotation.Definition;\n+import org.kie.workbench.common.stunner.core.definition.annotation.Property;\n+import org.kie.workbench.common.stunner.core.definition.annotation.definition.Category;\n+import org.kie.workbench.common.stunner.core.definition.annotation.definition.Labels;\n+import org.kie.workbench.common.stunner.core.factory.graph.NodeFactory;\n+\n+import static org.kie.workbench.common.forms.adf.engine.shared.formGeneration.processing.fields.fieldInitializers.nestedForms.AbstractEmbeddedFormsInitializer.COLLAPSIBLE_CONTAINER;\n+import static org.kie.workbench.common.forms.adf.engine.shared.formGeneration.processing.fields.fieldInitializers.nestedForms.AbstractEmbeddedFormsInitializer.FIELD_CONTAINER_PARAM;\n+\n+@Portable\n+@Bindable\n+@Definition(graphFactory = NodeFactory.class, nameField = \"text\")\n+@FormDefinition(policy = FieldPolicy.ONLY_MARKED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzY3MDYy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-381767062", "createdAt": "2020-03-26T07:54:14Z", "commit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzo1NDoxNFrOF761Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzo1ODowMlrOF768Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM3NDIxNQ==", "bodyText": "can be simplified Objects.equals(annotationEntry, that.annotationEntry)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398374215", "createdAt": "2020-03-26T07:54:14Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/DecisionRule.java", "diffHunk": "@@ -89,6 +97,9 @@ public boolean equals(final Object o) {\n         if (inputEntry != null ? !inputEntry.equals(that.inputEntry) : that.inputEntry != null) {\n             return false;\n         }\n+        if (annotationEntry != null ? !annotationEntry.equals(that.annotationEntry) : that.annotationEntry != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM3NDU3OQ==", "bodyText": "Objects.equals ?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398374579", "createdAt": "2020-03-26T07:55:04Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/DecisionTable.java", "diffHunk": "@@ -185,6 +193,9 @@ public boolean equals(final Object o) {\n         if (rule != null ? !rule.equals(that.rule) : that.rule != null) {\n             return false;\n         }\n+        if (annotations != null ? !annotations.equals(that.annotations) : that.annotations != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM3NjAzMQ==", "bodyText": "Is this import used? Would be nice to not mix both stunner core Command and uberfire mvp.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#discussion_r398376031", "createdAt": "2020-03-26T07:58:02Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/commands/expressions/types/dtable/DeleteRuleAnnotationClauseCommand.java", "diffHunk": "@@ -0,0 +1,196 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.commands.expressions.types.dtable;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DecisionTable;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClause;\n+import org.kie.workbench.common.dmn.api.definition.model.RuleAnnotationClauseText;\n+import org.kie.workbench.common.dmn.client.commands.VetoExecutionCommand;\n+import org.kie.workbench.common.dmn.client.commands.VetoUndoCommand;\n+import org.kie.workbench.common.dmn.client.commands.util.CommandUtils;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapper;\n+import org.kie.workbench.common.dmn.client.editors.expressions.types.dtable.DecisionTableUIModelMapperHelper;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.canvas.command.AbstractCanvasGraphCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandResultBuilder;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasViolation;\n+import org.kie.workbench.common.stunner.core.command.Command;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc3836d7c358ac60b1372fa4db4c3738d0bf460d", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/dc3836d7c358ac60b1372fa4db4c3738d0bf460d", "committedDate": "2020-03-24T23:38:49Z", "message": "Fixes"}, "afterCommit": {"oid": "ba52ff6c2b6e79afe534e24793a74e14272d97f1", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ba52ff6c2b6e79afe534e24793a74e14272d97f1", "committedDate": "2020-03-27T16:23:15Z", "message": "Fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd62d8d33d116c6c75c1c4aebb3c0aa0e525d8e7", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bd62d8d33d116c6c75c1c4aebb3c0aa0e525d8e7", "committedDate": "2020-03-27T20:22:29Z", "message": "Columns are not merged anymore"}, "afterCommit": {"oid": "419092c21fbe57411a05fd825e1f6affc544385c", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/419092c21fbe57411a05fd825e1f6affc544385c", "committedDate": "2020-03-30T21:07:14Z", "message": "Fix issue comment #2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "419092c21fbe57411a05fd825e1f6affc544385c", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/419092c21fbe57411a05fd825e1f6affc544385c", "committedDate": "2020-03-30T21:07:14Z", "message": "Fix issue comment #2"}, "afterCommit": {"oid": "a1accd2925fdf04928a51723a67dea0ba3aa0fca", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a1accd2925fdf04928a51723a67dea0ba3aa0fca", "committedDate": "2020-04-01T13:22:57Z", "message": "fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Njk2ODAy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-385696802", "createdAt": "2020-04-01T15:26:08Z", "commit": {"oid": "a1accd2925fdf04928a51723a67dea0ba3aa0fca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MDUwNTE1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-387050515", "createdAt": "2020-04-03T08:19:48Z", "commit": {"oid": "5c6198a4068bc900ab5e997b2098d95c9c0178f7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48520a1bd1446d439ec237c5a8a1ca29ef547b45", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/48520a1bd1446d439ec237c5a8a1ca29ef547b45", "committedDate": "2020-04-03T18:10:16Z", "message": "DROOLS-5045: [DMN Designer] Marshaller does not support DMN1.2 DecisionTable RuleAnnotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ea0589365dcc162637c28ae7a71c14f8017868e", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6ea0589365dcc162637c28ae7a71c14f8017868e", "committedDate": "2020-04-03T18:10:16Z", "message": "Fixing tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "404f8a8b6a4c513241f249a5038ff1bdcfd55255", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/404f8a8b6a4c513241f249a5038ff1bdcfd55255", "committedDate": "2020-04-03T18:10:17Z", "message": "Fix for moving column."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a15845c050940f6517036b1ba686ded7f004d297", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a15845c050940f6517036b1ba686ded7f004d297", "committedDate": "2020-04-03T18:10:17Z", "message": "Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de4a95d2b60256098e00c4dd03965a9ec324b1b7", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/de4a95d2b60256098e00c4dd03965a9ec324b1b7", "committedDate": "2020-04-03T18:10:17Z", "message": "Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e36fb2dd648db270c23c3964d3e1a8de5131563", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2e36fb2dd648db270c23c3964d3e1a8de5131563", "committedDate": "2020-04-03T18:10:18Z", "message": "Columns are not merged anymore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8e8faba1cebc188a78457ebdd035680db6cfa85", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d8e8faba1cebc188a78457ebdd035680db6cfa85", "committedDate": "2020-04-03T18:10:18Z", "message": "Fix issue comment #2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3165d644fb76d26e4d4a233ba183ce84ad53b613", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3165d644fb76d26e4d4a233ba183ce84ad53b613", "committedDate": "2020-04-03T18:10:18Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e48b9a0308cbfabd79e5d055582647aa0738bb3", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7e48b9a0308cbfabd79e5d055582647aa0738bb3", "committedDate": "2020-04-03T18:10:18Z", "message": "Fix issue moving columns with the same name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e501a65ac069d7fd071e14bfdfdeb06328d89657", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e501a65ac069d7fd071e14bfdfdeb06328d89657", "committedDate": "2020-04-03T23:35:50Z", "message": "Support for Kogito."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c6198a4068bc900ab5e997b2098d95c9c0178f7", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5c6198a4068bc900ab5e997b2098d95c9c0178f7", "committedDate": "2020-04-02T15:08:01Z", "message": "Fix issue moving columns with the same name."}, "afterCommit": {"oid": "e501a65ac069d7fd071e14bfdfdeb06328d89657", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e501a65ac069d7fd071e14bfdfdeb06328d89657", "committedDate": "2020-04-03T23:35:50Z", "message": "Support for Kogito."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDI4OTc3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3230#pullrequestreview-388028977", "createdAt": "2020-04-06T08:22:17Z", "commit": {"oid": "e501a65ac069d7fd071e14bfdfdeb06328d89657"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 543, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}