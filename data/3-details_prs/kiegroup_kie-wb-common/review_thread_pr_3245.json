{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzE1MjU5", "number": 3245, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0MTowOFrODriqvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo1NDoxNFrODsJkLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTgzMzU4OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/services/util/impl/ResourceSearchPathImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0MTowOFrOF78UFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoyODoyOFrOF8AYKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5ODQ4NA==", "bodyText": "File.separator ? What about windows? Corner case but asking to be sure.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r398398484", "createdAt": "2020-03-26T08:41:08Z", "author": {"login": "domhanak"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/services/util/impl/ResourceSearchPathImpl.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.kogito.client.services.util.impl;\n+\n+import java.util.Optional;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.workbench.common.stunner.kogito.client.services.util.ResourceSearchPath;\n+\n+@ApplicationScoped\n+public class ResourceSearchPathImpl implements ResourceSearchPath {\n+\n+    private static final String SEPARATOR = \"/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d3e6608ddb99cea8980e5caaad71b96bd0c009"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ2Mzk2Mg==", "bodyText": "@domhanak on vscode the path always use \"/\" as a separator. Also we cannot use File there becuause that' code is GWT and File isn't part of the jre emulation layer.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r398463962", "createdAt": "2020-03-26T10:26:35Z", "author": {"login": "pefernan"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/services/util/impl/ResourceSearchPathImpl.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.kogito.client.services.util.impl;\n+\n+import java.util.Optional;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.workbench.common.stunner.kogito.client.services.util.ResourceSearchPath;\n+\n+@ApplicationScoped\n+public class ResourceSearchPathImpl implements ResourceSearchPath {\n+\n+    private static final String SEPARATOR = \"/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5ODQ4NA=="}, "originalCommit": {"oid": "49d3e6608ddb99cea8980e5caaad71b96bd0c009"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ2NTA2Ng==", "bodyText": "Thanks, for checking and for the GWT knowledge reminder.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r398465066", "createdAt": "2020-03-26T10:28:28Z", "author": {"login": "domhanak"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/src/main/java/org/kie/workbench/common/stunner/kogito/client/services/util/impl/ResourceSearchPathImpl.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.kogito.client.services.util.impl;\n+\n+import java.util.Optional;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.workbench.common.stunner.kogito.client.services.util.ResourceSearchPath;\n+\n+@ApplicationScoped\n+public class ResourceSearchPathImpl implements ResourceSearchPath {\n+\n+    private static final String SEPARATOR = \"/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5ODQ4NA=="}, "originalCommit": {"oid": "49d3e6608ddb99cea8980e5caaad71b96bd0c009"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjIwNjUyOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/workitem/WorkItemDefinitionClientParser.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo1NDoxNFrOF850zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzo1NDowOVrOF9E3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNjI4NA==", "bodyText": "@romartin this is a workaround to make work the wid parser on windows... it still keeps working in linx and mac the same.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r399406284", "createdAt": "2020-03-27T16:54:14Z", "author": {"login": "pefernan"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/workitem/WorkItemDefinitionClientParser.java", "diffHunk": "@@ -51,6 +51,8 @@\n             return Collections.emptyList();\n         }\n \n+        widStr = widStr.replace(\"\\r\\n\", \"\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cdc1733a5ecc0628fe3634f1fc4ab64ae3476be"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTQzMQ==", "bodyText": "Hey @pefernan\nGood catch! Thanks for letting me know.\nI was wrong as I though it was due to the file encoding itself, but as you pointed out, it's due how parsers expect new lines on raw text files, so sorry and good catch again!! \ud83d\udc4d\nAnyway, instead of replacing and then splitting, and also to make it Unix/Win/Mac compatible, maybe results better to just change the regexp for the split method, and so NO need to perform the replace, so no need to process all string content twice (replace + split). this way it should look like as:\nString[] lines = widStr.split(\"\\r\\n|\\r|\\n\"); // This should be all OS platform supported.\nAlso, could you please add some test case for this regexp?\nPS: Maybe you can even move this splitting logic to some helper method (eg: org.kie.workbench.common.stunner.core.util.StringUtils) and give a proper name to the method (eg: splitNewLines), so we will be able to reuse this across our codebase.\nWDYT? Thanks a lot, great job!!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r399585431", "createdAt": "2020-03-27T23:46:01Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/workitem/WorkItemDefinitionClientParser.java", "diffHunk": "@@ -51,6 +51,8 @@\n             return Collections.emptyList();\n         }\n \n+        widStr = widStr.replace(\"\\r\\n\", \"\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNjI4NA=="}, "originalCommit": {"oid": "0cdc1733a5ecc0628fe3634f1fc4ab64ae3476be"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NjAwOA==", "bodyText": "Also I'd been looking across Stunnet codebase too see if we're facing this issue in some other place, by looking for that Strings in the sources, and I think that's the only place, so we should be safe just by fixing this", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r399586008", "createdAt": "2020-03-27T23:48:52Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/workitem/WorkItemDefinitionClientParser.java", "diffHunk": "@@ -51,6 +51,8 @@\n             return Collections.emptyList();\n         }\n \n+        widStr = widStr.replace(\"\\r\\n\", \"\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNjI4NA=="}, "originalCommit": {"oid": "0cdc1733a5ecc0628fe3634f1fc4ab64ae3476be"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NzEyMg==", "bodyText": "FYI @ederign ^^ thx!!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3245#discussion_r399587122", "createdAt": "2020-03-27T23:54:09Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/workitem/WorkItemDefinitionClientParser.java", "diffHunk": "@@ -51,6 +51,8 @@\n             return Collections.emptyList();\n         }\n \n+        widStr = widStr.replace(\"\\r\\n\", \"\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNjI4NA=="}, "originalCommit": {"oid": "0cdc1733a5ecc0628fe3634f1fc4ab64ae3476be"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1417, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}