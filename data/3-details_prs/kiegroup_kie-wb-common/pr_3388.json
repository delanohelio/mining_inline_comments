{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NTg5MzMz", "number": 3388, "title": "KOGITO-2895 & KOGITO-2896: Enabling PMML support on DMN Designer", "bodyText": "@karreiro @jomarko Can you please review and test it?\nScope of these PRs are to fully enable the PMML usage inside the DMN Editor.\nThe marshaller used to process the *.pmml is the one available on JS side, in kogito-tooling repo. For this reason, a js-bridge with retrieves the marshalled data was implemented.\n\nPlease note, currently only 2 kind of models are enabled: ScoreCardModel and RegressionModel. To enable all models, we need to merge this PR: kiegroup/kogito-tooling#236\nRelated PRs\nkie-wb-common: #3388\nappformer: kiegroup/appformer#1025\nkiegroup/kogito-tooling#248\nSpecial credit to @karreiro and @manstis :)\nhttps://issues.redhat.com/browse/KOGITO-2895\nhttps://issues.redhat.com/browse/KOGITO-2896\nhttps://issues.redhat.com/browse/BAPL-1689", "createdAt": "2020-08-10T15:57:36Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388", "merged": true, "mergeCommit": {"oid": "e17e1deea2e431c60b4210666427faac3565890b"}, "closed": true, "closedAt": "2020-09-04T16:29:09Z", "author": {"login": "yesamer"}, "timelineItems": {"totalCount": 91, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcurfcuAH2gAyNDY1NTg5MzMzOjlhZDhkOWY4ZTFhNjE3N2UzYTRmMDIzMTI4NzMyYmU3NjQ5NDRiZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFlcBUgFqTQ4MjY2MzM5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9ad8d9f8e1a6177e3a4f023128732be764944bd6", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9ad8d9f8e1a6177e3a4f023128732be764944bd6", "committedDate": "2020-06-25T09:46:52Z", "message": "KOGITO-2337: State Control API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c79ba064a075487909af56a862d81f4e8e57f74d", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c79ba064a075487909af56a862d81f4e8e57f74d", "committedDate": "2020-06-30T09:42:48Z", "message": "Merge remote-tracking branch 'origin/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3260de75e24d15f0911382a02b15c53893a735c0", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3260de75e24d15f0911382a02b15c53893a735c0", "committedDate": "2020-07-06T06:59:29Z", "message": "Merge remote-tracking branch 'origin/master'\n\n# Conflicts:\n#\tkie-wb-common-command-api/src/main/java/org/kie/workbench/common/command/client/registry/AbstractCommandRegistryManager.java\n#\tkie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/common/GuidedTourActions.java\n#\tkie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/tour/providers/PositionProviderFactory.java\n#\tkie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/src/test/java/org/kie/workbench/common/dmn/showcase/client/selenium/locator/XPathLocator.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d931c9c96e39b28c4b882a9ba06627359451ca8f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d931c9c96e39b28c4b882a9ba06627359451ca8f", "committedDate": "2020-07-10T06:36:29Z", "message": "Merge remote-tracking branch 'origin/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40eaf8c9baddb3056707876949e07e6b6a6a4ab", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c40eaf8c9baddb3056707876949e07e6b6a6a4ab", "committedDate": "2020-07-16T10:15:44Z", "message": "Merge remote-tracking branch 'origin/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cece0b2ba7a9654ce91c1b03688990ce509ed3c5", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cece0b2ba7a9654ce91c1b03688990ce509ed3c5", "committedDate": "2020-07-17T10:07:32Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35089211913a1fe6c4fb97e5df21ee16315665c1", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/35089211913a1fe6c4fb97e5df21ee16315665c1", "committedDate": "2020-07-17T10:07:50Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f486e970fa7df7b74b08fefa334cb201f24322b", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4f486e970fa7df7b74b08fefa334cb201f24322b", "committedDate": "2020-07-20T15:51:06Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90304ff2a18649de9e81b8a1bc77298551573d80", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/90304ff2a18649de9e81b8a1bc77298551573d80", "committedDate": "2020-07-21T07:12:19Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd9160e1835f5271913507e8fb05e87d95f54fa7", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/dd9160e1835f5271913507e8fb05e87d95f54fa7", "committedDate": "2020-07-22T07:25:32Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a05f093e716d2d2f069118b5381bfca7dc20536", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8a05f093e716d2d2f069118b5381bfca7dc20536", "committedDate": "2020-07-22T09:54:05Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a59c91dd1eafea9741d62286cd07f92ce2084f8", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0a59c91dd1eafea9741d62286cd07f92ce2084f8", "committedDate": "2020-07-22T13:40:45Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e37a8fb2d905441271fc4db7c23063abe2d24b5", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0e37a8fb2d905441271fc4db7c23063abe2d24b5", "committedDate": "2020-07-22T14:51:46Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02b48dbcce31ca6c48f41d8a5ae3a11b2422e78d", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/02b48dbcce31ca6c48f41d8a5ae3a11b2422e78d", "committedDate": "2020-07-23T09:47:17Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea56440aff074b08578d08304e9e2b3ce76c0b6", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4ea56440aff074b08578d08304e9e2b3ce76c0b6", "committedDate": "2020-07-23T09:49:02Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1350478a4c8a5925015e3f4425123e8a0151ae5", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b1350478a4c8a5925015e3f4425123e8a0151ae5", "committedDate": "2020-07-23T15:30:00Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de5e31f4fd47cdb76e91e8a8c2bcb41813ba99e1", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/de5e31f4fd47cdb76e91e8a8c2bcb41813ba99e1", "committedDate": "2020-07-24T07:38:28Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c814c08aa0368e77880f8a8e86d8978dc945767", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8c814c08aa0368e77880f8a8e86d8978dc945767", "committedDate": "2020-07-24T07:44:34Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "850c6aa2ee30e24c882a8190af87f0e175b25d4d", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/850c6aa2ee30e24c882a8190af87f0e175b25d4d", "committedDate": "2020-07-24T08:48:07Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c8f0e1b0998057306a4e57549e716e3e2c43f5", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/09c8f0e1b0998057306a4e57549e716e3e2c43f5", "committedDate": "2020-07-27T06:56:03Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e46d81b434f2eef5f9a4e834bef890b8833f696", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9e46d81b434f2eef5f9a4e834bef890b8833f696", "committedDate": "2020-07-27T12:26:02Z", "message": "KOGITO-2761: Enabling loading of PMMLs files on Including model tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d1449db3c5a3c748c89461289ca112dec36e926", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4d1449db3c5a3c748c89461289ca112dec36e926", "committedDate": "2020-07-27T12:26:25Z", "message": "KOGITO-2761: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4198e457a6b6c72e13cefa80805109c22147879", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e4198e457a6b6c72e13cefa80805109c22147879", "committedDate": "2020-07-27T13:35:14Z", "message": "KOGITO-2761: Tests + Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f4c04b62b90eded50c15d092e2232be69820d0c", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5f4c04b62b90eded50c15d092e2232be69820d0c", "committedDate": "2020-07-27T15:29:08Z", "message": "KOGITO-2761: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f0c7314231863c129c40cd7d025cbe086826bcb", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7f0c7314231863c129c40cd7d025cbe086826bcb", "committedDate": "2020-07-28T07:56:59Z", "message": "KOGITO-2761: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "972e479e14ae5621a6e9093f7044b2e8647c3589", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/972e479e14ae5621a6e9093f7044b2e8647c3589", "committedDate": "2020-07-28T08:41:14Z", "message": "KOGITO-2761: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2be4ce4133efdf54e9fb90067fd7558fc29a439", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a2be4ce4133efdf54e9fb90067fd7558fc29a439", "committedDate": "2020-07-28T09:02:34Z", "message": "KOGITO-2761: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3ff91b17b58a99ff25cc07a1092b960d9570aff", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f3ff91b17b58a99ff25cc07a1092b960d9570aff", "committedDate": "2020-07-28T13:16:22Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bc7bb4bcf2f48a43d83bef1a2d023fe12e4db64", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4bc7bb4bcf2f48a43d83bef1a2d023fe12e4db64", "committedDate": "2020-07-28T13:51:42Z", "message": "KOGITO-2761: Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd488ebbcbb9d4cd2fad9847a71c0a084d26af98", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/fd488ebbcbb9d4cd2fad9847a71c0a084d26af98", "committedDate": "2020-07-29T07:12:22Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8b7aeaa04c88bdb8a24ad7050dac6220b92c95", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8a8b7aeaa04c88bdb8a24ad7050dac6220b92c95", "committedDate": "2020-07-29T13:30:24Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2896"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cc267252d546b6c1cd057ca6e9acaa3768c135a", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7cc267252d546b6c1cd057ca6e9acaa3768c135a", "committedDate": "2020-07-29T16:10:53Z", "message": "KOGITO-2896: First Draft"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97e9587d4412a590538c13ff3917b4dc6e27d218", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/97e9587d4412a590538c13ff3917b4dc6e27d218", "committedDate": "2020-07-30T07:46:54Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620b16509a2bbcfa4f67edd3a5e631846185f6bb", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/620b16509a2bbcfa4f67edd3a5e631846185f6bb", "committedDate": "2020-07-30T07:47:14Z", "message": "KOGITO-2761: Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f1681a45ef195e87385acaf6104e78262903036", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3f1681a45ef195e87385acaf6104e78262903036", "committedDate": "2020-07-31T07:05:13Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/DMNMarshallerImportsHelperKogitoImpl.java\r\n\r\nChanges required during code review\n\nCo-authored-by: Jan Stastny <jstastny@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e54e03ab2fe3819690eb1a5aa751d3ffc7c9652", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2e54e03ab2fe3819690eb1a5aa751d3ffc7c9652", "committedDate": "2020-07-31T07:06:03Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/DMNMarshallerKogitoUnmarshallerTest.java\r\n\r\nChanges required during code review\n\nCo-authored-by: Jan Stastny <jstastny@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b30908e2b036c149c6632270605e52bba26654b6", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b30908e2b036c149c6632270605e52bba26654b6", "committedDate": "2020-07-31T07:08:44Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2896"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3add5271f636ea3a25c9b5535f5b621197a2f069", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3add5271f636ea3a25c9b5535f5b621197a2f069", "committedDate": "2020-07-31T07:10:45Z", "message": "KOGITO-2761: Changes required during code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a552e251cd4148f35f33af7f32a99fc80f67f6f0", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a552e251cd4148f35f33af7f32a99fc80f67f6f0", "committedDate": "2020-07-31T07:10:59Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c126b4973b4b1e36b337a8a4f161e48873ad5f5", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0c126b4973b4b1e36b337a8a4f161e48873ad5f5", "committedDate": "2020-07-31T08:07:29Z", "message": "Merge remote-tracking branch 'yeser/KOGITO-2761' into KOGITO-2896"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4834afd5148cb9f0064341e83c58da00c040b586", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4834afd5148cb9f0064341e83c58da00c040b586", "committedDate": "2020-07-31T11:15:48Z", "message": "KOGITO-2896: Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2de47832728a5d35b1af1411aa03249598d483f3", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2de47832728a5d35b1af1411aa03249598d483f3", "committedDate": "2020-07-31T11:18:37Z", "message": "KOGITO-2896: Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "443973a77a5435df4dc223a8b3555aa11ece7814", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/443973a77a5435df4dc223a8b3555aa11ece7814", "committedDate": "2020-07-31T11:41:06Z", "message": "KOGITO-2896: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "967c8fdd17994ec3fb4d8834713b4feb5da4e610", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/967c8fdd17994ec3fb4d8834713b4feb5da4e610", "committedDate": "2020-08-03T13:02:04Z", "message": "KOGITO-2895: Linking Marshaller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e2c9eed16b3879337a5eba2d013d87b9b5a0af", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/50e2c9eed16b3879337a5eba2d013d87b9b5a0af", "committedDate": "2020-08-03T15:02:42Z", "message": "KOGITO-2895: Linking Marshaller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "231a0dd1d415f7511a5c401458552a15eab7b579", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/231a0dd1d415f7511a5c401458552a15eab7b579", "committedDate": "2020-08-05T15:42:57Z", "message": "KOGITO-2895: Changes required during CR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bae6690d074cb7fe6898566cecbbc805f0d45e6e", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bae6690d074cb7fe6898566cecbbc805f0d45e6e", "committedDate": "2020-08-06T07:40:50Z", "message": "KOGITO-2895: Changes required during CR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c7d1de7ca33c7eb0fda0c1f3f9c58ef72a603e5", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8c7d1de7ca33c7eb0fda0c1f3f9c58ef72a603e5", "committedDate": "2020-08-06T07:41:03Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890ace2ac1712c64d70a8cd689cdd1dd93a969cf", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/890ace2ac1712c64d70a8cd689cdd1dd93a969cf", "committedDate": "2020-08-06T07:45:51Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c7682f6594397d01ebe1e59b939ecea79b77034", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2c7682f6594397d01ebe1e59b939ecea79b77034", "committedDate": "2020-08-06T07:46:23Z", "message": "KOGITO-2761: Changes required during CR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "220c5650c9b1188d77a0352040b1284dd0664a37", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/220c5650c9b1188d77a0352040b1284dd0664a37", "committedDate": "2020-08-06T08:20:08Z", "message": "Merge remote-tracking branch 'yeser/KOGITO-2761' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a51edf4a47d1ed9b68b562a8eb00bffd0905990f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a51edf4a47d1ed9b68b562a8eb00bffd0905990f", "committedDate": "2020-08-07T09:36:28Z", "message": "KOGITO-2895: Linking Marshaller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b01a8082352da0efa581a75a35c494f6117b912", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7b01a8082352da0efa581a75a35c494f6117b912", "committedDate": "2020-08-07T09:43:22Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8340fe389d95d3d91c39a81d4ee40b7c5e959cb8", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/8340fe389d95d3d91c39a81d4ee40b7c5e959cb8", "committedDate": "2020-08-07T15:06:57Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9595cfe91380ab7e8338195d7d42fd932a99f1fe", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9595cfe91380ab7e8338195d7d42fd932a99f1fe", "committedDate": "2020-08-07T15:21:03Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0fa575addad395a5261c05576c6da035c668f7b", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a0fa575addad395a5261c05576c6da035c668f7b", "committedDate": "2020-08-10T10:27:25Z", "message": "KOGITO-2895: Linking Marshaller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c3e009c000e468b955f8cf4715fd47263fead1f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2c3e009c000e468b955f8cf4715fd47263fead1f", "committedDate": "2020-08-10T14:17:26Z", "message": "KOGITO-2895: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3842a4cf1dbff0ae1664df5566111a316bd6d8a6", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3842a4cf1dbff0ae1664df5566111a316bd6d8a6", "committedDate": "2020-08-10T14:53:15Z", "message": "KOGITO-2895: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1a9650d672b91d65b928e6216d5b963d0102607", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d1a9650d672b91d65b928e6216d5b963d0102607", "committedDate": "2020-08-10T15:53:24Z", "message": "KOGITO-2895: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/525823deb10c1a57c6b8dd1b1b39511d7275c66f", "committedDate": "2020-08-11T07:07:19Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MzUwMjgy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#pullrequestreview-466350282", "createdAt": "2020-08-12T23:50:10Z", "commit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "state": "APPROVED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo1MDoxMFrOG_2q7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDowMjowOVrOG_25jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwOTE5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                List<PMMLDocumentMetadata> pmmlDocumentMetadata = new ArrayList<>(pmmlDefinitions.values());\n          \n          \n            \n                                final List<PMMLDocumentMetadata> pmmlDocumentMetadata = new ArrayList<>(pmmlDefinitions.values());", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469609197", "createdAt": "2020-08-12T23:50:10Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/DMNMarshallerImportsHelperKogitoImpl.java", "diffHunk": "@@ -344,6 +344,23 @@ public void onError(final ClientRuntimeError error) {\n                 });\n     }\n \n+    @Override\n+    public void getPMMLDocumentsMetadataFromFiles(final List<String> files,\n+                                                  final ServiceCallback<List<PMMLDocumentMetadata>> callback) {\n+        if (files == null || files.isEmpty()) {\n+            callback.onSuccess(Collections.emptyList());\n+            return;\n+        }\n+        final Map<String, PMMLDocumentMetadata> pmmlDefinitions = new HashMap<>();\n+        promises.all(files, file -> loadPMMLDefinitionFromFile(file, pmmlDefinitions)\n+                .then(v -> {\n+                    List<PMMLDocumentMetadata> pmmlDocumentMetadata = new ArrayList<>(pmmlDefinitions.values());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDQwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static PMMLDocumentMetadata fromJSInteropToMetadata(String pmmlFilePath, PMMLDocumentData pmmlDocumentData) {\n          \n          \n            \n                public static PMMLDocumentMetadata fromJSInteropToMetadata(final String pmmlFilePath, final PMMLDocumentData pmmlDocumentData) {", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610409", "createdAt": "2020-08-12T23:53:59Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.kie.workbench.common.dmn.api.editors.included.DMNImportTypes;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLModelMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLParameterMetadata;\n+import org.kie.workbench.common.stunner.core.util.FileUtils;\n+\n+public class PMMLMarshallerConverter {\n+\n+    private PMMLMarshallerConverter() {\n+        // Utils class with static methods.\n+    }\n+\n+    public static PMMLDocumentMetadata fromJSInteropToMetadata(String pmmlFilePath, PMMLDocumentData pmmlDocumentData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDQ4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<PMMLModelMetadata> models = new ArrayList<>();\n          \n          \n            \n                    final List<PMMLModelMetadata> models = new ArrayList<>();", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610486", "createdAt": "2020-08-12T23:54:14Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.kie.workbench.common.dmn.api.editors.included.DMNImportTypes;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLModelMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLParameterMetadata;\n+import org.kie.workbench.common.stunner.core.util.FileUtils;\n+\n+public class PMMLMarshallerConverter {\n+\n+    private PMMLMarshallerConverter() {\n+        // Utils class with static methods.\n+    }\n+\n+    public static PMMLDocumentMetadata fromJSInteropToMetadata(String pmmlFilePath, PMMLDocumentData pmmlDocumentData) {\n+        List<PMMLModelMetadata> models = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDUyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<PMMLParameterMetadata> fields = new HashSet<>();\n          \n          \n            \n                        final Set<PMMLParameterMetadata> fields = new HashSet<>();", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610529", "createdAt": "2020-08-12T23:54:29Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.kie.workbench.common.dmn.api.editors.included.DMNImportTypes;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLModelMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLParameterMetadata;\n+import org.kie.workbench.common.stunner.core.util.FileUtils;\n+\n+public class PMMLMarshallerConverter {\n+\n+    private PMMLMarshallerConverter() {\n+        // Utils class with static methods.\n+    }\n+\n+    public static PMMLDocumentMetadata fromJSInteropToMetadata(String pmmlFilePath, PMMLDocumentData pmmlDocumentData) {\n+        List<PMMLModelMetadata> models = new ArrayList<>();\n+        pmmlDocumentData.getModels().stream().forEach(pmmlModelData -> {\n+            final String modelName = pmmlModelData.getModelName();\n+            Set<PMMLParameterMetadata> fields = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDU5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (String field : pmmlModelData.getFields()) {\n          \n          \n            \n                        for (final String field : pmmlModelData.getFields()) {", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610590", "createdAt": "2020-08-12T23:54:40Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.kie.workbench.common.dmn.api.editors.included.DMNImportTypes;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLModelMetadata;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLParameterMetadata;\n+import org.kie.workbench.common.stunner.core.util.FileUtils;\n+\n+public class PMMLMarshallerConverter {\n+\n+    private PMMLMarshallerConverter() {\n+        // Utils class with static methods.\n+    }\n+\n+    public static PMMLDocumentMetadata fromJSInteropToMetadata(String pmmlFilePath, PMMLDocumentData pmmlDocumentData) {\n+        List<PMMLModelMetadata> models = new ArrayList<>();\n+        pmmlDocumentData.getModels().stream().forEach(pmmlModelData -> {\n+            final String modelName = pmmlModelData.getModelName();\n+            Set<PMMLParameterMetadata> fields = new HashSet<>();\n+\n+            for (String field : pmmlModelData.getFields()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDY3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> files = includedModels.stream().map(PMMLIncludedModel::getPath).collect(Collectors.toList());\n          \n          \n            \n                    final List<String> files = includedModels.stream().map(PMMLIncludedModel::getPath).collect(Collectors.toList());", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610673", "createdAt": "2020-08-12T23:54:55Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/DMNClientServicesProxyImpl.java", "diffHunk": "@@ -65,7 +66,8 @@ public void loadNodesFromImports(final List<DMNIncludedModel> includedModels,\n     public void loadPMMLDocumentsFromImports(final Path path,\n                                              final List<PMMLIncludedModel> includedModels,\n                                              final ServiceCallback<List<PMMLDocumentMetadata>> callback) {\n-        callback.onSuccess(Collections.emptyList());\n+        List<String> files = includedModels.stream().map(PMMLIncludedModel::getPath).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDgzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (Exception e) {\n          \n          \n            \n                    } catch (final Exception e) {", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610831", "createdAt": "2020-08-12T23:55:19Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java", "diffHunk": "@@ -34,30 +33,33 @@\n public class PMMLMarshallerService {\n \n     private Promises promises;\n+    private PMMLEditorMarshallerApi pmmlEditorMarshallerApi;\n \n     public PMMLMarshallerService() {\n         // CDI\n     }\n \n     @Inject\n-    public PMMLMarshallerService(final Promises promises) {\n+    public PMMLMarshallerService(final Promises promises,\n+                                 final PMMLEditorMarshallerApi pmmlEditorMarshallerApi) {\n         this.promises = promises;\n+        this.pmmlEditorMarshallerApi = pmmlEditorMarshallerApi;\n     }\n \n-    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFile, final String pmmlFileContent) {\n-        if (StringUtils.isEmpty(pmmlFile)) {\n+    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFilePath, final String pmmlFileContent) {\n+        if (StringUtils.isEmpty(pmmlFilePath)) {\n             return promises.reject(\"PMML fileName required to be marshalled is empty or null\");\n         }\n         if (StringUtils.isEmpty(pmmlFileContent)) {\n-            return promises.reject(\"PMML file \" + pmmlFile + \" content required to be marshalled is empty or null\");\n+            return promises.reject(\"PMML file \" + pmmlFilePath + \" content required to be marshalled is empty or null\");\n         }\n \n-        /* Here, a JSInterop call through enveloper should be used passing pmmlFileContent */\n-        String pmmlFileName = FileUtils.getFileName(pmmlFile);\n-        PMMLDocumentMetadata documentMetadata = new PMMLDocumentMetadata(pmmlFile,\n-                                                                         pmmlFileName,\n-                                                                         DMNImportTypes.PMML.getDefaultNamespace(),\n-                                                                         Collections.emptyList());\n-        return promises.resolve(documentMetadata);\n+        try {\n+            PMMLDocumentData pmmlDocumentData = pmmlEditorMarshallerApi.getPMMLDocumentData(pmmlFileContent);\n+            PMMLDocumentMetadata pmmlDocumentMetadata = PMMLMarshallerConverter.fromJSInteropToMetadata(pmmlFilePath, pmmlDocumentData);\n+            return promises.resolve(pmmlDocumentMetadata);\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDg5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        PMMLDocumentData pmmlDocumentData = pmmlEditorMarshallerApi.getPMMLDocumentData(pmmlFileContent);\n          \n          \n            \n                        final PMMLDocumentData pmmlDocumentData = pmmlEditorMarshallerApi.getPMMLDocumentData(pmmlFileContent);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610896", "createdAt": "2020-08-12T23:55:32Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java", "diffHunk": "@@ -34,30 +33,33 @@\n public class PMMLMarshallerService {\n \n     private Promises promises;\n+    private PMMLEditorMarshallerApi pmmlEditorMarshallerApi;\n \n     public PMMLMarshallerService() {\n         // CDI\n     }\n \n     @Inject\n-    public PMMLMarshallerService(final Promises promises) {\n+    public PMMLMarshallerService(final Promises promises,\n+                                 final PMMLEditorMarshallerApi pmmlEditorMarshallerApi) {\n         this.promises = promises;\n+        this.pmmlEditorMarshallerApi = pmmlEditorMarshallerApi;\n     }\n \n-    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFile, final String pmmlFileContent) {\n-        if (StringUtils.isEmpty(pmmlFile)) {\n+    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFilePath, final String pmmlFileContent) {\n+        if (StringUtils.isEmpty(pmmlFilePath)) {\n             return promises.reject(\"PMML fileName required to be marshalled is empty or null\");\n         }\n         if (StringUtils.isEmpty(pmmlFileContent)) {\n-            return promises.reject(\"PMML file \" + pmmlFile + \" content required to be marshalled is empty or null\");\n+            return promises.reject(\"PMML file \" + pmmlFilePath + \" content required to be marshalled is empty or null\");\n         }\n \n-        /* Here, a JSInterop call through enveloper should be used passing pmmlFileContent */\n-        String pmmlFileName = FileUtils.getFileName(pmmlFile);\n-        PMMLDocumentMetadata documentMetadata = new PMMLDocumentMetadata(pmmlFile,\n-                                                                         pmmlFileName,\n-                                                                         DMNImportTypes.PMML.getDefaultNamespace(),\n-                                                                         Collections.emptyList());\n-        return promises.resolve(documentMetadata);\n+        try {\n+            PMMLDocumentData pmmlDocumentData = pmmlEditorMarshallerApi.getPMMLDocumentData(pmmlFileContent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDk2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        PMMLDocumentMetadata pmmlDocumentMetadata = PMMLMarshallerConverter.fromJSInteropToMetadata(pmmlFilePath, pmmlDocumentData);\n          \n          \n            \n                        final PMMLDocumentMetadata pmmlDocumentMetadata = PMMLMarshallerConverter.fromJSInteropToMetadata(pmmlFilePath, pmmlDocumentData);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469610961", "createdAt": "2020-08-12T23:55:45Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java", "diffHunk": "@@ -34,30 +33,33 @@\n public class PMMLMarshallerService {\n \n     private Promises promises;\n+    private PMMLEditorMarshallerApi pmmlEditorMarshallerApi;\n \n     public PMMLMarshallerService() {\n         // CDI\n     }\n \n     @Inject\n-    public PMMLMarshallerService(final Promises promises) {\n+    public PMMLMarshallerService(final Promises promises,\n+                                 final PMMLEditorMarshallerApi pmmlEditorMarshallerApi) {\n         this.promises = promises;\n+        this.pmmlEditorMarshallerApi = pmmlEditorMarshallerApi;\n     }\n \n-    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFile, final String pmmlFileContent) {\n-        if (StringUtils.isEmpty(pmmlFile)) {\n+    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFilePath, final String pmmlFileContent) {\n+        if (StringUtils.isEmpty(pmmlFilePath)) {\n             return promises.reject(\"PMML fileName required to be marshalled is empty or null\");\n         }\n         if (StringUtils.isEmpty(pmmlFileContent)) {\n-            return promises.reject(\"PMML file \" + pmmlFile + \" content required to be marshalled is empty or null\");\n+            return promises.reject(\"PMML file \" + pmmlFilePath + \" content required to be marshalled is empty or null\");\n         }\n \n-        /* Here, a JSInterop call through enveloper should be used passing pmmlFileContent */\n-        String pmmlFileName = FileUtils.getFileName(pmmlFile);\n-        PMMLDocumentMetadata documentMetadata = new PMMLDocumentMetadata(pmmlFile,\n-                                                                         pmmlFileName,\n-                                                                         DMNImportTypes.PMML.getDefaultNamespace(),\n-                                                                         Collections.emptyList());\n-        return promises.resolve(documentMetadata);\n+        try {\n+            PMMLDocumentData pmmlDocumentData = pmmlEditorMarshallerApi.getPMMLDocumentData(pmmlFileContent);\n+            PMMLDocumentMetadata pmmlDocumentMetadata = PMMLMarshallerConverter.fromJSInteropToMetadata(pmmlFilePath, pmmlDocumentData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMjM0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    PMMLDocumentMetadata documentMetadata = new PMMLDocumentMetadata(PMML_PATH,\n          \n          \n            \n                                                                                     PMML_FILE,\n          \n          \n            \n                                                                                     DMNImportTypes.PMML.getDefaultNamespace(),\n          \n          \n            \n                                                                                     Collections.emptyList());\n          \n          \n            \n                    final PMMLDocumentMetadata documentMetadata = new PMMLDocumentMetadata(PMML_PATH,\n          \n          \n            \n                                                                                           PMML_FILE,\n          \n          \n            \n                                                                                           DMNImportTypes.PMML.getDefaultNamespace(),\n          \n          \n            \n                                                                                           Collections.emptyList());", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469612349", "createdAt": "2020-08-13T00:00:21Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/DMNMarshallerImportsHelperKogitoImplTest.java", "diffHunk": "@@ -201,4 +199,24 @@ public void getPMMLDocumentsAsync() {\n         });\n     }\n \n+    @Test\n+    public void getPMMLDocumentsMetadataFromFilesEmptyFiles() {\n+        dmnMarshallerImportsHelperKogitoImpl.getPMMLDocumentsMetadataFromFiles(Collections.emptyList(), serviceCallbackMock);\n+        dmnMarshallerImportsHelperKogitoImpl.getPMMLDocumentsMetadataFromFiles(null, serviceCallbackMock);\n+        verify(serviceCallbackMock, times(2)).onSuccess(eq(Collections.emptyList()));\n+    }\n+\n+    @Test\n+    public void getPMMLDocumentsMetadataFromFiles() {\n+        PMMLDocumentMetadata documentMetadata = new PMMLDocumentMetadata(PMML_PATH,\n+                                                                         PMML_FILE,\n+                                                                         DMNImportTypes.PMML.getDefaultNamespace(),\n+                                                                         Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMjQ3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    PMMLDocumentData pmmlDocumentDataMock = PowerMockito.mock(PMMLDocumentData.class);\n          \n          \n            \n                    final PMMLDocumentData pmmlDocumentDataMock = PowerMockito.mock(PMMLDocumentData.class);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469612478", "createdAt": "2020-08-13T00:00:46Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverterTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLModelData;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest({PMMLDocumentData.class, PMMLModelData.class})\n+public class PMMLMarshallerConverterTest {\n+\n+    private static final String FILENAME = \"fileName.pmml\";\n+    private static final String PATH = \"test/\" + FILENAME;\n+\n+    @Test\n+    public void fromJSInteropToMetadata_EmptyModels() {\n+        PMMLDocumentData pmmlDocumentDataMock = PowerMockito.mock(PMMLDocumentData.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMjUzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    PMMLDocumentMetadata metadata = PMMLMarshallerConverter.fromJSInteropToMetadata(PATH, pmmlDocumentDataMock);\n          \n          \n            \n                    final PMMLDocumentMetadata metadata = PMMLMarshallerConverter.fromJSInteropToMetadata(PATH, pmmlDocumentDataMock);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469612530", "createdAt": "2020-08-13T00:00:57Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverterTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLModelData;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest({PMMLDocumentData.class, PMMLModelData.class})\n+public class PMMLMarshallerConverterTest {\n+\n+    private static final String FILENAME = \"fileName.pmml\";\n+    private static final String PATH = \"test/\" + FILENAME;\n+\n+    @Test\n+    public void fromJSInteropToMetadata_EmptyModels() {\n+        PMMLDocumentData pmmlDocumentDataMock = PowerMockito.mock(PMMLDocumentData.class);\n+        PowerMockito.when(pmmlDocumentDataMock.getModels()).thenReturn(Collections.emptyList());\n+        PMMLDocumentMetadata metadata = PMMLMarshallerConverter.fromJSInteropToMetadata(PATH, pmmlDocumentDataMock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMjczOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String modelName = \"LinearRegression\";\n          \n          \n            \n                    String[] fieldsNames = {\"field1\", \"field2\"};\n          \n          \n            \n                    List<String> fields = Arrays.asList(fieldsNames);\n          \n          \n            \n                    List<PMMLModelData> modelsData = new ArrayList<>();\n          \n          \n            \n                            PMMLModelData pmmlModelDataMock = PowerMockito.mock(PMMLModelData.class);\n          \n          \n            \n                    final String modelName = \"LinearRegression\";\n          \n          \n            \n                    final String[] fieldsNames = {\"field1\", \"field2\"};\n          \n          \n            \n                    final List<String> fields = Arrays.asList(fieldsNames);\n          \n          \n            \n                    final List<PMMLModelData> modelsData = new ArrayList<>();\n          \n          \n            \n                    final PMMLModelData pmmlModelDataMock = PowerMockito.mock(PMMLModelData.class);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469612738", "createdAt": "2020-08-13T00:01:36Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverterTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.converters;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLModelData;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest({PMMLDocumentData.class, PMMLModelData.class})\n+public class PMMLMarshallerConverterTest {\n+\n+    private static final String FILENAME = \"fileName.pmml\";\n+    private static final String PATH = \"test/\" + FILENAME;\n+\n+    @Test\n+    public void fromJSInteropToMetadata_EmptyModels() {\n+        PMMLDocumentData pmmlDocumentDataMock = PowerMockito.mock(PMMLDocumentData.class);\n+        PowerMockito.when(pmmlDocumentDataMock.getModels()).thenReturn(Collections.emptyList());\n+        PMMLDocumentMetadata metadata = PMMLMarshallerConverter.fromJSInteropToMetadata(PATH, pmmlDocumentDataMock);\n+        assertEquals(PATH, metadata.getPath());\n+        assertEquals(FILENAME, metadata.getName());\n+        assertEquals(0, metadata.getModels().size());\n+    }\n+\n+    @Test\n+    public void fromJSInteropToMetadata_WithModels() {\n+        String modelName = \"LinearRegression\";\n+        String[] fieldsNames = {\"field1\", \"field2\"};\n+        List<String> fields = Arrays.asList(fieldsNames);\n+        List<PMMLModelData> modelsData = new ArrayList<>();\n+                PMMLModelData pmmlModelDataMock = PowerMockito.mock(PMMLModelData.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMjk0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    PMMLDocumentData pmmlDocumentData = PowerMockito.mock(PMMLDocumentData.class);\n          \n          \n            \n                    final PMMLDocumentData pmmlDocumentData = PowerMockito.mock(PMMLDocumentData.class);", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469612941", "createdAt": "2020-08-13T00:02:09Z", "author": {"login": "karreiro"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerServiceTest.java", "diffHunk": "@@ -15,42 +15,61 @@\n  */\n package org.kie.workbench.common.dmn.webapp.kogito.common.client.services;\n \n+import java.util.Collections;\n+\n import elemental2.promise.Promise;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.PMMLEditorMarshallerApi;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n import org.kie.workbench.common.dmn.api.editors.included.DMNImportTypes;\n import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.mockito.Mock;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n import org.uberfire.client.promise.Promises;\n import org.uberfire.promise.SyncPromises;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n+import static org.mockito.Mockito.when;\n \n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest(PMMLDocumentData.class)\n public class PMMLMarshallerServiceTest {\n \n     private static final String FILENAME = \"fileName.pmml\";\n     private static final String PATH = \"test/\" + FILENAME;\n     private static final String CONTENT = \"<xml>content</xml>\";\n \n+    @Mock\n+    private PMMLEditorMarshallerApi pmmlEditorMarshallerApiMock;\n+\n     private Promises promises;\n     private PMMLMarshallerService pmmlMarshallerService;\n \n     @Before\n     public void setup() {\n         promises = new SyncPromises();\n-        pmmlMarshallerService = new PMMLMarshallerService(promises);\n+        pmmlMarshallerService = new PMMLMarshallerService(promises, pmmlEditorMarshallerApiMock);\n     }\n \n     @Test\n     public void getDocumentMetadata() {\n+        PMMLDocumentData pmmlDocumentData = PowerMockito.mock(PMMLDocumentData.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDU4ODQ3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#pullrequestreview-466458847", "createdAt": "2020-08-13T05:44:35Z", "commit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNTo0NDozNVrOG_8zaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNTo0NDozNVrOG_8zaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwOTY3NQ==", "bodyText": "Shouldn't we change also the reecting message? there we refer still fileName instead of filePath.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#discussion_r469709675", "createdAt": "2020-08-13T05:44:35Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java", "diffHunk": "@@ -34,30 +33,33 @@\n public class PMMLMarshallerService {\n \n     private Promises promises;\n+    private PMMLEditorMarshallerApi pmmlEditorMarshallerApi;\n \n     public PMMLMarshallerService() {\n         // CDI\n     }\n \n     @Inject\n-    public PMMLMarshallerService(final Promises promises) {\n+    public PMMLMarshallerService(final Promises promises,\n+                                 final PMMLEditorMarshallerApi pmmlEditorMarshallerApi) {\n         this.promises = promises;\n+        this.pmmlEditorMarshallerApi = pmmlEditorMarshallerApi;\n     }\n \n-    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFile, final String pmmlFileContent) {\n-        if (StringUtils.isEmpty(pmmlFile)) {\n+    public Promise<PMMLDocumentMetadata> getDocumentMetadata(final String pmmlFilePath, final String pmmlFileContent) {\n+        if (StringUtils.isEmpty(pmmlFilePath)) {\n             return promises.reject(\"PMML fileName required to be marshalled is empty or null\");\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525823deb10c1a57c6b8dd1b1b39511d7275c66f"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3835b9628d5361de823078c61dc57e7c065864", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bc3835b9628d5361de823078c61dc57e7c065864", "committedDate": "2020-08-13T07:15:29Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerServiceTest.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "858377f57faf3d18b10c96aed1fa79910ee40f5f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/858377f57faf3d18b10c96aed1fa79910ee40f5f", "committedDate": "2020-08-13T07:15:47Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/DMNMarshallerImportsHelperKogitoImpl.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91f34983744c255ad7f09dda652ce361d5657fbb", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/91f34983744c255ad7f09dda652ce361d5657fbb", "committedDate": "2020-08-13T07:15:57Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb5665f334186e921de7599072057b61c7c45e2d", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cb5665f334186e921de7599072057b61c7c45e2d", "committedDate": "2020-08-13T07:16:40Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1f3da6e8b189a54910481171cc9015f995e116b", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d1f3da6e8b189a54910481171cc9015f995e116b", "committedDate": "2020-08-13T07:16:50Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f388f5c07b59b232229a2f7af2a250b4392a7fdc", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f388f5c07b59b232229a2f7af2a250b4392a7fdc", "committedDate": "2020-08-13T07:16:58Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverter.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b017507f4bb3e50ef1f41ffa14ab07148b0d230", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4b017507f4bb3e50ef1f41ffa14ab07148b0d230", "committedDate": "2020-08-13T07:17:30Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/DMNMarshallerImportsHelperKogitoImplTest.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "882853da5d4fee38b459f41162814139db19e1eb", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/882853da5d4fee38b459f41162814139db19e1eb", "committedDate": "2020-08-13T07:17:37Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverterTest.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c746958f0bf28480ae7547f1c95dcca99bd0f3b4", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c746958f0bf28480ae7547f1c95dcca99bd0f3b4", "committedDate": "2020-08-13T07:17:44Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverterTest.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68a7053cef82aa999f227bd9c447ad4797e3200d", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/68a7053cef82aa999f227bd9c447ad4797e3200d", "committedDate": "2020-08-13T07:18:20Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/test/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/PMMLMarshallerConverterTest.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b5e350d310a28110e85c00a285a445f76329c65", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3b5e350d310a28110e85c00a285a445f76329c65", "committedDate": "2020-08-13T07:18:41Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/DMNClientServicesProxyImpl.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a638021e57209a64af6d87353d292a2a4c70e9ae", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a638021e57209a64af6d87353d292a2a4c70e9ae", "committedDate": "2020-08-13T07:18:53Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00a4b5ba8e2b3054e831b45098fb29e23a27c022", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/00a4b5ba8e2b3054e831b45098fb29e23a27c022", "committedDate": "2020-08-13T07:19:09Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c78bc24322a0d2ad04e19a5305849f470f360b3", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6c78bc24322a0d2ad04e19a5305849f470f360b3", "committedDate": "2020-08-13T07:19:30Z", "message": "Update kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/services/PMMLMarshallerService.java\n\nCo-authored-by: Guilherme Carreiro <karreiro@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5b44e9991ea3b660c9b569f2343b04261bf0e05", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e5b44e9991ea3b660c9b569f2343b04261bf0e05", "committedDate": "2020-08-13T07:22:37Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fe26bc4bc89bb896793c103b4b1f47d23967df9", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9fe26bc4bc89bb896793c103b4b1f47d23967df9", "committedDate": "2020-08-13T07:32:19Z", "message": "Merge remote-tracking branch 'yeser/KOGITO-2895' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c908f1a905743146b5cd5e79c682455a6503105", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/0c908f1a905743146b5cd5e79c682455a6503105", "committedDate": "2020-08-13T07:35:25Z", "message": "KOGITO-2895: Changes required during code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "994d9938c16db4b53f7e7d946c76a5202eff1747", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/994d9938c16db4b53f7e7d946c76a5202eff1747", "committedDate": "2020-08-14T07:07:11Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bcd122716a1965364452b4b3072e9fdf365f45e", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5bcd122716a1965364452b4b3072e9fdf365f45e", "committedDate": "2020-08-14T13:03:36Z", "message": "KOGITO-2895: Changes required during code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c88e86a83da067077abdabafd84276894457b189", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c88e86a83da067077abdabafd84276894457b189", "committedDate": "2020-08-14T13:28:39Z", "message": "KOGITO-2895: Changes required during code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "718f31e8066d669e3b7f4fc2726399a253dcdcd4", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/718f31e8066d669e3b7f4fc2726399a253dcdcd4", "committedDate": "2020-08-31T08:08:41Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27b2a706aedb98676f249c408dfa10884cd94440", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/27b2a706aedb98676f249c408dfa10884cd94440", "committedDate": "2020-08-31T15:18:57Z", "message": "KOGITO-3153: Path fixed for run via quarkus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e7c2771f5d3b0f260c1accf0e77d874207a92a9", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6e7c2771f5d3b0f260c1accf0e77d874207a92a9", "committedDate": "2020-09-01T06:17:14Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bad81ec6b5eb7c26bf92a82b1b52c5a13d95e022", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bad81ec6b5eb7c26bf92a82b1b52c5a13d95e022", "committedDate": "2020-09-01T07:13:05Z", "message": "KOGITO-3153: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5f6987ef774321b5d8440c7222e284d357fd403", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c5f6987ef774321b5d8440c7222e284d357fd403", "committedDate": "2020-09-01T07:36:54Z", "message": "KOGITO-3153: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "190a1267d81495a02bb850b8949053412537c175", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/190a1267d81495a02bb850b8949053412537c175", "committedDate": "2020-09-01T17:07:58Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3c762e54f21634ddb9061e2ce717d2822bf0603", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b3c762e54f21634ddb9061e2ce717d2822bf0603", "committedDate": "2020-09-02T07:20:50Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8b0c47f23bec41da78f4b2ff7f543fe2ae6e155", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/c8b0c47f23bec41da78f4b2ff7f543fe2ae6e155", "committedDate": "2020-09-02T09:59:53Z", "message": "KOGITO-2895: Changes required during code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjYzMzkw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3388#pullrequestreview-482663390", "createdAt": "2020-09-04T13:43:57Z", "commit": {"oid": "c8b0c47f23bec41da78f4b2ff7f543fe2ae6e155"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 505, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}