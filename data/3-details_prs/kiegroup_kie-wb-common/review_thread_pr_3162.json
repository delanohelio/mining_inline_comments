{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTY3OTc4", "number": 3162, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTo0MTo0NlrODg3O6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTo0MTo0NlrODg3O6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Nzg1OTYxOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/model/OutputClauseLiteralExpressionPropertyConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTo0MTo0N1rOFrTdZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMDoxNzoxMlrOFrifNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MTkxMQ==", "bodyText": "wb.getText() never returns null?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3162#discussion_r380951911", "createdAt": "2020-02-18T21:41:47Z", "author": {"login": "danielzhe"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/model/OutputClauseLiteralExpressionPropertyConverter.java", "diffHunk": "@@ -47,4 +54,19 @@ public static OutputClauseLiteralExpression wbFromDMN(final JSITLiteralExpressio\n         }\n         return result;\n     }\n+\n+    /**\n+     * Returns a JSITLiteralExpression of null if the text of the OutputClauseLiteralExpression is empty.\n+     * @param wb\n+     * @return\n+     */\n+    public static JSITLiteralExpression dmnFromWB(final OutputClauseLiteralExpression wb) {\n+        if (Objects.isNull(wb)) {\n+            return null;\n+        } else if (StringUtils.isEmpty(wb.getText().getValue())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc156361be5a55b51c37d8d1ae43a0eb2fd0c2b1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5ODEzMw==", "bodyText": "Hi @danielzhe there is a public setter for Text that does not do a null check. Therefore it's possible that it could be null although that scenario is probably a bug in it's own right! However I've added a new commit checking that getText() is non-null now too. Thank-you .", "url": "https://github.com/kiegroup/kie-wb-common/pull/3162#discussion_r381198133", "createdAt": "2020-02-19T10:17:12Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters/model/OutputClauseLiteralExpressionPropertyConverter.java", "diffHunk": "@@ -47,4 +54,19 @@ public static OutputClauseLiteralExpression wbFromDMN(final JSITLiteralExpressio\n         }\n         return result;\n     }\n+\n+    /**\n+     * Returns a JSITLiteralExpression of null if the text of the OutputClauseLiteralExpression is empty.\n+     * @param wb\n+     * @return\n+     */\n+    public static JSITLiteralExpression dmnFromWB(final OutputClauseLiteralExpression wb) {\n+        if (Objects.isNull(wb)) {\n+            return null;\n+        } else if (StringUtils.isEmpty(wb.getText().getValue())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MTkxMQ=="}, "originalCommit": {"oid": "dc156361be5a55b51c37d8d1ae43a0eb2fd0c2b1"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1520, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}