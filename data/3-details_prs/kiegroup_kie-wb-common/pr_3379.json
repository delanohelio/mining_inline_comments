{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMTQxMjQ1", "number": 3379, "title": "KOGITO-2664: [DMN Designer] Multiple DRDs support", "bodyText": "JIRA: KOGITO-2664: [DMN Designer] Multiple DRDs support\nPart of an ensemble:\n\n#3379\nkiegroup/drools-wb#1416\nkiegroup/kie-wb-distributions#1054\n\nArtifacts\n\nBusiness Central: WAR file v6\nVS Code: plugin v6\n\nDemos\nThis PR covers the following JIRAs:\n\nKOGITO-2665: Marshaller - Adopt the first DMNDiagram as the DRG (author: @karreiro)\n\n\n\n\nKOGITO-2965: Graph - Palette changes (author: @danielzhe)\nKOGITO-2666: Graph - Create mechanism to switch context between graphs (author: @karreiro)\n\n\n\nKOGITO-2669: Decision Navigator - Split current navigator between the DRG and the multiple DRDs (author: @karreiro)\nKOGITO-2670: Decision Navigator - The DRD name must be editable into the decision navigator (author: @karreiro)\n\n\n\nKOGITO-2991: Graph - Keep DRG elements instances synchronised (author: @danielzhe)\nKOGITO-2746: Marshaller - Many nodes instances for a single DRG element (author: @karreiro)\nKOGITO-2671: Decision Components - The decision components widget must show DRGs from the current model (author: @danielzhe)\n\n\n\nKOGITO-2672: Graph - Node remove command (trash icon) should not always delete the DRG element (author: @danielzhe)\n\n\n\nKOGITO-2674: Context menu component (@vpellegrino)\nKOGITO-2675: Context menu - Show the DRD clickable icon when node is selected (@vpellegrino)\nKOGITO-3022: Context menu - When multiple nodes are selected, showing context menu with right click (@vpellegrino)\n\n\n\nKOGITO-2676: Graph - The back link must show the DRD name (@vpellegrino)\nKOGITO-2668: Graph - When a DRD is focused, the name must appear above the canvas (@vpellegrino)\n\n\n\nKOGITO-2964: Marshaller - Use a single Marshaller on all DMN webapps (@karreiro)\n\n\n\nTo retest a PR or trigger a specific build please add a comment:\n\n* Retest PR: jenkins retest this\n* A full downstream build: jenkins do fdb\n* A compile downstream build: jenkins do cdb\n* A full production downstream build: jenkins do product fdb\n* An upstream build: jenkins do upstream", "createdAt": "2020-08-05T04:43:54Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379", "merged": true, "mergeCommit": {"oid": "706a7afc194a0fac5f29135a6e5a72868b504e41"}, "closed": true, "closedAt": "2020-09-18T14:17:24Z", "author": {"login": "karreiro"}, "timelineItems": {"totalCount": 59, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8oGtQABqjM2MzQxNjI3OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKGQgKAFqTQ5MTUwNDkxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5dc51fb74f29496ab9e6590c82fecedf5f129db", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d5dc51fb74f29496ab9e6590c82fecedf5f129db", "committedDate": "2020-08-07T13:41:39Z", "message": "Merge with Daniel branch + Copyright fixes"}, "afterCommit": {"oid": "4d16b989e7d2a9c523aed6fd35fbae156b51c0b9", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4d16b989e7d2a9c523aed6fd35fbae156b51c0b9", "committedDate": "2020-08-07T17:44:37Z", "message": "Merge with master (Import fix [work in progress])"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d16b989e7d2a9c523aed6fd35fbae156b51c0b9", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4d16b989e7d2a9c523aed6fd35fbae156b51c0b9", "committedDate": "2020-08-07T17:44:37Z", "message": "Merge with master (Import fix [work in progress])"}, "afterCommit": {"oid": "d70af8a7ac6dc7a7f8cd2e22e9cd18ea5aa7fd04", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d70af8a7ac6dc7a7f8cd2e22e9cd18ea5aa7fd04", "committedDate": "2020-08-18T07:18:21Z", "message": "Decision navigator [work in progress]"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d70af8a7ac6dc7a7f8cd2e22e9cd18ea5aa7fd04", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/d70af8a7ac6dc7a7f8cd2e22e9cd18ea5aa7fd04", "committedDate": "2020-08-18T07:18:21Z", "message": "Decision navigator [work in progress]"}, "afterCommit": {"oid": "b49459e217c90430fef582c2029b32e26afa552a", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b49459e217c90430fef582c2029b32e26afa552a", "committedDate": "2020-08-18T18:15:12Z", "message": "Decision navigator [work in progress]"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40191cea45f6775d2947eab726658e01dbd3de9a", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/40191cea45f6775d2947eab726658e01dbd3de9a", "committedDate": "2020-08-18T21:53:40Z", "message": "Build fix"}, "afterCommit": {"oid": "9f4521e60c2dd929ece2a0f291d6bc10c5308dfb", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9f4521e60c2dd929ece2a0f291d6bc10c5308dfb", "committedDate": "2020-09-02T02:44:58Z", "message": " - Post-rebase fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f4521e60c2dd929ece2a0f291d6bc10c5308dfb", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9f4521e60c2dd929ece2a0f291d6bc10c5308dfb", "committedDate": "2020-09-02T02:44:58Z", "message": " - Post-rebase fixes"}, "afterCommit": {"oid": "492230b43c0e096ecf76fb27904c1a68e3f08599", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/492230b43c0e096ecf76fb27904c1a68e3f08599", "committedDate": "2020-09-02T03:06:22Z", "message": " - Post-rebase fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTQyNjIy", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#pullrequestreview-483542622", "createdAt": "2020-09-07T13:08:06Z", "commit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzowODowNlrOHN-yRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMzozOVrOHOD8pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyMjIxMw==", "bodyText": "Could you help me here? so items now are ordered in a following manner? DRGs first and the rest after. Now one line above, we've added the separator for DRG, and after (to the original position with offset 1) we add DRDs separator. .... this suggests that we expect that there's just a single DRG in the items array? Cause from the stream sorting above it seems like there's a chance of more DRGs being present.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484422213", "createdAt": "2020-09-07T13:08:06Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/DecisionNavigatorItemsProvider.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.docks.navigator;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DRGElement;\n+import org.kie.workbench.common.dmn.api.definition.model.TextAnnotation;\n+import org.kie.workbench.common.dmn.api.graph.DMNDiagramUtils;\n+import org.kie.workbench.common.dmn.client.docks.navigator.drds.DMNDiagramTuple;\n+import org.kie.workbench.common.dmn.client.docks.navigator.drds.DMNDiagramsSession;\n+import org.kie.workbench.common.dmn.client.docks.navigator.factories.DecisionNavigatorItemFactory;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.graph.Node;\n+import org.kie.workbench.common.stunner.core.graph.content.definition.Definition;\n+\n+@ApplicationScoped\n+public class DecisionNavigatorItemsProvider {\n+\n+    static final String DRG = \"DRG\";\n+\n+    static final String DRDs = \"DRDs\";\n+\n+    private final DecisionNavigatorItemFactory itemFactory;\n+\n+    private final DMNDiagramsSession dmnDiagramsSession;\n+\n+    private final DMNDiagramUtils dmnDiagramUtils;\n+\n+    @Inject\n+    public DecisionNavigatorItemsProvider(final DecisionNavigatorItemFactory itemFactory,\n+                                          final DMNDiagramsSession dmnDiagramsSession,\n+                                          final DMNDiagramUtils dmnDiagramUtils) {\n+        this.itemFactory = itemFactory;\n+        this.dmnDiagramsSession = dmnDiagramsSession;\n+        this.dmnDiagramUtils = dmnDiagramUtils;\n+    }\n+\n+    public List<DecisionNavigatorItem> getItems() {\n+\n+        final List<DecisionNavigatorItem> items = new ArrayList<>();\n+\n+        dmnDiagramsSession.getDMNDiagrams().stream()\n+                .sorted((e1, e2) -> {\n+                    final String dmnElementName1 = e1.getDMDNDiagram().getName().getValue();\n+                    final String dmnElementName2 = e2.getDMDNDiagram().getName().getValue();\n+                    return DRG.equals(dmnElementName1) ? -1 : DRG.equals(dmnElementName2) ? 1 : 0;\n+                })\n+                .forEach(diagramTuple -> {\n+\n+                    final Diagram stunner = diagramTuple.getStunnerDiagram();\n+                    final DecisionNavigatorItem root = makeRoot(diagramTuple);\n+\n+                    items.add(root);\n+\n+                    getNodes(stunner).forEach(node -> makeItem(root, node));\n+                });\n+\n+        if (items.size() > 1) {\n+            items.add(0, itemFactory.makeSeparator(DRG));\n+            items.add(2, itemFactory.makeSeparator(DRDs));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMjM0Ng==", "bodyText": "typo?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public DMNDiagramElement getDMDNDiagram() {\n          \n          \n            \n                public DMNDiagramElement getDMNDiagram() {", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484432346", "createdAt": "2020-09-07T13:28:53Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/drds/DMNDiagramTuple.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.docks.navigator.drds;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DMNDiagramElement;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+\n+public class DMNDiagramTuple {\n+\n+    private final Diagram stunnerDiagram;\n+\n+    private final DMNDiagramElement dmnDiagram;\n+\n+    public DMNDiagramTuple(final Diagram stunnerDiagram,\n+                           final DMNDiagramElement dmnDiagram) {\n+        this.stunnerDiagram = stunnerDiagram;\n+        this.dmnDiagram = dmnDiagram;\n+    }\n+\n+    public Diagram getStunnerDiagram() {\n+        return stunnerDiagram;\n+    }\n+\n+    public DMNDiagramElement getDMDNDiagram() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NzIxMA==", "bodyText": "not sure about if dictated by naming conventions, but for these cases it might be a good idea to consider the abbreviation a single word when forming camelcase name ... getDrgDmnDiagramElement", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484447210", "createdAt": "2020-09-07T13:57:41Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/drds/DMNDiagramsSession.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.docks.navigator.drds;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.jboss.errai.ioc.client.api.ManagedInstance;\n+import org.kie.workbench.common.dmn.api.definition.model.DMNDiagramElement;\n+import org.kie.workbench.common.dmn.api.definition.model.DRGElement;\n+import org.kie.workbench.common.dmn.api.definition.model.Import;\n+import org.kie.workbench.common.dmn.client.graph.DMNGraphUtils;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.diagram.GraphsProvider;\n+import org.kie.workbench.common.stunner.core.diagram.Metadata;\n+import org.kie.workbench.common.stunner.core.graph.Graph;\n+import org.kie.workbench.common.stunner.core.graph.Node;\n+import org.uberfire.backend.vfs.Path;\n+\n+import static java.util.Collections.emptyList;\n+\n+@ApplicationScoped\n+public class DMNDiagramsSession implements GraphsProvider {\n+\n+    private ManagedInstance<DMNDiagramsSessionState> dmnDiagramsSessionStates;\n+\n+    private DMNGraphUtils dmnGraphUtils;\n+\n+    private Map<String, DMNDiagramsSessionState> dmnSessionStatesByPathURI = new HashMap<>();\n+\n+    public DMNDiagramsSession() {\n+        // CDI\n+    }\n+\n+    @Inject\n+    public DMNDiagramsSession(final ManagedInstance<DMNDiagramsSessionState> dmnDiagramsSessionStates,\n+                              final DMNGraphUtils dmnGraphUtils) {\n+        this.dmnDiagramsSessionStates = dmnDiagramsSessionStates;\n+        this.dmnGraphUtils = dmnGraphUtils;\n+    }\n+\n+    public void destroyState(final Metadata metadata) {\n+        dmnSessionStatesByPathURI.remove(getSessionKey(metadata));\n+    }\n+\n+    public DMNDiagramsSessionState setState(final Metadata metadata,\n+                                            final Map<String, Diagram> diagramsByDiagramElementId,\n+                                            final Map<String, DMNDiagramElement> dmnDiagramsByDiagramElementId) {\n+\n+        final DMNDiagramsSessionState state = dmnDiagramsSessionStates.get();\n+\n+        state.getDiagramsByDiagramId().putAll(diagramsByDiagramElementId);\n+        state.getDMNDiagramsByDiagramId().putAll(dmnDiagramsByDiagramElementId);\n+\n+        dmnSessionStatesByPathURI.put(getSessionKey(metadata), state);\n+\n+        return state;\n+    }\n+\n+    public DMNDiagramsSessionState getSessionState() {\n+        return dmnSessionStatesByPathURI.get(getCurrentSessionKey());\n+    }\n+\n+    public String getCurrentSessionKey() {\n+        return Optional\n+                .ofNullable(dmnGraphUtils.getDiagram())\n+                .map(diagram -> getSessionKey(diagram.getMetadata()))\n+                .orElse(\"\");\n+    }\n+\n+    public String getSessionKey(final Metadata metadata) {\n+        return Optional\n+                .ofNullable(metadata)\n+                .map(Metadata::getPath)\n+                .map(Path::toURI)\n+                .orElse(\"\");\n+    }\n+\n+    public void add(final DMNDiagramElement dmnDiagram,\n+                    final Diagram stunnerDiagram) {\n+        final String diagramId = dmnDiagram.getId().getValue();\n+        getSessionState().getDiagramsByDiagramId().put(diagramId, stunnerDiagram);\n+        getSessionState().getDMNDiagramsByDiagramId().put(diagramId, dmnDiagram);\n+    }\n+\n+    public void remove(final DMNDiagramElement dmnDiagram) {\n+        final String diagramId = dmnDiagram.getId().getValue();\n+        getSessionState().getDiagramsByDiagramId().remove(diagramId);\n+        getSessionState().getDMNDiagramsByDiagramId().remove(diagramId);\n+    }\n+\n+    @Override\n+    public Diagram getDiagram(final String dmnDiagramElementId) {\n+        return getSessionState().getDiagram(dmnDiagramElementId);\n+    }\n+\n+    public DMNDiagramElement getDMNDiagramElement(final String dmnDiagramElementId) {\n+        return getSessionState().getDMNDiagramElement(dmnDiagramElementId);\n+    }\n+\n+    public DMNDiagramTuple getDiagramTuple(final String dmnDiagramElementId) {\n+        return getSessionState().getDiagramTuple(dmnDiagramElementId);\n+    }\n+\n+    public List<DMNDiagramTuple> getDMNDiagrams() {\n+        return getSessionState().getDMNDiagrams();\n+    }\n+\n+    public void onDMNDiagramSelected(final @Observes DMNDiagramSelected selected) {\n+        final DMNDiagramElement selectedDiagramElement = selected.getDiagramElement();\n+        if (belongsToCurrentSessionState(selectedDiagramElement)) {\n+            getSessionState().setCurrentDMNDiagramElement(selectedDiagramElement);\n+        }\n+    }\n+\n+    public boolean belongsToCurrentSessionState(final DMNDiagramElement diagramElement) {\n+        return getDMNDiagramElement(diagramElement.getId().getValue()) != null;\n+    }\n+\n+    public Optional<DMNDiagramElement> getCurrentDMNDiagramElement() {\n+        return getSessionState().getCurrentDMNDiagramElement();\n+    }\n+\n+    public Optional<Diagram> getCurrentDiagram() {\n+        return getSessionState().getCurrentDiagram();\n+    }\n+\n+    public Diagram getDRGDiagram() {\n+        return getSessionState().getDRGDiagram();\n+    }\n+\n+    public DMNDiagramElement getDRGDMNDiagramElement() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1MzQ0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public void onInputTextBluer(final BlurEvent event) {\n          \n          \n            \n                    public void onInputTextBlur(final BlurEvent event) {", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484453447", "createdAt": "2020-09-07T14:06:04Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/tree/DecisionNavigatorTreeView.java", "diffHunk": "@@ -247,11 +205,45 @@ public void onIconClick(final ClickEvent event) {\n             event.stopPropagation();\n         }\n \n-        @EventHandler(\"text\")\n-        public void onTextClick(final ClickEvent event) {\n+        @EventHandler(\"text-content\")\n+        public void onTextContentClick(final ClickEvent event) {\n             getItem().onClick();\n         }\n \n+        @EventHandler(\"input-text\")\n+        public void onInputTextKeyPress(final KeyDownEvent event) {\n+            if (event.getNativeEvent().getKeyCode() == 13) {\n+                save();\n+            }\n+        }\n+\n+        @EventHandler(\"input-text\")\n+        public void onInputTextBluer(final BlurEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 181}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzUwMg==", "bodyText": "why invoking refreshTreeView twice?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484457502", "createdAt": "2020-09-07T14:14:18Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/docks/navigator/DecisionNavigatorPresenterTest.java", "diffHunk": "@@ -204,202 +172,29 @@ public void testGetTreePresenter() {\n         assertEquals(treePresenter, presenter.getTreePresenter());\n     }\n \n-    @Test\n-    public void testGetHandler() {\n-\n-        final CanvasHandler expectedCanvasHandler = mock(CanvasHandler.class);\n-        doNothing().when(presenter).refreshTreeView();\n-        presenter.setHandler(expectedCanvasHandler);\n-\n-        final CanvasHandler actualCanvasHandler = presenter.getHandler();\n-\n-        assertEquals(expectedCanvasHandler, actualCanvasHandler);\n-    }\n-\n-    @Test\n-    public void testSetHandler() {\n-\n-        final CanvasHandler expectedCanvasHandler = mock(CanvasHandler.class);\n-        doNothing().when(presenter).refreshTreeView();\n-\n-        presenter.setHandler(expectedCanvasHandler);\n-\n-        verify(presenter).refreshTreeView();\n-        verify(presenter).refreshComponentsView();\n-        assertEquals(expectedCanvasHandler, presenter.getHandler());\n-    }\n-\n     @Test\n     public void testRefreshTreeView() {\n \n         final ArrayList<DecisionNavigatorItem> items = new ArrayList<>();\n         doReturn(items).when(presenter).getItems();\n \n+        presenter.disableRefreshHandlers();\n+        presenter.refreshTreeView();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMjI3OQ==", "bodyText": "Is there a reason not to match types?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484502279", "createdAt": "2020-09-07T15:51:06Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/definition/model/TextAnnotation.java", "diffHunk": "@@ -57,12 +58,18 @@\n         startElement = \"id\")\n public class TextAnnotation extends Artifact implements DMNViewDefinition<GeneralRectangleDimensionsSet>,\n                                                         HasText,\n+                                                        HasContentDefinitionId,\n                                                         DynamicReadOnly {\n \n     private static final String[] READONLY_FIELDS = {\"Description\", \"Text\", \"TextFormat\"};\n \n     protected boolean allowOnlyVisualChange;\n \n+    /**\n+     * Hold the {@link DMNDiagramElement} id for the {@link TextAnnotation} instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjc4OA==", "bodyText": "is there an expectation of reusing the method? If not it IMO adds unnecessary lines of code. But no big deal if you prefer this way.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484506788", "createdAt": "2020-09-07T16:03:39Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/DMNContentServiceImpl.java", "diffHunk": "@@ -0,0 +1,176 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.backend;\n+\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.guvnor.common.services.backend.util.CommentedOptionFactory;\n+import org.guvnor.common.services.project.model.Package;\n+import org.guvnor.common.services.project.model.WorkspaceProject;\n+import org.guvnor.common.services.shared.metadata.model.Metadata;\n+import org.guvnor.common.services.shared.metadata.model.Overview;\n+import org.jboss.errai.bus.server.annotations.Service;\n+import org.kie.workbench.common.dmn.api.DMNContentResource;\n+import org.kie.workbench.common.dmn.api.DMNContentService;\n+import org.kie.workbench.common.dmn.api.marshalling.DMNPathsHelper;\n+import org.kie.workbench.common.dmn.backend.common.DMNIOHelper;\n+import org.kie.workbench.common.services.backend.service.KieService;\n+import org.kie.workbench.common.services.shared.project.KieModule;\n+import org.kie.workbench.common.stunner.project.diagram.ProjectMetadata;\n+import org.kie.workbench.common.stunner.project.diagram.impl.ProjectMetadataImpl;\n+import org.uberfire.backend.server.util.Paths;\n+import org.uberfire.backend.vfs.Path;\n+import org.uberfire.java.nio.base.options.CommentedOption;\n+\n+@Service\n+@ApplicationScoped\n+public class DMNContentServiceImpl extends KieService<String> implements DMNContentService {\n+\n+    private final CommentedOptionFactory commentedOptionFactory;\n+\n+    private final DMNIOHelper dmnIOHelper;\n+\n+    private final DMNPathsHelper pathsHelper;\n+\n+    @Inject\n+    public DMNContentServiceImpl(final CommentedOptionFactory commentedOptionFactory,\n+                                 final DMNIOHelper dmnIOHelper,\n+                                 final DMNPathsHelper pathsHelper) {\n+        this.commentedOptionFactory = commentedOptionFactory;\n+        this.dmnIOHelper = dmnIOHelper;\n+        this.pathsHelper = pathsHelper;\n+    }\n+\n+    @Override\n+    public String getContent(final Path path) {\n+        return getSource(path);\n+    }\n+\n+    @Override\n+    public DMNContentResource getProjectContent(final Path path,\n+                                                final String defSetId) {\n+\n+        final String content = getSource(path);\n+        final String title = path.getFileName();\n+        final ProjectMetadata metadata = buildMetadataInstance(path, defSetId, title);\n+\n+        return new DMNContentResource(content, metadata);\n+    }\n+\n+    @Override\n+    public void saveContent(final Path path,\n+                            final String content,\n+                            final Metadata metadata,\n+                            final String comment) {\n+\n+        try {\n+            ioService.write(convertPath(path),\n+                            content,\n+                            getAttrs(path, metadata),\n+                            getCommentedOption(comment));\n+        } catch (final Exception e) {\n+            logger.error(\"Error while saving diagram.\", e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public List<Path> getModelsPaths(final WorkspaceProject workspaceProject) {\n+        return pathsHelper.getModelsPaths(workspaceProject);\n+    }\n+\n+    @Override\n+    public List<Path> getDMNModelsPaths(final WorkspaceProject workspaceProject) {\n+        return pathsHelper.getDMNModelsPaths(workspaceProject);\n+    }\n+\n+    @Override\n+    public List<Path> getPMMLModelsPaths(final WorkspaceProject workspaceProject) {\n+        return pathsHelper.getPMMLModelsPaths(workspaceProject);\n+    }\n+\n+    @Override\n+    protected String constructContent(final Path path,\n+                                      final Overview _overview) {\n+        return getSource(path);\n+    }\n+\n+    @Override\n+    public String getSource(final Path path) {\n+        return loadPath(path).map(dmnIOHelper::isAsString).orElse(\"\");\n+    }\n+\n+    private CommentedOption getCommentedOption(final String comment) {\n+        return commentedOptionFactory.makeCommentedOption(comment);\n+    }\n+\n+    private Map<String, Object> getAttrs(final Path path,\n+                                         final Metadata metadata) {\n+        return Optional\n+                .ofNullable(metadata)\n+                .map(m -> metadataService.setUpAttributes(path, m))\n+                .orElse(new HashMap<>());\n+    }\n+\n+    private ProjectMetadata buildMetadataInstance(final Path path,\n+                                                  final String defSetId,\n+                                                  final String title) {\n+        final Package modulePackage = moduleService.resolvePackage(path);\n+        final KieModule kieModule = moduleService.resolveModule(path);\n+        return buildProjectMetadataInstance(path,\n+                                            title,\n+                                            defSetId,\n+                                            kieModule.getModuleName(),\n+                                            modulePackage,\n+                                            overviewLoader.loadOverview(path));\n+    }\n+\n+    private ProjectMetadata buildProjectMetadataInstance(final Path path,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 149}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDE2Njc2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#pullrequestreview-484016676", "createdAt": "2020-09-08T10:50:21Z", "commit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MDoyMVrOHOXcoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0MDoxNFrOHOgdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNjI3Mw==", "bodyText": "shouldn't we check here that uuid is actually in correct format?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484826273", "createdAt": "2020-09-08T10:50:21Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/factories/DecisionNavigatorItemFactory.java", "diffHunk": "@@ -51,4 +68,73 @@ public DecisionNavigatorItem makeItem(final Node<View, Edge> node) {\n \n         return baseItemFactory.makeItem(node, Type.ofExpressionNodeClassName(nodeClassName));\n     }\n+\n+    public DecisionNavigatorItem makeRoot(final DMNDiagramTuple diagramTuple) {\n+\n+        final DMNDiagramElement dmnDiagramElement = diagramTuple.getDMDNDiagram();\n+        final String uuid = dmnDiagramElement.getId().getValue();\n+        final String diagramName = dmnDiagramElement.getName().getValue();\n+        final String label;\n+        final boolean isDRG = isDRG(dmnDiagramElement);\n+\n+        if (isDRG) {\n+            final Graph graph = diagramTuple.getStunnerDiagram().getGraph();\n+            final Node<?, ?> rootNode = getRootNode(graph);\n+            label = getNodeName(rootNode);\n+        } else {\n+            label = diagramName;\n+        }\n+\n+        return navigatorItemBuilder()\n+                .withUUID(uuid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjAyOA==", "bodyText": "how is this different from an empty constructor?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484832028", "createdAt": "2020-09-08T11:01:29Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/included/components/DecisionComponents.java", "diffHunk": "@@ -57,17 +57,23 @@\n \n     private final List<DecisionComponentsItem> decisionComponentsItems = new ArrayList<>();\n \n+    private final DMNDiagramsSession dmnDiagramsSession;\n+\n+    public DecisionComponents() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0ODQxMw==", "bodyText": "is this gonna be fixed as part of this PR?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484848413", "createdAt": "2020-09-08T11:35:25Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/preview/PreviewDiagramScreen.java", "diffHunk": "@@ -132,18 +130,15 @@ void closePreview() {\n     }\n \n     void onCanvasSessionOpened(final @Observes SessionOpenedEvent sessionOpenedEvent) {\n-        checkNotNull(\"sessionOpenedEvent\", sessionOpenedEvent);\n-        showPreview(sessionOpenedEvent.getSession());\n+        // TODO {karreiro}: Fix mini diagram preview.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0OTg1OQ==", "bodyText": "the issue links exactly this PR, I would expect the TODO be resolved here.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484849859", "createdAt": "2020-09-08T11:38:21Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/drd/DRDContextMenuService.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.editors.drd;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Event;\n+import javax.inject.Inject;\n+\n+import org.kie.workbench.common.dmn.api.DMNDefinitionSet;\n+import org.kie.workbench.common.dmn.api.definition.model.DMNDiagramElement;\n+import org.kie.workbench.common.dmn.api.graph.DMNDiagramUtils;\n+import org.kie.workbench.common.dmn.client.docks.navigator.drds.DMNDiagramSelected;\n+import org.kie.workbench.common.dmn.client.docks.navigator.drds.DMNDiagramTuple;\n+import org.kie.workbench.common.dmn.client.docks.navigator.drds.DMNDiagramsSession;\n+import org.kie.workbench.common.stunner.core.api.FactoryManager;\n+import org.kie.workbench.common.stunner.core.definition.adapter.binding.BindableAdapterUtils;\n+import org.kie.workbench.common.stunner.core.diagram.Diagram;\n+import org.kie.workbench.common.stunner.core.diagram.Metadata;\n+import org.kie.workbench.common.stunner.core.graph.Edge;\n+import org.kie.workbench.common.stunner.core.graph.Node;\n+import org.kie.workbench.common.stunner.core.graph.content.definition.Definition;\n+\n+@ApplicationScoped\n+public class DRDContextMenuService {\n+\n+    private static String NEW_DIAGRAM_NAME = \"new-diagram\";\n+\n+    private final DMNDiagramsSession dmnDiagramsSession;\n+\n+    private final FactoryManager factoryManager;\n+\n+    private final Event<DMNDiagramSelected> selectedEvent;\n+\n+    private final DMNDiagramUtils dmnDiagramUtils;\n+\n+    @Inject\n+    public DRDContextMenuService(final DMNDiagramsSession dmnDiagramsSession,\n+                                 final FactoryManager factoryManager,\n+                                 final Event<DMNDiagramSelected> selectedEvent,\n+                                 final DMNDiagramUtils dmnDiagramUtils) {\n+        this.dmnDiagramsSession = dmnDiagramsSession;\n+        this.factoryManager = factoryManager;\n+        this.selectedEvent = selectedEvent;\n+        this.dmnDiagramUtils = dmnDiagramUtils;\n+    }\n+\n+    public List<DMNDiagramTuple> getDiagrams() {\n+        return dmnDiagramsSession.getDMNDiagrams();\n+    }\n+\n+    public void addToNewDRD(final Collection<Node<? extends Definition<?>, Edge>> selectedNodes) {\n+\n+        // TODO: https://issues.redhat.com/browse/KOGITO-2992", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3Mzg0Nw==", "bodyText": "In sync with what commented in PreviewDiagramScreen.java - should be done already in this PR? If not, we should create a Jira for the outstanding work and maybe link in the TODO (assuming that this TODO does not limit functionality that was in place originally)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r484973847", "createdAt": "2020-09-08T14:40:14Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/docks/preview/PreviewDiagramScreenTest.java", "diffHunk": "@@ -95,6 +96,7 @@ public void testOnClose() {\n     }\n \n     @Test\n+    @Ignore(\"TODO {karreiro}: Fix mini diagram preview.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c6abb716fb4d407f3f47f420df36dec31285dc9", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3c6abb716fb4d407f3f47f420df36dec31285dc9", "committedDate": "2020-09-02T19:25:03Z", "message": " - Fix 'DMNMarshallerService' when multiple DMN editor instances are opened at the same time"}, "afterCommit": {"oid": "453a88f67d3f2a79213d639e0a13d1a5c3c3f06a", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/453a88f67d3f2a79213d639e0a13d1a5c3c3f06a", "committedDate": "2020-09-09T03:44:36Z", "message": " - Fix: Remove DRD action wasn't removing the DRD from the model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8bb55af423c8c68807ebd9b5f7cb9ca999eb15", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9b8bb55af423c8c68807ebd9b5f7cb9ca999eb15", "committedDate": "2020-09-09T03:54:52Z", "message": "Remove 'kie-wb-common-dmn-webapp-kogito-common/src/*/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/converters'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c4eabddb1c1e5cad096c62363eaf9efd53a7d77", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1c4eabddb1c1e5cad096c62363eaf9efd53a7d77", "committedDate": "2020-09-09T03:56:12Z", "message": "Add 'DMNDiagramElement' (DRD) entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f2be8b29356bbbbb8e23bfe29586ff93e58e83a", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7f2be8b29356bbbbb8e23bfe29586ff93e58e83a", "committedDate": "2020-09-09T03:56:12Z", "message": "'kie-wb-common-dmn-api' + 'kie-wb-common-dmn-backend' Changes\n - DMNContentService - Service responsible for saving and loading string based diagrams, since the marshaller lives in the client side now\n - DMNMarshallerImportsHelper - Now the imports helper is simpler, since part of the logic lives in the client side and doesn't need backend anymore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6985dbe1cea7e03c2aadbad8484d7bc46fc0323d", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/6985dbe1cea7e03c2aadbad8484d7bc46fc0323d", "committedDate": "2020-09-09T03:56:13Z", "message": "Marshaller moved from 'kie-wb-common-dmn-webapp-kogito-common/src/*/java/org/kie/workbench/common/dmn/webapp/kogito/common/client' (already removed) to 'kie-wb-common-dmn-client/src/*/java/org/kie/workbench/common/dmn/client/marshaller'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "921d07d9650097c982b2c8c63297200e59290ff8", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/921d07d9650097c982b2c8c63297200e59290ff8", "committedDate": "2020-09-09T03:56:13Z", "message": " - All 'kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime' changes\n\n - Marshaller integration tests\n     - Coordinates changes (the old implementation wasn't normalizing TextAnnotation coordinates (but it was doing it for all DRG elements) - it's fixed now, and the expected diagrams are updated accordingly\n     - DMN Diagram Elements name convention (now, shapes have a reference for the parent DMN Diagram Element)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ad37550190dbf5868e6e42a82d79793fbc5d23f", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/3ad37550190dbf5868e6e42a82d79793fbc5d23f", "committedDate": "2020-09-09T03:56:13Z", "message": " - DMN Decision Navigator Dock\n     - Decision Navigator Tree\n     - Decision Components widget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5130d7c6019546b5f7e613c6d79e7f071c32d21", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/b5130d7c6019546b5f7e613c6d79e7f071c32d21", "committedDate": "2020-09-09T03:56:14Z", "message": " - Canvas + Commands changes (KOGITO-2672: Node remove command should not delete the DRG element when the node is deleted from a DRD)\n     - 'kie-wb-common-dmn-client/src/*/java/org/kie/workbench/common/dmn/client/canvas'\n     - 'kie-wb-common-dmn-client/src/*/java/org/kie/workbench/common/dmn/client/commands'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7cb12ff32ff8f8fd20db52859fede41e99204e4", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e7cb12ff32ff8f8fd20db52859fede41e99204e4", "committedDate": "2020-09-09T03:56:14Z", "message": " - DRD Context menu\n   - The DRD Context menu shows options for each existing DRD\n   - The DRD Context menu is calling the 'DRDContextMenuService' (which is a work in progress service, and will be finished by KOGITO-2992)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "445f769b9659797ae204d55445c106529f3ce7ae", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/445f769b9659797ae204d55445c106529f3ce7ae", "committedDate": "2020-09-09T03:56:14Z", "message": " - All 'kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-testing' changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecf60359ce03ee7d60cca9566dfbfa62bcbf5b09", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ecf60359ce03ee7d60cca9566dfbfa62bcbf5b09", "committedDate": "2020-09-09T03:56:14Z", "message": "Remove unused markdown file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31e39311ede22d855396d1fb1ac9662a7e4eb565", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/31e39311ede22d855396d1fb1ac9662a7e4eb565", "committedDate": "2020-09-09T03:56:14Z", "message": " - Remove unused log messages\n - Avoid multiple constructor initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a71cc39749c05012bb834e072a4eee3b21a87faf", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a71cc39749c05012bb834e072a4eee3b21a87faf", "committedDate": "2020-09-09T03:56:15Z", "message": " - All 'kie-wb-common-dmn/kie-wb-common-dmn-webapp-standalone' changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7665d79a61f54276d45b70aaf82b23f9b0a6459e", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7665d79a61f54276d45b70aaf82b23f9b0a6459e", "committedDate": "2020-09-09T03:56:15Z", "message": " - All 'kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common' changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe94ba412c47dccb5ae86e2de6e190e57dcc084b", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/fe94ba412c47dccb5ae86e2de6e190e57dcc084b", "committedDate": "2020-09-09T03:56:15Z", "message": " - All 'kie-wb-common-dmn/kie-wb-common-dmn-project-client' changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22fafc3ce1397b415f1c1d67a859f559d64ed7f3", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/22fafc3ce1397b415f1c1d67a859f559d64ed7f3", "committedDate": "2020-09-09T03:56:15Z", "message": "Decision Navigator - Fix 'DecisionNavigatorObserver' to listen 'DMNDiagramSelected'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7144301e0813d3b815f34b93988169ac839fd22b", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7144301e0813d3b815f34b93988169ac839fd22b", "committedDate": "2020-09-09T03:56:15Z", "message": " - Fix 'kie-wb-common-dmn-client/pom.xml'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f8ff702972e7d79d960ed0b4b6bd00d9f7360df", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5f8ff702972e7d79d960ed0b4b6bd00d9f7360df", "committedDate": "2020-09-09T03:56:16Z", "message": " - Synchronize node names when they represent the same DRG element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1574ac88610ce1d7d94b82aec3646b4a10fd191b", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/1574ac88610ce1d7d94b82aec3646b4a10fd191b", "committedDate": "2020-09-09T03:56:16Z", "message": " - Disable 'Preview Diagram' events [temporarily]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f520f6c7708a8c10fc123b3ff79aee9a6d7379e", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9f520f6c7708a8c10fc123b3ff79aee9a6d7379e", "committedDate": "2020-09-09T03:56:16Z", "message": " - Prevent errors during the Decision Components initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebdac8cad99aa81794321703e980aa3bdd928636", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/ebdac8cad99aa81794321703e980aa3bdd928636", "committedDate": "2020-09-09T03:56:16Z", "message": "KOGITO-2991: [DMN Designer] Multiple DRDs support - Graph - Keep DRG elements instances synchronised"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "010a0166e9fc931ac0459953ecfa3c9bd57e2c06", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/010a0166e9fc931ac0459953ecfa3c9bd57e2c06", "committedDate": "2020-09-09T03:56:16Z", "message": "KOGITO-2672: [DMN Designer] Multiple DRDs support - Graph - Node remove command (trash icon) should not always delete the DRG element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa69d99848f38bc63bef4ad82904640439c9e31a", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/aa69d99848f38bc63bef4ad82904640439c9e31a", "committedDate": "2020-09-09T03:56:17Z", "message": "KOGITO-2668: [DMN Designer] Multiple DRDs support - Graph - When a DRD is focused, the name must appear above the canvas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea162eb1f172429a605d994cac34644ccc1b567", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cea162eb1f172429a605d994cac34644ccc1b567", "committedDate": "2020-09-09T03:56:17Z", "message": "KOGITO-2676: [DMN Designer] Multiple DRDs support - Graph - The back link must show the DRD name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8c50b04a69b95585152bb4efeacd400d05e5806", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a8c50b04a69b95585152bb4efeacd400d05e5806", "committedDate": "2020-09-09T03:56:17Z", "message": " - Post-rebase fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ed5d9ab2a9bf9534f7132ba5ac28f69b05fb184", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/9ed5d9ab2a9bf9534f7132ba5ac28f69b05fb184", "committedDate": "2020-09-09T03:56:17Z", "message": "[DO NOT REVIEW THIS COMMIT] KOGITO-2668 must work on drools-wb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f813422b83106e36a98e04f6a440140e6568c947", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f813422b83106e36a98e04f6a440140e6568c947", "committedDate": "2020-09-09T03:56:17Z", "message": " - Fix 'DMNMarshallerService' when multiple DMN editor instances are opened at the same time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65fcea12056f884e7eb6f5f9f61a2263be0f3d2e", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/65fcea12056f884e7eb6f5f9f61a2263be0f3d2e", "committedDate": "2020-09-09T03:56:18Z", "message": " - Post rebase with e17e1deea2e431c60b4210666427faac3565890b (KOGITO-2895 & KOGITO-2896: Enabling PMML support on DMN Designer #3388) changes\n     - PMML support introduced the PMML client side marshaller\n     - Now Kogito webapps use the PMML client side marshaller, but BC webapps continue using the PMML backend marshaller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62eae4caebc122922e93893bbc0960ef8208855c", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/62eae4caebc122922e93893bbc0960ef8208855c", "committedDate": "2020-09-09T03:56:18Z", "message": " - Apply enhancements suggested by Jan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56bb235ce2096e07e72f14d50b76251ed2912125", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/56bb235ce2096e07e72f14d50b76251ed2912125", "committedDate": "2020-09-09T03:56:18Z", "message": " - Fix Undo/Redo error (set parent for the nodes)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cffddf00b4e4e54de5d56a021b5f4369b5733c5a", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cffddf00b4e4e54de5d56a021b5f4369b5733c5a", "committedDate": "2020-09-09T03:56:18Z", "message": " - Fix mini diagram preview"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c8cc7982347f51792909e759ac80740427d0b7e", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7c8cc7982347f51792909e759ac80740427d0b7e", "committedDate": "2020-09-09T03:56:19Z", "message": " - Fix: Remove DRD action wasn't removing the DRD from the model"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "453a88f67d3f2a79213d639e0a13d1a5c3c3f06a", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/453a88f67d3f2a79213d639e0a13d1a5c3c3f06a", "committedDate": "2020-09-09T03:44:36Z", "message": " - Fix: Remove DRD action wasn't removing the DRD from the model"}, "afterCommit": {"oid": "7c8cc7982347f51792909e759ac80740427d0b7e", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7c8cc7982347f51792909e759ac80740427d0b7e", "committedDate": "2020-09-09T03:56:19Z", "message": " - Fix: Remove DRD action wasn't removing the DRD from the model"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzI2ODk3", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#pullrequestreview-484726897", "createdAt": "2020-09-09T07:22:18Z", "commit": {"oid": "7c8cc7982347f51792909e759ac80740427d0b7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMjoxOFrOHO6Bcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMjoxOFrOHO6Bcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5Mjc1NQ==", "bodyText": "here the message indicates that the actual file is empty, but in this case it's rather the path to the file.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#discussion_r485392755", "createdAt": "2020-09-09T07:22:18Z", "author": {"login": "jstastny-cz"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/included/DMNMarshallerImportsContentServiceKogitoImpl.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.webapp.kogito.common.client.included;\n+\n+import javax.enterprise.inject.Alternative;\n+import javax.inject.Inject;\n+\n+import elemental2.promise.Promise;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.PMMLEditorMarshallerApi;\n+import org.appformer.kogito.bridge.client.pmmleditor.marshaller.model.PMMLDocumentData;\n+import org.appformer.kogito.bridge.client.resource.interop.ResourceListOptions;\n+import org.kie.workbench.common.dmn.api.editors.included.PMMLDocumentMetadata;\n+import org.kie.workbench.common.dmn.client.marshaller.included.DMNMarshallerImportsContentService;\n+import org.kie.workbench.common.dmn.webapp.kogito.common.client.converters.PMMLMarshallerConverter;\n+import org.kie.workbench.common.kogito.webapp.base.client.workarounds.KogitoResourceContentService;\n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+import org.uberfire.client.promise.Promises;\n+\n+@Alternative\n+public class DMNMarshallerImportsContentServiceKogitoImpl implements DMNMarshallerImportsContentService {\n+\n+    private final KogitoResourceContentService contentService;\n+\n+    private final Promises promises;\n+\n+    private final PMMLEditorMarshallerApi pmmlEditorMarshallerApi;\n+\n+    static final String DMN_FILES_PATTERN = \"*.dmn\";\n+\n+    static final String PMML_FILES_PATTERN = \"*.pmml\";\n+\n+    static final String MODEL_FILES_PATTERN = \"*.{dmn,pmml}\";\n+\n+    @Inject\n+    public DMNMarshallerImportsContentServiceKogitoImpl(final KogitoResourceContentService contentService,\n+                                                        final Promises promises,\n+                                                        final PMMLEditorMarshallerApi pmmlEditorMarshallerApi) {\n+        this.contentService = contentService;\n+        this.promises = promises;\n+        this.pmmlEditorMarshallerApi = pmmlEditorMarshallerApi;\n+    }\n+\n+    @Override\n+    public Promise<String> loadFile(final String file) {\n+        return contentService.loadFile(file);\n+    }\n+\n+    @Override\n+    public Promise<String[]> getModelsURIs() {\n+        return contentService.getFilteredItems(MODEL_FILES_PATTERN, ResourceListOptions.assetFolder());\n+    }\n+\n+    @Override\n+    public Promise<String[]> getModelsDMNFilesURIs() {\n+        return contentService.getFilteredItems(DMN_FILES_PATTERN, ResourceListOptions.assetFolder());\n+    }\n+\n+    @Override\n+    public Promise<String[]> getModelsPMMLFilesURIs() {\n+        return contentService.getFilteredItems(PMML_FILES_PATTERN, ResourceListOptions.assetFolder());\n+    }\n+\n+    @Override\n+    public Promise<PMMLDocumentMetadata> getPMMLDocumentMetadata(final String pmmlFilePath) {\n+\n+        if (StringUtils.isEmpty(pmmlFilePath)) {\n+            return promises.reject(\"PMML file required to be marshalled is empty or null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c8cc7982347f51792909e759ac80740427d0b7e"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2c1f4119d860db55c69ef3e0a9d93436d166d39", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a2c1f4119d860db55c69ef3e0a9d93436d166d39", "committedDate": "2020-09-09T16:56:40Z", "message": " - Remove 'FormatterJs.js' from non-development webapps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e86c470ccc7c1b97962c6e50cea406b368e6fe6e", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e86c470ccc7c1b97962c6e50cea406b368e6fe6e", "committedDate": "2020-09-09T19:41:23Z", "message": "  - KOGITO-2992: Context menu actions\n      - Selected node(s) is(are) added to the new DRD\n      - Fix overlapping breadcrumbs (issue reported by Jan)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dc44ca08172ab396ea8e6403f131dbd8b33864d", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/7dc44ca08172ab396ea8e6403f131dbd8b33864d", "committedDate": "2020-09-09T22:59:08Z", "message": " - Fix for boxed expressions editor, when the DRD name component does not exist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f99df6a70739c1a46ac485e60629fe2de1c22eb", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5f99df6a70739c1a46ac485e60629fe2de1c22eb", "committedDate": "2020-09-10T18:46:12Z", "message": " - Fix 'Issue#6' - Prevent null pointer exception during clone operations when source objects have null fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5016697cc0303763d29aeec17ec497f5e4da242b", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5016697cc0303763d29aeec17ec497f5e4da242b", "committedDate": "2020-09-11T19:42:54Z", "message": " - Fix 'Issue#4' - Now Data Types tab and Included Models tab are not DRD scoped anymore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46d5e9d86b99655e3452f8a667d4a2fd88d3f973", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/46d5e9d86b99655e3452f8a667d4a2fd88d3f973", "committedDate": "2020-09-14T18:57:28Z", "message": " - Fix undo/redo (command list was being lost when users changed between diagrams) (KOGITO-3192)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af70a71289e9f439e3bde956c50036035e8120bb", "author": {"user": {"login": "vpellegrino", "name": "Valentino Pellegrino"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/af70a71289e9f439e3bde956c50036035e8120bb", "committedDate": "2020-09-14T18:57:41Z", "message": " - Solving overlapping issue of palette with session header container\n\n - Solving drools-wb-webapp issue with session header container setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2caaeb4f81a5f3d4ce2043eba274c48830d14355", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/2caaeb4f81a5f3d4ce2043eba274c48830d14355", "committedDate": "2020-09-14T18:58:34Z", "message": " - Fix validation error when users try to save a model with a new diagram (DRD)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89a2b0b112a170ea35418255038b2de1d7815060", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/89a2b0b112a170ea35418255038b2de1d7815060", "committedDate": "2020-09-15T04:02:28Z", "message": " - Fix 'Issue#9' - Now when users click on a node, the decision navitor loads the corresponding diagram"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "250ebb97cb099be225004ce5fab30cbb9ededef9", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/250ebb97cb099be225004ce5fab30cbb9ededef9", "committedDate": "2020-09-15T04:08:32Z", "message": " - Improve error logs (enhancement suggested by Jan)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "120133ce28130877c76f9c32d5716534652368e1", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/120133ce28130877c76f9c32d5716534652368e1", "committedDate": "2020-09-15T04:41:13Z", "message": " - Add CDI proxy comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODU5OTMw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#pullrequestreview-490859930", "createdAt": "2020-09-17T18:06:47Z", "commit": {"oid": "106c792b90494ee0cc1645137fce2558dec057cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9d228c0982be1ea0465e7dcffbefeb6e7bb7e2d", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/f9d228c0982be1ea0465e7dcffbefeb6e7bb7e2d", "committedDate": "2020-09-18T03:01:22Z", "message": " - Fix 'Issue#17' - Some connections were being missed when the node appears on other DRD without relationship\n\n - Fix 'Issue#12' - The validation service must rely the client side marshaller\n\n - Fix 'Issue#14'- Prevent null pointer exception on registry notification when session is not initialized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22744ca3deab9c16d7bb42a09e4e89c550426013", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/22744ca3deab9c16d7bb42a09e4e89c550426013", "committedDate": "2020-09-18T03:01:40Z", "message": " - Fix full downstream build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01c85c0c0419d29cc1199a35d2b5890216aab70f", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/01c85c0c0419d29cc1199a35d2b5890216aab70f", "committedDate": "2020-09-18T03:01:47Z", "message": " - Fix 'Issue#18' - Now the DMN xml is being correctly persisted"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "106c792b90494ee0cc1645137fce2558dec057cc", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/106c792b90494ee0cc1645137fce2558dec057cc", "committedDate": "2020-09-16T12:59:16Z", "message": " - Fix full downstream build"}, "afterCommit": {"oid": "01c85c0c0419d29cc1199a35d2b5890216aab70f", "author": {"user": {"login": "karreiro", "name": "Guilherme Carreiro"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/01c85c0c0419d29cc1199a35d2b5890216aab70f", "committedDate": "2020-09-18T03:01:47Z", "message": " - Fix 'Issue#18' - Now the DMN xml is being correctly persisted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjc0MjIw", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#pullrequestreview-491274220", "createdAt": "2020-09-18T08:53:11Z", "commit": {"oid": "01c85c0c0419d29cc1199a35d2b5890216aab70f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNTA0OTE1", "url": "https://github.com/kiegroup/kie-wb-common/pull/3379#pullrequestreview-491504915", "createdAt": "2020-09-18T14:13:56Z", "commit": {"oid": "01c85c0c0419d29cc1199a35d2b5890216aab70f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 494, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}