{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODQ0NDMy", "number": 3246, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0ODo0NVrODraWfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowODo1MlrODrqZ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODQ3MTAyOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-spaces-screen/.gitignore", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0ODo0NVrOF7vqVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0ODo0NVrOF7vqVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MTE5MA==", "bodyText": "just a clean up", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398191190", "createdAt": "2020-03-25T21:48:45Z", "author": {"login": "ederign"}, "path": "kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-spaces-screen/.gitignore", "diffHunk": "@@ -1,4 +1,5 @@\n node_modules/\n dist/\n coverage/\n-target/\n\\ No newline at end of file\n+target/\n+yarn*.log", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODQ3MTc0OnYy", "diffSide": "LEFT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-client/kie-wb-common-stunner-widgets/src/main/java/org/kie/workbench/common/stunner/client/widgets/presenters/Viewer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0ODo1NlrOF7vqxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0ODo1NlrOF7vqxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MTMwMA==", "bodyText": "another clean up", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398191300", "createdAt": "2020-03-25T21:48:56Z", "author": {"login": "ederign"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-client/kie-wb-common-stunner-widgets/src/main/java/org/kie/workbench/common/stunner/client/widgets/presenters/Viewer.java", "diffHunk": "@@ -40,8 +40,6 @@\n         default void onSuccess() {\n         }\n \n-        ;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODQ3MjU2OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-showcase/kie-wb-common-stunner-showcase-standalone/src/main/java/org/kie/workbench/common/stunner/standalone/client/editor/BPMNStandaloneDiagramEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0OToxM1rOF7vrSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0OToxM1rOF7vrSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MTQzNA==", "bodyText": "@romartin I'm not sure what should I return here.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398191434", "createdAt": "2020-03-25T21:49:13Z", "author": {"login": "ederign"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-showcase/kie-wb-common-stunner-showcase-standalone/src/main/java/org/kie/workbench/common/stunner/standalone/client/editor/BPMNStandaloneDiagramEditor.java", "diffHunk": "@@ -316,6 +316,7 @@ public void onError(final ClientRuntimeError error) {\n                                           BPMNStandaloneDiagramEditor.this.getEditor().onLoadError(error);\n                                       }\n                                   });\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTA4NDk0OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/AbstractDMNDiagramEditor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNToxOFrOF8Igzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozMzozOVrOF8ScAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5ODM1MA==", "bodyText": "please update formatting", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398598350", "createdAt": "2020-03-26T14:05:18Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/AbstractDMNDiagramEditor.java", "diffHunk": "@@ -430,25 +392,42 @@ public boolean isDirty() {\n \n     @Override\n     @SetContent\n-    public void setContent(final String path,\n+    public Promise setContent(final String path,\n                            final String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc2MDk2MA==", "bodyText": "fixed", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398760960", "createdAt": "2020-03-26T17:33:39Z", "author": {"login": "ederign"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/AbstractDMNDiagramEditor.java", "diffHunk": "@@ -430,25 +392,42 @@ public boolean isDirty() {\n \n     @Override\n     @SetContent\n-    public void setContent(final String path,\n+    public Promise setContent(final String path,\n                            final String value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5ODM1MA=="}, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTEwMTAxOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-kogito/kie-wb-common-kogito-client/src/main/java/org/kie/workbench/common/kogito/client/editor/BaseKogitoEditor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowODo1MlrOF8IrBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1MTowN1rOF8NoXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMDk2NA==", "bodyText": "In appformer we changed to Promise<Void> shouldn't we follow also here?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398600964", "createdAt": "2020-03-26T14:08:52Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-kogito/kie-wb-common-kogito-client/src/main/java/org/kie/workbench/common/kogito/client/editor/BaseKogitoEditor.java", "diffHunk": "@@ -145,7 +145,7 @@ public boolean isDirty() {\n      * @param value\n      * Editor's content\n      */\n-    public abstract void setContent(final String path, final String value);\n+    public abstract Promise setContent(final String path, final String value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4MjIwNA==", "bodyText": "That's a current limitation of our annotation processors. Other methods also return untyped Promises for now.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3246#discussion_r398682204", "createdAt": "2020-03-26T15:51:07Z", "author": {"login": "tiagobento"}, "path": "kie-wb-common-kogito/kie-wb-common-kogito-client/src/main/java/org/kie/workbench/common/kogito/client/editor/BaseKogitoEditor.java", "diffHunk": "@@ -145,7 +145,7 @@ public boolean isDirty() {\n      * @param value\n      * Editor's content\n      */\n-    public abstract void setContent(final String path, final String value);\n+    public abstract Promise setContent(final String path, final String value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMDk2NA=="}, "originalCommit": {"oid": "0d5c3a182f32482fa74a58097c72709a57e06171"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1419, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}