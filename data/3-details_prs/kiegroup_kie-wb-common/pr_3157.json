{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODMzMjMw", "number": 3157, "title": "DROOLS-5058: [DMN Designer] Impossible to open a decision if another opened DMN is editing a decision", "bodyText": "See https://issues.redhat.com/browse/DROOLS-5058\n@jomarko Please feel free to reassign if you like.", "createdAt": "2020-02-13T12:09:49Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3157", "merged": true, "mergeCommit": {"oid": "e957b40f53692879c0c6add40fbd513be7f9656b"}, "closed": true, "closedAt": "2020-02-20T17:05:22Z", "author": {"login": "manstis"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD5nX5gH2gAyMzc0ODMzMjMwOjQ1MzU5NmI3Y2IwZDlmZmI2ODk1MDYyMzk3YThlMGQwYTVmYzcxMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGJ3sEAFqTM2MTg0NTE2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "453596b7cb0d9ffb6895062397a8e0d0a5fc7137", "author": {"user": null}, "url": "https://github.com/kiegroup/kie-wb-common/commit/453596b7cb0d9ffb6895062397a8e0d0a5fc7137", "committedDate": "2020-02-13T11:55:27Z", "message": "DROOLS-5058: [DMN Designer] Impossible to open a decision if another opened DMN is editing a decision"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzEyMzc5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3157#pullrequestreview-358312379", "createdAt": "2020-02-13T15:30:59Z", "commit": {"oid": "453596b7cb0d9ffb6895062397a8e0d0a5fc7137"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozMDo1OVrOFpYU3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozMDo1OVrOFpYU3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzNDQ5Mw==", "bodyText": "Is there a way in Errai to avoid CDI Events propagation and better scope the firing?\nThis mechanism is quite error prone because even if this class is Dependent it seems to receive all the events so we need to remember to add this kind of filters everywhere.\nWdyt? Am I missing something?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3157#discussion_r378934493", "createdAt": "2020-02-13T15:30:59Z", "author": {"login": "danielezonca"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/ExpressionEditorControlImpl.java", "diffHunk": "@@ -132,7 +132,11 @@ protected void doDestroy() {\n \n     @SuppressWarnings(\"unused\")\n     public void onCanvasFocusedSelectionEvent(final @Observes CanvasSelectionEvent event) {\n-        expressionEditor.ifPresent(ExpressionEditorView.Presenter::exit);\n+        session.ifPresent(s -> {\n+            if (Objects.equals(s.getCanvasHandler(), event.getCanvasHandler())) {\n+                expressionEditor.ifPresent(ExpressionEditorView.Presenter::exit);\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "453596b7cb0d9ffb6895062397a8e0d0a5fc7137"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxODQ1MTY2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3157#pullrequestreview-361845166", "createdAt": "2020-02-20T11:59:37Z", "commit": {"oid": "453596b7cb0d9ffb6895062397a8e0d0a5fc7137"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 710, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}