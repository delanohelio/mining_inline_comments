{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1OTI2NDQ5", "number": 3317, "title": "JBPM-9176 remove Powermock dependency from designer and stunner framework", "bodyText": "Hi @romartin, @LuboTerifaj, @domhanak,\nthere are changes with Powermock removals. I tried to do it as gentle as possible, but still think it is OK to postpone merge of this PR after closest release cut.\nBut it is ready for review from code point of view. Full Downstream Build binaries can wait because we have only 10 builds allowed now for kie-wb-common Full Downstream and there are more urgent PRs available now (see BXMSPROD-803 for more details).\nAnyway let's check my changes on the code level and fix all your suggestions before start Full Downstream.\nThank you!", "createdAt": "2020-06-01T11:40:55Z", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317", "merged": true, "mergeCommit": {"oid": "7e0068f1182e64481dfa82f111d5855ebbd24dfd"}, "closed": true, "closedAt": "2020-11-23T15:25:03Z", "author": {"login": "hasys"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrb9yWgBqjM0NDMxMDk5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeEki3AFqTUzNDU3MDAwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e005cf941502561b7961875fba1a74cdd17470ef", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/e005cf941502561b7961875fba1a74cdd17470ef", "committedDate": "2020-06-01T16:07:27Z", "message": "DMN build fixed"}, "afterCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/a350c4823f1fe0a026154abc714064e98a9f6904", "committedDate": "2020-06-15T07:59:10Z", "message": "DMN build fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNTg2MjUz", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#pullrequestreview-431586253", "createdAt": "2020-06-16T14:49:45Z", "commit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo0OTo0NlrOGkfGGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTozMjo1N1rOGkhMJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMTM4NQ==", "bodyText": "Why did you remove the test?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440911385", "createdAt": "2020-06-16T14:49:46Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-backend-common/src/test/java/org/kie/workbench/common/stunner/core/backend/service/AbstractVFSDiagramServiceTest.java", "diffHunk": "@@ -310,44 +303,6 @@ public void testContains() {\n                times(1)).getDiagramByPath(path);\n     }\n \n-    @PrepareForTest({Files.class, Paths.class})\n-    @Test\n-    public void testGetAll() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzM3MQ==", "bodyText": "Why did you remove the test? Would it be possible to rewrite the test without using Power Mockito?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440917371", "createdAt": "2020-06-16T14:57:07Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/test/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +94,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzUxNA==", "bodyText": "Why did you remove the test? Would it be possible to rewrite the test without using Power Mockito?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440917514", "createdAt": "2020-06-16T14:57:17Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/test/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +94,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {\n-        mockStatic(PropertyReaderUtils.class);\n-        PowerMockito.when(PropertyReaderUtils.getSourcePosition(definitionResolver, ASSOCIATION_ID, SOURCE_ID)).thenReturn(position);\n-        boolean arbitraryBoolean = true;\n-        PowerMockito.when(PropertyReaderUtils.isAutoConnectionSource(association)).thenReturn(arbitraryBoolean);\n-\n-        Connection result = propertyReader.getSourceConnection();\n-        assertEquals(X, result.getLocation().getX(), 0);\n-        assertEquals(Y, result.getLocation().getY(), 0);\n-    }\n-\n-    @Test\n-    public void testGetTargetConnection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzc2NQ==", "bodyText": "Why did you remove the test? Would it be possible to rewrite the test without using Power Mockito?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440917765", "createdAt": "2020-06-16T14:57:35Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/test/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -144,13 +111,4 @@ public void testGetAssociationByDirection() {\n         association.setAssociationDirection(AssociationDirection.ONE);\n         assertEquals(DirectionalAssociation.class, propertyReader.getAssociationByDirection());\n     }\n-\n-    @Test\n-    @SuppressWarnings(\"unchecked\")\n-    public void testGetControlPoints() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MDEyOA==", "bodyText": "Why did you remove the test? Would it be possible to rewrite the test without using Power Mockito?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440940128", "createdAt": "2020-06-16T15:25:24Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +90,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MDIzNA==", "bodyText": "Why did you remove the test? Would it be possible to rewrite the test without using Power Mockito?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440940234", "createdAt": "2020-06-16T15:25:32Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +90,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {\n-        mockStatic(PropertyReaderUtils.class);\n-        PowerMockito.when(PropertyReaderUtils.getSourcePosition(definitionResolver, ASSOCIATION_ID, SOURCE_ID)).thenReturn(position);\n-        boolean arbitraryBoolean = true;\n-        PowerMockito.when(PropertyReaderUtils.isAutoConnectionSource(association)).thenReturn(arbitraryBoolean);\n-\n-        Connection result = propertyReader.getSourceConnection();\n-        assertEquals(X, result.getLocation().getX(), 0);\n-        assertEquals(Y, result.getLocation().getY(), 0);\n-    }\n-\n-    @Test\n-    public void testGetTargetConnection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MDQwNQ==", "bodyText": "Why did you remove the test? Would it be possible to rewrite the test without using Power Mockito?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440940405", "createdAt": "2020-06-16T15:25:44Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -144,13 +107,4 @@ public void testGetAssociationByDirection() {\n         association.setAssociationDirection(AssociationDirection.ONE);\n         assertEquals(DirectionalAssociation.class, propertyReader.getAssociationByDirection());\n     }\n-\n-    @Test\n-    @SuppressWarnings(\"unchecked\")\n-    public void testGetControlPoints() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0NTMzMw==", "bodyText": "Why did you remove the test?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440945333", "createdAt": "2020-06-16T15:32:26Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/definition/adapter/binding/ClientBindableDefinitionAdapterTest.java", "diffHunk": "@@ -68,18 +66,4 @@ public void test() {\n         assertEquals(DEFINITION_TITLE,\n                      title);\n     }\n-\n-    @Test\n-    public void testGetProperty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0NTQyNw==", "bodyText": "Why did you remove the test?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440945427", "createdAt": "2020-06-16T15:32:34Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/definition/adapter/binding/ClientBindableDefinitionAdapterTest.java", "diffHunk": "@@ -68,18 +66,4 @@ public void test() {\n         assertEquals(DEFINITION_TITLE,\n                      title);\n     }\n-\n-    @Test\n-    public void testGetProperty() {\n-        Optional<?> name = clientBindableDefinitionAdapter.getProperty(model, PROPERTY_NAME);\n-\n-        assertEquals(name.get(), value);\n-    }\n-\n-    @Test\n-    public void testGetNameField() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0NTcwMQ==", "bodyText": "Why did you remove the test?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r440945701", "createdAt": "2020-06-16T15:32:57Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/definition/adapter/binding/ClientBindablePropertySetAdapterTest.java", "diffHunk": "@@ -49,11 +47,4 @@ public void testFunctionality() {\n         assertEquals(PROPERTY_SET_NAME,\n                      description);\n     }\n-\n-    @Test\n-    public void testGetProperty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzExOTE2", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#pullrequestreview-433711916", "createdAt": "2020-06-18T23:31:31Z", "commit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzozMTozMVrOGmDYdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMDowMjoxNlrOGmD51g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1NDQ4Ng==", "bodyText": "aren't we removing the use of powermock ? :)\nI understand you're doing this because now the powermock dependency is not transitively declared on DMN modules, and also DMN (tests) depends on it?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442554486", "createdAt": "2020-06-18T23:31:31Z", "author": {"login": "romartin"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/pom.xml", "diffHunk": "@@ -267,6 +267,18 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1NDU0Mw==", "bodyText": "same as above", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442554543", "createdAt": "2020-06-18T23:31:40Z", "author": {"login": "romartin"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/pom.xml", "diffHunk": "@@ -242,6 +242,16 @@\n       <artifactId>gwtmockito</artifactId>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.powermock</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTk1Nw==", "bodyText": "it can be package protected, so no need for the protected access modifier, this way it results more restrictive (less visible), and we usually have tests on the same package, so the method is already visible for tests.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442559957", "createdAt": "2020-06-18T23:50:26Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-backend-common/src/main/java/org/kie/workbench/common/stunner/core/backend/service/AbstractVFSDiagramService.java", "diffHunk": "@@ -310,12 +306,24 @@ public FileVisitResult visitFile(final org.uberfire.java.nio.file.Path _file,\n         }\n     }\n \n+    protected void walkFileTree(final org.uberfire.java.nio.file.Path root, SimpleFileVisitor<org.uberfire.java.nio.file.Path> fileVisitor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTk5NQ==", "bodyText": "can be package protected", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442559995", "createdAt": "2020-06-18T23:50:36Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-backend-common/src/main/java/org/kie/workbench/common/stunner/core/backend/service/AbstractVFSDiagramService.java", "diffHunk": "@@ -310,12 +306,24 @@ public FileVisitResult visitFile(final org.uberfire.java.nio.file.Path _file,\n         }\n     }\n \n+    protected void walkFileTree(final org.uberfire.java.nio.file.Path root, SimpleFileVisitor<org.uberfire.java.nio.file.Path> fileVisitor) {\n+        org.uberfire.java.nio.file.Files.walkFileTree(checkNotNull(\"root\", root), fileVisitor);\n+    }\n+\n+    protected org.uberfire.backend.vfs.Path convertToBackendPath(final org.uberfire.java.nio.file.Path path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MDAxOA==", "bodyText": "can be package protected", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442560018", "createdAt": "2020-06-18T23:50:42Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-backend-common/src/main/java/org/kie/workbench/common/stunner/core/backend/service/AbstractVFSDiagramService.java", "diffHunk": "@@ -310,12 +306,24 @@ public FileVisitResult visitFile(final org.uberfire.java.nio.file.Path _file,\n         }\n     }\n \n+    protected void walkFileTree(final org.uberfire.java.nio.file.Path root, SimpleFileVisitor<org.uberfire.java.nio.file.Path> fileVisitor) {\n+        org.uberfire.java.nio.file.Files.walkFileTree(checkNotNull(\"root\", root), fileVisitor);\n+    }\n+\n+    protected org.uberfire.backend.vfs.Path convertToBackendPath(final org.uberfire.java.nio.file.Path path) {\n+        return org.uberfire.backend.server.util.Paths.convert(path);\n+    }\n+\n+    protected org.uberfire.java.nio.file.Path convertToNioPath(final org.uberfire.backend.vfs.Path path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MDExMQ==", "bodyText": "can be package protected", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442560111", "createdAt": "2020-06-18T23:51:03Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/definition/adapter/binding/ClientBindableDefinitionAdapter.java", "diffHunk": "@@ -109,8 +109,8 @@ protected String getStringFieldValue(final Object pojo,\n                                fieldName);\n     }\n \n-    private <T, R> R getProxiedValue(final T pojo,\n-                                     final String fieldName) {\n+    protected <T, R> R getProxiedValue(final T pojo,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MjM2Mw==", "bodyText": "IMO taking the approach of having an internal \"utils\" class here makes everythink complex.\nI would keep the class as it is, it just provides a few static methods which rely on Errai data binding, so it's clear this class will never work properly on the testing scope.\nThis way, I would refactor instead the tests that are using this class, as for example you did it on the AbstractVFSDiagramServiceTest class, so by declaring package protected methods which can be mocked, if necessary, to some other result rather than calling the \"real\" ClientBindingUtils insteance.\nWDYT?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442562363", "createdAt": "2020-06-18T23:59:47Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/definition/adapter/binding/ClientBindingUtils.java", "diffHunk": "@@ -31,19 +31,18 @@\n \n public class ClientBindingUtils {\n \n-    private static Logger LOGGER = Logger.getLogger(ClientBindingUtils.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(ClientBindingUtils.class.getName());\n+    private static ClientBindingUtilsImpl utils = new ClientBindingUtilsImpl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MjY4OQ==", "bodyText": "No need for this if not changing ClientBindingUtils", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442562689", "createdAt": "2020-06-19T00:00:59Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/definition/adapter/binding/ClientBindingUtilsImpl.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.core.client.definition.adapter.binding;\n+\n+import org.jboss.errai.databinding.client.HasProperties;\n+import org.jboss.errai.databinding.client.api.DataBinder;\n+\n+// Utilize class for making possible test without static mocking\n+public class ClientBindingUtilsImpl {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2Mjk2OQ==", "bodyText": "really need for changing it to protected?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442562969", "createdAt": "2020-06-19T00:02:02Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/notificationsEditor/widget/NotificationEditorWidgetViewImpl.java", "diffHunk": "@@ -557,7 +557,7 @@ protected String getRepeatCount(String repeatable) {\n         return matcher.getGroup(1);\n     }\n \n-    void ok() {\n+    protected void ok() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2Mjk4MQ==", "bodyText": "really need for changing it to protected?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442562981", "createdAt": "2020-06-19T00:02:06Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/notificationsEditor/widget/NotificationEditorWidgetViewImpl.java", "diffHunk": "@@ -582,7 +582,7 @@ protected void onViolationError(Set<ConstraintViolation<NotificationRow>> violat\n         errorDivPanel.innerHTML = violations.stream().map(v -> \"* \" + v.getMessage()).collect(Collectors.joining(\"\\n\"));\n     }\n \n-    void hide() {\n+    protected void hide() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MzAwMQ==", "bodyText": "really need for changing it to protected?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442563001", "createdAt": "2020-06-19T00:02:10Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/reassignmentsEditor/widget/ReassignmentEditorWidgetViewImpl.java", "diffHunk": "@@ -132,7 +132,7 @@ private void initUsersAndGroupsDropdowns(MultipleSelectorInput multipleUsers,\n         this.multipleSelectorInputGroups.init(groupsLiveSearchService, multipleLiveSearchSelectionHandlerGroups);\n     }\n \n-    void initTypeSelector() {\n+    protected void initTypeSelector() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MzAxMQ==", "bodyText": "really need for changing it to protected?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442563011", "createdAt": "2020-06-19T00:02:14Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/reassignmentsEditor/widget/ReassignmentEditorWidgetViewImpl.java", "diffHunk": "@@ -201,7 +201,7 @@ public void setReadOnly(boolean readOnly) {\n         okButton.disabled = readOnly;\n     }\n \n-    void ok() {\n+    protected void ok() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MzAzMA==", "bodyText": "really need for changing it to protected?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r442563030", "createdAt": "2020-06-19T00:02:16Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/reassignmentsEditor/widget/ReassignmentEditorWidgetViewImpl.java", "diffHunk": "@@ -226,7 +226,7 @@ void close() {\n         hide();\n     }\n \n-    void hide() {\n+    protected void hide() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "182a4c477f3ebc23fc627ce40ccf77e087a8df12", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/182a4c477f3ebc23fc627ce40ccf77e087a8df12", "committedDate": "2020-06-17T16:06:21Z", "message": "PR review Part II"}, "afterCommit": {"oid": "39f7a2ddea0f840bd3a23ede8d2f727925fd7622", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/39f7a2ddea0f840bd3a23ede8d2f727925fd7622", "committedDate": "2020-06-23T12:55:42Z", "message": "PR review Part III"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39f7a2ddea0f840bd3a23ede8d2f727925fd7622", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/39f7a2ddea0f840bd3a23ede8d2f727925fd7622", "committedDate": "2020-06-23T12:55:42Z", "message": "PR review Part III"}, "afterCommit": {"oid": "bc3491630fcc4a3abf4a2bc0751aba90574bd3c4", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bc3491630fcc4a3abf4a2bc0751aba90574bd3c4", "committedDate": "2020-07-01T13:54:04Z", "message": "PR review Part III"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTg2Nzc4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#pullrequestreview-441586778", "createdAt": "2020-07-02T11:24:37Z", "commit": {"oid": "bc3491630fcc4a3abf4a2bc0751aba90574bd3c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc3491630fcc4a3abf4a2bc0751aba90574bd3c4", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/bc3491630fcc4a3abf4a2bc0751aba90574bd3c4", "committedDate": "2020-07-01T13:54:04Z", "message": "PR review Part III"}, "afterCommit": {"oid": "5969e3d84dcc74d13f72f5c4aefef6cdc7cdf6bf", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5969e3d84dcc74d13f72f5c4aefef6cdc7cdf6bf", "committedDate": "2020-10-15T13:49:40Z", "message": "Power Mock reducing in Stunner & BPMN Editor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjE4Nzky", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#pullrequestreview-515618792", "createdAt": "2020-10-23T12:27:55Z", "commit": {"oid": "5969e3d84dcc74d13f72f5c4aefef6cdc7cdf6bf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjoyNzo1NVrOHnLscw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozMTowMVrOHnLzgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0ODExNQ==", "bodyText": "The test hasn't been added back yet.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510848115", "createdAt": "2020-10-23T12:27:55Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-backend-common/src/test/java/org/kie/workbench/common/stunner/core/backend/service/AbstractVFSDiagramServiceTest.java", "diffHunk": "@@ -310,44 +303,6 @@ public void testContains() {\n                times(1)).getDiagramByPath(path);\n     }\n \n-    @PrepareForTest({Files.class, Paths.class})\n-    @Test\n-    public void testGetAll() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMTM4NQ=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0OTE2MA==", "bodyText": "It doesn't test just a basic getter within one class. Therefore I wouldn't remove this test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510849160", "createdAt": "2020-10-23T12:29:44Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/test/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +94,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzM3MQ=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0OTIyNA==", "bodyText": "It doesn't test just a basic getter within one class. Therefore I wouldn't remove this test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510849224", "createdAt": "2020-10-23T12:29:52Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/test/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +94,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {\n-        mockStatic(PropertyReaderUtils.class);\n-        PowerMockito.when(PropertyReaderUtils.getSourcePosition(definitionResolver, ASSOCIATION_ID, SOURCE_ID)).thenReturn(position);\n-        boolean arbitraryBoolean = true;\n-        PowerMockito.when(PropertyReaderUtils.isAutoConnectionSource(association)).thenReturn(arbitraryBoolean);\n-\n-        Connection result = propertyReader.getSourceConnection();\n-        assertEquals(X, result.getLocation().getX(), 0);\n-        assertEquals(Y, result.getLocation().getY(), 0);\n-    }\n-\n-    @Test\n-    public void testGetTargetConnection() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzUxNA=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0OTU3NA==", "bodyText": "It doesn't test just a basic getter within one class. Therefore I wouldn't remove this test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510849574", "createdAt": "2020-10-23T12:30:23Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/test/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -144,13 +111,4 @@ public void testGetAssociationByDirection() {\n         association.setAssociationDirection(AssociationDirection.ONE);\n         assertEquals(DirectionalAssociation.class, propertyReader.getAssociationByDirection());\n     }\n-\n-    @Test\n-    @SuppressWarnings(\"unchecked\")\n-    public void testGetControlPoints() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzc2NQ=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0OTc3MA==", "bodyText": "It doesn't test just a basic getter within one class. Therefore I wouldn't remove this test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510849770", "createdAt": "2020-10-23T12:30:46Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +90,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MDEyOA=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0OTgzNA==", "bodyText": "It doesn't test just a basic getter within one class. Therefore I wouldn't remove this test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510849834", "createdAt": "2020-10-23T12:30:52Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -103,30 +90,6 @@ public void testGetTargetId() {\n         assertEquals(TARGET_ID, propertyReader.getTargetId());\n     }\n \n-    @Test\n-    public void testGetSourceConnection() {\n-        mockStatic(PropertyReaderUtils.class);\n-        PowerMockito.when(PropertyReaderUtils.getSourcePosition(definitionResolver, ASSOCIATION_ID, SOURCE_ID)).thenReturn(position);\n-        boolean arbitraryBoolean = true;\n-        PowerMockito.when(PropertyReaderUtils.isAutoConnectionSource(association)).thenReturn(arbitraryBoolean);\n-\n-        Connection result = propertyReader.getSourceConnection();\n-        assertEquals(X, result.getLocation().getX(), 0);\n-        assertEquals(Y, result.getLocation().getY(), 0);\n-    }\n-\n-    @Test\n-    public void testGetTargetConnection() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MDIzNA=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg0OTkyMg==", "bodyText": "It doesn't test just a basic getter within one class. Therefore I wouldn't remove this test.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#discussion_r510849922", "createdAt": "2020-10-23T12:31:01Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/tostunner/properties/AssociationPropertyReaderTest.java", "diffHunk": "@@ -144,13 +107,4 @@ public void testGetAssociationByDirection() {\n         association.setAssociationDirection(AssociationDirection.ONE);\n         assertEquals(DirectionalAssociation.class, propertyReader.getAssociationByDirection());\n     }\n-\n-    @Test\n-    @SuppressWarnings(\"unchecked\")\n-    public void testGetControlPoints() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MDQwNQ=="}, "originalCommit": {"oid": "a350c4823f1fe0a026154abc714064e98a9f6904"}, "originalPosition": 104}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5969e3d84dcc74d13f72f5c4aefef6cdc7cdf6bf", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5969e3d84dcc74d13f72f5c4aefef6cdc7cdf6bf", "committedDate": "2020-10-15T13:49:40Z", "message": "Power Mock reducing in Stunner & BPMN Editor"}, "afterCommit": {"oid": "64c00b2105b6a5e1f9af6a0fbd4d0cdd50df0e72", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/64c00b2105b6a5e1f9af6a0fbd4d0cdd50df0e72", "committedDate": "2020-10-23T13:52:26Z", "message": "PR review Part II"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64c00b2105b6a5e1f9af6a0fbd4d0cdd50df0e72", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/64c00b2105b6a5e1f9af6a0fbd4d0cdd50df0e72", "committedDate": "2020-10-23T13:52:26Z", "message": "PR review Part II"}, "afterCommit": {"oid": "5dbb6473d9412d90b5b984d7d71109fac1d0777d", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5dbb6473d9412d90b5b984d7d71109fac1d0777d", "committedDate": "2020-10-26T09:50:55Z", "message": "PR review Part II"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzQwOTI4", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#pullrequestreview-519740928", "createdAt": "2020-10-29T14:43:31Z", "commit": {"oid": "5dbb6473d9412d90b5b984d7d71109fac1d0777d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc1e4e49afc593a58ebefc8f08ba5b3396c243d2", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/cc1e4e49afc593a58ebefc8f08ba5b3396c243d2", "committedDate": "2020-11-09T14:13:04Z", "message": "Power Mock reducing in Stunner & BPMN Editor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a74edc08ec2b9e77e69a65f177eb521baf86406", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/4a74edc08ec2b9e77e69a65f177eb521baf86406", "committedDate": "2020-11-09T14:13:57Z", "message": "PR review Part II"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "999ba1982093c45f911f38a0cfc0dde7f4fc4a40", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/999ba1982093c45f911f38a0cfc0dde7f4fc4a40", "committedDate": "2020-11-09T15:10:34Z", "message": "revert couple of tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dbb6473d9412d90b5b984d7d71109fac1d0777d", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/5dbb6473d9412d90b5b984d7d71109fac1d0777d", "committedDate": "2020-10-26T09:50:55Z", "message": "PR review Part II"}, "afterCommit": {"oid": "999ba1982093c45f911f38a0cfc0dde7f4fc4a40", "author": {"user": {"login": "hasys", "name": "Kirill Gaevskii"}}, "url": "https://github.com/kiegroup/kie-wb-common/commit/999ba1982093c45f911f38a0cfc0dde7f4fc4a40", "committedDate": "2020-11-09T15:10:34Z", "message": "revert couple of tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NTcwMDA5", "url": "https://github.com/kiegroup/kie-wb-common/pull/3317#pullrequestreview-534570009", "createdAt": "2020-11-19T15:34:30Z", "commit": {"oid": "999ba1982093c45f911f38a0cfc0dde7f4fc4a40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 400, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}