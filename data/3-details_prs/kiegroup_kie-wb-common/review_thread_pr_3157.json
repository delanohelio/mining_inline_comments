{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODMzMjMw", "number": 3157, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozMDo1OVrODflxcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozMDo1OVrODflxcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDUxMzE1OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/ExpressionEditorControlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozMDo1OVrOFpYU3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTo0MjoyN1rOFpYzKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzNDQ5Mw==", "bodyText": "Is there a way in Errai to avoid CDI Events propagation and better scope the firing?\nThis mechanism is quite error prone because even if this class is Dependent it seems to receive all the events so we need to remember to add this kind of filters everywhere.\nWdyt? Am I missing something?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3157#discussion_r378934493", "createdAt": "2020-02-13T15:30:59Z", "author": {"login": "danielezonca"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/ExpressionEditorControlImpl.java", "diffHunk": "@@ -132,7 +132,11 @@ protected void doDestroy() {\n \n     @SuppressWarnings(\"unused\")\n     public void onCanvasFocusedSelectionEvent(final @Observes CanvasSelectionEvent event) {\n-        expressionEditor.ifPresent(ExpressionEditorView.Presenter::exit);\n+        session.ifPresent(s -> {\n+            if (Objects.equals(s.getCanvasHandler(), event.getCanvasHandler())) {\n+                expressionEditor.ifPresent(ExpressionEditorView.Presenter::exit);\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "453596b7cb0d9ffb6895062397a8e0d0a5fc7137"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk0MjI0OA==", "bodyText": "You're not missing anything...\nI asked the Errai people, a long time ago, if it was possible to add support for predicates on the event firing mechanism, so events would only be dispatched to observes if the predicate was met. It fell on silence (I guess it's not part of the CDI specification).\nThat said, you will see in Stunner, copious amounts of code along the lines of if(isSameSession(session, sessionManager.getCurrentSession()) {...", "url": "https://github.com/kiegroup/kie-wb-common/pull/3157#discussion_r378942248", "createdAt": "2020-02-13T15:42:27Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/expressions/ExpressionEditorControlImpl.java", "diffHunk": "@@ -132,7 +132,11 @@ protected void doDestroy() {\n \n     @SuppressWarnings(\"unused\")\n     public void onCanvasFocusedSelectionEvent(final @Observes CanvasSelectionEvent event) {\n-        expressionEditor.ifPresent(ExpressionEditorView.Presenter::exit);\n+        session.ifPresent(s -> {\n+            if (Objects.equals(s.getCanvasHandler(), event.getCanvasHandler())) {\n+                expressionEditor.ifPresent(ExpressionEditorView.Presenter::exit);\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzNDQ5Mw=="}, "originalCommit": {"oid": "453596b7cb0d9ffb6895062397a8e0d0a5fc7137"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1516, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}