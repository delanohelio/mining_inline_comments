{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Njc5MTAz", "number": 3213, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoxMzowM1rODmjotg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoxMzowM1rODmjotg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU2MzQyOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/actions/DMNDiagramTextPropertyProviderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoxMzowM1rOF0Ci8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMToyNDozMlrOF0K2sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMTk4Ng==", "bodyText": "Could we please replace all element.getContent().getDefinition() by DefinitionUtils.getElementDefinition(element)?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3213#discussion_r390111986", "createdAt": "2020-03-10T06:13:03Z", "author": {"login": "jomarko"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/actions/DMNDiagramTextPropertyProviderImpl.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.canvas.controls.actions;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DMNDiagram;\n+import org.kie.workbench.common.dmn.api.property.dmn.Name;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.dmn.client.commands.factory.DefaultCanvasCommandFactory;\n+import org.kie.workbench.common.dmn.client.editors.expressions.util.NameUtils;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.controls.actions.TextPropertyProvider;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandManager;\n+import org.kie.workbench.common.stunner.core.graph.Element;\n+import org.kie.workbench.common.stunner.core.graph.content.definition.Definition;\n+import org.kie.workbench.common.stunner.core.util.DefinitionUtils;\n+\n+@ApplicationScoped\n+public class DMNDiagramTextPropertyProviderImpl implements TextPropertyProvider {\n+\n+    private DefaultCanvasCommandFactory canvasCommandFactory;\n+    private DefinitionUtils definitionUtils;\n+\n+    public DMNDiagramTextPropertyProviderImpl() {\n+        //CDI proxy\n+    }\n+\n+    @Inject\n+    public DMNDiagramTextPropertyProviderImpl(final @DMNEditor DefaultCanvasCommandFactory canvasCommandFactory,\n+                                              final DefinitionUtils definitionUtils) {\n+        this.canvasCommandFactory = canvasCommandFactory;\n+        this.definitionUtils = definitionUtils;\n+    }\n+\n+    @Override\n+    public int getPriority() {\n+        return 1;\n+    }\n+\n+    @Override\n+    public boolean supports(final Element<? extends Definition> element) {\n+        return element.getContent().getDefinition() instanceof DMNDiagram;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5957423bfc548a1ae02cc472bad809ca6c5c8349"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI0ODExNA==", "bodyText": "Done in new commit (there was more duplication than either of us expected!)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3213#discussion_r390248114", "createdAt": "2020-03-10T11:24:32Z", "author": {"login": "manstis"}, "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/actions/DMNDiagramTextPropertyProviderImpl.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.canvas.controls.actions;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.kie.workbench.common.dmn.api.definition.model.DMNDiagram;\n+import org.kie.workbench.common.dmn.api.property.dmn.Name;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.dmn.client.commands.factory.DefaultCanvasCommandFactory;\n+import org.kie.workbench.common.dmn.client.editors.expressions.util.NameUtils;\n+import org.kie.workbench.common.stunner.core.client.canvas.AbstractCanvasHandler;\n+import org.kie.workbench.common.stunner.core.client.canvas.controls.actions.TextPropertyProvider;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommand;\n+import org.kie.workbench.common.stunner.core.client.command.CanvasCommandManager;\n+import org.kie.workbench.common.stunner.core.graph.Element;\n+import org.kie.workbench.common.stunner.core.graph.content.definition.Definition;\n+import org.kie.workbench.common.stunner.core.util.DefinitionUtils;\n+\n+@ApplicationScoped\n+public class DMNDiagramTextPropertyProviderImpl implements TextPropertyProvider {\n+\n+    private DefaultCanvasCommandFactory canvasCommandFactory;\n+    private DefinitionUtils definitionUtils;\n+\n+    public DMNDiagramTextPropertyProviderImpl() {\n+        //CDI proxy\n+    }\n+\n+    @Inject\n+    public DMNDiagramTextPropertyProviderImpl(final @DMNEditor DefaultCanvasCommandFactory canvasCommandFactory,\n+                                              final DefinitionUtils definitionUtils) {\n+        this.canvasCommandFactory = canvasCommandFactory;\n+        this.definitionUtils = definitionUtils;\n+    }\n+\n+    @Override\n+    public int getPriority() {\n+        return 1;\n+    }\n+\n+    @Override\n+    public boolean supports(final Element<? extends Definition> element) {\n+        return element.getContent().getDefinition() instanceof DMNDiagram;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMTk4Ng=="}, "originalCommit": {"oid": "5957423bfc548a1ae02cc472bad809ca6c5c8349"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1394, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}