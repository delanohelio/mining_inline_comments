{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNTEwODU4", "number": 3376, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzowMDoyOFrOEVmxoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTowNjo1N1rOEXH0UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDkwODQ5OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/CalledElementFormProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzowMDoyOFrOG8db8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoyNjowMlrOG-ellg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA1MDAzNQ==", "bodyText": "looks tricky.. :) Why need for scheduling it? Can't we instead, observe to some CDI event or use some callback on the code, in order to avoid this?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3376#discussion_r466050035", "createdAt": "2020-08-05T23:00:28Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/CalledElementFormProvider.java", "diffHunk": "@@ -40,6 +41,19 @@ public String getProviderName() {\n         return getClass().getSimpleName();\n     }\n \n+    public CalledElementFormProvider() {\n+        scheduleServiceCall(() -> requestProcessDataEvent.fire(new RequestProcessDataEvent()));\n+    }\n+\n+    protected void scheduleServiceCall(final com.google.gwt.user.client.Command command) {\n+        new Timer() {\n+            @Override\n+            public void run() {\n+                command.execute();\n+            }\n+        }.schedule(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e31d54f3a2ec073d5e54eafc9d86f7f6cc80b4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2NjAzOA==", "bodyText": "Hi @romartin fixed, used PostConstruct method instead", "url": "https://github.com/kiegroup/kie-wb-common/pull/3376#discussion_r468166038", "createdAt": "2020-08-10T20:26:02Z", "author": {"login": "inodeman"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/CalledElementFormProvider.java", "diffHunk": "@@ -40,6 +41,19 @@ public String getProviderName() {\n         return getClass().getSimpleName();\n     }\n \n+    public CalledElementFormProvider() {\n+        scheduleServiceCall(() -> requestProcessDataEvent.fire(new RequestProcessDataEvent()));\n+    }\n+\n+    protected void scheduleServiceCall(final com.google.gwt.user.client.Command command) {\n+        new Timer() {\n+            @Override\n+            public void run() {\n+                command.execute();\n+            }\n+        }.schedule(100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA1MDAzNQ=="}, "originalCommit": {"oid": "e6e31d54f3a2ec073d5e54eafc9d86f7f6cc80b4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjgwNzg0OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/test/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/CalledElementFormProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTowNjo1N1rOG-vD-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoxNDowOVrOG_onlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQzNTk2Mg==", "bodyText": "Do we need GwtMockito here? Mockito also has a spy method.\nAlso looks like spied object is not used later.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3376#discussion_r468435962", "createdAt": "2020-08-11T09:06:57Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/test/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/CalledElementFormProviderTest.java", "diffHunk": "@@ -38,8 +38,9 @@\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static org.powermock.api.mockito.PowerMockito.spy;\n \n-@RunWith(MockitoJUnitRunner.class)\n+@RunWith(GwtMockitoTestRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e46728307f7ac34ca57ad8a144974e812d18a1e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3ODk2Nw==", "bodyText": "Hi @hasys you are right, we dont need it anymore, It was back when I used the Timer, will remove", "url": "https://github.com/kiegroup/kie-wb-common/pull/3376#discussion_r469378967", "createdAt": "2020-08-12T16:14:09Z", "author": {"login": "inodeman"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/test/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/CalledElementFormProviderTest.java", "diffHunk": "@@ -38,8 +38,9 @@\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static org.powermock.api.mockito.PowerMockito.spy;\n \n-@RunWith(MockitoJUnitRunner.class)\n+@RunWith(GwtMockitoTestRunner.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQzNTk2Mg=="}, "originalCommit": {"oid": "8e46728307f7ac34ca57ad8a144974e812d18a1e"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1360, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}