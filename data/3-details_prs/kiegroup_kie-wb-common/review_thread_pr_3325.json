{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxODg1MDQx", "number": 3325, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1MToyN1rOEEfCsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDowMjo0OVrOEIYVsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTM4MzU1OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/standard/FindRuleFlowNamesQuery.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1MToyN1rOGiI3Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMDoxMTo1OVrOGmED4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0OTk2Ng==", "bodyText": "Although this may work, IMO using a List<Map<String, String>> is not a good practice, it's not much clear what's the data behind this instance and how to manage it...\nI think would be better for example creating a class for RuleFlowGroupNames, which has 3 fields ( name, filename, pathuri ). It'll benefit as:\n\nNo need for the use of a whole Map for storing just 3 objects, also by using a class you can specify different types for each one\nYou'll be able to replace by List\nUsing a class results easier to read & understand in general", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438449966", "createdAt": "2020-06-10T22:51:27Z", "author": {"login": "romartin"}, "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/standard/FindRuleFlowNamesQuery.java", "diffHunk": "@@ -134,35 +134,36 @@ public void setIOService(IOService ioService) {\n             final List<RefactoringPageRow> result = new ArrayList(kObjects.size());\n \n             for (final KObject kObject : kObjects) {\n-                final Map<String, Map<String, String>> ruleFlowGroupNames = getRuleFlowGroupNamesNamesFromKObject(kObject);\n-                for (String rkey : ruleFlowGroupNames.keySet()) {\n+                final List<Map<String, String>> ruleFlowGroups = getRuleFlowGroupsFromKObject(kObject);\n+                for (Map<String, String> group : ruleFlowGroups) {\n                     RefactoringMapPageRow row = new RefactoringMapPageRow();\n-                    row.setValue(ruleFlowGroupNames.get(rkey));\n+                    row.setValue(group);\n                     result.add(row);\n                 }\n             }\n \n             return result;\n         }\n \n-        private Map<String, Map<String, String>> getRuleFlowGroupNamesNamesFromKObject(final KObject kObject) {\n-            final Map<String, Map<String, String>> ruleFlowGroupNames = new HashMap<>();\n+        private List<Map<String, String>> getRuleFlowGroupsFromKObject(final KObject kObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NDcwMA==", "bodyText": "Yes, I also thought about it, but it will change Client/Server communication, since right now Map<String, String> it is what client expect from the backend. If Process Designer is not the only who consumes this service we need to refactor it as well. I tried to make as gentle change as possible. If you think we still need to go deeper, I can do it, no problem, just explaining my decision :)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438584700", "createdAt": "2020-06-11T07:07:56Z", "author": {"login": "hasys"}, "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/standard/FindRuleFlowNamesQuery.java", "diffHunk": "@@ -134,35 +134,36 @@ public void setIOService(IOService ioService) {\n             final List<RefactoringPageRow> result = new ArrayList(kObjects.size());\n \n             for (final KObject kObject : kObjects) {\n-                final Map<String, Map<String, String>> ruleFlowGroupNames = getRuleFlowGroupNamesNamesFromKObject(kObject);\n-                for (String rkey : ruleFlowGroupNames.keySet()) {\n+                final List<Map<String, String>> ruleFlowGroups = getRuleFlowGroupsFromKObject(kObject);\n+                for (Map<String, String> group : ruleFlowGroups) {\n                     RefactoringMapPageRow row = new RefactoringMapPageRow();\n-                    row.setValue(ruleFlowGroupNames.get(rkey));\n+                    row.setValue(group);\n                     result.add(row);\n                 }\n             }\n \n             return result;\n         }\n \n-        private Map<String, Map<String, String>> getRuleFlowGroupNamesNamesFromKObject(final KObject kObject) {\n-            final Map<String, Map<String, String>> ruleFlowGroupNames = new HashMap<>();\n+        private List<Map<String, String>> getRuleFlowGroupsFromKObject(final KObject kObject) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0OTk2Ng=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2NTYwMQ==", "bodyText": "sorry @hasys , did a look in an IDE and noticed it's not really a big issue, we're talking jsut about a change of a return type in the private method, so the public API is not even changed, no worries, just forget this comment.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r442565601", "createdAt": "2020-06-19T00:11:59Z", "author": {"login": "romartin"}, "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/standard/FindRuleFlowNamesQuery.java", "diffHunk": "@@ -134,35 +134,36 @@ public void setIOService(IOService ioService) {\n             final List<RefactoringPageRow> result = new ArrayList(kObjects.size());\n \n             for (final KObject kObject : kObjects) {\n-                final Map<String, Map<String, String>> ruleFlowGroupNames = getRuleFlowGroupNamesNamesFromKObject(kObject);\n-                for (String rkey : ruleFlowGroupNames.keySet()) {\n+                final List<Map<String, String>> ruleFlowGroups = getRuleFlowGroupsFromKObject(kObject);\n+                for (Map<String, String> group : ruleFlowGroups) {\n                     RefactoringMapPageRow row = new RefactoringMapPageRow();\n-                    row.setValue(ruleFlowGroupNames.get(rkey));\n+                    row.setValue(group);\n                     result.add(row);\n                 }\n             }\n \n             return result;\n         }\n \n-        private Map<String, Map<String, String>> getRuleFlowGroupNamesNamesFromKObject(final KObject kObject) {\n-            final Map<String, Map<String, String>> ruleFlowGroupNames = new HashMap<>();\n+        private List<Map<String, String>> getRuleFlowGroupsFromKObject(final KObject kObject) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0OTk2Ng=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTM4OTI2OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1NDozOVrOGiI63w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoyODoyOFrOGo6sHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDkxMQ==", "bodyText": "maybe same logic can be addressed in less lines by using Streams, it would also help to read this method faster...\nEg: Streams.stream(groups).filter(...).map(...).collect(...)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438450911", "createdAt": "2020-06-10T22:54:39Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "diffHunk": "@@ -47,10 +47,54 @@ public String getProviderName() {\n     @SuppressWarnings(\"unchecked\")\n     public SelectorData getSelectorData(final FormRenderingContext context) {\n         requestRuleFlowGroupDataEvent.fire(new RequestRuleFlowGroupDataEvent());\n-        return new SelectorData(toMap(dataProvider.getRuleFlowGroupNames()), null);\n+        return new SelectorData<>(toMap(dataProvider.getRuleFlowGroupNames()), null);\n     }\n \n-    private static Map<String, String> toMap(final Iterable<String> items) {\n-        return StreamSupport.stream(items.spliterator(), false).collect(Collectors.toMap(s -> s, s -> s));\n+    // Map<T, String> is not supported by ListBoxValue which is used for ComboBox widget\n+    private static Map<String, String> toMap(final Iterable<RuleFlowGroup> groups) {\n+        Map<String, String> result = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5ODMxMA==", "bodyText": "I am refactored it to something like this:\n        for (RuleFlowGroup group : groups) {\n            if (result.containsKey(group.getName())) {\n                updateExistingGroup(result, group);\n            } else {\n                addNewGroup(result, group);\n            }\n        }\nBut not sure how to make it using Streams. We can't just filter out some values, we need to apply them anyway but differently.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438598310", "createdAt": "2020-06-11T07:36:30Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "diffHunk": "@@ -47,10 +47,54 @@ public String getProviderName() {\n     @SuppressWarnings(\"unchecked\")\n     public SelectorData getSelectorData(final FormRenderingContext context) {\n         requestRuleFlowGroupDataEvent.fire(new RequestRuleFlowGroupDataEvent());\n-        return new SelectorData(toMap(dataProvider.getRuleFlowGroupNames()), null);\n+        return new SelectorData<>(toMap(dataProvider.getRuleFlowGroupNames()), null);\n     }\n \n-    private static Map<String, String> toMap(final Iterable<String> items) {\n-        return StreamSupport.stream(items.spliterator(), false).collect(Collectors.toMap(s -> s, s -> s));\n+    // Map<T, String> is not supported by ListBoxValue which is used for ComboBox widget\n+    private static Map<String, String> toMap(final Iterable<RuleFlowGroup> groups) {\n+        Map<String, String> result = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDkxMQ=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2OTY1OA==", "bodyText": "Yeah well maybe this case is not trivial, but I think it can still be improved, maybe just by using Collectors.groupingBy? I does most of the key/value handling for you... look at these examples. WDYT?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r442569658", "createdAt": "2020-06-19T00:27:49Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "diffHunk": "@@ -47,10 +47,54 @@ public String getProviderName() {\n     @SuppressWarnings(\"unchecked\")\n     public SelectorData getSelectorData(final FormRenderingContext context) {\n         requestRuleFlowGroupDataEvent.fire(new RequestRuleFlowGroupDataEvent());\n-        return new SelectorData(toMap(dataProvider.getRuleFlowGroupNames()), null);\n+        return new SelectorData<>(toMap(dataProvider.getRuleFlowGroupNames()), null);\n     }\n \n-    private static Map<String, String> toMap(final Iterable<String> items) {\n-        return StreamSupport.stream(items.spliterator(), false).collect(Collectors.toMap(s -> s, s -> s));\n+    // Map<T, String> is not supported by ListBoxValue which is used for ComboBox widget\n+    private static Map<String, String> toMap(final Iterable<RuleFlowGroup> groups) {\n+        Map<String, String> result = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDkxMQ=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1Nzc4OA==", "bodyText": "Hi @romartin, I did a refactoring to streams, looks cleaner now, thank you!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r445557788", "createdAt": "2020-06-25T13:28:28Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "diffHunk": "@@ -47,10 +47,54 @@ public String getProviderName() {\n     @SuppressWarnings(\"unchecked\")\n     public SelectorData getSelectorData(final FormRenderingContext context) {\n         requestRuleFlowGroupDataEvent.fire(new RequestRuleFlowGroupDataEvent());\n-        return new SelectorData(toMap(dataProvider.getRuleFlowGroupNames()), null);\n+        return new SelectorData<>(toMap(dataProvider.getRuleFlowGroupNames()), null);\n     }\n \n-    private static Map<String, String> toMap(final Iterable<String> items) {\n-        return StreamSupport.stream(items.spliterator(), false).collect(Collectors.toMap(s -> s, s -> s));\n+    // Map<T, String> is not supported by ListBoxValue which is used for ComboBox widget\n+    private static Map<String, String> toMap(final Iterable<RuleFlowGroup> groups) {\n+        Map<String, String> result = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDkxMQ=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTM5MTA0OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1NTozN1rOGiI8DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1NTozN1rOGiI8DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MTIxMw==", "bodyText": "can be inlined into a single return line", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438451213", "createdAt": "2020-06-10T22:55:37Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/dataproviders/RuleFlowGroupFormProvider.java", "diffHunk": "@@ -47,10 +47,54 @@ public String getProviderName() {\n     @SuppressWarnings(\"unchecked\")\n     public SelectorData getSelectorData(final FormRenderingContext context) {\n         requestRuleFlowGroupDataEvent.fire(new RequestRuleFlowGroupDataEvent());\n-        return new SelectorData(toMap(dataProvider.getRuleFlowGroupNames()), null);\n+        return new SelectorData<>(toMap(dataProvider.getRuleFlowGroupNames()), null);\n     }\n \n-    private static Map<String, String> toMap(final Iterable<String> items) {\n-        return StreamSupport.stream(items.spliterator(), false).collect(Collectors.toMap(s -> s, s -> s));\n+    // Map<T, String> is not supported by ListBoxValue which is used for ComboBox widget\n+    private static Map<String, String> toMap(final Iterable<RuleFlowGroup> groups) {\n+        Map<String, String> result = new HashMap<>();\n+        for (RuleFlowGroup group : groups) {\n+            if (result.containsKey(group.getName())) {\n+                String project = getProjectFromPath(group.getPathUri());\n+                if (!result.get(group.getName()).contains(project)) {\n+                    result.put(group.getName(), addProjectToDescription(result.get(group.getName()), project));\n+                }\n+            } else {\n+                result.put(group.getName(), getGroupDescription(group));\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private static String addProjectToDescription(String description, String project) {\n+        return description.replace(\"]\", \", \" + project + \"]\");\n+    }\n+\n+    private static String getGroupDescription(RuleFlowGroup rfg) {\n+        return rfg.getName() + \" [\" + projectFromPath(rfg.getPathUri()) + \"]\";\n+    }\n+\n+    private static String projectFromPath(String path) {\n+        return getProjectFromPath(path);\n+    }\n+\n+    private static String dropFileSystemAndGitBranchFromPath(String path) {\n+        return path.substring(path.indexOf('@') + 1);\n+    }\n+\n+    private static String getProjectFromPath(String path) {\n+        String clearedPath = dropFileSystemAndGitBranchFromPath(path);\n+        //Drop space\n+        String pathAfterSpace = clearedPath.substring(getIndexOfFileSeparator(clearedPath) + 1);\n+        return pathAfterSpace.substring(0, getIndexOfFileSeparator(pathAfterSpace));\n+    }\n+\n+    // GWT compatible way to get file separation for Windows/Unix\n+    private static int getIndexOfFileSeparator(String string) {\n+        int index = string.indexOf('/');\n+        if (index == -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTM5MTk1OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/comboBoxEditor/AbstractComboBoxFieldRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1NTo1N1rOGiI8hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1NTo1N1rOGiI8hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MTMzNA==", "bodyText": "I18n", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438451334", "createdAt": "2020-06-10T22:55:57Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/comboBoxEditor/AbstractComboBoxFieldRenderer.java", "diffHunk": "@@ -47,19 +46,28 @@ public AbstractComboBoxFieldRenderer(final ComboBoxWidgetView comboBoxEditor) {\n     @Override\n     protected void refreshInput(Map<String, String> optionsValues,\n                                 String defaultValue) {\n-        List<String> values = new ArrayList<String>(optionsValues.keySet());\n-        java.util.Collections.sort(values);\n-        setComboBoxValues(values);\n+        setComboBoxValues(optionsValues);\n     }\n \n     protected void setComboBoxValues(final List<String> values) {\n-        valueListBoxValues = new ListBoxValues(ComboBoxWidgetView.CUSTOM_PROMPT,\n-                                               \"Edit\" + \" \",\n-                                               null);\n+        valueListBoxValues = createDefaultListBoxValues();\n         valueListBoxValues.addValues(values);\n         view.setComboBoxValues(valueListBoxValues);\n     }\n \n+    protected void setComboBoxValues(final Map<String, String> values) {\n+        valueListBoxValues = createDefaultListBoxValues();\n+\n+        valueListBoxValues.addValues(values);\n+        view.setComboBoxValues(valueListBoxValues);\n+    }\n+\n+    private ListBoxValues createDefaultListBoxValues() {\n+        return new ListBoxValues(ComboBoxWidgetView.CUSTOM_PROMPT,\n+                                 \"Edit\" + \" \",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTM5NzI3OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1ODo0MFrOGiI_4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMDoyOTo1OVrOGmEV3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjE5NQ==", "bodyText": "I think it's not correct calling this method as addValues and performing a call to clear() just in the first line... shouldn't be this method just adding \"more\" values to the actual ones, if any, instead of clearing the actual values and then just adding the new ones? Does it makes sense to you?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438452195", "createdAt": "2020-06-10T22:58:40Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "diffHunk": "@@ -100,6 +100,24 @@ public void addValues(final List<String> acceptableValues) {\n         }\n     }\n \n+    public void addValues(final Map<String, String> acceptableValues) {\n+        clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4ODEwMw==", "bodyText": "Yes, it does. I did an overload of:\n    public void addValues(final List<String> acceptableValues) {\n        clear();\n        [...]\n    }\nSo this logic is how this widget behaved before for same Value/Keys. I just overloaded it to support Maps. If refactor this method it will change initial widget's logic, and I tried to change as less as possible. Let me know if you think we should go and refactor it in this PR. Thank you!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438588103", "createdAt": "2020-06-11T07:15:11Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "diffHunk": "@@ -100,6 +100,24 @@ public void addValues(final List<String> acceptableValues) {\n         }\n     }\n \n+    public void addValues(final Map<String, String> acceptableValues) {\n+        clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjE5NQ=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU3MDIwNA==", "bodyText": "ok, that's fine, the implementation has not changed I see, thanks for clarifying!", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r442570204", "createdAt": "2020-06-19T00:29:59Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "diffHunk": "@@ -100,6 +100,24 @@ public void addValues(final List<String> acceptableValues) {\n         }\n     }\n \n+    public void addValues(final Map<String, String> acceptableValues) {\n+        clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjE5NQ=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTM5ODI3OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjo1OToxM1rOGiJAog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo0NzoyOVrOGiSQcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjM4Ng==", "bodyText": "can be inlined into a single line by using Streams", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438452386", "createdAt": "2020-06-10T22:59:13Z", "author": {"login": "romartin"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "diffHunk": "@@ -270,6 +288,16 @@ public String getValueForDisplayValue(final String key) {\n         return key;\n     }\n \n+    public String getDisplayNameForValue(final String value) {\n+        for (Map.Entry<String, String> entry : mapDisplayValuesToValues.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwMzg4OA==", "bodyText": "Not sure it is easier to read now, but maybe it is matter of taste :)", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r438603888", "createdAt": "2020-06-11T07:47:29Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/ListBoxValues.java", "diffHunk": "@@ -270,6 +288,16 @@ public String getValueForDisplayValue(final String key) {\n         return key;\n     }\n \n+    public String getDisplayNameForValue(final String value) {\n+        for (Map.Entry<String, String> entry : mapDisplayValuesToValues.entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjM4Ng=="}, "originalCommit": {"oid": "bc1a5ccf279a3e17f318ddf7b579b65fffc32bfc"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjIyNTIwOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_es.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDowMjowOFrOGoTjMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowNzoxMlrOGo_HoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNjUzMA==", "bodyText": "Why is this in English?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r444916530", "createdAt": "2020-06-24T14:02:08Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_es.properties", "diffHunk": "@@ -644,13 +644,15 @@ reassignment.delete=Eliminar\n MultipleInstanceVariableValidator.InvalidVariableNameError=Caracteres no v\u00e1lidos en el nombre de la variable. El nombre de la variable debe ser un valor alfanum\u00e9rico como myVariable, variable1, etc.\n MultipleInstanceVariableValidator.InputAssignmentAlreadyExistsError=Ya existe una asignaci\u00f3n de entrada con el nombre {0}, use un nombre diferente\n MultipleInstanceVariableValidator.OutputAssignmentAlreadyExistsError=Ya existe una asignaci\u00f3n de salida con el nombre {0}, use un nombre diferente\n-\n #########################\n # BaseCancellingEventExecutionSet\n #########################\n org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseCancellingEventExecutionSet.label=Implementaci\u00f3n/Ejecuci\u00f3n\n-\n #########################\n # StartEventExecutionSet\n #########################\n-org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Implementaci\u00f3n/Ejecuci\u00f3n\n\\ No newline at end of file\n+org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Implementaci\u00f3n/Ejecuci\u00f3n\n+#########################\n+# Combobox Widget\n+#########################\n+combobox.edit=Edit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b246d35c2a17d6259b9e6ac79f1fe2e9873d06"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMDM2OQ==", "bodyText": "Since I don't know Spanish I put a place-holder.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r445630369", "createdAt": "2020-06-25T15:07:12Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_es.properties", "diffHunk": "@@ -644,13 +644,15 @@ reassignment.delete=Eliminar\n MultipleInstanceVariableValidator.InvalidVariableNameError=Caracteres no v\u00e1lidos en el nombre de la variable. El nombre de la variable debe ser un valor alfanum\u00e9rico como myVariable, variable1, etc.\n MultipleInstanceVariableValidator.InputAssignmentAlreadyExistsError=Ya existe una asignaci\u00f3n de entrada con el nombre {0}, use un nombre diferente\n MultipleInstanceVariableValidator.OutputAssignmentAlreadyExistsError=Ya existe una asignaci\u00f3n de salida con el nombre {0}, use un nombre diferente\n-\n #########################\n # BaseCancellingEventExecutionSet\n #########################\n org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseCancellingEventExecutionSet.label=Implementaci\u00f3n/Ejecuci\u00f3n\n-\n #########################\n # StartEventExecutionSet\n #########################\n-org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Implementaci\u00f3n/Ejecuci\u00f3n\n\\ No newline at end of file\n+org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Implementaci\u00f3n/Ejecuci\u00f3n\n+#########################\n+# Combobox Widget\n+#########################\n+combobox.edit=Edit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNjUzMA=="}, "originalCommit": {"oid": "47b246d35c2a17d6259b9e6ac79f1fe2e9873d06"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjIyNjg2OnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_fr.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDowMjozMVrOGoTkWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowNzoxOFrOGo_H7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNjgyNA==", "bodyText": "Why is this in English?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r444916824", "createdAt": "2020-06-24T14:02:31Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_fr.properties", "diffHunk": "@@ -644,13 +644,15 @@ reassignment.delete=Supprimer\n MultipleInstanceVariableValidator.InvalidVariableNameError=Caract\u00e8res non valides dans le nom de la variable. Le nom de la variable doit \u00eatre une valeur alphanum\u00e9rique comme myVariable, variable1, etc.\n MultipleInstanceVariableValidator.InputAssignmentAlreadyExistsError=Il existe d\u00e9j\u00e0 une affectation d\u2019entr\u00e9e nomm\u00e9e {0}. Veuillez utiliser un autre nom.\n MultipleInstanceVariableValidator.OutputAssignmentAlreadyExistsError=Il existe d\u00e9j\u00e0 une affectation de sortie nomm\u00e9e {0}. Veuillez utiliser un autre nom.\n-\n #########################\n # BaseCancellingEventExecutionSet\n #########################\n org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseCancellingEventExecutionSet.label=Impl\u00e9mentation/Ex\u00e9cution\n-\n #########################\n # StartEventExecutionSet\n #########################\n-org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Impl\u00e9mentation/Ex\u00e9cution\n\\ No newline at end of file\n+org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Impl\u00e9mentation/Ex\u00e9cution\n+#########################\n+# Combobox Widget\n+#########################\n+combobox.edit=Edit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b246d35c2a17d6259b9e6ac79f1fe2e9873d06"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMDQ0NQ==", "bodyText": "Since I don't know Franch I put a place-holder.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r445630445", "createdAt": "2020-06-25T15:07:18Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_fr.properties", "diffHunk": "@@ -644,13 +644,15 @@ reassignment.delete=Supprimer\n MultipleInstanceVariableValidator.InvalidVariableNameError=Caract\u00e8res non valides dans le nom de la variable. Le nom de la variable doit \u00eatre une valeur alphanum\u00e9rique comme myVariable, variable1, etc.\n MultipleInstanceVariableValidator.InputAssignmentAlreadyExistsError=Il existe d\u00e9j\u00e0 une affectation d\u2019entr\u00e9e nomm\u00e9e {0}. Veuillez utiliser un autre nom.\n MultipleInstanceVariableValidator.OutputAssignmentAlreadyExistsError=Il existe d\u00e9j\u00e0 une affectation de sortie nomm\u00e9e {0}. Veuillez utiliser un autre nom.\n-\n #########################\n # BaseCancellingEventExecutionSet\n #########################\n org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseCancellingEventExecutionSet.label=Impl\u00e9mentation/Ex\u00e9cution\n-\n #########################\n # StartEventExecutionSet\n #########################\n-org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Impl\u00e9mentation/Ex\u00e9cution\n\\ No newline at end of file\n+org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=Impl\u00e9mentation/Ex\u00e9cution\n+#########################\n+# Combobox Widget\n+#########################\n+combobox.edit=Edit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNjgyNA=="}, "originalCommit": {"oid": "47b246d35c2a17d6259b9e6ac79f1fe2e9873d06"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjIyODMzOnYy", "diffSide": "RIGHT", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_ja.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDowMjo0OVrOGoTlNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowODoxOFrOGo_KtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNzA0NA==", "bodyText": "Why is this in English?", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r444917044", "createdAt": "2020-06-24T14:02:49Z", "author": {"login": "LuboTerifaj"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_ja.properties", "diffHunk": "@@ -642,13 +642,15 @@ reassignment.delete=\u524a\u9664\n MultipleInstanceVariableValidator.InvalidVariableNameError=\u5909\u6570\u540d\u306b\u7121\u52b9\u306a\u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5909\u6570\u540d\u306f\u3001myVariable \u3084 variable1 \u306a\u3069\u306e\u82f1\u6570\u5b57\u5024\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n MultipleInstanceVariableValidator.InputAssignmentAlreadyExistsError={0} \u3068\u3044\u3046\u540d\u524d\u306e\u5165\u529b\u5272\u308a\u5f53\u3066\u304c\u3059\u3067\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\u5225\u306e\u540d\u524d\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n MultipleInstanceVariableValidator.OutputAssignmentAlreadyExistsError={0} \u3068\u3044\u3046\u540d\u524d\u306e\u51fa\u529b\u5272\u308a\u5f53\u3066\u304c\u3059\u3067\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\u5225\u306e\u540d\u524d\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n-\n #########################\n # BaseCancellingEventExecutionSet\n #########################\n org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseCancellingEventExecutionSet.label=\u5b9f\u88c5/\u5b9f\u884c\n-\n #########################\n # StartEventExecutionSet\n #########################\n-org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=\u5b9f\u88c5/\u5b9f\u884c\n\\ No newline at end of file\n+org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=\u5b9f\u88c5/\u5b9f\u884c\n+#########################\n+# Combobox Widget\n+#########################\n+combobox.edit=Edit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b246d35c2a17d6259b9e6ac79f1fe2e9873d06"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMTE1Nw==", "bodyText": "Since I don't know Japanese I put a place-holder.", "url": "https://github.com/kiegroup/kie-wb-common/pull/3325#discussion_r445631157", "createdAt": "2020-06-25T15:08:18Z", "author": {"login": "hasys"}, "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/resources/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants_ja.properties", "diffHunk": "@@ -642,13 +642,15 @@ reassignment.delete=\u524a\u9664\n MultipleInstanceVariableValidator.InvalidVariableNameError=\u5909\u6570\u540d\u306b\u7121\u52b9\u306a\u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5909\u6570\u540d\u306f\u3001myVariable \u3084 variable1 \u306a\u3069\u306e\u82f1\u6570\u5b57\u5024\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n MultipleInstanceVariableValidator.InputAssignmentAlreadyExistsError={0} \u3068\u3044\u3046\u540d\u524d\u306e\u5165\u529b\u5272\u308a\u5f53\u3066\u304c\u3059\u3067\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\u5225\u306e\u540d\u524d\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n MultipleInstanceVariableValidator.OutputAssignmentAlreadyExistsError={0} \u3068\u3044\u3046\u540d\u524d\u306e\u51fa\u529b\u5272\u308a\u5f53\u3066\u304c\u3059\u3067\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\u5225\u306e\u540d\u524d\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n-\n #########################\n # BaseCancellingEventExecutionSet\n #########################\n org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseCancellingEventExecutionSet.label=\u5b9f\u88c5/\u5b9f\u884c\n-\n #########################\n # StartEventExecutionSet\n #########################\n-org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=\u5b9f\u88c5/\u5b9f\u884c\n\\ No newline at end of file\n+org.kie.workbench.common.stunner.bpmn.definition.property.event.BaseStartEventExecutionSet.label=\u5b9f\u88c5/\u5b9f\u884c\n+#########################\n+# Combobox Widget\n+#########################\n+combobox.edit=Edit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNzA0NA=="}, "originalCommit": {"oid": "47b246d35c2a17d6259b9e6ac79f1fe2e9873d06"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1315, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}