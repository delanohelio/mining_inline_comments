{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM4ODc5", "number": 569, "title": "Add name ordering for streams and map based storages", "bodyText": "", "createdAt": "2020-05-29T17:44:01Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/569", "merged": true, "mergeCommit": {"oid": "ee9687eb96456ebd5999baba70e44958e4e37ca4"}, "closed": true, "closedAt": "2020-05-30T21:16:12Z", "author": {"login": "carlesarnal"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmGHL4gH2gAyNDI1MjM4ODc5OjBiNWRhZWMwNDBmNmMwY2UwNjc3YjQ0NTFmMjI2Njc5Yjk2ZWRkYmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmXPAsgH2gAyNDI1MjM4ODc5OjIyNzZiMmQyZjE3ODE4MGI0YjQ4NzUzNTVjMjMxYTMzNWFjNjgwYmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b5daec040f6c0ce0677b4451f226679b96eddbe", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0b5daec040f6c0ce0677b4451f226679b96eddbe", "committedDate": "2020-05-29T17:42:29Z", "message": "Add name ordering for streams and map based storages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTcyNDMw", "url": "https://github.com/Apicurio/apicurio-registry/pull/569#pullrequestreview-421172430", "createdAt": "2020-05-29T18:01:39Z", "commit": {"oid": "0b5daec040f6c0ce0677b4451f226679b96eddbe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMTozOVrOGcm3eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMTozOVrOGcm3eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MDEwNQ==", "bodyText": "Name could be null for either or both.", "url": "https://github.com/Apicurio/apicurio-registry/pull/569#discussion_r432650105", "createdAt": "2020-05-29T18:01:39Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/SearchUtil.java", "diffHunk": "@@ -29,16 +29,30 @@\n  */\n public class SearchUtil {\n \n-    public static Comparator<String> comparator(SortOrder sortOrder) {\n-        return (id1, id2) -> compare(sortOrder, id1, id2);\n+    public static Comparator<ArtifactMetaDataDto> comparator(SortOrder sortOrder) {\n+\n+        final Comparator<ArtifactMetaDataDto> metaDataComparator = ((id1, id2) -> compare(sortOrder, id1, id2));\n+\n+        return metaDataComparator.thenComparing(idComparator(sortOrder));\n+    }\n+\n+    private static Comparator<ArtifactMetaDataDto> idComparator(SortOrder sortOrder) {\n+        return (artifactMetaDataDto1, artifactMetaDataDto2) -> {\n+            switch (sortOrder) {\n+                case desc:\n+                    return artifactMetaDataDto1.getId().compareTo(artifactMetaDataDto2.getId());\n+                default:\n+                    return artifactMetaDataDto2.getId().compareToIgnoreCase(artifactMetaDataDto1.getId());\n+            }\n+        };\n     }\n \n-    public static int compare(SortOrder sortOrder, String id1, String id2) {\n+    public static int compare(SortOrder sortOrder, ArtifactMetaDataDto id1, ArtifactMetaDataDto id2) {\n         switch (sortOrder) {\n             case desc:\n-                return id2.compareToIgnoreCase(id1);\n+                return id2.getName().compareToIgnoreCase(id1.getName());\n             default:\n-                return id1.compareToIgnoreCase(id2);\n+                return id1.getName().compareToIgnoreCase(id2.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b5daec040f6c0ce0677b4451f226679b96eddbe"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTcyOTM5", "url": "https://github.com/Apicurio/apicurio-registry/pull/569#pullrequestreview-421172939", "createdAt": "2020-05-29T18:02:33Z", "commit": {"oid": "0b5daec040f6c0ce0677b4451f226679b96eddbe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMjozM1rOGcm49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMjozM1rOGcm49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MDQ4NQ==", "bodyText": "Also maybe throw in an artifact with no name.  In that case the ID should be used as the name.", "url": "https://github.com/Apicurio/apicurio-registry/pull/569#discussion_r432650485", "createdAt": "2020-05-29T18:02:33Z", "author": {"login": "EricWittmann"}, "path": "app/src/test/java/io/apicurio/registry/RegistryClientTest.java", "diffHunk": "@@ -188,6 +188,61 @@ public void testLabels(Supplier<RegistryService> supplier) throws Exception {\n         }\n     }\n \n+    @RegistryServiceTest\n+    void nameOrderingTest(Supplier<RegistryService> supplier) throws Exception {\n+\n+        final String firstArtifactId = generateArtifactId();\n+        final String secondArtifactId = generateArtifactId();\n+        RegistryService client = supplier.get();\n+\n+        try {\n+\n+            // warm-up\n+            client.listArtifacts();\n+\n+            String name = \"aaaTestorder\" + ThreadLocalRandom.current().nextInt(1000000);\n+            ByteArrayInputStream artifactData = new ByteArrayInputStream(\n+                    (\"{\\\"type\\\":\\\"record\\\",\\\"title\\\":\\\"\" + name + \"\\\",\\\"fields\\\":[{\\\"name\\\":\\\"foo\\\",\\\"type\\\":\\\"string\\\"}]}\")\n+                            .getBytes(StandardCharsets.UTF_8));\n+\n+            CompletionStage<ArtifactMetaData> cs = client.createArtifact(ArtifactType.JSON, firstArtifactId, null, artifactData);\n+            long id = ConcurrentUtil.result(cs).getGlobalId();\n+\n+            retry(() -> {\n+                ArtifactMetaData artifactMetaData = client.getArtifactMetaDataByGlobalId(id);\n+                Assertions.assertNotNull(artifactMetaData);\n+            });\n+\n+            String secondName = \"bbbTestorder\" + ThreadLocalRandom.current().nextInt(1000000);\n+            ByteArrayInputStream secondData = new ByteArrayInputStream(\n+                    (\"{\\\"type\\\":\\\"record\\\",\\\"title\\\":\\\"\" + secondName + \"\\\",\\\"fields\\\":[{\\\"name\\\":\\\"foo\\\",\\\"type\\\":\\\"string\\\"}]}\")\n+                            .getBytes(StandardCharsets.UTF_8));\n+\n+            CompletionStage<ArtifactMetaData> secondCs = client.createArtifact(ArtifactType.JSON, secondArtifactId, null, secondData);\n+            long secondId = ConcurrentUtil.result(secondCs).getGlobalId();\n \n+            retry(() -> {\n+                ArtifactMetaData artifactMetaData = client.getArtifactMetaDataByGlobalId(secondId);\n+                Assertions.assertNotNull(artifactMetaData);\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b5daec040f6c0ce0677b4451f226679b96eddbe"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTczODgx", "url": "https://github.com/Apicurio/apicurio-registry/pull/569#pullrequestreview-421173881", "createdAt": "2020-05-29T18:04:01Z", "commit": {"oid": "0b5daec040f6c0ce0677b4451f226679b96eddbe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "906d3c3da6d75f5523ac2bc2e10575d4737b11f7", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/906d3c3da6d75f5523ac2bc2e10575d4737b11f7", "committedDate": "2020-05-29T18:04:08Z", "message": "Merge branch 'master' into artifact-search-ordering-by-name-485"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0398522c05e9d5a3f0d634013b2fc5d15cda62f2", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0398522c05e9d5a3f0d634013b2fc5d15cda62f2", "committedDate": "2020-05-30T09:46:19Z", "message": "Null check for name comparator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e4a4c58d4278d01a8575273a8faebcccc06f76a", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/8e4a4c58d4278d01a8575273a8faebcccc06f76a", "committedDate": "2020-05-30T09:08:24Z", "message": "Null check for name comparator"}, "afterCommit": {"oid": "0398522c05e9d5a3f0d634013b2fc5d15cda62f2", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0398522c05e9d5a3f0d634013b2fc5d15cda62f2", "committedDate": "2020-05-30T09:46:19Z", "message": "Null check for name comparator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d3e9d5b8d935297c15f2c0ba0e795320d112d2f", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/7d3e9d5b8d935297c15f2c0ba0e795320d112d2f", "committedDate": "2020-05-30T10:58:01Z", "message": "Fix ordering for jpa"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c539f3de15a8ad61d1cc17c9dfe8785b601a960e", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/c539f3de15a8ad61d1cc17c9dfe8785b601a960e", "committedDate": "2020-05-30T10:54:34Z", "message": "Fix ordering for jpa"}, "afterCommit": {"oid": "7d3e9d5b8d935297c15f2c0ba0e795320d112d2f", "author": {"user": {"login": "carlesarnal", "name": "Carles Arnal"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/7d3e9d5b8d935297c15f2c0ba0e795320d112d2f", "committedDate": "2020-05-30T10:58:01Z", "message": "Fix ordering for jpa"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2276b2d2f178180b4b4875355c231a335ac680ba", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/2276b2d2f178180b4b4875355c231a335ac680ba", "committedDate": "2020-05-30T13:39:25Z", "message": "Proposed change to comparator for artifact meta-data\n\nThis is what I was thinking for the comparator - what do you think, @carlesarnal ?"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4514, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}