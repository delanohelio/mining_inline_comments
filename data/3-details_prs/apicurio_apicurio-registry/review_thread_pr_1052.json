{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTA4Mjkw", "number": 1052, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTowMToxMlrOFAaa1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTowMToxMlrOFAaa1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTc3MTc1OnYy", "diffSide": "RIGHT", "path": "utils/sql/src/main/java/io/apicurio/registry/storage/impl/sql/AbstractSqlRegistryStorage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTowMToxMlrOH-sbsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTowMToxMlrOH-sbsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwMTc0Ng==", "bodyText": "Interesting solution!  Seems fine for now, but perhaps we can use the fast existence check I've created in the ksql impl here (in the future).", "url": "https://github.com/Apicurio/apicurio-registry/pull/1052#discussion_r535501746", "createdAt": "2020-12-03T19:01:12Z", "author": {"login": "EricWittmann"}, "path": "utils/sql/src/main/java/io/apicurio/registry/storage/impl/sql/AbstractSqlRegistryStorage.java", "diffHunk": "@@ -925,7 +926,15 @@ public RuleType map(ResultSet rs, StatementContext ctx) throws SQLException {\n                             }\n                         })\n                         .list();\n+                if (rules.isEmpty()) {\n+                    //TODO replace with a faster existence check\n+                    //this checks if artifact actually exists and can throw ArtifactNotFoundException\n+                    getArtifactVersions(artifactId);\n+                }\n+                return rules;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e47be3169f21f853cbff8239a7dbe9223a40ebd6"}, "originalPosition": 198}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3514, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}