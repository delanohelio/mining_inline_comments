{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMTk1MjAw", "number": 400, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDowMlrOD3jEGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDozMVrOD3jEvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTcyNzYxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/ccompat/store/RegistryStorageFacadeImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDowMlrOGN24Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDowMlrOGN24Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4Mzc5MA==", "bodyText": "Do we really need this check here?\nImo, this should be in Storage itself / already.\ne.g. so that storage never returns deleted or disabled artifact", "url": "https://github.com/Apicurio/apicurio-registry/pull/400#discussion_r417183790", "createdAt": "2020-04-29T09:30:02Z", "author": {"login": "alesj"}, "path": "app/src/main/java/io/apicurio/registry/ccompat/store/RegistryStorageFacadeImpl.java", "diffHunk": "@@ -82,8 +82,15 @@ public SchemaContent getSchemaContent(int globalId) throws ArtifactNotFoundExcep\n \n     @Override\n     public Schema getSchema(String subject, String versionString) throws ArtifactNotFoundException, VersionNotFoundException, RegistryStorageException {\n-        return parseVersionString(subject, versionString,\n+        Schema schema = parseVersionString(subject, versionString,\n                 version -> FacadeConverter.convert(subject, storage.getArtifactVersion(subject, version)));\n+        \n+        ArtifactMetaDataDto amd = storage.getArtifactMetaData(subject, ContentHandle.create(schema.getSchema()));\n+        if(amd.getState().equals(ArtifactState.DELETED) || amd.getState().equals(ArtifactState.DISABLED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "428df615556f7cb273154219a5315f115c394c92"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTcyOTI0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/ccompat/store/RegistryStorageFacadeImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDozMVrOGN25Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDozMVrOGN25Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NDA2Nw==", "bodyText": "Same as above.", "url": "https://github.com/Apicurio/apicurio-registry/pull/400#discussion_r417184067", "createdAt": "2020-04-29T09:30:31Z", "author": {"login": "alesj"}, "path": "app/src/main/java/io/apicurio/registry/ccompat/store/RegistryStorageFacadeImpl.java", "diffHunk": "@@ -96,10 +103,13 @@ public Schema getSchema(String subject, String versionString) throws ArtifactNot\n \n     @Override\n     public Schema getSchema(String subject, SchemaContent schema) throws ArtifactNotFoundException, RegistryStorageException {\n-        // TODO -- handle deleted?\n         ArtifactMetaDataDto amd = storage.getArtifactMetaData(subject, ContentHandle.create(schema.getSchema()));\n-        StoredArtifact storedArtifact = storage.getArtifactVersion(subject, amd.getVersion());\n-        return FacadeConverter.convert(subject, storedArtifact);\n+        if(amd.getState().equals(ArtifactState.DELETED) || amd.getState().equals(ArtifactState.DISABLED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "428df615556f7cb273154219a5315f115c394c92"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3393, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}