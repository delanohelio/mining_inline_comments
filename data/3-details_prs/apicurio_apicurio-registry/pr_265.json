{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjk1MTM1", "number": 265, "title": "Code improvements / polish", "bodyText": "Code improvements / polish\n\nClose getResourceAsStream input stream\nCompare values using .equals\nEliminate unnecessary local store\nUse %n instead of \\n for String.format", "createdAt": "2020-02-10T18:50:58Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/265", "merged": true, "mergeCommit": {"oid": "8b2c9a8c740445a09f2cb51ff2552fa008b21687"}, "closed": true, "closedAt": "2020-02-11T07:59:23Z", "author": {"login": "rsvoboda"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDBkiSAH2gAyMzczMjk1MTM1OjY4Y2U1OTRjNTdhNTc4MjMwYTNiMGRmYWZhYjdmZWYwYTAzMzQ2ZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDRXP1AFqTM1NjYzNjQ4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "68ce594c57a578230a3b0dfafab7fef0a03346e4", "author": {"user": {"login": "rsvoboda", "name": "Rostislav Svoboda"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/68ce594c57a578230a3b0dfafab7fef0a03346e4", "committedDate": "2020-02-10T18:37:40Z", "message": "Close getResourceAsStream input stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b7c649cd97694c66d1a0e1a63b3a5d239863dae", "author": {"user": {"login": "rsvoboda", "name": "Rostislav Svoboda"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/7b7c649cd97694c66d1a0e1a63b3a5d239863dae", "committedDate": "2020-02-10T18:40:33Z", "message": "Compare values using .equals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d99849f316aa3222063884e94fee2a5bd23cd162", "author": {"user": {"login": "rsvoboda", "name": "Rostislav Svoboda"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/d99849f316aa3222063884e94fee2a5bd23cd162", "committedDate": "2020-02-10T18:43:46Z", "message": "Eliminate unnecessary local store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab95aa8813502b9de703266b1930714d8566d54c", "author": {"user": {"login": "rsvoboda", "name": "Rostislav Svoboda"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ab95aa8813502b9de703266b1930714d8566d54c", "committedDate": "2020-02-10T18:44:52Z", "message": "Use %n instead of \\n for String.format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDYyOTk2", "url": "https://github.com/Apicurio/apicurio-registry/pull/265#pullrequestreview-356462996", "createdAt": "2020-02-11T07:59:16Z", "commit": {"oid": "ab95aa8813502b9de703266b1930714d8566d54c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjM2NDgz", "url": "https://github.com/Apicurio/apicurio-registry/pull/265#pullrequestreview-356636483", "createdAt": "2020-02-11T13:01:37Z", "commit": {"oid": "ab95aa8813502b9de703266b1930714d8566d54c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzowMTozN1rOFoIDOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzowMTozN1rOFoIDOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxOTI1OQ==", "bodyText": "Null? Why not throw some RuntimeException ... ?", "url": "https://github.com/Apicurio/apicurio-registry/pull/265#discussion_r377619259", "createdAt": "2020-02-11T13:01:37Z", "author": {"login": "alesj"}, "path": "app/src/test/java/io/apicurio/registry/AbstractRegistryTestBase.java", "diffHunk": "@@ -41,9 +42,12 @@ protected String generateArtifactId() {\n      * @param resourceName the resource name\n      */\n     protected final String resourceToString(String resourceName) {\n-        InputStream stream = getClass().getResourceAsStream(resourceName);\n-        Assertions.assertNotNull(stream, \"Resource not found: \" + resourceName);\n-        return new BufferedReader(new InputStreamReader(stream)).lines().collect(Collectors.joining(\"\\n\"));\n+        try (InputStream stream = getClass().getResourceAsStream(resourceName)) {\n+            Assertions.assertNotNull(stream, \"Resource not found: \" + resourceName);\n+            return new BufferedReader(new InputStreamReader(stream)).lines().collect(Collectors.joining(\"\\n\"));\n+        } catch (IOException e) {\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab95aa8813502b9de703266b1930714d8566d54c"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3509, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}