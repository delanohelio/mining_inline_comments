{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4ODQxNTE2", "number": 855, "title": "No longer allow empty content", "bodyText": "Addresses issue: #717", "createdAt": "2020-09-17T18:06:22Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/855", "merged": true, "mergeCommit": {"oid": "f1b881721ee3aff321cca2c0745ad23a22316b1d"}, "closed": true, "closedAt": "2020-09-20T00:34:12Z", "author": {"login": "EricWittmann"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ0-f-gH2gAyNDg4ODQxNTE2OmVkN2NmZjk4M2U4OWIzNzEwMWFjYzAyZmIyY2UyN2RjYzEyOTk2NTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKBBxTgFqTQ5MTI0MTMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed7cff983e89b37101acc02fb2ce27dcc1299655", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ed7cff983e89b37101acc02fb2ce27dcc1299655", "committedDate": "2020-09-17T18:05:53Z", "message": "No longer allow empty content.  Fixes #717"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a85274285444c56f963ee2524a845b29d20b3c1", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0a85274285444c56f963ee2524a845b29d20b3c1", "committedDate": "2020-09-17T18:08:34Z", "message": "Updated the openapi design to add documentation about disallowed empty content."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698f31f70339ce2c7b0d1ae1c3f29b2a907473aa", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/698f31f70339ce2c7b0d1ae1c3f29b2a907473aa", "committedDate": "2020-09-17T18:09:40Z", "message": "Wrong file, wrong format :("}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1bd4bf706bd9dfb16ce2194a231282d498bb6a9", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/b1bd4bf706bd9dfb16ce2194a231282d498bb6a9", "committedDate": "2020-09-17T18:12:29Z", "message": "Updated api design adding docs about disallowed empty content."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwOTIwOTg2", "url": "https://github.com/Apicurio/apicurio-registry/pull/855#pullrequestreview-490920986", "createdAt": "2020-09-17T19:27:22Z", "commit": {"oid": "b1bd4bf706bd9dfb16ce2194a231282d498bb6a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOToyNzoyMlrOHTyB0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOToyNzoyMlrOHTyB0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwNDY1OA==", "bodyText": "@EricWittmann it would be nice to update version to the current one (1.3.1-SNAPSHOT) also and keep it in sync on release with the new snapshot version", "url": "https://github.com/Apicurio/apicurio-registry/pull/855#discussion_r490504658", "createdAt": "2020-09-17T19:27:22Z", "author": {"login": "dmvolod"}, "path": "common/src/main/resources/META-INF/openapi.json", "diffHunk": "@@ -1,2286 +1,2290 @@\n-{\r\n-    \"openapi\": \"3.0.2\",\r\n-    \"info\": {\r\n-        \"title\": \"Apicurio Registry API\",\r\n-        \"version\": \"1.2.2\",\r\n-        \"description\": \"Apicurio Registry is a datastore for standard event schemas and API designs. Apicurio Registry enables developers to manage and share the structure of their data using a REST interface. For example, client applications can dynamically push or pull the latest updates to or from the registry without needing to redeploy. Apicurio Registry also enables developers to create rules that govern how registry content can evolve over time. For example, this includes rules for content validation and version compatibility.\\n\\nThe Apicurio Registry REST API enables client applications to manage the artifacts in the registry. This API provides create, read, update, and delete operations for schema and API artifacts, rules, versions, and metadata. \\n\\nThe supported artifact types include:\\n- Apache Avro schema\\n- AsyncAPI specification\\n- Google protocol buffers (schema and file descriptor)\\n- GraphQL schema\\n- JSON Schema\\n- Kafka Connect schema\\n- OpenAPI specification\\n- Web Services Description Language\\n- XML Schema Definition\\n\\n\\n**Note**: The Apicurio Registry REST API is available from `http://MY-REGISTRY-URL/api`. You must prefix all API operation paths with `/api`, for example, `api/ids/{globalId}`.\\n\",\r\n-        \"contact\": {\r\n-            \"name\": \"Apicurio\",\r\n-            \"url\": \"https://github.com/apicurio/apicurio-registry\",\r\n-            \"email\": \"apicurio@lists.jboss.org\"\r\n-        },\r\n-        \"license\": {\r\n-            \"name\": \"Apache 2.0\",\r\n-            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0\"\r\n-        }\r\n-    },\r\n-    \"paths\": {\r\n-        \"/rules/{rule}\": {\r\n-            \"summary\": \"Manage the configuration of a single global artifact rule.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Global rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/Rule\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The global rule's configuration.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getGlobalRuleConfig\",\r\n-                \"summary\": \"Get global rule configuration\",\r\n-                \"description\": \"Returns information about the named globally configured rule.\\n\\nThis operation can fail for the following reasons:\\n\\n* Invalid rule name/type (HTTP error `400`)\\n* No rule with name/type `rule` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/Rule\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Global rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/Rule\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The global rule's configuration was successfully updated.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateGlobalRuleConfig\",\r\n-                \"summary\": \"Update global rule configuration\",\r\n-                \"description\": \"Updates the configuration for a globally configured rule.\\n\\nThis operation can fail for the following reasons:\\n\\n* Invalid rule name/type (HTTP error `400`)\\n* No rule with name/type `rule` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"delete\": {\r\n-                \"tags\": [\r\n-                    \"Global rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The global rule was successfully deleted.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"deleteGlobalRule\",\r\n-                \"summary\": \"Delete global rule\",\r\n-                \"description\": \"Deletes a single global rule.  If this is the only rule configured, this is the same\\nas deleting **all** rules.\\n\\nThis operation can fail for the following reasons:\\n\\n* Invalid rule name/type (HTTP error `400`)\\n* No rule with name/type `rule` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"rule\",\r\n-                    \"description\": \"The unique name/type of a rule.\",\r\n-                    \"schema\": {\r\n-                        \"enum\": [\r\n-                            \"VALIDITY\",\r\n-                            \"COMPATIBILITY\"\r\n-                        ],\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/rules\": {\r\n-            \"summary\": \"Manage the global rules that apply to all artifacts if not otherwise configured.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Global rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"type\": \"array\",\r\n-                                    \"items\": {\r\n-                                        \"$ref\": \"#/components/schemas/RuleType\"\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The list of names of the globally configured rules.\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"listGlobalRules\",\r\n-                \"summary\": \"List global rules\",\r\n-                \"description\": \"Gets a list of all the currently configured global rules (if any).\\n\\nThis operation can fail for the following reasons:\\n\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"post\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/Rule\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Global rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The global rule was added.\"\r\n-                    },\r\n-                    \"400\": {\r\n-                        \"$ref\": \"#/components/responses/BadRequest\"\r\n-                    },\r\n-                    \"409\": {\r\n-                        \"$ref\": \"#/components/responses/Conflict\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"createGlobalRule\",\r\n-                \"summary\": \"Create global rule\",\r\n-                \"description\": \"Adds a rule to the list of globally configured rules.\\n\\nThis operation can fail for the following reasons:\\n\\n* The rule type is unknown (HTTP error `400`)\\n* The rule already exists (HTTP error `409`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"delete\": {\r\n-                \"tags\": [\r\n-                    \"Global rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"All global rules have been removed successfully.\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"deleteAllGlobalRules\",\r\n-                \"summary\": \"Delete all global rules\",\r\n-                \"description\": \"Deletes all globally configured rules.\\n\\nThis operation can fail for the following reasons:\\n\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            }\r\n-        },\r\n-        \"/ids/{globalId}\": {\r\n-            \"summary\": \"Access artifact content utilizing an artifact version's globally unique identifier.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"examples\": {\r\n-                                    \"OpenAPI Example\": {\r\n-                                        \"value\": {\r\n-                                            \"openapi\": \"3.0.2\",\r\n-                                            \"info\": {\r\n-                                                \"title\": \"Empty API\",\r\n-                                                \"version\": \"1.0.0\",\r\n-                                                \"description\": \"An example API design using OpenAPI.\"\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/x-protobuf\": {\r\n-                                \"examples\": {\r\n-                                    \"Protobuf Example\": {\r\n-                                        \"value\": \"message SearchResponse {\\n  repeated Result result = 1;\\n}\\n\\nmessage Result {\\n  required string url = 1;\\n  optional string title = 2;\\n  repeated string snippets = 3;\\n}\"\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/x-protobuffer\": {\r\n-                                \"examples\": {\r\n-                                    \"Protobuffer Example\": {\r\n-                                        \"value\": \"message SearchResponse {\\n  repeated Result result = 1;\\n}\\n\\nmessage Result {\\n  required string url = 1;\\n  optional string title = 2;\\n  repeated string snippets = 3;\\n}\"\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The content of the artifact version.\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactByGlobalId\",\r\n-                \"summary\": \"Get artifact by global ID\",\r\n-                \"description\": \"Gets the content for an artifact version in the registry using its globally unique\\nidentifier.\\n\\nThis operation may fail for one of the following reasons:\\n\\n* No artifact version with this `globalId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"globalId\",\r\n-                    \"description\": \"Global identifier for an artifact version.\",\r\n-                    \"schema\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/ids/{globalId}/meta\": {\r\n-            \"summary\": \"Access an artifact verison's metadata using its globally unique identifier.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/ArtifactMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The artifact's metadata.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactMetaDataByGlobalId\",\r\n-                \"summary\": \"Get global artifact metadata\",\r\n-                \"description\": \"Gets the metadata for an artifact version in the registry using its globally unique\\nidentifier.  The returned metadata includes both generated (read-only) and editable\\nmetadata (such as name and description).\\n\\nThis operation may fail for one of the following reasons:\\n\\n* No artifact version with this `globalId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"globalId\",\r\n-                    \"description\": \"Global identifier for an artifact version.\",\r\n-                    \"schema\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/state\": {\r\n-            \"summary\": \"Manage the state of an artifact.\",\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/UpdateState\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"Returned when the operation was successful.\"\r\n-                    },\r\n-                    \"400\": {\r\n-                        \"$ref\": \"#/components/responses/BadRequest\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateArtifactState\",\r\n-                \"summary\": \"Update artifact state\",\r\n-                \"description\": \"Updates the state of the artifact.  For example, you can use this to mark the latest\\nversion of an artifact as `DEPRECATED`.  The operation changes the state of the latest \\nversion of the artifact.  If multiple versions exist, only the most recent is changed.\\n\\nThe following state changes are supported:\\n\\n* Enabled -> Disabled\\n* Enabled -> Deprecated\\n* Enabled -> Deleted\\n* Disabled -> Enabled\\n* Disabled -> Deleted\\n* Disabled -> Deprecated\\n* Deprecated -> Deleted\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* Artifact cannot transition to the given state (HTTP error `400`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/versions/{version}\": {\r\n-            \"summary\": \"Manage a single version of a single artifact in the registry.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Versions\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"examples\": {\r\n-                                    \"OpenAPI\": {\r\n-                                        \"value\": {\r\n-                                            \"openapi\": \"3.0.2\",\r\n-                                            \"info\": {\r\n-                                                \"title\": \"Empty API\",\r\n-                                                \"version\": \"1.0.0\",\r\n-                                                \"description\": \"An example API design using OpenAPI.\"\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/x-protobuf\": {\r\n-                                \"examples\": {\r\n-                                    \"Protobuf Example\": {\r\n-                                        \"value\": \"message SearchResponse {\\n  repeated Result result = 1;\\n}\\n\\nmessage Result {\\n  required string url = 1;\\n  optional string title = 2;\\n  repeated string snippets = 3;\\n}\"\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/x-protobuffer\": {\r\n-                                \"examples\": {\r\n-                                    \"Protobuffer Example\": {\r\n-                                        \"value\": \"message SearchResponse {\\n  repeated Result result = 1;\\n}\\n\\nmessage Result {\\n  required string url = 1;\\n  optional string title = 2;\\n  repeated string snippets = 3;\\n}\"\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/graphql\": {\r\n-\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The content of the artifact version.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactVersion\",\r\n-                \"summary\": \"Get artifact version\",\r\n-                \"description\": \"Retrieves a single version of the artifact content.  Both the `artifactId` and the\\nunique `version` number must be provided.  The `Content-Type` of the response depends \\non the artifact type.  In most cases, this is `application/json`, but for some types \\nit may be different (for example, `PROTOBUF`).\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No version with this `version` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"version\",\r\n-                    \"description\": \"The unique identifier of a specific version of the artifact content.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                },\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/versions/{version}/state\": {\r\n-            \"summary\": \"Manage the state of a specific artifact version.\",\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/UpdateState\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Versions\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"Returned when the update was successful.\"\r\n-                    },\r\n-                    \"400\": {\r\n-                        \"$ref\": \"#/components/responses/BadRequest\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateArtifactVersionState\",\r\n-                \"summary\": \"Update artifact version state\",\r\n-                \"description\": \"Updates the state of a specific version of an artifact.  For example, you can use \\nthis operation to disable a specific version.\\n\\nThe following state changes are supported:\\n\\n* Enabled -> Disabled\\n* Enabled -> Deprecated\\n* Enabled -> Deleted\\n* Disabled -> Enabled\\n* Disabled -> Deleted\\n* Disabled -> Deprecated\\n* Deprecated -> Deleted\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No version with this `version` exists (HTTP error `404`)\\n* Artifact version cannot transition to the given state (HTTP error `400`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"version\",\r\n-                    \"description\": \"The unique identifier of a specific version of the artifact content.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                },\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/versions/{version}/meta\": {\r\n-            \"summary\": \"Manage the metadata for a single version of an artifact in the registry.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/VersionMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The artifact version's metadata.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactVersionMetaData\",\r\n-                \"summary\": \"Get artifact version metadata\",\r\n-                \"description\": \"Retrieves the metadata for a single version of the artifact.  The version metadata is \\na subset of the artifact metadata and only includes the metadata that is specific to\\nthe version (for example, this doesn't include `modifiedOn`).\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No version with this `version` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/EditableMetaData\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The artifact version's metadata was successfully updated.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateArtifactVersionMetaData\",\r\n-                \"summary\": \"Update artifact version metadata\",\r\n-                \"description\": \"Updates the user-editable portion of the artifact version's metadata.  Only some of \\nthe metadata fields are editable by the user.  For example, `description` is editable, \\nbut `createdOn` is not.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No version with this `version` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"delete\": {\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The artifact version's user-editable metadata was successfully deleted.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"deleteArtifactVersionMetaData\",\r\n-                \"summary\": \"Delete artifact version metadata\",\r\n-                \"description\": \"Deletes the user-editable metadata properties of the artifact version.  Any properties\\nthat are not user-editable are preserved.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No version with this `version` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"version\",\r\n-                    \"description\": \"The unique identifier of a specific version of the artifact content.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                },\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/rules\": {\r\n-            \"summary\": \"Manage the rules for a single artifact.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"type\": \"array\",\r\n-                                    \"items\": {\r\n-                                        \"$ref\": \"#/components/schemas/RuleType\"\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"Returns the names of the rules configured for the artifact.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"listArtifactRules\",\r\n-                \"summary\": \"List artifact rules\",\r\n-                \"description\": \"Returns a list of all rules configured for the artifact.  The set of rules determines\\nhow the content of an artifact can evolve over time.  If no rules are configured for\\nan artifact, the set of globally configured rules are used.  If no global rules \\nare defined, there are no restrictions on content evolution.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"post\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/Rule\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The rule was added.\"\r\n-                    },\r\n-                    \"400\": {\r\n-                        \"$ref\": \"#/components/responses/BadRequest\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"createArtifactRule\",\r\n-                \"summary\": \"Create artifact rule\",\r\n-                \"description\": \"Adds a rule to the list of rules that get applied to the artifact when adding new\\nversions.  All configured rules must pass to successfully add a new artifact version.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* Rule (named in the request body) is unknown (HTTP error `400`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"delete\": {\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The rules were successfully deleted.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"deleteArtifactRules\",\r\n-                \"summary\": \"Delete artifact rules\",\r\n-                \"description\": \"Deletes all of the rules configured for the artifact.  After this is done, the global\\nrules apply to the artifact again.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/rules/{rule}\": {\r\n-            \"summary\": \"Manage the configuration of a single artifact rule.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/Rule\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"Information about a rule.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactRuleConfig\",\r\n-                \"summary\": \"Get artifact rule configuration\",\r\n-                \"description\": \"Returns information about a single rule configured for an artifact.  This is useful\\nwhen you want to know what the current configuration settings are for a specific rule.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No rule with this name/type is configured for this artifact (HTTP error `404`)\\n* Invalid rule type (HTTP error `400`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/Rule\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/Rule\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"Rule configuration was updated.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateArtifactRuleConfig\",\r\n-                \"summary\": \"Update artifact rule configuration\",\r\n-                \"description\": \"Updates the configuration of a single rule for the artifact.  The configuration data\\nis specific to each rule type, so the configuration of the `COMPATIBILITY` rule \\nis in a different format from the configuration of the `VALIDITY` rule.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No rule with this name/type is configured for this artifact (HTTP error `404`)\\n* Invalid rule type (HTTP error `400`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"delete\": {\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The rule was successfully deleted.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"deleteArtifactRule\",\r\n-                \"summary\": \"Delete artifact rule\",\r\n-                \"description\": \"Deletes a rule from the artifact.  This results in the rule no longer applying for\\nthis artifact.  If this is the only rule configured for the artifact, this is the \\nsame as deleting **all** rules, and the globally configured rules now apply to\\nthis artifact.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* No rule with this name/type is configured for this artifact (HTTP error `404`)\\n* Invalid rule type (HTTP error `400`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"rule\",\r\n-                    \"description\": \"The unique name/type of a rule.\",\r\n-                    \"schema\": {\r\n-                        \"enum\": [\r\n-                            \"VALIDITY\",\r\n-                            \"COMPATIBILITY\"\r\n-                        ],\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                },\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/search/artifacts/{artifactId}/versions\": {\r\n-            \"summary\": \"Search for all versions of an artifact.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Search\",\r\n-                    \"Versions\"\r\n-                ],\r\n-                \"parameters\": [\r\n-                    {\r\n-                        \"name\": \"offset\",\r\n-                        \"description\": \"The number of versions to skip before starting to collect the result set.\",\r\n-                        \"schema\": {\r\n-                            \"type\": \"integer\"\r\n-                        },\r\n-                        \"in\": \"query\",\r\n-                        \"required\": true\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"limit\",\r\n-                        \"description\": \"The number of versions to return.\",\r\n-                        \"schema\": {\r\n-                            \"type\": \"integer\"\r\n-                        },\r\n-                        \"in\": \"query\",\r\n-                        \"required\": true\r\n-                    }\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/VersionSearchResults\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"On a successful response, returns a result set of versions - one for each version\\nof the artifact.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"searchVersions\",\r\n-                \"summary\": \"Search artifact versions\",\r\n-                \"description\": \"Searches for versions of a specific artifact.  This is typically used to get a listing\\nof all versions of an artifact (for example, in a user interface).\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts\": {\r\n-            \"summary\": \"Manage the collection of artifacts in the registry.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"type\": \"array\",\r\n-                                    \"items\": {\r\n-                                        \"type\": \"string\"\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"On a successful response, returns an array of artifact IDs - one for each artifact\\nin the registry.\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"listArtifacts\",\r\n-                \"summary\": \"List all artifact IDs\",\r\n-                \"description\": \"Returns a list of IDs of all artifacts in the registry as a flat list.  Typically the\\nserver is configured to limit the number of artifact IDs returned when a large number \\nof artifacts exist. In this case, the result of this call may be non-deterministic. The \\ndefault limit is typically 1000 artifacts.\"\r\n-            },\r\n-            \"post\": {\r\n-                \"requestBody\": {\r\n-                    \"description\": \"The content of the artifact being created. This is often, but not always, JSON data\\nrepresenting one of the supported artifact types:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\",\r\n-                    \"content\": {\r\n-                        \"*/*\": {\r\n-                            \"examples\": {\r\n-                                \"OpenAPI Example\": {\r\n-                                    \"value\": {\r\n-                                        \"openapi\": \"3.0.2\",\r\n-                                        \"info\": {\r\n-                                            \"title\": \"Empty API\",\r\n-                                            \"version\": \"1.0.7\",\r\n-                                            \"description\": \"An example API design using OpenAPI.\"\r\n-                                        },\r\n-                                        \"paths\": {\r\n-                                            \"/widgets\": {\r\n-                                                \"get\": {\r\n-                                                    \"responses\": {\r\n-                                                        \"200\": {\r\n-                                                            \"content\": {\r\n-                                                                \"application/json\": {\r\n-                                                                    \"schema\": {\r\n-                                                                        \"type\": \"array\",\r\n-                                                                        \"items\": {\r\n-                                                                            \"type\": \"string\"\r\n-                                                                        }\r\n-                                                                    }\r\n-                                                                }\r\n-                                                            },\r\n-                                                            \"description\": \"All widgets\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"summary\": \"Get widgets\"\r\n-                                                }\r\n-                                            }\r\n-                                        },\r\n-                                        \"components\": {\r\n-                                            \"schemas\": {\r\n-                                                \"Widget\": {\r\n-                                                    \"title\": \"Root Type for Widget\",\r\n-                                                    \"description\": \"A sample data type.\",\r\n-                                                    \"type\": \"object\",\r\n-                                                    \"properties\": {\r\n-                                                        \"property-1\": {\r\n-                                                            \"type\": \"string\"\r\n-                                                        },\r\n-                                                        \"property-2\": {\r\n-                                                            \"type\": \"boolean\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"example\": {\r\n-                                                        \"property-1\": \"value1\",\r\n-                                                        \"property-2\": true\r\n-                                                    }\r\n-                                                }\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"parameters\": [\r\n-                    {\r\n-                        \"name\": \"X-Registry-ArtifactType\",\r\n-                        \"description\": \"Specifies the type of the artifact being added. Possible values include:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"AVRO\",\r\n-                                \"PROTOBUF\",\r\n-                                \"PROTOBUF_FD\",\r\n-                                \"JSON\",\r\n-                                \"OPENAPI\",\r\n-                                \"ASYNCAPI\",\r\n-                                \"GRAPHQL\",\r\n-                                \"KCONNECT\",\r\n-                                \"WSDL\",\r\n-                                \"XSD\",\r\n-                                \"XML\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"header\"\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"X-Registry-ArtifactId\",\r\n-                        \"description\": \"A client-provided, globally unique identifier for the new artifact.\",\r\n-                        \"schema\": {\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"header\"\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"ifExists\",\r\n-                        \"description\": \"Set this option to instruct the server on what to do if the artifact already exists.\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"FAIL\",\r\n-                                \"UPDATE\",\r\n-                                \"RETURN\",\r\n-                                \"RETURN_OR_UPDATE\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"query\"\r\n-                    }\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/ArtifactMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"Artifact was successfully created.\"\r\n-                    },\r\n-                    \"400\": {\r\n-                        \"$ref\": \"#/components/responses/BadRequest\"\r\n-                    },\r\n-                    \"409\": {\r\n-                        \"$ref\": \"#/components/responses/Conflict\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"createArtifact\",\r\n-                \"summary\": \"Create artifact\",\r\n-                \"description\": \"Creates a new artifact by posting the artifact content.  The body of the request should\\nbe the raw content of the artifact.  This is typically in JSON format for *most* of the \\nsupported types, but may be in another format for a few (for example, `PROTOBUF`).\\n\\nThe registry attempts to figure out what kind of artifact is being added from the\\nfollowing supported list:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\\nAlternatively, you can specify the artifact type using the `X-Registry-ArtifactType` \\nHTTP request header, or include a hint in the request's `Content-Type`.  For example:\\n\\n```\\nContent-Type: application/json; artifactType=AVRO\\n```\\n\\nAn artifact is created using the content provided in the body of the request.  This\\ncontent is created under a unique artifact ID that can be provided in the request\\nusing the `X-Registry-ArtifactId` request header.  If not provided in the request,\\nthe server generates a unique ID for the artifact.  It is typically recommended\\nthat callers provide the ID, because this is typically a meaningful identifier, \\nand for most use cases should be supplied by the caller.\\n\\nIf an artifact with the provided artifact ID already exists, the default behavior\\nis for the server to reject the content with a 409 error.  However, the caller can\\nsupply the `ifExists` query parameter to alter this default behavior. The `ifExists`\\nquery parameter can have one of the following values:\\n\\n* `FAIL` (*default*) - server rejects the content with a 409 error\\n* `UPDATE` - server updates the existing artifact and returns the new metadata\\n* `RETURN` - server does not create or add content to the server, but instead \\nreturns the metadata for the existing artifact\\n* `RETURN_OR_UPDATE` - server returns an existing **version** that matches the \\nprovided content if such a version exists, otherwise a new version is created\\n\\nThis operation may fail for one of the following reasons:\\n\\n* An invalid `ArtifactType` was indicated (HTTP error `400`)\\n* No `ArtifactType` was indicated and the server could not determine one from the content (HTTP error `400`)\\n* An artifact with the provided ID already exists (HTTP error `409`)\\n* The content violates one of the configured global rules (HTTP error `409`)\\n* A server error occurred (HTTP error `500`)\\n\",\r\n-                \"x-codegen-async\": true\r\n-            }\r\n-        },\r\n-        \"/artifacts/{artifactId}\": {\r\n-            \"summary\": \"Manage a single artifact.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"examples\": {\r\n-                                    \"OpenAPI\": {\r\n-                                        \"value\": {\r\n-                                            \"openapi\": \"3.0.2\",\r\n-                                            \"info\": {\r\n-                                                \"title\": \"Empty API\",\r\n-                                                \"version\": \"1.0.0\",\r\n-                                                \"description\": \"An example API design using OpenAPI.\"\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/x-protobuf\": {\r\n-                                \"examples\": {\r\n-                                    \"Protobuf Example\": {\r\n-                                        \"value\": \"message SearchResponse {\\n  repeated Result result = 1;\\n}\\n\\nmessage Result {\\n  required string url = 1;\\n  optional string title = 2;\\n  repeated string snippets = 3;\\n}\"\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/x-protobuffer\": {\r\n-                                \"examples\": {\r\n-                                    \"Protobuffer Example\": {\r\n-                                        \"value\": \"message SearchResponse {\\n  repeated Result result = 1;\\n}\\n\\nmessage Result {\\n  required string url = 1;\\n  optional string title = 2;\\n  repeated string snippets = 3;\\n}\"\r\n-                                    }\r\n-                                }\r\n-                            },\r\n-                            \"application/graphql\": {\r\n-\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The most recent version of the artifact.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getLatestArtifact\",\r\n-                \"summary\": \"Get latest artifact\",\r\n-                \"description\": \"Returns the latest version of the artifact in its raw form.  The `Content-Type` of the\\nresponse depends on the artifact type.  In most cases, this is `application/json`, but \\nfor some types it may be different (for example, `PROTOBUF`).\\n\\nThis operation may fail for one of the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"description\": \"The new content of the artifact being updated. This is often, but not always, JSON data\\nrepresenting one of the supported artifact types:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\",\r\n-                    \"content\": {\r\n-                        \"*/*\": {\r\n-                            \"examples\": {\r\n-                                \"OpenAPI Example\": {\r\n-                                    \"value\": {\r\n-                                        \"openapi\": \"3.0.2\",\r\n-                                        \"info\": {\r\n-                                            \"title\": \"Empty API\",\r\n-                                            \"version\": \"1.0.7\",\r\n-                                            \"description\": \"An example API design using OpenAPI.\"\r\n-                                        },\r\n-                                        \"paths\": {\r\n-                                            \"/widgets\": {\r\n-                                                \"get\": {\r\n-                                                    \"responses\": {\r\n-                                                        \"200\": {\r\n-                                                            \"content\": {\r\n-                                                                \"application/json\": {\r\n-                                                                    \"schema\": {\r\n-                                                                        \"type\": \"array\",\r\n-                                                                        \"items\": {\r\n-                                                                            \"type\": \"string\"\r\n-                                                                        }\r\n-                                                                    }\r\n-                                                                }\r\n-                                                            },\r\n-                                                            \"description\": \"All widgets\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"summary\": \"Get widgets\"\r\n-                                                }\r\n-                                            }\r\n-                                        },\r\n-                                        \"components\": {\r\n-                                            \"schemas\": {\r\n-                                                \"Widget\": {\r\n-                                                    \"title\": \"Root Type for Widget\",\r\n-                                                    \"description\": \"A sample data type.\",\r\n-                                                    \"type\": \"object\",\r\n-                                                    \"properties\": {\r\n-                                                        \"property-1\": {\r\n-                                                            \"type\": \"string\"\r\n-                                                        },\r\n-                                                        \"property-2\": {\r\n-                                                            \"type\": \"boolean\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"example\": {\r\n-                                                        \"property-1\": \"value1\",\r\n-                                                        \"property-2\": true\r\n-                                                    }\r\n-                                                }\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"parameters\": [\r\n-                    {\r\n-                        \"name\": \"X-Registry-ArtifactType\",\r\n-                        \"description\": \"Specifies the type of the artifact being added.  Possible values include:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"AVRO\",\r\n-                                \"PROTOBUF\",\r\n-                                \"PROTOBUF_FD\",\r\n-                                \"JSON\",\r\n-                                \"OPENAPI\",\r\n-                                \"ASYNCAPI\",\r\n-                                \"GRAPHQL\",\r\n-                                \"KCONNECT\",\r\n-                                \"WSDL\",\r\n-                                \"XSD\",\r\n-                                \"XML\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"header\",\r\n-                        \"required\": false\r\n-                    }\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/ArtifactMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"When successful, returns the updated artifact metadata.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"409\": {\r\n-                        \"$ref\": \"#/components/responses/Conflict\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateArtifact\",\r\n-                \"summary\": \"Update artifact\",\r\n-                \"description\": \"Updates an artifact by uploading new content.  The body of the request should\\nbe the raw content of the artifact.  This is typically in JSON format for *most*\\nof the supported types, but may be in another format for a few (for example, `PROTOBUF`).\\n\\nThe registry attempts to figure out what kind of artifact is being added from the\\nfollowing supported list:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\\nAlternatively, you can specify the artifact type using the `X-Registry-ArtifactType` \\nHTTP request header, or include a hint in the request's `Content-Type`.  For example:\\n\\n```\\nContent-Type: application/json; artifactType=AVRO\\n```\\n\\nThe update could fail for a number of reasons including:\\n\\n* No artifact with the `artifactId` exists (HTTP error `404`)\\n* The new content violates one of the rules configured for the artifact (HTTP error `409`)\\n* The provided artifact type is not recognized (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\\nWhen successful, this creates a new version of the artifact, making it the most recent\\n(and therefore official) version of the artifact.\",\r\n-                \"x-codegen-async\": true\r\n-            },\r\n-            \"delete\": {\r\n-                \"tags\": [\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"Returned when the artifact was successfully deleted.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"deleteArtifact\",\r\n-                \"summary\": \"Delete artifact\",\r\n-                \"description\": \"Deletes an artifact completely, resulting in all versions of the artifact also being\\ndeleted.  This may fail for one of the following reasons:\\n\\n* No artifact with the `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/meta\": {\r\n-            \"summary\": \"Manage the metadata of a single artifact.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/ArtifactMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The artifact's metadata.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactMetaData\",\r\n-                \"summary\": \"Get artifact metadata\",\r\n-                \"description\": \"Gets the metadata for an artifact in the registry.  The returned metadata includes\\nboth generated (read-only) and editable metadata (such as name and description).\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"description\": \"Updated artifact metadata.\",\r\n-                    \"content\": {\r\n-                        \"*/*\": {\r\n-                            \"schema\": {\r\n-                                \"$ref\": \"#/components/schemas/EditableMetaData\"\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"The artifact's metadata was updated.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"updateArtifactMetaData\",\r\n-                \"summary\": \"Update artifact metadata\",\r\n-                \"description\": \"Updates the editable parts of the artifact's metadata.  Not all metadata fields can\\nbe updated.  For example, `createdOn` and `createdBy` are both read-only properties.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with the `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\"\r\n-            },\r\n-            \"post\": {\r\n-                \"requestBody\": {\r\n-                    \"description\": \"The content of an artifact version.\",\r\n-                    \"content\": {\r\n-                        \"application/json\": {\r\n-                            \"examples\": {\r\n-                                \"OpenAPI Example\": {\r\n-                                    \"value\": {\r\n-                                        \"openapi\": \"3.0.2\",\r\n-                                        \"info\": {\r\n-                                            \"title\": \"Empty API\",\r\n-                                            \"version\": \"1.0.7\",\r\n-                                            \"description\": \"An example API design using OpenAPI.\"\r\n-                                        },\r\n-                                        \"paths\": {\r\n-                                            \"/widgets\": {\r\n-                                                \"get\": {\r\n-                                                    \"responses\": {\r\n-                                                        \"200\": {\r\n-                                                            \"content\": {\r\n-                                                                \"application/json\": {\r\n-                                                                    \"schema\": {\r\n-                                                                        \"type\": \"array\",\r\n-                                                                        \"items\": {\r\n-                                                                            \"type\": \"string\"\r\n-                                                                        }\r\n-                                                                    }\r\n-                                                                }\r\n-                                                            },\r\n-                                                            \"description\": \"All widgets\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"summary\": \"Get widgets\"\r\n-                                                }\r\n-                                            }\r\n-                                        },\r\n-                                        \"components\": {\r\n-                                            \"schemas\": {\r\n-                                                \"Widget\": {\r\n-                                                    \"title\": \"Root Type for Widget\",\r\n-                                                    \"description\": \"A sample data type.\",\r\n-                                                    \"type\": \"object\",\r\n-                                                    \"properties\": {\r\n-                                                        \"property-1\": {\r\n-                                                            \"type\": \"string\"\r\n-                                                        },\r\n-                                                        \"property-2\": {\r\n-                                                            \"type\": \"boolean\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"example\": {\r\n-                                                        \"property-1\": \"value1\",\r\n-                                                        \"property-2\": true\r\n-                                                    }\r\n-                                                }\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Metadata\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/ArtifactMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The metadata of the artifact version matching the provided content.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"getArtifactMetaDataByContent\",\r\n-                \"summary\": \"Get artifact metadata by content\",\r\n-                \"description\": \"Gets the metadata for an artifact that matches the raw content.  Searches the registry\\nfor a version of the given artifact matching the content provided in the body of the\\nPOST.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with the `artifactId` exists (HTTP error `404`)\\n* No artifact version matching the provided content exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/versions\": {\r\n-            \"summary\": \"Manage all the versions of an artifact in the registry.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Versions\"\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"type\": \"array\",\r\n-                                    \"items\": {\r\n-                                        \"format\": \"int64\",\r\n-                                        \"type\": \"integer\"\r\n-                                    }\r\n-                                },\r\n-                                \"examples\": {\r\n-                                    \"All Versions\": {\r\n-                                        \"value\": [\r\n-                                            5,\r\n-                                            6,\r\n-                                            10,\r\n-                                            103\r\n-                                        ]\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"List of all artifact versions (just the version IDs).\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"listArtifactVersions\",\r\n-                \"summary\": \"List artifact versions\",\r\n-                \"description\": \"Returns a list of all version numbers for the artifact.\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\"\r\n-            },\r\n-            \"post\": {\r\n-                \"requestBody\": {\r\n-                    \"description\": \"The content of the artifact version being created. This is often, but not always, JSON data\\nrepresenting one of the supported artifact types:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\",\r\n-                    \"content\": {\r\n-                        \"*/*\": {\r\n-                            \"examples\": {\r\n-                                \"OpenAPI Example\": {\r\n-                                    \"value\": {\r\n-                                        \"openapi\": \"3.0.2\",\r\n-                                        \"info\": {\r\n-                                            \"title\": \"Empty API\",\r\n-                                            \"version\": \"1.0.7\",\r\n-                                            \"description\": \"An example API design using OpenAPI.\"\r\n-                                        },\r\n-                                        \"paths\": {\r\n-                                            \"/widgets\": {\r\n-                                                \"get\": {\r\n-                                                    \"responses\": {\r\n-                                                        \"200\": {\r\n-                                                            \"content\": {\r\n-                                                                \"application/json\": {\r\n-                                                                    \"schema\": {\r\n-                                                                        \"type\": \"array\",\r\n-                                                                        \"items\": {\r\n-                                                                            \"type\": \"string\"\r\n-                                                                        }\r\n-                                                                    }\r\n-                                                                }\r\n-                                                            },\r\n-                                                            \"description\": \"All widgets\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"summary\": \"Get widgets\"\r\n-                                                }\r\n-                                            }\r\n-                                        },\r\n-                                        \"components\": {\r\n-                                            \"schemas\": {\r\n-                                                \"Widget\": {\r\n-                                                    \"title\": \"Root Type for Widget\",\r\n-                                                    \"description\": \"A sample data type.\",\r\n-                                                    \"type\": \"object\",\r\n-                                                    \"properties\": {\r\n-                                                        \"property-1\": {\r\n-                                                            \"type\": \"string\"\r\n-                                                        },\r\n-                                                        \"property-2\": {\r\n-                                                            \"type\": \"boolean\"\r\n-                                                        }\r\n-                                                    },\r\n-                                                    \"example\": {\r\n-                                                        \"property-1\": \"value1\",\r\n-                                                        \"property-2\": true\r\n-                                                    }\r\n-                                                }\r\n-                                            }\r\n-                                        }\r\n-                                    }\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Versions\"\r\n-                ],\r\n-                \"parameters\": [\r\n-                    {\r\n-                        \"name\": \"X-Registry-ArtifactType\",\r\n-                        \"description\": \"This header parameter can be used to indicate the type of the artifact being added. Possible values include: \\n* Avro (`AVRO`)   \\n* Protobuf (`PROTOBUF`)  \\n* Protobuf File Descriptor (`PROTOBUF_FD`)   \\n* JSON Schema (`JSON`)   \\n* Kafka Connect (`KCONNECT`)   \\n* OpenAPI (`OPENAPI`)   \\n* AsyncAPI (`ASYNCAPI`)  \\n* GraphQL (`GRAPHQL`)   \\n* Web Services Description Language (`WSDL`)   \\n* XML Schema (`XSD`)\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"AVRO\",\r\n-                                \"PROTOBUF\",\r\n-                                \"PROTOBUF_FD\",\r\n-                                \"JSON\",\r\n-                                \"OPENAPI\",\r\n-                                \"ASYNCAPI\",\r\n-                                \"GRAPHQL\",\r\n-                                \"KCONNECT\",\r\n-                                \"WSDL\",\r\n-                                \"XSD\",\r\n-                                \"XML\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"header\"\r\n-                    }\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/VersionMetaData\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"The artifact version was successfully created.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"409\": {\r\n-                        \"$ref\": \"#/components/responses/Conflict\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"createArtifactVersion\",\r\n-                \"summary\": \"Create artifact version\",\r\n-                \"description\": \"Creates a new version of the artifact by uploading new content.  The configured rules for\\nthe artifact are applied, and if they all pass, the new content is added as the most recent \\nversion of the artifact.  If any of the rules fail, an error is returned.\\n\\nThe body of the request should be the raw content of the new artifact version.  This \\nis typically in JSON format for *most* of the supported types, but may be in another \\nformat for a few (for example, `PROTOBUF`).\\n\\nThe registry attempts to figure out what kind of artifact is being added from the\\nfollowing supported list:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\\nAlternatively, you can explicitly specify the artifact type using the `X-Registry-ArtifactType` \\nHTTP request header, or by including a hint in the request's `Content-Type`.\\n\\nFor example:\\n\\n```\\nContent-Type: application/json; artifactType=AVRO\\n```\\n\\nThis operation can fail for the following reasons:\\n\\n* No artifact with this `artifactId` exists (HTTP error `404`)\\n* The new content violates one of the rules configured for the artifact (HTTP error `409`)\\n* A server error occurred (HTTP error `500`)\\n\",\r\n-                \"x-codegen-async\": true\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/artifacts/{artifactId}/test\": {\r\n-            \"summary\": \"Test whether content would pass update rules.\",\r\n-            \"put\": {\r\n-                \"requestBody\": {\r\n-                    \"description\": \"The content of the artifact being tested. This is often, but not always, JSON data\\nrepresenting one of the supported artifact types:\\n\\n* Avro (`AVRO`)\\n* Protobuf (`PROTOBUF`)\\n* Protobuf File Descriptor (`PROTOBUF_FD`)\\n* JSON Schema (`JSON`)\\n* Kafka Connect (`KCONNECT`)\\n* OpenAPI (`OPENAPI`)\\n* AsyncAPI (`ASYNCAPI`)\\n* GraphQL (`GRAPHQL`)\\n* Web Services Description Language (`WSDL`)\\n* XML Schema (`XSD`)\\n\",\r\n-                    \"content\": {\r\n-                        \"*/*\": {\r\n-\r\n-                        }\r\n-                    },\r\n-                    \"required\": true\r\n-                },\r\n-                \"tags\": [\r\n-                    \"Artifact rules\"\r\n-                ],\r\n-                \"parameters\": [\r\n-                    {\r\n-                        \"name\": \"X-Registry-ArtifactType\",\r\n-                        \"description\": \"This header parameter can be used to indicate the type of the artifact being added.  Possible values include: \\n* Avro (`AVRO`)  \\n* Protobuf (`PROTOBUF`)  \\n* Protobuf File Descriptor (`PROTOBUF_FD`)  \\n* JSON Schema (`JSON`)  \\n* Kafka Connect (`KCONNECT`)  \\n* OpenAPI (`OPENAPI`)  \\n* AsyncAPI (`ASYNCAPI`) \\n* GraphQL (`GRAPHQL`)  \\n* Web Services Description Language (`WSDL`)  \\n* XML Schema (`XSD`)\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"AVRO\",\r\n-                                \"PROTOBUF\",\r\n-                                \"PROTOBUF_FD\",\r\n-                                \"JSON\",\r\n-                                \"OPENAPI\",\r\n-                                \"ASYNCAPI\",\r\n-                                \"GRAPHQL\",\r\n-                                \"KCONNECT\",\r\n-                                \"WSDL\",\r\n-                                \"XSD\",\r\n-                                \"XML\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"header\"\r\n-                    }\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"204\": {\r\n-                        \"description\": \"When successful, returns \\\"No Content\\\" to indicate that the rules passed, and the\\ncontent was not updated.\"\r\n-                    },\r\n-                    \"404\": {\r\n-                        \"$ref\": \"#/components/responses/NotFound\"\r\n-                    },\r\n-                    \"409\": {\r\n-                        \"$ref\": \"#/components/responses/Conflict\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"testUpdateArtifact\",\r\n-                \"summary\": \"Test update artifact\",\r\n-                \"description\": \"Tests whether an update to the artifact's content *would* succeed for the provided content.\\nUltimately, this applies any rules configured for the artifact against the given content\\nto determine whether the rules would pass or fail, but without actually updating the artifact\\ncontent.\\n\\nThe body of the request should be the raw content of the artifact.  This is typically in \\nJSON format for *most* of the supported types, but may be in another format for a few \\n(for example, `PROTOBUF`).\\n\\nThe registry attempts to figure out what kind of artifact is being added from the following  supported list: \\n\\n* Avro (`AVRO`)  \\n* Protobuf (`PROTOBUF`)  \\n* Protobuf File Descriptor (`PROTOBUF_FD`)  \\n* JSON Schema (`JSON`)  \\n* Kafka Connect (`KCONNECT`) \\n* OpenAPI (`OPENAPI`)  \\n* AsyncAPI (`ASYNCAPI`) \\n* GraphQL (`GRAPHQL`) \\n* Web Services Description Language (`WSDL`) \\n* XML Schema (`XSD`)\\n\\nAlternatively, you can explicitly specify the artifact type using the `X-Registry-ArtifactType` \\nHTTP request header, or by including a hint in the request's `Content-Type`.  For example:\\n\\n```\\nContent-Type: application/json; artifactType=AVRO\\n```\\n\\nThe update could fail for a number of reasons including:\\n\\n* No artifact with the `artifactId` exists (HTTP error `404`)\\n* The new content violates one of the rules configured for the artifact (HTTP error `409`)\\n* The provided artifact type is not recognized (HTTP error `404`)\\n* A server error occurred (HTTP error `500`)\\n\\nWhen successful, this operation simply returns a *No Content* response.\"\r\n-            },\r\n-            \"parameters\": [\r\n-                {\r\n-                    \"name\": \"artifactId\",\r\n-                    \"description\": \"The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.\",\r\n-                    \"schema\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"in\": \"path\",\r\n-                    \"required\": true\r\n-                }\r\n-            ]\r\n-        },\r\n-        \"/search/artifacts\": {\r\n-            \"summary\": \"Search for content in the registry; artifacts in particular.\",\r\n-            \"get\": {\r\n-                \"tags\": [\r\n-                    \"Search\",\r\n-                    \"Artifacts\"\r\n-                ],\r\n-                \"parameters\": [\r\n-                    {\r\n-                        \"name\": \"search\",\r\n-                        \"description\": \"The text to search.\",\r\n-                        \"schema\": {\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"query\"\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"offset\",\r\n-                        \"description\": \"The number of artifacts to skip before starting to collect the result set.\",\r\n-                        \"schema\": {\r\n-                            \"default\": 0,\r\n-                            \"type\": \"integer\"\r\n-                        },\r\n-                        \"in\": \"query\",\r\n-                        \"required\": true\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"limit\",\r\n-                        \"description\": \"The number of artifacts to return.\",\r\n-                        \"schema\": {\r\n-                            \"default\": 20,\r\n-                            \"type\": \"integer\"\r\n-                        },\r\n-                        \"in\": \"query\",\r\n-                        \"required\": true\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"over\",\r\n-                        \"description\": \"What fields to search.\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"everything\",\r\n-                                \"name\",\r\n-                                \"description\",\r\n-                                \"labels\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"query\",\r\n-                        \"required\": false\r\n-                    },\r\n-                    {\r\n-                        \"name\": \"order\",\r\n-                        \"description\": \"Sort order, ascending or descending.\",\r\n-                        \"schema\": {\r\n-                            \"enum\": [\r\n-                                \"asc\",\r\n-                                \"desc\"\r\n-                            ],\r\n-                            \"type\": \"string\"\r\n-                        },\r\n-                        \"in\": \"query\",\r\n-                        \"required\": false\r\n-                    }\r\n-                ],\r\n-                \"responses\": {\r\n-                    \"200\": {\r\n-                        \"content\": {\r\n-                            \"application/json\": {\r\n-                                \"schema\": {\r\n-                                    \"$ref\": \"#/components/schemas/ArtifactSearchResults\"\r\n-                                }\r\n-                            }\r\n-                        },\r\n-                        \"description\": \"On a successful response, returns a result set of artifacts - one for each artifact\\nin the registry that matches the criteria.\"\r\n-                    },\r\n-                    \"500\": {\r\n-                        \"$ref\": \"#/components/responses/ServerError\"\r\n-                    }\r\n-                },\r\n-                \"operationId\": \"searchArtifacts\",\r\n-                \"summary\": \"Search for artifacts\",\r\n-                \"description\": \"Returns a paginated list of all artifacts that match the provided search criteria.\\n\"\r\n-            }\r\n-        }\r\n-    },\r\n-    \"components\": {\r\n-        \"schemas\": {\r\n-            \"EditableMetaData\": {\r\n-                \"title\": \"Root Type for EditableArtifactMetaData\",\r\n-                \"description\": \"\",\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"name\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"description\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"labels\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"type\": \"string\"\r\n-                        }\r\n-                    },\r\n-                    \"properties\": {\r\n-                        \"$ref\": \"#/components/schemas/Properties\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"name\": \"Artifact Name\",\r\n-                    \"description\": \"The description of the artifact.\",\r\n-                    \"labels\": [\r\n-                        \"regional\",\r\n-                        \"global\"\r\n-                    ],\r\n-                    \"properties\": {\r\n-                        \"custom-1\": \"foo\",\r\n-                        \"custom-2\": \"bar\"\r\n-                    }\r\n-                }\r\n-            },\r\n-            \"VersionMetaData\": {\r\n-                \"title\": \"Root Type for ArtifactVersionMetaData\",\r\n-                \"description\": \"\",\r\n-                \"required\": [\r\n-                    \"createdOn\",\r\n-                    \"createdBy\",\r\n-                    \"version\",\r\n-                    \"type\",\r\n-                    \"globalId\",\r\n-                    \"id\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"version\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"name\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"description\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdBy\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdOn\": {\r\n-                        \"format\": \"date-time\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"type\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactType\"\r\n-                    },\r\n-                    \"globalId\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"state\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactState\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"id\": {\r\n-                        \"description\": \"The artifact id.\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"labels\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"type\": \"string\"\r\n-                        }\r\n-                    },\r\n-                    \"properties\": {\r\n-                        \"$ref\": \"#/components/schemas/Properties\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"id\": \"my-artifact-id\",\r\n-                    \"version\": 1221432,\r\n-                    \"type\": \"PROTOBUF\",\r\n-                    \"name\": \"Artifact Name\",\r\n-                    \"description\": \"The description of the artifact\",\r\n-                    \"createdBy\": \"user1\",\r\n-                    \"createdOn\": \"2019-05-17T12:00:00Z\",\r\n-                    \"globalId\": 183282932983,\r\n-                    \"labels\": [\r\n-                        \"label-1\",\r\n-                        \"label-2\"\r\n-                    ],\r\n-                    \"properties\": {\r\n-                        \"custom-1\": \"foo\",\r\n-                        \"custom-2\": \"bar\"\r\n-                    }\r\n-                }\r\n-            },\r\n-            \"ArtifactMetaData\": {\r\n-                \"title\": \"Root Type for ArtifactMetaData\",\r\n-                \"description\": \"\",\r\n-                \"required\": [\r\n-                    \"id\",\r\n-                    \"createdBy\",\r\n-                    \"createdOn\",\r\n-                    \"modifiedBy\",\r\n-                    \"modifiedOn\",\r\n-                    \"version\",\r\n-                    \"type\",\r\n-                    \"globalId\",\r\n-                    \"state\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"name\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"description\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdBy\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdOn\": {\r\n-                        \"format\": \"date-time\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"modifiedBy\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"modifiedOn\": {\r\n-                        \"format\": \"date-time\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"id\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"version\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"type\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactType\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"globalId\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"state\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactState\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"labels\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"type\": \"string\"\r\n-                        }\r\n-                    },\r\n-                    \"properties\": {\r\n-                        \"$ref\": \"#/components/schemas/Properties\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"id\": \"Procurement-Invoice\",\r\n-                    \"name\": \"Artifact Name\",\r\n-                    \"description\": \"Description of the artifact\",\r\n-                    \"type\": \"AVRO\",\r\n-                    \"version\": 18,\r\n-                    \"createdBy\": \"user1\",\r\n-                    \"createdOn\": \"2019-03-22T12:51:19Z\",\r\n-                    \"modifiedBy\": \"user2\",\r\n-                    \"modifiedOn\": \"2019-07-19T15:09:00Z\",\r\n-                    \"globalId\": 12984719247,\r\n-                    \"labels\": [\r\n-                        \"label-1\",\r\n-                        \"label-2\"\r\n-                    ],\r\n-                    \"properties\": {\r\n-                        \"custom-1\": \"foo\",\r\n-                        \"custom-2\": \"bar\"\r\n-                    }\r\n-                }\r\n-            },\r\n-            \"Rule\": {\r\n-                \"title\": \"Root Type for Rule\",\r\n-                \"description\": \"\",\r\n-                \"required\": [\r\n-                    \"config\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"config\": {\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"type\": {\r\n-                        \"$ref\": \"#/components/schemas/RuleType\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"type\": \"VALIDITY\",\r\n-                    \"config\": \"FULL\"\r\n-                }\r\n-            },\r\n-            \"Error\": {\r\n-                \"title\": \"Root Type for Error\",\r\n-                \"description\": \"All error responses, whether `4xx` or `5xx` will include one of these as the response\\nbody.\",\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"message\": {\r\n-                        \"description\": \"The short error message.\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"error_code\": {\r\n-                        \"format\": \"int32\",\r\n-                        \"description\": \"The server-side error code.\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"detail\": {\r\n-                        \"description\": \"Full details about the error.  This might contain a server stack trace, for example.\",\r\n-                        \"type\": \"string\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"error_code\": 500,\r\n-                    \"message\": \"An error occurred somewhere.\"\r\n-                }\r\n-            },\r\n-            \"RuleType\": {\r\n-                \"description\": \"\",\r\n-                \"enum\": [\r\n-                    \"VALIDITY\",\r\n-                    \"COMPATIBILITY\"\r\n-                ],\r\n-                \"type\": \"string\",\r\n-                \"example\": \"VALIDITY\",\r\n-                \"x-codegen-package\": \"io.apicurio.registry.types\"\r\n-            },\r\n-            \"ArtifactType\": {\r\n-                \"description\": \"\",\r\n-                \"enum\": [\r\n-                    \"AVRO\",\r\n-                    \"PROTOBUF\",\r\n-                    \"PROTOBUF_FD\",\r\n-                    \"JSON\",\r\n-                    \"OPENAPI\",\r\n-                    \"ASYNCAPI\",\r\n-                    \"GRAPHQL\",\r\n-                    \"KCONNECT\",\r\n-                    \"WSDL\",\r\n-                    \"XSD\",\r\n-                    \"XML\"\r\n-                ],\r\n-                \"type\": \"string\",\r\n-                \"example\": \"AVRO\",\r\n-                \"x-codegen-package\": \"io.apicurio.registry.types\"\r\n-            },\r\n-            \"UpdateState\": {\r\n-                \"title\": \"Root Type for UpdateState\",\r\n-                \"description\": \"\",\r\n-                \"required\": [\r\n-                    \"state\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"state\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactState\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"state\": \"DISABLED\"\r\n-                }\r\n-            },\r\n-            \"ArtifactState\": {\r\n-                \"description\": \"Describes the state of an artifact or artifact version.  The following states\\nare possible:\\n\\n* ENABLED\\n* DISABLED\\n* DEPRECATED\\n\",\r\n-                \"enum\": [\r\n-                    \"ENABLED\",\r\n-                    \"DISABLED\",\r\n-                    \"DEPRECATED\",\r\n-                    \"DELETED\"\r\n-                ],\r\n-                \"type\": \"string\",\r\n-                \"x-codegen-package\": \"io.apicurio.registry.types\"\r\n-            },\r\n-            \"ArtifactSearchResults\": {\r\n-                \"description\": \"Describes the response received when searching for artifacts.\",\r\n-                \"required\": [\r\n-                    \"count\",\r\n-                    \"artifacts\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"artifacts\": {\r\n-                        \"description\": \"The artifacts that matched the search criteria.\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"$ref\": \"#/components/schemas/SearchedArtifact\"\r\n-                        }\r\n-                    },\r\n-                    \"count\": {\r\n-                        \"description\": \"The total number of artifacts that matched the search criteria.\",\r\n-                        \"type\": \"integer\"\r\n-                    }\r\n-                }\r\n-            },\r\n-            \"SearchedArtifact\": {\r\n-                \"description\": \"Models a single artifact from the result set returned when searching for artifacts.\",\r\n-                \"required\": [\r\n-                    \"createdBy\",\r\n-                    \"createdOn\",\r\n-                    \"id\",\r\n-                    \"type\",\r\n-                    \"state\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"id\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"name\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"description\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdOn\": {\r\n-                        \"format\": \"date-time\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdBy\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"type\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactType\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"labels\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"type\": \"string\"\r\n-                        }\r\n-                    },\r\n-                    \"state\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactState\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"modifiedOn\": {\r\n-                        \"format\": \"date-time\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"modifiedBy\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"id\": \"Procurement-Invoice\",\r\n-                    \"name\": \"Artifact Name\",\r\n-                    \"description\": \"Description of the artifact\",\r\n-                    \"labels\": [\r\n-                        \"current\",\r\n-                        \"internal\"\r\n-                    ],\r\n-                    \"type\": \"AVRO\",\r\n-                    \"state\": \"ENABLED\",\r\n-                    \"createdBy\": \"user1\",\r\n-                    \"createdOn\": \"2019-03-22T12:51:19Z\"\r\n-                }\r\n-            },\r\n-            \"SortOrder\": {\r\n-                \"description\": \"\",\r\n-                \"enum\": [\r\n-                    \"asc\",\r\n-                    \"desc\"\r\n-                ],\r\n-                \"type\": \"string\"\r\n-            },\r\n-            \"SearchOver\": {\r\n-                \"description\": \"\",\r\n-                \"enum\": [\r\n-                    \"everything\",\r\n-                    \"name\",\r\n-                    \"description\",\r\n-                    \"labels\"\r\n-                ],\r\n-                \"type\": \"string\"\r\n-            },\r\n-            \"VersionSearchResults\": {\r\n-                \"description\": \"Describes the response received when searching for artifacts.\",\r\n-                \"required\": [\r\n-                    \"count\",\r\n-                    \"versions\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"count\": {\r\n-                        \"description\": \"The total number of artifacts that matched the search criteria.\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"versions\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"$ref\": \"#/components/schemas/SearchedVersion\"\r\n-                        }\r\n-                    }\r\n-                }\r\n-            },\r\n-            \"SearchedVersion\": {\r\n-                \"description\": \"Models a single artifact from the result set returned when searching for artifacts.\",\r\n-                \"required\": [\r\n-                    \"createdBy\",\r\n-                    \"createdOn\",\r\n-                    \"type\",\r\n-                    \"state\",\r\n-                    \"globalId\",\r\n-                    \"version\"\r\n-                ],\r\n-                \"type\": \"object\",\r\n-                \"properties\": {\r\n-                    \"name\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"description\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdOn\": {\r\n-                        \"format\": \"date-time\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"createdBy\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"string\"\r\n-                    },\r\n-                    \"type\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactType\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"labels\": {\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"array\",\r\n-                        \"items\": {\r\n-                            \"type\": \"string\"\r\n-                        }\r\n-                    },\r\n-                    \"state\": {\r\n-                        \"$ref\": \"#/components/schemas/ArtifactState\",\r\n-                        \"description\": \"\"\r\n-                    },\r\n-                    \"globalId\": {\r\n-                        \"format\": \"int64\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"integer\"\r\n-                    },\r\n-                    \"version\": {\r\n-                        \"format\": \"int32\",\r\n-                        \"description\": \"\",\r\n-                        \"type\": \"integer\"\r\n-                    }\r\n-                },\r\n-                \"example\": {\r\n-                    \"globalId\": 3849759283547,\r\n-                    \"version\": 17,\r\n-                    \"name\": \"Artifact Version Name\",\r\n-                    \"description\": \"Description of the artifact version\",\r\n-                    \"labels\": [\r\n-                        \"current\",\r\n-                        \"internal\"\r\n-                    ],\r\n-                    \"type\": \"AVRO\",\r\n-                    \"state\": \"ENABLED\",\r\n-                    \"createdBy\": \"user1\",\r\n-                    \"createdOn\": \"2019-03-22T12:51:19Z\"\r\n-                }\r\n-            },\r\n-            \"Properties\": {\r\n-                \"description\": \"User-defined name-value pairs. Name and value must be strings.\",\r\n-                \"type\": \"object\",\r\n-                \"additionalProperties\": {\r\n-                    \"type\": \"string\"\r\n-                }\r\n-            }\r\n-        },\r\n-        \"responses\": {\r\n-            \"NotFound\": {\r\n-                \"content\": {\r\n-                    \"application/json\": {\r\n-                        \"schema\": {\r\n-                            \"$ref\": \"#/components/schemas/Error\"\r\n-                        },\r\n-                        \"examples\": {\r\n-                            \"NotFoundExample\": {\r\n-                                \"value\": {\r\n-                                    \"error_code\": 404,\r\n-                                    \"message\": \"No artifact with id 'Topic-1/Inbound' could be found.\"\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    }\r\n-                },\r\n-                \"description\": \"Common response for all operations that can return a `404` error.\"\r\n-            },\r\n-            \"ServerError\": {\r\n-                \"content\": {\r\n-                    \"application/json\": {\r\n-                        \"schema\": {\r\n-                            \"$ref\": \"#/components/schemas/Error\"\r\n-                        },\r\n-                        \"examples\": {\r\n-                            \"ErrorExample\": {\r\n-                                \"value\": {\r\n-                                    \"error_code\": 500,\r\n-                                    \"message\": \"Lost connection to the database.\"\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    }\r\n-                },\r\n-                \"description\": \"Common response for all operations that can fail with an unexpected server error.\"\r\n-            },\r\n-            \"BadRequest\": {\r\n-                \"content\": {\r\n-                    \"application/json\": {\r\n-                        \"schema\": {\r\n-                            \"$ref\": \"#/components/schemas/Error\"\r\n-                        }\r\n-                    }\r\n-                },\r\n-                \"description\": \"Common response for all operations that can return a `400` error.\"\r\n-            },\r\n-            \"Conflict\": {\r\n-                \"content\": {\r\n-                    \"application/json\": {\r\n-                        \"schema\": {\r\n-                            \"$ref\": \"#/components/schemas/Error\"\r\n-                        },\r\n-                        \"examples\": {\r\n-                            \"ConflictExample\": {\r\n-                                \"value\": {\r\n-                                    \"error_code\": 409,\r\n-                                    \"message\": \"The artifact content was invalid.\"\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    }\r\n-                },\r\n-                \"description\": \"Common response used when an input conflicts with existing data.\"\r\n-            }\r\n-        }\r\n-    },\r\n-    \"tags\": [\r\n-        {\r\n-            \"name\": \"Artifacts\",\r\n-            \"description\": \"The primary way to interact with the Apicurio Registry API is to add, update, \\nor delete artifacts. This section includes all of these primary operations.\"\r\n-        },\r\n-        {\r\n-            \"name\": \"Metadata\",\r\n-            \"description\": \"Sometimes the metadata for an artifact is important. For example, metadata includes \\nwhen the artifact was created, last updated, and so on. This section contains \\noperations to access (and in some cases change) an artifact's metadata.\"\r\n-        },\r\n-        {\r\n-            \"name\": \"Versions\",\r\n-            \"description\": \"Whenever an artifact's content is updated, the old versions of the artifact's content\\nare not lost.  All versions can be listed and accessed if necessary.  This section \\ndescribes the operations used to list and access all versions of an artifact's content\\nand metadata.\"\r\n-        },\r\n-        {\r\n-            \"name\": \"Artifact rules\",\r\n-            \"description\": \"Rules can be configured on a per-artifact basis, allowing for different approaches\\nto content evolution for each artifact.  These rules will override any global rules\\nthat have been configured.  This section contains the operations used to manage a\\nsingle artifact's rules.\"\r\n-        },\r\n-        {\r\n-            \"name\": \"Global rules\",\r\n-            \"description\": \"Global rules can be configured in the registry to govern how artifact content can \\nevolve over time (as artifact content is **updated**). Global rules will be applied \\nwhenever an artifact is added to the registry, and also whenever an artifact's \\ncontent is updated (only if that artifact doesn't have its own specific rules \\nconfigured). This section describes the operations used to manage the global rules.\"\r\n-        },\r\n-        {\r\n-            \"name\": \"Search\",\r\n-            \"description\": \"The search API is used to browse or find artifacts in the registry. This section describes the operations for searching for artifacts and versions. \"\r\n-        }\r\n-    ]\r\n-}\r\n+{\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\n+        \"title\": \"Apicurio Registry API\",\n+        \"version\": \"1.2.2\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1bd4bf706bd9dfb16ce2194a231282d498bb6a9"}, "originalPosition": 2291}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjQxMzE4", "url": "https://github.com/Apicurio/apicurio-registry/pull/855#pullrequestreview-491241318", "createdAt": "2020-09-18T08:08:19Z", "commit": {"oid": "b1bd4bf706bd9dfb16ce2194a231282d498bb6a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4440, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}