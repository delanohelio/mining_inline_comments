{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNDcwNjcx", "number": 1086, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODozNzo0N1rOFGEg6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjo0NTozM1rOFGsLcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTA5NzM4OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODozNzo0N1rOIG5xxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjo0MDozMVrOIHzyYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwODk5OQ==", "bodyText": "Since UTF-8 legacily supports ASCII, for me, +1 to UTF-8. That said if we end up using only US-ASCII characters (no accents etc) and I think that's the case here, then it shouldn't matter.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1086#discussion_r544108999", "createdAt": "2020-12-16T08:37:47Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "diffHunk": "@@ -438,4 +447,13 @@ public void setNextRequestHeaders(Map<String, String> headers) {\n     public Map<String, String> getHeaders() {\n         return requestHeaders.get();\n     }\n+\n+    private String encodeURIComponent(String value) {\n+        try {\n+            //TODO what to use here ASCII or UTF_8 ??", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e130e17c3ab3c106ada9a18c5a45d06770b6859c"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1OTQyNA==", "bodyText": "+1 to UTF-8 for me as well.  That's generally considered the right default to use in most situations.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1086#discussion_r545059424", "createdAt": "2020-12-17T12:40:31Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "diffHunk": "@@ -438,4 +447,13 @@ public void setNextRequestHeaders(Map<String, String> headers) {\n     public Map<String, String> getHeaders() {\n         return requestHeaders.get();\n     }\n+\n+    private String encodeURIComponent(String value) {\n+        try {\n+            //TODO what to use here ASCII or UTF_8 ??", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwODk5OQ=="}, "originalCommit": {"oid": "e130e17c3ab3c106ada9a18c5a45d06770b6859c"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTU4NjI2OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjo0MzowOVrOIHz4wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNTozNToyOFrOIH7YoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA2MTA1Ng==", "bodyText": "Check it in the client to fail-fast, smart.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1086#discussion_r545061056", "createdAt": "2020-12-17T12:43:09Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "diffHunk": "@@ -231,133 +237,136 @@ public ArtifactMetaData createArtifact(String artifactId, ArtifactType artifactT\n     @Override\n     public ArtifactMetaData createArtifact(String artifactId, ArtifactType artifactType, InputStream data,\n                                            IfExistsType ifExists, Boolean canonical) {\n+        if (artifactId != null && !ArtifactIdValidator.isArtifactIdAllowed(artifactId)) {\n+            throw new InvalidArtifactIdException();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e130e17c3ab3c106ada9a18c5a45d06770b6859c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MzkwNQ==", "bodyText": "not so smart, non-ASCII chars are forbidden because of okhttp which don't allow those chars in http headers", "url": "https://github.com/Apicurio/apicurio-registry/pull/1086#discussion_r545183905", "createdAt": "2020-12-17T15:35:28Z", "author": {"login": "famartinrh"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "diffHunk": "@@ -231,133 +237,136 @@ public ArtifactMetaData createArtifact(String artifactId, ArtifactType artifactT\n     @Override\n     public ArtifactMetaData createArtifact(String artifactId, ArtifactType artifactType, InputStream data,\n                                            IfExistsType ifExists, Boolean canonical) {\n+        if (artifactId != null && !ArtifactIdValidator.isArtifactIdAllowed(artifactId)) {\n+            throw new InvalidArtifactIdException();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA2MTA1Ng=="}, "originalCommit": {"oid": "e130e17c3ab3c106ada9a18c5a45d06770b6859c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTU5NjAxOnYy", "diffSide": "RIGHT", "path": "tests/src/main/java/io/apicurio/tests/utils/subUtils/ArtifactUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjo0NTozM1rOIHz-Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjo0NTozM1rOIHz-Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA2MjQyNg==", "bodyText": "UTF8 here too I guess.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1086#discussion_r545062426", "createdAt": "2020-12-17T12:45:33Z", "author": {"login": "EricWittmann"}, "path": "tests/src/main/java/io/apicurio/tests/utils/subUtils/ArtifactUtils.java", "diffHunk": "@@ -206,4 +214,13 @@ public static Response createSchema(String schemeDefinition, String schemaName,\n     public static Response updateSchemaMetadata(String schemaName, String metadata, int returnCode) {\n         return putRequest(RestConstants.JSON, metadata, \"/ccompat/subjects/\" + schemaName + \"/meta\", returnCode);\n     }\n+\n+    private static String encodeURIComponent(String value) {\n+        try {\n+            //TODO what to use here ASCII or UTF_8 ??\n+            return URLEncoder.encode(value, StandardCharsets.US_ASCII.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e130e17c3ab3c106ada9a18c5a45d06770b6859c"}, "originalPosition": 174}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3439, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}