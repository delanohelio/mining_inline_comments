{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjAyMDkw", "number": 478, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1ODo1OFrOD84iVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowMjowMVrOD84mtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTY3NDQ1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/util/ContentTypeUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1ODo1OFrOGWGDlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1ODo1OFrOGWGDlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgyMTA3OA==", "bodyText": "Maybe extract the content types to a constant and reuse them in the tests would be a good idea.", "url": "https://github.com/Apicurio/apicurio-registry/pull/478#discussion_r425821078", "createdAt": "2020-05-15T13:58:58Z", "author": {"login": "carlesarnal"}, "path": "app/src/main/java/io/apicurio/registry/util/ContentTypeUtil.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.util;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+\n+import io.apicurio.registry.content.ContentHandle;\n+\n+/**\n+ * @author eric.wittmann@gmail.com\n+ */\n+public final class ContentTypeUtil {\n+\n+    private static final ObjectMapper yamlMapper = new ObjectMapper(new YAMLFactory());\n+    private static final ObjectMapper jsonMapper = new ObjectMapper();\n+\n+    /**\n+     * Returns true if the Content-Type of the inbound request is \"application/json\".\n+     * @param request\n+     */\n+    public static final boolean isApplicationJson(HttpServletRequest request) {\n+        String ct = request.getContentType();\n+        if (ct == null) {\n+            return false;\n+        }\n+        return ct.contains(\"application/json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82cd3809a3207df395acca141d7069787cddbd6a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTY4NTY2OnYy", "diffSide": "RIGHT", "path": "ui/packages/services/src/artifacts/artifacts.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowMjowMVrOGWGK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowMjowMVrOGWGK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgyMjk3MQ==", "bodyText": "Same here, I woul suggest to extract the types to constants.", "url": "https://github.com/Apicurio/apicurio-registry/pull/478#discussion_r425822971", "createdAt": "2020-05-15T14:02:01Z", "author": {"login": "carlesarnal"}, "path": "ui/packages/services/src/artifacts/artifacts.service.ts", "diffHunk": "@@ -206,4 +196,45 @@ export class ArtifactsService extends BaseService {\n         const endpoint: string = this.endpoint(\"/artifacts/:artifactId\", { artifactId });\n         return this.httpDelete(endpoint);\n     }\n+\n+    private contentType(type: string, content: string): string {\n+        switch (type) {\n+            case \"PROTOBUF\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82cd3809a3207df395acca141d7069787cddbd6a"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3403, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}