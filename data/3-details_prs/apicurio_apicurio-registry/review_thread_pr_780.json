{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNzg5OTg0", "number": 780, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzozNDoxMlrOEhi0Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToxMDozM1rOEhlNLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjA4ODk1OnYy", "diffSide": "RIGHT", "path": "storage/jpa/src/main/java/io/apicurio/registry/storage/impl/jpa/JPARegistryStorage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzozNDoxMlrOHO6avw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzozNDoxMlrOHO6avw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5OTIzMQ==", "bodyText": "No ANY operand is present on H2 database, that is the reason why tests are fails on CI", "url": "https://github.com/Apicurio/apicurio-registry/pull/780#discussion_r485399231", "createdAt": "2020-09-09T07:34:12Z", "author": {"login": "dmvolod"}, "path": "storage/jpa/src/main/java/io/apicurio/registry/storage/impl/jpa/JPARegistryStorage.java", "diffHunk": "@@ -170,22 +170,41 @@ private Artifact _getArtifact(String artifactId, long version, EnumSet<ArtifactS\n \n     private Artifact _getArtifact(String artifactId, EnumSet<ArtifactState> states) {\n         requireNonNull(artifactId);\n-        List<Artifact> artifacts = entityManager.createQuery(\n-            \"SELECT a FROM Artifact a \" +\n-            \"WHERE a.artifactId = :artifact_id \" +\n-            \"ORDER BY a.version DESC \", Artifact.class)\n-                                                .setParameter(\"artifact_id\", artifactId)\n-                                                .getResultList();\n-\n-        for (Artifact artifact : artifacts) {\n-            ArtifactState state = getState(artifactId, artifact.getVersion());\n-            if (states == null || states.contains(state)) {\n-                ArtifactStateExt.logIfDeprecated(artifactId, state, artifact.getVersion());\n-                return artifact;\n-            }\n+        List<Artifact> artifacts;\n+        if (states != null) {\n+            String statesQuery = states\n+                    .stream()\n+                    .map(s -> s.toString())\n+                    .collect(Collectors.joining(\",\"));\n+            String query = String.format(\n+                     \"SELECT a.* \" +\n+                     \"FROM artifacts a \" +\n+                     \"INNER JOIN \" +\n+                     \"  (SELECT artifact_id, max(version) AS MaxVersion \" +\n+                     \"  FROM meta \" +\n+                     \"  WHERE artifact_id = '%s' AND key = '%s' AND value = ANY('{%s}'::text[]) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "145426a07e5c2d7eb7ab91e4f05ddfec0fb4f76a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjQ4MDQ0OnYy", "diffSide": "RIGHT", "path": "storage/jpa/src/main/java/io/apicurio/registry/storage/impl/jpa/JPARegistryStorage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToxMDozM1rOHO-J-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDo0NToxMFrOHPBhkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ2MDQ3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                 \"  WHERE artifact_id = '%s' AND key = '%s' AND value = ANY('{%s}'::text[]) \" +\n          \n          \n            \n                                 \"  WHERE artifact_id = '%s' AND key = '%s' AND value IN ('{%s}') \" +", "url": "https://github.com/Apicurio/apicurio-registry/pull/780#discussion_r485460474", "createdAt": "2020-09-09T09:10:33Z", "author": {"login": "dmvolod"}, "path": "storage/jpa/src/main/java/io/apicurio/registry/storage/impl/jpa/JPARegistryStorage.java", "diffHunk": "@@ -170,22 +170,41 @@ private Artifact _getArtifact(String artifactId, long version, EnumSet<ArtifactS\n \n     private Artifact _getArtifact(String artifactId, EnumSet<ArtifactState> states) {\n         requireNonNull(artifactId);\n-        List<Artifact> artifacts = entityManager.createQuery(\n-            \"SELECT a FROM Artifact a \" +\n-            \"WHERE a.artifactId = :artifact_id \" +\n-            \"ORDER BY a.version DESC \", Artifact.class)\n-                                                .setParameter(\"artifact_id\", artifactId)\n-                                                .getResultList();\n-\n-        for (Artifact artifact : artifacts) {\n-            ArtifactState state = getState(artifactId, artifact.getVersion());\n-            if (states == null || states.contains(state)) {\n-                ArtifactStateExt.logIfDeprecated(artifactId, state, artifact.getVersion());\n-                return artifact;\n-            }\n+        List<Artifact> artifacts;\n+        if (states != null) {\n+            String statesQuery = states\n+                    .stream()\n+                    .map(s -> s.toString())\n+                    .collect(Collectors.joining(\",\"));\n+            String query = String.format(\n+                     \"SELECT a.* \" +\n+                     \"FROM artifacts a \" +\n+                     \"INNER JOIN \" +\n+                     \"  (SELECT artifact_id, max(version) AS MaxVersion \" +\n+                     \"  FROM meta \" +\n+                     \"  WHERE artifact_id = '%s' AND key = '%s' AND value = ANY('{%s}'::text[]) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "145426a07e5c2d7eb7ab91e4f05ddfec0fb4f76a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUxNTY2Nw==", "bodyText": "thanks for the suggestion. I need to modify it a bit", "url": "https://github.com/Apicurio/apicurio-registry/pull/780#discussion_r485515667", "createdAt": "2020-09-09T10:45:10Z", "author": {"login": "dang-gyg"}, "path": "storage/jpa/src/main/java/io/apicurio/registry/storage/impl/jpa/JPARegistryStorage.java", "diffHunk": "@@ -170,22 +170,41 @@ private Artifact _getArtifact(String artifactId, long version, EnumSet<ArtifactS\n \n     private Artifact _getArtifact(String artifactId, EnumSet<ArtifactState> states) {\n         requireNonNull(artifactId);\n-        List<Artifact> artifacts = entityManager.createQuery(\n-            \"SELECT a FROM Artifact a \" +\n-            \"WHERE a.artifactId = :artifact_id \" +\n-            \"ORDER BY a.version DESC \", Artifact.class)\n-                                                .setParameter(\"artifact_id\", artifactId)\n-                                                .getResultList();\n-\n-        for (Artifact artifact : artifacts) {\n-            ArtifactState state = getState(artifactId, artifact.getVersion());\n-            if (states == null || states.contains(state)) {\n-                ArtifactStateExt.logIfDeprecated(artifactId, state, artifact.getVersion());\n-                return artifact;\n-            }\n+        List<Artifact> artifacts;\n+        if (states != null) {\n+            String statesQuery = states\n+                    .stream()\n+                    .map(s -> s.toString())\n+                    .collect(Collectors.joining(\",\"));\n+            String query = String.format(\n+                     \"SELECT a.* \" +\n+                     \"FROM artifacts a \" +\n+                     \"INNER JOIN \" +\n+                     \"  (SELECT artifact_id, max(version) AS MaxVersion \" +\n+                     \"  FROM meta \" +\n+                     \"  WHERE artifact_id = '%s' AND key = '%s' AND value = ANY('{%s}'::text[]) \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ2MDQ3NA=="}, "originalCommit": {"oid": "145426a07e5c2d7eb7ab91e4f05ddfec0fb4f76a"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3345, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}