{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNjUxOTgz", "number": 1103, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMToyOTo0NlrOFIH--w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMToyOTo0NlrOFIH--w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDYzNzM5OnYy", "diffSide": "RIGHT", "path": "storage/kafkasql/src/main/java/io/apicurio/registry/storage/impl/kafkasql/sql/KafkaSqlSink.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMToyOTo0NlrOIJ3-6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDoxOToxN1rOIJ8uPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyNTMyMA==", "bodyText": "what about logging some info from the MessageKey?", "url": "https://github.com/Apicurio/apicurio-registry/pull/1103#discussion_r547225320", "createdAt": "2020-12-22T11:29:46Z", "author": {"login": "famartinrh"}, "path": "storage/kafkasql/src/main/java/io/apicurio/registry/storage/impl/kafkasql/sql/KafkaSqlSink.java", "diffHunk": "@@ -58,6 +58,13 @@\n      * @param record\n      */\n     public void processMessage(ConsumerRecord<MessageKey, MessageValue> record) {\n+        // If the value is null, then this is a tombstone (or unrecognized) message and should not \n+        // be processed.\n+        if (record.value() == null) {\n+            log.info(\"Discarded a tombstone message with key: {}\", record.key());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8189e0f1b616b295c4ac49a9a418b7f5f8561e4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI2NDg1NA==", "bodyText": "Oh right, I intended to implement toString() on the message key classes.  Will do that.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1103#discussion_r547264854", "createdAt": "2020-12-22T13:01:04Z", "author": {"login": "EricWittmann"}, "path": "storage/kafkasql/src/main/java/io/apicurio/registry/storage/impl/kafkasql/sql/KafkaSqlSink.java", "diffHunk": "@@ -58,6 +58,13 @@\n      * @param record\n      */\n     public void processMessage(ConsumerRecord<MessageKey, MessageValue> record) {\n+        // If the value is null, then this is a tombstone (or unrecognized) message and should not \n+        // be processed.\n+        if (record.value() == null) {\n+            log.info(\"Discarded a tombstone message with key: {}\", record.key());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyNTMyMA=="}, "originalCommit": {"oid": "b8189e0f1b616b295c4ac49a9a418b7f5f8561e4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMwMjk3Mw==", "bodyText": "Updated to give each key a unique toString().", "url": "https://github.com/Apicurio/apicurio-registry/pull/1103#discussion_r547302973", "createdAt": "2020-12-22T14:19:17Z", "author": {"login": "EricWittmann"}, "path": "storage/kafkasql/src/main/java/io/apicurio/registry/storage/impl/kafkasql/sql/KafkaSqlSink.java", "diffHunk": "@@ -58,6 +58,13 @@\n      * @param record\n      */\n     public void processMessage(ConsumerRecord<MessageKey, MessageValue> record) {\n+        // If the value is null, then this is a tombstone (or unrecognized) message and should not \n+        // be processed.\n+        if (record.value() == null) {\n+            log.info(\"Discarded a tombstone message with key: {}\", record.key());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyNTMyMA=="}, "originalCommit": {"oid": "b8189e0f1b616b295c4ac49a9a418b7f5f8561e4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3445, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}