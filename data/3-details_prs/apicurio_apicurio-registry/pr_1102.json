{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNjMwNDI1", "number": 1102, "title": "Auth tests", "bodyText": "Related to #910\nAdds QuarkusTests that use a keycloak container as the auth server.\nTests are not working for now,  the keycloak container is populated with test-realm.json that is supposed to have three service-accounts created each one with one of the three roles we currently define assigned (sr-admin, sr-developer and sr-readonly)\nI don't know if tests are failing because of realm used to configure keycloak is not correct or if there is other reasons...\nThis is just some basic tests and only focus on the registry client part , UI tests will come in the future but I think it's better to start with this for now until the whole auth story around the registry is more complete.", "createdAt": "2020-12-21T17:37:57Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102", "merged": true, "mergeCommit": {"oid": "a37dbfa32b94e8574746de87260b6efa55c578e4"}, "closed": true, "closedAt": "2021-01-07T14:00:21Z", "author": {"login": "famartinrh"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdonexhgFqTU1Njk1NDQ3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdt0L8OAH2gAyNTQzNjMwNDI1OjY2NjliY2YyOGUzOGYyMTk0ZTBkNjZlMWQzMDQzMmM2NjNlODQyNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTU0NDcx", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-556954471", "createdAt": "2020-12-22T09:54:07Z", "commit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1NDowN1rOIJ1Kww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1NDowN1rOIJ1Kww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3OTIwMw==", "bodyText": "Here we need to also enable auth by adding the appropriate property.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r547179203", "createdAt": "2020-12-22T09:54:07Z", "author": {"login": "carlesarnal"}, "path": "app/src/test/java/io/apicurio/registry/auth/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.apicurio.registry.auth;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import dasniko.testcontainers.keycloak.KeycloakContainer;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {\n+\n+    private static final Logger log = LoggerFactory.getLogger(KeycloakTestResource.class);\n+\n+    private KeycloakContainer container;\n+\n+    @Override\n+    public Map<String, String> start() {\n+        log.info(\"Starting Keycloak Test Container\");\n+\n+        container = new KeycloakContainer()\n+                .withRealmImportFile(\"test-realm.json\");\n+        container.start();\n+\n+        Map<String, String> props = new HashMap<>();\n+        props.put(\"registry.keycloak.url\", container.getAuthServerUrl());\n+        props.put(\"registry.keycloak.realm\", \"registry\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTU0OTA3", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-556954907", "createdAt": "2020-12-22T09:54:47Z", "commit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1NDo0N1rOIJ1MHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1NDo0N1rOIJ1MHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3OTU0OA==", "bodyText": "Nice changes.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r547179548", "createdAt": "2020-12-22T09:54:47Z", "author": {"login": "carlesarnal"}, "path": "app/src/main/resources/application.properties", "diffHunk": "@@ -81,8 +81,10 @@ mp.openapi.servers=/api\n \n #Auth - disabled by default", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDEyODU5", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-557012859", "createdAt": "2020-12-22T11:31:01Z", "commit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMTozMTowMVrOIJ4A4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMTozMTowMVrOIJ4A4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyNTgyNw==", "bodyText": "@carlesarnal auth is being enabled here", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r547225827", "createdAt": "2020-12-22T11:31:01Z", "author": {"login": "famartinrh"}, "path": "app/src/test/java/io/apicurio/registry/auth/AuthTestProfile.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.apicurio.registry.auth;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import io.quarkus.test.junit.QuarkusTestProfile;\n+\n+public class AuthTestProfile implements QuarkusTestProfile {\n+\n+    @Override\n+    public Map<String, String> getConfigOverrides() {\n+        return Collections.singletonMap(\"registry.auth.enabled\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e286a9f8ce18f15354358aef65998766cc0fa225", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/e286a9f8ce18f15354358aef65998766cc0fa225", "committedDate": "2020-12-21T17:32:50Z", "message": "auth tests"}, "afterCommit": {"oid": "db20a446940b54335c2c1e3fc79bf03313d03d61", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/db20a446940b54335c2c1e3fc79bf03313d03d61", "committedDate": "2020-12-22T17:20:45Z", "message": "fix tests, implement auth exceptions and fix properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzE4MDE3", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-557718017", "createdAt": "2020-12-23T08:35:28Z", "commit": {"oid": "db20a446940b54335c2c1e3fc79bf03313d03d61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODozNToyOFrOIKbgAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODozNToyOFrOIKbgAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgwNzIzNQ==", "bodyText": "Let's try to avoid adding jax-rs classes to the rest-client.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r547807235", "createdAt": "2020-12-23T08:35:28Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/request/AuthInterceptor.java", "diffHunk": "@@ -19,8 +19,12 @@\n import java.io.IOException;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.ws.rs.NotAuthorizedException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db20a446940b54335c2c1e3fc79bf03313d03d61"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzE5NzIy", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-557719722", "createdAt": "2020-12-23T08:39:07Z", "commit": {"oid": "db20a446940b54335c2c1e3fc79bf03313d03d61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODozOTowN1rOIKbr6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODozOTowN1rOIKbr6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgxMDI4MA==", "bodyText": "I don't see how this can throw a NotAuthorizedException from jax-rs.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r547810280", "createdAt": "2020-12-23T08:39:07Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/request/AuthInterceptor.java", "diffHunk": "@@ -39,7 +43,19 @@ public AuthInterceptor(Auth auth) {\n     public Response intercept(Chain chain) throws IOException {\n         final Request request = chain.request();\n         Map<String, String> headers = new HashMap<>();\n-        auth.apply(headers);\n+        try {\n+            auth.apply(headers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db20a446940b54335c2c1e3fc79bf03313d03d61"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1088b1030eaddcdc72a621f47956ce85c0b5b145", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/1088b1030eaddcdc72a621f47956ce85c0b5b145", "committedDate": "2020-12-23T14:42:33Z", "message": "auth tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b0bd8dba6ed2369d01b3c1bc9bd34a6ac8bc2fa", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0b0bd8dba6ed2369d01b3c1bc9bd34a6ac8bc2fa", "committedDate": "2020-12-23T14:45:21Z", "message": "fix tests, implement auth exceptions and fix properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb3aa8cc20c989e29ce417b234d8925fa92f5bd1", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fb3aa8cc20c989e29ce417b234d8925fa92f5bd1", "committedDate": "2020-12-23T14:45:26Z", "message": "fix properties handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de5bd829300877e2e12140b8a50e83e37a603fd7", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/de5bd829300877e2e12140b8a50e83e37a603fd7", "committedDate": "2020-12-23T15:48:42Z", "message": "fix tests again"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dacdba4ce6e57e679983baa3079caca46d731a22", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/dacdba4ce6e57e679983baa3079caca46d731a22", "committedDate": "2020-12-23T09:26:11Z", "message": "fix properties handling"}, "afterCommit": {"oid": "de5bd829300877e2e12140b8a50e83e37a603fd7", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/de5bd829300877e2e12140b8a50e83e37a603fd7", "committedDate": "2020-12-23T15:48:42Z", "message": "fix tests again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e911f48586b1228c307238f7b1107f3885c55f2", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/8e911f48586b1228c307238f7b1107f3885c55f2", "committedDate": "2020-12-23T16:26:25Z", "message": "fix tests properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MDc0MzY3", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-559074367", "createdAt": "2020-12-28T09:57:20Z", "commit": {"oid": "8e911f48586b1228c307238f7b1107f3885c55f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwOTo1NzoyMFrOIL10Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwOTo1NzoyMFrOIL10Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4Njk4Ng==", "bodyText": "Since we're not overring properties in the profile you can remove it and use the @QuarkusTestResource annotation instead.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r549286986", "createdAt": "2020-12-28T09:57:20Z", "author": {"login": "carlesarnal"}, "path": "app/src/test/java/io/apicurio/registry/auth/SimpleAuthTest.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.apicurio.registry.auth;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.io.ByteArrayInputStream;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.apicurio.registry.AbstractResourceTestBase;\n+import io.apicurio.registry.client.RegistryRestClient;\n+import io.apicurio.registry.client.RegistryRestClientFactory;\n+import io.apicurio.registry.client.exception.ArtifactNotFoundException;\n+import io.apicurio.registry.client.exception.ForbiddenException;\n+import io.apicurio.registry.client.exception.NotAuthorizedException;\n+import io.apicurio.registry.rest.beans.ArtifactMetaData;\n+import io.apicurio.registry.rest.beans.Rule;\n+import io.apicurio.registry.rules.validity.ValidityLevel;\n+import io.apicurio.registry.types.ArtifactType;\n+import io.apicurio.registry.types.RuleType;\n+import io.apicurio.registry.utils.tests.TestUtils;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.TestProfile;\n+\n+@QuarkusTest\n+@TestProfile(AuthTestProfile.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e911f48586b1228c307238f7b1107f3885c55f2"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MDc2Nzcw", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#pullrequestreview-559076770", "createdAt": "2020-12-28T10:04:19Z", "commit": {"oid": "8e911f48586b1228c307238f7b1107f3885c55f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDowNDoxOVrOIL18YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDowNDoxOVrOIL18YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4OTA1Ng==", "bodyText": "This will likely be the case but maybe is a good idea to also check the error code since Keycloak can throw other exceptions, not just the 401.", "url": "https://github.com/Apicurio/apicurio-registry/pull/1102#discussion_r549289056", "createdAt": "2020-12-28T10:04:19Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/request/ResultCallback.java", "diffHunk": "@@ -71,7 +92,18 @@ public void onResponse(Call<T> call, retrofit2.Response<T> response) {\n \n     @Override\n     public void onFailure(Call<T> call, Throwable t) {\n-        result.completeExceptionally(t);\n+        Throwable rootCause = extractRootCause(t);\n+        if (rootCause instanceof HttpResponseException) {\n+            //authorization error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e911f48586b1228c307238f7b1107f3885c55f2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32e4310e3af1586a3c08bf9b59e9333eb64779ca", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/32e4310e3af1586a3c08bf9b59e9333eb64779ca", "committedDate": "2021-01-04T09:56:27Z", "message": "fix test deps and improve not authorized error handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c225b37f35be8d2ba15d99e12a21d15a15439b", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/49c225b37f35be8d2ba15d99e12a21d15a15439b", "committedDate": "2021-01-05T15:33:45Z", "message": "fix sql deps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1624f9c5e8e22006b4edec6d22e050089318a9", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/cb1624f9c5e8e22006b4edec6d22e050089318a9", "committedDate": "2021-01-05T16:12:24Z", "message": "improve tests, artifactId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6669bcf28e38f2194e0d66e1d30432c663e8424a", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/6669bcf28e38f2194e0d66e1d30432c663e8424a", "committedDate": "2021-01-07T13:31:56Z", "message": "fix streams unstable tests (#1125)\n\n* fix streams unstable tests\r\n\r\n* fix RegistryConverterIT closing RegistryRestClient\r\n\r\n* fix waitFor leaking exception"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4314, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}