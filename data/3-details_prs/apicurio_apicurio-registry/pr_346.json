{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDIwNjM5", "number": 346, "title": "Extract new test utils - to be used in app and IT tests.", "bodyText": "", "createdAt": "2020-03-23T14:29:09Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/346", "merged": true, "mergeCommit": {"oid": "ff0434c23ed409a08088d5c5db7d6c5d40e66de8"}, "closed": true, "closedAt": "2020-03-25T11:59:08Z", "author": {"login": "alesj"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQfcZugFqTM3OTQ5OTg5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQi58cAH2gAyMzkyNDIwNjM5OmIxNmExMmYxZjNlYzIyZDQxYmMwOTA1ZTI1NjhlNGM0N2NkYzgwYTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDk5ODkz", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#pullrequestreview-379499893", "createdAt": "2020-03-23T14:46:57Z", "commit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0Njo1N1rOF6IygA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0Njo1N1rOF6IygA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNTcyOA==", "bodyText": "?", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#discussion_r396505728", "createdAt": "2020-03-23T14:46:57Z", "author": {"login": "EricWittmann"}, "path": "tests/src/main/java/io/apicurio/tests/serdes/KafkaClients.java", "diffHunk": "@@ -222,6 +222,8 @@\n         try {\n             resultPromise.get(30, TimeUnit.SECONDS);\n         } catch (Exception e) {\n+            LOGGER.warn(\"qazx\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTAxOTI4", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#pullrequestreview-379501928", "createdAt": "2020-03-23T14:49:00Z", "commit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0OTowMFrOF6I44A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0OTowMFrOF6I44A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNzM2MA==", "bodyText": "We need to do something about this - it breaks every time the version # changes.  I wonder if the default code can be updated to actually look for a pattern:  ../app/target/apicurio-registry-app-$VERSION-runner.jar\nNot something that is relevant to this PR, just an observation. :)  I'll open a ticket.", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#discussion_r396507360", "createdAt": "2020-03-23T14:49:00Z", "author": {"login": "EricWittmann"}, "path": "tests/src/main/java/io/apicurio/tests/RegistryFacade.java", "diffHunk": "@@ -19,38 +19,26 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.IOException;\n-import java.net.InetSocketAddress;\n-import java.net.Socket;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.CompletionException;\n-import java.util.concurrent.Future;\n \n public class RegistryFacade {\n     static final Logger LOGGER = LoggerFactory.getLogger(RegistryFacade.class);\n \n     public static final String DEFAULT_REGISTRY_JAR_PATH = \"../app/target/apicurio-registry-app-1.1.2-SNAPSHOT-runner.jar\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTA4NDU3", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#pullrequestreview-379508457", "createdAt": "2020-03-23T14:55:18Z", "commit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo1NToxOVrOF6JMhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo1NToxOVrOF6JMhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxMjM5MA==", "bodyText": "This change loses the test method name from the topic name.  That seems like potentially useful debugging information lost - do we not care?", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#discussion_r396512390", "createdAt": "2020-03-23T14:55:19Z", "author": {"login": "EricWittmann"}, "path": "tests/src/test/java/io/apicurio/tests/serdes/apicurio/BasicApicurioSerDesIT.java", "diffHunk": "@@ -44,104 +44,104 @@\n @Tag(CLUSTER)\n public class BasicApicurioSerDesIT extends BaseIT {\n \n-    @Test\n-    void testAvroApicurioSerDes(TestInfo testInfo) throws InterruptedException, ExecutionException, TimeoutException {\n-        String topicName = \"topic-\" + testInfo.getTestMethod().get().getName();\n+    @RegistryServiceTest(localOnly = false)\n+    void testAvroApicurioSerDes(RegistryService apicurioService) throws InterruptedException, ExecutionException, TimeoutException {\n+        String topicName = TestUtils.generateTopic();\n         String subjectName = topicName + \"-value\";\n         String schemaKey = \"key1\";\n         kafkaCluster.createTopic(topicName, 1, 1);\n \n         Schema schema = new Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"myrecordapicurio1\\\",\\\"fields\\\":[{\\\"name\\\":\\\"\" + schemaKey + \"\\\",\\\"type\\\":\\\"string\\\"}]}\");\n-        createArtifactViaApicurioClient(schema, subjectName);\n+        createArtifactViaApicurioClient(apicurioService, schema, subjectName);\n \n         KafkaClients.produceAvroApicurioMessagesTopicStrategy(topicName, subjectName, schema, 10, schemaKey).get(5, TimeUnit.SECONDS);\n         KafkaClients.consumeAvroApicurioMessages(topicName, 10).get(5, TimeUnit.SECONDS);\n     }\n \n-    @Test\n-    void testAvroApicurioSerDesFail(TestInfo testInfo) throws TimeoutException {\n-        String topicName = \"topic-\" + testInfo.getTestMethod().get().getName();\n-        String subjectName = \"myrecordapicurio2\";\n+    @RegistryServiceTest(localOnly = false)\n+    void testAvroApicurioSerDesFail(RegistryService apicurioService) throws TimeoutException {\n+        String topicName = TestUtils.generateTopic();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTEwNTM3", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#pullrequestreview-379510537", "createdAt": "2020-03-23T14:57:22Z", "commit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo1NzoyMlrOF6JS0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo1NzoyMlrOF6JS0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNDAwMA==", "bodyText": "Here too - we're going to be losing potentially important context info.  Perhaps a variant of these generate methods that can take a string to use as part of the name?", "url": "https://github.com/Apicurio/apicurio-registry/pull/346#discussion_r396514000", "createdAt": "2020-03-23T14:57:22Z", "author": {"login": "EricWittmann"}, "path": "tests/src/test/java/io/apicurio/tests/smokeTests/apicurio/AllArtifactTypesIT.java", "diffHunk": "@@ -15,116 +15,116 @@\n  */\n package io.apicurio.tests.smokeTests.apicurio;\n \n-import static io.apicurio.tests.Constants.SMOKE;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.fail;\n-\n-import javax.ws.rs.WebApplicationException;\n-\n-import org.junit.jupiter.api.Tag;\n-import org.junit.jupiter.api.Test;\n-\n+import io.apicurio.registry.client.RegistryService;\n import io.apicurio.registry.rest.beans.ArtifactMetaData;\n import io.apicurio.registry.rest.beans.Rule;\n import io.apicurio.registry.types.ArtifactType;\n import io.apicurio.registry.types.RuleType;\n import io.apicurio.registry.utils.IoUtil;\n+import io.apicurio.registry.utils.tests.RegistryServiceTest;\n+import io.apicurio.registry.utils.tests.TestUtils;\n import io.apicurio.tests.BaseIT;\n import io.apicurio.tests.utils.subUtils.ArtifactUtils;\n+import org.junit.jupiter.api.Tag;\n+\n+import static io.apicurio.tests.Constants.SMOKE;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n \n @Tag(SMOKE)\n class AllArtifactTypesIT extends BaseIT {\n     \n-    void doTest(String v1Resource, String v2Resource, ArtifactType atype) throws Exception {\n-        String artifactId = getClass().getSimpleName() + \"-\" + atype.name();\n+    void doTest(RegistryService apicurioService, String v1Resource, String v2Resource, ArtifactType atype) {\n+        String artifactId = TestUtils.generateArtifactId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c49c343a625c56539353c3a4f719076017ab06", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/11c49c343a625c56539353c3a4f719076017ab06", "committedDate": "2020-03-23T15:42:09Z", "message": "Extract new test utils - to be used in app and IT tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8908175a7b39226de628fb6f7a3673cf704795ec", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/8908175a7b39226de628fb6f7a3673cf704795ec", "committedDate": "2020-03-23T14:28:28Z", "message": "Extract new test utils - to be used in app and IT tests."}, "afterCommit": {"oid": "11c49c343a625c56539353c3a4f719076017ab06", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/11c49c343a625c56539353c3a4f719076017ab06", "committedDate": "2020-03-23T15:42:09Z", "message": "Extract new test utils - to be used in app and IT tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b16a12f1f3ec22d41bc0905e2568e4c47cdc80a4", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/b16a12f1f3ec22d41bc0905e2568e4c47cdc80a4", "committedDate": "2020-03-23T18:48:56Z", "message": "Grab version from \"project.version\" Maven property, #347"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3443, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}