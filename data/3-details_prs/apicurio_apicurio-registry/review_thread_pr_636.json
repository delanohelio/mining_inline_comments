{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODgzNTQ4", "number": 636, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo0MjowMlrOEGaE6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo0MjowMlrOEGaE6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTU0MTU0OnYy", "diffSide": "RIGHT", "path": "app/src/test/java/io/apicurio/registry/SerdeMixTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo0MjowMlrOGlL0bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDoxNzo1OVrOGlxfyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NDE0MA==", "bodyText": "What does waiting for the global id accomplish that waiting for the artifact doesn't?", "url": "https://github.com/Apicurio/apicurio-registry/pull/636#discussion_r441644140", "createdAt": "2020-06-17T15:42:02Z", "author": {"login": "EricWittmann"}, "path": "app/src/test/java/io/apicurio/registry/SerdeMixTest.java", "diffHunk": "@@ -57,9 +57,10 @@ public void testVersions(Supplier<RegistryService> supplier) throws Exception {\n         Schema schema = new Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"myrecord5\\\",\\\"fields\\\":[{\\\"name\\\":\\\"bar\\\",\\\"type\\\":\\\"string\\\"}]}\");\n         int id = confClient.register(subject, schema);\n         confClient.reset();\n-        \n+\n         this.waitForArtifact(subject);\n \n+        this.waitForGlobalId(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f01186b4e7f4be9b33691ebfec86f4bfc5c80b7b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2MjQxNg==", "bodyText": "for some reason the confClient.getById(id); fails if you don't wait", "url": "https://github.com/Apicurio/apicurio-registry/pull/636#discussion_r441662416", "createdAt": "2020-06-17T16:09:59Z", "author": {"login": "famartinrh"}, "path": "app/src/test/java/io/apicurio/registry/SerdeMixTest.java", "diffHunk": "@@ -57,9 +57,10 @@ public void testVersions(Supplier<RegistryService> supplier) throws Exception {\n         Schema schema = new Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"myrecord5\\\",\\\"fields\\\":[{\\\"name\\\":\\\"bar\\\",\\\"type\\\":\\\"string\\\"}]}\");\n         int id = confClient.register(subject, schema);\n         confClient.reset();\n-        \n+\n         this.waitForArtifact(subject);\n \n+        this.waitForGlobalId(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NDE0MA=="}, "originalCommit": {"oid": "f01186b4e7f4be9b33691ebfec86f4bfc5c80b7b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMjU1OQ==", "bodyText": "@carlesarnal Can you verify this locally?  Also if you could try it with line 61 removed as well.  I don't see why we would need both of these waits.", "url": "https://github.com/Apicurio/apicurio-registry/pull/636#discussion_r441732559", "createdAt": "2020-06-17T18:06:36Z", "author": {"login": "EricWittmann"}, "path": "app/src/test/java/io/apicurio/registry/SerdeMixTest.java", "diffHunk": "@@ -57,9 +57,10 @@ public void testVersions(Supplier<RegistryService> supplier) throws Exception {\n         Schema schema = new Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"myrecord5\\\",\\\"fields\\\":[{\\\"name\\\":\\\"bar\\\",\\\"type\\\":\\\"string\\\"}]}\");\n         int id = confClient.register(subject, schema);\n         confClient.reset();\n-        \n+\n         this.waitForArtifact(subject);\n \n+        this.waitForGlobalId(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NDE0MA=="}, "originalCommit": {"oid": "f01186b4e7f4be9b33691ebfec86f4bfc5c80b7b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxOTQ5Nw==", "bodyText": "Hi @famartinrh , @EricWittmann, makes sense that we need to add here the waitForGlobalId since the id argument of the getById operation is a global id. I'm not sure about the waitForArtifact but, I guess that we need it since we are trying to perform an updateArtifact operation that otherwise might fail. That said, after removing the line 61 and a couple of executions the test worked fine.", "url": "https://github.com/Apicurio/apicurio-registry/pull/636#discussion_r442019497", "createdAt": "2020-06-18T07:22:31Z", "author": {"login": "carlesarnal"}, "path": "app/src/test/java/io/apicurio/registry/SerdeMixTest.java", "diffHunk": "@@ -57,9 +57,10 @@ public void testVersions(Supplier<RegistryService> supplier) throws Exception {\n         Schema schema = new Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"myrecord5\\\",\\\"fields\\\":[{\\\"name\\\":\\\"bar\\\",\\\"type\\\":\\\"string\\\"}]}\");\n         int id = confClient.register(subject, schema);\n         confClient.reset();\n-        \n+\n         this.waitForArtifact(subject);\n \n+        this.waitForGlobalId(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NDE0MA=="}, "originalCommit": {"oid": "f01186b4e7f4be9b33691ebfec86f4bfc5c80b7b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI2MTQ0OQ==", "bodyText": "Thanks @carlesarnal", "url": "https://github.com/Apicurio/apicurio-registry/pull/636#discussion_r442261449", "createdAt": "2020-06-18T14:17:59Z", "author": {"login": "EricWittmann"}, "path": "app/src/test/java/io/apicurio/registry/SerdeMixTest.java", "diffHunk": "@@ -57,9 +57,10 @@ public void testVersions(Supplier<RegistryService> supplier) throws Exception {\n         Schema schema = new Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"myrecord5\\\",\\\"fields\\\":[{\\\"name\\\":\\\"bar\\\",\\\"type\\\":\\\"string\\\"}]}\");\n         int id = confClient.register(subject, schema);\n         confClient.reset();\n-        \n+\n         this.waitForArtifact(subject);\n \n+        this.waitForGlobalId(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NDE0MA=="}, "originalCommit": {"oid": "f01186b4e7f4be9b33691ebfec86f4bfc5c80b7b"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3314, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}