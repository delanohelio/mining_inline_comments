{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTczOTg5", "number": 310, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDoyNToyNFrODlXgAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDoyNToyNFrODlXgAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTA4OTMxOnYy", "diffSide": "RIGHT", "path": "storage/streams/src/main/java/io/apicurio/registry/streams/diservice/DistributedService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDoyNToyNFrOFyOAqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjoxNTowOFrOFyRSmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwMjY2Ng==", "bodyText": "null really indicates that there is no matching metadata for the given store and key. Maybe that can be a transient condition (to be honest I don't know, but I'm guessing the store might eventually have that key), or it could indicate a non-transient programming error in your streams application (i.e. you're asking for the wrong key, or the wrong store and it will never become non-null). In any case I think it would be useful to have a distinct exception message, since the NOT_AVAILABLE case is definitely expected to be transient.", "url": "https://github.com/Apicurio/apicurio-registry/pull/310#discussion_r388202666", "createdAt": "2020-03-05T10:25:24Z", "author": {"login": "tombentley"}, "path": "storage/streams/src/main/java/io/apicurio/registry/streams/diservice/DistributedService.java", "diffHunk": "@@ -104,7 +104,7 @@ public void close() {\n \n     protected final S serviceForKey(K key) {\n         StreamsMetadata smeta = streams.metadataForKey(storeName, key, keySerde.serializer());\n-        if (smeta == StreamsMetadata.NOT_AVAILABLE) {\n+        if (smeta == null || smeta == StreamsMetadata.NOT_AVAILABLE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cf0d0805d191994f260c5795bcef144873ab941"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI1MzgwMQ==", "bodyText": "OK, will fix this ...", "url": "https://github.com/Apicurio/apicurio-registry/pull/310#discussion_r388253801", "createdAt": "2020-03-05T12:09:18Z", "author": {"login": "alesj"}, "path": "storage/streams/src/main/java/io/apicurio/registry/streams/diservice/DistributedService.java", "diffHunk": "@@ -104,7 +104,7 @@ public void close() {\n \n     protected final S serviceForKey(K key) {\n         StreamsMetadata smeta = streams.metadataForKey(storeName, key, keySerde.serializer());\n-        if (smeta == StreamsMetadata.NOT_AVAILABLE) {\n+        if (smeta == null || smeta == StreamsMetadata.NOT_AVAILABLE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwMjY2Ng=="}, "originalCommit": {"oid": "9cf0d0805d191994f260c5795bcef144873ab941"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI1NjQwOQ==", "bodyText": "FWIW I opened https://issues.apache.org/jira/browse/KAFKA-9663", "url": "https://github.com/Apicurio/apicurio-registry/pull/310#discussion_r388256409", "createdAt": "2020-03-05T12:15:08Z", "author": {"login": "tombentley"}, "path": "storage/streams/src/main/java/io/apicurio/registry/streams/diservice/DistributedService.java", "diffHunk": "@@ -104,7 +104,7 @@ public void close() {\n \n     protected final S serviceForKey(K key) {\n         StreamsMetadata smeta = streams.metadataForKey(storeName, key, keySerde.serializer());\n-        if (smeta == StreamsMetadata.NOT_AVAILABLE) {\n+        if (smeta == null || smeta == StreamsMetadata.NOT_AVAILABLE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwMjY2Ng=="}, "originalCommit": {"oid": "9cf0d0805d191994f260c5795bcef144873ab941"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3432, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}