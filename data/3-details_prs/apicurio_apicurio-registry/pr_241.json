{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTMxMzEz", "number": 241, "title": "Enable metrics. #47", "bodyText": "Collect 3 types of basic metrics in the REST & JPA layers. For REST, there is a combined metric collected by an interceptor. Added docker compose files for testing with Prometheus and Grafana.", "createdAt": "2020-01-27T14:46:30Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/241", "merged": true, "mergeCommit": {"oid": "936bbead945e61445b419d78b8cba2130884cd85"}, "closed": true, "closedAt": "2020-01-31T17:29:32Z", "author": {"login": "jsenko"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-d1rtgH2gAyMzY3NTMxMzEzOmNkY2FiMzQ2MjEyN2YxYWM3N2U5YTAxYTNjMGVkMTIwOTE3YmFlOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_IqhxgFqTM1MDI1MzE3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cdcab3462127f1ac77e9a01a3c0ed120917bae8d", "author": {"user": {"login": "jsenko", "name": "Jakub Senko"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/cdcab3462127f1ac77e9a01a3c0ed120917bae8d", "committedDate": "2020-01-27T14:44:07Z", "message": "Enable metrics. #47"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzgxMzEy", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#pullrequestreview-349381312", "createdAt": "2020-01-28T13:43:24Z", "commit": {"oid": "cdcab3462127f1ac77e9a01a3c0ed120917bae8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzo0MzoyNFrOFilYbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzo0MzoyNFrOFilYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwODM2Ng==", "bodyText": "Surprised to see this here.", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#discussion_r371808366", "createdAt": "2020-01-28T13:43:24Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsInterceptor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package io.apicurio.registry.metrics;\n+\n+import org.eclipse.microprofile.metrics.ConcurrentGauge;\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.Interceptor;\n+import javax.interceptor.InvocationContext;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.*;\n+import static org.eclipse.microprofile.metrics.MetricUnits.MILLISECONDS;\n+\n+/**\n+ * Interceptor that tracks metrics across all REST resources.\n+ *\n+ * @author Jakub Senko <jsenko@redhat.com>\n+ */\n+@Interceptor\n+@RestMetricsApply", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdcab3462127f1ac77e9a01a3c0ed120917bae8d"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "936bbead945e61445b419d78b8cba2130884cd85", "author": {"user": {"login": "jsenko", "name": "Jakub Senko"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/936bbead945e61445b419d78b8cba2130884cd85", "committedDate": "2020-01-28T15:49:42Z", "message": "Workaround for a bug in Quarkus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTY0MjUw", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#pullrequestreview-350164250", "createdAt": "2020-01-29T14:50:45Z", "commit": {"oid": "cdcab3462127f1ac77e9a01a3c0ed120917bae8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNDo1MDo0NVrOFjLIbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNDo1MDo0NVrOFjLIbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNjg2Mg==", "bodyText": "Note: Remove ElementType.METHOD", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#discussion_r372426862", "createdAt": "2020-01-29T14:50:45Z", "author": {"login": "jsenko"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsApply.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package io.apicurio.registry.metrics;\n+\n+import javax.interceptor.InterceptorBinding;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * @author Jakub Senko <jsenko@redhat.com>\n+ */\n+@InterceptorBinding\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target({ElementType.TYPE, ElementType.METHOD})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdcab3462127f1ac77e9a01a3c0ed120917bae8d"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMjUxNTU5", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#pullrequestreview-350251559", "createdAt": "2020-01-29T16:35:47Z", "commit": {"oid": "936bbead945e61445b419d78b8cba2130884cd85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjozNTo0OFrOFjPR4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjozNTo0OFrOFjPR4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5NDgxNw==", "bodyText": "MethodNotFound?", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#discussion_r372494817", "createdAt": "2020-01-29T16:35:48Z", "author": {"login": "alesj"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsInterceptor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package io.apicurio.registry.metrics;\n+\n+import org.eclipse.microprofile.metrics.ConcurrentGauge;\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.Interceptor;\n+import javax.interceptor.InvocationContext;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.*;\n+import static org.eclipse.microprofile.metrics.MetricUnits.MILLISECONDS;\n+\n+/**\n+ * Interceptor that tracks metrics across all REST resources.\n+ *\n+ * @author Jakub Senko <jsenko@redhat.com>\n+ */\n+@Interceptor\n+@RestMetricsApply\n+public class RestMetricsInterceptor {\n+\n+\n+    @Inject\n+    @RegistryType(type = APPLICATION)\n+    MetricRegistry metricRegistry;\n+\n+    private Counter counter;\n+\n+    private ConcurrentGauge gauge;\n+\n+    private Timer timer;\n+\n+\n+    void init() {\n+        // Total counter\n+        final Metadata m1 = Metadata.builder()\n+                .withName(REST_REQUEST_COUNT)\n+                .withDescription(REST_REQUEST_COUNT_DESC + \" Across all endpoints.\")\n+                .withType(COUNTER)\n+                .build();\n+        final Tag[] tags1 = {new Tag(\"group\", REST_GROUP_TAG), new Tag(\"metric\", REST_REQUEST_COUNT)};\n+        counter = metricRegistry.counter(m1, tags1);\n+        // Concurrent gauge\n+        final Metadata m2 = Metadata.builder()\n+                .withName(REST_CONCURRENT_REQUEST_COUNT)\n+                .withDescription(REST_CONCURRENT_REQUEST_COUNT_DESC + \" Across all endpoints.\")\n+                .withType(CONCURRENT_GAUGE)\n+                .build();\n+        final Tag[] tags2 = {new Tag(\"group\", REST_GROUP_TAG), new Tag(\"metric\", REST_CONCURRENT_REQUEST_COUNT)};\n+        gauge = metricRegistry.concurrentGauge(m2, tags2);\n+        // Timer\n+        final Metadata m3 = Metadata.builder()\n+                .withName(REST_REQUEST_RESPONSE_TIME)\n+                .withDescription(REST_REQUEST_RESPONSE_TIME_DESC + \" Across all endpoints.\")\n+                .withType(TIMER)\n+                .withUnit(MILLISECONDS)\n+                .build();\n+        final Tag[] tags3 = {new Tag(\"group\", REST_GROUP_TAG), new Tag(\"metric\", REST_REQUEST_RESPONSE_TIME)};\n+        timer = metricRegistry.timer(m3, tags3);\n+    }\n+\n+    @AroundInvoke\n+    public Object intercept(InvocationContext context) throws Exception {\n+        if (counter == null) {\n+            init(); // @PostConstruct causes MethodNotFound ex.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "936bbead945e61445b419d78b8cba2130884cd85"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMjUzMTcz", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#pullrequestreview-350253173", "createdAt": "2020-01-29T16:37:50Z", "commit": {"oid": "936bbead945e61445b419d78b8cba2130884cd85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjozNzo1MVrOFjPW0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjozNzo1MVrOFjPW0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5NjA4MA==", "bodyText": "@jsenko perhaps this brings in quarkus-core  dep ... ?", "url": "https://github.com/Apicurio/apicurio-registry/pull/241#discussion_r372496080", "createdAt": "2020-01-29T16:37:51Z", "author": {"login": "alesj"}, "path": "common/pom.xml", "diffHunk": "@@ -38,6 +38,11 @@\n             <scope>provided</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-smallrye-metrics</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "936bbead945e61445b419d78b8cba2130884cd85"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3492, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}