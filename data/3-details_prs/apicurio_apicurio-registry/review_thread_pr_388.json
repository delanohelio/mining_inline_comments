{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MDk0MTQy", "number": 388, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowMDowOVrODz2lyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo1NzozNVrODz4Auw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njk4Mzc2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowMDowOVrOGIg2-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowMDowOVrOGIg2-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MDE1Mw==", "bodyText": "Can you remove this?  It's not needed.", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411580153", "createdAt": "2020-04-20T18:00:09Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -29,29 +38,49 @@\n  * @author eric.wittmann@gmail.com\n  */\n public final class ArtifactTypeUtil {\n-    \n+\n     private static final ObjectMapper mapper = new ObjectMapper();\n-    \n+\n+    protected static ThreadLocal<DocumentBuilder> threadLocaldocBuilder = new ThreadLocal<DocumentBuilder>() {\n+        @Override\n+        protected DocumentBuilder initialValue() {\n+            DocumentBuilder builder = null;\n+            try {\n+                DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+                factory.setNamespaceAware(true);\n+                builder = factory.newDocumentBuilder();\n+            } catch (ParserConfigurationException e) {\n+                throw new RuntimeException(e);\n+            }\n+            return builder;\n+        }\n+\n+        @Override\n+        public DocumentBuilder get() {\n+            return super.get();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njk5NTY1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowMzowMFrOGIg-Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo1NjozMFrOGIi_FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTk4Mw==", "bodyText": "This should be the \"else\" clause in this logic.  Should be:  if isXsd() else if isWsdl() else { type = XML }", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411581983", "createdAt": "2020-04-20T18:03:00Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MzAwOA==", "bodyText": "Note that you can have a XML file with a namespace that is not null.  This is very common.  For example:\n<ns:foo xmlns:ns=\"uri:my-custom-ns\">\n</ns:foo>\nThat is a simple XML file where the root element has a namespace of uri:my-custom-ns.", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411583008", "createdAt": "2020-04-20T18:04:40Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTk4Mw=="}, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNzAzNQ==", "bodyText": "Yep I was catching that with the last return XML - better to do it this way", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411607035", "createdAt": "2020-04-20T18:43:50Z", "author": {"login": "cfoskin"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTk4Mw=="}, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxNDk5Nw==", "bodyText": "Ah yes OK I missed that.", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411614997", "createdAt": "2020-04-20T18:56:30Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTk4Mw=="}, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzAwOTU4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowNjozNlrOGIhGhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxMjoxNlrOGIhUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NDEzMw==", "bodyText": "We need to be more specific here - don't use contains.  Use equals and specifically check for the XSD namespace:  http://www.w3.org/2001/XMLSchema", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411584133", "createdAt": "2020-04-20T18:06:36Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }\n+\n+            // XSD\n+            if (ns.contains(\"www.w3.org/2001/XMLSchema\")) {\n+                return ArtifactType.XSD;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NTIzNw==", "bodyText": "I do not believe there are multiple versions of XML Schema that we have to check for.", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411585237", "createdAt": "2020-04-20T18:08:20Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }\n+\n+            // XSD\n+            if (ns.contains(\"www.w3.org/2001/XMLSchema\")) {\n+                return ArtifactType.XSD;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NDEzMw=="}, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NzYyNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411587624", "createdAt": "2020-04-20T18:12:16Z", "author": {"login": "cfoskin"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }\n+\n+            // XSD\n+            if (ns.contains(\"www.w3.org/2001/XMLSchema\")) {\n+                return ArtifactType.XSD;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NDEzMw=="}, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzAzMDUyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxMTo0MlrOGIhTCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxMTo0MlrOGIhTCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NzMzNw==", "bodyText": "We should look for specific namespace(s) here rather than use contains.  I think we need to check both of these:\n\nhttp://schemas.xmlsoap.org/wsdl/\nhttp://www.w3.org/ns/wsdl\n\nI do not believe that 2nd namespace ever got much traction, but that is WSDL 2.0's namespace.", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411587337", "createdAt": "2020-04-20T18:11:42Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +113,47 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            if (ns == null) {\n+                // XML\n+                return ArtifactType.XML;\n+            }\n+\n+            // XSD\n+            if (ns.contains(\"www.w3.org/2001/XMLSchema\")) {\n+                return ArtifactType.XSD;\n+            }\n+\n+            // WSDL\n+            if (ns.contains(\"schemas.xmlsoap.org/wsdl\")) {\n+                return ArtifactType.WSDL;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a7951013aa4b338fdf7ffdcedfe86e651a62c4"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzIxNjU5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo1NzozNVrOGIjCCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTowNTowN1rOGIjTgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxNTc1NA==", "bodyText": "Now I see better why you had the null check up top.  But this is good I think.", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411615754", "createdAt": "2020-04-20T18:57:35Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +108,41 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            // XSD\n+            if (ns != null && ns.equals(\"http://www.w3.org/2001/XMLSchema\")) {\n+                return ArtifactType.XSD;\n+            } // WSDL\n+            else if (ns != null && (ns.equals(\"http://schemas.xmlsoap.org/wsdl/\")\n+                    || ns.equals(\"http://www.w3.org/ns/wsdl/\"))) {\n+                return ArtifactType.WSDL;\n+            } else {\n+                // default to XML since its been parsed\n+                return ArtifactType.XML;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ea0b94c377ad02d85e0086b721576fe57346d6"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYyMDIyNw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Apicurio/apicurio-registry/pull/388#discussion_r411620227", "createdAt": "2020-04-20T19:05:07Z", "author": {"login": "cfoskin"}, "path": "app/src/main/java/io/apicurio/registry/util/ArtifactTypeUtil.java", "diffHunk": "@@ -84,20 +108,41 @@ public static ArtifactType discoverType(ContentHandle content, String contentTyp\n         } catch (Exception e) {\n             // Apparently it's not JSON.\n         }\n-        \n+\n         // Try protobuf (only if we haven't already)\n         if (!triedProto) {\n             ArtifactType type = tryProto(content);\n             if (type != null) {\n                 return type;\n             }\n         }\n-        \n+\n         // Try GraphQL (SDL)\n         if (tryGraphQL(content)) {\n             return ArtifactType.GRAPHQL;\n         }\n-        \n+\n+        // Try the various XML formatted types\n+        try (InputStream stream = content.stream()) {\n+            Document xmlDocument = threadLocaldocBuilder.get().parse(stream);\n+            Element root = xmlDocument.getDocumentElement();\n+            String ns = root.getNamespaceURI();\n+\n+            // XSD\n+            if (ns != null && ns.equals(\"http://www.w3.org/2001/XMLSchema\")) {\n+                return ArtifactType.XSD;\n+            } // WSDL\n+            else if (ns != null && (ns.equals(\"http://schemas.xmlsoap.org/wsdl/\")\n+                    || ns.equals(\"http://www.w3.org/ns/wsdl/\"))) {\n+                return ArtifactType.WSDL;\n+            } else {\n+                // default to XML since its been parsed\n+                return ArtifactType.XML;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxNTc1NA=="}, "originalCommit": {"oid": "28ea0b94c377ad02d85e0086b721576fe57346d6"}, "originalPosition": 122}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3384, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}