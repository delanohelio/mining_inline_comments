{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NDI2NzYx", "number": 998, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1Mzo0NVrOE6Bsng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1NToxNFrOE6Bvdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MjgwNjcwOnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1Mzo0NVrOH015OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTozMjoyN1rOH3MEUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ==", "bodyText": "I didn't expect to see this based on our design session on this feature.  I expected setNextRequestHeaders but not getHeaders.  I may be forgetting something... what is the use-case for this?  My recollection is that getHeaders was my (rejected) suggestion for allowing per-request headers.  But I thought we were all in favor of Fabian's idea.", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r525171001", "createdAt": "2020-11-17T13:53:45Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4Mzg4Ng==", "bodyText": "This is Fabian's suggestion with that minor addition of the getHeaders method. The use case I see is to compare the existing headers with the map provided by the user. I just thought that it could be a good addition. I can remove it if you don't agree.", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r525183886", "createdAt": "2020-11-17T14:11:43Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUwNjAwMQ==", "bodyText": "Who would be doing that comparison?  At what point in the flow/usage of the client?", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r525506001", "createdAt": "2020-11-17T20:34:20Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg4NDM4MA==", "bodyText": "If you're reusing threads maybe you want to check the already existing headers before setting new ones. As I said, just thought it could be a good addition, I don't have a strong opinion about this.", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r525884380", "createdAt": "2020-11-18T08:09:54Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE5MTczNw==", "bodyText": "@Apicurio/developers Any thoughts on this?", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r527191737", "createdAt": "2020-11-19T20:54:35Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE5MjMzOA==", "bodyText": "Now that I understand the purpose, I also don't have a strong opinion on it.  :)", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r527192338", "createdAt": "2020-11-19T20:55:35Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxNjUzMw==", "bodyText": "in response to \"If you're reusing threads \" , if I'm not mistaken, the headers are wiped out after every request, so even re-using threads , always, after a request getHeaders will return an empty map, no?\nI thought you added the getHeaders for testing purposes, which I can partly understand ( there are other workarounds for testing the headers)", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r527616533", "createdAt": "2020-11-20T11:02:49Z", "author": {"login": "famartinrh"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxOTg5NQ==", "bodyText": "anyway, I'm ok with this :)", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r527619895", "createdAt": "2020-11-20T11:09:19Z", "author": {"login": "famartinrh"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyMzExOA==", "bodyText": "I realized that yesterday after the discussion with Eric. Yes, you're right, even if re-using threads, the headers are wiped out after every request. That leads us to the only use case of the test purpose.", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r527623118", "createdAt": "2020-11-20T11:15:37Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMTQ0Mg==", "bodyText": "for now, we could add some documentation warning that getHeaders method is intended to only be used for testing, and we can work later on removing that method and implement a different testing approach, if we want to do that", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r527631442", "createdAt": "2020-11-20T11:32:27Z", "author": {"login": "famartinrh"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -145,4 +146,7 @@\n \n     VersionSearchResults searchVersions(String artifactId, Integer offset, Integer limit);\n \n+    void setNextRequestHeaders(Map<String, String> headers);\n+\n+    Map<String, String> getHeaders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MTAwMQ=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MjgxMzk4OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/io/apicurio/registry/client/request/RequestExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1NToxNFrOH019nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDowMjoxOVrOH02RIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MjEyNw==", "bodyText": "Is this guaranteed to get called even if the request fails?", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r525172127", "createdAt": "2020-11-17T13:55:14Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/request/RequestExecutor.java", "diffHunk": "@@ -18,15 +18,26 @@\n \n import retrofit2.Call;\n \n+import java.util.Map;\n+\n+\n /**\n  * @author Carles Arnal <carles.arnal@redhat.com>\n  */\n public class RequestExecutor {\n \n+    private final ThreadLocal<Map<String, String>> requestHeaders;\n+\n+    public RequestExecutor(ThreadLocal<Map<String, String>> requestHeaders) {\n+        this.requestHeaders = requestHeaders;\n+    }\n+\n     public <T> T execute(Call<T> call) {\n \n         final ResultCallback<T> resultCallback = new ResultCallback<T>();\n \n+        requestHeaders.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3NzEyMw==", "bodyText": "Actually, the request has not been executed at this point. I think that's even better.", "url": "https://github.com/Apicurio/apicurio-registry/pull/998#discussion_r525177123", "createdAt": "2020-11-17T14:02:19Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/request/RequestExecutor.java", "diffHunk": "@@ -18,15 +18,26 @@\n \n import retrofit2.Call;\n \n+import java.util.Map;\n+\n+\n /**\n  * @author Carles Arnal <carles.arnal@redhat.com>\n  */\n public class RequestExecutor {\n \n+    private final ThreadLocal<Map<String, String>> requestHeaders;\n+\n+    public RequestExecutor(ThreadLocal<Map<String, String>> requestHeaders) {\n+        this.requestHeaders = requestHeaders;\n+    }\n+\n     public <T> T execute(Call<T> call) {\n \n         final ResultCallback<T> resultCallback = new ResultCallback<T>();\n \n+        requestHeaders.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MjEyNw=="}, "originalCommit": {"oid": "30490a92a046cb62765acd9059cb67beb65786d7"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3490, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}