{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4OTE0OTAx", "number": 803, "title": "Add default global rules supplied via env vars", "bodyText": "This commit adds the ability to supply default global rules on\nregistry start-up via environment variables. In the server config these\nare defined as:\n\n%{profile}.registry.rules.global.compatibility\n%{profile}.registry.rules.global.validity\nand are set with the configuration value for each rule (e.g. FULL or\nBACKWARDS).\n\n\n\nThis PR addresses issue #701\nSigned-off-by: Andrew Borley borley@uk.ibm.com", "createdAt": "2020-09-03T20:19:58Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/803", "merged": true, "mergeCommit": {"oid": "e675a547c4c33c6436b4be9241feb489b8885c8e"}, "closed": true, "closedAt": "2020-09-11T16:22:41Z", "author": {"login": "ajborley"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFlKdTAFqTQ4MjY0ODc0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH35jkgFqTQ4Njk0Nzk5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjQ4NzQx", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482648741", "createdAt": "2020-09-04T13:24:46Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzoyNDo0NlrOHNNaWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzoyNDo0NlrOHNNaWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYxMzI3NQ==", "bodyText": "If the same rule is configured in both places, won't it show up twice in the list?", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483613275", "createdAt": "2020-09-04T13:24:46Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rest/RulesResourceImpl.java", "diffHunk": "@@ -55,12 +65,19 @@\n     @Current\n     RegistryStorage storage;\n \n+    @Inject\n+    RulesProperties rulesProperties;\n+\n     /**\n      * @see io.apicurio.registry.rest.RulesResource#listGlobalRules()\n      */\n     @Override\n     public List<RuleType> listGlobalRules() {\n-        return storage.getGlobalRules();\n+        List<RuleType> rules = storage.getGlobalRules();\n+        List<RuleType> defaultRules = rulesProperties.getDefaultGlobalRules(rules);\n+        return Stream.concat(rules.stream(), defaultRules.stream())\n+            .sorted()\n+            .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjUwNjAx", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482650601", "createdAt": "2020-09-04T13:27:18Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzoyNzoxOFrOHNNfyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzoyNzoxOFrOHNNfyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYxNDY2NQ==", "bodyText": "But if the global rule does exist then the API responds with a 20x (success) response without having done anything.  Do we need a new response for that?  Some sort of HTTP conflict response?", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483614665", "createdAt": "2020-09-04T13:27:18Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rest/RulesResourceImpl.java", "diffHunk": "@@ -113,7 +149,15 @@ public Rule updateGlobalRuleConfig(RuleType rule, Rule data) {\n      */\n     @Override\n     public void deleteGlobalRule(RuleType rule) {\n-        storage.deleteGlobalRule(rule);\n+        try {\n+            storage.deleteGlobalRule(rule);\n+        } catch (RuleNotFoundException ruleNotFoundException) {\n+            // This global rule doesn't exist in storage - if the rule also does not exist in\n+            // the default global rules, throw the RuleNotFoundException\n+            if (rulesProperties.getDefaultGlobalRuleConfiguration(rule) == null) {\n+                throw ruleNotFoundException;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjU1NzUz", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482655753", "createdAt": "2020-09-04T13:34:06Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzozNDowN1rOHNNvDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzozNDowN1rOHNNvDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYxODU3Mw==", "bodyText": "I think this should remain - if there are no rules to apply we want to skip the UPDATE section below.", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483618573", "createdAt": "2020-09-04T13:34:07Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rules/RulesServiceImpl.java", "diffHunk": "@@ -61,17 +66,26 @@ public void applyRules(String artifactId, ArtifactType artifactType, ContentHand\n             rules = storage.getGlobalRules();\r\n             useGlobalRules = true;\r\n         }\r\n-        if (rules.isEmpty()) {\r\n-            return;\r\n+\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjYzNzE3", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482663717", "createdAt": "2020-09-04T13:44:22Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDoyM1rOHNOGbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDoyM1rOHNOGbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDU1OA==", "bodyText": "This could be me misunderstanding how concat() works, but won't this be a problem if the same rule exists in both?  We don't want to run the rules twice.  But maybe concat de-dupes the items in the stream?", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483624558", "createdAt": "2020-09-04T13:44:23Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rules/RulesServiceImpl.java", "diffHunk": "@@ -61,17 +66,26 @@ public void applyRules(String artifactId, ArtifactType artifactType, ContentHand\n             rules = storage.getGlobalRules();\r\n             useGlobalRules = true;\r\n         }\r\n-        if (rules.isEmpty()) {\r\n-            return;\r\n+\r\n+        List<RuleType> defaultGlobalRules = rulesProperties.getDefaultGlobalRules(rules);\r\n+        if (!defaultGlobalRules.isEmpty()) {\r\n+            // We have default global rules as well as rules from storage, so use the concatenated list\r\n+            rules = Stream.concat(rules.stream(), defaultGlobalRules.stream())\r\n+                .collect(Collectors.toList());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjY1MjMw", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482665230", "createdAt": "2020-09-04T13:46:15Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NjoxNVrOHNOK6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NjoxNVrOHNOK6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNTcwNQ==", "bodyText": "Do we want the default rules to take precedent over configured rules?  Probably not?", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483625705", "createdAt": "2020-09-04T13:46:15Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rules/RulesServiceImpl.java", "diffHunk": "@@ -61,17 +66,26 @@ public void applyRules(String artifactId, ArtifactType artifactType, ContentHand\n             rules = storage.getGlobalRules();\r\n             useGlobalRules = true;\r\n         }\r\n-        if (rules.isEmpty()) {\r\n-            return;\r\n+\r\n+        List<RuleType> defaultGlobalRules = rulesProperties.getDefaultGlobalRules(rules);\r\n+        if (!defaultGlobalRules.isEmpty()) {\r\n+            // We have default global rules as well as rules from storage, so use the concatenated list\r\n+            rules = Stream.concat(rules.stream(), defaultGlobalRules.stream())\r\n+                .collect(Collectors.toList());\r\n         }\r\n+\r\n         ContentHandle currentArtifactContent = null;\r\n         if (ruleApplicationType == RuleApplicationType.UPDATE) {\r\n             StoredArtifact currentArtifact = storage.getArtifact(artifactId);\r\n             currentArtifactContent = currentArtifact.getContent();\r\n         }\r\n         for (RuleType ruleType : rules) {\r\n-            RuleConfigurationDto configurationDto = useGlobalRules ?\r\n-                                                    storage.getGlobalRule(ruleType) : storage.getArtifactRule(artifactId, ruleType);\r\n+            RuleConfigurationDto configurationDto;\r\n+            if (defaultGlobalRules.contains(ruleType)) {\r\n+                configurationDto = rulesProperties.getDefaultGlobalRuleConfiguration(ruleType);\r\n+            } else {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjY5NTMx", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482669531", "createdAt": "2020-09-04T13:51:48Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo1MTo0OFrOHNOXiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo1MTo0OFrOHNOXiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyODkzNw==", "bodyText": "While you're in here, can you rename this method to applyRules since I believe it applies all rules not just one?  IMO this was not properly named originally.", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483628937", "createdAt": "2020-09-04T13:51:48Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rules/RulesServiceImpl.java", "diffHunk": "@@ -117,8 +131,22 @@ public void applyRule(String artifactId, long artifactVersion, ArtifactType arti\n             throws RuleViolationException {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjY5OTYz", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-482669963", "createdAt": "2020-09-04T13:52:21Z", "commit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo1MjoyMVrOHNOY3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo1MjoyMVrOHNOY3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyOTI3Nw==", "bodyText": "Opportunity to share logic with the other applyRules impl?", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r483629277", "createdAt": "2020-09-04T13:52:21Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rules/RulesServiceImpl.java", "diffHunk": "@@ -117,8 +131,22 @@ public void applyRule(String artifactId, long artifactVersion, ArtifactType arti\n             throws RuleViolationException {\r\n         StoredArtifact versionContent = storage.getArtifactVersion(artifactId, artifactVersion);\r\n         // Get the rules for this artifact\r\n-        for (RuleType ruleType : storage.getGlobalRules()) {\r\n-            RuleConfigurationDto configurationDto = storage.getGlobalRule(ruleType);\r\n+\r\n+        List<RuleType> globalRules = storage.getGlobalRules();\r\n+        List<RuleType> defaultGlobalRules = rulesProperties.getDefaultGlobalRules(globalRules);\r\n+        if (!defaultGlobalRules.isEmpty()) {\r\n+            // We have default global rules as well as rules from storage, so use the concatenated list\r\n+            globalRules = Stream.concat(\r\n+                globalRules.stream(),\r\n+                defaultGlobalRules.stream()).collect(Collectors.toList());\r\n+        }\r\n+        for (RuleType ruleType : globalRules) {\r\n+            RuleConfigurationDto configurationDto;\r\n+            if (defaultGlobalRules.contains(ruleType)) {\r\n+                configurationDto = rulesProperties.getDefaultGlobalRuleConfiguration(ruleType);\r\n+            } else {\r\n+                configurationDto = storage.getGlobalRule(ruleType);\r\n+            }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0"}, "originalPosition": 71}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ea000da256127f624a9105c69abe6af6746f1d0", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0ea000da256127f624a9105c69abe6af6746f1d0", "committedDate": "2020-09-03T20:19:14Z", "message": "Add default global rules supplied via env vars\n\n - This commit adds the ability to supply default global rules on\nregistry start-up via environment variables. In the server config these\nare defined as:\n    - `%{profile}.registry.rules.global.compatibility`\n    - `%{profile}.registry.rules.global.validity`\n and are set with the configuration value for each rule (e.g. `FULL` or\n`BACKWARDS`).\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "ee84fab45d3acf68111bac813f9dba7ccdd874cf", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ee84fab45d3acf68111bac813f9dba7ccdd874cf", "committedDate": "2020-09-07T22:38:03Z", "message": "Address review comments\n\n - Refactor code in RulesServiceImpl\n - Rename RulesProperties.getFilteredDefaultGlobalRules() method for\nclarity.\n - Add DefaultRuleDeletionException, thrown when attempting to delete a\ndefault global rule.\n - Rename version-specific RulesService.applyRule to applyRules.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "974773c96d34fc2449fd973ef866fa84c4583bf1", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/974773c96d34fc2449fd973ef866fa84c4583bf1", "committedDate": "2020-09-08T12:44:06Z", "message": "Add tests for default global rules\n\n - This commit uses a new implementation of the QuarkusTestProfile\ninterface to set a default global rule via configuration overrides. This\nallows the default global rule functionality to be tested in the new\ntest class.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "70851ca7ae69d185e6a4ce795e7869c9209fe000", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/70851ca7ae69d185e6a4ce795e7869c9209fe000", "committedDate": "2020-09-08T15:19:10Z", "message": "Add tests for default global rules\n\n - This commit uses a new implementation of the QuarkusTestProfile\ninterface to set a default global rule via configuration overrides. This\nallows the default global rule functionality to be tested in the new\ntest class.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MjEwNjY3", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-485210667", "createdAt": "2020-09-09T16:48:14Z", "commit": {"oid": "70851ca7ae69d185e6a4ce795e7869c9209fe000"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjo0ODoxNFrOHPQ7eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjo0ODoxNFrOHPQ7eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2ODA1OA==", "bodyText": "I think this should be wrapped in a check for useGlobalRules.  Basically, if there are rules defined at the artifact level, we always use those - we never merge the global rules (configured or default) with the artifact rules.", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#discussion_r485768058", "createdAt": "2020-09-09T16:48:14Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/rules/RulesServiceImpl.java", "diffHunk": "@@ -45,37 +48,59 @@\n     @Inject\r\n     RuleExecutorFactory factory;\r\n \r\n+    @Inject\r\n+    RulesProperties rulesProperties;\r\n+\r\n     /**\r\n      * @see io.apicurio.registry.rules.RulesService#applyRules(java.lang.String, io.apicurio.registry.types.ArtifactType, ContentHandle, io.apicurio.registry.rules.RuleApplicationType)\r\n      */\r\n     @Override\r\n     public void applyRules(String artifactId, ArtifactType artifactType, ContentHandle artifactContent,\r\n-                           RuleApplicationType ruleApplicationType) throws RuleViolationException {\r\n-        boolean useGlobalRules = false;\r\n+                          RuleApplicationType ruleApplicationType) throws RuleViolationException {\r\n         @SuppressWarnings(\"unchecked\")\r\n         List<RuleType> rules = Collections.EMPTY_LIST;\r\n         if (ruleApplicationType == RuleApplicationType.UPDATE) {\r\n             rules = storage.getArtifactRules(artifactId);\r\n         }\r\n-        if (rules.isEmpty()) {\r\n-            rules = storage.getGlobalRules();\r\n-            useGlobalRules = true;\r\n-        }\r\n-        if (rules.isEmpty()) {\r\n-            return;\r\n-        }\r\n         ContentHandle currentArtifactContent = null;\r\n         if (ruleApplicationType == RuleApplicationType.UPDATE) {\r\n             StoredArtifact currentArtifact = storage.getArtifact(artifactId);\r\n             currentArtifactContent = currentArtifact.getContent();\r\n         }\r\n-        for (RuleType ruleType : rules) {\r\n-            RuleConfigurationDto configurationDto = useGlobalRules ?\r\n-                                                    storage.getGlobalRule(ruleType) : storage.getArtifactRule(artifactId, ruleType);\r\n-            RuleExecutor executor = factory.createExecutor(ruleType);\r\n-            RuleContext context = new RuleContext(artifactId, artifactType, configurationDto.getConfiguration(),\r\n-                                                  currentArtifactContent, artifactContent);\r\n-            executor.execute(context);\r\n+\r\n+        applyGlobalAndArtifactRules(artifactId, artifactType, currentArtifactContent, artifactContent, rules);\r\n+    }\r\n+\r\n+    private void applyGlobalAndArtifactRules(String artifactId, ArtifactType artifactType, ContentHandle currentArtifactContent, ContentHandle updatedArtifactContent, List<RuleType> artifactRules) {\r\n+\r\n+        boolean useGlobalRules = false;\r\n+        if (artifactRules.isEmpty()) {\r\n+            artifactRules = storage.getGlobalRules();\r\n+            useGlobalRules = true;\r\n+        }\r\n+\r\n+        List<RuleType> filteredDefaultGlobalRules = rulesProperties.getFilteredDefaultGlobalRules(artifactRules);\r\n+        if (!filteredDefaultGlobalRules.isEmpty()) {\r\n+            // We have default global rules (with any storage rules filtered out) plus rules from storage, so concatenate the 2 lists\r\n+            artifactRules = Stream.concat(artifactRules.stream(), filteredDefaultGlobalRules.stream())\r\n+                .collect(Collectors.toList());\r\n+        }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70851ca7ae69d185e6a4ce795e7869c9209fe000"}, "originalPosition": 72}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "545b1c38c058ffb73913b3c5ab5962c0ee498a23", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/545b1c38c058ffb73913b3c5ab5962c0ee498a23", "committedDate": "2020-09-10T12:12:27Z", "message": "Refactor to ensure separation of artifact and global rules\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "b092bee745d9abb12ff44483ee76d44442b89fed", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/b092bee745d9abb12ff44483ee76d44442b89fed", "committedDate": "2020-09-10T12:12:42Z", "message": "Refactor to ensure separation of artifact and global rules\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0ae5b5909fdd4c14414a656ab620cb5f2049740", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/b0ae5b5909fdd4c14414a656ab620cb5f2049740", "committedDate": "2020-09-10T21:54:24Z", "message": "Add default global rules supplied via env vars\n\n - This commit adds the ability to supply default global rules on\nregistry start-up via environment variables. In the server config these\nare defined as:\n    - `%{profile}.registry.rules.global.compatibility`\n    - `%{profile}.registry.rules.global.validity`\n and are set with the configuration value for each rule (e.g. `FULL` or\n`BACKWARDS`).\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50195b0c8b9569eef703b669e172c87d0481631d", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/50195b0c8b9569eef703b669e172c87d0481631d", "committedDate": "2020-09-10T21:54:24Z", "message": "Address review comments\n\n - Refactor code in RulesServiceImpl\n - Rename RulesProperties.getFilteredDefaultGlobalRules() method for\nclarity.\n - Add DefaultRuleDeletionException, thrown when attempting to delete a\ndefault global rule.\n - Rename version-specific RulesService.applyRule to applyRules.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9da006f70ce3bac7dc1243c47599fc7edd5d694a", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/9da006f70ce3bac7dc1243c47599fc7edd5d694a", "committedDate": "2020-09-10T21:54:24Z", "message": "Add tests for default global rules\n\n - This commit uses a new implementation of the QuarkusTestProfile\ninterface to set a default global rule via configuration overrides. This\nallows the default global rule functionality to be tested in the new\ntest class.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c16bbe0d945ff47ab007817481bb2baee2c8eb5e", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/c16bbe0d945ff47ab007817481bb2baee2c8eb5e", "committedDate": "2020-09-10T21:54:24Z", "message": "Refactor to ensure separation of artifact and global rules\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d66933d44eea56195c47471231b4a0419e91b8", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/d1d66933d44eea56195c47471231b4a0419e91b8", "committedDate": "2020-09-10T21:57:28Z", "message": "Revert \"Add tests for default global rules\"\n\nThis reverts commit 9da006f70ce3bac7dc1243c47599fc7edd5d694a."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b092bee745d9abb12ff44483ee76d44442b89fed", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/b092bee745d9abb12ff44483ee76d44442b89fed", "committedDate": "2020-09-10T12:12:42Z", "message": "Refactor to ensure separation of artifact and global rules\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "d1d66933d44eea56195c47471231b4a0419e91b8", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/d1d66933d44eea56195c47471231b4a0419e91b8", "committedDate": "2020-09-10T21:57:28Z", "message": "Revert \"Add tests for default global rules\"\n\nThis reverts commit 9da006f70ce3bac7dc1243c47599fc7edd5d694a."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTQ3OTk5", "url": "https://github.com/Apicurio/apicurio-registry/pull/803#pullrequestreview-486947999", "createdAt": "2020-09-11T16:22:21Z", "commit": {"oid": "d1d66933d44eea56195c47471231b4a0419e91b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4422, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}