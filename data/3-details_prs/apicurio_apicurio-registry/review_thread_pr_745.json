{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDE4Njc1", "number": 745, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjowNjowNlrOEW3GAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjowNjowNlrOEW3GAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDA2Nzg0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/release.yaml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjowNjowNlrOG-VbDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjoxNDowMFrOG_eb9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTg4NQ==", "bodyText": "Can you explain why this works?  I know && can be used to string together multiple commands - but I'm unfamiliar with the gritty details.\nE.g. does this stop trying if the first attempt succeeds?\n@jsenko and @carlesarnal - I would appreciate your thoughts on this.  I'm wondering if a script might be better here.", "url": "https://github.com/Apicurio/apicurio-registry/pull/745#discussion_r468015885", "createdAt": "2020-08-10T16:06:06Z", "author": {"login": "EricWittmann"}, "path": ".github/workflows/release.yaml", "diffHunk": "@@ -62,22 +57,28 @@ jobs:\n           git branch --set-upstream-to=origin/master\n           git pull\n       - name: Update Release Version ${{steps.metadata.outputs.release-version}}\n-        run: mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n+        run: cd registry && mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n       - name: Build All Variants\n-        run: mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n+        run: cd registry && mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n       - name: Commit Release Version Change\n         run: |\n+          cd registry\n           git add .\n           git commit -m \"Automated update to Release Version:: ${{steps.metadata.outputs.release-version}}\"\n           git push\n-      - name: Publish to Maven Central\n-        uses: samuelmeuli/action-maven-publish@v1\n-        with:\n-          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}\n-          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}\n-          nexus_username: ${{ secrets.OSSRH_USERNAME }}\n-          nexus_password: ${{ secrets.OSSRH_TOKEN }}\n-          maven_goals_phases: deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests\n+      - name: Import GPG Key\n+        uses: crazy-max/ghaction-import-gpg@v1\n+        env:\n+          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}\n+          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} \n+      - name: Maven Deploy\n+        run: |\n+          cd registry\n+          # Retry 3 times before the steps actually fails\n+          (echo \"===== Maven Deploy Attempt: 1 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 2 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 3 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"==== Maven Deploy Step Failed ====\" && exit 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727dd5773ea73d0f9cd70323429e685a0ced342a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0MTk2OQ==", "bodyText": "@riprasad I realized my confusion here is because you used the && operator between the echo and mvn commands and then you used the || operator after that.  I didn't catch that on first reading and thought/assumed you were using && between each command (which is what I've seen often in e.g. Dockerfiles).  So I was not understanding the code.  But now I do and it makes sense.  The || operator isn't something I've used before but looking at the docs for it it makes sense.", "url": "https://github.com/Apicurio/apicurio-registry/pull/745#discussion_r468741969", "createdAt": "2020-08-11T17:21:26Z", "author": {"login": "EricWittmann"}, "path": ".github/workflows/release.yaml", "diffHunk": "@@ -62,22 +57,28 @@ jobs:\n           git branch --set-upstream-to=origin/master\n           git pull\n       - name: Update Release Version ${{steps.metadata.outputs.release-version}}\n-        run: mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n+        run: cd registry && mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n       - name: Build All Variants\n-        run: mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n+        run: cd registry && mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n       - name: Commit Release Version Change\n         run: |\n+          cd registry\n           git add .\n           git commit -m \"Automated update to Release Version:: ${{steps.metadata.outputs.release-version}}\"\n           git push\n-      - name: Publish to Maven Central\n-        uses: samuelmeuli/action-maven-publish@v1\n-        with:\n-          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}\n-          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}\n-          nexus_username: ${{ secrets.OSSRH_USERNAME }}\n-          nexus_password: ${{ secrets.OSSRH_TOKEN }}\n-          maven_goals_phases: deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests\n+      - name: Import GPG Key\n+        uses: crazy-max/ghaction-import-gpg@v1\n+        env:\n+          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}\n+          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} \n+      - name: Maven Deploy\n+        run: |\n+          cd registry\n+          # Retry 3 times before the steps actually fails\n+          (echo \"===== Maven Deploy Attempt: 1 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 2 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 3 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"==== Maven Deploy Step Failed ====\" && exit 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTg4NQ=="}, "originalCommit": {"oid": "727dd5773ea73d0f9cd70323429e685a0ced342a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA5NDgxNA==", "bodyText": "@EricWittmann Yes, correct!\nSorry for the delayed response though. I always miss mails from Github. I have a filter in place now to have all Github mails in one folder for better visibility and tracking.", "url": "https://github.com/Apicurio/apicurio-registry/pull/745#discussion_r469094814", "createdAt": "2020-08-12T08:30:44Z", "author": {"login": "riprasad"}, "path": ".github/workflows/release.yaml", "diffHunk": "@@ -62,22 +57,28 @@ jobs:\n           git branch --set-upstream-to=origin/master\n           git pull\n       - name: Update Release Version ${{steps.metadata.outputs.release-version}}\n-        run: mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n+        run: cd registry && mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n       - name: Build All Variants\n-        run: mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n+        run: cd registry && mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n       - name: Commit Release Version Change\n         run: |\n+          cd registry\n           git add .\n           git commit -m \"Automated update to Release Version:: ${{steps.metadata.outputs.release-version}}\"\n           git push\n-      - name: Publish to Maven Central\n-        uses: samuelmeuli/action-maven-publish@v1\n-        with:\n-          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}\n-          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}\n-          nexus_username: ${{ secrets.OSSRH_USERNAME }}\n-          nexus_password: ${{ secrets.OSSRH_TOKEN }}\n-          maven_goals_phases: deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests\n+      - name: Import GPG Key\n+        uses: crazy-max/ghaction-import-gpg@v1\n+        env:\n+          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}\n+          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} \n+      - name: Maven Deploy\n+        run: |\n+          cd registry\n+          # Retry 3 times before the steps actually fails\n+          (echo \"===== Maven Deploy Attempt: 1 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 2 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 3 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"==== Maven Deploy Step Failed ====\" && exit 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTg4NQ=="}, "originalCommit": {"oid": "727dd5773ea73d0f9cd70323429e685a0ced342a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIxMjE0OA==", "bodyText": "Thank you, @riprasad - I do the same thing (gmail filter for GH emails).", "url": "https://github.com/Apicurio/apicurio-registry/pull/745#discussion_r469212148", "createdAt": "2020-08-12T12:14:00Z", "author": {"login": "EricWittmann"}, "path": ".github/workflows/release.yaml", "diffHunk": "@@ -62,22 +57,28 @@ jobs:\n           git branch --set-upstream-to=origin/master\n           git pull\n       - name: Update Release Version ${{steps.metadata.outputs.release-version}}\n-        run: mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n+        run: cd registry && mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true\n       - name: Build All Variants\n-        run: mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n+        run: cd registry && mvn clean install -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests\n       - name: Commit Release Version Change\n         run: |\n+          cd registry\n           git add .\n           git commit -m \"Automated update to Release Version:: ${{steps.metadata.outputs.release-version}}\"\n           git push\n-      - name: Publish to Maven Central\n-        uses: samuelmeuli/action-maven-publish@v1\n-        with:\n-          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}\n-          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}\n-          nexus_username: ${{ secrets.OSSRH_USERNAME }}\n-          nexus_password: ${{ secrets.OSSRH_TOKEN }}\n-          maven_goals_phases: deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests\n+      - name: Import GPG Key\n+        uses: crazy-max/ghaction-import-gpg@v1\n+        env:\n+          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}\n+          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} \n+      - name: Maven Deploy\n+        run: |\n+          cd registry\n+          # Retry 3 times before the steps actually fails\n+          (echo \"===== Maven Deploy Attempt: 1 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 2 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"===== Maven Deploy Attempt: 3 ====\" && mvn deploy --batch-mode -Pprod -Pjpa -Pinfinispan -Pkafka -Pstreams -Pasyncmem -DskipTests -Prelease --settings /home/runner/.m2/settings.xml -DskipTests) || \\\n+          (echo \"==== Maven Deploy Step Failed ====\" && exit 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTg4NQ=="}, "originalCommit": {"oid": "727dd5773ea73d0f9cd70323429e685a0ced342a"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3331, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}