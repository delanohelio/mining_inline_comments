{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTUzNTg1", "number": 926, "title": "UI auth/keycloak properties now get pushed to the UI properly", "bodyText": "Fixes issue #904", "createdAt": "2020-10-15T14:36:03Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/926", "merged": true, "mergeCommit": {"oid": "45d167d0f257ffe5d86ba7e516a28cfc07172d7a"}, "closed": true, "closedAt": "2020-10-15T16:28:02Z", "author": {"login": "EricWittmann"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSyvyFgH2gAyNTA0MTUzNTg1OmY5Yzg5NjRiYWExYjg1YTVjNzc1MTFmMjViMDJjODhkODVlMTM2MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSy3oCgFqTUwOTQ1ODQxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9c8964baa1b85a5c77511f25b02c88d85e13601", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/f9c8964baa1b85a5c77511f25b02c88d85e13601", "committedDate": "2020-10-15T14:35:19Z", "message": "UI auth/keycloak properties now get pushed to the UI properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDU3MTA5", "url": "https://github.com/Apicurio/apicurio-registry/pull/926#pullrequestreview-509457109", "createdAt": "2020-10-15T14:42:38Z", "commit": {"oid": "f9c8964baa1b85a5c77511f25b02c88d85e13601"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo0MjozOFrOHiLXxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo0MjozOFrOHiLXxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU5OTk0MQ==", "bodyText": "Maybe use a logger instead?", "url": "https://github.com/Apicurio/apicurio-registry/pull/926#discussion_r505599941", "createdAt": "2020-10-15T14:42:38Z", "author": {"login": "carlesarnal"}, "path": "app/src/main/java/io/apicurio/registry/ui/config/UiConfigProperties.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.ui.config;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+import io.apicurio.registry.utils.RegistryProperties;\n+\n+/**\n+ * Holds/accesses all configuration settings for the UI.\n+ * @author eric.wittmann@gmail.com\n+ */\n+@ApplicationScoped\n+public class UiConfigProperties {\n+    \n+    @Inject\n+    @ConfigProperty(name = \"registry.ui.features.readOnly\", defaultValue = \"false\")\n+    boolean featureReadOnly;\n+\n+    @Inject\n+    @ConfigProperty(name = \"registry.ui.config.uiUrl\")\n+    String uiUrl;\n+\n+    @Inject\n+    @ConfigProperty(name = \"registry.ui.config.apiUrl\")\n+    String apiUrl;\n+\n+    @Inject\n+    @ConfigProperty(name = \"quarkus.oidc.tenant-enabled\", defaultValue = \"false\")\n+    boolean tenantEnabled;\n+\n+    private final Map<String, Object> keycloakConfig;\n+    \n+    /**\n+     * Constructor.\n+     * @param kcProperties\n+     */\n+    public UiConfigProperties(@RegistryProperties(value = {\"registry.ui.config.auth.keycloak\"}) Properties kcProperties) {\n+        this.keycloakConfig = new HashMap<>();\n+        kcProperties.stringPropertyNames().forEach(key -> keycloakConfig.put(key, kcProperties.get(key)));\n+    }\n+    \n+    @PostConstruct\n+    void onConstruct() {\n+        System.out.println(\"============> kcProperties  \" + keycloakConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c8964baa1b85a5c77511f25b02c88d85e13601"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDU4NDE5", "url": "https://github.com/Apicurio/apicurio-registry/pull/926#pullrequestreview-509458419", "createdAt": "2020-10-15T14:43:53Z", "commit": {"oid": "f9c8964baa1b85a5c77511f25b02c88d85e13601"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4324, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}