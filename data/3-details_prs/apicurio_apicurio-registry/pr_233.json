{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTIwOTY0", "number": 233, "title": "Initial IBM-like states.", "bodyText": "", "createdAt": "2020-01-22T15:36:55Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/233", "merged": true, "mergeCommit": {"oid": "b8001096cbcd0eb0f171482a63abb914802dfbd5"}, "closed": true, "closedAt": "2020-01-29T14:51:34Z", "author": {"login": "alesj"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9G8SBgBqjI5NzMwMTI2ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_G6kvAH2gAyMzY1OTIwOTY0OmQ3NzMyNWRhNzA1YTM1ZTdmNjk1M2ZkYWVhZmIzNjAzZmQ2MTU3Y2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58b74381f3718fedc51cb2b15fc1bbb33857ef9a", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/58b74381f3718fedc51cb2b15fc1bbb33857ef9a", "committedDate": "2020-01-22T15:30:07Z", "message": "Initial IBM-like states."}, "afterCommit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8", "committedDate": "2020-01-23T09:29:25Z", "message": "Initial IBM-like states."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "680e8892f0719ee8ff5105b8ef383369ad538788", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/680e8892f0719ee8ff5105b8ef383369ad538788", "committedDate": "2020-01-23T14:02:24Z", "message": "Simplify JPA metadata handling a bit ..."}, "afterCommit": {"oid": "f1a282eedb0df6ddebf30a3b02ff208a81fa18b7", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/f1a282eedb0df6ddebf30a3b02ff208a81fa18b7", "committedDate": "2020-01-23T14:06:15Z", "message": "Simplify JPA metadata handling a bit ..."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MzA1NDg4", "url": "https://github.com/Apicurio/apicurio-registry/pull/233#pullrequestreview-347305488", "createdAt": "2020-01-23T13:46:12Z", "commit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzo0NjoxM1rOFg-nnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNDoyMToxMFrOFg_0VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNDcwMw==", "bodyText": "Why two methods instead of a single method with a Nullable version?  Either way, some javadoc here would be helpful.", "url": "https://github.com/Apicurio/apicurio-registry/pull/233#discussion_r370124703", "createdAt": "2020-01-23T13:46:13Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/storage/RegistryStorage.java", "diffHunk": "@@ -28,10 +29,28 @@\n \n /**\n  * The storage layer for the registry.\n+ *\n  * @author eric.wittmann@gmail.com\n  */\n public interface RegistryStorage {\n \n+    /**\n+     * Update artifact state.\n+     *\n+     * @param artifactId\n+     * @param state\n+     */\n+    void updateArtifactState(String artifactId, ArtifactState state);\n+\n+    /**\n+     * Update artifact state.\n+     *\n+     * @param artifactId\n+     * @param state\n+     * @param version\n+     */\n+    void updateArtifactState(String artifactId, ArtifactState state, Integer version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNjU4Mw==", "bodyText": "Why remove VersionNotFoundException when the method can definitely throw it?", "url": "https://github.com/Apicurio/apicurio-registry/pull/233#discussion_r370126583", "createdAt": "2020-01-23T13:49:44Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/storage/impl/AbstractMapRegistryStorage.java", "diffHunk": "@@ -93,29 +98,37 @@ protected void afterInit() {\n         return v2c;\n     }\n \n-    private Map<String, String> getContentMap(String artifactId, Long version) throws ArtifactNotFoundException, VersionNotFoundException {\n+    private Map<String, String> getContentMap(String artifactId, Long version, EnumSet<ArtifactState> states) throws ArtifactNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNzM0Mg==", "bodyText": "Also maybe add ArtifactStateInvalidException?  I realize these are all unchecked exceptions.  It seems like we should either declare them or not declare them...but not declare only some of them.", "url": "https://github.com/Apicurio/apicurio-registry/pull/233#discussion_r370127342", "createdAt": "2020-01-23T13:50:56Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/storage/impl/AbstractMapRegistryStorage.java", "diffHunk": "@@ -93,29 +98,37 @@ protected void afterInit() {\n         return v2c;\n     }\n \n-    private Map<String, String> getContentMap(String artifactId, Long version) throws ArtifactNotFoundException, VersionNotFoundException {\n+    private Map<String, String> getContentMap(String artifactId, Long version, EnumSet<ArtifactState> states) throws ArtifactNotFoundException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNjU4Mw=="}, "originalCommit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEzMDMyNA==", "bodyText": "I know we don't have an answer on this yet, but IMO this should be ACTIVE_STATES", "url": "https://github.com/Apicurio/apicurio-registry/pull/233#discussion_r370130324", "createdAt": "2020-01-23T13:56:35Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/storage/impl/AbstractMapRegistryStorage.java", "diffHunk": "@@ -267,7 +304,7 @@ public StoredArtifact getArtifact(String artifactId) throws ArtifactNotFoundExce\n      */\n     @Override\n     public ArtifactMetaDataDto getArtifactMetaData(String artifactId) throws ArtifactNotFoundException, RegistryStorageException {\n-        Map<String, String> content = getLatestContentMap(artifactId);\n+        Map<String, String> content = getLatestContentMap(artifactId, ArtifactStateExt.ALL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NDM0MQ==", "bodyText": "Is this needed?  Are we actually soft-deleting artifacts in the storage layer?  If so, I think a side effect of this is that a user could delete an artifact by calling \"updateArtifactState\" and passing it DELETE.  Maybe that's ok?", "url": "https://github.com/Apicurio/apicurio-registry/pull/233#discussion_r370144341", "createdAt": "2020-01-23T14:21:10Z", "author": {"login": "EricWittmann"}, "path": "common/src/main/java/io/apicurio/registry/types/ArtifactState.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2019 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.types;\n+\n+/**\n+ * @author Ales Justin\n+ */\n+public enum ArtifactState {\n+\n+    ENABLED,\n+    DISABLED,\n+    DEPRECATED,\n+    DELETED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26afcba8905b2d1c450c6ca2e0e71ceb32a9fca8"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1a282eedb0df6ddebf30a3b02ff208a81fa18b7", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/f1a282eedb0df6ddebf30a3b02ff208a81fa18b7", "committedDate": "2020-01-23T14:06:15Z", "message": "Simplify JPA metadata handling a bit ..."}, "afterCommit": {"oid": "a033c1fdae2a850dc2a74fb4f64ce2f90f987696", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/a033c1fdae2a850dc2a74fb4f64ce2f90f987696", "committedDate": "2020-01-29T11:49:16Z", "message": "Move JPA state into metadata.\nReplace ALL states with null."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd685ebc285c959594ce712322ca64992117cc10", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/cd685ebc285c959594ce712322ca64992117cc10", "committedDate": "2020-01-29T13:05:09Z", "message": "Initial IBM-like states."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87295e9a6ed8c52282b2becefb44e6ad4c453325", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/87295e9a6ed8c52282b2becefb44e6ad4c453325", "committedDate": "2020-01-29T13:05:09Z", "message": "Simplify JPA metadata handling a bit ..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4ab630b0b043c7dfe7804c5d144d73910d97b68", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/e4ab630b0b043c7dfe7804c5d144d73910d97b68", "committedDate": "2020-01-29T13:05:09Z", "message": "Move JPA state into metadata.\nReplace ALL states with null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a033c1fdae2a850dc2a74fb4f64ce2f90f987696", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/a033c1fdae2a850dc2a74fb4f64ce2f90f987696", "committedDate": "2020-01-29T11:49:16Z", "message": "Move JPA state into metadata.\nReplace ALL states with null."}, "afterCommit": {"oid": "e4ab630b0b043c7dfe7804c5d144d73910d97b68", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/e4ab630b0b043c7dfe7804c5d144d73910d97b68", "committedDate": "2020-01-29T13:05:09Z", "message": "Move JPA state into metadata.\nReplace ALL states with null."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d77325da705a35e7f6953fdaeafb3603fd6157cc", "author": {"user": {"login": "alesj", "name": "Ale\u0161 Justin"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/d77325da705a35e7f6953fdaeafb3603fd6157cc", "committedDate": "2020-01-29T14:35:34Z", "message": "Always use just active latest."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3487, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}