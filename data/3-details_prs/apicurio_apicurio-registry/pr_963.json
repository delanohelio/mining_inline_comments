{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMjQ4OTQ3", "number": 963, "title": "Added docs for configuring default global rules", "bodyText": "", "createdAt": "2020-10-29T12:45:12Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/963", "merged": true, "mergeCommit": {"oid": "1f397dc0b5343b5a90c1900fcf2dd0b3f9d9839e"}, "closed": true, "closedAt": "2020-10-30T17:19:30Z", "author": {"login": "EricWittmann"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXRc34gH2gAyNTEyMjQ4OTQ3OmZkMWY0NGM0NWZmZTFlMDk1NDJlZjFhNTEwMjZkMGZjNzUyOGFlOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXqEjogH2gAyNTEyMjQ4OTQ3OmJlY2IzZmQzOTA3N2JiNjYyMmU3MjVjYTNkNjBmOWE5M2JiZWFkZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd1f44c45ffe1e09542ef1a51026d0fc7528ae91", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fd1f44c45ffe1e09542ef1a51026d0fc7528ae91", "committedDate": "2020-10-29T12:37:25Z", "message": "Added docs for configuring default global rules"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzEyMjQ3", "url": "https://github.com/Apicurio/apicurio-registry/pull/963#pullrequestreview-519712247", "createdAt": "2020-10-29T14:17:06Z", "commit": {"oid": "fd1f44c45ffe1e09542ef1a51026d0fc7528ae91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxNzowNlrOHqd9og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxNzowNlrOHqd9og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI5MzE1NA==", "bodyText": "Suggest \"you can configure the application...\" for active voice", "url": "https://github.com/Apicurio/apicurio-registry/pull/963#discussion_r514293154", "createdAt": "2020-10-29T14:17:06Z", "author": {"login": "smccarthy-ie"}, "path": "docs/modules/ROOT/partials/getting-started/con-registry-rules.adoc", "diffHunk": "@@ -27,9 +27,71 @@ NOTE: If no rules are configured for an artifact, the set of currently configure\n \n [id=\"registry-rules-work\"]\n = How rules work\n-Each rule has a name and optional configuration information. The registry storage maintains the list of rules for each artifact and the list of global rules. Each rule in the list consists of a name and a set of configuration properties, which are specific to the rule implementation. \n+Each rule has a name and optional configuration information. The registry storage maintains the list of rules for each artifact and the list of global rules. Each rule in the list consists of a name and a set of configuration properties, which are specific to the rule implementation.\n \n A rule is provided with the content of the current version of the artifact (if one exists) and the new version of the artifact being added. The rule implementation returns true or false depending on whether the artifact passes the rule. If not, the registry reports the reason why in an HTTP error response. Some rules might not use the previous version of the content. For example, compatibility rules use previous versions, but syntax or semantic validity rules do not.\n \n .Additional resources\n For more details, see {registry-rule-types} and {registry-rule-maturity-matrix}.\n+\n+[id=\"registry-rules-config\"]\n+= Configuring rules\n+You can configure rules individually for each artifact, as well as globally.  {registry} applies the rules configured\n+for the specific artifact, but if no rules are configured at that level it applies the globally configured rules.  If\n+no global rules are configured then no rules are applied.\n+\n+== Configuring artifact rules\n+You can configure artifact rules using the REST API or the web console.  See the relevant documentation sections\n+for more information.\n+\n+== Configuring global rules\n+You can configure global rules in several ways:\n+\n+* Use the `/rules` operations in the REST API\n+* Use the web console\n+* Set default global rules using {registry} application properties\n+\n+.Default global rules\n+When deploying {registry} it is possible to configure the application itself to enable or disable global rules.  This", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1f44c45ffe1e09542ef1a51026d0fc7528ae91"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzE0Mzk5", "url": "https://github.com/Apicurio/apicurio-registry/pull/963#pullrequestreview-519714399", "createdAt": "2020-10-29T14:19:08Z", "commit": {"oid": "fd1f44c45ffe1e09542ef1a51026d0fc7528ae91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxOTowOFrOHqeDKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxOTowOFrOHqeDKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI5NDU3MA==", "bodyText": "Suggest \"You can configure these application properties as Java system properties or include them in the Quarkus application.properties file.\" (active voice)", "url": "https://github.com/Apicurio/apicurio-registry/pull/963#discussion_r514294570", "createdAt": "2020-10-29T14:19:08Z", "author": {"login": "smccarthy-ie"}, "path": "docs/modules/ROOT/partials/getting-started/con-registry-rules.adoc", "diffHunk": "@@ -27,9 +27,71 @@ NOTE: If no rules are configured for an artifact, the set of currently configure\n \n [id=\"registry-rules-work\"]\n = How rules work\n-Each rule has a name and optional configuration information. The registry storage maintains the list of rules for each artifact and the list of global rules. Each rule in the list consists of a name and a set of configuration properties, which are specific to the rule implementation. \n+Each rule has a name and optional configuration information. The registry storage maintains the list of rules for each artifact and the list of global rules. Each rule in the list consists of a name and a set of configuration properties, which are specific to the rule implementation.\n \n A rule is provided with the content of the current version of the artifact (if one exists) and the new version of the artifact being added. The rule implementation returns true or false depending on whether the artifact passes the rule. If not, the registry reports the reason why in an HTTP error response. Some rules might not use the previous version of the content. For example, compatibility rules use previous versions, but syntax or semantic validity rules do not.\n \n .Additional resources\n For more details, see {registry-rule-types} and {registry-rule-maturity-matrix}.\n+\n+[id=\"registry-rules-config\"]\n+= Configuring rules\n+You can configure rules individually for each artifact, as well as globally.  {registry} applies the rules configured\n+for the specific artifact, but if no rules are configured at that level it applies the globally configured rules.  If\n+no global rules are configured then no rules are applied.\n+\n+== Configuring artifact rules\n+You can configure artifact rules using the REST API or the web console.  See the relevant documentation sections\n+for more information.\n+\n+== Configuring global rules\n+You can configure global rules in several ways:\n+\n+* Use the `/rules` operations in the REST API\n+* Use the web console\n+* Set default global rules using {registry} application properties\n+\n+.Default global rules\n+When deploying {registry} it is possible to configure the application itself to enable or disable global rules.  This\n+allows configuring of these global rules at installation time without any need for post-install configuration.  You\n+can use the following application property format:\n+\n+`registry.rules.global.<ruleName>`\n+\n+The following rule names are currently supported:\n+\n+* `compatibility`\n+* `validity`\n+\n+The value of the application property must be a valid configuration option that is specific to the rule being\n+configured.  The following is a table of valid values for each rule:\n+\n+[%header,cols=2*]\n+|===\n+|Rule\n+|Value\n+|*Validity*\n+a| `FULL`\n+|\n+a| `SYNTAX_ONLY`\n+|\n+a| `NONE`\n+|*Compatibility*\n+a| `BACKWARD`\n+|\n+a| `BACKWARD_TRANSITIVE`\n+|\n+a| `FORWARD`\n+|\n+a| `FORWARD_TRANSITIVE`\n+|\n+a| `FULL`\n+|\n+a| `FULL_TRANSITIVE`\n+|\n+a| `NONE`\n+|===\n+\n+NOTE: These application properties can be configured as Java system properties or included in the Quarkus\n+`application.properties` file.  See more information about configuring {registry} elsewhere in this\n+documentation and also in https://quarkus.io/guides/config#overriding-properties-at-runtime[Quarkus documentation].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1f44c45ffe1e09542ef1a51026d0fc7528ae91"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b4e7a00f8a0d7acc686fc9fcd42b2f59c01edf", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/c7b4e7a00f8a0d7acc686fc9fcd42b2f59c01edf", "committedDate": "2020-10-29T19:15:34Z", "message": "changes based on review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "becb3fd39077bb6622e725ca3d60f9a93bbeadfb", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/becb3fd39077bb6622e725ca3d60f9a93bbeadfb", "committedDate": "2020-10-30T17:18:29Z", "message": "added feedback from review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4345, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}