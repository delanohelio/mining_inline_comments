{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzM5Mjg1", "number": 815, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTozOTowNVrOEh08_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjoyNzo1OFrOEiF1dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTA2MDQ3OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTozOTowNVrOHPXFFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNzoyMToxNlrOHPmZBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg2ODgyMg==", "bodyText": "I was thinking maybe byte[] or InputStream or ContentHandle here.  Is there something that the okhttp3 class gives us that's better than just plain data?", "url": "https://github.com/Apicurio/apicurio-registry/pull/815#discussion_r485868822", "createdAt": "2020-09-09T19:39:05Z", "author": {"login": "EricWittmann"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -34,7 +34,7 @@\n     ArtifactMetaData createArtifact(ArtifactType xRegistryArtifactType, String xRegistryArtifactId, IfExistsType ifExists, InputStream data);\n \n \n-    Response getLatestArtifact(String artifactId);\n+    ResponseBody getLatestArtifact(String artifactId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0955198fc59541d4755221c8c51817bb50ee1be"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjExOTY4Ng==", "bodyText": "You can get the InputStream from the ResponseBody class and also the content length and type.", "url": "https://github.com/Apicurio/apicurio-registry/pull/815#discussion_r486119686", "createdAt": "2020-09-10T07:21:16Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClient.java", "diffHunk": "@@ -34,7 +34,7 @@\n     ArtifactMetaData createArtifact(ArtifactType xRegistryArtifactType, String xRegistryArtifactId, IfExistsType ifExists, InputStream data);\n \n \n-    Response getLatestArtifact(String artifactId);\n+    ResponseBody getLatestArtifact(String artifactId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg2ODgyMg=="}, "originalCommit": {"oid": "a0955198fc59541d4755221c8c51817bb50ee1be"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTgyNjQ3OnYy", "diffSide": "RIGHT", "path": "utils/maven-plugin/src/main/java/io/apicurio/registry/maven/DownloadRegistryMojo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjoyNzo1OFrOHPxHDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjozNDoxNFrOHPxV9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI5NTMwOA==", "bodyText": "Can you confirm that Files.copy() closes the stream?", "url": "https://github.com/Apicurio/apicurio-registry/pull/815#discussion_r486295308", "createdAt": "2020-09-10T12:27:58Z", "author": {"login": "EricWittmann"}, "path": "utils/maven-plugin/src/main/java/io/apicurio/registry/maven/DownloadRegistryMojo.java", "diffHunk": "@@ -117,17 +116,13 @@ protected void executeInternal() throws MojoExecutionException {\n \n             try {\n                 Integer version = versions.get(id);\n-                Response response = (version != null) ?\n-                                    getClient().getArtifactVersion(version, id) :\n-                                    getClient().getLatestArtifact(id);\n-                try (InputStream stream = response.readEntity(InputStream.class)) {\n-                    if (replaceExisting) {\n-                        Files.copy(stream, outputFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n-                    } else {\n-                        Files.copy(stream, outputFile.toPath());\n-                    }\n-                } finally {\n-                    response.close();\n+                InputStream stream = (version != null) ?\n+                        getClient().getArtifactVersion(version, id) :\n+                        getClient().getLatestArtifact(id);\n+                if (replaceExisting) {\n+                    Files.copy(stream, outputFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n+                } else {\n+                    Files.copy(stream, outputFile.toPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87152617488e37d498160593d80aabbd79f6b3e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI5OTEyNg==", "bodyText": "Good catch, no, it does not close the stream.", "url": "https://github.com/Apicurio/apicurio-registry/pull/815#discussion_r486299126", "createdAt": "2020-09-10T12:34:14Z", "author": {"login": "carlesarnal"}, "path": "utils/maven-plugin/src/main/java/io/apicurio/registry/maven/DownloadRegistryMojo.java", "diffHunk": "@@ -117,17 +116,13 @@ protected void executeInternal() throws MojoExecutionException {\n \n             try {\n                 Integer version = versions.get(id);\n-                Response response = (version != null) ?\n-                                    getClient().getArtifactVersion(version, id) :\n-                                    getClient().getLatestArtifact(id);\n-                try (InputStream stream = response.readEntity(InputStream.class)) {\n-                    if (replaceExisting) {\n-                        Files.copy(stream, outputFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n-                    } else {\n-                        Files.copy(stream, outputFile.toPath());\n-                    }\n-                } finally {\n-                    response.close();\n+                InputStream stream = (version != null) ?\n+                        getClient().getArtifactVersion(version, id) :\n+                        getClient().getLatestArtifact(id);\n+                if (replaceExisting) {\n+                    Files.copy(stream, outputFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n+                } else {\n+                    Files.copy(stream, outputFile.toPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI5NTMwOA=="}, "originalCommit": {"oid": "d87152617488e37d498160593d80aabbd79f6b3e"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3532, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}