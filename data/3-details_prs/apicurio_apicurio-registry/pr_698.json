{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMTgyMTkx", "number": 698, "title": "Implement HTTP Response status code metrics reporting for REST API", "bodyText": "Hi,\nAs part of https://issues.redhat.com/browse/IPT-109, https://issues.redhat.com/browse/IPT-155 I'm trying to come up with a solution on reporting metrics with the response codes status and durations (latencies) in the REST API.\nI've taken a look at the codebase to see how API rest is exposed and this is how I think it works:\nIt seems that metrics in service-registry are reported/exposed using the Microprofile (https://projects.eclipse.org/projects/technology.microprofile) Java library. Metrics are exposed on the /metrics endpoint.\nThe REST Web Services API is exposed using JAX-RS (https://docs.oracle.com/javaee/7/api/javax/ws/rs/package-summary.html) . The REST API is exposed in the /api endpoint.\nBased on this I explored the following approaches:\n\nTrying to use some possible existing construct in Microprofile that reports HTTP metrics. I haven't found any construct to do that. Keep in mind I have never used Microprofile before. Maybe there is something but if there is I haven't found it.\nIt seems using a standard Java interceptor like the one we have for rest metrics RestMetricsInterceptor cannot be used as standard interceptors do not receive detail about HTTP responses\n\nAfter digging a little bit on what could be done a solution that I think might be feasible to implement is making use of ContainerResponseFilter in JAX-RS (https://docs.oracle.com/javaee/7/api/javax/ws/rs/container/ContainerResponseFilter.html)  that seems allows us to filter HTTP Responses.\nThis PR implements reporting 1xx, 2xx, 3xx, 4xx, 5xx response codes counts on requests performed to the REST API. It performs a NameBinding of the ContainerResponseFilter with the RegistryApplication class that I understand contains the entrypoint of the REST API. This means for example that a request to /anotherurl would not be processed by this filter.\nThere are some specificities of the implemented behavior that we should evaluate whether they are in our interest or not:\nI've done a few tests to see when the filter is executed with the current implementation:\n\nWhen a 200 status code is returned the response filter is executed\nWhen a 503 status code is returned the response filter is executed\nWhen a 406 status code is returned (forced for example by sending '-H \"Accept: text/xmsdfdsfl') the response filter is NOT executed. This behavior surprised me\nWhen a 400 status code is returned (forced for example by sending invalid data like -d 'invaliddata') the response filter is executed\nWhen a 404 status code is returned due to a non-existing endpoint has been requested the response filter is NOT executed. I think this behavior is expected as\nwe are only filtering on the existing api rest endpoints. In any case, is this what we want?\nendpoints\nWhen executing a request against /metrics for example, or to /nonexistentpath (which are not inside the api rest code) the response filter is\nNOT executed. I think this behavior is expected as they are not prat of the REST api code. In any case, is this what we want?\n\nI've not tried with other kind of status codes, but it seems that there's some case/s where a request to an existing endpoint is not\nevaluated by the filter for some reason.\nThe implemented metrics format look like this:\nmsoriano@localhost:~/eclipse-workspace/github.com/Apicurio/apicurio-registry (add-rest-api-metrics-response-filter)$ curl localhost:8080/metrics 2>/dev/null| grep -i xx\napplication_rest_response_status_code_total{code=\"4xx\",group=\"REST\",metric=\"rest_response_status_code\"} 2.0\napplication_rest_response_status_code_total{code=\"5xx\",group=\"REST\",metric=\"rest_response_status_code\"} 3.0\n\nThe corresponding metric is created the first time a new status code family type is returned.\nWe could add more tags/labels to the metric or organize different metrics for it. Just keep in mind that depending on what we process and the defined metrics\nthe cardinality of the metrics could increase expontentially so we have to be careful with it, specially if we add a label/metric that might have unbounded values.\nWhat do you think about this implementation approach and the current behavior? let's iterate on this.\nThank you.", "createdAt": "2020-07-17T14:56:43Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/698", "merged": true, "mergeCommit": {"oid": "c417525eef1e48e3ef6f80e4935449bae27a8a8e"}, "closed": true, "closedAt": "2020-08-10T15:05:56Z", "author": {"login": "miguelsorianod"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc11Hw3gFqTQ1MDcyOTE0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8htX_ABqjM2MzI2NTczOTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNzI5MTQ5", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#pullrequestreview-450729149", "createdAt": "2020-07-17T14:57:31Z", "commit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNDo1NzozMVrOGzWURg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNDo1NzozMVrOGzWURg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5NjE5OA==", "bodyText": "This is info now but I think we should change it to debug or just removing it. Leaving it here for the moment until more iteration is done to the PR", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r456496198", "createdAt": "2020-07-17T14:57:31Z", "author": {"login": "miguelsorianod"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.io.IOException;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerResponseFilter {\n+\n+\t@Inject\n+\t@RegistryType(type = APPLICATION)\n+\tMetricRegistry metricRegistry;\n+\n+\tprivate static final Logger log = LoggerFactory.getLogger(RestMetricsResponseFilter.class);\n+\n+\tString REST_RESPONSE_STATUS_CODE_COUNT = \"rest_response_status_code\";\n+\tString REST_RESPONSE_STATUS_CODE_COUNT_DESC = \"Total number of REST HTTP Response Codes across all endpoints.\";\n+\n+\t@Override\n+\tpublic void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)\n+\t\t\tthrows IOException {\n+\t\tlog.info(\"'{} {}'\", requestContext.getMethod(), requestContext.getUriInfo().getRequestUri().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNzM5ODYw", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#pullrequestreview-450739860", "createdAt": "2020-07-17T15:11:10Z", "commit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToxMToxMVrOGzW0vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToxMToxMVrOGzW0vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNDUxMA==", "bodyText": "I would replace the class name by something more meaningful, maybe RegisterStatusCodeResponseFilter.", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r456504510", "createdAt": "2020-07-17T15:11:11Z", "author": {"login": "carlesarnal"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.io.IOException;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerResponseFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNzQxMTY2", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#pullrequestreview-450741166", "createdAt": "2020-07-17T15:12:55Z", "commit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToxMjo1NVrOGzW4hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToxMjo1NVrOGzW4hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNTQ3Nw==", "bodyText": "Same here, I would replace this name by something more related to its behaviour.", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r456505477", "createdAt": "2020-07-17T15:12:55Z", "author": {"login": "carlesarnal"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilteredNameBinding.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.apicurio.registry.metrics;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.ws.rs.NameBinding;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a6762ecac2ee8edee5c938bf8737d553fcab543", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/2a6762ecac2ee8edee5c938bf8737d553fcab543", "committedDate": "2020-07-24T16:15:36Z", "message": "Add rest_http_request_duration Timer metric"}, "afterCommit": {"oid": "6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "committedDate": "2020-07-24T16:42:13Z", "message": "Add rest_http_request_duration Timer metric"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "committedDate": "2020-07-24T16:42:13Z", "message": "Add rest_http_request_duration Timer metric"}, "afterCommit": {"oid": "ced20d68f075223e8c7719c19063e40b407022af", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ced20d68f075223e8c7719c19063e40b407022af", "committedDate": "2020-07-28T15:48:04Z", "message": "Add rest_http_request_duration Timer metric"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTg3NjQ3", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#pullrequestreview-459987647", "createdAt": "2020-08-03T12:33:29Z", "commit": {"oid": "1a6b75bf4120ab8d369eac9e184247fa79498384"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjozMzoyOVrOG63uVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjozNDoyN1rOG63wGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MzU3Mw==", "bodyText": "Can you please add a javadoc comment at the top to explain what this filter is doing?", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464383573", "createdAt": "2020-08-03T12:33:29Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.REST_GROUP_TAG;\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+import static org.eclipse.microprofile.metrics.MetricType.TIMER;\n+\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.smallrye.metrics.app.Clock;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerRequestFilter, ContainerResponseFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a6b75bf4120ab8d369eac9e184247fa79498384"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4NDAyNg==", "bodyText": "After thinking about this more, let's delete this. :) I think it is redundant since we have logging enabled (via annotation) for all the REST implementation classes.", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464384026", "createdAt": "2020-08-03T12:34:27Z", "author": {"login": "EricWittmann"}, "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.io.IOException;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerResponseFilter {\n+\n+\t@Inject\n+\t@RegistryType(type = APPLICATION)\n+\tMetricRegistry metricRegistry;\n+\n+\tprivate static final Logger log = LoggerFactory.getLogger(RestMetricsResponseFilter.class);\n+\n+\tString REST_RESPONSE_STATUS_CODE_COUNT = \"rest_response_status_code\";\n+\tString REST_RESPONSE_STATUS_CODE_COUNT_DESC = \"Total number of REST HTTP Response Codes across all endpoints.\";\n+\n+\t@Override\n+\tpublic void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)\n+\t\t\tthrows IOException {\n+\t\tlog.info(\"'{} {}'\", requestContext.getMethod(), requestContext.getUriInfo().getRequestUri().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5NjE5OA=="}, "originalCommit": {"oid": "bf23b7832e57d9c170086b805bba94705856057f"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26f09442f9bcab109f30113e471be299f4447dd6", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/26f09442f9bcab109f30113e471be299f4447dd6", "committedDate": "2020-08-03T12:39:54Z", "message": "Removed the logger entirely"}, "afterCommit": {"oid": "fe464acf1b60e06487aa5b6bd569d6ee259fa633", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fe464acf1b60e06487aa5b6bd569d6ee259fa633", "committedDate": "2020-08-04T10:00:23Z", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe464acf1b60e06487aa5b6bd569d6ee259fa633", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fe464acf1b60e06487aa5b6bd569d6ee259fa633", "committedDate": "2020-08-04T10:00:23Z", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes"}, "afterCommit": {"oid": "ebefd6f108631ddf673430b9a6520bfabcb7beaa", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ebefd6f108631ddf673430b9a6520bfabcb7beaa", "committedDate": "2020-08-04T10:22:32Z", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "568d7fe47c8658f53fb55e4f32d0acbb900805bb", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/568d7fe47c8658f53fb55e4f32d0acbb900805bb", "committedDate": "2020-08-07T10:17:48Z", "message": "Implement HTTP Response status code metrics reporting\n\nIt is done through a JAX-RS ContainerResponseFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "884f0bebe617933e86c60f8cc1500c98c55030d6", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/884f0bebe617933e86c60f8cc1500c98c55030d6", "committedDate": "2020-08-07T10:17:48Z", "message": "Rename rest_response_status_code metric to rest_http_requests_total"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c701539e9d9bd9d0ae3b44652e282df0aeca97d", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/0c701539e9d9bd9d0ae3b44652e282df0aeca97d", "committedDate": "2020-08-07T10:17:48Z", "message": "Add method and endpoint information to rest_http_requests_total metric\n\nAlso rename some fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68bafebf86905b6d881f2fe007940e36d9a9eb03", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/68bafebf86905b6d881f2fe007940e36d9a9eb03", "committedDate": "2020-08-07T10:17:48Z", "message": "Add rest_http_request_duration Timer metric"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbeb737d4a624b3052dc66cf6c18d8240e4b54f9", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fbeb737d4a624b3052dc66cf6c18d8240e4b54f9", "committedDate": "2020-08-07T10:17:48Z", "message": "Update RestMetricsResponseFilter.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2d0e0cbba7ca8810b5cb02b73f3ae06012ad356", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/b2d0e0cbba7ca8810b5cb02b73f3ae06012ad356", "committedDate": "2020-08-07T10:17:48Z", "message": "Update RestMetricsResponseFilteredNameBinding.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "486a231f5a287c081fd3886250dd6e34b6ccbefd", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/486a231f5a287c081fd3886250dd6e34b6ccbefd", "committedDate": "2020-08-07T10:17:48Z", "message": "Remove logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98f35122eef4bacf0ab2b65064a8aa2307e34e4a", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/98f35122eef4bacf0ab2b65064a8aa2307e34e4a", "committedDate": "2020-08-07T10:17:48Z", "message": "Update RestMetricsResponseFilter.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b698fabd2f13f58f0256ba15ad0edd7df74e1a3", "author": {"user": {"login": "EricWittmann", "name": "Eric Wittmann"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/3b698fabd2f13f58f0256ba15ad0edd7df74e1a3", "committedDate": "2020-08-07T10:17:48Z", "message": "Removed the logger entirely"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cae9df4fa5f4e1ff1674239f6338dd5d4f76cae", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/9cae9df4fa5f4e1ff1674239f6338dd5d4f76cae", "committedDate": "2020-08-07T10:17:48Z", "message": "Apply auto-format on RestMetricsResponseFilter class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ef2a9a84702758d369ae85fb35e1adfdb979d9", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/26ef2a9a84702758d369ae85fb35e1adfdb979d9", "committedDate": "2020-08-07T10:17:48Z", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebefd6f108631ddf673430b9a6520bfabcb7beaa", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ebefd6f108631ddf673430b9a6520bfabcb7beaa", "committedDate": "2020-08-04T10:22:32Z", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes"}, "afterCommit": {"oid": "26ef2a9a84702758d369ae85fb35e1adfdb979d9", "author": {"user": {"login": "miguelsorianod", "name": "Miguel Soriano"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/26ef2a9a84702758d369ae85fb35e1adfdb979d9", "committedDate": "2020-08-07T10:17:48Z", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4470, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}