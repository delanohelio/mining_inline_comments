{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDQ0NjM5", "number": 845, "title": "Add TLS auth support to rest client calls", "bodyText": "This commit adds support for HTTPS calls to apicurio-registry with or\nwithout TLS client auth. Supported configuration keys are:\n\napicurio.registry.request.ssl.truststore.location\napicurio.registry.request.ssl.truststore.password\napicurio.registry.request.ssl.truststore.type\napicurio.registry.request.ssl.keystore.location\napicurio.registry.request.ssl.keystore.password\napicurio.registry.request.ssl.keystore.type\napicurio.registry.request.ssl.key.password\n\n\nIt also refactors the request header handling code to move it out of\nthe serdes code and into the RegistryRestClient, so all clients can use\nit. This includes the basic auth handling for when the username and\npassword are encoded in the URL.\n\nSigned-off-by: Andrew Borley borley@uk.ibm.com", "createdAt": "2020-09-16T14:49:26Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/845", "merged": true, "mergeCommit": {"oid": "dcebb3738a8cc840011660d0827da34f643eed29"}, "closed": true, "closedAt": "2020-09-17T11:30:47Z", "author": {"login": "ajborley"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJe0JkABqjM3NzQwMjczODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJtQqggH2gAyNDg4MDQ0NjM5OjUwZjViZWVmNjY0NDlhOGJjMTNhMDE2YTkyY2MwNmU5NjZjYjVmMGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "066f3d8148e5ba53d95ae662c0d5811415406a00", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/066f3d8148e5ba53d95ae662c0d5811415406a00", "committedDate": "2020-09-16T13:31:32Z", "message": "Add TLS auth support to rest client calls\n\n - This commit adds support for HTTPS calls to apicurio-registry with or\nwithout TLS client auth. Supported configuration keys are:\n   - `apicurio.registry.request.ssl.truststore.location`\n   - `apicurio.registry.request.ssl.truststore.password`\n   - `apicurio.registry.request.ssl.truststore.type`\n   - `apicurio.registry.request.ssl.keystore.location`\n   - `apicurio.registry.request.ssl.keystore.password`\n   - `apicurio.registry.request.ssl.keystore.type`\n   - `apicurio.registry.request.ssl.key.password`\n - It also refactors the request header handling code to move it out of\nthe serdes code and into the RegistryRestClient, so all clients can use\nit. This includes the basic auth handling for when the username and\npassword are encoded in the URL.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "fffc888c18a47ae704d0b43413604fa38ce01baf", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fffc888c18a47ae704d0b43413604fa38ce01baf", "committedDate": "2020-09-16T16:16:27Z", "message": "Add TLS auth support to rest client calls\n\n - This commit adds support for HTTPS calls to apicurio-registry with or\nwithout TLS client auth. Supported configuration keys are:\n   - `apicurio.registry.request.ssl.truststore.location`\n   - `apicurio.registry.request.ssl.truststore.password`\n   - `apicurio.registry.request.ssl.truststore.type`\n   - `apicurio.registry.request.ssl.keystore.location`\n   - `apicurio.registry.request.ssl.keystore.password`\n   - `apicurio.registry.request.ssl.keystore.type`\n   - `apicurio.registry.request.ssl.key.password`\n - It also refactors the request header handling code to move it out of\nthe serdes code and into the RegistryRestClient, so all clients can use\nit. This includes the basic auth handling for when the username and\npassword are encoded in the URL.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5ODQ1MjI2", "url": "https://github.com/Apicurio/apicurio-registry/pull/845#pullrequestreview-489845226", "createdAt": "2020-09-16T17:30:06Z", "commit": {"oid": "fffc888c18a47ae704d0b43413604fa38ce01baf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5308a5918ceedad6576250c4608a2eb0e0ce48", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ec5308a5918ceedad6576250c4608a2eb0e0ce48", "committedDate": "2020-09-16T21:13:43Z", "message": "Add TLS auth support to rest client calls\n\n - This commit adds support for HTTPS calls to apicurio-registry with or\nwithout TLS client auth. Supported configuration keys are:\n   - `apicurio.registry.request.ssl.truststore.location`\n   - `apicurio.registry.request.ssl.truststore.password`\n   - `apicurio.registry.request.ssl.truststore.type`\n   - `apicurio.registry.request.ssl.keystore.location`\n   - `apicurio.registry.request.ssl.keystore.password`\n   - `apicurio.registry.request.ssl.keystore.type`\n   - `apicurio.registry.request.ssl.key.password`\n - It also refactors the request header handling code to move it out of\nthe serdes code and into the RegistryRestClient, so all clients can use\nit. This includes the basic auth handling for when the username and\npassword are encoded in the URL.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fffc888c18a47ae704d0b43413604fa38ce01baf", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/fffc888c18a47ae704d0b43413604fa38ce01baf", "committedDate": "2020-09-16T16:16:27Z", "message": "Add TLS auth support to rest client calls\n\n - This commit adds support for HTTPS calls to apicurio-registry with or\nwithout TLS client auth. Supported configuration keys are:\n   - `apicurio.registry.request.ssl.truststore.location`\n   - `apicurio.registry.request.ssl.truststore.password`\n   - `apicurio.registry.request.ssl.truststore.type`\n   - `apicurio.registry.request.ssl.keystore.location`\n   - `apicurio.registry.request.ssl.keystore.password`\n   - `apicurio.registry.request.ssl.keystore.type`\n   - `apicurio.registry.request.ssl.key.password`\n - It also refactors the request header handling code to move it out of\nthe serdes code and into the RegistryRestClient, so all clients can use\nit. This includes the basic auth handling for when the username and\npassword are encoded in the URL.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "ec5308a5918ceedad6576250c4608a2eb0e0ce48", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/ec5308a5918ceedad6576250c4608a2eb0e0ce48", "committedDate": "2020-09-16T21:13:43Z", "message": "Add TLS auth support to rest client calls\n\n - This commit adds support for HTTPS calls to apicurio-registry with or\nwithout TLS client auth. Supported configuration keys are:\n   - `apicurio.registry.request.ssl.truststore.location`\n   - `apicurio.registry.request.ssl.truststore.password`\n   - `apicurio.registry.request.ssl.truststore.type`\n   - `apicurio.registry.request.ssl.keystore.location`\n   - `apicurio.registry.request.ssl.keystore.password`\n   - `apicurio.registry.request.ssl.keystore.type`\n   - `apicurio.registry.request.ssl.key.password`\n - It also refactors the request header handling code to move it out of\nthe serdes code and into the RegistryRestClient, so all clients can use\nit. This includes the basic auth handling for when the username and\npassword are encoded in the URL.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzAxMDIx", "url": "https://github.com/Apicurio/apicurio-registry/pull/845#pullrequestreview-490301021", "createdAt": "2020-09-17T07:09:10Z", "commit": {"oid": "ec5308a5918ceedad6576250c4608a2eb0e0ce48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzowOToxMFrOHTUW-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzowOToxMFrOHTUW-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAxODU1Mw==", "bodyText": "Maybe these checks could be extracted to separated methods?", "url": "https://github.com/Apicurio/apicurio-registry/pull/845#discussion_r490018553", "createdAt": "2020-09-17T07:09:10Z", "author": {"login": "carlesarnal"}, "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "diffHunk": "@@ -79,31 +112,84 @@\n         initServices(retrofit);\n     }\n \n-    RegistryRestClientImpl(String baseUrl, Map<String, String> headers) {\n-        if (!baseUrl.endsWith(\"/\")) {\n-            baseUrl += \"/\";\n-        }\n+    private static OkHttpClient createHttpClientWithConfig(String baseUrl, Map<String, Object> configs) {\n+        OkHttpClient.Builder okHttpClientBuilder = new OkHttpClient.Builder();\n+        okHttpClientBuilder = addHeaders(okHttpClientBuilder, baseUrl, configs);\n+        okHttpClientBuilder = addSSL(okHttpClientBuilder, configs);\n+        return okHttpClientBuilder.build();\n+    }\n \n-        final OkHttpClient okHttpClient = createWithHeaders(headers);\n+    private static OkHttpClient.Builder addHeaders(OkHttpClient.Builder okHttpClientBuilder, String baseUrl, Map<String, Object> configs) {\n \n-        this.retrofit = new Retrofit.Builder()\n-                .client(okHttpClient)\n-                .addConverterFactory(JacksonConverterFactory.create())\n-                .baseUrl(baseUrl)\n-                .build();\n+        Map<String, String> requestHeaders = configs.entrySet().stream()\n+            .filter(map -> map.getKey().startsWith(REGISTRY_REQUEST_HEADERS_PREFIX))\n+            .collect(Collectors.toMap(map -> map.getKey()\n+                .replace(REGISTRY_REQUEST_HEADERS_PREFIX, \"\"), map -> map.getValue().toString()));\n \n-        this.requestHandler = new RequestHandler();\n+        if(!requestHeaders.containsKey(\"Authorization\")) {\n+            // Check if url includes user/password\n+            // and add auth header if it does\n+            HttpUrl url = HttpUrl.parse(baseUrl);\n+            String user = url.encodedUsername();\n+            String pwd = url.encodedPassword();\n+            if (user != null && !user.isEmpty()) {\n+                String credentials = Credentials.basic(user, pwd);\n+                requestHeaders.put(\"Authorization\", credentials);\n+            }\n+        }\n \n-        initServices(retrofit);\n+        if(!requestHeaders.isEmpty()) {\n+            final Interceptor headersInterceptor = new HeadersInterceptor(requestHeaders);\n+            return okHttpClientBuilder.addInterceptor(headersInterceptor);\n+        } else {\n+            return okHttpClientBuilder;\n+        }\n     }\n \n-    private static OkHttpClient createWithHeaders(Map<String, String> headers) {\n-\n-        final Interceptor headersInterceptor = new HeadersInterceptor(headers);\n-\n-        return new OkHttpClient.Builder()\n-                .addInterceptor(headersInterceptor)\n-                .build();\n+    private static OkHttpClient.Builder addSSL(OkHttpClient.Builder okHttpClientBuilder, Map<String, Object> configs) {\n+\n+        try {\n+            KeyManager[] keyManagers = null;\n+            TrustManager[] trustManagers = null;\n+\n+            if (configs.containsKey(REGISTRY_REQUEST_KEYSTORE_LOCATION)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5308a5918ceedad6576250c4608a2eb0e0ce48"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzAyNzMz", "url": "https://github.com/Apicurio/apicurio-registry/pull/845#pullrequestreview-490302733", "createdAt": "2020-09-17T07:11:44Z", "commit": {"oid": "ec5308a5918ceedad6576250c4608a2eb0e0ce48"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50f5beef66449a8bc13a016a92cc06e966cb5f0a", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/50f5beef66449a8bc13a016a92cc06e966cb5f0a", "committedDate": "2020-09-17T09:06:29Z", "message": "Address review comments\n\n - Refactor the `addSSL` method to separate out the KeyManager and\nTrustManager retrieval.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4437, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}