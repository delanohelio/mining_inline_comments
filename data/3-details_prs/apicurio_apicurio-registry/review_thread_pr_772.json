{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NzQ1Nzk3", "number": 772, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1NjoyOVrOEZ_XZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1OTowNVrOEZ_b_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Njg4MDM4OnYy", "diffSide": "RIGHT", "path": "storage/streams/src/main/java/io/apicurio/registry/streams/StreamsRegistryStorage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1NjoyOVrOHDIoDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1Nzo1MVrOHDIsGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0OTEwMA==", "bodyText": "Perhaps extract these Submitter::submitMetadata calls into new method -- so we have this (cryptic parameters :-)) in one place.\n(same for Kafka storage)", "url": "https://github.com/Apicurio/apicurio-registry/pull/772#discussion_r473049100", "createdAt": "2020-08-19T13:56:29Z", "author": {"login": "alesj"}, "path": "storage/streams/src/main/java/io/apicurio/registry/streams/StreamsRegistryStorage.java", "diffHunk": "@@ -411,6 +435,15 @@ public StoredArtifact getArtifact(String artifactId) throws ArtifactNotFoundExce\n                        });\n     }\n \n+\n+    @Override\n+    public CompletionStage<ArtifactMetaDataDto> updateArtifactWithMetadata(String artifactId, ArtifactType artifactType, ContentHandle content, EditableArtifactMetaDataDto metaData) throws ArtifactAlreadyExistsException, RegistryStorageException {\n+        return updateArtifact(artifactId, artifactType, content)\n+            .thenCompose(amdd -> submitter.submitMetadata(Str.ActionType.UPDATE, artifactId, -1, metaData.getName(), metaData.getDescription(), metaData.getLabels())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a167486080e1d75213fc5826a0149f29a00d5da3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MDEzNw==", "bodyText": "Otoh, it won't fix the cryptic params stuff or add any extra value ... so you can leave it.", "url": "https://github.com/Apicurio/apicurio-registry/pull/772#discussion_r473050137", "createdAt": "2020-08-19T13:57:51Z", "author": {"login": "alesj"}, "path": "storage/streams/src/main/java/io/apicurio/registry/streams/StreamsRegistryStorage.java", "diffHunk": "@@ -411,6 +435,15 @@ public StoredArtifact getArtifact(String artifactId) throws ArtifactNotFoundExce\n                        });\n     }\n \n+\n+    @Override\n+    public CompletionStage<ArtifactMetaDataDto> updateArtifactWithMetadata(String artifactId, ArtifactType artifactType, ContentHandle content, EditableArtifactMetaDataDto metaData) throws ArtifactAlreadyExistsException, RegistryStorageException {\n+        return updateArtifact(artifactId, artifactType, content)\n+            .thenCompose(amdd -> submitter.submitMetadata(Str.ActionType.UPDATE, artifactId, -1, metaData.getName(), metaData.getDescription(), metaData.getLabels())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0OTEwMA=="}, "originalCommit": {"oid": "a167486080e1d75213fc5826a0149f29a00d5da3"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Njg5MjE0OnYy", "diffSide": "RIGHT", "path": "app/src/test/java/io/apicurio/registry/ibmcompat/IBMCompatApiTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1OTowNVrOHDIvrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDoxMDoxMFrOHDJObQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTA1Mg==", "bodyText": "I just got bitten by this :-)\nSo I know why it is set to 200 ... but I have a better fix. ;-)", "url": "https://github.com/Apicurio/apicurio-registry/pull/772#discussion_r473051052", "createdAt": "2020-08-19T13:59:05Z", "author": {"login": "alesj"}, "path": "app/src/test/java/io/apicurio/registry/ibmcompat/IBMCompatApiTest.java", "diffHunk": "@@ -89,6 +89,7 @@ public void testGetSchemas() throws Exception {\n         // Get the list of artifacts via ibmcompat API\n         List<SchemaListItem> schemas = given()\n             .when()\n+                .param(\"per_page\", 200)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a167486080e1d75213fc5826a0149f29a00d5da3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1NjA4NQ==", "bodyText": "I definitely prefer your fix \ud83d\ude42 thanks for sorting that out.", "url": "https://github.com/Apicurio/apicurio-registry/pull/772#discussion_r473056085", "createdAt": "2020-08-19T14:06:16Z", "author": {"login": "ajborley"}, "path": "app/src/test/java/io/apicurio/registry/ibmcompat/IBMCompatApiTest.java", "diffHunk": "@@ -89,6 +89,7 @@ public void testGetSchemas() throws Exception {\n         // Get the list of artifacts via ibmcompat API\n         List<SchemaListItem> schemas = given()\n             .when()\n+                .param(\"per_page\", 200)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTA1Mg=="}, "originalCommit": {"oid": "a167486080e1d75213fc5826a0149f29a00d5da3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1ODkyNQ==", "bodyText": "I found it running with -Pinfinispan, where -Pstreams didn't fail for me ... go figure :-)", "url": "https://github.com/Apicurio/apicurio-registry/pull/772#discussion_r473058925", "createdAt": "2020-08-19T14:10:10Z", "author": {"login": "alesj"}, "path": "app/src/test/java/io/apicurio/registry/ibmcompat/IBMCompatApiTest.java", "diffHunk": "@@ -89,6 +89,7 @@ public void testGetSchemas() throws Exception {\n         // Get the list of artifacts via ibmcompat API\n         List<SchemaListItem> schemas = given()\n             .when()\n+                .param(\"per_page\", 200)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTA1Mg=="}, "originalCommit": {"oid": "a167486080e1d75213fc5826a0149f29a00d5da3"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3337, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}