{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDUyMDg3", "number": 524, "title": "tests - add env var to be able to manage tests invocation", "bodyText": "This is needed for QE CI so tests metadata reporting will work properly, currently every test is run twice because is run with two variants of the registry client. I added a new env var to be able to control this so tests in QE CI are not executed twice", "createdAt": "2020-05-24T18:35:43Z", "url": "https://github.com/Apicurio/apicurio-registry/pull/524", "merged": true, "mergeCommit": {"oid": "e3757d52cc264bbabd6e280f1c20329e71d5776f"}, "closed": true, "closedAt": "2020-05-26T12:56:18Z", "author": {"login": "famartinrh"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckwHnXgFqTQxNzcxMjcxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclEOAeAFqTQxODI2ODU4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzEyNzE3", "url": "https://github.com/Apicurio/apicurio-registry/pull/524#pullrequestreview-417712717", "createdAt": "2020-05-25T13:31:07Z", "commit": {"oid": "913490eb484fe6db67d0d7f246dec9556d0a3e8b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzozMTowN1rOGaBO0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzozMTowN1rOGaBO0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzNjMzNg==", "bodyText": "Can you make \"all\" one of the java constants along with \"create\" and \"cached\"?", "url": "https://github.com/Apicurio/apicurio-registry/pull/524#discussion_r429936336", "createdAt": "2020-05-25T13:31:07Z", "author": {"login": "EricWittmann"}, "path": "utils/tests/src/main/java/io/apicurio/registry/utils/tests/RegistryServiceExtension.java", "diffHunk": "@@ -89,21 +93,34 @@ public boolean supportsTestTemplate(ExtensionContext context) {\n         String registryUrl = TestUtils.getRegistryUrl(rst);\n \n         ExtensionContext.Store store = context.getStore(ExtensionContext.Namespace.GLOBAL);\n-        RegistryServiceWrapper plain = store.getOrComputeIfAbsent(\n-            \"plain_client\",\n-            k -> new RegistryServiceWrapper(k, \"create\", registryUrl),\n-            RegistryServiceWrapper.class\n-        );\n-        RegistryServiceWrapper cached = store.getOrComputeIfAbsent(\n-            \"cached_client\",\n-            k -> new RegistryServiceWrapper(k, \"cached\", registryUrl),\n-            RegistryServiceWrapper.class\n-        );\n-\n-        return Stream.of(\n-            new RegistryServiceTestTemplateInvocationContext(plain),\n-            new RegistryServiceTestTemplateInvocationContext(cached)\n-        );\n+\n+        List<TestTemplateInvocationContext> invocationCtxts = new ArrayList<>();\n+\n+        if (testRegistryClient(REGISTRY_CLIENT_CREATE)) {\n+            RegistryServiceWrapper plain = store.getOrComputeIfAbsent(\n+                    \"plain_client\",\n+                    k -> new RegistryServiceWrapper(k, REGISTRY_CLIENT_CREATE, registryUrl),\n+                    RegistryServiceWrapper.class\n+                );\n+            invocationCtxts.add(new RegistryServiceTestTemplateInvocationContext(plain));\n+        }\n+\n+        if (testRegistryClient(REGISTRY_CLIENT_CACHED)) {\n+            RegistryServiceWrapper cached = store.getOrComputeIfAbsent(\n+                    \"cached_client\",\n+                    k -> new RegistryServiceWrapper(k, REGISTRY_CLIENT_CACHED, registryUrl),\n+                    RegistryServiceWrapper.class\n+                );\n+            invocationCtxts.add(new RegistryServiceTestTemplateInvocationContext(cached));\n+        }\n+\n+        return invocationCtxts.stream();\n+    }\n+\n+    private boolean testRegistryClient(String clientType) {\n+        String testRegistryClients = TestUtils.getTestRegistryClients();\n+        return testRegistryClients == null || testRegistryClients.equalsIgnoreCase(\"all\")\n+                || testRegistryClients.equalsIgnoreCase(clientType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913490eb484fe6db67d0d7f246dec9556d0a3e8b"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7361c1cd78c82838e728e204a3bb4467e5937f3", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/c7361c1cd78c82838e728e204a3bb4467e5937f3", "committedDate": "2020-05-25T13:35:22Z", "message": "tests - add env var to be able to manage tests invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cef2dd06dbfbd9638df6bd49dbece5af57bfa9c8", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/cef2dd06dbfbd9638df6bd49dbece5af57bfa9c8", "committedDate": "2020-05-25T13:35:22Z", "message": "add all to constants"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "913490eb484fe6db67d0d7f246dec9556d0a3e8b", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/913490eb484fe6db67d0d7f246dec9556d0a3e8b", "committedDate": "2020-05-24T18:30:07Z", "message": "tests - add env var to be able to manage tests invocation"}, "afterCommit": {"oid": "cef2dd06dbfbd9638df6bd49dbece5af57bfa9c8", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/Apicurio/apicurio-registry/commit/cef2dd06dbfbd9638df6bd49dbece5af57bfa9c8", "committedDate": "2020-05-25T13:35:22Z", "message": "add all to constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjY4NTg4", "url": "https://github.com/Apicurio/apicurio-registry/pull/524#pullrequestreview-418268588", "createdAt": "2020-05-26T12:56:12Z", "commit": {"oid": "cef2dd06dbfbd9638df6bd49dbece5af57bfa9c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4508, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}