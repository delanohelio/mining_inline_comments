{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjAwODgy", "number": 619, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1NDo1MlrOEPN65w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzowMToxOVrOEPOETw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzkyMTY3OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/LocationEntity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1NDo1MlrOGyz4CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMDo0Nzo0NVrOGzyP1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMTkxMg==", "bodyText": "Suggesting Google naming convention: timestamp fields ending with _time. Could you make sure other PR's follow this convention for consistency also\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Column(\n          \n          \n            \n                  name = \"created\",\n          \n          \n            \n                  insertable = false,\n          \n          \n            \n                  updatable = false,\n          \n          \n            \n                  columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n          \n          \n            \n              private Timestamp created;\n          \n          \n            \n              @Column(\n          \n          \n            \n                  name = \"created_time\",\n          \n          \n            \n                  insertable = false,\n          \n          \n            \n                  updatable = false,\n          \n          \n            \n                  columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n          \n          \n            \n              private Timestamp createdTime;", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455931912", "createdAt": "2020-07-16T16:54:52Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/LocationEntity.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"locations\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class LocationEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @Column(name = \"custom_id\", columnDefinition = \"VARCHAR(255)\")\n+  private String customId;\n+\n+  @Column(name = \"status\")\n+  private String status;\n+\n+  @Column(name = \"name\")\n+  private String name;\n+\n+  @Column(name = \"description\")\n+  private String description;\n+\n+  @Column(name = \"is_default\")\n+  private String isdefault;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxODA4Mw==", "bodyText": "We named the fields as created_timestamp, modified_timestamp in earlier PR's but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456218083", "createdAt": "2020-07-17T04:56:07Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/LocationEntity.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"locations\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class LocationEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @Column(name = \"custom_id\", columnDefinition = \"VARCHAR(255)\")\n+  private String customId;\n+\n+  @Column(name = \"status\")\n+  private String status;\n+\n+  @Column(name = \"name\")\n+  private String name;\n+\n+  @Column(name = \"description\")\n+  private String description;\n+\n+  @Column(name = \"is_default\")\n+  private String isdefault;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMTkxMg=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1MzgxNA==", "bodyText": "Ok, I understand.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456953814", "createdAt": "2020-07-19T20:47:45Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/LocationEntity.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"locations\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class LocationEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @Column(name = \"custom_id\", columnDefinition = \"VARCHAR(255)\")\n+  private String customId;\n+\n+  @Column(name = \"status\")\n+  private String status;\n+\n+  @Column(name = \"name\")\n+  private String name;\n+\n+  @Column(name = \"description\")\n+  private String description;\n+\n+  @Column(name = \"is_default\")\n+  private String isdefault;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMTkxMg=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzkyNTI4OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SiteEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1NTo1MFrOGyz6YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo1NjoyOFrOGzFWIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMjUxMw==", "bodyText": "similar comment as above", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455932513", "createdAt": "2020-07-16T16:55:50Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SiteEntity.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"sites\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SiteEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.ALL)\n+  @JoinColumn(name = \"location_id\", insertable = true, updatable = true)\n+  private LocationEntity location;\n+\n+  @Column(name = \"status\", length = 100)\n+  private Integer status;\n+\n+  @Column(name = \"target_enrollment\", length = 100)\n+  private Integer targetEnrollment;\n+\n+  @Column(name = \"name\", length = 100)\n+  private String name;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxODE0Nw==", "bodyText": "We named the fields as created_timestamp, modified_timestamp but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456218147", "createdAt": "2020-07-17T04:56:28Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SiteEntity.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"sites\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SiteEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.ALL)\n+  @JoinColumn(name = \"location_id\", insertable = true, updatable = true)\n+  private LocationEntity location;\n+\n+  @Column(name = \"status\", length = 100)\n+  private Integer status;\n+\n+  @Column(name = \"target_enrollment\", length = 100)\n+  private Integer targetEnrollment;\n+\n+  @Column(name = \"name\", length = 100)\n+  private String name;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMjUxMw=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzkyNjE5OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SiteEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1NjowN1rOGyz67g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo1Njo0MFrOGzFWVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMjY1NA==", "bodyText": "modified_time", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455932654", "createdAt": "2020-07-16T16:56:07Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SiteEntity.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"sites\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SiteEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.ALL)\n+  @JoinColumn(name = \"location_id\", insertable = true, updatable = true)\n+  private LocationEntity location;\n+\n+  @Column(name = \"status\", length = 100)\n+  private Integer status;\n+\n+  @Column(name = \"target_enrollment\", length = 100)\n+  private Integer targetEnrollment;\n+\n+  @Column(name = \"name\", length = 100)\n+  private String name;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;\n+\n+  @Column(name = \"created_by\", length = 64)\n+  private String createdBy;\n+\n+  @Column(\n+      name = \"modified\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\")\n+  private Timestamp modified;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxODE5Ng==", "bodyText": "We named the fields as created_timestamp, modified_timestamp but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456218196", "createdAt": "2020-07-17T04:56:40Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SiteEntity.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"sites\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SiteEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.ALL)\n+  @JoinColumn(name = \"location_id\", insertable = true, updatable = true)\n+  private LocationEntity location;\n+\n+  @Column(name = \"status\", length = 100)\n+  private Integer status;\n+\n+  @Column(name = \"target_enrollment\", length = 100)\n+  private Integer targetEnrollment;\n+\n+  @Column(name = \"name\", length = 100)\n+  private String name;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;\n+\n+  @Column(name = \"created_by\", length = 64)\n+  private String createdBy;\n+\n+  @Column(\n+      name = \"modified\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\")\n+  private Timestamp modified;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMjY1NA=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzkyNzQ4OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SitePermissionEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1NjoyOFrOGyz7ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo1Njo1N1rOGzFWlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMjg1OA==", "bodyText": "created_time\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Column(\n          \n          \n            \n                  name = \"created\",\n          \n          \n            \n                  insertable = false,\n          \n          \n            \n                  updatable = false,\n          \n          \n            \n                  columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n          \n          \n            \n              private Timestamp created;\n          \n          \n            \n              @Column(\n          \n          \n            \n                  name = \"created_time\",\n          \n          \n            \n                  insertable = false,\n          \n          \n            \n                  updatable = false,\n          \n          \n            \n                  columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n          \n          \n            \n              private Timestamp createdTime;", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455932858", "createdAt": "2020-07-16T16:56:28Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SitePermissionEntity.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Table(name = \"sites_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SitePermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\", insertable = true, updatable = true)\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"site_id\")\n+  private SiteEntity site;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer canEdit;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxODI2MQ==", "bodyText": "We named the fields as created_timestamp, modified_timestamp but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456218261", "createdAt": "2020-07-17T04:56:57Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SitePermissionEntity.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Table(name = \"sites_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SitePermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\", insertable = true, updatable = true)\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"site_id\")\n+  private SiteEntity site;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer canEdit;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMjg1OA=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzkzODQzOnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1OToyOFrOGy0Cvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo1NzowNlrOGzFWtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNDY1NQ==", "bodyText": "similar suggestion as above", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455934655", "createdAt": "2020-07-16T16:59:28Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"ur_admin_user\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class UserRegAdminEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8686769972691178223L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"email\")\n+  private String email;\n+\n+  @Column(name = \"ur_admin_auth_id\")\n+  private String urAdminAuthId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"phone_number\")\n+  private String phoneNumber;\n+\n+  @Column(name = \"email_changed\")\n+  private Integer emailChanged;\n+\n+  @ToString.Exclude\n+  @Column(name = \"status\")\n+  private Integer status;\n+\n+  @ToString.Exclude\n+  @Column(name = \"super_admin\")\n+  private Boolean superAdmin;\n+\n+  @Column(name = \"manage_locations\")\n+  private Integer manageLocations;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxODI5NQ==", "bodyText": "We named the fields as created_timestamp, modified_timestamp but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456218295", "createdAt": "2020-07-17T04:57:06Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"ur_admin_user\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class UserRegAdminEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8686769972691178223L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"email\")\n+  private String email;\n+\n+  @Column(name = \"ur_admin_auth_id\")\n+  private String urAdminAuthId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"phone_number\")\n+  private String phoneNumber;\n+\n+  @Column(name = \"email_changed\")\n+  private Integer emailChanged;\n+\n+  @ToString.Exclude\n+  @Column(name = \"status\")\n+  private Integer status;\n+\n+  @ToString.Exclude\n+  @Column(name = \"super_admin\")\n+  private Boolean superAdmin;\n+\n+  @Column(name = \"manage_locations\")\n+  private Integer manageLocations;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNDY1NQ=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Mzk0MjgyOnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzowMDozNlrOGy0FfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo1MDozNFrOG0IGGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNTM1Ng==", "bodyText": "What is the Integer value supposed to represent here? We need a better name for this field.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455935356", "createdAt": "2020-07-16T17:00:36Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"ur_admin_user\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class UserRegAdminEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8686769972691178223L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"email\")\n+  private String email;\n+\n+  @Column(name = \"ur_admin_auth_id\")\n+  private String urAdminAuthId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"phone_number\")\n+  private String phoneNumber;\n+\n+  @Column(name = \"email_changed\")\n+  private Integer emailChanged;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2MTUxMQ==", "bodyText": "@Kantharajut-btc I saw that you have changed this field to boolean. I just wanted to understand the meaning for this field and why we are keeping track of it. I saw this field included in the ERD in the tech design doc, but not any mention of why we are keeping track of this value specifically for UR admins?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r456961511", "createdAt": "2020-07-19T22:10:17Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"ur_admin_user\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class UserRegAdminEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8686769972691178223L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"email\")\n+  private String email;\n+\n+  @Column(name = \"ur_admin_auth_id\")\n+  private String urAdminAuthId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"phone_number\")\n+  private String phoneNumber;\n+\n+  @Column(name = \"email_changed\")\n+  private Integer emailChanged;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNTM1Ng=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMxMTc2OQ==", "bodyText": "This column will maintain the track of registered email id modified", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r457311769", "createdAt": "2020-07-20T11:50:34Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserRegAdminEntity.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"ur_admin_user\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class UserRegAdminEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8686769972691178223L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"email\")\n+  private String email;\n+\n+  @Column(name = \"ur_admin_auth_id\")\n+  private String urAdminAuthId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"phone_number\")\n+  private String phoneNumber;\n+\n+  @Column(name = \"email_changed\")\n+  private Integer emailChanged;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNTM1Ng=="}, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Mzk0NTc1OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SitePermissionEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzowMToxOVrOGy0HVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzowMToxOVrOGy0HVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNTgzMA==", "bodyText": "Change column name to can_edit, too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/619#discussion_r455935830", "createdAt": "2020-07-16T17:01:19Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/SitePermissionEntity.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Table(name = \"sites_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class SitePermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\", insertable = true, updatable = true)\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"site_id\")\n+  private SiteEntity site;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer canEdit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bf6165a8ac67253f2349f5a2e27eb85379d8db"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2276, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}