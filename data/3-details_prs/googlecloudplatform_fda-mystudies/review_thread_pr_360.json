{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTk2NzEz", "number": 360, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDo1NjowN1rOD6gxBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowMTo1MVrOD6ukfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjgwODM4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDo1NjowN1rOGSZByw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzo1OToxMlrOGSuTCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNzYxMQ==", "bodyText": "nit: I assume we want to explicitly import each lib instead of import *?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r421937611", "createdAt": "2020-05-08T04:56:07Z", "author": {"login": "kuoyuchi"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2MDE4Mw==", "bodyText": "yes, that's part of the styleguide https://google.github.io/styleguide/javaguide.html#s3.3.1-wildcard-imports", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422160183", "createdAt": "2020-05-08T14:01:13Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNzYxMQ=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjA5MA==", "bodyText": "Fixed here and elsewhere. Was a default in my ide to change to wildcard after 5 imports", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422286090", "createdAt": "2020-05-08T17:59:12Z", "author": {"login": "wamills"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNzYxMQ=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjgyNjM1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTowNjowMlrOGSZL5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozNToxNVrOGSy1ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDE5OA==", "bodyText": "I think we want to add a prefix(institutionId+\"/\") as argument of list (which, on cloud console UI, would look like each institution having a directory in the singleton InstitutionBucket).", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r421940198", "createdAt": "2020-05-08T05:06:02Z", "author": {"login": "kuoyuchi"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.WriteChannel;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {\n+        Bucket bucket = storageService.get(appConfig.getInstitutionBucketName());\n+        Page<Blob> blobs = bucket.list();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5Nzk1NQ==", "bodyText": "Can a user belong to more than one institution?\nI initially just ported over the other CloudStorageService from the enroll-mgmt service but when converting forgot to update. Fixed to use the institutionId.\nI think I have more work to do on this though. I thought we could have the heroes top level bucket and then a bucket per institution within to have a true separation of institutions: https://cloud.google.com/appengine/docs/standard/java/googlecloudstorageclient/read-write-to-cloud-storage#cloud_storage_and_subdirectories\ndoesn't look like that is possible. I'll change to just search within a subdirectory", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422297955", "createdAt": "2020-05-08T18:23:25Z", "author": {"login": "wamills"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.WriteChannel;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {\n+        Bucket bucket = storageService.get(appConfig.getInstitutionBucketName());\n+        Page<Blob> blobs = bucket.list();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDE5OA=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwOTEzNg==", "bodyText": "We can assume a user belongs to a single institution for now because it's coming from results of a single choice question. It might change in the future but we don't have to build it now.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422309136", "createdAt": "2020-05-08T18:45:38Z", "author": {"login": "kuoyuchi"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.WriteChannel;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {\n+        Bucket bucket = storageService.get(appConfig.getInstitutionBucketName());\n+        Page<Blob> blobs = bucket.list();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDE5OA=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2MDQ0Mw==", "bodyText": "sg, changed to search within a subdirectory", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422360443", "createdAt": "2020-05-08T20:35:15Z", "author": {"login": "wamills"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.UUID;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.*;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.WriteChannel;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {\n+        Bucket bucket = storageService.get(appConfig.getInstitutionBucketName());\n+        Page<Blob> blobs = bucket.list();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDE5OA=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzM3NDUzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserInstitution.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODo0Mjo1MVrOGSePMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzo1OToyM1rOGSuTZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMjk2MQ==", "bodyText": "user_details_id is the primary key for the user_details table, right? I don't think you need to set referencedColumnName explicitly, I think it will pick that automatically.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422022961", "createdAt": "2020-05-08T08:42:51Z", "author": {"login": "karepker"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserInstitution.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import lombok.*;\n+import org.hibernate.annotations.OnDelete;\n+import org.hibernate.annotations.OnDeleteAction;\n+\n+import javax.persistence.*;\n+import javax.validation.constraints.NotNull;\n+\n+@Setter\n+@Getter\n+@Entity\n+@AllArgsConstructor\n+@Builder\n+@NoArgsConstructor\n+@Table(name = \"user_institution\")\n+public class UserInstitution {\n+    @Id\n+    @Column(name = \"user_institution_id\")\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private Long userInstitutionId;\n+\n+    @OneToOne(fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"user_id\", referencedColumnName = \"user_details_id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjE4MQ==", "bodyText": "Done", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422286181", "createdAt": "2020-05-08T17:59:23Z", "author": {"login": "wamills"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserInstitution.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import lombok.*;\n+import org.hibernate.annotations.OnDelete;\n+import org.hibernate.annotations.OnDeleteAction;\n+\n+import javax.persistence.*;\n+import javax.validation.constraints.NotNull;\n+\n+@Setter\n+@Getter\n+@Entity\n+@AllArgsConstructor\n+@Builder\n+@NoArgsConstructor\n+@Table(name = \"user_institution\")\n+public class UserInstitution {\n+    @Id\n+    @Column(name = \"user_institution_id\")\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private Long userInstitutionId;\n+\n+    @OneToOne(fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"user_id\", referencedColumnName = \"user_details_id\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMjk2MQ=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzM4MjAxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODo0NToyMlrOGSeTmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzo1OTozMFrOGSuTog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNDA4OQ==", "bodyText": "nit: You can remove ().", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422024089", "createdAt": "2020-05-08T08:45:22Z", "author": {"login": "karepker"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.google.cloud.healthcare.fdamystudies.util;\n+\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserInstitutionResources;\n+import com.google.cloud.healthcare.fdamystudies.model.UserInstitution;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserInstitutionRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.CloudStorageService;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Optional;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.internal.verification.VerificationModeFactory.times;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjI0Mg==", "bodyText": "Done", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422286242", "createdAt": "2020-05-08T17:59:30Z", "author": {"login": "wamills"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.google.cloud.healthcare.fdamystudies.util;\n+\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserInstitutionResources;\n+import com.google.cloud.healthcare.fdamystudies.model.UserInstitution;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserInstitutionRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.CloudStorageService;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Optional;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.internal.verification.VerificationModeFactory.times;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNDA4OQ=="}, "originalCommit": {"oid": "d81a901135a686f10ae7d974a822c32deac48a42"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTA3MDA1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowMTo1MVrOGSuYAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozNDo0NlrOGSy0ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzM2MA==", "bodyText": "Also we might want to change the return type here because the name of the blob (removing institutionId prefix) would be the resource title displayed, so we might want to change the return type to something like a pair<string,string>.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422287360", "createdAt": "2020-05-08T18:01:51Z", "author": {"login": "kuoyuchi"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.Blob;\n+import com.google.cloud.storage.Bucket;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageException;\n+import com.google.cloud.storage.StorageOptions;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+    private static Logger logger = LoggerFactory.getLogger(CloudStorageService.class);\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bbdf603c516fbe20442d3b4b90251c1e76c31ec"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5MTcwMA==", "bodyText": "I have a UserResourceBean that I'm checking in in pull #363. You should be able to use that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422291700", "createdAt": "2020-05-08T18:11:04Z", "author": {"login": "karepker"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.Blob;\n+import com.google.cloud.storage.Bucket;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageException;\n+import com.google.cloud.storage.StorageOptions;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+    private static Logger logger = LoggerFactory.getLogger(CloudStorageService.class);\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzM2MA=="}, "originalCommit": {"oid": "1bbdf603c516fbe20442d3b4b90251c1e76c31ec"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2MDIyNw==", "bodyText": "Changed the return type to include the title and changed to use UserResourceBean a level up so we can still test some of the ByteArrayOutputStream logic. Can't create a fake StorageOptions without a new GCP test project. The local test version cannot lookup all contents in a bucket.\nThanks!", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/360#discussion_r422360227", "createdAt": "2020-05-08T20:34:46Z", "author": {"login": "wamills"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/CloudStorageService.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.annotation.PostConstruct;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.storage.Blob;\n+import com.google.cloud.storage.Bucket;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageException;\n+import com.google.cloud.storage.StorageOptions;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+\n+@Service\n+public class CloudStorageService {\n+    private static Logger logger = LoggerFactory.getLogger(CloudStorageService.class);\n+\n+    private Storage storageService;\n+\n+    @Autowired\n+    private ApplicationPropertyConfiguration appConfig;\n+\n+    @PostConstruct\n+    private void init() {\n+        storageService = StorageOptions.getDefaultInstance().getService();\n+    }\n+\n+    public List<ByteArrayOutputStream> getAllInstitutionResources(String institutionId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzM2MA=="}, "originalCommit": {"oid": "1bbdf603c516fbe20442d3b4b90251c1e76c31ec"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1065, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}