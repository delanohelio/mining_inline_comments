{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTEwMzAw", "number": 583, "title": "Change Password: PUT /v1/users/{userId} endpoint implementation with Integration tests", "bodyText": "Change Password: PUT /v1/users/{userId} endpoint implementation with Integration tests.", "createdAt": "2020-06-30T09:44:04Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583", "merged": true, "mergeCommit": {"oid": "439f7c1073094066c08eb9e2f6eddd8875106240"}, "closed": true, "closedAt": "2020-07-20T07:06:47Z", "author": {"login": "dhanyak-btc"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwScKdAH2gAyNDQxOTEwMzAwOmI5MTM5NmI3NTdlMjkwOWE3ZGViNWU1ODRhZDE1M2JiYzNkY2M5ZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2r7fAgFqTQ1MTMzNTc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b91396b757e2909a7deb5e584ad153bbc3dcc9d6", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b91396b757e2909a7deb5e584ad153bbc3dcc9d6", "committedDate": "2020-06-30T09:43:30Z", "message": "Change Password: PUT /v1/users/{userId} endpoint implementation with Integration tests\n\nChange Password: PUT /v1/users/{userId} endpoint implementation with Integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80259a3069d1b6b8162afe303c9456a6a22078e0", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/80259a3069d1b6b8162afe303c9456a6a22078e0", "committedDate": "2020-07-08T09:02:14Z", "message": "Refactored the code to fix common review comments\n\nPR#586 We shouldn't be using the same request for two different actions.\nCreated ChangePasswordRequest with validation annotations and removed UserValidator.\n\nInverted the condition\n\nPR#575 Removed versioning from endpoints."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "257dafb5efbe924d6b638f0f73000221ad05ba5d", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/257dafb5efbe924d6b638f0f73000221ad05ba5d", "committedDate": "2020-07-08T09:24:15Z", "message": "Removed /v1 to fix build failure\n\nRemoved /v1 to fix build failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d49b3cd331adcb2817a8f2fb3323b15ebe673f50", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d49b3cd331adcb2817a8f2fb3323b15ebe673f50", "committedDate": "2020-07-08T12:54:59Z", "message": "Removed unused constants\n\nRemoved unused constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e873164d2fd685b8d29d2881968f92f492f956d0", "committedDate": "2020-07-08T13:05:27Z", "message": "Used UC Detector plugin to find unused variables/methods, fixed build issue\n\nUsed UC Detector plugin to find unused variables/methods, fixed build issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0OTI5ODAz", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-444929803", "createdAt": "2020-07-08T16:22:06Z", "commit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjoyMjowNlrOGuvspA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjoyMjowNlrOGuvspA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY2OTE1Ng==", "bodyText": "Why is this being changed in the PR for change password?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r451669156", "createdAt": "2020-07-08T16:22:06Z", "author": {"login": "saminguyen"}, "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/common/ApiEndpoint.java", "diffHunk": "@@ -12,7 +12,7 @@\n import java.net.URL;\n \n public enum ApiEndpoint {\n-  HEALTH(\"http://localhost:8001/audit-log-service/v1/healthCheck\"),\n+  HEALTH(\"http://localhost:8001/audit-log-service/healthCheck\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjAwNzU3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-445200757", "createdAt": "2020-07-08T23:46:47Z", "commit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzo0Njo0N1rOGu843g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzo0Njo0N1rOGu843g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4NTI3OA==", "bodyText": "Is there a reason for so many backslashes. Wouldn't this suffice\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";\n          \n          \n            \n                  \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~]).{8,64}$\";", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r451885278", "createdAt": "2020-07-08T23:46:47Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/ChangePasswordRequest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import javax.validation.constraints.Pattern;\n+import javax.validation.constraints.Size;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Getter\n+@Setter\n+public class ChangePasswordRequest {\n+\n+  private static final String PASSWORD_REGEX =\n+      \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjEyNDc0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-445212474", "createdAt": "2020-07-09T00:24:02Z", "commit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDoyNDowMlrOGu9h_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDoyNDowMlrOGu9h_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5NTgwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logger.entry(\"begin updateUser()\");\n          \n          \n            \n                logger.entry(\"begin changePassword()\");", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r451895804", "createdAt": "2020-07-09T00:24:02Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -61,30 +69,97 @@ public UserResponse createUser(UserRequest userRequest) {\n \n     // save user account details\n     UserEntity userEntity = UserMapper.fromUserRequest(userRequest);\n-    ObjectNode userInfo = getUserInfoWithPasswordAndPasswordHistory(userRequest);\n+    ObjectNode userInfo = getObjectNode();\n+    setPasswordAndPasswordHistoryFields(userRequest.getPassword(), userInfo);\n+\n     userEntity.setUserInfo(userInfo.toString());\n     userEntity = repository.saveAndFlush(userEntity);\n     logger.exit(String.format(\"id=%s\", userEntity.getId()));\n     return UserMapper.toUserResponse(userEntity);\n   }\n \n-  private ObjectNode getUserInfoWithPasswordAndPasswordHistory(UserRequest userRequest) {\n+  private void setPasswordAndPasswordHistoryFields(String password, ObjectNode userInfo) {\n     // encrypt the password using random salt\n     String rawSalt = salt();\n-    String encrypted = encrypt(userRequest.getPassword(), rawSalt);\n+    String encrypted = encrypt(password, rawSalt);\n \n     ObjectNode passwordNode = getObjectNode();\n     passwordNode.put(HASH, hash(encrypted));\n     passwordNode.put(SALT, rawSalt);\n     passwordNode.put(\n         EXPIRES_AT, DateTimeUtils.getSystemDateTimestamp(appConfig.getPasswordExpiryDays(), 0, 0));\n \n-    ArrayNode passwordHistory = createArrayNode();\n+    ArrayNode passwordHistory =\n+        userInfo.hasNonNull(PASSWORD_HISTORY)\n+            ? (ArrayNode) userInfo.get(PASSWORD_HISTORY)\n+            : createArrayNode();\n     passwordHistory.add(passwordNode);\n \n-    ObjectNode userInfo = getObjectNode();\n+    // keep only 'X' previous passwords\n+    logger.trace(String.format(\"password history has %d elements\", passwordHistory.size()));\n+    while (passwordHistory.size() > appConfig.getPasswordHistoryMaxSize()) {\n+      passwordHistory.remove(0);\n+    }\n+\n     userInfo.set(PASSWORD, passwordNode);\n     userInfo.set(PASSWORD_HISTORY, passwordHistory);\n-    return userInfo;\n+  }\n+\n+  @Override\n+  public ChangePasswordResponse changePassword(ChangePasswordRequest userRequest)\n+      throws JsonProcessingException {\n+    logger.entry(\"begin updateUser()\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e873164d2fd685b8d29d2881968f92f492f956d0"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/44c5e16d17a90a941e0e42a370f20424d64b43a4", "committedDate": "2020-07-09T09:17:23Z", "message": "Fixed PR#583 review comments\n\nFixed PR#583 review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODg3Mjgw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-445887280", "createdAt": "2020-07-09T18:58:19Z", "commit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo1ODoxOVrOGvd58g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo1ODoxOVrOGvd58g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNjIyNg==", "bodyText": "nit: If this method is only going to be used for changePassword, I think it should be renamed to sth like  validateChangePasswordRequest instead just to be clear", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r452426226", "createdAt": "2020-07-09T18:58:19Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -61,30 +69,97 @@ public UserResponse createUser(UserRequest userRequest) {\n \n     // save user account details\n     UserEntity userEntity = UserMapper.fromUserRequest(userRequest);\n-    ObjectNode userInfo = getUserInfoWithPasswordAndPasswordHistory(userRequest);\n+    ObjectNode userInfo = getObjectNode();\n+    setPasswordAndPasswordHistoryFields(userRequest.getPassword(), userInfo);\n+\n     userEntity.setUserInfo(userInfo.toString());\n     userEntity = repository.saveAndFlush(userEntity);\n     logger.exit(String.format(\"id=%s\", userEntity.getId()));\n     return UserMapper.toUserResponse(userEntity);\n   }\n \n-  private ObjectNode getUserInfoWithPasswordAndPasswordHistory(UserRequest userRequest) {\n+  private void setPasswordAndPasswordHistoryFields(String password, ObjectNode userInfo) {\n     // encrypt the password using random salt\n     String rawSalt = salt();\n-    String encrypted = encrypt(userRequest.getPassword(), rawSalt);\n+    String encrypted = encrypt(password, rawSalt);\n \n     ObjectNode passwordNode = getObjectNode();\n     passwordNode.put(HASH, hash(encrypted));\n     passwordNode.put(SALT, rawSalt);\n     passwordNode.put(\n         EXPIRES_AT, DateTimeUtils.getSystemDateTimestamp(appConfig.getPasswordExpiryDays(), 0, 0));\n \n-    ArrayNode passwordHistory = createArrayNode();\n+    ArrayNode passwordHistory =\n+        userInfo.hasNonNull(PASSWORD_HISTORY)\n+            ? (ArrayNode) userInfo.get(PASSWORD_HISTORY)\n+            : createArrayNode();\n     passwordHistory.add(passwordNode);\n \n-    ObjectNode userInfo = getObjectNode();\n+    // keep only 'X' previous passwords\n+    logger.trace(String.format(\"password history has %d elements\", passwordHistory.size()));\n+    while (passwordHistory.size() > appConfig.getPasswordHistoryMaxSize()) {\n+      passwordHistory.remove(0);\n+    }\n+\n     userInfo.set(PASSWORD, passwordNode);\n     userInfo.set(PASSWORD_HISTORY, passwordHistory);\n-    return userInfo;\n+  }\n+\n+  @Override\n+  public ChangePasswordResponse changePassword(ChangePasswordRequest userRequest)\n+      throws JsonProcessingException {\n+    logger.entry(\"begin changePassword()\");\n+    Optional<UserEntity> optionalEntity = repository.findByUserId(userRequest.getUserId());\n+\n+    if (!optionalEntity.isPresent()) {\n+      logger.exit(ErrorCode.USER_NOT_FOUND);\n+      return new ChangePasswordResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserEntity userEntity = optionalEntity.get();\n+    ObjectNode userInfo = (ObjectNode) toJsonNode(userEntity.getUserInfo());\n+    ArrayNode passwordHistory =\n+        userInfo.hasNonNull(PASSWORD_HISTORY)\n+            ? (ArrayNode) userInfo.get(PASSWORD_HISTORY)\n+            : createArrayNode();\n+    JsonNode currentPwdNode = userInfo.get(PASSWORD);\n+\n+    ErrorCode errorCode = validatePasswords(userRequest, currentPwdNode, passwordHistory);\n+    if (errorCode != null) {\n+      logger.exit(String.format(\"change password failed with error code=%s\", errorCode));\n+      return new ChangePasswordResponse(errorCode);\n+    }\n+\n+    setPasswordAndPasswordHistoryFields(userRequest.getNewPassword(), userInfo);\n+    userEntity.setUserInfo(userInfo.toString());\n+    repository.saveAndFlush(userEntity);\n+    logger.exit(\"Your password has been changed successfully!\");\n+    return new ChangePasswordResponse(\n+        HttpStatus.OK, \"Your password has been changed successfully!\");\n+  }\n+\n+  private ErrorCode validatePasswords(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1OTg1NTA2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-445985506", "createdAt": "2020-07-09T21:35:32Z", "commit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMTozNTozMlrOGviokw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMTozNTozMlrOGviokw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwMzY5OQ==", "bodyText": "Couple questions: Why do we have two different error codes, where in some cases the int value matches with EC-xxx and in some other cases it does not? According to the documentation in https://docs.google.com/document/d/1zxyUj9OD26aCMosdw2AdgLz4nYta2XM5s6h4SJGT1T4/edit#heading=h.gjdgxs there are no cases for 404 error codes. We should update USER_NOT_FOUND code to 400 or update the doc.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r452503699", "createdAt": "2020-07-09T21:35:32Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/ErrorCode.java", "diffHunk": "@@ -31,6 +31,16 @@\n \n   UNAUTHORIZED(401, \"EC-401\", \"Unauthorized\", \"Invalid token\"),\n \n+  USER_NOT_FOUND(404, \"EC-114\", Constants.BAD_REQUEST, \"User not found\"),\n+\n+  CURRENT_PASSWORD_INVALID(400, \"EC-119\", Constants.BAD_REQUEST, \"Current password is invalid\"),\n+\n+  ENFORCE_PASSWORD_HISTORY(\n+      400,\n+      \"EC-105\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1OTg1OTgz", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-445985983", "createdAt": "2020-07-09T21:36:24Z", "commit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMTozNjoyNFrOGvip7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMTozNjo0N1rOGviqsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNDA0Ng==", "bodyText": "nit: typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldReturnCurrentPasswordInvalidErrroCodeForChangePasswordAction()\n          \n          \n            \n              public void shouldReturnCurrentPasswordInvalidErrorCodeForChangePasswordAction()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r452504046", "createdAt": "2020-07-09T21:36:24Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -145,8 +157,144 @@ public void shouldReturnEmailExistsErrorCode() throws Exception {\n         .andExpect(jsonPath(\"$.error_description\").value(ErrorCode.EMAIL_EXISTS.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnBadRequestForChangePasswordAction()\n+      throws MalformedURLException, JsonProcessingException, Exception {\n+    HttpHeaders headers = getCommonHeaders();\n+    headers.add(\"Authorization\", VALID_BEARER_TOKEN);\n+\n+    ChangePasswordRequest userRequest = new ChangePasswordRequest();\n+    userRequest.setNewPassword(\"new_password\");\n+    userRequest.setCurrentPassword(\"example_current_password\");\n+\n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                put(ApiEndpoint.CHANGE_PASSWORD.getPath(), IdGenerator.id())\n+                    .contextPath(getContextPath())\n+                    .content(asJsonString(userRequest))\n+                    .headers(headers))\n+            .andDo(print())\n+            .andExpect(status().isBadRequest())\n+            .andExpect(jsonPath(\"$.violations\").isArray())\n+            .andReturn();\n+\n+    String actualResponse = result.getResponse().getContentAsString();\n+    String expectedResponse =\n+        readJsonFile(\"/response/change_password_bad_request_response_from_annotations.json\");\n+    JSONAssert.assertEquals(expectedResponse, actualResponse, JSONCompareMode.NON_EXTENSIBLE);\n+  }\n+\n+  @Test\n+  @Order(3)\n+  public void shouldReturnCurrentPasswordInvalidErrroCodeForChangePasswordAction()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNDI0Mg==", "bodyText": "typo here too\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldReturnUserNotFoundErrroCodeForChangePasswordAction()\n          \n          \n            \n              public void shouldReturnUserNotFoundErrorCodeForChangePasswordAction()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#discussion_r452504242", "createdAt": "2020-07-09T21:36:47Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -145,8 +157,144 @@ public void shouldReturnEmailExistsErrorCode() throws Exception {\n         .andExpect(jsonPath(\"$.error_description\").value(ErrorCode.EMAIL_EXISTS.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnBadRequestForChangePasswordAction()\n+      throws MalformedURLException, JsonProcessingException, Exception {\n+    HttpHeaders headers = getCommonHeaders();\n+    headers.add(\"Authorization\", VALID_BEARER_TOKEN);\n+\n+    ChangePasswordRequest userRequest = new ChangePasswordRequest();\n+    userRequest.setNewPassword(\"new_password\");\n+    userRequest.setCurrentPassword(\"example_current_password\");\n+\n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                put(ApiEndpoint.CHANGE_PASSWORD.getPath(), IdGenerator.id())\n+                    .contextPath(getContextPath())\n+                    .content(asJsonString(userRequest))\n+                    .headers(headers))\n+            .andDo(print())\n+            .andExpect(status().isBadRequest())\n+            .andExpect(jsonPath(\"$.violations\").isArray())\n+            .andReturn();\n+\n+    String actualResponse = result.getResponse().getContentAsString();\n+    String expectedResponse =\n+        readJsonFile(\"/response/change_password_bad_request_response_from_annotations.json\");\n+    JSONAssert.assertEquals(expectedResponse, actualResponse, JSONCompareMode.NON_EXTENSIBLE);\n+  }\n+\n+  @Test\n+  @Order(3)\n+  public void shouldReturnCurrentPasswordInvalidErrroCodeForChangePasswordAction()\n+      throws MalformedURLException, JsonProcessingException, Exception {\n+    HttpHeaders headers = getCommonHeaders();\n+    headers.add(\"Authorization\", VALID_BEARER_TOKEN);\n+\n+    ChangePasswordRequest request = new ChangePasswordRequest();\n+    request.setCurrentPassword(\"CurrentM0ck!tPassword\");\n+    request.setNewPassword(\"NewM0ck!tPassword\");\n+\n+    mockMvc\n+        .perform(\n+            put(ApiEndpoint.CHANGE_PASSWORD.getPath(), userId)\n+                .contextPath(getContextPath())\n+                .content(asJsonString(request))\n+                .headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isBadRequest())\n+        .andExpect(\n+            jsonPath(\"$.error_description\")\n+                .value(ErrorCode.CURRENT_PASSWORD_INVALID.getDescription()));\n+  }\n+\n+  @Test\n+  public void shouldReturnUserNotFoundErrroCodeForChangePasswordAction()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44c5e16d17a90a941e0e42a370f20424d64b43a4"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "616e486eababa2f699a942423d32dafedef4f1fe", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/616e486eababa2f699a942423d32dafedef4f1fe", "committedDate": "2020-07-10T19:27:27Z", "message": "Fixed typo and nit review comments\n\nFixed typo and nit review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTQ0NDEy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-447544412", "createdAt": "2020-07-13T19:38:14Z", "commit": {"oid": "616e486eababa2f699a942423d32dafedef4f1fe"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12357bef2e8871038c03113430e4275627b78e13", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/12357bef2e8871038c03113430e4275627b78e13", "committedDate": "2020-07-20T06:16:24Z", "message": "Merge branch 'develop' into oauth-scim-module-change-password"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzM1Nzc0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/583#pullrequestreview-451335774", "createdAt": "2020-07-20T06:48:53Z", "commit": {"oid": "12357bef2e8871038c03113430e4275627b78e13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 778, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}