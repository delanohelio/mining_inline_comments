{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNzY3OTg3", "number": 890, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1NTozMVrOEhX-sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozMzo1NVrOEk_wDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDMxMzQ0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1NTozMVrOHOp_9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjowMzo0N1rOHPwScw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDIzMQ==", "bodyText": "static imports should be above the non-static imports according to https://google.github.io/styleguide/javaguide.html#s3.3.3-import-ordering-and-spacing", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r485130231", "createdAt": "2020-09-08T18:55:31Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -27,6 +22,11 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n+import static com.google.cloud.healthcare.fdamystudies.common.UserMgmntEvent.CONTACT_US_CONTENT_EMAILED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4MTg0Mw==", "bodyText": "resolved import order now", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r486281843", "createdAt": "2020-09-10T12:03:47Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -27,6 +22,11 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n+import static com.google.cloud.healthcare.fdamystudies.common.UserMgmntEvent.CONTACT_US_CONTENT_EMAILED;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDIzMQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDMxOTY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1NzowOVrOHOqDkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTo0MToxNlrOHQXOqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMTE1Mw==", "bodyText": "why use this notation here?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r485131153", "createdAt": "2020-09-08T18:57:09Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,9 +1,25 @@\n-#dev\n+#spring configurations\n+spring.profiles.active=@spring.profiles.active@", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxOTg0OQ==", "bodyText": "We've <profiles> in pom.xml to replace @spring.profiles.active@ with values like local, dev, qa. Our test environment deployment takes configuration from application-<profile>.properties.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r486919849", "createdAt": "2020-09-11T09:41:16Z", "author": {"login": "dhanyak-btc"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,9 +1,25 @@\n-#dev\n+#spring configurations\n+spring.profiles.active=@spring.profiles.active@", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMTE1Mw=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDMyOTAwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1OTo0OVrOHOqJRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjowNDo1N1rOHPwUjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMjYxMw==", "bodyText": "leave as update for now", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r485132613", "createdAt": "2020-09-08T18:59:49Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,9 +1,25 @@\n-#dev\n+#spring configurations\n+spring.profiles.active=@spring.profiles.active@\n+spring.main.allow-bean-definition-overriding=true\n+\n+# log configuration\n+logging.path=${LOG_PATH}\n+logging.file=${logging.path}/user_mgmt_service.log\n+logging.file.max-size= 1024KB\n+\n+logging.level.root=WARN\n+logging.level.com.google.cloud.healthcare.fdamystudies=WARN\n+\n email.code.expire_time = 15\n \n-spring.datasource.url=jdbc:mysql://35.196.150.7/mystudies_userregistration?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n-spring.datasource.username=registration-server-user\n-spring.datasource.password=f]E45/=P\n+spring.datasource.url=jdbc:mysql://127.0.0.1:3306/${DB_NAME}?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n+spring.datasource.username=${DB_USER}\n+spring.datasource.password=${DB_PASS}\n+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n+# JPA \n+spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect\n+spring.jpa.show-sql=false\n+spring.jpa.hibernate.ddl-auto=none", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4MjM4Mw==", "bodyText": "changed to update", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r486282383", "createdAt": "2020-09-10T12:04:57Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,9 +1,25 @@\n-#dev\n+#spring configurations\n+spring.profiles.active=@spring.profiles.active@\n+spring.main.allow-bean-definition-overriding=true\n+\n+# log configuration\n+logging.path=${LOG_PATH}\n+logging.file=${logging.path}/user_mgmt_service.log\n+logging.file.max-size= 1024KB\n+\n+logging.level.root=WARN\n+logging.level.com.google.cloud.healthcare.fdamystudies=WARN\n+\n email.code.expire_time = 15\n \n-spring.datasource.url=jdbc:mysql://35.196.150.7/mystudies_userregistration?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n-spring.datasource.username=registration-server-user\n-spring.datasource.password=f]E45/=P\n+spring.datasource.url=jdbc:mysql://127.0.0.1:3306/${DB_NAME}?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n+spring.datasource.username=${DB_USER}\n+spring.datasource.password=${DB_PASS}\n+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n+# JPA \n+spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect\n+spring.jpa.show-sql=false\n+spring.jpa.hibernate.ddl-auto=none", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMjYxMw=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDMzMzAyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowMDo1NlrOHOqL6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMDoxNzo0MFrOHQZJpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMzI5MQ==", "bodyText": "should these be turned into variables as well?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r485133291", "createdAt": "2020-09-08T19:00:56Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MTMzMw==", "bodyText": "created a placeholder ${FCM_API_URL} for this", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r486951333", "createdAt": "2020-09-11T10:17:40Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMzI5MQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDMzNzYzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowMjoxNlrOHOqOuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNDowNjoyN1rOHRvwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDAxMQ==", "bodyText": "these values do not need to be in application properties, since we do not expect them to be different per deployment. the only part, that will be different is the base_url, the rest can be generated in the code.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r485134011", "createdAt": "2020-09-08T19:02:16Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkyNjU2Ng==", "bodyText": "We've followed same pattern in all the services for API endpoints, this requires lot of code changes if we need to build the endpoint from application. We'll keep the API endpoints in properties for this release and address this in next release if we really need to make the changes. I personally prefer to keep API endpoints in properties file.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r486926566", "createdAt": "2020-09-11T09:48:05Z", "author": {"login": "dhanyak-btc"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDAxMQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3NjYzOA==", "bodyText": "Dhanya, I assumed you changed the pattern in an earlier PR based on your comment there.\nAre other modules all still following this pattern?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r487876638", "createdAt": "2020-09-14T12:35:29Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDAxMQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3OTU0OQ==", "bodyText": "@zohrehj , I refactored the code only for Redirect URLs not for API endpoints.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r487879549", "createdAt": "2020-09-14T12:40:18Z", "author": {"login": "dhanyak-btc"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDAxMQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4MTM1MQ==", "bodyText": "@aswinijena100 please correct below prop values as given  below.\nregister.url=${SCIM_AUTH_URL}/users\nauth.server.updateStatus.url=${SCIM_AUTH_URL}/users/{userId}", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r487881351", "createdAt": "2020-09-14T12:43:22Z", "author": {"login": "dhanyak-btc"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDAxMQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM3MDIyNg==", "bodyText": "@dhanyak-btc done the changes as suggested.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r488370226", "createdAt": "2020-09-15T04:06:27Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDAxMQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDM0MDY5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTowMzoxMFrOHOqQmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNDowNjowMlrOHRvv3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDQ5MQ==", "bodyText": "should the  also be replaced in the code?\nThe value can come from the database; app record associated with a given study", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r485134491", "createdAt": "2020-09-08T19:03:10Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw\n \n-confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n-#please keep sandbox/production based on your ios app release type\n-ios.push.notification.type=sandbox\n+confirmation.mail.subject=Welcome to the <App Name> App!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMTA5MA==", "bodyText": "@zohrehj you are right, this should be dynamically replaced from the app information stored in the database, depending on the app (App ID) fhat the email is being sent out for.  We have a task in Track 1 (release 2) for centralization of all branding elements across platform components so that developers don't need to replace values in multiple places in the code. As part of this, elements such as app name is to be read from the database for the app in question. This should get addressed by the end of release 2.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r487121090", "createdAt": "2020-09-11T15:27:11Z", "author": {"login": "SR-btc"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw\n \n-confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n-#please keep sandbox/production based on your ios app release type\n-ios.push.notification.type=sandbox\n+confirmation.mail.subject=Welcome to the <App Name> App!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDQ5MQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2OTYyNQ==", "bodyText": "Sounds good.\nPlease file a corresponding bug leave a TODO with the bug number here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r487269625", "createdAt": "2020-09-11T20:16:55Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw\n \n-confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n-#please keep sandbox/production based on your ios app release type\n-ios.push.notification.type=sandbox\n+confirmation.mail.subject=Welcome to the <App Name> App!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDQ5MQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM3MDE0MQ==", "bodyText": "Added TODO comment with bug number", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r488370141", "createdAt": "2020-09-15T04:06:02Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw\n \n-confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n-#please keep sandbox/production based on your ios app release type\n-ios.push.notification.type=sandbox\n+confirmation.mail.subject=Welcome to the <App Name> App!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDQ5MQ=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzk5MzA5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDoxODozMFrOHQsnfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNDowNjo1MlrOHRvwrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3MDI3MQ==", "bodyText": "nit: add a single space after '#'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r487270271", "createdAt": "2020-09-11T20:18:30Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n-# i.e. domain instead of domain.com\n-from.email.domain=\n-\n+# i.e. rocketturtle instead of rocketturtle.net\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n-API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n+API_URL_FCM=${FCM_API_URL}/send\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw\n \n-confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n-#please keep sandbox/production based on your ios app release type\n-ios.push.notification.type=sandbox\n+confirmation.mail.subject=Welcome to the <App Name> App!\n+confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n # Feedback & Contactus mail content starts\n feedback.email=<Feedback Mail>\n-\n feedback.mail.subject=<App Name> App Feedback:\n-\n feedback.mail.content=<html><body><div><div><span>Hi</span></div><br\\><div><span>A user of the &lt;App Name&gt; mobile app has provided feedback via the app. Here&#39;s the content of the feedback:</span></div><br\\><div><span><i>$body</i></span></div><br\\><div><span>Thanks,</span><br\\><span>The &lt;Org Name&gt; MyStudies Support Team</span><br\\><span>-------------------------------------------</span><br\\><span style='font-size:10px;'>Note: This is an auto-generated email. Please do not reply.</span></div></div></body></html>\n-\n contactus.email=<ContactUs Mail>\n-\n contactus.mail.subject=<App Name> App Helpdesk:\n-\n contactus.mail.content=<html><body><div><div><span>Hi</span></div><br\\><div style='padding-bottom:10px;'><span>A user of the &lt;App Neme&gt; mobile app has reached out this helpdesk via the &#39;Contact Us&#39; form in the mobile app. The details submitted in the form are given below:</span></div><div><div>___________________________________________</div><div style='padding-top:20px;'>First Name: $firstName</div><div style='padding-top:10px;'>Email: <a href='mailto: $email'> $email </a></div><div style='padding-top:10px;'>Subject: $subject</div><div style='padding-top:10px;padding-bottom:10px'>Message: $body</div></div><div>___________________________________________</div><div style='padding-top:10px;'><span>Please respond to the app user at the email provided.</span></div><br\\><div><span>Thanks,</span><br\\><span>The &lt;Org Name&gt; MyStudies Support Team</span><br\\><span>-------------------------------------------</span><br\\><span style='font-size:10px;'>Note: This is an auto-generated email. Please do not reply.</span></div></div></body></html>\n # Feedback & Contactus mail content ends\n \n-security.oauth2.client.client-id= oauth-scim-client-id\n-security.oauth2.client.client-secret= oauth-scim-client-secret\n+org.name =${ORG_NAME}\n \n-security.oauth2.introspection_endpoint=http://35.193.185.224:8087/oauth-scim-service/oauth2/introspect\n-security.oauth2.token_endpoint=http://35.193.185.224:8087/oauth-scim-service/oauth2/token\n-security.oauth2.client.redirect-uri=http://35.193.185.224:8087/oauth-scim-service/login\n-\n-spring.main.allow-bean-definition-overriding=true\n+security.oauth2.client.client-id=${CLIENT_ID}\n+security.oauth2.client.client-secret=${SECRET_KEY}\n+security.oauth2.introspection_endpoint=${HYDRA_ADMIN_URL}/oauth2/introspect\n+security.oauth2.token_endpoint=${SCIM_AUTH_URL}/oauth2/token\n+security.oauth2.client.redirect-uri=${SCIM_AUTH_URL}/login\n \n-org.name = Org Name\n+#Enabale/Disable components from common service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42ca11b712c2b32bdac1fcc1146aa94a6f35d9a"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM3MDM1MQ==", "bodyText": "added space after '#'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r488370351", "createdAt": "2020-09-15T04:06:52Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n-# i.e. domain instead of domain.com\n-from.email.domain=\n-\n+# i.e. rocketturtle instead of rocketturtle.net\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n-API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n+API_URL_FCM=${FCM_API_URL}/send\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}\n+response.server.url.participant.withdraw=${RESPONSE_SERVER_URL}/participant/withdraw\n \n-confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n-#please keep sandbox/production based on your ios app release type\n-ios.push.notification.type=sandbox\n+confirmation.mail.subject=Welcome to the <App Name> App!\n+confirmation.mail.content=<html><body><div style='margin:20px;padding:10px;font-family: sans-serif;font-size: 14px;'><span>Hi,</span><br/><br/><span>Thank you for registering with us! We look forward to having you on board and actively taking part in<br/>research studies conducted by the &lt;Org Name&gt; and its partners.</span><br/><br/><span>Your sign-up process is almost complete. Please use the verification code provided below to<br/>complete the Verification step in the mobile app.</span><br/><br/><span><strong>Verification Code:</strong><b>$securitytoken</b> </span></span><br/><br/><span>This code can be used only once and is valid for a period of 48 hours only.</span><br/><br/><span>Please note that  registration (or sign up) for the app  is requested only to provide you with a <br/>seamless experience of using the app. Your registration information does not become part of <br/>the data collected for any study housed in the app.Each study has its own consent process, <br/>and no data for any study will be collected unless and until you provide an informed consent<br/> prior to joining the study. </span><br/><br/><span>For any questions or assistance, please write to <a>&lt;contact email address&gt;</a> </span><br/><br/><span style='font-size:15px;'>Thanks,</span><br/><span>The &lt;Org Name&gt; MyStudies Support Team</span><br/><span>----------------------------------------------------</span><br/><span style='font-size:10px;'>PS - This is an auto-generated email. Please do not reply.</span></div></body></html>\n \n # Feedback & Contactus mail content starts\n feedback.email=<Feedback Mail>\n-\n feedback.mail.subject=<App Name> App Feedback:\n-\n feedback.mail.content=<html><body><div><div><span>Hi</span></div><br\\><div><span>A user of the &lt;App Name&gt; mobile app has provided feedback via the app. Here&#39;s the content of the feedback:</span></div><br\\><div><span><i>$body</i></span></div><br\\><div><span>Thanks,</span><br\\><span>The &lt;Org Name&gt; MyStudies Support Team</span><br\\><span>-------------------------------------------</span><br\\><span style='font-size:10px;'>Note: This is an auto-generated email. Please do not reply.</span></div></div></body></html>\n-\n contactus.email=<ContactUs Mail>\n-\n contactus.mail.subject=<App Name> App Helpdesk:\n-\n contactus.mail.content=<html><body><div><div><span>Hi</span></div><br\\><div style='padding-bottom:10px;'><span>A user of the &lt;App Neme&gt; mobile app has reached out this helpdesk via the &#39;Contact Us&#39; form in the mobile app. The details submitted in the form are given below:</span></div><div><div>___________________________________________</div><div style='padding-top:20px;'>First Name: $firstName</div><div style='padding-top:10px;'>Email: <a href='mailto: $email'> $email </a></div><div style='padding-top:10px;'>Subject: $subject</div><div style='padding-top:10px;padding-bottom:10px'>Message: $body</div></div><div>___________________________________________</div><div style='padding-top:10px;'><span>Please respond to the app user at the email provided.</span></div><br\\><div><span>Thanks,</span><br\\><span>The &lt;Org Name&gt; MyStudies Support Team</span><br\\><span>-------------------------------------------</span><br\\><span style='font-size:10px;'>Note: This is an auto-generated email. Please do not reply.</span></div></div></body></html>\n # Feedback & Contactus mail content ends\n \n-security.oauth2.client.client-id= oauth-scim-client-id\n-security.oauth2.client.client-secret= oauth-scim-client-secret\n+org.name =${ORG_NAME}\n \n-security.oauth2.introspection_endpoint=http://35.193.185.224:8087/oauth-scim-service/oauth2/introspect\n-security.oauth2.token_endpoint=http://35.193.185.224:8087/oauth-scim-service/oauth2/token\n-security.oauth2.client.redirect-uri=http://35.193.185.224:8087/oauth-scim-service/login\n-\n-spring.main.allow-bean-definition-overriding=true\n+security.oauth2.client.client-id=${CLIENT_ID}\n+security.oauth2.client.client-secret=${SECRET_KEY}\n+security.oauth2.introspection_endpoint=${HYDRA_ADMIN_URL}/oauth2/introspect\n+security.oauth2.token_endpoint=${SCIM_AUTH_URL}/oauth2/token\n+security.oauth2.client.redirect-uri=${SCIM_AUTH_URL}/login\n \n-org.name = Org Name\n+#Enabale/Disable components from common service", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3MDI3MQ=="}, "originalCommit": {"oid": "b42ca11b712c2b32bdac1fcc1146aa94a6f35d9a"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzY3NTk5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1MDoxNlrOHSC4kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0ODozOFrOHShDJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4MzY2Nw==", "bodyText": "certificate values should all come from env as well, no?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r488683667", "createdAt": "2020-09-15T13:50:16Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3Nzg5Mw==", "bodyText": "It can be configured as env variable as this one is depends IOS app platform. Added ${IOS_NOTIFICATION_TYPE} now", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r489177893", "createdAt": "2020-09-16T05:48:38Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4MzY2Nw=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzY3OTI2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1MDo1M1rOHSC6mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNzozNlrOHYIXYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NDE4Nw==", "bodyText": "the addition of {userId} seems different from other URLs, can you please point out to where it gets updated in the code?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r488684187", "createdAt": "2020-09-15T13:50:53Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MzQzMQ==", "bodyText": "fda-mystudies/user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/util/UserManagementUtil.java\n    \n    \n        Lines 56 to 80\n      in\n      a26203c\n    \n    \n    \n    \n\n        \n          \n           public UpdateEmailStatusResponse updateUserInfoInAuthServer( \n        \n\n        \n          \n               UpdateEmailStatusRequest updateEmailStatusRequest, String userId) { \n        \n\n        \n          \n             logger.info(\"(Util)....UserManagementUtil.updateUserInfoInAuthServer()......STARTED\"); \n        \n\n        \n          \n            \n        \n\n        \n          \n             HttpHeaders headers = new HttpHeaders(); \n        \n\n        \n          \n             headers.setContentType(MediaType.APPLICATION_JSON); \n        \n\n        \n          \n             headers.add(\"Authorization\", \"Bearer \" + oauthService.getAccessToken()); \n        \n\n        \n          \n            \n        \n\n        \n          \n             HttpEntity<UpdateEmailStatusRequest> request = \n        \n\n        \n          \n                 new HttpEntity<>(updateEmailStatusRequest, headers); \n        \n\n        \n          \n             ResponseEntity<UpdateEmailStatusResponse> responseEntity = \n        \n\n        \n          \n                 restTemplate.exchange( \n        \n\n        \n          \n                     appConfig.getAuthServerUpdateStatusUrl(), \n        \n\n        \n          \n                     HttpMethod.PUT, \n        \n\n        \n          \n                     request, \n        \n\n        \n          \n                     UpdateEmailStatusResponse.class, \n        \n\n        \n          \n                     userId); \n        \n\n        \n          \n             UpdateEmailStatusResponse updateEmailResponse = responseEntity.getBody(); \n        \n\n        \n          \n            \n        \n\n        \n          \n             logger.debug( \n        \n\n        \n          \n                 String.format( \n        \n\n        \n          \n                     \"status =%d, message=%s\", \n        \n\n        \n          \n                     updateEmailResponse.getHttpStatusCode(), updateEmailResponse.getMessage())); \n        \n\n        \n          \n             return updateEmailResponse; \n        \n\n        \n          \n           }", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r489173431", "createdAt": "2020-09-16T05:34:37Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NDE4Nw=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2NDkzMQ==", "bodyText": "thanks", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r495064931", "createdAt": "2020-09-25T15:27:36Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -13,95 +29,65 @@ spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n #local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n # i.e. rocketturtle instead of rocketturtle.net\n-from.email.domain=\n-\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX\n-\n API_URL_FCM=https://fcm.googleapis.com/fcm/send\n-\n-#Auth Server Local\n-\n-register.url=http://35.193.185.224:8087/oauth-scim-service/users\n-auth.server.updateStatus.url=http://35.193.185.224:8087/oauth-scim-service/users/{userId}\n-\n-response.server.url.participant.withdraw=http://35.193.185.224:8084/mystudies-response-server/participant/withdraw\n-\n #App security\n certificate.name=push_prod.p12\n-\n certificate.password=XXXX\n+#please keep sandbox/production based on your ios app release type\n+ios.push.notification.type=sandbox\n \n-confirmation.mail.subject=Welcome to the <App Name> App!\n+#Auth Server Local\n+register.url=${HYDRA_ADMIN_URL}/users\n+auth.server.updateStatus.url=${HYDRA_ADMIN_URL}/users/{userId}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NDE4Nw=="}, "originalCommit": {"oid": "3904a2ce15a8c256d63b9f810f88c0f1557bbd04"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzY4NjE1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1MjoyMlrOHSC-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo1MDo1MVrOHShGKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NTI4Mg==", "bodyText": "what about this property?should it be coming from a variable?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r488685282", "createdAt": "2020-09-15T13:52:22Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,107 +1,93 @@\n-#dev\n+# spring configurations\n+spring.profiles.active=@spring.profiles.active@\n+spring.main.allow-bean-definition-overriding=true\n+\n+# log configuration\n+logging.path=${LOG_PATH}\n+logging.file=${logging.path}/user_mgmt_service.log\n+logging.file.max-size= 1024KB\n+\n+logging.level.root=WARN\n+logging.level.com.google.cloud.healthcare.fdamystudies=WARN\n+\n email.code.expire_time = 15\n \n-spring.datasource.url=jdbc:mysql://35.196.150.7/mystudies_userregistration?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n-spring.datasource.username=registration-server-user\n-spring.datasource.password=f]E45/=P\n+spring.datasource.url=jdbc:mysql://127.0.0.1:3306/${DB_NAME}?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n+spring.datasource.username=${DB_USER}\n+spring.datasource.password=${DB_PASS}\n+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n+# JPA \n+spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect\n+spring.jpa.show-sql=false\n+spring.jpa.hibernate.ddl-auto=update\n \n-#hikari   \n+# hikari   \n spring.datasource.type=com.zaxxer.hikari.HikariDataSource\n spring.datasource.hikari.connection-test-query=SELECT 1\n spring.datasource.hikari.idle-timeout=600000\n spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n-#local to run\n+# local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n-# i.e. domain instead of domain.com\n-from.email.domain=\n-\n+# i.e. rocketturtle instead of rocketturtle.net\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43b7e35cdd09f90a36f490b5a3998bd660dc1b10"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3ODY2NQ==", "bodyText": "Its not used, hence removed now", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r489178665", "createdAt": "2020-09-16T05:50:51Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,107 +1,93 @@\n-#dev\n+# spring configurations\n+spring.profiles.active=@spring.profiles.active@\n+spring.main.allow-bean-definition-overriding=true\n+\n+# log configuration\n+logging.path=${LOG_PATH}\n+logging.file=${logging.path}/user_mgmt_service.log\n+logging.file.max-size= 1024KB\n+\n+logging.level.root=WARN\n+logging.level.com.google.cloud.healthcare.fdamystudies=WARN\n+\n email.code.expire_time = 15\n \n-spring.datasource.url=jdbc:mysql://35.196.150.7/mystudies_userregistration?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n-spring.datasource.username=registration-server-user\n-spring.datasource.password=f]E45/=P\n+spring.datasource.url=jdbc:mysql://127.0.0.1:3306/${DB_NAME}?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n+spring.datasource.username=${DB_USER}\n+spring.datasource.password=${DB_PASS}\n+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n+# JPA \n+spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect\n+spring.jpa.show-sql=false\n+spring.jpa.hibernate.ddl-auto=update\n \n-#hikari   \n+# hikari   \n spring.datasource.type=com.zaxxer.hikari.HikariDataSource\n spring.datasource.hikari.connection-test-query=SELECT 1\n spring.datasource.hikari.idle-timeout=600000\n spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n-#local to run\n+# local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n-# i.e. domain instead of domain.com\n-from.email.domain=\n-\n+# i.e. rocketturtle instead of rocketturtle.net\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n-\n-cloud.institution.bucket=\n-\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n \n AUTH_KEY_FCM=XXXX", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NTI4Mg=="}, "originalCommit": {"oid": "43b7e35cdd09f90a36f490b5a3998bd660dc1b10"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjI4Njg3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozMzo1NVrOHUPyUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozMzo1NVrOHUPyUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5MjIxMQ==", "bodyText": "can you add a comment or example of what this URL should come from?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/890#discussion_r490992211", "createdAt": "2020-09-18T14:33:55Z", "author": {"login": "zohrehj"}, "path": "user-registration-server-ws/user-mgmt-module/user-mgmt/src/main/resources/application.properties", "diffHunk": "@@ -1,107 +1,88 @@\n-#dev\n+# spring configurations\n+spring.profiles.active=@spring.profiles.active@\n+spring.main.allow-bean-definition-overriding=true\n+\n+# log configuration\n+logging.path=${LOG_PATH}\n+logging.file=${logging.path}/user_mgmt_service.log\n+logging.file.max-size= 1024KB\n+\n+logging.level.root=WARN\n+logging.level.com.google.cloud.healthcare.fdamystudies=WARN\n+\n email.code.expire_time = 15\n \n-spring.datasource.url=jdbc:mysql://35.196.150.7/mystudies_userregistration?createDatabaseIfNotExist=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\n-spring.datasource.username=registration-server-user\n-spring.datasource.password=f]E45/=P\n+# Refer https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html\n+spring.datasource.url=jdbc:mysql://127.0.0.1:3306/${DB_NAME}\n+spring.datasource.username=${DB_USER}\n+spring.datasource.password=${DB_PASS}\n+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n+spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect\n+spring.jpa.show-sql=false\n+spring.jpa.hibernate.ddl-auto=none\n \n-#hikari   \n+# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#data-properties\n spring.datasource.type=com.zaxxer.hikari.HikariDataSource\n spring.datasource.hikari.connection-test-query=SELECT 1\n spring.datasource.hikari.idle-timeout=600000\n spring.datasource.hikari.minimum-idle=10\n spring.datasource.hikari.maximum-pool-size=100\n spring.datasource.hikari.connectionTimeout=30000\n spring.datasource.hikari.maxLifetime=1800000\n-spring.datasource.driver-class-name=com.mysql.jdbc.Driver\n-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n-\n-# JPA \n-spring.jpa.show-sql=true\n-spring.jpa.hibernate.ddl-auto=update\n-spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\n-\n \n # EMBEDDED SERVER CONFIGURATION\n server.servlet.contextPath=/myStudiesUserMgmtWS\n-\n-#local to run\n+# local to run\n server.port=8090\n \n # HTTP encoding\n spring.http.encoding.charset=UTF-8\n-\n spring.jmx.enabled = false\n \n-interceptor=/register,/resendConfirmation,/healthCheck\n-\n-#API calls directly from another server\n-serverApiUrls=/studies/studymetadata,/studies/sendNotification\n-\n-\n-from.email.address=apps@boston-technology.com\n-from.email.password=Btc@app@123\n+from.email.address=${FROM_EMAIL_ADDRESS}\n+from.email.password=${FROM_EMAIL_PASSWORD}\n # Unused with IP whitelist.\n-\n-smtp.hostname=smtp.gmail.com\n+smtp.hostname=${SMTP_HOSTNAME}\n smtp.port=465\n factory.value=javax.net.ssl.SSLSocketFactory\n \n-from.email.use_ip_whitelist=\n+from.email.use_ip_whitelist=${SMTP_USE_IP_WHITELIST}\n # Domain should be the email domain excluding the end,\n-# i.e. domain instead of domain.com\n-from.email.domain=\n-\n+# i.e. rocketturtle instead of rocketturtle.net\n+from.email.domain=${FROM_EMAIL_DOMAIN}\n # Empty whitelist means all domains are valid.\n email.whitelisted_domains=\n+cloud.institution.bucket=${INSTITUTION_RESOURCES_BUCKET_NAME}\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce7b85f68d96a60c416625835ee7a7af9687fbd"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1953, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}