{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNjUyNDY1", "number": 2241, "title": "[participant-manager-datastore] : Fixed Performance issue in GET /apps?fields=studies,sites endpoint", "bodyText": "Written native query and refactored code in getAppsWithOptionalFields() to resolve performance issue.", "createdAt": "2020-12-03T09:55:52Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2241", "merged": true, "mergeCommit": {"oid": "08fb4aaf180915066eada45cfc97ace5ec384275"}, "closed": true, "closedAt": "2020-12-08T07:16:01Z", "author": {"login": "monica-BTC"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdigDJ0AH2gAyNTMxNjUyNDY1OmE1ZGUzYWNiMjJiNTIxZmY5OTY2ZTgzNDMyYzJkZGQyOTQ0ODg0NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkDnxeAH2gAyNTMxNjUyNDY1OjJiZmMxZjRjZWNlYjg0NmMyNmZiOTY4MDZlMTMxN2ViNGI4MDVlMjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a5de3acb22b521ff9966e83432c2ddd29448844b", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a5de3acb22b521ff9966e83432c2ddd29448844b", "committedDate": "2020-12-03T09:51:04Z", "message": "Fixed Performance issue\n\nFixed Performance issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MzM2Njc0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2241#pullrequestreview-544336674", "createdAt": "2020-12-03T19:46:24Z", "commit": {"oid": "a5de3acb22b521ff9966e83432c2ddd29448844b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTo0NjoyNFrOH-uidg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTo0NjoyNFrOH-uidg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzNjI0Ng==", "bodyText": "I think it would be helpful to have test cases with multiple studies (and sites) within the response so we can cover the sorting and makes sure it works.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2241#discussion_r535536246", "createdAt": "2020-12-03T19:46:24Z", "author": {"login": "saminguyen"}, "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -306,56 +308,76 @@ public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n       throw new ErrorCodeException(ErrorCode.NOT_SUPER_ADMIN_ACCESS);\n     }\n \n-    List<AppEntity> apps = appRepository.findAll();\n+    List<AppStudySiteInfo> appStudySiteInfoList = appRepository.findAppsStudiesSites();\n \n-    List<StudyEntity> studies = new ArrayList<>();\n-    apps.stream().map(AppEntity::getStudies).forEach(studies::addAll);\n+    Map<String, AppDetails> appsMap = new HashMap<>();\n+    Map<String, AppStudyResponse> studiesMap = new HashMap<>();\n+    Map<String, AppSiteResponse> sitesMap = new HashMap<>();\n \n-    List<SiteEntity> sites = new ArrayList<>();\n-    studies.stream().map(StudyEntity::getSites).forEach(sites::addAll);\n+    AppDetails appDetails = null;\n+    for (AppStudySiteInfo appStudySiteInfo : appStudySiteInfoList) {\n+      if (!appsMap.containsKey(appStudySiteInfo.getAppId())) {\n+        appDetails = AppMapper.toAppDetails(appStudySiteInfo);\n+        appsMap.put(appStudySiteInfo.getAppId(), appDetails);\n+      }\n+      appDetails = appsMap.get(appStudySiteInfo.getAppId());\n+\n+      AppStudyResponse appStudyResponse = null;\n+      if (!studiesMap.containsKey(appStudySiteInfo.getAppStudyIdKey())\n+          && ArrayUtils.contains(fields, \"studies\")) {\n+        appStudyResponse = StudyMapper.toAppStudyResponse(appStudySiteInfo);\n+        studiesMap.put(appStudySiteInfo.getAppStudyIdKey(), appStudyResponse);\n+        appDetails.getStudies().add(appStudyResponse);\n+      }\n+      appStudyResponse = studiesMap.get(appStudySiteInfo.getAppStudyIdKey());\n+\n+      if (StringUtils.isNotEmpty(appStudySiteInfo.getSiteId())\n+          && ArrayUtils.contains(fields, \"sites\")\n+          && appStudyResponse != null\n+          && !sitesMap.containsKey(appStudySiteInfo.getAppStudySiteIdKey())) {\n+        AppSiteResponse appSiteResponse = SiteMapper.toAppSiteResponse(appStudySiteInfo);\n+        sitesMap.put(appStudySiteInfo.getAppStudySiteIdKey(), appSiteResponse);\n+\n+        appStudyResponse.getSites().add(appSiteResponse);\n+        appStudyResponse.setTotalSitesCount(appStudyResponse.getSites().size());\n+        appDetails.setTotalSitesCount(appDetails.getTotalSitesCount() + 1);\n+        sortSites(appStudyResponse);\n+      }\n+      sortStudies(appDetails);\n+    }\n \n-    AppResponse appResponse = prepareAppResponse(apps, studies, sites, fields);\n+    List<AppDetails> apps = appsMap.values().stream().collect(Collectors.toList());\n+    List<AppDetails> sortedApps =\n+        apps.stream()\n+            .sorted(Comparator.comparing(AppDetails::getName))\n+            .collect(Collectors.toList());\n+\n+    AppResponse appResponse = new AppResponse(MessageCode.GET_APPS_DETAILS_SUCCESS, sortedApps);\n \n     logger.exit(String.format(\"total apps=%d\", appResponse.getApps().size()));\n     return appResponse;\n   }\n \n-  private AppResponse prepareAppResponse(\n-      List<AppEntity> apps, List<StudyEntity> studies, List<SiteEntity> sites, String[] fields) {\n-    Map<String, List<StudyEntity>> groupByAppIdStudyMap =\n-        studies.stream().collect(Collectors.groupingBy(StudyEntity::getAppId));\n-\n-    Map<String, List<SiteEntity>> groupByStudyIdSiteMap =\n-        sites.stream().collect(Collectors.groupingBy(SiteEntity::getStudyId));\n-\n-    List<AppDetails> appsList = new ArrayList<>();\n-    for (AppEntity app : apps) {\n-      AppDetails appDetails = AppMapper.toAppDetails(app);\n-      if (ArrayUtils.contains(fields, \"studies\")) {\n-        List<StudyEntity> appStudies = groupByAppIdStudyMap.get(app.getId());\n-        List<AppStudyResponse> appStudyResponses =\n-            CollectionUtils.emptyIfNull(appStudies)\n-                .stream()\n-                .map(\n-                    study ->\n-                        StudyMapper.toAppStudyResponse(\n-                            study, groupByStudyIdSiteMap.get(study.getId()), fields))\n-                .collect(Collectors.toList());\n-\n-        appDetails.getStudies().addAll(appStudyResponses);\n-      }\n-      int totalSitesCount =\n-          appDetails\n-              .getStudies()\n-              .stream()\n-              .map(study -> study.getSites().size())\n-              .reduce(0, Integer::sum);\n-      appDetails.setTotalSitesCount(totalSitesCount);\n-\n-      appsList.add(appDetails);\n-    }\n+  private void sortStudies(AppDetails appDetails) {\n+    List<AppStudyResponse> sortedStudies =\n+        appDetails\n+            .getStudies()\n+            .stream()\n+            .sorted(Comparator.comparing(AppStudyResponse::getStudyName))\n+            .collect(Collectors.toList());\n+    appDetails.getStudies().clear();\n+    appDetails.getStudies().addAll(sortedStudies);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5de3acb22b521ff9966e83432c2ddd29448844b"}, "originalPosition": 136}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "898ac1c3047b2de04b3ab344fbcac5c4db2597df", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/898ac1c3047b2de04b3ab344fbcac5c4db2597df", "committedDate": "2020-12-04T08:10:12Z", "message": "Fixed review comment\n\nFixed review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b4b2c64506a2cd40bcfa36703a16b80c49bfb51", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9b4b2c64506a2cd40bcfa36703a16b80c49bfb51", "committedDate": "2020-12-04T08:31:35Z", "message": "Merge branch 'develop' into app-details-performance-issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NzIyNTcw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2241#pullrequestreview-546722570", "createdAt": "2020-12-08T03:42:13Z", "commit": {"oid": "9b4b2c64506a2cd40bcfa36703a16b80c49bfb51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05b9ba0ca8e1ef93005dd7d5d76ae76c6b8f048d", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/05b9ba0ca8e1ef93005dd7d5d76ae76c6b8f048d", "committedDate": "2020-12-08T04:52:42Z", "message": "Merge branch 'develop' into app-details-performance-issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddf74f5ba1cb83216c7f6c9b8d6aa1eb2e8bd73d", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ddf74f5ba1cb83216c7f6c9b8d6aa1eb2e8bd73d", "committedDate": "2020-12-08T04:53:08Z", "message": "Merge branch 'develop' into app-details-performance-issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bfc1f4ceceb846c26fb96806e1317eb4b805e28", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2bfc1f4ceceb846c26fb96806e1317eb4b805e28", "committedDate": "2020-12-08T05:51:40Z", "message": "Merge branch 'develop' into app-details-performance-issue"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1148, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}