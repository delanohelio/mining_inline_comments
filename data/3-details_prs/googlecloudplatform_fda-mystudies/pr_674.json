{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MzIzNjM5", "number": 674, "title": "Participant manager service - GET /locations and /locations/{locationId} implementation with integration tests", "bodyText": "Participant manager service - GET /locations and /locations/{locationId} implementation with integration tests.", "createdAt": "2020-07-24T14:37:52Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674", "merged": true, "mergeCommit": {"oid": "00f3bcaef460643a422b8f9ef86a71a52c0e263c"}, "closed": true, "closedAt": "2020-08-14T05:41:58Z", "author": {"login": "madhurya-btc"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4E-AFgH2gAyNDU2MzIzNjM5OjhjMTg1MmM1MGUyNGViNGRjYWMwNTQ2MjgxNzg5MzkxNjE1MDI2OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-t67mgFqTQ2NzMxODYwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8c1852c50e24eb4dcac054628178939161502694", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8c1852c50e24eb4dcac054628178939161502694", "committedDate": "2020-07-24T14:33:11Z", "message": "Get location API endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "703a30e12bab6034cfcf85e95e45d9e142911eea", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/703a30e12bab6034cfcf85e95e45d9e142911eea", "committedDate": "2020-07-24T15:20:56Z", "message": "excludeStudyId not null check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "committedDate": "2020-07-24T16:16:18Z", "message": "Integration test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzA0OTAw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#pullrequestreview-456304900", "createdAt": "2020-07-28T05:06:23Z", "commit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNTowNjoyM1rOG38xaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTo0NzoyOFrOG5QIrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyMDU1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              GET_LOCATION_SUCCESS(HttpStatus.OK, \"MSG-0008\", \"Get locations successfull\"),\n          \n          \n            \n            \n          \n          \n            \n              GET_LOCATION_FOR_SITE_SUCCESS(HttpStatus.OK, \"MSG-0009\", \"Get locations for site successfull\");\n          \n          \n            \n              GET_LOCATION_SUCCESS(HttpStatus.OK, \"MSG-0008\", \"Get locations successfully\"),\n          \n          \n            \n            \n          \n          \n            \n              GET_LOCATION_FOR_SITE_SUCCESS(HttpStatus.OK, \"MSG-0009\", \"Get locations for site successfulyl\");", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r461320553", "createdAt": "2020-07-28T05:06:23Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "diffHunk": "@@ -49,7 +49,11 @@\n \n   DECOMMISSION_SITE_SUCCESS(HttpStatus.OK, \"MSG-0014\", \"Site Decommissioned successfully\"),\n \n-  RECOMMISSION_SITE_SUCCESS(HttpStatus.OK, \"MSG-0015\", \"Site Recommissioned successfully\");\n+  RECOMMISSION_SITE_SUCCESS(HttpStatus.OK, \"MSG-0015\", \"Site Recommissioned successfully\"),\n+\n+  GET_LOCATION_SUCCESS(HttpStatus.OK, \"MSG-0008\", \"Get locations successfull\"),\n+\n+  GET_LOCATION_FOR_SITE_SUCCESS(HttpStatus.OK, \"MSG-0009\", \"Get locations for site successfull\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0NjQzNw==", "bodyText": "This is implying you are selecting Locations associated with this studyId. You should make clear in the name and comment here that you are filtering out this studyId specifically", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462646437", "createdAt": "2020-07-29T23:27:00Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/LocationRepository.java", "diffHunk": "@@ -19,4 +22,12 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface LocationRepository extends JpaRepository<LocationEntity, String> {}\n+public interface LocationRepository extends JpaRepository<LocationEntity, String> {\n+\n+  @Query(\n+      value =\n+          \"SELECT * FROM locations WHERE status = :status AND \"\n+              + \"id NOT IN (SELECT DISTINCT location_id FROM sites WHERE study_id = :studyId)\",\n+      nativeQuery = true)\n+  public List<LocationEntity> findByStatusAndStudyId(Integer status, String studyId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0Nzc0OQ==", "bodyText": "Make a method for LocationDetails -> LocationEntity mapper method here instead and when you call it you can use the stream() method", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462647749", "createdAt": "2020-07-29T23:31:11Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/LocationMapper.java", "diffHunk": "@@ -40,4 +44,18 @@ public static LocationEntity fromLocationRequest(LocationRequest locationRequest\n     locationEntity.setIsDefault(NO);\n     return locationEntity;\n   }\n+\n+  public static List<LocationDetails> toLocations(List<LocationEntity> locations) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MDEyNw==", "bodyText": "make this method private", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462650127", "createdAt": "2020-07-29T23:39:06Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -153,4 +164,104 @@ private ErrorCode validateUpdateLocationRequest(\n \n     return null;\n   }\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse getLocations(String userId) {\n+    logger.entry(\"begin getLocations()\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminUser = userRegAdminRepository.findById(userId);\n+    UserRegAdminEntity adminUser = optUserRegAdminUser.get();\n+    if (Permission.NO_PERMISSION == Permission.fromValue(adminUser.getEditPermission())) {\n+      logger.exit(ErrorCode.LOCATION_ACCESS_DENIED);\n+      return new LocationResponse(ErrorCode.LOCATION_ACCESS_DENIED);\n+    }\n+\n+    List<LocationEntity> locations =\n+        (List<LocationEntity>) CollectionUtils.emptyIfNull(locationRepository.findAll());\n+    List<String> locationIds =\n+        locations.stream().map(LocationEntity::getId).distinct().collect(Collectors.toList());\n+    Map<String, List<String>> locationStudies = getStudiesAndGroupByLocationId(locationIds);\n+\n+    List<LocationDetails> locationDetailsList = LocationMapper.toLocations(locations);\n+    for (LocationDetails locationDetails : locationDetailsList) {\n+      List<String> studies = locationStudies.get(locationDetails.getLocationId());\n+      locationDetails.getStudyNames().addAll(studies);\n+      locationDetails.setStudiesCount(locationDetails.getStudyNames().size());\n+    }\n+    LocationResponse locationResponse =\n+        new LocationResponse(MessageCode.GET_LOCATION_SUCCESS, locationDetailsList);\n+    logger.exit(String.format(\"locations size=%d\", locationResponse.getLocations().size()));\n+    return locationResponse;\n+  }\n+\n+  public Map<String, List<String>> getStudiesAndGroupByLocationId(List<String> locationIds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4NjM4MA==", "bodyText": "You should add the studyEntity here to verify it is actually excluded in the response", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462686380", "createdAt": "2020-07-30T01:47:28Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/LocationControllerTest.java", "diffHunk": "@@ -300,10 +321,166 @@ public void shouldUpdateToReactiveLocation() throws Exception {\n     locationRepository.deleteById(locationId);\n   }\n \n+  @Test\n+  public void shouldReturnForbiddenForLocationAccessDeniedOfGetLocations() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocations() throws Exception {\n+    // Step 1: Set studies for location\n+    SiteEntity siteEntity = testDataHelper.newSiteEntity();\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    // Step 2: Call API and expect GET_LOCATION_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n+        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")))\n+        .andExpect(jsonPath(\"$.locations[0].studyNames\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].studyNames[0]\", is(\"LIMITJP001\")))\n+        .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_SUCCESS.getMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnForbiddenForLocationForSiteAccessDenied() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocationsForSite() throws Exception {\n+    // Step 1: Set studies for location\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a"}, "originalPosition": 303}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f620aca34bd1ac1c422094ecb1a4cfe5aecfabcc", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f620aca34bd1ac1c422094ecb1a4cfe5aecfabcc", "committedDate": "2020-07-30T05:06:47Z", "message": "comment fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2079a62c84f2f5291794a5c0e532a1c44b1343de", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2079a62c84f2f5291794a5c0e532a1c44b1343de", "committedDate": "2020-07-30T06:45:15Z", "message": "PR comment fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDcwNTU1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#pullrequestreview-459470555", "createdAt": "2020-07-31T20:50:53Z", "commit": {"oid": "2079a62c84f2f5291794a5c0e532a1c44b1343de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo1MDo1M1rOG6V-FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo1MDo1M1rOG6V-FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzMDU0OA==", "bodyText": "I think you should make this a separate test case, maybe shouldNoLocationsForSite_excludedByStudyId (or sth like that), and keep the old test case also.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r463830548", "createdAt": "2020-07-31T20:50:53Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/LocationControllerTest.java", "diffHunk": "@@ -410,9 +410,7 @@ public void shouldReturnLocationsForSite() throws Exception {\n         .andExpect(\n             jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_FOR_SITE_SUCCESS.getMessage())))\n         .andExpect(jsonPath(\"$.locations\").isArray())\n-        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n-        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n-        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")));\n+        .andExpect(jsonPath(\"$.locations\", hasSize(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2079a62c84f2f5291794a5c0e532a1c44b1343de"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a9c89772f289d303122f9f34367894a156cd418", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3a9c89772f289d303122f9f34367894a156cd418", "committedDate": "2020-08-03T05:09:07Z", "message": "PR comment fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzM1MTgz", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#pullrequestreview-461735183", "createdAt": "2020-08-05T14:44:11Z", "commit": {"oid": "3a9c89772f289d303122f9f34367894a156cd418"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo0NDoxMVrOG8M8uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo0NDoxMVrOG8M8uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3OTg5OQ==", "bodyText": "replace with CUSTOM_LOCATION_ID?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r465779899", "createdAt": "2020-08-05T14:44:11Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/LocationControllerTest.java", "diffHunk": "@@ -300,10 +321,193 @@ public void shouldUpdateToReactiveLocation() throws Exception {\n     locationRepository.deleteById(locationId);\n   }\n \n+  @Test\n+  public void shouldReturnForbiddenForLocationAccessDeniedOfGetLocations() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocations() throws Exception {\n+    // Step 1: Set studies for location\n+    SiteEntity siteEntity = testDataHelper.newSiteEntity();\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    // Step 2: Call API and expect GET_LOCATION_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n+        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")))\n+        .andExpect(jsonPath(\"$.locations[0].studyNames\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].studyNames[0]\", is(\"LIMITJP001\")))\n+        .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_SUCCESS.getMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnForbiddenForLocationForSiteAccessDenied() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnNoLocationsForSiteExcludedByStudyId() throws Exception {\n+    // Step 1: Set studies for location\n+    siteEntity.setStudy(studyEntity);\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    // Step 2: Call API and expect message GET_LOCATION_FOR_SITE_SUCCESS\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(\n+            jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_FOR_SITE_SUCCESS.getMessage())))\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations\", hasSize(0)));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocationsForSite() throws Exception {\n+    // Step 1: Set studies for location\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    // Step 2: Call API and expect message GET_LOCATION_FOR_SITE_SUCCESS\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(\n+            jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_FOR_SITE_SUCCESS.getMessage())))\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n+        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a9c89772f289d303122f9f34367894a156cd418"}, "originalPosition": 352}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01b6773cfd749c8a4818781a417e335d52f05360", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/01b6773cfd749c8a4818781a417e335d52f05360", "committedDate": "2020-08-07T10:55:25Z", "message": "PR comment fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDY3Mjgy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#pullrequestreview-465067282", "createdAt": "2020-08-11T13:32:22Z", "commit": {"oid": "01b6773cfd749c8a4818781a417e335d52f05360"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1130cb37c018c6be4d7896cac260b422e3f7e13", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b1130cb37c018c6be4d7896cac260b422e3f7e13", "committedDate": "2020-08-14T05:08:24Z", "message": "Merge branch 'develop' into participant-manager-getlocations-endpoint\n\n# Conflicts:\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/CommonConstants.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/Permission.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/LocationRepository.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/LocationController.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationService.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/ApiEndpoint.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SitesControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88c23e0a351e1275d63596e9cfce9a52f9bc0274", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/88c23e0a351e1275d63596e9cfce9a52f9bc0274", "committedDate": "2020-08-14T05:19:22Z", "message": "Merge branch 'develop' of https://github.com/GoogleCloudPlatform/fda-mystudies into participant-manager-getlocations-endpoint\n\n# Conflicts:\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/CommonConstants.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/LocationController.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/LocationMapper.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/ParticipantMapper.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationService.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/ApiEndpoint.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SitesControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzE4NjAy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#pullrequestreview-467318602", "createdAt": "2020-08-14T05:39:29Z", "commit": {"oid": "88c23e0a351e1275d63596e9cfce9a52f9bc0274"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 531, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}