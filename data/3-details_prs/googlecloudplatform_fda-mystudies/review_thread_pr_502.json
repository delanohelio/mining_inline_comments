{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzU5ODA3", "number": 502, "reviewThreads": {"totalCount": 213, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOENlnlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyNzozOFrOERmp8Q==", "hasNextPage": false, "hasPreviousPage": true}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjg0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTe_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTe_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304063", "createdAt": "2020-07-12T11:27:47Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjg1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTfAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTfAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304064", "createdAt": "2020-07-12T11:27:47Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjg2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTfAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTfAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304065", "createdAt": "2020-07-12T11:27:47Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjg4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTfAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTfAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304067", "createdAt": "2020-07-12T11:27:47Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTkyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1NlrOGwTigA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1NlrOGwTigA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304960", "createdAt": "2020-07-12T11:35:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTkzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1NlrOGwTigQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1NlrOGwTigQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304961", "createdAt": "2020-07-12T11:35:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>\n+\t\t\t<plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTk0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTigg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTigg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304962", "createdAt": "2020-07-12T11:35:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTk1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTigw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304963", "createdAt": "2020-07-12T11:35:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTk2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTihA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304964", "createdAt": "2020-07-12T11:35:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t</plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTk3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTihQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTihQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304965", "createdAt": "2020-07-12T11:35:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t</plugins>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzOTk5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTihw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMTozNTo1N1rOGwTihw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDk2Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304967", "createdAt": "2020-07-12T11:35:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n+\t<reporting>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</reporting>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463d98e750d539f517ebe9285dc69ee6d68464ac"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjkxODUyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMzoxMDozOFrOGwUJHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMzoxMDozOFrOGwUJHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMxNDg0Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'org.junit.jupiter.api.MethodOrderer.OrderAnnotation'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453314846", "createdAt": "2020-07-12T13:10:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,202 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9323faa0b26b779c986c2855d1e75b33ae640b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk0NTc3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyNzozOFrOG2aYqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyNzozOFrOG2aYqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwODU4NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'org.junit.jupiter.api.Disabled'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r459708584", "createdAt": "2020-07-23T20:27:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,196 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3438c8b2d281c9d230fa19cc5ab897b84c0e3b1c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQ5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nDistance between variable 'html' declaration and its first usage is 6, but allowed 3.  Consider making that variable final if you still need to store its value in advance (before method calls that might have side effects on the original value).", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284356", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResourceBean;\n+import com.google.cloud.healthcare.fdamystudies.model.UserInstitution;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserInstitutionRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.CloudStorageService;\n \n @RunWith(SpringRunner.class)\n @SpringBootTest\n @ActiveProfiles(\"test\")\n @ContextConfiguration(initializers = TestApplicationContextInitializer.class)\n public class GetUserInstitutionResourcesTest {\n-    @MockBean\n-    UserInstitutionRepository userInstitutionRepository;\n-\n-    @MockBean\n-    CloudStorageService cloudStorageService;\n-\n-    @Autowired\n-    GetUserInstitutionResources getUserInstitutionResources;\n+  @MockBean UserInstitutionRepository userInstitutionRepository;\n \n-    @Test\n-    public void noUserFound() {\n-        assertThat(getUserInstitutionResources.getInstitutionResourcesForUser(\n-                \"missing_id\"), hasSize(0));\n-        verify(userInstitutionRepository, times(1)).findByUserUserId(\"missing_id\");\n-    }\n+  @MockBean CloudStorageService cloudStorageService;\n \n-    @Test\n-    public void noInstitutionResourcesFound() {\n-        String fakeInstitution = \"fake_institution\";\n-        Mockito.when(userInstitutionRepository.findByUserUserId(\"fake_user_id\")).thenReturn(Optional.of(UserInstitution.builder()\n-                .institutionId(fakeInstitution)\n-                .build()));\n-        Mockito.when(cloudStorageService.getAllInstitutionResources(\n-                \"fake_institution\")).thenReturn(new ArrayList<>());\n+  @Autowired GetUserInstitutionResources getUserInstitutionResources;\n \n-        assertThat(getUserInstitutionResources.getInstitutionResourcesForUser(\n-                \"fake_user_id\"), hasSize(0));\n-        verify(cloudStorageService, times(1)).getAllInstitutionResources(fakeInstitution);\n+  @Test\n+  public void noUserFound() {\n+    assertThat(\n+        getUserInstitutionResources.getInstitutionResourcesForUser(\"missing_id\"), hasSize(0));\n+    verify(userInstitutionRepository, times(1)).findByUserUserId(\"missing_id\");\n+  }\n \n-    }\n+  @Test\n+  public void noInstitutionResourcesFound() {\n+    String fakeInstitution = \"fake_institution\";\n+    Mockito.when(userInstitutionRepository.findByUserUserId(\"fake_user_id\"))\n+        .thenReturn(Optional.of(UserInstitution.builder().institutionId(fakeInstitution).build()));\n+    Mockito.when(cloudStorageService.getAllInstitutionResources(\"fake_institution\"))\n+        .thenReturn(new ArrayList<>());\n \n-    @Test\n-    public void returnsInstitution() throws IOException {\n-        String fakeInstitution = \"fake_institution\";\n-        Mockito.when(userInstitutionRepository.findByUserUserId(\"fake_user_id\"))\n-                .thenReturn(Optional.of(UserInstitution.builder()\n-                        .institutionId(fakeInstitution)\n-                        .build()));\n-        String html = \"<p>fake html</p>\\n\";\n-        URL path = ClassLoader.getSystemResource(\"fake_html.html\");\n-        File f = new File(path.getFile());\n-        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-        byteArrayOutputStream.write(FileUtils.readFileToByteArray(f));\n-        ArrayList<CloudStorageService.InstitutionResource> resources =\n-                new ArrayList<>();\n-        resources.add(new CloudStorageService.InstitutionResource(\n-                \"fake_title.html\",\n-                byteArrayOutputStream,\n-                \"id\"));\n-        Mockito.when(cloudStorageService.getAllInstitutionResources(\n-                fakeInstitution)).thenReturn(resources);\n-        List<UserResourceBean> userResourceBeans =\n-                getUserInstitutionResources.getInstitutionResourcesForUser(\n-                        \"fake_user_id\");\n-        assertThat(userResourceBeans, hasSize(1));\n-        assertThat(userResourceBeans.get(0).getTitle(),\n-                equalTo(\"fake_title.html\"));\n-        assertThat(userResourceBeans.get(0).getContent(), equalTo(html));\n-        assertThat(userResourceBeans.get(0).getResourcesId(), equalTo(\"resources:id\"));\n+    assertThat(\n+        getUserInstitutionResources.getInstitutionResourcesForUser(\"fake_user_id\"), hasSize(0));\n+    verify(cloudStorageService, times(1)).getAllInstitutionResources(fakeInstitution);\n+  }\n \n-    }\n+  @Test\n+  public void returnsInstitution() throws IOException {\n+    String fakeInstitution = \"fake_institution\";\n+    Mockito.when(userInstitutionRepository.findByUserUserId(\"fake_user_id\"))\n+        .thenReturn(Optional.of(UserInstitution.builder().institutionId(fakeInstitution).build()));\n+    String html = \"<p>fake html</p>\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTUwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/WireMockInitializer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.github.tomakehurst.wiremock.WireMockServer' import. Should be before 'org.springframework.context.event.ContextClosedEvent'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284357", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/WireMockInitializer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.config;\n+\n+import org.springframework.context.ApplicationContextInitializer;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import org.springframework.context.event.ContextClosedEvent;\n+import com.github.tomakehurst.wiremock.WireMockServer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTUxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/WireMockInitializer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.github.tomakehurst.wiremock.core.WireMockConfiguration' import. Should be before 'org.springframework.context.event.ContextClosedEvent'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284358", "createdAt": "2020-07-12T08:10:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/WireMockInitializer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.config;\n+\n+import org.springframework.context.ApplicationContextInitializer;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import org.springframework.context.event.ContextClosedEvent;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.core.WireMockConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTUzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/AppConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'com.google.cloud.healthcare.fdamystudies.util.EmailNotification'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284360", "createdAt": "2020-07-12T08:10:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/AppConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.google.cloud.healthcare.fdamystudies.config;\n+\n+import static org.mockito.Mockito.mock;\n+\n+import org.mockito.Mockito;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.context.annotation.Profile;\n+\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTU0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/AppConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.util.EmailNotification' import. Should be before 'org.springframework.context.annotation.Profile'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284361", "createdAt": "2020-07-12T08:10:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/AppConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.google.cloud.healthcare.fdamystudies.config;\n+\n+import static org.mockito.Mockito.mock;\n+\n+import org.mockito.Mockito;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.context.annotation.Profile;\n+\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTU1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/AppConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284363", "createdAt": "2020-07-12T08:10:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/config/AppConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.google.cloud.healthcare.fdamystudies.config;\n+\n+import static org.mockito.Mockito.mock;\n+\n+import org.mockito.Mockito;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.context.annotation.Profile;\n+\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+\n+@Profile(\"mockit\")\n+@Configuration\n+public class AppConfig {\n+  @Bean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTU2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'org.junit.jupiter.api.Test'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284364", "createdAt": "2020-07-12T08:10:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTU3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1N1rOGwSSDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'com.fasterxml.jackson.core.JsonProcessingException'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284365", "createdAt": "2020-07-12T08:10:57Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTU4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.fasterxml.jackson.core.JsonProcessingException' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284366", "createdAt": "2020-07-12T08:10:58Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTU5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284367", "createdAt": "2020-07-12T08:10:58Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTYwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284368", "createdAt": "2020-07-12T08:10:58Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTYxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM2OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.InfoBean' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284369", "createdAt": "2020-07-12T08:10:58Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTYyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM3MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.LoginBean' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284370", "createdAt": "2020-07-12T08:10:58Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTYzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1OFrOGwSSEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM3MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284371", "createdAt": "2020-07-12T08:10:58Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY4OTk5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowNlrOGwSZGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowNlrOGwSZGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286170", "createdAt": "2020-07-12T08:29:06Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDAwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.common.BaseMockIT' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286171", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDAxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.config.AppConfig' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286172", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDAyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.controller.UserProfileController' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286173", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDAzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286174", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDA0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286175", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDA1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286176", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDA2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.testutils.Constants' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286177", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDA3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowN1rOGwSZIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.testutils.TestUtils' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286178", "createdAt": "2020-07-12T08:29:07Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDA4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE3OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.jayway.jsonpath.JsonPath' import. Should be before 'org.springframework.test.web.servlet.MvcResult'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286179", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.jayway.jsonpath.JsonPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDA5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine is longer than 100 characters (found 125).", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286180", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.config.AppConfig;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired private UserProfileController profileController;\n+\n+  @Autowired private UserManagementProfileService profileService;\n+\n+  @Autowired private FdaEaUserDetailsServiceImpl service;\n+\n+  @Autowired private AppConfig appconfig;\n+\n+  @Value(\"${auth.server.deactivateUrl}\")\n+  private String deactivateUrl;\n+\n+  @Value(\"${response.server.url.participant.withdraw}\")\n+  private String withdrawUrl;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+    assertNotNull(service);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, headers, \"cdash93@gmail.com\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileBadRequest() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, headers, BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    SettingsRespBean settingRespBean = new SettingsRespBean(true, true, true, true, \"\", \"\");\n+    UserRequestBean userRequestBean = new UserRequestBean(settingRespBean, new InfoBean());\n+    String requestJson = getObjectMapper().writeValueAsString(userRequestBean);\n+    performPost(\n+        UPDATE_USER_PROFILE_PATH, requestJson, headers, String.valueOf(HttpStatus.OK.value()), OK);\n+    MvcResult result = performGet(USER_PROFILE_PATH, headers, OK);\n+    boolean remote =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.settings.remoteNotifications\");\n+    assertTrue(remote);\n+  }\n+\n+  @Test\n+  public void deactivateAccountSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    StudyReqBean studyReqBean = new StudyReqBean(Constants.STUDY_ID, Constants.DELETE);\n+    List<StudyReqBean> list = new ArrayList<StudyReqBean>();\n+    list.add(studyReqBean);\n+    DeactivateAcctBean acctBean = new DeactivateAcctBean(list);\n+    String requestJson = getObjectMapper().writeValueAsString(acctBean);\n+    performDelete(DEACTIVATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+\n+    UserDetailsBO daoResp = service.loadUserDetailsByUserId(Constants.VALID_USER_ID);\n+    assertEquals(3, daoResp.getStatus());\n+\n+    verify(1, postRequestedFor(urlEqualTo(\"/AuthServer/deactivate\")));\n+    verify(\n+        1,\n+        postRequestedFor(\n+            urlEqualTo(\n+                \"/mystudies-response-server/participant/withdraw?studyId=studyId1&participantId=1&deleteResponses=delete\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDEwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'org.junit.jupiter.api.Test'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286181", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDEyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'com.fasterxml.jackson.core.JsonProcessingException'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286183", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDEzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.fasterxml.jackson.core.JsonProcessingException' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286184", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDE0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286185", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDE1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOFrOGwSZKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.NotificationBean' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286186", "createdAt": "2020-07-12T08:29:08Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDE2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.NotificationForm' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286187", "createdAt": "2020-07-12T08:29:09Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDE3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.common.BaseMockIT' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286188", "createdAt": "2020-07-12T08:29:09Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDE4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE4OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.controller.StudiesController' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286189", "createdAt": "2020-07-12T08:29:09Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDE5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286190", "createdAt": "2020-07-12T08:29:09Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDIxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOTowOVrOGwSZMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286192", "createdAt": "2020-07-12T08:29:09Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDIyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.service.StudiesServices' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286193", "createdAt": "2020-07-12T08:29:10Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDIzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.testutils.Constants' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286195", "createdAt": "2020-07-12T08:29:10Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDI0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.testutils.TestUtils' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286196", "createdAt": "2020-07-12T08:29:10Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDI1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.util.ErrorCode' import. Should be before 'org.springframework.http.HttpStatus'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286197", "createdAt": "2020-07-12T08:29:10Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.ErrorCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDI2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286198", "createdAt": "2020-07-12T08:29:10Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.ErrorCode;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired private StudiesController studiesController;\n+\n+  @Autowired private StudiesServices studiesServices;\n+\n+  @Autowired private CommonDaoImpl commonDao;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+    assertNotNull(commonDao);\n+  }\n+\n+  public StudyMetadataBean createStudyMetadataBean() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDI3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/testutils/TestUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMFrOGwSZNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjE5OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286199", "createdAt": "2020-07-12T08:29:10Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/testutils/TestUtils.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package com.google.cloud.healthcare.fdamystudies.testutils;\n+\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.springframework.http.HttpHeaders;\n+\n+public class TestUtils {\n+  public static HttpHeaders getCommonHeaders(String... addOptionalHeaderNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDI4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMVrOGwSZOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMVrOGwSZOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjIwMA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286200", "createdAt": "2020-07-12T08:29:11Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -17,12 +17,16 @@\n \t<description>Project containing user management services</description>\n \n \t<properties>\n-\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDMwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMVrOGwSZOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMVrOGwSZOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjIwMw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286203", "createdAt": "2020-07-12T08:29:11Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -17,12 +17,16 @@\n \t<description>Project containing user management services</description>\n \n \t<properties>\n-\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \t\t<java.version>1.8</java.version>\n \n \t\t<sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>\n+\t\t<junit-jupiter.version>5.5.2</junit-jupiter.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY5MDMxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMVrOGwSZPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoyOToxMVrOGwSZPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NjIwNA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453286204", "createdAt": "2020-07-12T08:29:11Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -17,12 +17,16 @@\n \t<description>Project containing user management services</description>\n \n \t<properties>\n-\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \t\t<java.version>1.8</java.version>\n \n \t\t<sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>\n+\t\t<junit-jupiter.version>5.5.2</junit-jupiter.version>\n+\t\t<wiremock.version>2.26.3</wiremock.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603638546b17f584c95c2f8b54eef75c5e8ac12b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDI2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSugw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSugw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291651", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -17,12 +17,16 @@\n \t<description>Project containing user management services</description>\n \n \t<properties>\n-\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \t\t<java.version>1.8</java.version>\n \n \t\t<sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>\n+\t\t<junit-jupiter.version>5.5.2</junit-jupiter.version>\n+\t\t<wiremock.version>2.26.3</wiremock.version>\n+\t\t<clover.version>4.4.1</clover.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDI3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291652", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -17,12 +17,16 @@\n \t<description>Project containing user management services</description>\n \n \t<properties>\n-\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \t\t<java.version>1.8</java.version>\n \n \t\t<sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>\n+\t\t<junit-jupiter.version>5.5.2</junit-jupiter.version>\n+\t\t<wiremock.version>2.26.3</wiremock.version>\n+\t\t<clover.version>4.4.1</clover.version>\n+\t\t<mockito.version>2.24.0</mockito.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDI4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291653", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -17,12 +17,16 @@\n \t<description>Project containing user management services</description>\n \n \t<properties>\n-\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \t\t<java.version>1.8</java.version>\n \n \t\t<sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>\n+\t\t<junit-jupiter.version>5.5.2</junit-jupiter.version>\n+\t\t<wiremock.version>2.26.3</wiremock.version>\n+\t\t<clover.version>4.4.1</clover.version>\n+\t\t<mockito.version>2.24.0</mockito.version>\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDMwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291655", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -100,12 +104,14 @@\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\n \t\t\t<scope>test</scope>\n+\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDMxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291656", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDMyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291657", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDMzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291658", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDM0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSuiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY1OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291659", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDM1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSujA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozMlrOGwSujA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291660", "createdAt": "2020-07-12T09:22:32Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDM2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSujQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSujQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291661", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDM3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291662", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDM4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSujw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSujw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291663", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDM5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSukA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291664", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291666", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSukw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSukw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291667", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSulA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSulA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291668", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQ0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSulQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY2OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291669", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQ1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSulg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozM1rOGwSulg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291670", "createdAt": "2020-07-12T09:22:33Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQ2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSulw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSulw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291671", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQ3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291672", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQ4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291673", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDQ5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291674", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDUwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSumw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291675", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDUxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSunA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSunA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291676", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDUyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSunQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSunQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291677", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDUzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSung==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSung==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291678", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDU0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSunw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSunw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY3OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291679", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDU1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSuoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNFrOGwSuoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY4MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291680", "createdAt": "2020-07-12T09:22:34Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDU2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNVrOGwSuoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNVrOGwSuoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY4MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291681", "createdAt": "2020-07-12T09:22:35Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjczNDU3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNVrOGwSuog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwOToyMjozNVrOGwSuog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTY4Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453291682", "createdAt": "2020-07-12T09:22:35Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2b9b293e64dee880e980f6ed0055ea0e0bbead"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjU2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDAzNQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304035", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjU3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDAzNg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304036", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjU5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDAzOA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304038", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjYwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDAzOQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304039", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjYxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304040", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjYyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304041", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjYzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NFrOGwTe6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304042", "createdAt": "2020-07-12T11:27:44Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>\n+\t\t\t<scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304043", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjY1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304044", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjY2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304045", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.vintage</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjY3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304046", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.vintage</groupId>\n+\t\t\t<artifactId>junit-vintage-engine</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjY4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304047", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -152,19 +158,51 @@\n \t\t\t<version>2.0-m01</version>\n \t\t</dependency>\n \t\t<dependency>\n-\t    <groupId>com.notnoop.apns</groupId>\n-\t    <artifactId>apns</artifactId>\n-\t    <version>1.0.0.Beta6</version>\n+\t\t    <groupId>com.notnoop.apns</groupId>\n+\t\t    <artifactId>apns</artifactId>\n+\t\t    <version>1.0.0.Beta6</version>\n+\t\t</dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.cloud</groupId>\n+\t\t\t<artifactId>google-cloud-storage</artifactId>\n+\t\t\t<version>1.96.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst</groupId>\n+\t\t\t<artifactId>wiremock</artifactId>\n+\t\t\t<version>${wiremock.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-                <dependency>\n-                        <groupId>com.h2database</groupId>\n-                        <artifactId>h2</artifactId>\n-                        <scope>runtime</scope>\n-                </dependency>\n \t\t<dependency>\n-\t\t<groupId>com.google.cloud</groupId>\n-\t\t<artifactId>google-cloud-storage</artifactId>\n-\t\t<version>1.96.0</version>\n+\t\t\t<groupId>org.junit.platform</groupId>\n+\t\t\t<artifactId>junit-platform-runner</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.vintage</groupId>\n+\t\t\t<artifactId>junit-vintage-engine</artifactId>\n+\t\t\t<scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjY5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304048", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjcwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA0OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304049", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjcxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304050", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjcyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NVrOGwTe8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304051", "createdAt": "2020-07-12T11:27:45Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjc0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304053", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjc1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304054", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjc2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304055", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjc3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304056", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjc4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304057", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjc5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304058", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjgwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA1OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304059", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjgxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0NlrOGwTe_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304060", "createdAt": "2020-07-12T11:27:46Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjgyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTe_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTe_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304061", "createdAt": "2020-07-12T11:27:47Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjgzMjgzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTe_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMToyNzo0N1rOGwTe_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMwNDA2Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453304062", "createdAt": "2020-07-12T11:27:47Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/pom.xml", "diffHunk": "@@ -186,7 +224,32 @@\n \t\t\t\t\t<password>jbo55@dmin</password>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.openclover</groupId>\n+\t\t\t\t<artifactId>clover-maven-plugin</artifactId>\n+\t\t\t\t<version>${clover.version}</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludesList>**/*ExcludedFile.*</excludesList>\n+\t\t\t\t</configuration>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>instrument</goal>\n+\t\t\t\t\t\t\t<goal>clover</goal>\n+\t\t\t\t\t\t</goals>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bf62a0d2ea81178e70fcbb34b78cee29c850c5"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA1NTMzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozMzoxNFrOGjKd4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozMzoxNFrOGjKd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNDgzMw==", "bodyText": "This isn't a getter. Just use objectMapper directly.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439524833", "createdAt": "2020-06-12T16:33:14Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;\n+\n+  @Autowired private ObjectMapper objectMapper;\n+\n+  @Autowired protected MockMvc mockMvc;\n+\n+  protected WireMockServer getWireMockServer() {\n+    return wireMockServer;\n+  }\n+\n+  protected ObjectNode getObjectNode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA3NTc5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MDo0NlrOGjKrtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MDo0NlrOGjKrtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyODM3NQ==", "bodyText": "serverPort. It's only randomly assigned, it doesn't continue to be random.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439528375", "createdAt": "2020-06-12T16:40:46Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA3ODg0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MTo0OVrOGjKtrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MTo0OVrOGjKtrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyODg3OQ==", "bodyText": "Unused, remove.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439528879", "createdAt": "2020-06-12T16:41:49Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;\n+\n+  @Autowired private ObjectMapper objectMapper;\n+\n+  @Autowired protected MockMvc mockMvc;\n+\n+  protected WireMockServer getWireMockServer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA4MDA3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MjoxNlrOGjKufw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MjoxNlrOGjKufw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTA4Nw==", "bodyText": "FORBIDDEN/UNAUTHORIZED/CONFLICT are all unused, please remove.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439529087", "createdAt": "2020-06-12T16:42:16Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA4MTY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0Mjo1MFrOGjKvkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0Mjo1MFrOGjKvkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTM2MQ==", "bodyText": "Always \"\". Please remove.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439529361", "createdAt": "2020-06-12T16:42:50Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;\n+\n+  @Autowired private ObjectMapper objectMapper;\n+\n+  @Autowired protected MockMvc mockMvc;\n+\n+  protected WireMockServer getWireMockServer() {\n+    return wireMockServer;\n+  }\n+\n+  protected ObjectNode getObjectNode() {\n+    return objectMapper.createObjectNode();\n+  }\n+\n+  protected ObjectMapper getObjectMapper() {\n+    return objectMapper;\n+  }\n+\n+  protected void performPost(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,\n+      ResultMatcher resultMatcher)\n+      throws Exception {\n+    mockMvc\n+        .perform(post(path).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(resultMatcher)\n+        .andExpect(content().string(containsString(expectedTextInResponseBody)));\n+  }\n+\n+  protected void performGet(\n+      String path,\n+      String requestJson,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA4MjcyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MzowOFrOGjKwOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MzowOFrOGjKwOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTUzMA==", "bodyText": "Always \"\". Please make tests assert something about the response.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439529530", "createdAt": "2020-06-12T16:43:08Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;\n+\n+  @Autowired private ObjectMapper objectMapper;\n+\n+  @Autowired protected MockMvc mockMvc;\n+\n+  protected WireMockServer getWireMockServer() {\n+    return wireMockServer;\n+  }\n+\n+  protected ObjectNode getObjectNode() {\n+    return objectMapper.createObjectNode();\n+  }\n+\n+  protected ObjectMapper getObjectMapper() {\n+    return objectMapper;\n+  }\n+\n+  protected void performPost(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,\n+      ResultMatcher resultMatcher)\n+      throws Exception {\n+    mockMvc\n+        .perform(post(path).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(resultMatcher)\n+        .andExpect(content().string(containsString(expectedTextInResponseBody)));\n+  }\n+\n+  protected void performGet(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA4MzYwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MzoyOFrOGjKwvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxNToyMFrOGmWXtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTY2Mw==", "bodyText": "Only used once, please inline.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439529663", "createdAt": "2020-06-12T16:43:28Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;\n+\n+  @Autowired private ObjectMapper objectMapper;\n+\n+  @Autowired protected MockMvc mockMvc;\n+\n+  protected WireMockServer getWireMockServer() {\n+    return wireMockServer;\n+  }\n+\n+  protected ObjectNode getObjectNode() {\n+    return objectMapper.createObjectNode();\n+  }\n+\n+  protected ObjectMapper getObjectMapper() {\n+    return objectMapper;\n+  }\n+\n+  protected void performPost(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,\n+      ResultMatcher resultMatcher)\n+      throws Exception {\n+    mockMvc\n+        .perform(post(path).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(resultMatcher)\n+        .andExpect(content().string(containsString(expectedTextInResponseBody)));\n+  }\n+\n+  protected void performGet(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,\n+      ResultMatcher resultMatcher)\n+      throws Exception {\n+    mockMvc\n+        .perform(get(path).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(resultMatcher)\n+        .andExpect(content().string(containsString(expectedTextInResponseBody)));\n+  }\n+\n+  protected void performDelete(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTU4OQ==", "bodyText": "This has not been addressed yet", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442865589", "createdAt": "2020-06-19T14:15:20Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;\n+\n+@ContextConfiguration(initializers = {WireMockInitializer.class})\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n+@ActiveProfiles(\"mockit\")\n+@AutoConfigureMockMvc\n+public class BaseMockIT {\n+\n+  protected static final ResultMatcher OK = status().isOk();\n+\n+  protected static final ResultMatcher BAD_REQUEST = status().isBadRequest();\n+\n+  protected static final ResultMatcher FORBIDDEN = status().isForbidden();\n+\n+  protected static final ResultMatcher UNAUTHORIZED = status().isUnauthorized();\n+\n+  protected static final ResultMatcher CONFLICT = status().isConflict();\n+\n+  @Autowired private WireMockServer wireMockServer;\n+\n+  @LocalServerPort protected int randomServerPort;\n+\n+  @Autowired private ObjectMapper objectMapper;\n+\n+  @Autowired protected MockMvc mockMvc;\n+\n+  protected WireMockServer getWireMockServer() {\n+    return wireMockServer;\n+  }\n+\n+  protected ObjectNode getObjectNode() {\n+    return objectMapper.createObjectNode();\n+  }\n+\n+  protected ObjectMapper getObjectMapper() {\n+    return objectMapper;\n+  }\n+\n+  protected void performPost(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,\n+      ResultMatcher resultMatcher)\n+      throws Exception {\n+    mockMvc\n+        .perform(post(path).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(resultMatcher)\n+        .andExpect(content().string(containsString(expectedTextInResponseBody)));\n+  }\n+\n+  protected void performGet(\n+      String path,\n+      String requestJson,\n+      HttpHeaders headers,\n+      String expectedTextInResponseBody,\n+      ResultMatcher resultMatcher)\n+      throws Exception {\n+    mockMvc\n+        .perform(get(path).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(resultMatcher)\n+        .andExpect(content().string(containsString(expectedTextInResponseBody)));\n+  }\n+\n+  protected void performDelete(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTY2Mw=="}, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA4ODM5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0NDo1N1rOGjKzpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMzowOVrOGmWTdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMDQwNA==", "bodyText": "These values are mostly constants. Why don't you construct one StudyMetadataBean with the default values that you use for multiple tests? If you need to clear one value then copy the default Metadata object and clear the appropriate field.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439530404", "createdAt": "2020-06-12T16:44:57Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+  }\n+\n+  private String getStudyMetaDataJson(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NDUwMg==", "bodyText": "Thanks, this is much clearer.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442864502", "createdAt": "2020-06-19T14:13:09Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+  }\n+\n+  private String getStudyMetaDataJson(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMDQwNA=="}, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA5MzQyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0NjozNlrOGjK20A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxNTowOFrOGmWXPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMTIxNg==", "bodyText": "What do you expect to happen? Add an assertion that checks that it did something", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439531216", "createdAt": "2020-06-12T16:46:36Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+  }\n+\n+  private String getStudyMetaDataJson(\n+      String studyId,\n+      String studyTitle,\n+      String studyVersion,\n+      String studyType,\n+      String studyStatus,\n+      String studyCategory,\n+      String studyTagline,\n+      String studySponser,\n+      String studyEnrolling,\n+      String appId,\n+      String appName,\n+      String appDescription,\n+      String orgId)\n+      throws JsonProcessingException {\n+    StudyMetadataBean study =\n+        new StudyMetadataBean(\n+            studyId,\n+            studyTitle,\n+            studyVersion,\n+            studyType,\n+            studyStatus,\n+            studyCategory,\n+            studyTagline,\n+            studySponser,\n+            studyEnrolling,\n+            appId,\n+            appName,\n+            appDescription,\n+            orgId);\n+    return getObjectMapper().writeValueAsString(study);\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadata() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    String requestJson =\n+        getStudyMetaDataJson(\n+            Constants.STUDY_ID,\n+            Constants.STUDY_TITLE,\n+            Constants.STUDY_VERSION,\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            Constants.APP_ID_VALUE,\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            Constants.ORG_ID_VALUE);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTQ3MA==", "bodyText": "This has not been addressed yet", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442865470", "createdAt": "2020-06-19T14:15:08Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+  }\n+\n+  private String getStudyMetaDataJson(\n+      String studyId,\n+      String studyTitle,\n+      String studyVersion,\n+      String studyType,\n+      String studyStatus,\n+      String studyCategory,\n+      String studyTagline,\n+      String studySponser,\n+      String studyEnrolling,\n+      String appId,\n+      String appName,\n+      String appDescription,\n+      String orgId)\n+      throws JsonProcessingException {\n+    StudyMetadataBean study =\n+        new StudyMetadataBean(\n+            studyId,\n+            studyTitle,\n+            studyVersion,\n+            studyType,\n+            studyStatus,\n+            studyCategory,\n+            studyTagline,\n+            studySponser,\n+            studyEnrolling,\n+            appId,\n+            appName,\n+            appDescription,\n+            orgId);\n+    return getObjectMapper().writeValueAsString(study);\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadata() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    String requestJson =\n+        getStudyMetaDataJson(\n+            Constants.STUDY_ID,\n+            Constants.STUDY_TITLE,\n+            Constants.STUDY_VERSION,\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            Constants.APP_ID_VALUE,\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            Constants.ORG_ID_VALUE);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMTIxNg=="}, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA5NjE3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/__files/response-server-deactivate-response.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0NzoyNlrOGjK4hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0NzoyNlrOGjK4hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMTY1Mw==", "bodyText": "formatting", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439531653", "createdAt": "2020-06-12T16:47:26Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/__files/response-server-deactivate-response.json", "diffHunk": "@@ -0,0 +1,6 @@\n+{\n+    \"code\":\"200\",\n+\t\"message\":\"SUCCESS\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA5NjY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/__files/auth-server-token-validateCredentials-response.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0NzozNVrOGjK4zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0NzozNVrOGjK4zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMTcyNg==", "bodyText": "formatting", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439531726", "createdAt": "2020-06-12T16:47:35Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/__files/auth-server-token-validateCredentials-response.json", "diffHunk": "@@ -0,0 +1,6 @@\n+{\n+    \"code\":\"200\",\n+\t\"message\":\"SUCCESS\",\n+\t\"isValidClient\":true\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA5ODgxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/testutils/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0ODoxMVrOGjK6GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0ODoxMVrOGjK6GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjA1Nw==", "bodyText": "CUSTOM_STUDY_ID", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439532057", "createdAt": "2020-06-12T16:48:11Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/testutils/Constants.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.google.cloud.healthcare.fdamystudies.testutils;\n+\n+public final class Constants {\n+\n+  private Constants() {}\n+\n+  public static final String STUDY_VERSION = \"1.0\";\n+  public static final String APP_ID_HEADER = \"appId\";\n+  public static final String STUDY_ID = \"studyId1\";\n+  public static final String ORG_ID_HEADER = \"orgId\";\n+  public static final String STUDY_TITLE = \"studyTitle\";\n+  public static final String STUDY_TYPE = \"open\";\n+  public static final String STUDY_STATUS = \"Active\";\n+  public static final String STUDY_CATEGORY = \"Public Health\";\n+  public static final String STUDY_TAGLINE = \"Basics of Study\";\n+  public static final String STUDY_SPONSOR = \"fda\";\n+  public static final String STUDY_ENROLLING = \"Yes\";\n+  public static final String APP_NAME = \"appName\";\n+  public static final String APP_DESCRIPTION = \"appDescription\";\n+  public static final String CUSTOM_STUDYID = \"StudyID001\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODEwNTY4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MDoxOVrOGjK-Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MDoxOVrOGjK-Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMzEzNA==", "bodyText": "Add additional verifications", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439533134", "createdAt": "2020-06-12T16:50:19Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired UserProfileController profileController;\n+  @Autowired UserManagementProfileService profileService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, \"\", TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), \"\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfile() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, \"\", headers, \"\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileInvalid() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, \"\", headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfile() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    UserRequestBean bean = new UserRequestBean();\n+    String requestJson = getObjectMapper().writeValueAsString(bean);\n+    performPost(UPDATE_USER_PROFILE_PATH, requestJson, headers, \"\", OK);\n+  }\n+\n+  @Test\n+  public void deactivateAccount() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    StudyReqBean studyReqBean = new StudyReqBean(Constants.STUDY_ID, Constants.DELETE);\n+    List<StudyReqBean> list = new ArrayList<StudyReqBean>();\n+    list.add(studyReqBean);\n+    DeactivateAcctBean acctBean = new DeactivateAcctBean(list);\n+    String requestJson = getObjectMapper().writeValueAsString(acctBean);\n+    performDelete(DEACTIVATE_PATH, requestJson, headers, \"\", OK);\n+  }\n+\n+  @Test\n+  public void resendConfirmationInvalid() throws Exception {\n+\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.APP_ID_HEADER, Constants.ORG_ID_HEADER);\n+\n+    // without email\n+    LoginBean loginBean = new LoginBean(null, Constants.PASSWORD);\n+    String requestJson = getObjectMapper().writeValueAsString(loginBean);\n+    performPost(RESEND_CONFIRMATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // invalid email\n+    loginBean = new LoginBean(Constants.INVALID_EMAIL, Constants.PASSWORD);\n+    requestJson = getObjectMapper().writeValueAsString(loginBean);\n+    performPost(RESEND_CONFIRMATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without appId\n+    headers.set(Constants.APP_ID_HEADER, \"\");\n+    loginBean = new LoginBean(Constants.EMAIL_ID, Constants.PASSWORD);\n+    requestJson = getObjectMapper().writeValueAsString(loginBean);\n+    performPost(RESEND_CONFIRMATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without OrgId\n+    headers.set(Constants.APP_ID_HEADER, Constants.APP_ID_VALUE);\n+    headers.set(Constants.ORG_ID_HEADER, \"\");\n+    loginBean = new LoginBean(Constants.EMAIL_ID, Constants.PASSWORD);\n+    requestJson = getObjectMapper().writeValueAsString(loginBean);\n+    performPost(RESEND_CONFIRMATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void resendConfirmation() throws Exception {\n+\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.APP_ID_HEADER, Constants.ORG_ID_HEADER);\n+\n+    LoginBean bean = new LoginBean(Constants.VALID_EMAIL, Constants.PASSWORD);\n+    String requestJson = getObjectMapper().writeValueAsString(bean);\n+    performPost(RESEND_CONFIRMATION_PATH, requestJson, headers, \"\", OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODEwNjEwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MDozMVrOGjK-nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MDozMVrOGjK-nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMzIxNQ==", "bodyText": "Add additional verifications", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439533215", "createdAt": "2020-06-12T16:50:31Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired UserProfileController profileController;\n+  @Autowired UserManagementProfileService profileService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, \"\", TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), \"\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfile() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, \"\", headers, \"\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileInvalid() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, \"\", headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfile() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    UserRequestBean bean = new UserRequestBean();\n+    String requestJson = getObjectMapper().writeValueAsString(bean);\n+    performPost(UPDATE_USER_PROFILE_PATH, requestJson, headers, \"\", OK);\n+  }\n+\n+  @Test\n+  public void deactivateAccount() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    StudyReqBean studyReqBean = new StudyReqBean(Constants.STUDY_ID, Constants.DELETE);\n+    List<StudyReqBean> list = new ArrayList<StudyReqBean>();\n+    list.add(studyReqBean);\n+    DeactivateAcctBean acctBean = new DeactivateAcctBean(list);\n+    String requestJson = getObjectMapper().writeValueAsString(acctBean);\n+    performDelete(DEACTIVATE_PATH, requestJson, headers, \"\", OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODEwOTM1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MTozNlrOGjLArg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MTozNlrOGjLArg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMzc0Mg==", "bodyText": "Add additional verifications", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r439533742", "createdAt": "2020-06-12T16:51:36Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired UserProfileController profileController;\n+  @Autowired UserManagementProfileService profileService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, \"\", TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), \"\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfile() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, \"\", headers, \"\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileInvalid() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, \"\", headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfile() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    UserRequestBean bean = new UserRequestBean();\n+    String requestJson = getObjectMapper().writeValueAsString(bean);\n+    performPost(UPDATE_USER_PROFILE_PATH, requestJson, headers, \"\", OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTExOTcyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMTo1M1rOGmWQ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMjo1NToxM1rOGnn2Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2MzgzMQ==", "bodyText": "I don't think these comments really help here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442863831", "createdAt": "2020-06-19T14:11:53Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwMDQ1MA==", "bodyText": "removed this comment and added new Asserts here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r444200450", "createdAt": "2020-06-23T12:55:13Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2MzgzMQ=="}, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTEyMDY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMjoxMFrOGmWRdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMjo1NTozM1rOGnn24g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2Mzk4OQ==", "bodyText": "Use HttpStatus.SUCCESS instead of literal 200.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442863989", "createdAt": "2020-06-19T14:12:10Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, String.valueOf(200), OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwMDY3NA==", "bodyText": "changed to String.valueOf(HttpStatus.OK.value())", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r444200674", "createdAt": "2020-06-23T12:55:33Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, String.valueOf(200), OK);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2Mzk4OQ=="}, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTEyNTM3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMzozOFrOGmWUgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMjo1NjoxM1rOGnn4sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NDc2OQ==", "bodyText": "Same here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442864769", "createdAt": "2020-06-19T14:13:38Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, String.valueOf(200), OK);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadataInvalidInput() throws Exception {\n+  public void addUpdateStudyMetadataFailure() throws Exception {\n \n     HttpHeaders headers = TestUtils.getCommonHeaders();\n \n     // without studyId\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            \"\",\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    StudyMetadataBean metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyId(\"\");\n+    String requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without studyVersion\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            \"\",\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyVersion(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without appId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            \"\",\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setAppId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without orgId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_HEADER,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            \"\");\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setOrgId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotificationInvalidInput() throws Exception {\n+  public void sendNotificationFailure() throws Exception {\n \n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n     // null body\n     NotificationForm notificationForm = null;\n     String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n-    // empty appId and empty notificationType\n-    NotificationBean notificationBean =\n-        new NotificationBean(Constants.STUDY_ID, Constants.CUSTOM_STUDYID, null, null);\n-    List<NotificationBean> list = new ArrayList<NotificationBean>();\n-    list.add(notificationBean);\n-    notificationForm = new NotificationForm(list);\n-    requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    // empty notificationType\n+    requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID, Constants.CUSTOM_STUDY_ID, Constants.APP_ID_HEADER, \"\");\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotification() throws Exception {\n-\n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+  public void sendNotificationSuccess() throws Exception {\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n-    NotificationBean notificationBean =\n-        new NotificationBean(\n+    String requestJson =\n+        getNotificationForm(\n             Constants.STUDY_ID,\n-            Constants.CUSTOM_STUDYID,\n+            Constants.CUSTOM_STUDY_ID,\n             Constants.APP_ID_HEADER,\n-            AppConstants.STUDY_LEVEL);\n+            Constants.STUDY_LEVEL);\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, String.valueOf(200), OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 225}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwMTEzOA==", "bodyText": "changed to String.valueOf(HttpStatus.OK.value())", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r444201138", "createdAt": "2020-06-23T12:56:13Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, String.valueOf(200), OK);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadataInvalidInput() throws Exception {\n+  public void addUpdateStudyMetadataFailure() throws Exception {\n \n     HttpHeaders headers = TestUtils.getCommonHeaders();\n \n     // without studyId\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            \"\",\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    StudyMetadataBean metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyId(\"\");\n+    String requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without studyVersion\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            \"\",\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyVersion(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without appId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            \"\",\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setAppId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without orgId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_HEADER,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            \"\");\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setOrgId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotificationInvalidInput() throws Exception {\n+  public void sendNotificationFailure() throws Exception {\n \n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n     // null body\n     NotificationForm notificationForm = null;\n     String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n-    // empty appId and empty notificationType\n-    NotificationBean notificationBean =\n-        new NotificationBean(Constants.STUDY_ID, Constants.CUSTOM_STUDYID, null, null);\n-    List<NotificationBean> list = new ArrayList<NotificationBean>();\n-    list.add(notificationBean);\n-    notificationForm = new NotificationForm(list);\n-    requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    // empty notificationType\n+    requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID, Constants.CUSTOM_STUDY_ID, Constants.APP_ID_HEADER, \"\");\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotification() throws Exception {\n-\n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+  public void sendNotificationSuccess() throws Exception {\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n-    NotificationBean notificationBean =\n-        new NotificationBean(\n+    String requestJson =\n+        getNotificationForm(\n             Constants.STUDY_ID,\n-            Constants.CUSTOM_STUDYID,\n+            Constants.CUSTOM_STUDY_ID,\n             Constants.APP_ID_HEADER,\n-            AppConstants.STUDY_LEVEL);\n+            Constants.STUDY_LEVEL);\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, String.valueOf(200), OK);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NDc2OQ=="}, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 225}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTEyODA2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxNDoyOFrOGmWWFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMjo1Nzo0MFrOGnn8fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTE3Mg==", "bodyText": "Prefer using the actual noun rather than \"Bean\". So this should be notification.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r442865172", "createdAt": "2020-06-19T14:14:28Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, String.valueOf(200), OK);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadataInvalidInput() throws Exception {\n+  public void addUpdateStudyMetadataFailure() throws Exception {\n \n     HttpHeaders headers = TestUtils.getCommonHeaders();\n \n     // without studyId\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            \"\",\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    StudyMetadataBean metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyId(\"\");\n+    String requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without studyVersion\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            \"\",\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyVersion(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without appId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            \"\",\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setAppId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without orgId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_HEADER,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            \"\");\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setOrgId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotificationInvalidInput() throws Exception {\n+  public void sendNotificationFailure() throws Exception {\n \n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n     // null body\n     NotificationForm notificationForm = null;\n     String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n-    // empty appId and empty notificationType\n-    NotificationBean notificationBean =\n-        new NotificationBean(Constants.STUDY_ID, Constants.CUSTOM_STUDYID, null, null);\n-    List<NotificationBean> list = new ArrayList<NotificationBean>();\n-    list.add(notificationBean);\n-    notificationForm = new NotificationForm(list);\n-    requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    // empty notificationType\n+    requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID, Constants.CUSTOM_STUDY_ID, Constants.APP_ID_HEADER, \"\");\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotification() throws Exception {\n-\n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+  public void sendNotificationSuccess() throws Exception {\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n-    NotificationBean notificationBean =\n-        new NotificationBean(\n+    String requestJson =\n+        getNotificationForm(\n             Constants.STUDY_ID,\n-            Constants.CUSTOM_STUDYID,\n+            Constants.CUSTOM_STUDY_ID,\n             Constants.APP_ID_HEADER,\n-            AppConstants.STUDY_LEVEL);\n+            Constants.STUDY_LEVEL);\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, String.valueOf(200), OK);\n+  }\n+\n+  private String getNotificationForm(\n+      String studyId, String customStudyId, String appId, String notificationType)\n+      throws JsonProcessingException {\n+    NotificationBean bean = new NotificationBean(studyId, customStudyId, appId, notificationType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 231}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwMjExMA==", "bodyText": "changed it to     notificationBean instead of only bean.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r444202110", "createdAt": "2020-06-23T12:57:40Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -32,174 +31,103 @@ public void contextLoads() {\n     assertNotNull(studiesServices);\n   }\n \n-  private String getStudyMetaDataJson(\n-      String studyId,\n-      String studyTitle,\n-      String studyVersion,\n-      String studyType,\n-      String studyStatus,\n-      String studyCategory,\n-      String studyTagline,\n-      String studySponser,\n-      String studyEnrolling,\n-      String appId,\n-      String appName,\n-      String appDescription,\n-      String orgId)\n-      throws JsonProcessingException {\n-    StudyMetadataBean study =\n-        new StudyMetadataBean(\n-            studyId,\n-            studyTitle,\n-            studyVersion,\n-            studyType,\n-            studyStatus,\n-            studyCategory,\n-            studyTagline,\n-            studySponser,\n-            studyEnrolling,\n-            appId,\n-            appName,\n-            appDescription,\n-            orgId);\n-    return getObjectMapper().writeValueAsString(study);\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadata() throws Exception {\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n     HttpHeaders headers = TestUtils.getCommonHeaders();\n-\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n-    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, String.valueOf(200), OK);\n   }\n \n   @Test\n-  public void addUpdateStudyMetadataInvalidInput() throws Exception {\n+  public void addUpdateStudyMetadataFailure() throws Exception {\n \n     HttpHeaders headers = TestUtils.getCommonHeaders();\n \n     // without studyId\n-    String requestJson =\n-        getStudyMetaDataJson(\n-            \"\",\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    StudyMetadataBean metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyId(\"\");\n+    String requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without studyVersion\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            \"\",\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_VALUE,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyVersion(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without appId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            \"\",\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            Constants.ORG_ID_VALUE);\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setAppId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n     // without orgId\n-    requestJson =\n-        getStudyMetaDataJson(\n-            Constants.STUDY_ID,\n-            Constants.STUDY_TITLE,\n-            Constants.STUDY_VERSION,\n-            Constants.STUDY_TYPE,\n-            Constants.STUDY_STATUS,\n-            Constants.STUDY_CATEGORY,\n-            Constants.STUDY_TAGLINE,\n-            Constants.STUDY_SPONSOR,\n-            Constants.STUDY_ENROLLING,\n-            Constants.APP_ID_HEADER,\n-            Constants.APP_NAME,\n-            Constants.APP_DESCRIPTION,\n-            \"\");\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setOrgId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n     performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotificationInvalidInput() throws Exception {\n+  public void sendNotificationFailure() throws Exception {\n \n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n     // null body\n     NotificationForm notificationForm = null;\n     String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n \n-    // empty appId and empty notificationType\n-    NotificationBean notificationBean =\n-        new NotificationBean(Constants.STUDY_ID, Constants.CUSTOM_STUDYID, null, null);\n-    List<NotificationBean> list = new ArrayList<NotificationBean>();\n-    list.add(notificationBean);\n-    notificationForm = new NotificationForm(list);\n-    requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    // empty notificationType\n+    requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID, Constants.CUSTOM_STUDY_ID, Constants.APP_ID_HEADER, \"\");\n     performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n   }\n \n   @Test\n-  public void sendNotification() throws Exception {\n-\n-    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+  public void sendNotificationSuccess() throws Exception {\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n \n-    NotificationBean notificationBean =\n-        new NotificationBean(\n+    String requestJson =\n+        getNotificationForm(\n             Constants.STUDY_ID,\n-            Constants.CUSTOM_STUDYID,\n+            Constants.CUSTOM_STUDY_ID,\n             Constants.APP_ID_HEADER,\n-            AppConstants.STUDY_LEVEL);\n+            Constants.STUDY_LEVEL);\n+    // sample response={\"code\":200,\"message\":\"Success\"}\n+    // expect actual response contains 200\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, String.valueOf(200), OK);\n+  }\n+\n+  private String getNotificationForm(\n+      String studyId, String customStudyId, String appId, String notificationType)\n+      throws JsonProcessingException {\n+    NotificationBean bean = new NotificationBean(studyId, customStudyId, appId, notificationType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTE3Mg=="}, "originalCommit": {"oid": "1adb3885e434cfaea509af2614740f6cd81a20e5"}, "originalPosition": 231}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTUzNTU2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzowNToyMVrOGqP-Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzowNToyMVrOGqP-Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1NTA3OQ==", "bodyText": "As I said, this test doesn't actually do anything. Please remove it if you aren't going to assert anything.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r446955079", "createdAt": "2020-06-29T13:05:21Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+  }\n+\n+  private String getStudyMetaDataJson(\n+      String studyId,\n+      String studyTitle,\n+      String studyVersion,\n+      String studyType,\n+      String studyStatus,\n+      String studyCategory,\n+      String studyTagline,\n+      String studySponser,\n+      String studyEnrolling,\n+      String appId,\n+      String appName,\n+      String appDescription,\n+      String orgId)\n+      throws JsonProcessingException {\n+    StudyMetadataBean study =\n+        new StudyMetadataBean(\n+            studyId,\n+            studyTitle,\n+            studyVersion,\n+            studyType,\n+            studyStatus,\n+            studyCategory,\n+            studyTagline,\n+            studySponser,\n+            studyEnrolling,\n+            appId,\n+            appName,\n+            appDescription,\n+            orgId);\n+    return getObjectMapper().writeValueAsString(study);\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadata() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    String requestJson =\n+        getStudyMetaDataJson(\n+            Constants.STUDY_ID,\n+            Constants.STUDY_TITLE,\n+            Constants.STUDY_VERSION,\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            Constants.APP_ID_VALUE,\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            Constants.ORG_ID_VALUE);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadataInvalidInput() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    // without studyId\n+    String requestJson =\n+        getStudyMetaDataJson(\n+            \"\",\n+            Constants.STUDY_TITLE,\n+            Constants.STUDY_VERSION,\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            Constants.APP_ID_VALUE,\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            Constants.ORG_ID_VALUE);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without studyVersion\n+    requestJson =\n+        getStudyMetaDataJson(\n+            Constants.STUDY_ID,\n+            Constants.STUDY_TITLE,\n+            \"\",\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            Constants.APP_ID_VALUE,\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            Constants.ORG_ID_VALUE);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without appId\n+    requestJson =\n+        getStudyMetaDataJson(\n+            Constants.STUDY_ID,\n+            Constants.STUDY_TITLE,\n+            Constants.STUDY_VERSION,\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            \"\",\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            Constants.ORG_ID_VALUE);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without orgId\n+    requestJson =\n+        getStudyMetaDataJson(\n+            Constants.STUDY_ID,\n+            Constants.STUDY_TITLE,\n+            Constants.STUDY_VERSION,\n+            Constants.STUDY_TYPE,\n+            Constants.STUDY_STATUS,\n+            Constants.STUDY_CATEGORY,\n+            Constants.STUDY_TAGLINE,\n+            Constants.STUDY_SPONSOR,\n+            Constants.STUDY_ENROLLING,\n+            Constants.APP_ID_HEADER,\n+            Constants.APP_NAME,\n+            Constants.APP_DESCRIPTION,\n+            \"\");\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void sendNotificationInvalidInput() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+\n+    // null body\n+    NotificationForm notificationForm = null;\n+    String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty appId and empty notificationType\n+    NotificationBean notificationBean =\n+        new NotificationBean(Constants.STUDY_ID, Constants.CUSTOM_STUDYID, null, null);\n+    List<NotificationBean> list = new ArrayList<NotificationBean>();\n+    list.add(notificationBean);\n+    notificationForm = new NotificationForm(list);\n+    requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void sendNotification() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+\n+    NotificationBean notificationBean =\n+        new NotificationBean(\n+            Constants.STUDY_ID,\n+            Constants.CUSTOM_STUDYID,\n+            Constants.APP_ID_HEADER,\n+            AppConstants.STUDY_LEVEL);\n+    List<NotificationBean> list = new ArrayList<NotificationBean>();\n+    list.add(notificationBean);\n+    NotificationForm notificationForm = new NotificationForm(list);\n+    String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29f16a096d770bc19d39e2612bb94f9e4858f5"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTUzODI5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzowNjowNVrOGqP_8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzowNjowNVrOGqP_8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1NTUwNw==", "bodyText": "Why aren't you using mockMvc?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r446955507", "createdAt": "2020-06-29T13:06:05Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserDetailsBORepository;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired UserProfileController profileController;\n+  @Autowired UserManagementProfileService profileService;\n+  @Autowired FdaEaUserDetailsServiceImpl service;\n+  @Autowired TestRestTemplate restTemplate;\n+  @Autowired UserDetailsBORepository repository;\n+\n+  @Value(\"${auth.server.deactivateUrl}\")\n+  private String deactivateUrl;\n+\n+  @Value(\"${response.server.url.participant.withdraw}\")\n+  private String withdrawUrl;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+    assertNotNull(service);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, headers, \"cdash93@gmail.com\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileBadRequest() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, headers, BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    SettingsRespBean settingRespBean = new SettingsRespBean(true, true, true, true, \"\", \"\");\n+    UserRequestBean userRequestBean = new UserRequestBean(settingRespBean, new InfoBean());\n+    String requestJson = getObjectMapper().writeValueAsString(userRequestBean);\n+    performPost(\n+        UPDATE_USER_PROFILE_PATH, requestJson, headers, String.valueOf(HttpStatus.OK.value()), OK);\n+    MvcResult result = performGet(USER_PROFILE_PATH, headers, OK);\n+    boolean remote =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.settings.remoteNotifications\");\n+    assertEquals(true, remote);\n+  }\n+\n+  @Test\n+  public void deactivateAccountSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    StudyReqBean studyReqBean = new StudyReqBean(Constants.STUDY_ID, Constants.DELETE);\n+    List<StudyReqBean> list = new ArrayList<StudyReqBean>();\n+    list.add(studyReqBean);\n+    DeactivateAcctBean acctBean = new DeactivateAcctBean(list);\n+    String requestJson = getObjectMapper().writeValueAsString(acctBean);\n+    performDelete(DEACTIVATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+\n+    UserDetailsBO daoResp = service.loadUserDetailsByUserId(Constants.VALID_USER_ID);\n+    assertEquals(3, daoResp.getStatus());\n+\n+    HttpEntity<String> responseEntity = new HttpEntity<String>(headers);\n+    ResponseEntity<String> response =\n+        restTemplate.postForEntity(deactivateUrl, responseEntity, String.class);\n+    assertEquals(\"1\", response.getBody());\n+\n+    response =\n+        restTemplate.postForEntity(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698e22161b5ce412896e36ee70a74916a29d3e57"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODc4MjI1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowODoxMVrOGsOigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDoxMDozMVrOGuAZlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyODczOQ==", "bodyText": "Why did you use an error response for a success test? Also, your server shouldn't be returning OK if Google tells you that the notification failed to send.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r449028739", "createdAt": "2020-07-02T14:08:11Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServicesImpl;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.ErrorCode;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+  @Autowired CommonDaoImpl commonDao;\n+\n+  @Autowired StudiesServicesImpl serviceImpl;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+    assertNotNull(commonDao);\n+  }\n+\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    performPost(\n+        STUDY_METADATA_PATH, requestJson, headers, String.valueOf(HttpStatus.OK.value()), OK);\n+    HashSet<String> set = new HashSet<>();\n+    set.add(Constants.STUDY_ID);\n+    List<StudyInfoBO> list = commonDao.getStudyInfoSet(set);\n+    StudyInfoBO studyInfoBo =\n+        list.stream()\n+            .filter(x -> x.getCustomId().equals(Constants.STUDY_ID))\n+            .findFirst()\n+            .orElse(null);\n+    assertNotNull(studyInfoBo);\n+    assertEquals(Constants.STUDY_SPONSOR, studyInfoBo.getSponsor());\n+    assertEquals(Constants.STUDY_TAGLINE, studyInfoBo.getTagline());\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadataBadRequest() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    // without studyId\n+    StudyMetadataBean metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyId(\"\");\n+    String requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without studyVersion\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyVersion(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without appId\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setAppId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without orgId\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setOrgId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void sendNotificationBadRequest() throws Exception {\n+\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+\n+    // null body\n+    NotificationForm notificationForm = null;\n+    String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty notificationType\n+    requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID, Constants.CUSTOM_STUDY_ID, Constants.APP_ID_HEADER, \"\");\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void sendNotificationSuccess() throws Exception {\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+\n+    // StudyLevel notificationType\n+    String requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID,\n+            Constants.CUSTOM_STUDY_ID,\n+            Constants.APP_ID_VALUE,\n+            Constants.STUDY_LEVEL);\n+\n+    mockMvc\n+        .perform(post(SEND_NOTIFICATION_PATH).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.message\", is(ErrorCode.EC_200.errorMessage())))\n+        .andExpect(jsonPath(\"$.code\", is(ErrorCode.EC_200.code())))\n+        .andExpect(jsonPath(\"$.response.multicast_id\", greaterThan(0L)))\n+        .andExpect(jsonPath(\"$.response.results[0].error\", is(\"NotRegistered\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "983a4df3ef8e8a5ee8a879ab3b0bbbe26029511b"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg5NDIyOQ==", "bodyText": "done the changes to assert success response", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r450894229", "createdAt": "2020-07-07T14:10:31Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudiesControllerTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudiesController;\n+import com.google.cloud.healthcare.fdamystudies.dao.CommonDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyInfoBO;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServices;\n+import com.google.cloud.healthcare.fdamystudies.service.StudiesServicesImpl;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.ErrorCode;\n+\n+public class StudiesControllerTest extends BaseMockIT {\n+\n+  private static final String STUDY_METADATA_PATH = \"/studies/studymetadata\";\n+  private static final String SEND_NOTIFICATION_PATH = \"/studies/sendNotification\";\n+\n+  @Autowired StudiesController studiesController;\n+  @Autowired StudiesServices studiesServices;\n+  @Autowired CommonDaoImpl commonDao;\n+\n+  @Autowired StudiesServicesImpl serviceImpl;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(studiesController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studiesServices);\n+    assertNotNull(commonDao);\n+  }\n+\n+  public StudyMetadataBean createStudyMetadataBean() {\n+    return new StudyMetadataBean(\n+        Constants.STUDY_ID,\n+        Constants.STUDY_TITLE,\n+        Constants.STUDY_VERSION,\n+        Constants.STUDY_TYPE,\n+        Constants.STUDY_STATUS,\n+        Constants.STUDY_CATEGORY,\n+        Constants.STUDY_TAGLINE,\n+        Constants.STUDY_SPONSOR,\n+        Constants.STUDY_ENROLLING,\n+        Constants.APP_ID_VALUE,\n+        Constants.APP_NAME,\n+        Constants.APP_DESCRIPTION,\n+        Constants.ORG_ID_VALUE);\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadataSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    String requestJson = getObjectMapper().writeValueAsString(createStudyMetadataBean());\n+    performPost(\n+        STUDY_METADATA_PATH, requestJson, headers, String.valueOf(HttpStatus.OK.value()), OK);\n+    HashSet<String> set = new HashSet<>();\n+    set.add(Constants.STUDY_ID);\n+    List<StudyInfoBO> list = commonDao.getStudyInfoSet(set);\n+    StudyInfoBO studyInfoBo =\n+        list.stream()\n+            .filter(x -> x.getCustomId().equals(Constants.STUDY_ID))\n+            .findFirst()\n+            .orElse(null);\n+    assertNotNull(studyInfoBo);\n+    assertEquals(Constants.STUDY_SPONSOR, studyInfoBo.getSponsor());\n+    assertEquals(Constants.STUDY_TAGLINE, studyInfoBo.getTagline());\n+  }\n+\n+  @Test\n+  public void addUpdateStudyMetadataBadRequest() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+\n+    // without studyId\n+    StudyMetadataBean metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyId(\"\");\n+    String requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without studyVersion\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setStudyVersion(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without appId\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setAppId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // without orgId\n+    metadataBean = createStudyMetadataBean();\n+    metadataBean.setOrgId(\"\");\n+    requestJson = getObjectMapper().writeValueAsString(metadataBean);\n+    performPost(STUDY_METADATA_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void sendNotificationBadRequest() throws Exception {\n+\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+\n+    // null body\n+    NotificationForm notificationForm = null;\n+    String requestJson = getObjectMapper().writeValueAsString(notificationForm);\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty notificationType\n+    requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID, Constants.CUSTOM_STUDY_ID, Constants.APP_ID_HEADER, \"\");\n+    performPost(SEND_NOTIFICATION_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void sendNotificationSuccess() throws Exception {\n+    HttpHeaders headers =\n+        TestUtils.getCommonHeaders(Constants.CLIENT_ID_HEADER, Constants.SECRET_KEY_HEADER);\n+\n+    // StudyLevel notificationType\n+    String requestJson =\n+        getNotificationForm(\n+            Constants.STUDY_ID,\n+            Constants.CUSTOM_STUDY_ID,\n+            Constants.APP_ID_VALUE,\n+            Constants.STUDY_LEVEL);\n+\n+    mockMvc\n+        .perform(post(SEND_NOTIFICATION_PATH).content(requestJson).headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.message\", is(ErrorCode.EC_200.errorMessage())))\n+        .andExpect(jsonPath(\"$.code\", is(ErrorCode.EC_200.code())))\n+        .andExpect(jsonPath(\"$.response.multicast_id\", greaterThan(0L)))\n+        .andExpect(jsonPath(\"$.response.results[0].error\", is(\"NotRegistered\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyODczOQ=="}, "originalCommit": {"oid": "983a4df3ef8e8a5ee8a879ab3b0bbbe26029511b"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODc4NTAzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowODo1NVrOGsOkVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDowOTo1NlrOGuAYDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyOTIwNw==", "bodyText": "assertTrue", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r449029207", "createdAt": "2020-07-02T14:08:55Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserDetailsBORepository;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired UserProfileController profileController;\n+  @Autowired UserManagementProfileService profileService;\n+  @Autowired FdaEaUserDetailsServiceImpl service;\n+  @Autowired TestRestTemplate restTemplate;\n+  @Autowired UserDetailsBORepository repository;\n+\n+  @Value(\"${auth.server.deactivateUrl}\")\n+  private String deactivateUrl;\n+\n+  @Value(\"${response.server.url.participant.withdraw}\")\n+  private String withdrawUrl;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+    assertNotNull(service);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, headers, \"cdash93@gmail.com\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileBadRequest() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, headers, BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    SettingsRespBean settingRespBean = new SettingsRespBean(true, true, true, true, \"\", \"\");\n+    UserRequestBean userRequestBean = new UserRequestBean(settingRespBean, new InfoBean());\n+    String requestJson = getObjectMapper().writeValueAsString(userRequestBean);\n+    performPost(\n+        UPDATE_USER_PROFILE_PATH, requestJson, headers, String.valueOf(HttpStatus.OK.value()), OK);\n+    MvcResult result = performGet(USER_PROFILE_PATH, headers, OK);\n+    boolean remote =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.settings.remoteNotifications\");\n+    assertEquals(true, remote);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "983a4df3ef8e8a5ee8a879ab3b0bbbe26029511b"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg5MzgzOA==", "bodyText": "replaced with assertTrue", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r450893838", "createdAt": "2020-07-07T14:09:56Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.bean.StudyReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.DeactivateAcctBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.InfoBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.LoginBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.SettingsRespBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequestBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.UserProfileController;\n+import com.google.cloud.healthcare.fdamystudies.model.UserDetailsBO;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserDetailsBORepository;\n+import com.google.cloud.healthcare.fdamystudies.service.FdaEaUserDetailsServiceImpl;\n+import com.google.cloud.healthcare.fdamystudies.service.UserManagementProfileService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  private static final String PING_PATH = \"/ping\";\n+  private static final String USER_PROFILE_PATH = \"/userProfile\";\n+  private static final String UPDATE_USER_PROFILE_PATH = \"/updateUserProfile\";\n+  private static final String DEACTIVATE_PATH = \"/deactivate\";\n+  private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n+\n+  @Autowired UserProfileController profileController;\n+  @Autowired UserManagementProfileService profileService;\n+  @Autowired FdaEaUserDetailsServiceImpl service;\n+  @Autowired TestRestTemplate restTemplate;\n+  @Autowired UserDetailsBORepository repository;\n+\n+  @Value(\"${auth.server.deactivateUrl}\")\n+  private String deactivateUrl;\n+\n+  @Value(\"${response.server.url.participant.withdraw}\")\n+  private String withdrawUrl;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(profileController);\n+    assertNotNull(mockMvc);\n+    assertNotNull(profileService);\n+    assertNotNull(service);\n+  }\n+\n+  @Test\n+  public void ping() throws Exception {\n+    performGet(PING_PATH, TestUtils.getCommonHeaders(Constants.USER_ID_HEADER), OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+    performGet(USER_PROFILE_PATH, headers, \"cdash93@gmail.com\", OK);\n+  }\n+\n+  @Test\n+  public void getUserProfileBadRequest() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    // Invalid userId\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(USER_PROFILE_PATH, headers, BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void updateUserProfileSuccess() throws Exception {\n+    HttpHeaders headers = TestUtils.getCommonHeaders(Constants.USER_ID_HEADER);\n+\n+    SettingsRespBean settingRespBean = new SettingsRespBean(true, true, true, true, \"\", \"\");\n+    UserRequestBean userRequestBean = new UserRequestBean(settingRespBean, new InfoBean());\n+    String requestJson = getObjectMapper().writeValueAsString(userRequestBean);\n+    performPost(\n+        UPDATE_USER_PROFILE_PATH, requestJson, headers, String.valueOf(HttpStatus.OK.value()), OK);\n+    MvcResult result = performGet(USER_PROFILE_PATH, headers, OK);\n+    boolean remote =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.settings.remoteNotifications\");\n+    assertEquals(true, remote);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyOTIwNw=="}, "originalCommit": {"oid": "983a4df3ef8e8a5ee8a879ab3b0bbbe26029511b"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI1MzA2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozODo1OVrOGuK-NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozODo1OVrOGuK-NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NzQ0NA==", "bodyText": "Don't use @Order", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r451067444", "createdAt": "2020-07-07T18:38:59Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/UserProfileControllerTest.java", "diffHunk": "@@ -41,18 +49,21 @@\n   private static final String DEACTIVATE_PATH = \"/deactivate\";\n   private static final String RESEND_CONFIRMATION_PATH = \"/resendConfirmation\";\n \n-  @Autowired UserProfileController profileController;\n-  @Autowired UserManagementProfileService profileService;\n-  @Autowired FdaEaUserDetailsServiceImpl service;\n-  @Autowired TestRestTemplate restTemplate;\n-  @Autowired UserDetailsBORepository repository;\n+  @Autowired private UserProfileController profileController;\n+\n+  @Autowired private UserManagementProfileService profileService;\n+\n+  @Autowired private FdaEaUserDetailsServiceImpl service;\n+\n+  @Autowired private AppConfig appconfig;\n \n   @Value(\"${auth.server.deactivateUrl}\")\n   private String deactivateUrl;\n \n   @Value(\"${response.server.url.participant.withdraw}\")\n   private String withdrawUrl;\n \n+  @Order(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "994f2e655e39fcfa97b44db4a6aef4e0ef7f85fb"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODYyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwReww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwReww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTIzNQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'org.apache.commons.io.IOUtils'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271235", "createdAt": "2020-07-12T05:47:49Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -13,24 +13,32 @@\n import java.io.OutputStreamWriter;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+\n+import org.apache.commons.io.IOUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODYzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwRexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwRexA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTIzNg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'com.fasterxml.jackson.databind.JsonNode'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271236", "createdAt": "2020-07-12T05:47:49Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -13,24 +13,32 @@\n import java.io.OutputStreamWriter;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.json.JSONArray;\n import org.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwRexQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwRexQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTIzNw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.fasterxml.jackson.databind.JsonNode' import. Should be before 'org.springframework.stereotype.Service'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271237", "createdAt": "2020-07-12T05:47:49Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -13,24 +13,32 @@\n import java.io.OutputStreamWriter;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.json.JSONArray;\n import org.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODY1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwRexg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo0OVrOGwRexg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTIzOA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.fasterxml.jackson.databind.ObjectMapper' import. Should be before 'org.springframework.stereotype.Service'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271238", "createdAt": "2020-07-12T05:47:49Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -13,24 +13,32 @@\n import java.io.OutputStreamWriter;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.json.JSONArray;\n import org.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODY2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwRexw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwRexw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTIzOQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.PushNotificationResponse' import. Should be before 'org.springframework.stereotype.Service'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271239", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -13,24 +13,32 @@\n import java.io.OutputStreamWriter;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.json.JSONArray;\n import org.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n import com.google.cloud.healthcare.fdamystudies.bean.StudyMetadataBean;\n import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n import com.google.cloud.healthcare.fdamystudies.beans.NotificationBean;\n import com.google.cloud.healthcare.fdamystudies.beans.NotificationForm;\n+import com.google.cloud.healthcare.fdamystudies.beans.PushNotificationResponse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODY3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271240", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -139,45 +162,47 @@ public ErrorBean SendNotificationAction(NotificationForm notificationForm) {\n     return new ErrorBean(ErrorCode.EC_200.code(), ErrorCode.EC_200.errorMessage());\n   }\n \n-  private void sendStudyLevelNotification(\n+  private PushNotificationResponse sendStudyLevelNotification(\n       Map<Integer, Map<String, JSONArray>> studiesMap,\n       Map<Object, StudyInfoBO> studyInfobyStudyCustomId,\n       Map<Object, AppInfoDetailsBO> appInfobyAppCustomId,\n       NotificationBean notificationBean) {\n     Map<String, JSONArray> deviceTokensMap =\n         studiesMap.get(studyInfobyStudyCustomId.get(notificationBean.getCustomStudyId()).getId());\n-\n     notificationBean.setNotificationType(AppConstants.STUDY);\n     if (deviceTokensMap != null) {\n       if (deviceTokensMap.get(AppConstants.DEVICE_ANDROID) != null) {\n         notificationBean.setDeviceToken(deviceTokensMap.get(AppConstants.DEVICE_ANDROID));\n-        pushFCMNotification(\n+        return pushFCMNotification(\n             notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n       }\n       if (deviceTokensMap.get(AppConstants.DEVICE_IOS) != null) {\n         notificationBean.setDeviceToken(deviceTokensMap.get(AppConstants.DEVICE_IOS));\n         pushNotification(notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n       }\n     }\n+    return new PushNotificationResponse(null, HttpStatus.OK.value(), \"success\");\n   }\n \n-  private void sendGatewaylevelNotification(\n+  private PushNotificationResponse sendGatewaylevelNotification(\n       Map<String, JSONArray> allDeviceTokens,\n       Map<Object, AppInfoDetailsBO> appInfobyAppCustomId,\n       NotificationBean notificationBean) {\n     notificationBean.setNotificationType(AppConstants.GATEWAY);\n     if (allDeviceTokens.get(AppConstants.DEVICE_ANDROID) != null\n         && allDeviceTokens.get(AppConstants.DEVICE_ANDROID).length() != 0) {\n       notificationBean.setDeviceToken(allDeviceTokens.get(AppConstants.DEVICE_ANDROID));\n-      pushFCMNotification(notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n+      return pushFCMNotification(\n+          notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n     }\n     if (allDeviceTokens.get(AppConstants.DEVICE_IOS) != null) {\n       notificationBean.setDeviceToken(allDeviceTokens.get(AppConstants.DEVICE_IOS));\n       pushNotification(notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n     }\n+    return new PushNotificationResponse(null, HttpStatus.OK.value(), \"success\");\n   }\n \n-  public void pushFCMNotification(\n+  public PushNotificationResponse pushFCMNotification(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODY4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nAbbreviation in name 'pushFCMNotification' must contain no more than '2' consecutive capital letters.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271241", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudiesServicesImpl.java", "diffHunk": "@@ -139,45 +162,47 @@ public ErrorBean SendNotificationAction(NotificationForm notificationForm) {\n     return new ErrorBean(ErrorCode.EC_200.code(), ErrorCode.EC_200.errorMessage());\n   }\n \n-  private void sendStudyLevelNotification(\n+  private PushNotificationResponse sendStudyLevelNotification(\n       Map<Integer, Map<String, JSONArray>> studiesMap,\n       Map<Object, StudyInfoBO> studyInfobyStudyCustomId,\n       Map<Object, AppInfoDetailsBO> appInfobyAppCustomId,\n       NotificationBean notificationBean) {\n     Map<String, JSONArray> deviceTokensMap =\n         studiesMap.get(studyInfobyStudyCustomId.get(notificationBean.getCustomStudyId()).getId());\n-\n     notificationBean.setNotificationType(AppConstants.STUDY);\n     if (deviceTokensMap != null) {\n       if (deviceTokensMap.get(AppConstants.DEVICE_ANDROID) != null) {\n         notificationBean.setDeviceToken(deviceTokensMap.get(AppConstants.DEVICE_ANDROID));\n-        pushFCMNotification(\n+        return pushFCMNotification(\n             notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n       }\n       if (deviceTokensMap.get(AppConstants.DEVICE_IOS) != null) {\n         notificationBean.setDeviceToken(deviceTokensMap.get(AppConstants.DEVICE_IOS));\n         pushNotification(notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n       }\n     }\n+    return new PushNotificationResponse(null, HttpStatus.OK.value(), \"success\");\n   }\n \n-  private void sendGatewaylevelNotification(\n+  private PushNotificationResponse sendGatewaylevelNotification(\n       Map<String, JSONArray> allDeviceTokens,\n       Map<Object, AppInfoDetailsBO> appInfobyAppCustomId,\n       NotificationBean notificationBean) {\n     notificationBean.setNotificationType(AppConstants.GATEWAY);\n     if (allDeviceTokens.get(AppConstants.DEVICE_ANDROID) != null\n         && allDeviceTokens.get(AppConstants.DEVICE_ANDROID).length() != 0) {\n       notificationBean.setDeviceToken(allDeviceTokens.get(AppConstants.DEVICE_ANDROID));\n-      pushFCMNotification(notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n+      return pushFCMNotification(\n+          notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n     }\n     if (allDeviceTokens.get(AppConstants.DEVICE_IOS) != null) {\n       notificationBean.setDeviceToken(allDeviceTokens.get(AppConstants.DEVICE_IOS));\n       pushNotification(notificationBean, appInfobyAppCustomId.get(notificationBean.getAppId()));\n     }\n+    return new PushNotificationResponse(null, HttpStatus.OK.value(), \"success\");\n   }\n \n-  public void pushFCMNotification(\n+  public PushNotificationResponse pushFCMNotification(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODY5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/ErrorBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'lombok.Getter'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271242", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/ErrorBean.java", "diffHunk": "@@ -8,33 +8,30 @@\n \n package com.google.cloud.healthcare.fdamystudies.beans;\n \n+import com.fasterxml.jackson.databind.JsonNode;\n+\n+import lombok.Getter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODcwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/ErrorBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwReyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271243", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/ErrorBean.java", "diffHunk": "@@ -8,33 +8,30 @@\n \n package com.google.cloud.healthcare.fdamystudies.beans;\n \n+import com.fasterxml.jackson.databind.JsonNode;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+@Setter\n+@Getter\n public class ErrorBean {\n \n   private Integer code = 0;\n   private String message = \"\";\n-\n-  public Integer getCode() {\n-    return code;\n-  }\n-\n-  public ErrorBean setCode(Integer code) {\n-    this.code = code;\n-    return this;\n-  }\n-\n-  public String getMessage() {\n-    return message;\n-  }\n-\n-  public ErrorBean setMessage(String message) {\n-    this.message = message;\n-    return this;\n-  }\n+  private JsonNode response;\n \n   public ErrorBean() {}\n \n   public ErrorBean(Integer code, String msg) {\n     this.code = code;\n     this.message = msg;\n   }\n+\n+  public ErrorBean(Integer code, String message, JsonNode response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODcxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRegistrationForm.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwRezA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwRezA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271244", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRegistrationForm.java", "diffHunk": "@@ -32,4 +32,11 @@\n   private int status;\n   private boolean tempPassword;\n   private LocalDateTime tempPasswordDate;\n+\n+  public UserRegistrationForm(String userId, String emailId, String password) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODcyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwRezQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MFrOGwRezQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'lombok.AllArgsConstructor' import. Should be before 'org.json.JSONArray'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271245", "createdAt": "2020-07-12T05:47:50Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "diffHunk": "@@ -9,7 +9,13 @@\n package com.google.cloud.healthcare.fdamystudies.beans;\n \n import org.json.JSONArray;\n+import lombok.AllArgsConstructor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODczOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRezg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRezg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'lombok.NoArgsConstructor' import. Should be before 'org.json.JSONArray'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271246", "createdAt": "2020-07-12T05:47:51Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "diffHunk": "@@ -9,7 +9,13 @@\n package com.google.cloud.healthcare.fdamystudies.beans;\n \n import org.json.JSONArray;\n+import lombok.AllArgsConstructor;\n+import lombok.NoArgsConstructor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODc0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRezw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'lombok.ToString' import. Should be before 'org.json.JSONArray'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271247", "createdAt": "2020-07-12T05:47:51Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "diffHunk": "@@ -9,7 +9,13 @@\n package com.google.cloud.healthcare.fdamystudies.beans;\n \n import org.json.JSONArray;\n+import lombok.AllArgsConstructor;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODc1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271248", "createdAt": "2020-07-12T05:47:51Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/NotificationBean.java", "diffHunk": "@@ -101,4 +107,13 @@ public String getAppId() {\n   public void setAppId(String appId) {\n     this.appId = appId;\n   }\n+\n+  public NotificationBean(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODc2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequestBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI0OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271249", "createdAt": "2020-07-12T05:47:51Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequestBean.java", "diffHunk": "@@ -11,14 +11,34 @@\n import java.io.Serializable;\n import java.util.List;\n import lombok.Getter;\n+import lombok.NoArgsConstructor;\n import lombok.Setter;\n \n @Setter\n @Getter\n+@NoArgsConstructor\n public class UserRequestBean implements Serializable {\n   private static final long serialVersionUID = 1L;\n   private ProfileRespBean profile;\n   private SettingsRespBean settings;\n   private InfoBean info;\n   private List<ParticipantInfoBean> participantInfo;\n+\n+  public UserRequestBean(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODc3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequestBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271250", "createdAt": "2020-07-12T05:47:51Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequestBean.java", "diffHunk": "@@ -11,14 +11,34 @@\n import java.io.Serializable;\n import java.util.List;\n import lombok.Getter;\n+import lombok.NoArgsConstructor;\n import lombok.Setter;\n \n @Setter\n @Getter\n+@NoArgsConstructor\n public class UserRequestBean implements Serializable {\n   private static final long serialVersionUID = 1L;\n   private ProfileRespBean profile;\n   private SettingsRespBean settings;\n   private InfoBean info;\n   private List<ParticipantInfoBean> participantInfo;\n+\n+  public UserRequestBean(\n+      ProfileRespBean profile,\n+      SettingsRespBean settings,\n+      InfoBean info,\n+      List<ParticipantInfoBean> participantInfo) {\n+    super();\n+    this.profile = profile;\n+    this.settings = settings;\n+    this.info = info;\n+    this.participantInfo = participantInfo;\n+  }\n+\n+  public UserRequestBean(SettingsRespBean settings, InfoBean info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODc4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/PushNotificationResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MVrOGwRe0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'lombok.AllArgsConstructor'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271251", "createdAt": "2020-07-12T05:47:51Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/PushNotificationResponse.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+\n+import lombok.AllArgsConstructor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODc5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271252", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODgwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271253", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODgxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271254", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODgyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271255", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODgzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271256", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODg0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271257", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODg1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271258", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODg2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI1OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271259", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODg3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI2MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271260", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODg4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1MlrOGwRe3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI2MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271261", "createdAt": "2020-07-12T05:47:52Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODg5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1M1rOGwRe3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1M1rOGwRe3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI2Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271262", "createdAt": "2020-07-12T05:47:53Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODkwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1M1rOGwRe3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1M1rOGwRe3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI2Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271263", "createdAt": "2020-07-12T05:47:53Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU2ODkxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1M1rOGwRe4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo0Nzo1M1rOGwRe4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTI2NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271264", "createdAt": "2020-07-12T05:47:53Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2901ff53c53c6789fb3017bb5a2f48b75aa659"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDU3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozN1rOGwRfmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozN1rOGwRfmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271450", "createdAt": "2020-07-12T05:50:37Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDU5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozN1rOGwRfnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozN1rOGwRfnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271452", "createdAt": "2020-07-12T05:50:37Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDYxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271454", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDYyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271455", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDY0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271457", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDY1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271458", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDY2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ1OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271459", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDY4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271461", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDY5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271462", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDcwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271463", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">\n+\t\t\t<AppenderRef ref=\"appLog\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDcyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOFrOGwRfqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271465", "createdAt": "2020-07-12T05:50:38Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Logger>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDczOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271466", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Logger>\n+\t\t<Root level=\"info\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDc0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271467", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Logger>\n+\t\t<Root level=\"info\">\n+\t\t\t<AppenderRef ref=\"appLog\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDc1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271468", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Logger>\n+\t\t<Root level=\"info\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Root>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDc2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ2OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271469", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n\n+\t\t</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<Console name=\"Console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t</Console>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Logger name=\"com.fda-mystudies-user-management-server\"\n+\t\t\tlevel=\"info\" additivity=\"false\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Logger>\n+\t\t<Root level=\"info\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Root>\n+\t</Loggers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDc3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271470", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDc4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271471", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDgwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDozOVrOGwRfsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271473", "createdAt": "2020-07-12T05:50:39Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDgxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271474", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDgyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271475", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDg0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRftQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271477", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDg1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRftg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRftg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ3OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271478", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDg3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ4MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271480", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDg5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ4Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271482", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDkwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ4Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271483", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDkyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ4Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271486", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDkzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MFrOGwRfvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ4Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271487", "createdAt": "2020-07-12T05:50:40Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDk1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MVrOGwRfwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MVrOGwRfwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ4OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271489", "createdAt": "2020-07-12T05:50:41Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDk2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MVrOGwRfww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MVrOGwRfww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ5MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271491", "createdAt": "2020-07-12T05:50:41Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU3MDk4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MVrOGwRfxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNTo1MDo0MVrOGwRfxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3MTQ5Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453271492", "createdAt": "2020-07-12T05:50:41Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e933d0425aeea60405e6128eb8ef254b9ba1b92"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTMyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDMzOQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284339", "createdAt": "2020-07-12T08:10:54Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTMzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284340", "createdAt": "2020-07-12T08:10:54Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Root level=\"info\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTM0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284341", "createdAt": "2020-07-12T08:10:54Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Root level=\"info\">\n+\t\t\t<AppenderRef ref=\"appLog\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTM1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284342", "createdAt": "2020-07-12T08:10:54Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Root level=\"info\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Root>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTM2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nLine contains a tab character.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284343", "createdAt": "2020-07-12T08:10:54Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/resources/log4j2-mockit.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" monitorInterval=\"30\">\n+\t<Properties>\n+\t\t<Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\n+\t\t<Property name=\"APP_LOG_ROOT\">logs</Property>\n+\t</Properties>\n+\t<Appenders>\n+\t\t<RollingFile name=\"appLog\"\n+\t\t\tfileName=\"user-management-server.log\"\n+\t\t\tfilePattern=\"user-management-server-%d{yyyy-MM-dd}-%i.log\">\n+\t\t\t<PatternLayout pattern=\"${LOG_PATTERN}\" />\n+\t\t\t<Policies>\n+\t\t\t\t<SizeBasedTriggeringPolicy size=\"1MB\" />\n+\t\t\t</Policies>\n+\t\t\t<DefaultRolloverStrategy max=\"1\" />\n+\t\t</RollingFile>\n+\t</Appenders>\n+\t<Loggers>\n+\t\t<Root level=\"info\">\n+\t\t\t<AppenderRef ref=\"appLog\" />\n+\t\t</Root>\n+\t</Loggers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTM3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NFrOGwSR-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\n'javax.servlet.http.Cookie' should be separated from previous import group by one line.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284344", "createdAt": "2020-07-12T08:10:54Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import javax.servlet.http.Cookie;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTM4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0NQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.fasterxml.jackson.databind.ObjectMapper' import. Should be before 'org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284345", "createdAt": "2020-07-12T08:10:55Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import javax.servlet.http.Cookie;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.MvcResult;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;\n+import com.fasterxml.jackson.databind.ObjectMapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTM5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0Ng==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer' import. Should be before 'org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284346", "createdAt": "2020-07-12T08:10:55Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import javax.servlet.http.Cookie;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.MvcResult;\n+import org.springframework.test.web.servlet.ResultMatcher;\n+import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.google.cloud.healthcare.fdamystudies.config.WireMockInitializer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQwOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepositoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0Nw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMethod name 'FindsUsersWithLastName' must match pattern '^[a-z][a-z0-9][a-zA-Z0-9_]*$'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284347", "createdAt": "2020-07-12T08:10:55Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepositoryTest.java", "diffHunk": "@@ -36,44 +36,45 @@\n @ContextConfiguration(initializers = TestApplicationContextInitializer.class)\n public class UserDetailsRepositoryTest {\n \n-\t@Resource\n-\tprivate UserDetailsRepository userDetailsRepository;\n+  @Resource private UserDetailsRepository userDetailsRepository;\n \n-\t@Test\n-\tpublic void FindsUsersWithLastName() {\n-\t\tUserDetailsBO user1 = UserDetailsBO.builder()\n-\t\t\t\t.userId(\"user_id\")\n-\t\t\t\t.email(\"email1@example.com\")\n-\t\t\t\t.firstName(\"Given name\")\n-\t\t\t\t.lastName(\"Surname\")\n-\t\t\t\t._ts(new GregorianCalendar(2000, 1, 1).getTime())\n-\t\t\t\t.verificationDate(new GregorianCalendar(2000, 1, 2).getTime())\n-\t\t\t\t.codeExpireDate(LocalDateTime.of(2000, Month.JUNE, 1, 20, 0, 0))\n-\t\t\t\t.build();\n-\t\tUserDetailsBO user2 = UserDetailsBO.builder()\n-\t\t\t\t.userId(\"user_id\")\n-\t\t\t\t.email(\"email2@example.com\")\n-\t\t\t\t.firstName(\"Given name 2\")\n-\t\t\t\t.lastName(\"Surname\")\n-\t\t\t\t._ts(new GregorianCalendar(2000, 1, 1).getTime())\n-\t\t\t\t.verificationDate(new GregorianCalendar(2000, 1, 2).getTime())\n-\t\t\t\t.codeExpireDate(LocalDateTime.of(2000, Month.JUNE, 1, 20, 0, 0))\n-\t\t\t\t.build();\n-\t\tUserDetailsBO user3 = UserDetailsBO.builder()\n-\t\t\t\t.userId(\"user_id\")\n-\t\t\t\t.email(\"email2@example.com\")\n-\t\t\t\t.firstName(\"Given name 2\")\n-\t\t\t\t.lastName(\"NotSurname\")\n-\t\t\t\t._ts(new GregorianCalendar(2000, 1, 1).getTime())\n-\t\t\t\t.verificationDate(new GregorianCalendar(2000, 1, 2).getTime())\n-\t\t\t\t.codeExpireDate(LocalDateTime.of(2000, Month.JUNE, 1, 20, 0, 0))\n-\t\t\t\t.build();\n-\t\tuserDetailsRepository.save(user1);\n-\t\tuserDetailsRepository.save(user2);\n-\t\tuserDetailsRepository.save(user3);\n+  @Test\n+  public void FindsUsersWithLastName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/repository/PersonalizedUserReportRepositoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NVrOGwSR_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0OA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nMethod name 'LooksUpMostRecentReportForUserAndStudy' must match pattern '^[a-z][a-z0-9][a-zA-Z0-9_]*$'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284348", "createdAt": "2020-07-12T08:10:55Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/repository/PersonalizedUserReportRepositoryTest.java", "diffHunk": "@@ -38,92 +38,91 @@\n @ContextConfiguration(initializers = TestApplicationContextInitializer.class)\n public class PersonalizedUserReportRepositoryTest {\n \n-\t@Resource\n-\tprivate PersonalizedUserReportRepository personalizedUserReportRepository;\n+  @Resource private PersonalizedUserReportRepository personalizedUserReportRepository;\n \n-\t@Resource\n-\tprivate UserDetailsRepository userDetailsRepository;\n+  @Resource private UserDetailsRepository userDetailsRepository;\n \n-\t@Resource\n-\tprivate StudyInfoRepository studyInfoRepository;\n+  @Resource private StudyInfoRepository studyInfoRepository;\n \n-\t@Test\n-\tpublic void LooksUpMostRecentReportForUserAndStudy() {\n-\t\tUserDetailsBO user1 = UserDetailsBO.builder()\n-\t\t\t\t.userId(\"user_id1\")\n-\t\t\t\t.email(\"email1@example.com\")\n-\t\t\t\t.firstName(\"First name1\")\n-\t\t\t\t.lastName(\"Last name1\")\n-\t\t\t\t._ts(new GregorianCalendar(2000, 1, 1).getTime())\n-\t\t\t\t.verificationDate(new GregorianCalendar(2000, 1, 2).getTime())\n-\t\t\t\t.codeExpireDate(LocalDateTime.of(2000, Month.JUNE, 1, 20, 0, 0))\n-\t\t\t\t.build();\n-\t\tUserDetailsBO user2 = UserDetailsBO.builder()\n-\t\t\t\t.userId(\"user_id2\")\n-\t\t\t\t.email(\"email2@example.com\")\n-\t\t\t\t.firstName(\"First name2\")\n-\t\t\t\t.lastName(\"Last name2\")\n-\t\t\t\t._ts(new GregorianCalendar(2000, 1, 1).getTime())\n-\t\t\t\t.verificationDate(new GregorianCalendar(2000, 1, 2).getTime())\n-\t\t\t\t.codeExpireDate(LocalDateTime.of(2000, Month.JUNE, 1, 20, 0, 0))\n-\t\t\t\t.build();\n-\t\tuserDetailsRepository.save(user1);\n-\t\tuserDetailsRepository.save(user2);\n+  @Test\n+  public void LooksUpMostRecentReportForUserAndStudy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSR_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSR_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM0OQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nExtra separation in import group before 'com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284349", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSR_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSR_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1MA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer' import. Should be before 'org.springframework.test.context.junit4.SpringRunner'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284350", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQ0OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSR_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSR_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1MQ==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.beans.UserResourceBean' import. Should be before 'org.springframework.test.context.junit4.SpringRunner'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284351", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResourceBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQ1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1Mg==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.model.UserInstitution' import. Should be before 'org.springframework.test.context.junit4.SpringRunner'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284352", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResourceBean;\n+import com.google.cloud.healthcare.fdamystudies.model.UserInstitution;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQ2OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1Mw==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.repository.UserInstitutionRepository' import. Should be before 'org.springframework.test.context.junit4.SpringRunner'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284353", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResourceBean;\n+import com.google.cloud.healthcare.fdamystudies.model.UserInstitution;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserInstitutionRepository;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjY3NTQ3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwODoxMDo1NlrOGwSSAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDM1NA==", "bodyText": "[user-mgmt Checks] reported by reviewdog \ud83d\udc36\nWrong lexicographical order for 'com.google.cloud.healthcare.fdamystudies.service.CloudStorageService' import. Should be before 'org.springframework.test.context.junit4.SpringRunner'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/502#discussion_r453284354", "createdAt": "2020-07-12T08:10:56Z", "author": {"login": "github-actions"}, "path": "user-registration-server-ws/user-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/util/GetUserInstitutionResourcesTest.java", "diffHunk": "@@ -16,84 +25,64 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringRunner;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n-\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertThat;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.internal.verification.VerificationModeFactory.times;\n+import com.google.cloud.healthcare.fdamystudies.TestApplicationContextInitializer;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResourceBean;\n+import com.google.cloud.healthcare.fdamystudies.model.UserInstitution;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserInstitutionRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.CloudStorageService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1bfd70e38393e31198965c82b54ff835a65fa7"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2395, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}