{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0Njk0ODMy", "number": 519, "reviewThreads": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTowMzozMlrOEFsisQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDo0MDoxMFrOEHuOAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDA4MTEzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/entity.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTowMzozMlrOGkCrIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoyNzo1M1rOGmd1iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NTcyOA==", "bodyText": "list or getCollection", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440445728", "createdAt": "2020-06-15T21:03:32Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -5,14 +5,17 @@ import {Location} from '@angular/common';\n \n @Injectable()\n export class EntityService<T> {\n-  baseUrl = 'http://<IP>:<port>/urwebapp';\n-\n+    baseUrl = 'http://<IP>:<port>/urwebapp';\n   constructor(private readonly http: HttpClient) {}\n \n   post(bodydata: string, urlpath: string): Observable<T> {\n     const serviceUrl = Location.joinWithSlash(this.baseUrl, urlpath);\n     return this.http.post<T>(serviceUrl, bodydata);\n   }\n+  getArray(urlpath: string): Observable<T[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4NzkxMw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442987913", "createdAt": "2020-06-19T18:27:53Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -5,14 +5,17 @@ import {Location} from '@angular/common';\n \n @Injectable()\n export class EntityService<T> {\n-  baseUrl = 'http://<IP>:<port>/urwebapp';\n-\n+    baseUrl = 'http://<IP>:<port>/urwebapp';\n   constructor(private readonly http: HttpClient) {}\n \n   post(bodydata: string, urlpath: string): Observable<T> {\n     const serviceUrl = Location.joinWithSlash(this.baseUrl, urlpath);\n     return this.http.post<T>(serviceUrl, bodydata);\n   }\n+  getArray(urlpath: string): Observable<T[]> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NTcyOA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDA5NDM0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/account/shared/account.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTowNzo1NVrOGkCziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoyODowN1rOGmd11w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0Nzg4Mw==", "bodyText": "It turns out using 'root' is pretty much always correct. Ignore my previous advice.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440447883", "createdAt": "2020-06-15T21:07:55Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/account/shared/account.service.ts", "diffHunk": "@@ -1,7 +1,6 @@\n import {Injectable} from '@angular/core';\n-import {AccountModule} from '../../account/account.module';\n \n @Injectable({\n-  providedIn: AccountModule,\n+  providedIn: 'root',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4Nzk5MQ==", "bodyText": "okay thanks for the update", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442987991", "createdAt": "2020-06-19T18:28:07Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/account/shared/account.service.ts", "diffHunk": "@@ -1,7 +1,6 @@\n import {Injectable} from '@angular/core';\n-import {AccountModule} from '../../account/account.module';\n \n @Injectable({\n-  providedIn: AccountModule,\n+  providedIn: 'root',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0Nzg4Mw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDA5ODQxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/account/account.module.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTowOToxNFrOGkC2Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoyODoxM1rOGmd1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0ODUzOA==", "bodyText": "I don't think this is necessary with providedIn: 'root'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440448538", "createdAt": "2020-06-15T21:09:14Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/account/account.module.ts", "diffHunk": "@@ -2,9 +2,10 @@ import {NgModule} from '@angular/core';\n import {CommonModule} from '@angular/common';\n import {AccountRoutingModule} from './account-routing.module';\n import {AccountProfileComponent} from './account-profile/account-profile.component';\n+import {AccountService} from './shared/account.service';\n @NgModule({\n   declarations: [AccountProfileComponent],\n   imports: [CommonModule, AccountRoutingModule],\n-  providers: [],\n+  providers: [AccountService],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODAzMQ==", "bodyText": "Thanks ,updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988031", "createdAt": "2020-06-19T18:28:13Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/account/account.module.ts", "diffHunk": "@@ -2,9 +2,10 @@ import {NgModule} from '@angular/core';\n import {CommonModule} from '@angular/common';\n import {AccountRoutingModule} from './account-routing.module';\n import {AccountProfileComponent} from './account-profile/account-profile.component';\n+import {AccountService} from './shared/account.service';\n @NgModule({\n   declarations: [AccountProfileComponent],\n   imports: [CommonModule, AccountRoutingModule],\n-  providers: [],\n+  providers: [AccountService],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0ODUzOA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEwNTg5OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/entity/error.model.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxMTo0OFrOGkC6ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoyODoxOFrOGmd2JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTcyMg==", "bodyText": "A few comments\n\nDon't use the Bean suffix here. It's Java only and doesn't make sense to non-Spring developers\nI would call this ApiError or ApiResponse so it's clear it's not an error we generate in our application\nThis should be an interface. Classes are for objects we create with new. If it's ever create without new, like when it comes from an API and is JSON.parsed, it cannot be a class, because it won't have any class functions attached to it.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440449722", "createdAt": "2020-06-15T21:11:48Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/entity/error.model.ts", "diffHunk": "@@ -0,0 +1,5 @@\n+export class ErrorBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODA2OA==", "bodyText": "Thanks ,updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988068", "createdAt": "2020-06-19T18:28:18Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/entity/error.model.ts", "diffHunk": "@@ -0,0 +1,5 @@\n+export class ErrorBean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTcyMg=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEwOTI0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxMjo0N1rOGkC8rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoyODoyMlrOGmd2Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDIyMA==", "bodyText": "Remove empty attribute", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440450220", "createdAt": "2020-06-15T21:12:47Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -1 +1,77 @@\n-<p>locations-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Locations</div>\n+      <div class=\"\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODA5NA==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988094", "createdAt": "2020-06-19T18:28:22Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -1 +1,77 @@\n-<p>locations-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Locations</div>\n+      <div class=\"\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDIyMA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDExMjgyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxNDowMVrOGkC_AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoyODozMlrOGmd2eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDgxNw==", "bodyText": "Don't pass constants to filters.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440450817", "createdAt": "2020-06-15T21:14:01Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -1 +1,77 @@\n-<p>locations-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Locations</div>\n+      <div class=\"\">\n+        <button\n+          (click)=\"addLocation()\"\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+        >\n+          Add Location\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\">\n+  <div *ngIf=\"locations.length != 0\" class=\"cards1 m-none\">\n+    <table\n+      class=\"table table-striped\"\n+      [mfData]=\"locations\"\n+      #mf=\"mfDataTable\"\n+      [mfRowsOnPage]=\"10\"\n+    >\n+      <thead>\n+        <tr>\n+          <span\n+            class=\"text__387fea__12 mobile__view mr-sm\"\n+            style=\"background: transparent;\"\n+            >Sort By:\n+          </span>\n+          <th>\n+            <mySorter by=\"customId\">Location ID</mySorter>\n+          </th>\n+          <th>\n+            <mySorter by=\"name\">Location Name</mySorter>\n+          </th>\n+          <th>\n+            <mySorter by=\"studiesCount\">Associated Studies</mySorter>\n+          </th>\n+          <th>\n+            Status\n+          </th>\n+        </tr>\n+      </thead>\n+      <tbody>\n+        <tr\n+          *ngFor=\"let location of mf.data\"\n+          (click)=\"locationDetails(location.id)\"\n+        >\n+          <td>\n+            <span class=\"tbl__td__label\">Location ID:</span\n+            ><span class=\"no_st_en\">{{ location.customId }}</span>\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Location Name:</span\n+            >{{ location.name }}\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Associated Studies:</span\n+            >{{ location.studiesCount }}\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Status:</span\n+            >{{ location.status == 1 ? \"Active\" : (\"Deactivated\" | uppercase) }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODE1Mw==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988153", "createdAt": "2020-06-19T18:28:32Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -1 +1,77 @@\n-<p>locations-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Locations</div>\n+      <div class=\"\">\n+        <button\n+          (click)=\"addLocation()\"\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+        >\n+          Add Location\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\">\n+  <div *ngIf=\"locations.length != 0\" class=\"cards1 m-none\">\n+    <table\n+      class=\"table table-striped\"\n+      [mfData]=\"locations\"\n+      #mf=\"mfDataTable\"\n+      [mfRowsOnPage]=\"10\"\n+    >\n+      <thead>\n+        <tr>\n+          <span\n+            class=\"text__387fea__12 mobile__view mr-sm\"\n+            style=\"background: transparent;\"\n+            >Sort By:\n+          </span>\n+          <th>\n+            <mySorter by=\"customId\">Location ID</mySorter>\n+          </th>\n+          <th>\n+            <mySorter by=\"name\">Location Name</mySorter>\n+          </th>\n+          <th>\n+            <mySorter by=\"studiesCount\">Associated Studies</mySorter>\n+          </th>\n+          <th>\n+            Status\n+          </th>\n+        </tr>\n+      </thead>\n+      <tbody>\n+        <tr\n+          *ngFor=\"let location of mf.data\"\n+          (click)=\"locationDetails(location.id)\"\n+        >\n+          <td>\n+            <span class=\"tbl__td__label\">Location ID:</span\n+            ><span class=\"no_st_en\">{{ location.customId }}</span>\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Location Name:</span\n+            >{{ location.name }}\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Associated Studies:</span\n+            >{{ location.studiesCount }}\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Status:</span\n+            >{{ location.status == 1 ? \"Active\" : (\"Deactivated\" | uppercase) }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDgxNw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDExNjE4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxNToxNFrOGkDBGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODowNDo0NlrOGmdRGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTM1Mw==", "bodyText": "As we discussed, fixture.componentInstance", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440451353", "createdAt": "2020-06-15T21:15:14Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3ODU4NA==", "bodyText": "Updated in the latest Commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442978584", "createdAt": "2020-06-19T18:04:46Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTM1Mw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDExODYwOnYy", "diffSide": "LEFT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxNjowMVrOGkDCmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODowNToxMlrOGmdR1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTczOA==", "bodyText": "Fixture is fine to create in the beforeEach", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440451738", "createdAt": "2020-06-15T21:16:01Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3ODc3Mw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442978773", "createdAt": "2020-06-19T18:05:12Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTczOA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEyMTA3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxNjo1MVrOGkDENQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODowNTo0MFrOGmdSiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjE0OQ==", "bodyText": "Rename to addLocationSpy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440452149", "createdAt": "2020-06-15T21:16:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3ODk1Mg==", "bodyText": "updated as suggested", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442978952", "createdAt": "2020-06-19T18:05:40Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjE0OQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEyMzQyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxNzo1MFrOGkDF2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODowNjowM1rOGmdTKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjU2OA==", "bodyText": "This is the same as the previous test case.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440452568", "createdAt": "2020-06-15T21:17:50Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');\n+    fixture.debugElement\n+      .query(By.css('button'))\n+      .triggerEventHandler('click', null);\n+    expect(onClickMock).toHaveBeenCalled();\n+  });\n+\n+  it('should auto click on New AddLocation Button', async(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3OTExMw==", "bodyText": "Removed the test case", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442979113", "createdAt": "2020-06-19T18:06:03Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');\n+    fixture.debugElement\n+      .query(By.css('button'))\n+      .triggerEventHandler('click', null);\n+    expect(onClickMock).toHaveBeenCalled();\n+  });\n+\n+  it('should auto click on New AddLocation Button', async(() => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjU2OA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEyNTYzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxODoyN1rOGkDHLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToyNToyMlrOGmhm4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjkxMQ==", "bodyText": "There isn't any data here, the test should be verifying that data is actually returned.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440452911", "createdAt": "2020-06-15T21:18:27Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');\n+    fixture.debugElement\n+      .query(By.css('button'))\n+      .triggerEventHandler('click', null);\n+    expect(onClickMock).toHaveBeenCalled();\n+  });\n+\n+  it('should auto click on New AddLocation Button', async(() => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.componentInstance;\n+    spyOn(component, 'addLocation');\n+    fixture.detectChanges();\n+    const button = fixture.nativeElement as HTMLElement;\n+    button.querySelector('button')?.click();\n+\n+    void fixture.whenStable().then(() => {\n+      expect(component.addLocation).toHaveBeenCalled();\n+    });\n+  }));\n+  it('should get the user List via refresh function', fakeAsync(() => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.componentInstance;\n+    spyOn(component, 'getLocation');\n+    component.getLocation();\n+    tick();\n+    fixture.detectChanges();\n+    expect(component.locations.length).toBe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0OTY5OA==", "bodyText": "This still needs to be resolved.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443049698", "createdAt": "2020-06-19T21:25:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');\n+    fixture.debugElement\n+      .query(By.css('button'))\n+      .triggerEventHandler('click', null);\n+    expect(onClickMock).toHaveBeenCalled();\n+  });\n+\n+  it('should auto click on New AddLocation Button', async(() => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.componentInstance;\n+    spyOn(component, 'addLocation');\n+    fixture.detectChanges();\n+    const button = fixture.nativeElement as HTMLElement;\n+    button.querySelector('button')?.click();\n+\n+    void fixture.whenStable().then(() => {\n+      expect(component.addLocation).toHaveBeenCalled();\n+    });\n+  }));\n+  it('should get the user List via refresh function', fakeAsync(() => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.componentInstance;\n+    spyOn(component, 'getLocation');\n+    component.getLocation();\n+    tick();\n+    fixture.detectChanges();\n+    expect(component.locations.length).toBe(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjkxMQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEyODQ4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxOToyN1rOGkDJAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1OTozN1rOGmdJHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzM3Ng==", "bodyText": "Prefer async pipe to subscribing. An important part of Angular is learning how to use RxJS effectively, and part of that is keeping your data as an Observable for as long as possible. I would write the logic of this component as\nquery$ = new BehaviorSubject('');\nlocation$: Observable<Location[]> = Observable.of([]);\n\ngetLocation() {\nthis.location$ = combineLatest(\n    this.locationService.getLocations(),\n    query$,\n).pipe(catchError(...), filter(...))\n}\n\nsearch(query: string) {\nthis.query$.next(query.trim())\n}\ncombineLatest docs\nBehavior subject\nIt's much cleaner to do it this way, and you don't end up with a bunch of extra state.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440453376", "createdAt": "2020-06-15T21:19:27Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjU0MA==", "bodyText": "Thanks for suggesting this,updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976540", "createdAt": "2020-06-19T17:59:37Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzM3Ng=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEzMDI3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToyMDowNlrOGkDKJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1OTozNVrOGmdJBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzY3MQ==", "bodyText": "This doesn't need to be a member variable.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440453671", "createdAt": "2020-06-15T21:20:06Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjUxOA==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976518", "createdAt": "2020-06-19T17:59:35Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzY3MQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEzMzkwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToyMToxNFrOGkDMQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1OTozMVrOGmdI8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDIxMQ==", "bodyText": "query &&  in unnecessary because ''.trim() === ''", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440454211", "createdAt": "2020-06-15T21:21:14Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;\n+        this.toastr.error(this.errorMessage);\n+      },\n+    );\n+  }\n+  locationDetails(locationId: number): void {\n+    void this.router.navigate(['/coordinator/locations/', locationId]);\n+  }\n+  addLocation(): void {\n+    void this.router.navigate(['/coordinator/locations/new']);\n+  }\n+  search(filterQuery: string): void {\n+    const query = filterQuery;\n+    if (query && query.trim() !== '') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjQ5OQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976499", "createdAt": "2020-06-19T17:59:31Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;\n+        this.toastr.error(this.errorMessage);\n+      },\n+    );\n+  }\n+  locationDetails(locationId: number): void {\n+    void this.router.navigate(['/coordinator/locations/', locationId]);\n+  }\n+  addLocation(): void {\n+    void this.router.navigate(['/coordinator/locations/new']);\n+  }\n+  search(filterQuery: string): void {\n+    const query = filterQuery;\n+    if (query && query.trim() !== '') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDIxMQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDEzNTgzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToyMTo1NVrOGkDNfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1OToyNVrOGmdIxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDUyNQ==", "bodyText": "Why copy this value? You only need one variable.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440454525", "createdAt": "2020-06-15T21:21:55Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;\n+        this.toastr.error(this.errorMessage);\n+      },\n+    );\n+  }\n+  locationDetails(locationId: number): void {\n+    void this.router.navigate(['/coordinator/locations/', locationId]);\n+  }\n+  addLocation(): void {\n+    void this.router.navigate(['/coordinator/locations/new']);\n+  }\n+  search(filterQuery: string): void {\n+    const query = filterQuery;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjQ1Mg==", "bodyText": "removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976452", "createdAt": "2020-06-19T17:59:25Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;\n+        this.toastr.error(this.errorMessage);\n+      },\n+    );\n+  }\n+  locationDetails(locationId: number): void {\n+    void this.router.navigate(['/coordinator/locations/', locationId]);\n+  }\n+  addLocation(): void {\n+    void this.router.navigate(['/coordinator/locations/new']);\n+  }\n+  search(filterQuery: string): void {\n+    const query = filterQuery;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDUyNQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE2NjYwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozMjo0N1rOGkDgag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDo1ODoyMVrOGmhFWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTM3MA==", "bodyText": "Can you add a test that executes the \"getLocations\" functionality?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440459370", "createdAt": "2020-06-15T21:32:47Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,16 +1,30 @@\n import {TestBed} from '@angular/core/testing';\n \n import {LocationService} from './location.service';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {EntityService} from '../../../service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n \n describe('LocationService', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjQzMw==", "bodyText": "updated in the latest commit but we have disabled few of the linter rules in location.service.spec.ts as few issues we were not able to fix and fixing few of the issues were making test cases to fail,Please suggest", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976433", "createdAt": "2020-06-19T17:59:22Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,16 +1,30 @@\n import {TestBed} from '@angular/core/testing';\n \n import {LocationService} from './location.service';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {EntityService} from '../../../service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n \n describe('LocationService', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTM3MA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTExNA==", "bodyText": "Added comments below.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443041114", "createdAt": "2020-06-19T20:58:21Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,16 +1,30 @@\n import {TestBed} from '@angular/core/testing';\n \n import {LocationService} from './location.service';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {EntityService} from '../../../service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n \n describe('LocationService', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTM3MA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE2NzQwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.model.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozMzowM1rOGkDg4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToyNDo1OFrOGmhmWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTQ4OQ==", "bodyText": "Should also be an interface", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440459489", "createdAt": "2020-06-15T21:33:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.model.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+export class Location {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NDI3Mw==", "bodyText": "we cannot change Location to interface as we will be using this in add Location form as an entity and we will be creating instance with  new operator", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442974273", "createdAt": "2020-06-19T17:54:15Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.model.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+export class Location {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTQ4OQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0OTU2MA==", "bodyText": "Then you need to do something like this in your location service\nthis.entityService.getCollection().pipe(\n    map(data => data.map(d => new Location(d)))\n)\nand define a constructor here. This will convert the \"dumb\" JSON object into a \"smart\" Location object.\nAlso, I think we should change this from Location to something a bit more verbose. I know it's annoying, but there are too many other Locations in the global scope, one from the browser and one from Angular. \"StudyLocation\" maybe?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443049560", "createdAt": "2020-06-19T21:24:58Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.model.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+export class Location {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTQ4OQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE3NDg1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozNTo0MlrOGkDlZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1NDoxMlrOGmdAIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDY0NQ==", "bodyText": "This formatting is very strange. Can you change your settings to keep > on the same line as the tag?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440460645", "createdAt": "2020-06-15T21:35:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NDI0MQ==", "bodyText": "we didn't got settings for this,Can you please suggest us", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442974241", "createdAt": "2020-06-19T17:54:12Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDY0NQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE3NTkzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozNjowMFrOGkDmAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxMDoyMFrOGmhV0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDgwMg==", "bodyText": "This should be a separate component.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440460802", "createdAt": "2020-06-15T21:36:00Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjgyMA==", "bodyText": "In theme-layout.scss we have written media query so that any Div with  id=\"desktop-menu\" or id=\"mobile-menu\" will be visible to user,\nIs this is okay or you want me to implement mobile header component and add selector tag in sitecoordinator.component.html", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972820", "createdAt": "2020-06-19T17:50:52Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDgwMg=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NTMyOA==", "bodyText": "I'd rather have a separate Component for the mobile menu if you can't share the HTML between the two headers.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443045328", "createdAt": "2020-06-19T21:10:20Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDgwMg=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE3NjY1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozNjoyMVrOGkDmgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDozOFrOGmc6OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDkzMQ==", "bodyText": "Move SVG to a standalone file.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440460931", "createdAt": "2020-06-15T21:36:21Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjcyOA==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972728", "createdAt": "2020-06-19T17:50:38Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDkzMQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE3NzIxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozNjozNFrOGkDm4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDozNlrOGmc6Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTAyNA==", "bodyText": "Use absolute URLs.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440461024", "createdAt": "2020-06-15T21:36:34Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjcxNA==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972714", "createdAt": "2020-06-19T17:50:36Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTAyNA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE3OTUyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozNzozMFrOGkDoTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDozM1rOGmc6HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTM5MQ==", "bodyText": "Why not use \"open\" and \"closed\" as class names?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440461391", "createdAt": "2020-06-15T21:37:30Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjcwMQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972701", "createdAt": "2020-06-19T17:50:33Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTM5MQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE4MTg1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozODoyMFrOGkDpsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxNjoxMlrOGmhc1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTc0Nw==", "bodyText": "Use <button> for buttons. This is bad for accessibility.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440461747", "createdAt": "2020-06-15T21:38:20Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"\n+    >\n+      <div\n+        [ngClass]=\"\n+          opencloseNavval ? 'width__268 display__block ' : 'display__none '\n+        \"\n+      >\n+        <div class=\"mob__bo\">\n+          <a\n+            href=\"javascript:void(0)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjY3Mw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972673", "createdAt": "2020-06-19T17:50:31Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"\n+    >\n+      <div\n+        [ngClass]=\"\n+          opencloseNavval ? 'width__268 display__block ' : 'display__none '\n+        \"\n+      >\n+        <div class=\"mob__bo\">\n+          <a\n+            href=\"javascript:void(0)\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTc0Nw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzEyNw==", "bodyText": "Still looks the same.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047127", "createdAt": "2020-06-19T21:16:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"\n+    >\n+      <div\n+        [ngClass]=\"\n+          opencloseNavval ? 'width__268 display__block ' : 'display__none '\n+        \"\n+      >\n+        <div class=\"mob__bo\">\n+          <a\n+            href=\"javascript:void(0)\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTc0Nw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE4NTExOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozOTozNFrOGkDrow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoyOVrOGmc58g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjI0Mw==", "bodyText": "navIsOpen", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440462243", "createdAt": "2020-06-15T21:39:34Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjY1OA==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972658", "createdAt": "2020-06-19T17:50:29Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjI0Mw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE4NzM4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo0MDoyMlrOGkDtCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoyN1rOGmc54w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjYwMQ==", "bodyText": "Use event.key", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440462601", "createdAt": "2020-06-15T21:40:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;\n+  showSearchBar = true;\n+  filterQuery = '';\n+\n+  opencloseNav(): void {\n+    this.opencloseNavval = !this.opencloseNavval;\n+  }\n+\n+  public handleKeyDown(event: KeyboardEvent): void {\n+    if (event.keyCode === 13) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjY0Mw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972643", "createdAt": "2020-06-19T17:50:27Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;\n+  showSearchBar = true;\n+  filterQuery = '';\n+\n+  opencloseNav(): void {\n+    this.opencloseNavval = !this.opencloseNavval;\n+  }\n+\n+  public handleKeyDown(event: KeyboardEvent): void {\n+    if (event.keyCode === 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjYwMQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDE4NzY4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo0MDozMFrOGkDtNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoyNVrOGmc50A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjY0Nw==", "bodyText": "toggleNav", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440462647", "createdAt": "2020-06-15T21:40:30Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;\n+  showSearchBar = true;\n+  filterQuery = '';\n+\n+  opencloseNav(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjYyNA==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972624", "createdAt": "2020-06-19T17:50:25Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;\n+  showSearchBar = true;\n+  filterQuery = '';\n+\n+  opencloseNav(): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjY0Nw=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjUzMDM0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/participant/participant.module.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowOToxNVrOGkaebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoyMlrOGmc5vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTY5NA==", "bodyText": "not needed.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440835694", "createdAt": "2020-06-16T13:09:15Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/participant/participant.module.ts", "diffHunk": "@@ -16,6 +16,6 @@ import {DashboardComponent} from './dashboard/dashboard.component';\n     DashboardComponent,\n   ],\n   imports: [CommonModule, ParticipantRoutingModule],\n-  providers: [],\n+  providers: [ParticipantService],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjYwNw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972607", "createdAt": "2020-06-19T17:50:22Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/participant/participant.module.ts", "diffHunk": "@@ -16,6 +16,6 @@ import {DashboardComponent} from './dashboard/dashboard.component';\n     DashboardComponent,\n   ],\n   imports: [CommonModule, ParticipantRoutingModule],\n-  providers: [],\n+  providers: [ParticipantService],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTY5NA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjUzMTY3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowOTozNVrOGkafSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoxOVrOGmc5pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTkxNA==", "bodyText": "formatting", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440835914", "createdAt": "2020-06-16T13:09:35Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -0,0 +1,176 @@\n+.nav-mobile {\n+    background: #fff;\n+    color: #FFF;\n+    padding: 0;\n+    margin: 0;\n+    cursor: auto;  \n+    font-size: 18px;\n+    list-style-type: none;\n+    box-shadow: 0 5px 5px -5px #333;\n+    &:after { content: \"\"; display: table; clear: both; }\n+    svg {\n+        height: 42px;\n+        width: 54px;\n+        padding: 9px;\n+      path { fill: #595959; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjU4Mg==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972582", "createdAt": "2020-06-19T17:50:19Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -0,0 +1,176 @@\n+.nav-mobile {\n+    background: #fff;\n+    color: #FFF;\n+    padding: 0;\n+    margin: 0;\n+    cursor: auto;  \n+    font-size: 18px;\n+    list-style-type: none;\n+    box-shadow: 0 5px 5px -5px #333;\n+    &:after { content: \"\"; display: table; clear: both; }\n+    svg {\n+        height: 42px;\n+        width: 54px;\n+        padding: 9px;\n+      path { fill: #595959; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTkxNA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjUzODc2OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoxMToxNlrOGkajuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoxNVrOGmc5lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNzA0OQ==", "bodyText": "relative font size", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440837049", "createdAt": "2020-06-16T13:11:16Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -0,0 +1,176 @@\n+.nav-mobile {\n+    background: #fff;\n+    color: #FFF;\n+    padding: 0;\n+    margin: 0;\n+    cursor: auto;  \n+    font-size: 18px;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjU2NQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972565", "createdAt": "2020-06-19T17:50:15Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -0,0 +1,176 @@\n+.nav-mobile {\n+    background: #fff;\n+    color: #FFF;\n+    padding: 0;\n+    margin: 0;\n+    cursor: auto;  \n+    font-size: 18px;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNzA0OQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjU5MDg5OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/user/user.module.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMzozMFrOGkbEEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDoxM1rOGmc5ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTMyOA==", "bodyText": "not needed.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440845328", "createdAt": "2020-06-16T13:23:30Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/user/user.module.ts", "diffHunk": "@@ -14,6 +14,6 @@ import {UserDetailsComponent} from './user-details/user-details.component';\n     UserDetailsComponent,\n   ],\n   imports: [CommonModule, UserRoutingModule],\n-  providers: [],\n+  providers: [UserService],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjUzOQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972539", "createdAt": "2020-06-19T17:50:13Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/user/user.module.ts", "diffHunk": "@@ -14,6 +14,6 @@ import {UserDetailsComponent} from './user-details/user-details.component';\n     UserDetailsComponent,\n   ],\n   imports: [CommonModule, UserRoutingModule],\n-  providers: [],\n+  providers: [UserService],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTMyOA=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjU5NDgxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/test.css", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyNDoxOFrOGkbGfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo1MDowN1rOGmc5Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTk0OQ==", "bodyText": "Why is this necessary?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440845949", "createdAt": "2020-06-16T13:24:18Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/test.css", "diffHunk": "@@ -0,0 +1 @@\n+@import \"~jasmine-core/lib/jasmine-core/jasmine.css\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjUwNg==", "bodyText": "removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972506", "createdAt": "2020-06-19T17:50:07Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/test.css", "diffHunk": "@@ -0,0 +1 @@\n+@import \"~jasmine-core/lib/jasmine-core/jasmine.css\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTk0OQ=="}, "originalCommit": {"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDIyODc0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDo1OTo0MlrOGmhG5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozNzozOFrOGnGPUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTUwOA==", "bodyText": "Typescript doesn't know what you're constructing here because Jasmine uses a string instead of a type. Manually specify the generic value to resolve the linter warnings.\n    const entityServicespy = jasmine.createSpyObj<EntityService<Location>>(\n      'EntityService',\n      ['getCollection'],\n    );", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443041508", "createdAt": "2020-06-19T20:59:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0OTg3Mw==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443649873", "createdAt": "2020-06-22T15:37:38Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTUwOA=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDIzOTE3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTowNDoxMlrOGmhNyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzozOToxNVrOGnpteg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ==", "bodyText": "Why aren't you using the service you created in the beforeEach?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443043275", "createdAt": "2020-06-19T21:04:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0OTc1Ng==", "bodyText": "It is causing the linter error and test case fails to run", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443649756", "createdAt": "2020-06-22T15:37:29Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDk1OA==", "bodyText": "The error explains the issue. Cannot find name 'entityServicespy'. You haven't declared this variable in the containing scope.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443804958", "createdAt": "2020-06-22T20:24:27Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTAzNA==", "bodyText": "yeah now we are declaring entityServicespy in each test block (it block)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231034", "createdAt": "2020-06-23T13:39:15Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI0NTExOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTowNjoyNlrOGmhRjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozNjoyOVrOGnGMIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDIzOA==", "bodyText": "I think this needs to be an async/fakeAsync test.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443044238", "createdAt": "2020-06-19T21:06:26Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(\n+      asyncData(expectedLocations),\n+    );\n+    locationService\n+      .getLocations()\n+      .subscribe(\n+        (Locations) =>\n+          expect(Locations).toEqual(expectedLocations, 'expected Locations'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+\n+  it('should return an error when the server returns a 401', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+    const errorResponse = new HttpErrorResponse({\n+      error: {\n+        app_error_code: 401,\n+        userMessage: 'User does not exist',\n+        type: 'error',\n+        detailMessage: '404 Cant able to get details',\n+      },\n+      status: 401,\n+      statusText: 'Unauthorized',\n+    });\n+\n+    entityServicespy.getCollection.and.returnValue(asyncError(errorResponse));\n+\n+    locationService.getLocations().subscribe(\n+      () => fail('expected an error, not locations'),\n+      (error: ApiResponse) => {\n+        expect(error.error.userMessage).toContain('User does not exist');\n+      },\n+    );\n+  });\n+\n+  it('should return an error when the server returns a 400', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0OTA1OA==", "bodyText": "Updated in the latest Commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443649058", "createdAt": "2020-06-22T15:36:29Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(\n+      asyncData(expectedLocations),\n+    );\n+    locationService\n+      .getLocations()\n+      .subscribe(\n+        (Locations) =>\n+          expect(Locations).toEqual(expectedLocations, 'expected Locations'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+\n+  it('should return an error when the server returns a 401', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+    const errorResponse = new HttpErrorResponse({\n+      error: {\n+        app_error_code: 401,\n+        userMessage: 'User does not exist',\n+        type: 'error',\n+        detailMessage: '404 Cant able to get details',\n+      },\n+      status: 401,\n+      statusText: 'Unauthorized',\n+    });\n+\n+    entityServicespy.getCollection.and.returnValue(asyncError(errorResponse));\n+\n+    locationService.getLocations().subscribe(\n+      () => fail('expected an error, not locations'),\n+      (error: ApiResponse) => {\n+        expect(error.error.userMessage).toContain('User does not exist');\n+      },\n+    );\n+  });\n+\n+  it('should return an error when the server returns a 400', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDIzOA=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI0Njg5OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTowNzoyNlrOGmhSpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjoyODozOFrOGnIQ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDUxNg==", "bodyText": "Your service layer shouldn't have to deal with Http types. We should add a \"map error\" to the entity service to pull out the ApiError.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443044516", "createdAt": "2020-06-19T21:07:26Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(\n+      asyncData(expectedLocations),\n+    );\n+    locationService\n+      .getLocations()\n+      .subscribe(\n+        (Locations) =>\n+          expect(Locations).toEqual(expectedLocations, 'expected Locations'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+\n+  it('should return an error when the server returns a 401', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+    const errorResponse = new HttpErrorResponse({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4MzA0OA==", "bodyText": "Updated in the last Commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443683048", "createdAt": "2020-06-22T16:28:38Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(\n+      asyncData(expectedLocations),\n+    );\n+    locationService\n+      .getLocations()\n+      .subscribe(\n+        (Locations) =>\n+          expect(Locations).toEqual(expectedLocations, 'expected Locations'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+\n+  it('should return an error when the server returns a 401', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+    const errorResponse = new HttpErrorResponse({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDUxNg=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI0NzM0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTowNzo0MlrOGmhS5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozNToyNlrOGnGJbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDU4MA==", "bodyText": "Don't forget to remove this.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443044580", "createdAt": "2020-06-19T21:07:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0ODM2NQ==", "bodyText": "Removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443648365", "createdAt": "2020-06-22T15:35:26Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDU4MA=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI2MDMzOnYy", "diffSide": "LEFT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxNDozN1rOGmha2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozODowNlrOGnGQlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjYxNw==", "bodyText": "You can still do this wwith `\n<ng-container *ngIf=\"(location$ | async) as locations\">\n    <div *ngIf=\"locations.length != 0\">\n    <!-- Don't refer to location$ here, use the resolved \"locations\" value anywhere inside the ng-container --> \nThe first ngIf wait until the Observable is defined, then the second on has your display condition. Unfortunately you can't combine these into one *ngIf because of how the syntax works, but it's not too bad.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443046617", "createdAt": "2020-06-19T21:14:37Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -2,22 +2,21 @@\n   <div class=\"max__w__1280 m-none\">\n     <div class=\"flex__justify__space-between\">\n       <div class=\"subheader__title\">Locations</div>\n-      <div class=\"\">\n-        <button\n-          (click)=\"addLocation()\"\n-          class=\"btn btn-primary width__auto blue__btn font14\"\n-        >\n-          Add Location\n-        </button>\n-      </div>\n+      <button\n+        id=\"addLocation\"\n+        (click)=\"addLocation()\"\n+        class=\"btn btn-primary width__auto blue__btn font14\"\n+      >\n+        Add Location\n+      </button>\n     </div>\n   </div>\n </div>\n <div class=\"max__w__1280 m-none\">\n-  <div *ngIf=\"locations.length != 0\" class=\"cards1 m-none\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MDE5OQ==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443650199", "createdAt": "2020-06-22T15:38:06Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -2,22 +2,21 @@\n   <div class=\"max__w__1280 m-none\">\n     <div class=\"flex__justify__space-between\">\n       <div class=\"subheader__title\">Locations</div>\n-      <div class=\"\">\n-        <button\n-          (click)=\"addLocation()\"\n-          class=\"btn btn-primary width__auto blue__btn font14\"\n-        >\n-          Add Location\n-        </button>\n-      </div>\n+      <button\n+        id=\"addLocation\"\n+        (click)=\"addLocation()\"\n+        class=\"btn btn-primary width__auto blue__btn font14\"\n+      >\n+        Add Location\n+      </button>\n     </div>\n   </div>\n </div>\n <div class=\"max__w__1280 m-none\">\n-  <div *ngIf=\"locations.length != 0\" class=\"cards1 m-none\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjYxNw=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI2MTEyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxNTowMVrOGmhbUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozODoxMlrOGnGQ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjczNw==", "bodyText": "Absolute URL here too.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443046737", "createdAt": "2020-06-19T21:15:01Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -58,29 +58,14 @@\n \n   <div id=\"mobile-menu\">\n     <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div class=\"\">\n-        <span\n+      <div>\n+        <button\n           class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"opencloseNav()\"\n+          (click)=\"toggleNav()\"\n         >\n-          <svg\n-            height=\"16px\"\n-            viewBox=\"0 -53 384 384\"\n-            width=\"20px\"\n-            xmlns=\"http://www.w3.org/2000/svg\"\n-          >\n-            <path\n-              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-          </svg>\n-        </span>\n-        <a href=\"#\" class=\"\">\n+          <img src=\"../../../assets/svgs/menu-icon.svg\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MDI3MA==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443650270", "createdAt": "2020-06-22T15:38:12Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -58,29 +58,14 @@\n \n   <div id=\"mobile-menu\">\n     <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div class=\"\">\n-        <span\n+      <div>\n+        <button\n           class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"opencloseNav()\"\n+          (click)=\"toggleNav()\"\n         >\n-          <svg\n-            height=\"16px\"\n-            viewBox=\"0 -53 384 384\"\n-            width=\"20px\"\n-            xmlns=\"http://www.w3.org/2000/svg\"\n-          >\n-            <path\n-              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-          </svg>\n-        </span>\n-        <a href=\"#\" class=\"\">\n+          <img src=\"../../../assets/svgs/menu-icon.svg\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjczNw=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI2MjQwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxNToyN1rOGmhb8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozODo1MlrOGnGSjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0Njg5OQ==", "bodyText": "Button here too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443046899", "createdAt": "2020-06-19T21:15:27Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -58,29 +58,14 @@\n \n   <div id=\"mobile-menu\">\n     <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div class=\"\">\n-        <span\n+      <div>\n+        <button\n           class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"opencloseNav()\"\n+          (click)=\"toggleNav()\"\n         >\n-          <svg\n-            height=\"16px\"\n-            viewBox=\"0 -53 384 384\"\n-            width=\"20px\"\n-            xmlns=\"http://www.w3.org/2000/svg\"\n-          >\n-            <path\n-              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-          </svg>\n-        </span>\n-        <a href=\"#\" class=\"\">\n+          <img src=\"../../../assets/svgs/menu-icon.svg\" />\n+        </button>\n+        <a href=\"#\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MDcwMA==", "bodyText": "Since it's a navigation link which is redirecting to home page , I have used anchor tag instead of button", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443650700", "createdAt": "2020-06-22T15:38:52Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -58,29 +58,14 @@\n \n   <div id=\"mobile-menu\">\n     <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div class=\"\">\n-        <span\n+      <div>\n+        <button\n           class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"opencloseNav()\"\n+          (click)=\"toggleNav()\"\n         >\n-          <svg\n-            height=\"16px\"\n-            viewBox=\"0 -53 384 384\"\n-            width=\"20px\"\n-            xmlns=\"http://www.w3.org/2000/svg\"\n-          >\n-            <path\n-              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-          </svg>\n-        </span>\n-        <a href=\"#\" class=\"\">\n+          <img src=\"../../../assets/svgs/menu-icon.svg\" />\n+        </button>\n+        <a href=\"#\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0Njg5OQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI2NTM1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxNzoxMFrOGmhdyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzozOToyN1rOGnpuAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzM3MQ==", "bodyText": "autoprefixer should be able to take care of this for you.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047371", "createdAt": "2020-06-19T21:17:10Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -1,176 +1,196 @@\n .nav-mobile {\n-    background: #fff;\n-    color: #FFF;\n-    padding: 0;\n-    margin: 0;\n-    cursor: auto;  \n-    font-size: 18px;\n-    list-style-type: none;\n-    box-shadow: 0 5px 5px -5px #333;\n-    &:after { content: \"\"; display: table; clear: both; }\n-    svg {\n-        height: 42px;\n-        width: 54px;\n-        padding: 9px;\n-      path { fill: #595959; }\n-      &.icon-close { \n-        display: none; \n-        padding: 15px;\n-      }\n+  background: #fff;\n+  color: #fff;\n+  padding: 0;\n+  margin: 0;\n+  cursor: auto;\n+  font-size: 18px;\n+  list-style-type: none;\n+  box-shadow: 0 5px 5px -5px #333;\n+  &:after {\n+    content: \"\";\n+    display: table;\n+    clear: both;\n+  }\n+  svg {\n+    height: 42px;\n+    width: 54px;\n+    padding: 9px;\n+    path {\n+      fill: #595959;\n     }\n-    li {\n-      width: 100%;\n-      height: 45px;\n-      line-height: 46px;\n-      text-align: center;\n-      float: left;\n-      a {\n-        display: block;\n-        color: #333;\n-        width: 100%;\n-        height: 100%;     \n-        text-decoration: none;       \n-      }      \n+    &.icon-close {\n+      display: none;\n+      padding: 15px;\n     }\n-    .menu-button {\n-      position: absolute;\n-      top: 0;\n-      left: 0;\n+  }\n+  li {\n+    width: 100%;\n+    height: 45px;\n+    line-height: 46px;\n+    text-align: center;\n+    float: left;\n+    a {\n+      display: block;\n+      color: #333;\n       width: 100%;\n       height: 100%;\n-      margin: 0;\n-      cursor: pointer;\n+      text-decoration: none;\n+    }\n+  }\n+  .menu-button {\n+    position: absolute;\n+    top: 0;\n+    left: 0;\n+    width: 100%;\n+    height: 100%;\n+    margin: 0;\n+    cursor: pointer;\n+    display: block;\n+    &:after {\n+      opacity: 0;\n+      top: 45px;\n+      content: \"\";\n+      width: 100vw;\n       display: block;\n-      &:after {\n-        opacity: 0;\n-        top: 45px;\n-        content: \"\";\n-        width: 100vw;\n+      position: fixed;\n+      height: 100vh;\n+      background: rgba(0, 0, 0, 0.5);\n+      content: \"\";\n+      pointer-events: none;\n+      transition: opacity 0.2s cubic-bezier(0, 0, 0.3, 1);\n+      transition-delay: 0.1s;\n+    }\n+  }\n+  #menu-toggle {\n+    display: none;\n+    &.active ~ .menu-button,\n+    &:checked ~ .menu-button {\n+      .icon-close {\n         display: block;\n-        position: fixed;\n-        height: 100vh;\n-        background: rgba(0,0,0,0.5);      \n-        content: \"\";\n-        pointer-events: none;\n-        transition: opacity 0.2s cubic-bezier(0,0,0.3,1);  \n-        transition-delay: 0.1s;      \n       }\n-    }  \n-    #menu-toggle {\n-      display: none;\n-      &.active ~ .menu-button,\n-      &:checked ~ .menu-button {\n-        .icon-close { display: block; }\n-        .icon-open { display: none; }\n-        &:after {\n-          opacity: 1;\n-          pointer-events: auto;\n-          transition: opacity 0.3s cubic-bezier(0,0,0.3,1);        \n-        }\n-      }   \n-      &.active ~ .menu-sidebar, \n-      &:checked ~ .menu-sidebar {\n-        transform: translateX(0);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);\n-      }    \n+      .icon-open {\n+        display: none;\n+      }\n+      &:after {\n+        opacity: 1;\n+        pointer-events: auto;\n+        transition: opacity 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      }\n     }\n-    .menu-container {\n-      width: 65px;\n-      float: left;\n-      cursor: pointer;\n-      position: absolute;\n-      .menu-sidebar { \n-        box-shadow: 5px 0 5px -5px #333;\n-        display: block;\n-        bottom: 0;\n-        background: white;\n-        color: #333;\n-        position: fixed;\n-        transform: translateX(-405px);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);   \n-        top: 45px;\n-        z-index: 2;\n-        list-style-type: none;\n-        padding: 0;\n-        width: 226px;\n-        .arrow {\n-          position: absolute;\n-          line-height: 50px;\n-          font-size: 32px;\n-          color: #555;\n+    &.active ~ .menu-sidebar,\n+    &:checked ~ .menu-sidebar {\n+      transform: translateX(0);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+    }\n+  }\n+  .menu-container {\n+    width: 65px;\n+    float: left;\n+    cursor: pointer;\n+    position: absolute;\n+    .menu-sidebar {\n+      box-shadow: 5px 0 5px -5px #333;\n+      display: block;\n+      bottom: 0;\n+      background: white;\n+      color: #333;\n+      position: fixed;\n+      transform: translateX(-405px);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      top: 45px;\n+      z-index: 2;\n+      list-style-type: none;\n+      padding: 0;\n+      width: 226px;\n+      .arrow {\n+        position: absolute;\n+        line-height: 50px;\n+        font-size: 32px;\n+        color: #555;\n+        top: 0;\n+        z-index: 0;\n+        &.left {\n+          left: 25px;\n+        }\n+        &.right {\n+          right: 25px;\n+        }\n+      }\n+      li {\n+        height: 55px;\n+        line-height: 55px;\n+        font-size: 16px;\n+        text-align: left;\n+        position: relative;\n+        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n+        padding-left: 20px;\n+        &:hover {\n+          background: #eee;\n+        }\n+        .menu-sub {\n+          position: fixed;\n           top: 0;\n-          z-index: 0;\n-          &.left { left: 25px; }\n-          &.right { right: 25px; }\n-        }      \n-        li {\n-          height: 55px;\n-          line-height: 55px;\n-          font-size: 16px; \n-          text-align: left;\n-          position: relative;\n-          border-bottom: 1px solid rgba(0,0,0,0.1);\n-          padding-left: 20px;\n-          &:hover { background: #eee; }                              \n-          .menu-sub {\n-            position: fixed;\n-            top: 0;\n-            right: 0;\n-            bottom: 0;\n-            width: 0;\n+          right: 0;\n+          bottom: 0;\n+          width: 0;\n+          overflow: hidden;\n+          background: white;\n+          visibility: hidden;\n+          transition: all 0.3s cubic-bezier(0, 0, 0.3, 1);\n+          border-left: 1px solid #ccc;\n+          list-style-type: none;\n+          padding: 0;\n+          margin: 0;\n+          z-index: 2;\n+          width: 226px;\n+          li {\n             overflow: hidden;\n-            background: white;\n-            visibility: hidden;\n-            transition: all 0.3s cubic-bezier(0,0,0.3,1);\n-            border-left: 1px solid #ccc;  \n-            list-style-type: none;\n-            padding: 0;\n-            margin: 0;    \n-            z-index: 2;\n-            width: 226px;\n-            li { overflow: hidden; }\n-            .menu-sub-title { padding-left: 50px; }\n-           }\n-          .submenu-label {\n-            cursor: pointer;\n-            width: 100%;\n-            height: 100%;\n-            display: block;\n           }\n-          .submenu-toggle {\n-            display: none; \n-            &.active ~ .menu-sub,\n-            &:checked ~ .menu-sub {\n-              width: 65vw;\n-              visibility: visible;\n-              z-index: 1;\n-              transition: width 0.35s cubic-bezier(0,0,0.3,1);\n-            }\n-          }               \n-        }       \n+          .menu-sub-title {\n+            padding-left: 50px;\n+          }\n+        }\n+        .submenu-label {\n+          cursor: pointer;\n+          width: 100%;\n+          height: 100%;\n+          display: block;\n+        }\n+        .submenu-toggle {\n+          display: none;\n+          &.active ~ .menu-sub,\n+          &:checked ~ .menu-sub {\n+            width: 65vw;\n+            visibility: visible;\n+            z-index: 1;\n+            transition: width 0.35s cubic-bezier(0, 0, 0.3, 1);\n+          }\n+        }\n       }\n     }\n   }\n+}\n \n-  .mb__logo{\n-    margin-left: 60px;\n-    text-align: left;\n-  }\n+.mb__logo {\n+  margin-left: 60px;\n+  text-align: left;\n+}\n \n-::-webkit-input-placeholder { \n+::-webkit-input-placeholder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 323}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MTYxNA==", "bodyText": "We are using prettier for formatting html,css and scss files. Please let us know if you want to use autoprefixer instead of prettier", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443651614", "createdAt": "2020-06-22T15:40:11Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -1,176 +1,196 @@\n .nav-mobile {\n-    background: #fff;\n-    color: #FFF;\n-    padding: 0;\n-    margin: 0;\n-    cursor: auto;  \n-    font-size: 18px;\n-    list-style-type: none;\n-    box-shadow: 0 5px 5px -5px #333;\n-    &:after { content: \"\"; display: table; clear: both; }\n-    svg {\n-        height: 42px;\n-        width: 54px;\n-        padding: 9px;\n-      path { fill: #595959; }\n-      &.icon-close { \n-        display: none; \n-        padding: 15px;\n-      }\n+  background: #fff;\n+  color: #fff;\n+  padding: 0;\n+  margin: 0;\n+  cursor: auto;\n+  font-size: 18px;\n+  list-style-type: none;\n+  box-shadow: 0 5px 5px -5px #333;\n+  &:after {\n+    content: \"\";\n+    display: table;\n+    clear: both;\n+  }\n+  svg {\n+    height: 42px;\n+    width: 54px;\n+    padding: 9px;\n+    path {\n+      fill: #595959;\n     }\n-    li {\n-      width: 100%;\n-      height: 45px;\n-      line-height: 46px;\n-      text-align: center;\n-      float: left;\n-      a {\n-        display: block;\n-        color: #333;\n-        width: 100%;\n-        height: 100%;     \n-        text-decoration: none;       \n-      }      \n+    &.icon-close {\n+      display: none;\n+      padding: 15px;\n     }\n-    .menu-button {\n-      position: absolute;\n-      top: 0;\n-      left: 0;\n+  }\n+  li {\n+    width: 100%;\n+    height: 45px;\n+    line-height: 46px;\n+    text-align: center;\n+    float: left;\n+    a {\n+      display: block;\n+      color: #333;\n       width: 100%;\n       height: 100%;\n-      margin: 0;\n-      cursor: pointer;\n+      text-decoration: none;\n+    }\n+  }\n+  .menu-button {\n+    position: absolute;\n+    top: 0;\n+    left: 0;\n+    width: 100%;\n+    height: 100%;\n+    margin: 0;\n+    cursor: pointer;\n+    display: block;\n+    &:after {\n+      opacity: 0;\n+      top: 45px;\n+      content: \"\";\n+      width: 100vw;\n       display: block;\n-      &:after {\n-        opacity: 0;\n-        top: 45px;\n-        content: \"\";\n-        width: 100vw;\n+      position: fixed;\n+      height: 100vh;\n+      background: rgba(0, 0, 0, 0.5);\n+      content: \"\";\n+      pointer-events: none;\n+      transition: opacity 0.2s cubic-bezier(0, 0, 0.3, 1);\n+      transition-delay: 0.1s;\n+    }\n+  }\n+  #menu-toggle {\n+    display: none;\n+    &.active ~ .menu-button,\n+    &:checked ~ .menu-button {\n+      .icon-close {\n         display: block;\n-        position: fixed;\n-        height: 100vh;\n-        background: rgba(0,0,0,0.5);      \n-        content: \"\";\n-        pointer-events: none;\n-        transition: opacity 0.2s cubic-bezier(0,0,0.3,1);  \n-        transition-delay: 0.1s;      \n       }\n-    }  \n-    #menu-toggle {\n-      display: none;\n-      &.active ~ .menu-button,\n-      &:checked ~ .menu-button {\n-        .icon-close { display: block; }\n-        .icon-open { display: none; }\n-        &:after {\n-          opacity: 1;\n-          pointer-events: auto;\n-          transition: opacity 0.3s cubic-bezier(0,0,0.3,1);        \n-        }\n-      }   \n-      &.active ~ .menu-sidebar, \n-      &:checked ~ .menu-sidebar {\n-        transform: translateX(0);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);\n-      }    \n+      .icon-open {\n+        display: none;\n+      }\n+      &:after {\n+        opacity: 1;\n+        pointer-events: auto;\n+        transition: opacity 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      }\n     }\n-    .menu-container {\n-      width: 65px;\n-      float: left;\n-      cursor: pointer;\n-      position: absolute;\n-      .menu-sidebar { \n-        box-shadow: 5px 0 5px -5px #333;\n-        display: block;\n-        bottom: 0;\n-        background: white;\n-        color: #333;\n-        position: fixed;\n-        transform: translateX(-405px);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);   \n-        top: 45px;\n-        z-index: 2;\n-        list-style-type: none;\n-        padding: 0;\n-        width: 226px;\n-        .arrow {\n-          position: absolute;\n-          line-height: 50px;\n-          font-size: 32px;\n-          color: #555;\n+    &.active ~ .menu-sidebar,\n+    &:checked ~ .menu-sidebar {\n+      transform: translateX(0);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+    }\n+  }\n+  .menu-container {\n+    width: 65px;\n+    float: left;\n+    cursor: pointer;\n+    position: absolute;\n+    .menu-sidebar {\n+      box-shadow: 5px 0 5px -5px #333;\n+      display: block;\n+      bottom: 0;\n+      background: white;\n+      color: #333;\n+      position: fixed;\n+      transform: translateX(-405px);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      top: 45px;\n+      z-index: 2;\n+      list-style-type: none;\n+      padding: 0;\n+      width: 226px;\n+      .arrow {\n+        position: absolute;\n+        line-height: 50px;\n+        font-size: 32px;\n+        color: #555;\n+        top: 0;\n+        z-index: 0;\n+        &.left {\n+          left: 25px;\n+        }\n+        &.right {\n+          right: 25px;\n+        }\n+      }\n+      li {\n+        height: 55px;\n+        line-height: 55px;\n+        font-size: 16px;\n+        text-align: left;\n+        position: relative;\n+        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n+        padding-left: 20px;\n+        &:hover {\n+          background: #eee;\n+        }\n+        .menu-sub {\n+          position: fixed;\n           top: 0;\n-          z-index: 0;\n-          &.left { left: 25px; }\n-          &.right { right: 25px; }\n-        }      \n-        li {\n-          height: 55px;\n-          line-height: 55px;\n-          font-size: 16px; \n-          text-align: left;\n-          position: relative;\n-          border-bottom: 1px solid rgba(0,0,0,0.1);\n-          padding-left: 20px;\n-          &:hover { background: #eee; }                              \n-          .menu-sub {\n-            position: fixed;\n-            top: 0;\n-            right: 0;\n-            bottom: 0;\n-            width: 0;\n+          right: 0;\n+          bottom: 0;\n+          width: 0;\n+          overflow: hidden;\n+          background: white;\n+          visibility: hidden;\n+          transition: all 0.3s cubic-bezier(0, 0, 0.3, 1);\n+          border-left: 1px solid #ccc;\n+          list-style-type: none;\n+          padding: 0;\n+          margin: 0;\n+          z-index: 2;\n+          width: 226px;\n+          li {\n             overflow: hidden;\n-            background: white;\n-            visibility: hidden;\n-            transition: all 0.3s cubic-bezier(0,0,0.3,1);\n-            border-left: 1px solid #ccc;  \n-            list-style-type: none;\n-            padding: 0;\n-            margin: 0;    \n-            z-index: 2;\n-            width: 226px;\n-            li { overflow: hidden; }\n-            .menu-sub-title { padding-left: 50px; }\n-           }\n-          .submenu-label {\n-            cursor: pointer;\n-            width: 100%;\n-            height: 100%;\n-            display: block;\n           }\n-          .submenu-toggle {\n-            display: none; \n-            &.active ~ .menu-sub,\n-            &:checked ~ .menu-sub {\n-              width: 65vw;\n-              visibility: visible;\n-              z-index: 1;\n-              transition: width 0.35s cubic-bezier(0,0,0.3,1);\n-            }\n-          }               \n-        }       \n+          .menu-sub-title {\n+            padding-left: 50px;\n+          }\n+        }\n+        .submenu-label {\n+          cursor: pointer;\n+          width: 100%;\n+          height: 100%;\n+          display: block;\n+        }\n+        .submenu-toggle {\n+          display: none;\n+          &.active ~ .menu-sub,\n+          &:checked ~ .menu-sub {\n+            width: 65vw;\n+            visibility: visible;\n+            z-index: 1;\n+            transition: width 0.35s cubic-bezier(0, 0, 0.3, 1);\n+          }\n+        }\n       }\n     }\n   }\n+}\n \n-  .mb__logo{\n-    margin-left: 60px;\n-    text-align: left;\n-  }\n+.mb__logo {\n+  margin-left: 60px;\n+  text-align: left;\n+}\n \n-::-webkit-input-placeholder { \n+::-webkit-input-placeholder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzM3MQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 323}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTE2OQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231169", "createdAt": "2020-06-23T13:39:27Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -1,176 +1,196 @@\n .nav-mobile {\n-    background: #fff;\n-    color: #FFF;\n-    padding: 0;\n-    margin: 0;\n-    cursor: auto;  \n-    font-size: 18px;\n-    list-style-type: none;\n-    box-shadow: 0 5px 5px -5px #333;\n-    &:after { content: \"\"; display: table; clear: both; }\n-    svg {\n-        height: 42px;\n-        width: 54px;\n-        padding: 9px;\n-      path { fill: #595959; }\n-      &.icon-close { \n-        display: none; \n-        padding: 15px;\n-      }\n+  background: #fff;\n+  color: #fff;\n+  padding: 0;\n+  margin: 0;\n+  cursor: auto;\n+  font-size: 18px;\n+  list-style-type: none;\n+  box-shadow: 0 5px 5px -5px #333;\n+  &:after {\n+    content: \"\";\n+    display: table;\n+    clear: both;\n+  }\n+  svg {\n+    height: 42px;\n+    width: 54px;\n+    padding: 9px;\n+    path {\n+      fill: #595959;\n     }\n-    li {\n-      width: 100%;\n-      height: 45px;\n-      line-height: 46px;\n-      text-align: center;\n-      float: left;\n-      a {\n-        display: block;\n-        color: #333;\n-        width: 100%;\n-        height: 100%;     \n-        text-decoration: none;       \n-      }      \n+    &.icon-close {\n+      display: none;\n+      padding: 15px;\n     }\n-    .menu-button {\n-      position: absolute;\n-      top: 0;\n-      left: 0;\n+  }\n+  li {\n+    width: 100%;\n+    height: 45px;\n+    line-height: 46px;\n+    text-align: center;\n+    float: left;\n+    a {\n+      display: block;\n+      color: #333;\n       width: 100%;\n       height: 100%;\n-      margin: 0;\n-      cursor: pointer;\n+      text-decoration: none;\n+    }\n+  }\n+  .menu-button {\n+    position: absolute;\n+    top: 0;\n+    left: 0;\n+    width: 100%;\n+    height: 100%;\n+    margin: 0;\n+    cursor: pointer;\n+    display: block;\n+    &:after {\n+      opacity: 0;\n+      top: 45px;\n+      content: \"\";\n+      width: 100vw;\n       display: block;\n-      &:after {\n-        opacity: 0;\n-        top: 45px;\n-        content: \"\";\n-        width: 100vw;\n+      position: fixed;\n+      height: 100vh;\n+      background: rgba(0, 0, 0, 0.5);\n+      content: \"\";\n+      pointer-events: none;\n+      transition: opacity 0.2s cubic-bezier(0, 0, 0.3, 1);\n+      transition-delay: 0.1s;\n+    }\n+  }\n+  #menu-toggle {\n+    display: none;\n+    &.active ~ .menu-button,\n+    &:checked ~ .menu-button {\n+      .icon-close {\n         display: block;\n-        position: fixed;\n-        height: 100vh;\n-        background: rgba(0,0,0,0.5);      \n-        content: \"\";\n-        pointer-events: none;\n-        transition: opacity 0.2s cubic-bezier(0,0,0.3,1);  \n-        transition-delay: 0.1s;      \n       }\n-    }  \n-    #menu-toggle {\n-      display: none;\n-      &.active ~ .menu-button,\n-      &:checked ~ .menu-button {\n-        .icon-close { display: block; }\n-        .icon-open { display: none; }\n-        &:after {\n-          opacity: 1;\n-          pointer-events: auto;\n-          transition: opacity 0.3s cubic-bezier(0,0,0.3,1);        \n-        }\n-      }   \n-      &.active ~ .menu-sidebar, \n-      &:checked ~ .menu-sidebar {\n-        transform: translateX(0);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);\n-      }    \n+      .icon-open {\n+        display: none;\n+      }\n+      &:after {\n+        opacity: 1;\n+        pointer-events: auto;\n+        transition: opacity 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      }\n     }\n-    .menu-container {\n-      width: 65px;\n-      float: left;\n-      cursor: pointer;\n-      position: absolute;\n-      .menu-sidebar { \n-        box-shadow: 5px 0 5px -5px #333;\n-        display: block;\n-        bottom: 0;\n-        background: white;\n-        color: #333;\n-        position: fixed;\n-        transform: translateX(-405px);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);   \n-        top: 45px;\n-        z-index: 2;\n-        list-style-type: none;\n-        padding: 0;\n-        width: 226px;\n-        .arrow {\n-          position: absolute;\n-          line-height: 50px;\n-          font-size: 32px;\n-          color: #555;\n+    &.active ~ .menu-sidebar,\n+    &:checked ~ .menu-sidebar {\n+      transform: translateX(0);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+    }\n+  }\n+  .menu-container {\n+    width: 65px;\n+    float: left;\n+    cursor: pointer;\n+    position: absolute;\n+    .menu-sidebar {\n+      box-shadow: 5px 0 5px -5px #333;\n+      display: block;\n+      bottom: 0;\n+      background: white;\n+      color: #333;\n+      position: fixed;\n+      transform: translateX(-405px);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      top: 45px;\n+      z-index: 2;\n+      list-style-type: none;\n+      padding: 0;\n+      width: 226px;\n+      .arrow {\n+        position: absolute;\n+        line-height: 50px;\n+        font-size: 32px;\n+        color: #555;\n+        top: 0;\n+        z-index: 0;\n+        &.left {\n+          left: 25px;\n+        }\n+        &.right {\n+          right: 25px;\n+        }\n+      }\n+      li {\n+        height: 55px;\n+        line-height: 55px;\n+        font-size: 16px;\n+        text-align: left;\n+        position: relative;\n+        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n+        padding-left: 20px;\n+        &:hover {\n+          background: #eee;\n+        }\n+        .menu-sub {\n+          position: fixed;\n           top: 0;\n-          z-index: 0;\n-          &.left { left: 25px; }\n-          &.right { right: 25px; }\n-        }      \n-        li {\n-          height: 55px;\n-          line-height: 55px;\n-          font-size: 16px; \n-          text-align: left;\n-          position: relative;\n-          border-bottom: 1px solid rgba(0,0,0,0.1);\n-          padding-left: 20px;\n-          &:hover { background: #eee; }                              \n-          .menu-sub {\n-            position: fixed;\n-            top: 0;\n-            right: 0;\n-            bottom: 0;\n-            width: 0;\n+          right: 0;\n+          bottom: 0;\n+          width: 0;\n+          overflow: hidden;\n+          background: white;\n+          visibility: hidden;\n+          transition: all 0.3s cubic-bezier(0, 0, 0.3, 1);\n+          border-left: 1px solid #ccc;\n+          list-style-type: none;\n+          padding: 0;\n+          margin: 0;\n+          z-index: 2;\n+          width: 226px;\n+          li {\n             overflow: hidden;\n-            background: white;\n-            visibility: hidden;\n-            transition: all 0.3s cubic-bezier(0,0,0.3,1);\n-            border-left: 1px solid #ccc;  \n-            list-style-type: none;\n-            padding: 0;\n-            margin: 0;    \n-            z-index: 2;\n-            width: 226px;\n-            li { overflow: hidden; }\n-            .menu-sub-title { padding-left: 50px; }\n-           }\n-          .submenu-label {\n-            cursor: pointer;\n-            width: 100%;\n-            height: 100%;\n-            display: block;\n           }\n-          .submenu-toggle {\n-            display: none; \n-            &.active ~ .menu-sub,\n-            &:checked ~ .menu-sub {\n-              width: 65vw;\n-              visibility: visible;\n-              z-index: 1;\n-              transition: width 0.35s cubic-bezier(0,0,0.3,1);\n-            }\n-          }               \n-        }       \n+          .menu-sub-title {\n+            padding-left: 50px;\n+          }\n+        }\n+        .submenu-label {\n+          cursor: pointer;\n+          width: 100%;\n+          height: 100%;\n+          display: block;\n+        }\n+        .submenu-toggle {\n+          display: none;\n+          &.active ~ .menu-sub,\n+          &:checked ~ .menu-sub {\n+            width: 65vw;\n+            visibility: visible;\n+            z-index: 1;\n+            transition: width 0.35s cubic-bezier(0, 0, 0.3, 1);\n+          }\n+        }\n       }\n     }\n   }\n+}\n \n-  .mb__logo{\n-    margin-left: 60px;\n-    text-align: left;\n-  }\n+.mb__logo {\n+  margin-left: 60px;\n+  text-align: left;\n+}\n \n-::-webkit-input-placeholder { \n+::-webkit-input-placeholder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzM3MQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 323}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI2NjA4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/assets/svgs/menu-icon.svg", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxNzozNlrOGmheOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo0MDoxN1rOGnpwTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzQ4Mg==", "bodyText": "formatting", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047482", "createdAt": "2020-06-19T21:17:36Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/assets/svgs/menu-icon.svg", "diffHunk": "@@ -0,0 +1,13 @@\n+<svg\n+                    height=\"16px\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MjUxNg==", "bodyText": "Can you please suggest us  formatter for SVG files.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443652516", "createdAt": "2020-06-22T15:41:35Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/assets/svgs/menu-icon.svg", "diffHunk": "@@ -0,0 +1,13 @@\n+<svg\n+                    height=\"16px\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzQ4Mg=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTc1OA==", "bodyText": "we have formatted svg files using @prettier/plugin-xml and added \"xmlWhitespaceSensitivity\": \"ignore\"", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231758", "createdAt": "2020-06-23T13:40:17Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/assets/svgs/menu-icon.svg", "diffHunk": "@@ -0,0 +1,13 @@\n+<svg\n+                    height=\"16px\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzQ4Mg=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI2NzQ3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/testing/async-observable-helpers.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToxODozM1rOGmhfGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozNDoxM1rOGnGGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzcwNQ==", "bodyText": "You don't need to create these. This is functionally the same as Observable's of, and asyncError is the same as Observable's throw.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047705", "createdAt": "2020-06-19T21:18:33Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/testing/async-observable-helpers.ts", "diffHunk": "@@ -0,0 +1,10 @@\n+/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n+/* eslint-disable @typescript-eslint/promise-function-async */\n+import {defer} from 'rxjs';\n+export function asyncData<T>(data: T) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0NzUwNQ==", "bodyText": "Removed this file", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443647505", "createdAt": "2020-06-22T15:34:13Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/testing/async-observable-helpers.ts", "diffHunk": "@@ -0,0 +1,10 @@\n+/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n+/* eslint-disable @typescript-eslint/promise-function-async */\n+import {defer} from 'rxjs';\n+export function asyncData<T>(data: T) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzcwNQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI3MzA1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/package.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToyMTozMVrOGmhiYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTozNDoyOFrOGnGGtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0ODU0NQ==", "bodyText": "I'm in the habit of using Observable.of, but that's the old way of doing things. We should be using the RxJS 6+ style, so just import {of} from 'rxjs';", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443048545", "createdAt": "2020-06-19T21:21:31Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/package.json", "diffHunk": "@@ -40,6 +40,7 @@\n     \"node-sass\": \"^4.13.0\",\n     \"popper.js\": \"^1.16.0\",\n     \"rxjs\": \"~6.5.4\",\n+    \"rxjs-compat\": \"^6.5.5\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0NzY2OQ==", "bodyText": "Updated in the latest Commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443647669", "createdAt": "2020-06-22T15:34:28Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/package.json", "diffHunk": "@@ -40,6 +40,7 @@\n     \"node-sass\": \"^4.13.0\",\n     \"popper.js\": \"^1.16.0\",\n     \"rxjs\": \"~6.5.4\",\n+    \"rxjs-compat\": \"^6.5.5\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0ODU0NQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDI4NDEzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/shared/commomComponentsModule.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMToyNzozMVrOGmhpWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo0MTo0NlrOGnGaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MDMzMQ==", "bodyText": "Please don't add new things to the scope of a PR once we've started reviewing it. This PR is already pushing the size I'd like to be reviewing. Let's add this and the sorter component later.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443050331", "createdAt": "2020-06-19T21:27:31Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/shared/commomComponentsModule.ts", "diffHunk": "@@ -0,0 +1,9 @@\n+import {NgModule} from '@angular/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MjYyMA==", "bodyText": "Removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443652620", "createdAt": "2020-06-22T15:41:46Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/shared/commomComponentsModule.ts", "diffHunk": "@@ -0,0 +1,9 @@\n+import {NgModule} from '@angular/core';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MDMzMQ=="}, "originalCommit": {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzcyMzg1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/mobile-menu/mobile-menu.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzoyMzo1N1rOGnAajw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo0MDozMVrOGnpw_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1NDQ0Nw==", "bodyText": "keydown to be consistent with Angular. Unless conflicts are a problem, in which case use the prefix on.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443554447", "createdAt": "2020-06-22T13:23:57Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/mobile-menu/mobile-menu.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import {Component, Input, Output, EventEmitter} from '@angular/core';\n+\n+@Component({\n+  selector: 'mobile-menu',\n+  templateUrl: './mobile-menu.component.html',\n+  styleUrls: ['./mobile-menu.component.scss'],\n+})\n+export class MobileMenuComponent<T> {\n+  @Input() searchPlaceholder = 'Search by Site or Study ID or Name';\n+  navIsOpen = false;\n+  @Input() showSearchBar = true;\n+  @Input() filterQuery = '';\n+  @Output('handleKeyDown') handleKeyDown: EventEmitter<", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11a8a80eb6f7b531bff40f90d0d742f87646ddb9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTkzNQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231935", "createdAt": "2020-06-23T13:40:31Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/mobile-menu/mobile-menu.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import {Component, Input, Output, EventEmitter} from '@angular/core';\n+\n+@Component({\n+  selector: 'mobile-menu',\n+  templateUrl: './mobile-menu.component.html',\n+  styleUrls: ['./mobile-menu.component.scss'],\n+})\n+export class MobileMenuComponent<T> {\n+  @Input() searchPlaceholder = 'Search by Site or Study ID or Name';\n+  navIsOpen = false;\n+  @Input() showSearchBar = true;\n+  @Input() filterQuery = '';\n+  @Output('handleKeyDown') handleKeyDown: EventEmitter<", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1NDQ0Nw=="}, "originalCommit": {"oid": "11a8a80eb6f7b531bff40f90d0d742f87646ddb9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDM2NDQxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo0ODoxMVrOGnGrGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo0MDozNFrOGnpxOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1Njk4NQ==", "bodyText": "[searchPlaceholder]=\"searchPlaceholder\". {{ }} is only used for interpolating text into HTML", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443656985", "createdAt": "2020-06-22T15:48:11Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -56,109 +56,12 @@\n     </div>\n   </div>\n \n-  <div id=\"mobile-menu\">\n-    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div>\n-        <button\n-          class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"toggleNav()\"\n-        >\n-          <img src=\"../../../assets/svgs/menu-icon.svg\" />\n-        </button>\n-        <a href=\"#\">\n-          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n-          <span class=\"header__logo__text\">FDA MyStudies </span>\n-        </a>\n-      </div>\n-      <div\n-        *ngIf=\"showSearchBar\"\n-        class=\"navbar-nav inner-addon right-addon search-icon\"\n-      >\n-        <div class=\"position__relative\">\n-          <input\n-            type=\"text\"\n-            [attr.placeholder]=\"searchPlaceholder\"\n-            autocomplete=\"off\"\n-            [(ngModel)]=\"filterQuery\"\n-            class=\"form-control search-box search__\"\n-          />\n-          <i\n-            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n-            aria-hidden=\"true\"\n-          ></i>\n-        </div>\n-        <div>\n-          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n-        </div>\n-      </div>\n-    </div>\n-    <div\n-      id=\"mySidenav\"\n-      class=\"sidenav\"\n-      [ngClass]=\"navIsOpen ? 'open__nav' : 'close__nav '\"\n-    >\n-      <div\n-        [ngClass]=\"navIsOpen ? 'open__nav display__block ' : 'display__none '\"\n-      >\n-        <div class=\"mob__bo\">\n-          <a\n-            href=\"javascript:void(0)\"\n-            class=\"closebtn\"\n-            id=\"closeMobile\"\n-            (click)=\"toggleNav()\"\n-            >\u00d7</a\n-          >\n-          <a href=\"#\">\n-            <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n-            <span class=\"header__logo__text\">FDA MyStudies </span>\n-          </a>\n-        </div>\n-\n-        <ul class=\"user__profile__ul\">\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/participants/dashboard\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Dashboard</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/locations\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Locations</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/users\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Users</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/accounts\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >My Account</a\n-            >\n-          </li>\n-        </ul>\n-      </div>\n-    </div>\n-    <div\n-      class=\"bg__overlay\"\n-      [ngClass]=\"navIsOpen ? 'display__block' : 'display__none'\"\n-    ></div>\n-  </div>\n+  <mobile-menu\n+    searchPlaceholder=\"{{ searchPlaceholder }}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad04b331c8f308045da0b9da99baae542365eb2"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTk5NQ==", "bodyText": "Thanks,Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231995", "createdAt": "2020-06-23T13:40:34Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -56,109 +56,12 @@\n     </div>\n   </div>\n \n-  <div id=\"mobile-menu\">\n-    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div>\n-        <button\n-          class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"toggleNav()\"\n-        >\n-          <img src=\"../../../assets/svgs/menu-icon.svg\" />\n-        </button>\n-        <a href=\"#\">\n-          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n-          <span class=\"header__logo__text\">FDA MyStudies </span>\n-        </a>\n-      </div>\n-      <div\n-        *ngIf=\"showSearchBar\"\n-        class=\"navbar-nav inner-addon right-addon search-icon\"\n-      >\n-        <div class=\"position__relative\">\n-          <input\n-            type=\"text\"\n-            [attr.placeholder]=\"searchPlaceholder\"\n-            autocomplete=\"off\"\n-            [(ngModel)]=\"filterQuery\"\n-            class=\"form-control search-box search__\"\n-          />\n-          <i\n-            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n-            aria-hidden=\"true\"\n-          ></i>\n-        </div>\n-        <div>\n-          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n-        </div>\n-      </div>\n-    </div>\n-    <div\n-      id=\"mySidenav\"\n-      class=\"sidenav\"\n-      [ngClass]=\"navIsOpen ? 'open__nav' : 'close__nav '\"\n-    >\n-      <div\n-        [ngClass]=\"navIsOpen ? 'open__nav display__block ' : 'display__none '\"\n-      >\n-        <div class=\"mob__bo\">\n-          <a\n-            href=\"javascript:void(0)\"\n-            class=\"closebtn\"\n-            id=\"closeMobile\"\n-            (click)=\"toggleNav()\"\n-            >\u00d7</a\n-          >\n-          <a href=\"#\">\n-            <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n-            <span class=\"header__logo__text\">FDA MyStudies </span>\n-          </a>\n-        </div>\n-\n-        <ul class=\"user__profile__ul\">\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/participants/dashboard\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Dashboard</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/locations\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Locations</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/users\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Users</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/accounts\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >My Account</a\n-            >\n-          </li>\n-        </ul>\n-      </div>\n-    </div>\n-    <div\n-      class=\"bg__overlay\"\n-      [ngClass]=\"navIsOpen ? 'display__block' : 'display__none'\"\n-    ></div>\n-  </div>\n+  <mobile-menu\n+    searchPlaceholder=\"{{ searchPlaceholder }}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1Njk4NQ=="}, "originalCommit": {"oid": "3ad04b331c8f308045da0b9da99baae542365eb2"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTI3MzA3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDoyMzoyMVrOGnPq5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo0MDo1MFrOGnpyBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDM5MQ==", "bodyText": "This will always be true. I think you mean toEqual(expectedList)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443804391", "createdAt": "2020-06-22T20:23:21Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -68,14 +69,36 @@ describe('LocationsListComponent', () => {\n     );\n   });\n \n-  it('should get the user List via refresh function', fakeAsync(() => {\n+  it('should get the Location List via refresh function', fakeAsync(() => {\n+    const expectedList = [\n+      {\n+        id: 2,\n+        customId: 'customid3',\n+        name: 'name -1-updated0',\n+        description: 'location-descp-updatedj',\n+        status: '1',\n+        studiesCount: 0,\n+        studies: [],\n+      },\n+      {\n+        id: 3,\n+        customId: 'customid32',\n+        name: 'name -1 - updated000',\n+        description: 'location-descp-updated',\n+        status: '0',\n+        studiesCount: 0,\n+        studies: [],\n+      },\n+    ];\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocations'],\n+    );\n+    locationServiceSpy.getLocations.and.returnValue(of(expectedList));\n     spyOn(component, 'getLocation');\n     component.getLocation();\n     tick();\n     fixture.detectChanges();\n-    expect(component.locations.length).toBe(\n-      0,\n-      'Location list after function call',\n-    );\n+    expect(component.locations).toEqual(component.locations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92ad70cfd960c762626e07d9c65949e8f31aada3"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMjE5Ng==", "bodyText": "sorry we missed it ,updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444232196", "createdAt": "2020-06-23T13:40:50Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -68,14 +69,36 @@ describe('LocationsListComponent', () => {\n     );\n   });\n \n-  it('should get the user List via refresh function', fakeAsync(() => {\n+  it('should get the Location List via refresh function', fakeAsync(() => {\n+    const expectedList = [\n+      {\n+        id: 2,\n+        customId: 'customid3',\n+        name: 'name -1-updated0',\n+        description: 'location-descp-updatedj',\n+        status: '1',\n+        studiesCount: 0,\n+        studies: [],\n+      },\n+      {\n+        id: 3,\n+        customId: 'customid32',\n+        name: 'name -1 - updated000',\n+        description: 'location-descp-updated',\n+        status: '0',\n+        studiesCount: 0,\n+        studies: [],\n+      },\n+    ];\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocations'],\n+    );\n+    locationServiceSpy.getLocations.and.returnValue(of(expectedList));\n     spyOn(component, 'getLocation');\n     component.getLocation();\n     tick();\n     fixture.detectChanges();\n-    expect(component.locations.length).toBe(\n-      0,\n-      'Location list after function call',\n-    );\n+    expect(component.locations).toEqual(component.locations);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDM5MQ=="}, "originalCommit": {"oid": "92ad70cfd960c762626e07d9c65949e8f31aada3"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTMyNzM4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/entity/error.model.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDo0MDoxMFrOGnQNPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo0MDo1NlrOGnpyUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMzE4Mw==", "bodyText": "You still aren't constructing this class. There needs to be a new ApiResponse somewhere in your code.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443813183", "createdAt": "2020-06-22T20:40:10Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/entity/error.model.ts", "diffHunk": "@@ -0,0 +1,8 @@\n+export class ApiResponse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92ad70cfd960c762626e07d9c65949e8f31aada3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMjI3NQ==", "bodyText": "sorry we reverted it back to interface", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444232275", "createdAt": "2020-06-23T13:40:56Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/entity/error.model.ts", "diffHunk": "@@ -0,0 +1,8 @@\n+export class ApiResponse {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMzE4Mw=="}, "originalCommit": {"oid": "92ad70cfd960c762626e07d9c65949e8f31aada3"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2199, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}