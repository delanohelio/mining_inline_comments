{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzUzMDM5", "number": 626, "title": "Participant manager post /locations endpoint", "bodyText": "Participant manager post /locations endpoint", "createdAt": "2020-07-13T16:10:38Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626", "merged": true, "mergeCommit": {"oid": "4ecd5463b68b0586a65d29644d36a879b69615ae"}, "closed": true, "closedAt": "2020-08-10T14:33:41Z", "author": {"login": "madhurya-btc"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0jvCeAH2gAyNDQ4MzUzMDM5OjQ1NmJkMTgyZjRjMzk5MzAwN2Q1NmY1ZGE3MmJjMjY5YzJmOTFjMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9jKYqgFqTQ2NDI4NDM5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/456bd182f4c3993007d56f5da72bc269c2f91c1f", "committedDate": "2020-07-13T16:08:12Z", "message": "code refactor of  Add new location endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTUzNjYw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#pullrequestreview-452553660", "createdAt": "2020-07-21T15:06:12Z", "commit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTowNjoxM1rOG08ffQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowNDo1MFrOG0_KTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDIzNw==", "bodyText": "What's the advantage of doing this in a filter? If we do this in the controllers we benefit from the error handling there.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458170237", "createdAt": "2020-07-21T15:06:13Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/filter/ActiveUserFilter.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.filter;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.CommonConstants.USER_ID_HEADER;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.annotation.PostConstruct;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.server.PathContainer;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.util.pattern.PathPattern;\n+import org.springframework.web.util.pattern.PathPatternParser;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Component\n+@Order(3)\n+public class ActiveUserFilter implements Filter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzMzMw==", "bodyText": "I would prefer we use something built into the test framework to do this. It looks like https://junit.org/junit5/docs/current/user-guide/#writing-tests-display-name-generator-default should do what you want.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458203333", "createdAt": "2020-07-21T15:50:02Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-tests/src/main/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -130,4 +139,14 @@ protected MvcResult performPost(\n         .andExpect(content().string(containsString(expectedTextInResponseBody)))\n         .andReturn();\n   }\n+\n+  @BeforeEach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjM1NQ==", "bodyText": "Services should return business object, i.e. LocationEntity", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458206355", "createdAt": "2020-07-21T15:54:09Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.Optional;\n+\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.ManageLocation;\n+import com.google.cloud.healthcare.fdamystudies.mapper.LocationMapper;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Service\n+public class LocationServiceImpl implements LocationService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(LocationServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse addNewLocation(LocationRequest locationRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjQyNw==", "bodyText": "Move this to the controller", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458206427", "createdAt": "2020-07-21T15:54:15Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.Optional;\n+\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.ManageLocation;\n+import com.google.cloud.healthcare.fdamystudies.mapper.LocationMapper;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Service\n+public class LocationServiceImpl implements LocationService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(LocationServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse addNewLocation(LocationRequest locationRequest) {\n+    logger.entry(\"begin addNewLocation()\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminUser =\n+        userRegAdminRepository.findById(locationRequest.getUserId());\n+\n+    UserRegAdminEntity adminUser = optUserRegAdminUser.get();\n+    ManageLocation manageLocation = ManageLocation.valueOf(adminUser.getManageLocations());\n+    if (ManageLocation.DENY.equals(manageLocation)) {\n+      logger.exit(\n+          String.format(\n+              \"Add location failed with error code=%s\", ErrorCode.LOCATION_ACCESS_DENIED));\n+      return new LocationResponse(ErrorCode.LOCATION_ACCESS_DENIED);\n+    }\n+    LocationEntity locationEntity = LocationMapper.fromLocationRequest(locationRequest);\n+    locationEntity.setCreatedBy(adminUser.getId());\n+    locationEntity = locationRepository.saveAndFlush(locationEntity);\n+    logger.exit(String.format(\"locationId=%s\", locationEntity.getId()));\n+\n+    return LocationMapper.toLocationResponse(locationEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjY0OQ==", "bodyText": "Move this to the controller", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458206649", "createdAt": "2020-07-21T15:54:34Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.Optional;\n+\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.ManageLocation;\n+import com.google.cloud.healthcare.fdamystudies.mapper.LocationMapper;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Service\n+public class LocationServiceImpl implements LocationService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(LocationServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse addNewLocation(LocationRequest locationRequest) {\n+    logger.entry(\"begin addNewLocation()\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminUser =\n+        userRegAdminRepository.findById(locationRequest.getUserId());\n+\n+    UserRegAdminEntity adminUser = optUserRegAdminUser.get();\n+    ManageLocation manageLocation = ManageLocation.valueOf(adminUser.getManageLocations());\n+    if (ManageLocation.DENY.equals(manageLocation)) {\n+      logger.exit(\n+          String.format(\n+              \"Add location failed with error code=%s\", ErrorCode.LOCATION_ACCESS_DENIED));\n+      return new LocationResponse(ErrorCode.LOCATION_ACCESS_DENIED);\n+    }\n+    LocationEntity locationEntity = LocationMapper.fromLocationRequest(locationRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxMzk2NA==", "bodyText": "If this always has one value it's not really adding any information. You can just set this status in the HTTP controller.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458213964", "createdAt": "2020-07-21T16:04:50Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/LocationMapper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.CommonConstants.ACTIVE_STATUS;\n+import static com.google.cloud.healthcare.fdamystudies.common.CommonConstants.NO;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.MessageCode;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+\n+public final class LocationMapper {\n+\n+  private LocationMapper() {}\n+\n+  public static LocationResponse toLocationResponse(LocationEntity location) {\n+    LocationResponse response = new LocationResponse(MessageCode.ADD_LOCATION_SUCCESS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bf1f46ef4988887524e6e1aab2a7952bbcaf7c3", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7bf1f46ef4988887524e6e1aab2a7952bbcaf7c3", "committedDate": "2020-07-22T15:17:21Z", "message": "Merge branch 'participant-manager-service-sites-integration-test-cases' into participant-manager-location-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e52511b819b3507d853b9c48ce2ed46e7c660a48", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e52511b819b3507d853b9c48ce2ed46e7c660a48", "committedDate": "2020-07-22T17:22:42Z", "message": "Resolved conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0147edfd52f3a6d260365152ebd1cd87dc082f1e", "author": {"user": {"login": "nikklassen", "name": "Nik Klassen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/0147edfd52f3a6d260365152ebd1cd87dc082f1e", "committedDate": "2020-07-24T15:52:17Z", "message": "Remove Request/Response objects from service layer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffccb47625dfb354874717dcb4f90d323ff62c3f", "author": {"user": {"login": "nikklassen", "name": "Nik Klassen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ffccb47625dfb354874717dcb4f90d323ff62c3f", "committedDate": "2020-07-24T15:57:37Z", "message": "Fix compilation error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b2a61c9e3f3fac0c25351f687d1b13295a7d16", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d0b2a61c9e3f3fac0c25351f687d1b13295a7d16", "committedDate": "2020-07-30T13:14:52Z", "message": "Active user filter moved to participant-manager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzM4MTYx", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#pullrequestreview-458738161", "createdAt": "2020-07-30T20:37:33Z", "commit": {"oid": "d0b2a61c9e3f3fac0c25351f687d1b13295a7d16"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8142f413672b30ac4ad627d0b7ca20f8b3e4d254", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8142f413672b30ac4ad627d0b7ca20f8b3e4d254", "committedDate": "2020-08-10T08:37:49Z", "message": "Merge branch 'develop' into participant-manager-location-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a722bd02ea27a44e84d175796fa0dcb6d5b2f10", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9a722bd02ea27a44e84d175796fa0dcb6d5b2f10", "committedDate": "2020-08-10T08:46:19Z", "message": "Merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0f71e2d92ba91e5c751931c0c21fdada7a280f", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bb0f71e2d92ba91e5c751931c0c21fdada7a280f", "committedDate": "2020-08-10T09:06:25Z", "message": "Merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Mjg0Mzk2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#pullrequestreview-464284396", "createdAt": "2020-08-10T14:33:29Z", "commit": {"oid": "bb0f71e2d92ba91e5c751931c0c21fdada7a280f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 832, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}