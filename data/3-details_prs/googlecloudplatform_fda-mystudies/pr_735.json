{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjAwMDUx", "number": 735, "title": "Participant Manager Service setup account endpoint implementation with integration test cases", "bodyText": "Participant manager Service setup account endpoint implementation with integration test cases", "createdAt": "2020-08-10T16:17:45Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735", "merged": true, "mergeCommit": {"oid": "ff06d7e7a18bcc1f585af7c87ab207286ca905a9"}, "closed": true, "closedAt": "2020-08-13T04:47:44Z", "author": {"login": "Kantharajut-btc"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9knlggH2gAyNDY1NjAwMDUxOmIwMGQyY2JiMjhiZDk4YTdhODMwZGI5Y2Y5OGEwM2U4OTNjYzFjNWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-Yhk7gFqTQ2NjQzOTc4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b00d2cbb28bd98a7a830db9cf98a03e893cc1c5b", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b00d2cbb28bd98a7a830db9cf98a03e893cc1c5b", "committedDate": "2020-08-10T16:15:17Z", "message": "POST setup account endpoint integration tests\n\nPOST setup account endpoint integration tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjQ4MzYw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#pullrequestreview-464648360", "createdAt": "2020-08-10T23:14:53Z", "commit": {"oid": "b00d2cbb28bd98a7a830db9cf98a03e893cc1c5b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoxNDo1M1rOG-i3kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoxNzoyMFrOG-i6lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjE3Nw==", "bodyText": "These are not used and already stored in TestDataHelper/TestConstants so please remove", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#discussion_r468236177", "createdAt": "2020-08-10T23:14:53Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,174 @@\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+import com.google.cloud.healthcare.fdamystudies.beans.SetUpAccountRequest;\n+import com.google.cloud.healthcare.fdamystudies.common.ApiEndpoint;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.MessageCode;\n+import com.google.cloud.healthcare.fdamystudies.common.TestConstants;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccountStatus;\n+import com.google.cloud.healthcare.fdamystudies.helper.TestDataHelper;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.UserProfileService;\n+import java.util.Optional;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.asJsonString;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  @Autowired private UserProfileController controller;\n+\n+  @Autowired private UserProfileService userProfileService;\n+\n+  @Autowired private TestDataHelper testDataHelper;\n+\n+  private UserRegAdminEntity userRegAdminEntity;\n+\n+  @Autowired UserRegAdminRepository userRegAdminRepository;\n+\n+  public static final String EMAIL_VALUE = \"mockit_email@grr.la\";\n+\n+  protected static final String VALID_BEARER_TOKEN = \"Bearer 7fd50c2c-d618-493c-89d6-f1887e3e4bb8\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b00d2cbb28bd98a7a830db9cf98a03e893cc1c5b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjk0OQ==", "bodyText": "To make it clear set the email for the request here to a random email address", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#discussion_r468236949", "createdAt": "2020-08-10T23:17:20Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,174 @@\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+import com.google.cloud.healthcare.fdamystudies.beans.SetUpAccountRequest;\n+import com.google.cloud.healthcare.fdamystudies.common.ApiEndpoint;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.MessageCode;\n+import com.google.cloud.healthcare.fdamystudies.common.TestConstants;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccountStatus;\n+import com.google.cloud.healthcare.fdamystudies.helper.TestDataHelper;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.UserProfileService;\n+import java.util.Optional;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.asJsonString;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+public class UserProfileControllerTest extends BaseMockIT {\n+\n+  @Autowired private UserProfileController controller;\n+\n+  @Autowired private UserProfileService userProfileService;\n+\n+  @Autowired private TestDataHelper testDataHelper;\n+\n+  private UserRegAdminEntity userRegAdminEntity;\n+\n+  @Autowired UserRegAdminRepository userRegAdminRepository;\n+\n+  public static final String EMAIL_VALUE = \"mockit_email@grr.la\";\n+\n+  protected static final String VALID_BEARER_TOKEN = \"Bearer 7fd50c2c-d618-493c-89d6-f1887e3e4bb8\";\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(userProfileService);\n+  }\n+\n+  @BeforeEach\n+  public void setUp() {\n+    userRegAdminEntity = testDataHelper.createUserRegAdmin();\n+    WireMock.resetAllRequests();\n+  }\n+\n+  @Test\n+  public void shouldSetUpNewAccount() throws Exception {\n+    // Step 1: Setting up the request for set up account\n+    SetUpAccountRequest request = setUpAccountRequest();\n+    userRegAdminEntity.setEmail(TestConstants.USER_EMAIL_VALUE);\n+    testDataHelper.getUserRegAdminRepository().saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call the API and expect SET_UP_ACCOUNT_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+\n+    mockMvc\n+        .perform(\n+            post(ApiEndpoint.SET_UP_ACCOUNT.getPath())\n+                .content(asJsonString(request))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isCreated())\n+        .andExpect(jsonPath(\"$.message\").value(MessageCode.SET_UP_ACCOUNT_SUCCESS.getMessage()))\n+        .andExpect(jsonPath(\"$.userId\", notNullValue()))\n+        .andReturn();\n+\n+    // Step 3: verify saved values\n+    Optional<UserRegAdminEntity> optUser = userRegAdminRepository.findByEmail(request.getEmail());\n+    UserRegAdminEntity user = optUser.get();\n+    assertEquals(request.getFirstName(), user.getFirstName());\n+    assertEquals(request.getLastName(), user.getLastName());\n+\n+    verify(1, postRequestedFor(urlEqualTo(\"/oauth-scim-service/users\")));\n+  }\n+\n+  @Test\n+  public void shouldReturnUserNotInvitedError() throws Exception {\n+    // Step 1: Setting up the request\n+    SetUpAccountRequest request = setUpAccountRequest();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b00d2cbb28bd98a7a830db9cf98a03e893cc1c5b"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a27950c4bbad3032a581e88bc114dfe3c719f564", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a27950c4bbad3032a581e88bc114dfe3c719f564", "committedDate": "2020-08-11T06:19:22Z", "message": "Fixed PR comments\n\nFixed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32965bd8079da009758bf5c49162c538a78a2f86", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/32965bd8079da009758bf5c49162c538a78a2f86", "committedDate": "2020-08-11T07:36:56Z", "message": "Added fields in TestConstants\n\nAdded fields in TestConstants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzg5MjMw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#pullrequestreview-465389230", "createdAt": "2020-08-11T20:06:01Z", "commit": {"oid": "32965bd8079da009758bf5c49162c538a78a2f86"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDowNjowMVrOG_HV4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDowNjowMVrOG_HV4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzMzc2Mw==", "bodyText": "General comment: What is the point for the json files added in this PR? I do not see where they're being used.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#discussion_r468833763", "createdAt": "2020-08-11T20:06:01Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-tests/src/main/resources/__files/oauth-scim-service/auth-server-setup-account-bad-request.json", "diffHunk": "@@ -0,0 +1,20 @@\n+{\n+\t\"violations\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32965bd8079da009758bf5c49162c538a78a2f86"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38cbf473fcba40354a85862b8d54c8b27d44b3e1", "author": {"user": {"login": "Kantharajut-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/38cbf473fcba40354a85862b8d54c8b27d44b3e1", "committedDate": "2020-08-12T04:03:34Z", "message": "Merge branch 'participant-manager-setup-account' into participant-manager-setup-account-test-cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDY4OTA4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#pullrequestreview-466068908", "createdAt": "2020-08-12T16:12:40Z", "commit": {"oid": "38cbf473fcba40354a85862b8d54c8b27d44b3e1"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "765ee3585c8433d28612565facd2d394c5fce7d3", "author": {"user": {"login": "saminguyen", "name": "Sami Nguyen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/765ee3585c8433d28612565facd2d394c5fce7d3", "committedDate": "2020-08-13T04:31:44Z", "message": "Merge branch 'develop' into participant-manager-setup-account-test-cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDM5Nzgy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/735#pullrequestreview-466439782", "createdAt": "2020-08-13T04:43:47Z", "commit": {"oid": "765ee3585c8433d28612565facd2d394c5fce7d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 633, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}