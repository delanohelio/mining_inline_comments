{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNzA4NTk3", "number": 575, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxOToxM1rOELtMRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMTozOVrOELtj7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzEwMjE1OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/.project", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxOToxM1rOGtZTMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjozMzozOFrOGuZ-_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MzYxOA==", "bodyText": "indented with tabs, please use 2 spaces.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450253618", "createdAt": "2020-07-06T14:19:13Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/.project", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>oauth-scim-module</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxMzQwNQ==", "bodyText": "Changed the IDE setting to use 2 spaces for indentation and formatted the file again. Please review.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451313405", "createdAt": "2020-07-08T06:33:38Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/.project", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>oauth-scim-module</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MzYxOA=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzExMjY4OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/mvnw.cmd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyMToxOVrOGtZZTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjozNjoyNlrOGuaDHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NTE4MA==", "bodyText": "2-space indentation", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450255180", "createdAt": "2020-07-06T14:21:19Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/mvnw.cmd", "diffHunk": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxNDQ2MA==", "bodyText": "Manually removed extra spaces on Indentation", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451314460", "createdAt": "2020-07-08T06:36:26Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/mvnw.cmd", "diffHunk": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NTE4MA=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzExODE3OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyMjoyM1rOGtZcUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo1MDozOFrOGupASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NTk1NQ==", "bodyText": "the main readme file for this service should contain more than just the test coverage report.\nAt a high level a brief description of the service, how it integrated with other services and how it is used, as well as brief instructions on building and running the service would be needed.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450255955", "createdAt": "2020-07-06T14:22:23Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/README.md", "diffHunk": "@@ -0,0 +1,5 @@\n+Test Coverage Report", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxNTg5Mg==", "bodyText": "I agree with you. I added the command to this file just in case if you wanted to see the coverage. I'll add all the details to README.md and the Docker file once the login/consent flow implementation is completed.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451315892", "createdAt": "2020-07-08T06:40:21Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/README.md", "diffHunk": "@@ -0,0 +1,5 @@\n+Test Coverage Report", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NTk1NQ=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1OTQ5Ng==", "bodyText": "sounds good. And what you have here is definitely useful.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451559496", "createdAt": "2020-07-08T13:50:38Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/README.md", "diffHunk": "@@ -0,0 +1,5 @@\n+Test Coverage Report", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NTk1NQ=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzEyNzgwOnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyNDoyM1rOGtZh5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjo0MTo0NVrOGuaK5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NzM4Mg==", "bodyText": "2-space indentation", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450257382", "createdAt": "2020-07-06T14:24:23Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/pom.xml", "diffHunk": "@@ -0,0 +1,186 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxNjQ1Mg==", "bodyText": "Changed the IDE setting to use 2 spaces for Indentation for XML files. This is formatted with 2 space indentation.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451316452", "createdAt": "2020-07-08T06:41:45Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/pom.xml", "diffHunk": "@@ -0,0 +1,186 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1NzM4Mg=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzEzODMwOnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyNjozMVrOGtZoOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjo0Mjo0OFrOGuaMYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1OTAwMw==", "bodyText": "indentation in the file is inconsistent. Please fix.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450259003", "createdAt": "2020-07-06T14:26:31Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/pom.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.google.cloud.healthcare.fdamystudies</groupId>\n+  <artifactId>oauth-scim-module</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+\n+  <name>oauth-scim-module</name>\n+\n+  <properties>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+  </properties>\n+\n+\t<modules>\n+        <module>oauth-scim-service</module>\n+\t\t<module>../common-modules</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxNjgzMw==", "bodyText": "Fixed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451316833", "createdAt": "2020-07-08T06:42:48Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/pom.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.google.cloud.healthcare.fdamystudies</groupId>\n+  <artifactId>oauth-scim-module</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+\n+  <name>oauth-scim-module</name>\n+\n+  <properties>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+  </properties>\n+\n+\t<modules>\n+        <module>oauth-scim-service</module>\n+\t\t<module>../common-modules</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1OTAwMw=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzE0ODQ1OnYy", "diffSide": "RIGHT", "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/ApplicationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyODo0MFrOGtZuSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyODo0MFrOGtZuSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2MDU1NQ==", "bodyText": "please rename to auditController.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450260555", "createdAt": "2020-07-06T14:28:40Z", "author": {"login": "zohrehj"}, "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/ApplicationTest.java", "diffHunk": "@@ -9,18 +9,36 @@\n package com.google.cloud.healthcare.fdamystudies.auditlog;\n \n import static org.junit.Assert.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n \n+import com.google.cloud.healthcare.fdamystudies.auditlog.common.ApiEndpoint;\n import com.google.cloud.healthcare.fdamystudies.auditlog.controller.AuditLogEventController;\n import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.HealthController;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n \n class ApplicationTest extends BaseMockIT {\n \n-  @Autowired AuditLogEventController controller;\n+  @Autowired AuditLogEventController aleController;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzE1ODkxOnYy", "diffSide": "RIGHT", "path": "audit-log-module/audit-log-service/src/test/resources/expected_bad_request_response.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMDo1MVrOGtZ0Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMDo1MVrOGtZ0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2MjA5OQ==", "bodyText": "Why was this output reordered? Is your test dependant on the order of these violations?\nIf yes, please fix that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450262099", "createdAt": "2020-07-06T14:30:51Z", "author": {"login": "zohrehj"}, "path": "audit-log-module/audit-log-service/src/test/resources/expected_bad_request_response.json", "diffHunk": "@@ -1,48 +1,48 @@\n {\n \t\"violations\": [\n \t\t{\n-\t\t\t\"path\": \"systemId\",\n-\t\t\t\"message\": \"size must be between 0 and 30\"\n+\t\t\t\"path\": \"description\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzE2MjY4OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/.gitignore", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMTozOVrOGtZ2gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo1MTozNlrOGupDJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2MjY1Nw==", "bodyText": "why is HELP.md included here?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r450262657", "createdAt": "2020-07-06T14:31:39Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/.gitignore", "diffHunk": "@@ -0,0 +1,31 @@\n+HELP.md", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2MDIyOA==", "bodyText": "I think you missed this question/", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/575#discussion_r451560228", "createdAt": "2020-07-08T13:51:36Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/.gitignore", "diffHunk": "@@ -0,0 +1,31 @@\n+HELP.md", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2MjY1Nw=="}, "originalCommit": {"oid": "f8ecae0496063432bf17de25d349eb402bb5d4d9"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2226, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}