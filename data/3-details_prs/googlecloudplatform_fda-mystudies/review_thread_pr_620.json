{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjA0MjMw", "number": 620, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMjo0OVrOEO4tHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoxMDoxM1rOEO41Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ0NTc0OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMjo0OVrOGyS3bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNTowMjowM1rOGzFbTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA4Ng==", "bodyText": "Do we want to name timestamp fields like this \"created/modified\" - at/on or date? I think we should be consistent. I raised a similar question on PR #580 so maybe you and Dhanya can discuss this", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r455391086", "createdAt": "2020-07-15T22:02:49Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppEntity.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"app_info\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class AppEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 4985607753888575491L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"custom_app_id\", length = 100)\n+  private String appId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"app_name\", length = 100)\n+  private String appName;\n+\n+  @Column(name = \"app_description\", length = 100)\n+  private String appDescription;\n+\n+  @ToString.Exclude\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"org_info_id\")\n+  private OrgInfoEntity orgInfo;\n+\n+  @ToString.Exclude\n+  @Column(name = \"ios_bundle_id\", length = 100)\n+  private String iosBundleId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"android_bundle_id\", length = 100)\n+  private String androidBundleId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"ios_certificate\", length = 100)\n+  private String iosCertificate;\n+\n+  @ToString.Exclude\n+  @Column(name = \"ios_certificate_password\", length = 100)\n+  private String iosCertificatePassword;\n+\n+  @ToString.Exclude\n+  @Column(name = \"android_server_key\", length = 100)\n+  private String androidServerKey;\n+\n+  @ToString.Exclude\n+  @Column(name = \"from_email_id\", length = 100)\n+  private String formEmailId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"from_email_password\", length = 100)\n+  private String fromEmailPassword;\n+\n+  @ToString.Exclude\n+  @Column(name = \"reg_email_sub\", length = 100)\n+  private String regEmailSub;\n+\n+  @ToString.Exclude\n+  @Column(name = \"reg_email_body\", length = 100)\n+  private String regEmailBody;\n+\n+  @ToString.Exclude\n+  @Column(name = \"forgot_email_sub\", length = 100)\n+  private String forgotEmailSub;\n+\n+  @Column(name = \"forgot_email_body\", length = 100)\n+  private String forgotEmailBody;\n+\n+  @Column(name = \"method_handler\", length = 100)\n+  private Integer methodHandler;\n+\n+  @Column(name = \"created_by\", nullable = false, length = 64)\n+  private String createdBy;\n+\n+  @Column(name = \"modified_by\", nullable = false, length = 64)\n+  private String modifiedBy;\n+\n+  @Column(\n+      name = \"modified_date\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp modified;\n+\n+  @Column(\n+      name = \"created_on\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxOTQ3MQ==", "bodyText": "We named the fields as created_timestamp, modified_timestamp but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r456219471", "createdAt": "2020-07-17T05:02:03Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppEntity.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"app_info\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class AppEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 4985607753888575491L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"custom_app_id\", length = 100)\n+  private String appId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"app_name\", length = 100)\n+  private String appName;\n+\n+  @Column(name = \"app_description\", length = 100)\n+  private String appDescription;\n+\n+  @ToString.Exclude\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"org_info_id\")\n+  private OrgInfoEntity orgInfo;\n+\n+  @ToString.Exclude\n+  @Column(name = \"ios_bundle_id\", length = 100)\n+  private String iosBundleId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"android_bundle_id\", length = 100)\n+  private String androidBundleId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"ios_certificate\", length = 100)\n+  private String iosCertificate;\n+\n+  @ToString.Exclude\n+  @Column(name = \"ios_certificate_password\", length = 100)\n+  private String iosCertificatePassword;\n+\n+  @ToString.Exclude\n+  @Column(name = \"android_server_key\", length = 100)\n+  private String androidServerKey;\n+\n+  @ToString.Exclude\n+  @Column(name = \"from_email_id\", length = 100)\n+  private String formEmailId;\n+\n+  @ToString.Exclude\n+  @Column(name = \"from_email_password\", length = 100)\n+  private String fromEmailPassword;\n+\n+  @ToString.Exclude\n+  @Column(name = \"reg_email_sub\", length = 100)\n+  private String regEmailSub;\n+\n+  @ToString.Exclude\n+  @Column(name = \"reg_email_body\", length = 100)\n+  private String regEmailBody;\n+\n+  @ToString.Exclude\n+  @Column(name = \"forgot_email_sub\", length = 100)\n+  private String forgotEmailSub;\n+\n+  @Column(name = \"forgot_email_body\", length = 100)\n+  private String forgotEmailBody;\n+\n+  @Column(name = \"method_handler\", length = 100)\n+  private Integer methodHandler;\n+\n+  @Column(name = \"created_by\", nullable = false, length = 64)\n+  private String createdBy;\n+\n+  @Column(name = \"modified_by\", nullable = false, length = 64)\n+  private String modifiedBy;\n+\n+  @Column(\n+      name = \"modified_date\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp modified;\n+\n+  @Column(\n+      name = \"created_on\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA4Ng=="}, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ1Nzk1OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowNzoxNlrOGyS-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNToyNjoxMFrOGz47vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5Mjk1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Column(name = \"edit\", length = 100)\n          \n          \n            \n              private Integer edit;\n          \n          \n            \n              @Column(name = \"canEdit\", length = 100)\n          \n          \n            \n              private Integer canEdit;\n          \n      \n    \n    \n  \n\nOr you can also name it edit_permission. What are the possible values for this Integer field?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r455392952", "createdAt": "2020-07-15T22:07:16Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"app_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class AppPermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8610289975376774137L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\")\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"app_info_id\")\n+  private AppEntity appInfo;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer edit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA2MzM1Ng==", "bodyText": "Changed column name to edit_permission and its length to 1\nPossible values: 0-read, 1-read and edit, null-no permission", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r457063356", "createdAt": "2020-07-20T05:26:10Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"app_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class AppPermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 8610289975376774137L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\")\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"app_info_id\")\n+  private AppEntity appInfo;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer edit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5Mjk1Mg=="}, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ2MTg5OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/OrgInfoEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowODozM1rOGyTA7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNTowMzozM1rOGzFcxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MzUxOQ==", "bodyText": "similar comment as above on timestamp field naming", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r455393519", "createdAt": "2020-07-15T22:08:33Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/OrgInfoEntity.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"org_info\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class OrgInfoEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @Column(name = \"name\", length = 100)\n+  private String name;\n+\n+  @Column(name = \"org_id\", length = 100)\n+  private String orgId;\n+\n+  @Column(\n+      name = \"created_on\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxOTg0NA==", "bodyText": "We named the fields as created_timestamp, modified_timestamp but Zohreh suggested us to rename the fields to created, modified for timestamp. We'll be using created and modified for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r456219844", "createdAt": "2020-07-17T05:03:33Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/OrgInfoEntity.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"org_info\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class OrgInfoEntity implements Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @Column(name = \"name\", length = 100)\n+  private String name;\n+\n+  @Column(name = \"org_id\", length = 100)\n+  private String orgId;\n+\n+  @Column(\n+      name = \"created_on\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MzUxOQ=="}, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ2NjU5OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/StudyPermissionEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoxMDoxM1rOGyTDhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTozMDo1OVrOGz5D_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NDE4Mg==", "bodyText": "similar suggestion on naming (can_edit or edit_permission)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r455394182", "createdAt": "2020-07-15T22:10:13Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/StudyPermissionEntity.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@ToString\n+@Entity\n+@Table(name = \"study_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class StudyPermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = -9223143734827095684L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"app_info_id\")\n+  private AppEntity appInfo;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"study_id\")\n+  private StudyEntity study;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\")\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer edit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA2NTQ3MQ==", "bodyText": "Changed column name to edit_permission and its length to 1\nPossible values: 0-read, 1-read and edit, null-no permission", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/620#discussion_r457065471", "createdAt": "2020-07-20T05:30:59Z", "author": {"login": "Kantharajut-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/StudyPermissionEntity.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Setter\n+@Getter\n+@ToString\n+@Entity\n+@Table(name = \"study_permissions\")\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+public class StudyPermissionEntity implements Serializable {\n+\n+  private static final long serialVersionUID = -9223143734827095684L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"app_info_id\")\n+  private AppEntity appInfo;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"study_id\")\n+  private StudyEntity study;\n+\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  @JoinColumn(name = \"ur_admin_user_id\")\n+  private UserRegAdminEntity urAdminUser;\n+\n+  @Column(name = \"edit\", length = 100)\n+  private Integer edit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NDE4Mg=="}, "originalCommit": {"oid": "aa626953887798fc6676b484e81de55fc36e6962"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2279, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}