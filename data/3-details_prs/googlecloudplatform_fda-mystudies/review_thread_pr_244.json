{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTI5MzQ5", "number": 244, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToxNjoyOFrOD2vWrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOToxMzo0NFrOD3V6Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzI1NTQ4OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToxNjoyOFrOGMoqIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo0MzoxOVrOGM-20g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwMjI0MQ==", "bodyText": "nit: multiple empty lines are not rendered.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415902241", "createdAt": "2020-04-27T15:16:28Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NTkzOA==", "bodyText": "Fixed via 5b595f8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416265938", "createdAt": "2020-04-28T01:43:19Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwMjI0MQ=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzI1ODE1OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToxNjo1N1rOGMorqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo0NjowMlrOGM-6Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwMjYzNA==", "bodyText": "same here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415902634", "createdAt": "2020-04-27T15:16:57Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2Njg1MA==", "bodyText": "Fixed with 5b595f8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416266850", "createdAt": "2020-04-28T01:46:02Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwMjYzNA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzMwODE4OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyNTo1OVrOGMpI5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOToxODozNVrOGNjN4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMDExOA==", "bodyText": "does it make sense to talk about manual deployment when we are releasing containers and Kuberneres deployment configs for people to use?\nand they should be able to use these containerized deployments on any cloud platform with minimal change.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415910118", "createdAt": "2020-04-27T15:25:59Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NjQxNQ==", "bodyText": "@ranjanirao20 I agree that we should phrase this in a way that recognizes the containerized approach. Adding Ranjani to suggest appropriate phrasing.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416066415", "createdAt": "2020-04-27T18:52:46Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMDExOA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg2MTY2NQ==", "bodyText": "Just a note that the releasing of containers is now automated. Containers will be auto-rebuilt, tagged and pushed when commits are made to corresponding directories.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416861665", "createdAt": "2020-04-28T19:18:35Z", "author": {"login": "xingao267"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMDExOA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzMxMzA4OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyNjo1MlrOGMpLpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDozMTowNFrOGNluSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMDgyMg==", "bodyText": "Just a note that this section will need to redone once we have the Hydra solution, prior to the publis release.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415910822", "createdAt": "2020-04-27T15:26:52Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwMjczMA==", "bodyText": "Ack", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416902730", "createdAt": "2020-04-28T20:31:04Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMDgyMg=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzM2ODA1OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozNjoxOFrOGMprwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODo1MzozOFrOGMytxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxOTA0MA==", "bodyText": "If we want to provide details, we should maybe also mention using Maven for build.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415919040", "createdAt": "2020-04-27T15:36:18Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server\n+\n+The Auth Server is the centralized authentication mechanism for the various client applications in\u00a0the MyStudies platform.\n+\n+The client applications are:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Manager (targeted for future release)\n+\n+The Auth Server provides the following functionality to support mobile app users:\n+\n+\n+\n+1.  User registration\n+1.  User credentials management\n+1.  User authentication\n+1.  Token management\n+1.  User logout\n+\n+The Auth Server provides the following functionality to support server to server authentication:\n+\n+1.  Client credentials management (client id and secret)\n+1.  Client credentials validation\n+\n+This application is built as a Spring Boot application. The backend datastore is a MySQL database.\n+\n+The web services can be deployed on servers that have Java, Tomcat and MySQL installed. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NzAxNA==", "bodyText": "Can you suggest the wording for that?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416067014", "createdAt": "2020-04-27T18:53:38Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server\n+\n+The Auth Server is the centralized authentication mechanism for the various client applications in\u00a0the MyStudies platform.\n+\n+The client applications are:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Manager (targeted for future release)\n+\n+The Auth Server provides the following functionality to support mobile app users:\n+\n+\n+\n+1.  User registration\n+1.  User credentials management\n+1.  User authentication\n+1.  Token management\n+1.  User logout\n+\n+The Auth Server provides the following functionality to support server to server authentication:\n+\n+1.  Client credentials management (client id and secret)\n+1.  Client credentials validation\n+\n+This application is built as a Spring Boot application. The backend datastore is a MySQL database.\n+\n+The web services can be deployed on servers that have Java, Tomcat and MySQL installed. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxOTA0MA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzM3ODI5OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozODoxNFrOGMpx3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo0ODo1N1rOGM--Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMDYwNA==", "bodyText": "Should we replace Mobile app user with Participant in all the items here?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415920604", "createdAt": "2020-04-27T15:38:14Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server\n+\n+The Auth Server is the centralized authentication mechanism for the various client applications in\u00a0the MyStudies platform.\n+\n+The client applications are:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Manager (targeted for future release)\n+\n+The Auth Server provides the following functionality to support mobile app users:\n+\n+\n+\n+1.  User registration\n+1.  User credentials management\n+1.  User authentication\n+1.  Token management\n+1.  User logout\n+\n+The Auth Server provides the following functionality to support server to server authentication:\n+\n+1.  Client credentials management (client id and secret)\n+1.  Client credentials validation\n+\n+This application is built as a Spring Boot application. The backend datastore is a MySQL database.\n+\n+The web services can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Response Datastore\n+\n+The Response Datastore provides the following functionality:\n+\n+\n+\n+1.  Stores participant responses to a study\n+1.  Stores participant activity state data associated with the study\n+\n+The Response Datastore platform component provides REST APIs for the functionality above.\n+\n+The Response Datastore behaves as a resource server that stores participant response data. The Response Datastore requires a valid access token and client token to provide access to the protected resource to the resource owner (the study participant). It does not store user data that may identify the participant.\n+\n+This application is built as a Spring Boot application. The backend database is Cloud Firestore for the response data and a MySQL database for the activity data.\n+\n+The implementation to store the response data on Cloud Firestore can be swapped out to store the response data in a different location or service. \n+\n+The Response Datastore can be deployed on servers that have Java, Tomcat and MySQL installed.\n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+1.  Cloud Firestore\n+\n+\n+### Participant Datastore\n+\n+The Participant Datastore provides the following functionality:\n+\n+\n+\n+1.  Manage mobile app user registration and profile (User Management)\n+1.  Manage mobile app user enrollment into studies (Enrollment Management)\n+1.  Manage mobile app user study consent status and documents (Consent Management)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMDk4Mg==", "bodyText": "Maybe explain that participant uses the mobile app to register for studies.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415920982", "createdAt": "2020-04-27T15:38:44Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server\n+\n+The Auth Server is the centralized authentication mechanism for the various client applications in\u00a0the MyStudies platform.\n+\n+The client applications are:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Manager (targeted for future release)\n+\n+The Auth Server provides the following functionality to support mobile app users:\n+\n+\n+\n+1.  User registration\n+1.  User credentials management\n+1.  User authentication\n+1.  Token management\n+1.  User logout\n+\n+The Auth Server provides the following functionality to support server to server authentication:\n+\n+1.  Client credentials management (client id and secret)\n+1.  Client credentials validation\n+\n+This application is built as a Spring Boot application. The backend datastore is a MySQL database.\n+\n+The web services can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Response Datastore\n+\n+The Response Datastore provides the following functionality:\n+\n+\n+\n+1.  Stores participant responses to a study\n+1.  Stores participant activity state data associated with the study\n+\n+The Response Datastore platform component provides REST APIs for the functionality above.\n+\n+The Response Datastore behaves as a resource server that stores participant response data. The Response Datastore requires a valid access token and client token to provide access to the protected resource to the resource owner (the study participant). It does not store user data that may identify the participant.\n+\n+This application is built as a Spring Boot application. The backend database is Cloud Firestore for the response data and a MySQL database for the activity data.\n+\n+The implementation to store the response data on Cloud Firestore can be swapped out to store the response data in a different location or service. \n+\n+The Response Datastore can be deployed on servers that have Java, Tomcat and MySQL installed.\n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+1.  Cloud Firestore\n+\n+\n+### Participant Datastore\n+\n+The Participant Datastore provides the following functionality:\n+\n+\n+\n+1.  Manage mobile app user registration and profile (User Management)\n+1.  Manage mobile app user enrollment into studies (Enrollment Management)\n+1.  Manage mobile app user study consent status and documents (Consent Management)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMDYwNA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NzgxMQ==", "bodyText": "Updated how we refer to users / participants throughout the doc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416267811", "createdAt": "2020-04-28T01:48:57Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+\n+\n+## Architecture Diagram\n+\n+\n+![alt_text](images/architecture.png \"Architecture diagram\")\n+\n+\n+\n+## Terminology\n+\n+Some of the terms used in the document and to what they refer:\n+\n+\n+\n+1.  Participant - A mobile app user is referred to as a participant when he/she enrolls into a study and is associated with a unique participant id. A single mobile app user can be associated with multiple studies and is a unique participant in each study\n+1.  Study Content \u2013 All the content that is required to carry out a study (e.g. study eligibility criteria, consent forms, questionnaires, response types, etc.)\n+1.  Response Data \u2013 Responses provided by a participant to questionnaires and activities set up as the part of a study\n+\n+\n+## Architecture Components\n+\n+The platform components are as follows:\n+\n+\n+\n+1.  Study Builder (UI)\n+1.  Study Datastore\n+1.  Auth Server\n+1.  Participant Manager (UI, targeted for future release)\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Mobile Apps (UI, not a server component)\n+\n+\n+### Study Builder\n+\n+The Study Builder provides a user interface for study administrators to create and launch studies and to manage study content during the course of a study.\n+\n+The Study Builder does not handle any patient/participant information. It only deals with content for studies.\n+\n+The Study Builder is the source of study information for all downstream applications. This information is provided through the Study Datastore, described in the section below.\n+\n+The Study Builder is a Java application built on the Spring framework. The backend database is a MySQL database, which is shared with the Study Datastore. The application has a built-in authentication and authorization functionality.\n+\n+The Study Builder can be deployed as a Java web application on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Study Datastore\n+\n+The Study Datastore provides REST APIs for downstream client applications to obtain all content related to studies set up using the Study Builder.\n+\n+It uses basic authentication with API username and password keys provided to client applications. \n+\n+The Study Datastore does not handle or expose any user/participant information. It provides study content only.\n+\n+It is a Java application built on the Spring framework. The backend database is a MySQL database (the same database used by the Study Builder, which is used to configure the data that is exposed through the Study Datastore APIs).\n+\n+It can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Auth Server\n+\n+The Auth Server is the centralized authentication mechanism for the various client applications in\u00a0the MyStudies platform.\n+\n+The client applications are:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Manager (targeted for future release)\n+\n+The Auth Server provides the following functionality to support mobile app users:\n+\n+\n+\n+1.  User registration\n+1.  User credentials management\n+1.  User authentication\n+1.  Token management\n+1.  User logout\n+\n+The Auth Server provides the following functionality to support server to server authentication:\n+\n+1.  Client credentials management (client id and secret)\n+1.  Client credentials validation\n+\n+This application is built as a Spring Boot application. The backend datastore is a MySQL database.\n+\n+The web services can be deployed on servers that have Java, Tomcat and MySQL installed. \n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+\n+\n+### Response Datastore\n+\n+The Response Datastore provides the following functionality:\n+\n+\n+\n+1.  Stores participant responses to a study\n+1.  Stores participant activity state data associated with the study\n+\n+The Response Datastore platform component provides REST APIs for the functionality above.\n+\n+The Response Datastore behaves as a resource server that stores participant response data. The Response Datastore requires a valid access token and client token to provide access to the protected resource to the resource owner (the study participant). It does not store user data that may identify the participant.\n+\n+This application is built as a Spring Boot application. The backend database is Cloud Firestore for the response data and a MySQL database for the activity data.\n+\n+The implementation to store the response data on Cloud Firestore can be swapped out to store the response data in a different location or service. \n+\n+The Response Datastore can be deployed on servers that have Java, Tomcat and MySQL installed.\n+\n+When deploying the application on GCP, the cloud resources that can be used are:\n+\n+\n+\n+1.  Google Kubernetes Engine\n+1.  Cloud SQL (MySQL)\n+1.  Cloud Firestore\n+\n+\n+### Participant Datastore\n+\n+The Participant Datastore provides the following functionality:\n+\n+\n+\n+1.  Manage mobile app user registration and profile (User Management)\n+1.  Manage mobile app user enrollment into studies (Enrollment Management)\n+1.  Manage mobile app user study consent status and documents (Consent Management)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMDYwNA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzM5ODU4OnYy", "diffSide": "RIGHT", "path": "documentation/architecture_overview.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo0MTo0NVrOGMp9hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODo1MTozM1rOGMyoHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMzU5MQ==", "bodyText": "Maybe we needs a paragraph to describe the use case and how these components function together.\ne.g. FDA MyStudies consists of several server side components, web UIs for building and managing studies, enrollment management and handling study data. It also includes android and iOS apps through with users can find and register to participate in studies ...", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415923591", "createdAt": "2020-04-27T15:41:45Z", "author": {"login": "zohrehj"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NTU2NQ==", "bodyText": "Addressed via commit 5b595f8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416065565", "createdAt": "2020-04-27T18:51:33Z", "author": {"login": "jkrogers18"}, "path": "documentation/architecture_overview.md", "diffHunk": "@@ -0,0 +1,395 @@\n+# Platform Architecture\n+\n+## Introduction\n+\n+This document describes the architecture of the FDA MyStudies on Google Cloud. It outlines the various platform components and their roles, interdependencies and interactions\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMzU5MQ=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzUxODg2OnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjowMTo0NlrOGMrFOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo1MToxNVrOGM_BCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0MTk0NA==", "bodyText": "At this point I am not sure if this document is talking about project level authorization or app level. It's probably a good idea to clarify the scope of the document.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415941944", "createdAt": "2020-04-27T16:01:46Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2ODU1Mw==", "bodyText": "Updated the title in 9a91aa3. Does that clarify appropriately?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416268553", "createdAt": "2020-04-28T01:51:15Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0MTk0NA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzUzNTc4OnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjowNTowMlrOGMrPSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOTozMTo1NVrOGM0Lwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NDUyMg==", "bodyText": "This article describes the authentication and authorization mechanism used by the various application components of FDA MyStudies.\nthe existing text implies that this is about authentication of the applications themselves and limited to GCP depoyment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415944522", "createdAt": "2020-04-27T16:05:02Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA5MTA3NA==", "bodyText": "Updated via 9202f9c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416091074", "createdAt": "2020-04-27T19:31:55Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NDUyMg=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzU0MjU5OnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjowNjoyMVrOGMrTLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxMjozOFrOGMzdAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NTUxNg==", "bodyText": "potential question from user at this point: what is this admin value and how can it be changed?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415945516", "createdAt": "2020-04-27T16:06:21Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NjYyMQ==", "bodyText": "Might be a good idea to explain whether admin can then add additional users to the system after initial login.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415946621", "createdAt": "2020-04-27T16:07:47Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NTUxNg=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA3OTEwNA==", "bodyText": "@ranjanirao20 @SR-btc to address", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416079104", "createdAt": "2020-04-27T19:12:38Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NTUxNg=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzU4OTQ5OnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNTozM1rOGMrvAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNDoxM1rOGMzhBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjY0MA==", "bodyText": "should this be simply admin?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415952640", "createdAt": "2020-04-27T16:15:33Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MDEzMg==", "bodyText": "@SR-btc @ranjanirao20", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416080132", "createdAt": "2020-04-27T19:14:13Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjY0MA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzYzMTAzOnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoyMzozOVrOGMsHoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoyNDoyM1rOGNlfNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1ODk0NQ==", "bodyText": "nit: I think these two would work better as a paragraph than numbered list.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415958945", "createdAt": "2020-04-27T16:23:39Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")\n+\n+\n+Mobile app users are authenticated through the login method of the Auth Server web service. The login flow is as follows:\n+\n+\n+\n+1.  The mobile app is assigned a client ID and secret before deployment, which is managed by the Auth Server. The client ID and secret are stored in the Auth Server database.\n+1.  The login call to the Auth Server requires the mobile app to pass the client ID, secret, app ID, org ID and the user credentials.\n+1.  The Auth Server validates the client ID and secret, and generates a client token for the validated client credentials.\n+1.  The Auth Server checks the login\\_attempts table for the user email and app ID combination, before validating user credentials. It blocks login from the same email ID and app ID if the number of allowed attempts have been exceeded.\n+1.  If the client credentials are valid, it validates the user credentials \u2013 email, password and the app ID with which the user is associated.\n+1.  If the user credentials are valid and the user is associated with the right app ID, then the user is authenticated and authorized for that app.\n+1.  The server generates an access token, refresh token and client token, along with expiry time, for the access token.\n+1.  The tokens are returned to the mobile application.\n+1.  The mobile app is responsible for storing and managing the tokens for subsequent calls.\n+1.  The Auth Server updates the login attempts table for failed logins, with the user email and app ID information.\n+\n+\n+### Password Handling and Rules\n+\n+\n+\n+1.  Passwords are stored and encrypted in a [non-reversible format](https://en.wikipedia.org/wiki/Bcrypt), using a secure [cryptographic one-way hash function](https://en.wikipedia.org/wiki/Cryptographic_hash_function) (SHA-512) of a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography)) and the password.\n+1.  A random salt is generated for each password, using Cryptographic Pseudo-Random Number Generator (CPRNG)\n+1.  The salt is stored in the database\n+1.  [Password policy](https://en.wikipedia.org/wiki/Password_policy) is enforced before saving in the database\n+1.  The password must contain 8 to 64 characters, and contain a lowercase letter, upper case letter, numeric character,  and a special character from the set\u00a0 ! # $ % & \\' () \\* + , - . : ; < > = ? @ [] ^ \\_ { } | ~\n+1.  The password should not contain the user\u2019s email address\n+1.  The password history count is 10 meaning the password should not be the same as the last 10 used passwords\n+1.  Password expiry is 90 days\n+1.  A mobile app user is locked out of an account for 15 minutes after 5 incorrect password attempts\u00a0\u00a0\n+\n+\n+### Mobile App User Logout\n+\n+\n+![auth_mobile_logout.png](images/auth_mobile_logout.png \"Mobile logout diagram\")\n+\n+\n+\n+1.  The mobile app sends a logout request to the Auth Server.\n+1.  The Auth Server retrieves the access token from the request and clears the row in the sessions table, which has the access token.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5ODg2OQ==", "bodyText": "Fixed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416898869", "createdAt": "2020-04-28T20:24:23Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")\n+\n+\n+Mobile app users are authenticated through the login method of the Auth Server web service. The login flow is as follows:\n+\n+\n+\n+1.  The mobile app is assigned a client ID and secret before deployment, which is managed by the Auth Server. The client ID and secret are stored in the Auth Server database.\n+1.  The login call to the Auth Server requires the mobile app to pass the client ID, secret, app ID, org ID and the user credentials.\n+1.  The Auth Server validates the client ID and secret, and generates a client token for the validated client credentials.\n+1.  The Auth Server checks the login\\_attempts table for the user email and app ID combination, before validating user credentials. It blocks login from the same email ID and app ID if the number of allowed attempts have been exceeded.\n+1.  If the client credentials are valid, it validates the user credentials \u2013 email, password and the app ID with which the user is associated.\n+1.  If the user credentials are valid and the user is associated with the right app ID, then the user is authenticated and authorized for that app.\n+1.  The server generates an access token, refresh token and client token, along with expiry time, for the access token.\n+1.  The tokens are returned to the mobile application.\n+1.  The mobile app is responsible for storing and managing the tokens for subsequent calls.\n+1.  The Auth Server updates the login attempts table for failed logins, with the user email and app ID information.\n+\n+\n+### Password Handling and Rules\n+\n+\n+\n+1.  Passwords are stored and encrypted in a [non-reversible format](https://en.wikipedia.org/wiki/Bcrypt), using a secure [cryptographic one-way hash function](https://en.wikipedia.org/wiki/Cryptographic_hash_function) (SHA-512) of a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography)) and the password.\n+1.  A random salt is generated for each password, using Cryptographic Pseudo-Random Number Generator (CPRNG)\n+1.  The salt is stored in the database\n+1.  [Password policy](https://en.wikipedia.org/wiki/Password_policy) is enforced before saving in the database\n+1.  The password must contain 8 to 64 characters, and contain a lowercase letter, upper case letter, numeric character,  and a special character from the set\u00a0 ! # $ % & \\' () \\* + , - . : ; < > = ? @ [] ^ \\_ { } | ~\n+1.  The password should not contain the user\u2019s email address\n+1.  The password history count is 10 meaning the password should not be the same as the last 10 used passwords\n+1.  Password expiry is 90 days\n+1.  A mobile app user is locked out of an account for 15 minutes after 5 incorrect password attempts\u00a0\u00a0\n+\n+\n+### Mobile App User Logout\n+\n+\n+![auth_mobile_logout.png](images/auth_mobile_logout.png \"Mobile logout diagram\")\n+\n+\n+\n+1.  The mobile app sends a logout request to the Auth Server.\n+1.  The Auth Server retrieves the access token from the request and clears the row in the sessions table, which has the access token.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1ODk0NQ=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzY0MzI5OnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoyNjowM1rOGMsOuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNDo0NVrOGMziMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk2MDc2Mw==", "bodyText": "these rules are slightly different from the mobile app ones provided below, we could maybe reuse the similar parts, e.g. complexity and length and only point out the difference, e.g. length of lockout?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415960763", "createdAt": "2020-04-27T16:26:03Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MDQzMw==", "bodyText": "@SR-btc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416080433", "createdAt": "2020-04-27T19:14:45Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk2MDc2Mw=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzcxNzU1OnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjo0MDowNVrOGMs5cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNToxNVrOGMzjVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3MTY5OQ==", "bodyText": "not sure if this is an issue with the PR, but the link doesn't work", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415971699", "createdAt": "2020-04-27T16:40:05Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MDcyNA==", "bodyText": "@ranjanirao20 will add this diagram to the repo once it is ready", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416080724", "createdAt": "2020-04-27T19:15:15Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3MTY5OQ=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzcxOTEzOnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjo0MDoyNlrOGMs6dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNzoyMFrOGMzokQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3MTk1OQ==", "bodyText": "link doesn't work.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415971959", "createdAt": "2020-04-27T16:40:26Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")\n+\n+\n+Mobile app users are authenticated through the login method of the Auth Server web service. The login flow is as follows:\n+\n+\n+\n+1.  The mobile app is assigned a client ID and secret before deployment, which is managed by the Auth Server. The client ID and secret are stored in the Auth Server database.\n+1.  The login call to the Auth Server requires the mobile app to pass the client ID, secret, app ID, org ID and the user credentials.\n+1.  The Auth Server validates the client ID and secret, and generates a client token for the validated client credentials.\n+1.  The Auth Server checks the login\\_attempts table for the user email and app ID combination, before validating user credentials. It blocks login from the same email ID and app ID if the number of allowed attempts have been exceeded.\n+1.  If the client credentials are valid, it validates the user credentials \u2013 email, password and the app ID with which the user is associated.\n+1.  If the user credentials are valid and the user is associated with the right app ID, then the user is authenticated and authorized for that app.\n+1.  The server generates an access token, refresh token and client token, along with expiry time, for the access token.\n+1.  The tokens are returned to the mobile application.\n+1.  The mobile app is responsible for storing and managing the tokens for subsequent calls.\n+1.  The Auth Server updates the login attempts table for failed logins, with the user email and app ID information.\n+\n+\n+### Password Handling and Rules\n+\n+\n+\n+1.  Passwords are stored and encrypted in a [non-reversible format](https://en.wikipedia.org/wiki/Bcrypt), using a secure [cryptographic one-way hash function](https://en.wikipedia.org/wiki/Cryptographic_hash_function) (SHA-512) of a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography)) and the password.\n+1.  A random salt is generated for each password, using Cryptographic Pseudo-Random Number Generator (CPRNG)\n+1.  The salt is stored in the database\n+1.  [Password policy](https://en.wikipedia.org/wiki/Password_policy) is enforced before saving in the database\n+1.  The password must contain 8 to 64 characters, and contain a lowercase letter, upper case letter, numeric character,  and a special character from the set\u00a0 ! # $ % & \\' () \\* + , - . : ; < > = ? @ [] ^ \\_ { } | ~\n+1.  The password should not contain the user\u2019s email address\n+1.  The password history count is 10 meaning the password should not be the same as the last 10 used passwords\n+1.  Password expiry is 90 days\n+1.  A mobile app user is locked out of an account for 15 minutes after 5 incorrect password attempts\u00a0\u00a0\n+\n+\n+### Mobile App User Logout\n+\n+\n+![auth_mobile_logout.png](images/auth_mobile_logout.png \"Mobile logout diagram\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MjA2NQ==", "bodyText": "@ranjanirao20 to upload image once ready", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416082065", "createdAt": "2020-04-27T19:17:20Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")\n+\n+\n+Mobile app users are authenticated through the login method of the Auth Server web service. The login flow is as follows:\n+\n+\n+\n+1.  The mobile app is assigned a client ID and secret before deployment, which is managed by the Auth Server. The client ID and secret are stored in the Auth Server database.\n+1.  The login call to the Auth Server requires the mobile app to pass the client ID, secret, app ID, org ID and the user credentials.\n+1.  The Auth Server validates the client ID and secret, and generates a client token for the validated client credentials.\n+1.  The Auth Server checks the login\\_attempts table for the user email and app ID combination, before validating user credentials. It blocks login from the same email ID and app ID if the number of allowed attempts have been exceeded.\n+1.  If the client credentials are valid, it validates the user credentials \u2013 email, password and the app ID with which the user is associated.\n+1.  If the user credentials are valid and the user is associated with the right app ID, then the user is authenticated and authorized for that app.\n+1.  The server generates an access token, refresh token and client token, along with expiry time, for the access token.\n+1.  The tokens are returned to the mobile application.\n+1.  The mobile app is responsible for storing and managing the tokens for subsequent calls.\n+1.  The Auth Server updates the login attempts table for failed logins, with the user email and app ID information.\n+\n+\n+### Password Handling and Rules\n+\n+\n+\n+1.  Passwords are stored and encrypted in a [non-reversible format](https://en.wikipedia.org/wiki/Bcrypt), using a secure [cryptographic one-way hash function](https://en.wikipedia.org/wiki/Cryptographic_hash_function) (SHA-512) of a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography)) and the password.\n+1.  A random salt is generated for each password, using Cryptographic Pseudo-Random Number Generator (CPRNG)\n+1.  The salt is stored in the database\n+1.  [Password policy](https://en.wikipedia.org/wiki/Password_policy) is enforced before saving in the database\n+1.  The password must contain 8 to 64 characters, and contain a lowercase letter, upper case letter, numeric character,  and a special character from the set\u00a0 ! # $ % & \\' () \\* + , - . : ; < > = ? @ [] ^ \\_ { } | ~\n+1.  The password should not contain the user\u2019s email address\n+1.  The password history count is 10 meaning the password should not be the same as the last 10 used passwords\n+1.  Password expiry is 90 days\n+1.  A mobile app user is locked out of an account for 15 minutes after 5 incorrect password attempts\u00a0\u00a0\n+\n+\n+### Mobile App User Logout\n+\n+\n+![auth_mobile_logout.png](images/auth_mobile_logout.png \"Mobile logout diagram\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3MTk1OQ=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzcyMDQzOnYy", "diffSide": "RIGHT", "path": "documentation/auth_overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjo0MDozOVrOGMs7Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxODoxN1rOGMzq5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3MjEzOA==", "bodyText": "link doesn't work", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r415972138", "createdAt": "2020-04-27T16:40:39Z", "author": {"login": "zohrehj"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")\n+\n+\n+Mobile app users are authenticated through the login method of the Auth Server web service. The login flow is as follows:\n+\n+\n+\n+1.  The mobile app is assigned a client ID and secret before deployment, which is managed by the Auth Server. The client ID and secret are stored in the Auth Server database.\n+1.  The login call to the Auth Server requires the mobile app to pass the client ID, secret, app ID, org ID and the user credentials.\n+1.  The Auth Server validates the client ID and secret, and generates a client token for the validated client credentials.\n+1.  The Auth Server checks the login\\_attempts table for the user email and app ID combination, before validating user credentials. It blocks login from the same email ID and app ID if the number of allowed attempts have been exceeded.\n+1.  If the client credentials are valid, it validates the user credentials \u2013 email, password and the app ID with which the user is associated.\n+1.  If the user credentials are valid and the user is associated with the right app ID, then the user is authenticated and authorized for that app.\n+1.  The server generates an access token, refresh token and client token, along with expiry time, for the access token.\n+1.  The tokens are returned to the mobile application.\n+1.  The mobile app is responsible for storing and managing the tokens for subsequent calls.\n+1.  The Auth Server updates the login attempts table for failed logins, with the user email and app ID information.\n+\n+\n+### Password Handling and Rules\n+\n+\n+\n+1.  Passwords are stored and encrypted in a [non-reversible format](https://en.wikipedia.org/wiki/Bcrypt), using a secure [cryptographic one-way hash function](https://en.wikipedia.org/wiki/Cryptographic_hash_function) (SHA-512) of a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography)) and the password.\n+1.  A random salt is generated for each password, using Cryptographic Pseudo-Random Number Generator (CPRNG)\n+1.  The salt is stored in the database\n+1.  [Password policy](https://en.wikipedia.org/wiki/Password_policy) is enforced before saving in the database\n+1.  The password must contain 8 to 64 characters, and contain a lowercase letter, upper case letter, numeric character,  and a special character from the set\u00a0 ! # $ % & \\' () \\* + , - . : ; < > = ? @ [] ^ \\_ { } | ~\n+1.  The password should not contain the user\u2019s email address\n+1.  The password history count is 10 meaning the password should not be the same as the last 10 used passwords\n+1.  Password expiry is 90 days\n+1.  A mobile app user is locked out of an account for 15 minutes after 5 incorrect password attempts\u00a0\u00a0\n+\n+\n+### Mobile App User Logout\n+\n+\n+![auth_mobile_logout.png](images/auth_mobile_logout.png \"Mobile logout diagram\")\n+\n+\n+\n+1.  The mobile app sends a logout request to the Auth Server.\n+1.  The Auth Server retrieves the access token from the request and clears the row in the sessions table, which has the access token.\n+\n+\n+### Validate Access Token\n+\n+\n+\n+![auth_validate_token.png](images/auth_validate_token.png \"Validate access token diagram\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MjY2Mw==", "bodyText": "@ranjanirao20 to upload image when ready", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416082663", "createdAt": "2020-04-27T19:18:17Z", "author": {"login": "jkrogers18"}, "path": "documentation/auth_overview.md", "diffHunk": "@@ -0,0 +1,180 @@\n+# Authentication and Authorization\n+\n+## Introduction\n+\n+This article describes the authentication and authorization of the various application components of FDA MyStudies on Google Cloud.\n+\n+Note: Customers are responsible for setting up users and permissions for both the infrastructural components of the platform (GCP or other infrastructure and/or associated managed services being used in their deployment of the platform) and the application components of the platform for which user management is provided as a feature (this is limited to the Study Builder in the current release).\n+\n+The mobile app allows for a self-registration process for its users; however only the users who are found eligible by the app to take part in a study are allowed to proceed with enrollment into the study. Eligibility is determined by means of an in-app eligibility test configured via the Study Builder and/or recognizing the app user as belonging to a pre-screened and pre-identified participation whitelist using an enrollment code. Studies that use the former method of eligibility determination are also referred to as \u2018open\u2019 studies in platform terminology, while those that employ the latter or both methods are termed \u2018closed\u2019 studies. This release supports only \u2018open\u2019 studies as of now. Closed studies will be supported in future releases.\n+\n+\n+## Terminology\n+\n+There are three types of users of FDA MyStudies on Google Cloud:\n+\n+\n+\n+1.  Study Builder user - A user of the Study Builder, usually a study or site admin, who is responsible for setting up content for a study.\n+1.  Mobile App user - A mobile app user who can use the app to view studies and participate in eligible studies.\n+1.  Participant Manager user - Targeted for a future release.\n+\n+\n+## Study Builder Authentication and Authorization \n+\n+The Study Builder uses custom authentication built into the application. \n+\n+The Study Builder application is seeded with a super admin user, as a part of the deployment process. The super admin user can log into the Study Builder and create other Study Builder users.\n+\n+A Study Builder user logs in with their email ID and password, which is validated against the Study Builder user data table. The password is hashed before storage. This is a one way hash.\n+\n+Authorization is managed through the mapping of permissions to users. The database has a set of standard permissions defined, and a subset of these permissions are mapped to a user. The permissions are retrieved and checked when any user action is taken. For example, a user may have permissions to view studies but not edit them, or a user may have access to only a subset of studies in the system.\n+\n+The permissions set defined for the Study Builder web application are as follows:\n+\n+\n+\n+*   Super Admin\n+*   Manage Users (Add Users, Edit Users, View Users)\n+*   Manage Studies (Create Studies, View Studies, Edit Studies)\n+*   Manage App-Wide Notifications (View Notifications, Edit Notifications)\n+\n+Password rules:\n+\n+\n+\n+*   Password Strength: Passwords have restrictions that require a minimum size and complexity for the password. \n+*   Password Expiry: The application will force the user to change the password every 90 days. The number of days until expiry is a configurable value that is managed in a configuration file.\n+*   Users cannot use their last 10 passwords.\n+*   The password should not contain the user\u2019s account-related information such as the  user\u2019s registered email, first name or last name.\n+*   Users will be locked out of an account for a period of one hour after 5 consecutive failed sign-in attempts with incorrect password.\n+\n+\n+## Study Datastore Authentication and Authorization\n+\n+The Study Datastore handles study content data and uses basic authentication.\n+\n+A bundle ID and app token is provided to every client that integrates with the Study Datastore. The bundle ID/app token is unique to a client. The client is responsible for storing the bundle ID and app token, and using them for the web service calls. \n+\n+The client follows basic HTTP authentication, where the request to the Study Datastore contains a header field in the form of _Authorization: Basic \\<credentials\\>_ where credentials is the bundle ID and app token are joined by a colon and converted to a Base64 encoded string. \n+\n+The Study Builder web services application validates the credentials on every call.\n+\n+\n+<table>\n+  <tr>\n+   <td>Header Param\n+   </td>\n+   <td>Value\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Authorization\n+   </td>\n+   <td>Basic &ltBase64 encode value (bundleid:apptoken)&gt\n+   </td>\n+  </tr>\n+</table>\n+\n+\n+The bundle ID and app token are created before deployment and stored in both the Study Datastore and the client application. \n+\n+If the bundle ID and/or app token are changed, it will require a redeployment of the Study Datastore and the client application.\n+\n+\n+## Auth Server Authentication and Authorization\n+\n+The Auth Server provides centralized authentication and authorization for the following platform components:\n+\n+\n+\n+1.  Mobile Apps\n+1.  Participant Datastore\n+1.  Response Datastore\n+1.  Participant Manager (targeted for future release)\n+\n+\n+## Mobile App User Authentication and Authorization\n+\n+The mobile app user credentials are a combination of email address and password. In addition, a mobile app user is associated with an app ID and organization ID. \n+\n+The app ID and organization ID represent the mobile apps managed by an organization. Each mobile app will have a unique app ID. This app ID is generated by the Study Builder user, who creates an app ID with which studies are associated.\n+\n+_Note: Organization ID is a placeholder for future enhancements and not used for validation_\n+\n+\n+### Mobile App User Login\n+\n+![auth_mobile_login.png](images/auth_mobile_login.png \"Mobile login diagram\")\n+\n+\n+Mobile app users are authenticated through the login method of the Auth Server web service. The login flow is as follows:\n+\n+\n+\n+1.  The mobile app is assigned a client ID and secret before deployment, which is managed by the Auth Server. The client ID and secret are stored in the Auth Server database.\n+1.  The login call to the Auth Server requires the mobile app to pass the client ID, secret, app ID, org ID and the user credentials.\n+1.  The Auth Server validates the client ID and secret, and generates a client token for the validated client credentials.\n+1.  The Auth Server checks the login\\_attempts table for the user email and app ID combination, before validating user credentials. It blocks login from the same email ID and app ID if the number of allowed attempts have been exceeded.\n+1.  If the client credentials are valid, it validates the user credentials \u2013 email, password and the app ID with which the user is associated.\n+1.  If the user credentials are valid and the user is associated with the right app ID, then the user is authenticated and authorized for that app.\n+1.  The server generates an access token, refresh token and client token, along with expiry time, for the access token.\n+1.  The tokens are returned to the mobile application.\n+1.  The mobile app is responsible for storing and managing the tokens for subsequent calls.\n+1.  The Auth Server updates the login attempts table for failed logins, with the user email and app ID information.\n+\n+\n+### Password Handling and Rules\n+\n+\n+\n+1.  Passwords are stored and encrypted in a [non-reversible format](https://en.wikipedia.org/wiki/Bcrypt), using a secure [cryptographic one-way hash function](https://en.wikipedia.org/wiki/Cryptographic_hash_function) (SHA-512) of a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography)) and the password.\n+1.  A random salt is generated for each password, using Cryptographic Pseudo-Random Number Generator (CPRNG)\n+1.  The salt is stored in the database\n+1.  [Password policy](https://en.wikipedia.org/wiki/Password_policy) is enforced before saving in the database\n+1.  The password must contain 8 to 64 characters, and contain a lowercase letter, upper case letter, numeric character,  and a special character from the set\u00a0 ! # $ % & \\' () \\* + , - . : ; < > = ? @ [] ^ \\_ { } | ~\n+1.  The password should not contain the user\u2019s email address\n+1.  The password history count is 10 meaning the password should not be the same as the last 10 used passwords\n+1.  Password expiry is 90 days\n+1.  A mobile app user is locked out of an account for 15 minutes after 5 incorrect password attempts\u00a0\u00a0\n+\n+\n+### Mobile App User Logout\n+\n+\n+![auth_mobile_logout.png](images/auth_mobile_logout.png \"Mobile logout diagram\")\n+\n+\n+\n+1.  The mobile app sends a logout request to the Auth Server.\n+1.  The Auth Server retrieves the access token from the request and clears the row in the sessions table, which has the access token.\n+\n+\n+### Validate Access Token\n+\n+\n+\n+![auth_validate_token.png](images/auth_validate_token.png \"Validate access token diagram\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3MjEzOA=="}, "originalCommit": {"oid": "1c6df9c6500c88e36382a59fdcfbf53c57fca641"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQ5NzA2OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo1MzoyM1rOGNiUxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoyNjo1OFrOGNllMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0NzA0NQ==", "bodyText": "Does this include the infra as well? If so, we can mention we enforce a number of GCP organization policies such as disallow public access to Cloud SQL and enforced deletion lien on VPC Network Host project.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416847045", "createdAt": "2020-04-28T18:53:23Z", "author": {"login": "xingao267"}, "path": "README.md", "diffHunk": "@@ -1,35 +1,185 @@\n # FDA MyStudies\n-This repository contains all the necessary code and documentation for  building and deploying FDA MyStudies. \n+## Overview\n \n-This release of FDA MyStudies contains:\n-- mobile applications for study participants (iOS and Android)\n-- study builder for researchers and study designers\n-- participant and response datastores for managing study data\n+The FDA\u2019s MyStudies platform enables organizations to quickly build and deploy studies that interact with participants through purpose-built apps on iOS and Android. MyStudies apps can be distributed to participants directly (for example, when collecting patient-reported outcomes in support of a traditional clinical trial), or made available through the App Store and Google Play (for large-scale open-enrollment studies).\n \n+This open-source repository contains all of the code necessary to run FDA MyStudies on the infrastructure of choice. Optional open-source [deployment tools](Terraform/README.md) are included for semi-automated deployment to Google Cloud Platform (GCP). These tools stand up an FDA MyStudies implementation in 1 hour, and are designed with specific compliance guidelines in mind, making the end-to-end compliance journey easier for organizations.\n \n-### Mobile Applications can be found in:\n-<ul>\n-  <li>`/Android`\n-  <li>`/iOS`\n-</ul>\n+Upon completing deployment, FDA MyStudies platform components will be available for use. A summary of these components is below.<!-- \u2013 a detailed overview of the platform architecture can be found [here](documentation/architecture_overview.md).-->\n \n-### The Study Builder server and web client can be found in:\n-<ul>\n-  <li>Study builder server: `/WCP-WS`\n-  <li>Study builder resources: `/Resources-WCP`\n-  <li>Study builder application: `/WCP`\n-</ul>\n+<table>\n+  <tr>\n+   <td><strong>Component</strong>\n+   </td>\n+   <td><strong>Intended users</strong>\n+   </td>\n+   <td><strong>Purpose</strong>\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Study Builder\n+   </td>\n+   <td>Study designers\n+   </td>\n+   <td>User interface for authoring and publishing studies with no software development\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Participant Manager\n+   </td>\n+   <td>Study coordinators\n+   </td>\n+   <td>User interface for coordinators to manage participant enrollment (not yet available)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Mobile Apps\n+   </td>\n+   <td>Study participants\n+   </td>\n+   <td>iOS and Android apps that participants use to discover, enroll and interact with studies\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Response Datastore\n+   </td>\n+   <td>Researchers & analysts\n+<p>\n+(back-end component)\n+   </td>\n+   <td>Collects and stores study activity responses for downstream analysis (no PII)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Study Datastore\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages study configurations (e.g. questionnaire content and schedule)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Participant Datastore\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages participant information and any PII (e.g. contact information, consent forms)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Auth Server\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages account creation, login, logout, resource requests, etc.\n+   </td>\n+  </tr>\n+</table>\n \n-### Participant and response datastores can be found in:\n-<ul>\n-<li>Participant Datastore: `/user-registration-server-ws`\n-  <ul>\n-    <li>Consent: `/user-registration-server-ws/consent-mgmt`\n-    <li>Enrollment: `/user-registration-server-ws/enroll-mgmt`\n-    <li>Participant: `/user-registration-server-ws/user-mgmt`\n-  </ul>\n-<li>Response Datastore: `/response-server-ws`\n-</ul>\n+<!-- ![Platform Illustration](documentation/images/platform_illustration.png \"Platform Illustration\") -->\n \n+## Use-cases\n \n+FDA MyStudies is a flexible framework that enables diverse use-cases across a range of organizations and industries.\n \n+Examples for how FDA MyStudies can be used include: \n+\n+<table>\n+  <tr>\n+   <td><strong>Sample industries</strong>\n+   </td>\n+   <td>\n+    <strong>Example use-cases</strong>\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Pharma and medtech\n+   </td>\n+   <td><ul>\n+\n+<li>Replace paper forms and binders of PRO questionnaires for clinical trial participants\n+<li>Complement in-person / traditional studies with digital surveys and other instruments\n+<li>Conduct virtual studies with massive reach and high patient engagement\n+<li>Collect valuable data on real-world impact with \u2018beyond-the-pill\u2019 companion apps\n+<li>Operate HEOR and post-market surveillance studies\n+<li>Monitor patient satisfaction and adverse events</li></ul>\n+\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Payers, providers and public health\n+   </td>\n+   <td><ul>\n+\n+<li>Develop new digital instruments\n+<li>Conduct large research studies quickly and efficiently\n+<li>Establish long-term patient registries\n+<li>Assess the efficacy of care management methodologies\n+<li>Measure prevalence and impact of infectious disease at scale\n+<li>Monitor efficacy of health care systems or specific initiatives</li></ul>\n+\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Cross-industry\n+   </td>\n+   <td><ul>\n+\n+<li>Measure customer satisfaction\n+<li>Evaluate employee / student behavior health and wellbeing</li></ul>\n+\n+   </td>\n+  </tr>\n+</table>\n+\n+## Repo organization\n+\n+This repository contains all code required to setup and run FDA MyStudies. This includes backend services, mobile applications, deployment tools and the necessary documentation. \n+\n+There are high-level directories for quick-start guides (`/documentation`) and deployment related files (`/Terraform` and `/kubernetes`). \n+\n+The remaining high-level directories are each dedicated to an application component (for example `/Android` and `/iOS` contain code for the mobile applications, while `/auth-server-ws` contains code for the Auth server).\n+\n+Each high-level directory contains a readme, build / deployment instructions, dockerfile, cloudbuild config and deployment configuration files (as needed).\n+\n+## Data and compliance\n+\n+FDA MyStudies is designed so that all data stays within the deploying organization\u2019s environment (unless that organization chooses to export their data). Identifiable data (if collected) is stored separately from study and response data to help organizations minimize access to that data.\n+\n+The FDA MyStudies platform has been designed to support auditing requirements for compliance with 21 CFR Part 11, allowing the platform to be used for trials under Investigational New Drug (IND) oversight. If an organization chooses to run FDA MyStudies on Google Cloud, a variety of infrastructure options are available that support HIPAA and other compliance requirements. More information about compliance on Google Cloud and an up-to-date list of products covered under BAA can be found [here](https://cloud.google.com/security/compliance/hipaa/).\n+\n+In addition to the platform, the [tools for deployment](Terraform/README.md) on GCP are designed to assist organizations in their end-to-end compliance journey. Although achieving compliance is the responsibility of the customer, these toolkits enable organizations to deploy FDA MyStudies in a way that will help meet compliance requirements; such as setting up audit logs for retaining data. \n+\n+Google Cloud can support customer compliance with 21 CFR Part 11 regulations when using GCP services in a prescribed manner to handle related data and workloads. While Google has a cloud technology stack ready for many 21 CFR Part 11 compliant workloads, the ultimate compliance determination depends on configuration choices made by the customer.\n+\n+## What\u2019s changed?\n+\n+While the overall goals, compliance principles and functionality are similar, this release introduces several changes from version 2019.10 of FDA MyStudies:\n+\n+*   Architecture\n+    *   Migrated from a VM architecture to a modular container-based architecture\n+    *   Refactored Participant Datastore\n+    *   Migrated to permissive open-source dependencies\n+    *   Removed dependencies that require commercial licenses\n+    *   Simplified mobile app calls and moved some functionality server-side\n+    *   Improved alignment of responsibilities between components\n+    *   Adjusted data storage based on usage and security requirements (e.g. study and participant status storage and calls were moved to Response Datastore, enrollment generation logic was moved to Participant Datastore)\n+    \n+*   Security", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ebc958f6f265b77c7f2c0262740a2262db3f425"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwMDQwMg==", "bodyText": "I think we're excluding infra here since we're comparing this version of the platform to the previous version of the platform. The deployment and IaaC capabilities are net new.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416900402", "createdAt": "2020-04-28T20:26:58Z", "author": {"login": "jkrogers18"}, "path": "README.md", "diffHunk": "@@ -1,35 +1,185 @@\n # FDA MyStudies\n-This repository contains all the necessary code and documentation for  building and deploying FDA MyStudies. \n+## Overview\n \n-This release of FDA MyStudies contains:\n-- mobile applications for study participants (iOS and Android)\n-- study builder for researchers and study designers\n-- participant and response datastores for managing study data\n+The FDA\u2019s MyStudies platform enables organizations to quickly build and deploy studies that interact with participants through purpose-built apps on iOS and Android. MyStudies apps can be distributed to participants directly (for example, when collecting patient-reported outcomes in support of a traditional clinical trial), or made available through the App Store and Google Play (for large-scale open-enrollment studies).\n \n+This open-source repository contains all of the code necessary to run FDA MyStudies on the infrastructure of choice. Optional open-source [deployment tools](Terraform/README.md) are included for semi-automated deployment to Google Cloud Platform (GCP). These tools stand up an FDA MyStudies implementation in 1 hour, and are designed with specific compliance guidelines in mind, making the end-to-end compliance journey easier for organizations.\n \n-### Mobile Applications can be found in:\n-<ul>\n-  <li>`/Android`\n-  <li>`/iOS`\n-</ul>\n+Upon completing deployment, FDA MyStudies platform components will be available for use. A summary of these components is below.<!-- \u2013 a detailed overview of the platform architecture can be found [here](documentation/architecture_overview.md).-->\n \n-### The Study Builder server and web client can be found in:\n-<ul>\n-  <li>Study builder server: `/WCP-WS`\n-  <li>Study builder resources: `/Resources-WCP`\n-  <li>Study builder application: `/WCP`\n-</ul>\n+<table>\n+  <tr>\n+   <td><strong>Component</strong>\n+   </td>\n+   <td><strong>Intended users</strong>\n+   </td>\n+   <td><strong>Purpose</strong>\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Study Builder\n+   </td>\n+   <td>Study designers\n+   </td>\n+   <td>User interface for authoring and publishing studies with no software development\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Participant Manager\n+   </td>\n+   <td>Study coordinators\n+   </td>\n+   <td>User interface for coordinators to manage participant enrollment (not yet available)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Mobile Apps\n+   </td>\n+   <td>Study participants\n+   </td>\n+   <td>iOS and Android apps that participants use to discover, enroll and interact with studies\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Response Datastore\n+   </td>\n+   <td>Researchers & analysts\n+<p>\n+(back-end component)\n+   </td>\n+   <td>Collects and stores study activity responses for downstream analysis (no PII)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Study Datastore\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages study configurations (e.g. questionnaire content and schedule)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Participant Datastore\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages participant information and any PII (e.g. contact information, consent forms)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Auth Server\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages account creation, login, logout, resource requests, etc.\n+   </td>\n+  </tr>\n+</table>\n \n-### Participant and response datastores can be found in:\n-<ul>\n-<li>Participant Datastore: `/user-registration-server-ws`\n-  <ul>\n-    <li>Consent: `/user-registration-server-ws/consent-mgmt`\n-    <li>Enrollment: `/user-registration-server-ws/enroll-mgmt`\n-    <li>Participant: `/user-registration-server-ws/user-mgmt`\n-  </ul>\n-<li>Response Datastore: `/response-server-ws`\n-</ul>\n+<!-- ![Platform Illustration](documentation/images/platform_illustration.png \"Platform Illustration\") -->\n \n+## Use-cases\n \n+FDA MyStudies is a flexible framework that enables diverse use-cases across a range of organizations and industries.\n \n+Examples for how FDA MyStudies can be used include: \n+\n+<table>\n+  <tr>\n+   <td><strong>Sample industries</strong>\n+   </td>\n+   <td>\n+    <strong>Example use-cases</strong>\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Pharma and medtech\n+   </td>\n+   <td><ul>\n+\n+<li>Replace paper forms and binders of PRO questionnaires for clinical trial participants\n+<li>Complement in-person / traditional studies with digital surveys and other instruments\n+<li>Conduct virtual studies with massive reach and high patient engagement\n+<li>Collect valuable data on real-world impact with \u2018beyond-the-pill\u2019 companion apps\n+<li>Operate HEOR and post-market surveillance studies\n+<li>Monitor patient satisfaction and adverse events</li></ul>\n+\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Payers, providers and public health\n+   </td>\n+   <td><ul>\n+\n+<li>Develop new digital instruments\n+<li>Conduct large research studies quickly and efficiently\n+<li>Establish long-term patient registries\n+<li>Assess the efficacy of care management methodologies\n+<li>Measure prevalence and impact of infectious disease at scale\n+<li>Monitor efficacy of health care systems or specific initiatives</li></ul>\n+\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Cross-industry\n+   </td>\n+   <td><ul>\n+\n+<li>Measure customer satisfaction\n+<li>Evaluate employee / student behavior health and wellbeing</li></ul>\n+\n+   </td>\n+  </tr>\n+</table>\n+\n+## Repo organization\n+\n+This repository contains all code required to setup and run FDA MyStudies. This includes backend services, mobile applications, deployment tools and the necessary documentation. \n+\n+There are high-level directories for quick-start guides (`/documentation`) and deployment related files (`/Terraform` and `/kubernetes`). \n+\n+The remaining high-level directories are each dedicated to an application component (for example `/Android` and `/iOS` contain code for the mobile applications, while `/auth-server-ws` contains code for the Auth server).\n+\n+Each high-level directory contains a readme, build / deployment instructions, dockerfile, cloudbuild config and deployment configuration files (as needed).\n+\n+## Data and compliance\n+\n+FDA MyStudies is designed so that all data stays within the deploying organization\u2019s environment (unless that organization chooses to export their data). Identifiable data (if collected) is stored separately from study and response data to help organizations minimize access to that data.\n+\n+The FDA MyStudies platform has been designed to support auditing requirements for compliance with 21 CFR Part 11, allowing the platform to be used for trials under Investigational New Drug (IND) oversight. If an organization chooses to run FDA MyStudies on Google Cloud, a variety of infrastructure options are available that support HIPAA and other compliance requirements. More information about compliance on Google Cloud and an up-to-date list of products covered under BAA can be found [here](https://cloud.google.com/security/compliance/hipaa/).\n+\n+In addition to the platform, the [tools for deployment](Terraform/README.md) on GCP are designed to assist organizations in their end-to-end compliance journey. Although achieving compliance is the responsibility of the customer, these toolkits enable organizations to deploy FDA MyStudies in a way that will help meet compliance requirements; such as setting up audit logs for retaining data. \n+\n+Google Cloud can support customer compliance with 21 CFR Part 11 regulations when using GCP services in a prescribed manner to handle related data and workloads. While Google has a cloud technology stack ready for many 21 CFR Part 11 compliant workloads, the ultimate compliance determination depends on configuration choices made by the customer.\n+\n+## What\u2019s changed?\n+\n+While the overall goals, compliance principles and functionality are similar, this release introduces several changes from version 2019.10 of FDA MyStudies:\n+\n+*   Architecture\n+    *   Migrated from a VM architecture to a modular container-based architecture\n+    *   Refactored Participant Datastore\n+    *   Migrated to permissive open-source dependencies\n+    *   Removed dependencies that require commercial licenses\n+    *   Simplified mobile app calls and moved some functionality server-side\n+    *   Improved alignment of responsibilities between components\n+    *   Adjusted data storage based on usage and security requirements (e.g. study and participant status storage and calls were moved to Response Datastore, enrollment generation logic was moved to Participant Datastore)\n+    \n+*   Security", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0NzA0NQ=="}, "originalCommit": {"oid": "2ebc958f6f265b77c7f2c0262740a2262db3f425"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzUwMTQ5OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo1NDozMVrOGNiXZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo1NDozMVrOGNiXZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0NzcxNg==", "bodyText": "Consider using google3 tool mdformat to format readme files. so the command is like\nmdformat --in_place <path_to_readme_file>", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416847716", "createdAt": "2020-04-28T18:54:31Z", "author": {"login": "xingao267"}, "path": "README.md", "diffHunk": "@@ -1,35 +1,185 @@\n # FDA MyStudies\n-This repository contains all the necessary code and documentation for  building and deploying FDA MyStudies. \n+## Overview\n \n-This release of FDA MyStudies contains:\n-- mobile applications for study participants (iOS and Android)\n-- study builder for researchers and study designers\n-- participant and response datastores for managing study data\n+The FDA\u2019s MyStudies platform enables organizations to quickly build and deploy studies that interact with participants through purpose-built apps on iOS and Android. MyStudies apps can be distributed to participants directly (for example, when collecting patient-reported outcomes in support of a traditional clinical trial), or made available through the App Store and Google Play (for large-scale open-enrollment studies).\n \n+This open-source repository contains all of the code necessary to run FDA MyStudies on the infrastructure of choice. Optional open-source [deployment tools](Terraform/README.md) are included for semi-automated deployment to Google Cloud Platform (GCP). These tools stand up an FDA MyStudies implementation in 1 hour, and are designed with specific compliance guidelines in mind, making the end-to-end compliance journey easier for organizations.\n \n-### Mobile Applications can be found in:\n-<ul>\n-  <li>`/Android`\n-  <li>`/iOS`\n-</ul>\n+Upon completing deployment, FDA MyStudies platform components will be available for use. A summary of these components is below.<!-- \u2013 a detailed overview of the platform architecture can be found [here](documentation/architecture_overview.md).-->\n \n-### The Study Builder server and web client can be found in:\n-<ul>\n-  <li>Study builder server: `/WCP-WS`\n-  <li>Study builder resources: `/Resources-WCP`\n-  <li>Study builder application: `/WCP`\n-</ul>\n+<table>\n+  <tr>\n+   <td><strong>Component</strong>\n+   </td>\n+   <td><strong>Intended users</strong>\n+   </td>\n+   <td><strong>Purpose</strong>\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Study Builder\n+   </td>\n+   <td>Study designers\n+   </td>\n+   <td>User interface for authoring and publishing studies with no software development\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Participant Manager\n+   </td>\n+   <td>Study coordinators\n+   </td>\n+   <td>User interface for coordinators to manage participant enrollment (not yet available)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Mobile Apps\n+   </td>\n+   <td>Study participants\n+   </td>\n+   <td>iOS and Android apps that participants use to discover, enroll and interact with studies\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Response Datastore\n+   </td>\n+   <td>Researchers & analysts\n+<p>\n+(back-end component)\n+   </td>\n+   <td>Collects and stores study activity responses for downstream analysis (no PII)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Study Datastore\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages study configurations (e.g. questionnaire content and schedule)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Participant Datastore\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages participant information and any PII (e.g. contact information, consent forms)\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Auth Server\n+   </td>\n+   <td>(back-end component)\n+   </td>\n+   <td>Manages account creation, login, logout, resource requests, etc.\n+   </td>\n+  </tr>\n+</table>\n \n-### Participant and response datastores can be found in:\n-<ul>\n-<li>Participant Datastore: `/user-registration-server-ws`\n-  <ul>\n-    <li>Consent: `/user-registration-server-ws/consent-mgmt`\n-    <li>Enrollment: `/user-registration-server-ws/enroll-mgmt`\n-    <li>Participant: `/user-registration-server-ws/user-mgmt`\n-  </ul>\n-<li>Response Datastore: `/response-server-ws`\n-</ul>\n+<!-- ![Platform Illustration](documentation/images/platform_illustration.png \"Platform Illustration\") -->\n \n+## Use-cases\n \n+FDA MyStudies is a flexible framework that enables diverse use-cases across a range of organizations and industries.\n \n+Examples for how FDA MyStudies can be used include: \n+\n+<table>\n+  <tr>\n+   <td><strong>Sample industries</strong>\n+   </td>\n+   <td>\n+    <strong>Example use-cases</strong>\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Pharma and medtech\n+   </td>\n+   <td><ul>\n+\n+<li>Replace paper forms and binders of PRO questionnaires for clinical trial participants\n+<li>Complement in-person / traditional studies with digital surveys and other instruments\n+<li>Conduct virtual studies with massive reach and high patient engagement\n+<li>Collect valuable data on real-world impact with \u2018beyond-the-pill\u2019 companion apps\n+<li>Operate HEOR and post-market surveillance studies\n+<li>Monitor patient satisfaction and adverse events</li></ul>\n+\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Payers, providers and public health\n+   </td>\n+   <td><ul>\n+\n+<li>Develop new digital instruments\n+<li>Conduct large research studies quickly and efficiently\n+<li>Establish long-term patient registries\n+<li>Assess the efficacy of care management methodologies\n+<li>Measure prevalence and impact of infectious disease at scale\n+<li>Monitor efficacy of health care systems or specific initiatives</li></ul>\n+\n+   </td>\n+  </tr>\n+  <tr>\n+   <td>Cross-industry\n+   </td>\n+   <td><ul>\n+\n+<li>Measure customer satisfaction\n+<li>Evaluate employee / student behavior health and wellbeing</li></ul>\n+\n+   </td>\n+  </tr>\n+</table>\n+\n+## Repo organization\n+\n+This repository contains all code required to setup and run FDA MyStudies. This includes backend services, mobile applications, deployment tools and the necessary documentation. \n+\n+There are high-level directories for quick-start guides (`/documentation`) and deployment related files (`/Terraform` and `/kubernetes`). \n+\n+The remaining high-level directories are each dedicated to an application component (for example `/Android` and `/iOS` contain code for the mobile applications, while `/auth-server-ws` contains code for the Auth server).\n+\n+Each high-level directory contains a readme, build / deployment instructions, dockerfile, cloudbuild config and deployment configuration files (as needed).\n+\n+## Data and compliance\n+\n+FDA MyStudies is designed so that all data stays within the deploying organization\u2019s environment (unless that organization chooses to export their data). Identifiable data (if collected) is stored separately from study and response data to help organizations minimize access to that data.\n+\n+The FDA MyStudies platform has been designed to support auditing requirements for compliance with 21 CFR Part 11, allowing the platform to be used for trials under Investigational New Drug (IND) oversight. If an organization chooses to run FDA MyStudies on Google Cloud, a variety of infrastructure options are available that support HIPAA and other compliance requirements. More information about compliance on Google Cloud and an up-to-date list of products covered under BAA can be found [here](https://cloud.google.com/security/compliance/hipaa/).\n+\n+In addition to the platform, the [tools for deployment](Terraform/README.md) on GCP are designed to assist organizations in their end-to-end compliance journey. Although achieving compliance is the responsibility of the customer, these toolkits enable organizations to deploy FDA MyStudies in a way that will help meet compliance requirements; such as setting up audit logs for retaining data. \n+\n+Google Cloud can support customer compliance with 21 CFR Part 11 regulations when using GCP services in a prescribed manner to handle related data and workloads. While Google has a cloud technology stack ready for many 21 CFR Part 11 compliant workloads, the ultimate compliance determination depends on configuration choices made by the customer.\n+\n+## What\u2019s changed?\n+\n+While the overall goals, compliance principles and functionality are similar, this release introduces several changes from version 2019.10 of FDA MyStudies:\n+\n+*   Architecture\n+    *   Migrated from a VM architecture to a modular container-based architecture\n+    *   Refactored Participant Datastore\n+    *   Migrated to permissive open-source dependencies\n+    *   Removed dependencies that require commercial licenses\n+    *   Simplified mobile app calls and moved some functionality server-side\n+    *   Improved alignment of responsibilities between components\n+    *   Adjusted data storage based on usage and security requirements (e.g. study and participant status storage and calls were moved to Response Datastore, enrollment generation logic was moved to Participant Datastore)\n+    \n+*   Security\n+    *   Improved the existing authentication in place (e.g. removed application secret from being transmitted in all calls, unified the process into a single auth server)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ebc958f6f265b77c7f2c0262740a2262db3f425"}, "originalPosition": 195}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzU3MjU5OnYy", "diffSide": "RIGHT", "path": "Terraform/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOToxMzo0NFrOGNjC4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoyODo1MlrOGNlpYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1ODg1MA==", "bodyText": "Not sure if we want to explain this a little more detailed, or we can explain to people upon requests.\nSo the video is also a demonstration of Terraform Engine + CICD, and some part of it not exactly the same as the final deployment steps for FDA (but mostly yes). I previously mentioned in the discussion here https://chat.google.com/u/0/room/AAAAjJldTNg/1EpUQok4lWo but not sure if we want to write a whole paragraph to explain that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416858850", "createdAt": "2020-04-28T19:13:44Z", "author": {"login": "xingao267"}, "path": "Terraform/README.md", "diffHunk": "@@ -1,7 +1,13 @@\n-# FDA MyStudies Terraform Infrastructure\n+# Deploy FDA MyStudies using Terraform\n \n-These directories define the entire GCP infrastructure app to run the FDA\n-MyStudies application.\n+These directories define the entire infrastructure necessary to run FDA MyStudies on Google Cloud.\n+\n+This Terraform deployment is an adaptation of Google Cloud's [HIPAA-aligned architecture](https://cloud.google.com/solutions/architecture-hipaa-aligned-project). This approach to project \n+configuration and deployment is explained in the [\"Setting up a HIPAA-aligned project\"](https://cloud.google.com/solutions/setting-up-a-hipaa-aligned-project) solution guide.\n+\n+This document provides instructions for deploying FDA MyStudies on Google Cloud in using\n+infrastrucutre-as-code in approximately 1 hour. A video tutorial that walks the user through\n+these steps is available upon request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ebc958f6f265b77c7f2c0262740a2262db3f425"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwMTQ3NQ==", "bodyText": "Ack - thanks!", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/244#discussion_r416901475", "createdAt": "2020-04-28T20:28:52Z", "author": {"login": "jkrogers18"}, "path": "Terraform/README.md", "diffHunk": "@@ -1,7 +1,13 @@\n-# FDA MyStudies Terraform Infrastructure\n+# Deploy FDA MyStudies using Terraform\n \n-These directories define the entire GCP infrastructure app to run the FDA\n-MyStudies application.\n+These directories define the entire infrastructure necessary to run FDA MyStudies on Google Cloud.\n+\n+This Terraform deployment is an adaptation of Google Cloud's [HIPAA-aligned architecture](https://cloud.google.com/solutions/architecture-hipaa-aligned-project). This approach to project \n+configuration and deployment is explained in the [\"Setting up a HIPAA-aligned project\"](https://cloud.google.com/solutions/setting-up-a-hipaa-aligned-project) solution guide.\n+\n+This document provides instructions for deploying FDA MyStudies on Google Cloud in using\n+infrastrucutre-as-code in approximately 1 hour. A video tutorial that walks the user through\n+these steps is available upon request.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1ODg1MA=="}, "originalCommit": {"oid": "2ebc958f6f265b77c7f2c0262740a2262db3f425"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1200, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}