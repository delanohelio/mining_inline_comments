{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjI3NTI2", "number": 490, "title": "Integration test for enroll mgmt for remaining api", "bodyText": "Integration test of enroll mgmt bundle for remaining apis", "createdAt": "2020-06-10T18:29:10Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490", "merged": true, "mergeCommit": {"oid": "bab6a941cce76811c89f7645e8f9c89f2268edc2"}, "closed": true, "closedAt": "2020-06-19T15:35:07Z", "author": {"login": "aswinijena100"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp97GEAH2gAyNDMyNjI3NTI2OmY4YWNkOTg0MTFjYmMxZGE1ZjA1MjI3ODc2MWIwYTI5ZjVlMzE0YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs01HnAH2gAyNDMyNjI3NTI2OmFlMjkyOThlNDBmNjg5ZjlkODYyN2RiNjVkZDdmOTAzMDQ5MjEwNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f8acd98411cbc1da5f052278761b0a29f5e314ae", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f8acd98411cbc1da5f052278761b0a29f5e314ae", "committedDate": "2020-06-10T18:25:44Z", "message": "code commit for another set of integration test for enroll mgmt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/432f37811a39c73a26164c26e84331b8d766ddf6", "committedDate": "2020-06-10T18:32:31Z", "message": "Merge branch 'early-access' into early-access-enroll-mgmt-integration-test-change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDI4OTY2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#pullrequestreview-429028966", "createdAt": "2020-06-11T15:27:52Z", "commit": {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNzo1MlrOGiihRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozMTowMVrOGiiteQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MDM0MA==", "bodyText": "Use underscores to separate words.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438870340", "createdAt": "2020-06-11T15:27:52Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MTI2NA==", "bodyText": "Don't add this header if you're going to replace it right afterwards.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438871264", "createdAt": "2020-06-11T15:28:48Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void updateStudyStateFailure() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MTk1NQ==", "bodyText": "You can just reuse the same variable.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438871955", "createdAt": "2020-06-11T15:29:32Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void updateStudyStateFailure() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    // not valid user id\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty studylist\n+    List<StudiesBean> listStudies1 = new ArrayList<StudiesBean>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ==", "bodyText": "Shouldn't there be some assertion on the database to see this change? I'd like to see something added to the rest of these tests that shows we didn't just return OK and not do anything", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438873465", "createdAt": "2020-06-11T15:31:01Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void updateStudyStateFailure() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    // not valid user id\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty studylist\n+    List<StudiesBean> listStudies1 = new ArrayList<StudiesBean>();\n+    requestJson = getStudyStateJson(listStudies1);\n+    headers.set(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void getStudyStateSuccess() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performGet(STUDY_STATE_PATH, headers, Constants.SUCCESS.toUpperCase(), OK);\n+  }\n+\n+  @Test\n+  public void getStudyStateUnauthorizedUserId() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(STUDY_STATE_PATH, headers, \"\", UNAUTHORIZED);\n+  }\n+\n+  @Test\n+  public void withdrawFromStudySuccess() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    String requestJson =\n+        getWithDrawJson(\n+            Constants.PARTICIPANT_ID, Constants.STUDY_ID_OF_PARTICIPANT, Constants.DELETE);\n+    performPost(WITHDRAWFROMSTUDY_PATH, requestJson, headers, Constants.SUCCESS.toUpperCase(), OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bba0abc3de4932be2c2a09dcc8dac9029c2276db", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bba0abc3de4932be2c2a09dcc8dac9029c2276db", "committedDate": "2020-06-13T13:34:11Z", "message": "PR review comments fixes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTA5MTYw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#pullrequestreview-430909160", "createdAt": "2020-06-15T18:55:00Z", "commit": {"oid": "bba0abc3de4932be2c2a09dcc8dac9029c2276db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODo1NTowMFrOGj-qpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODo1NTowMFrOGj-qpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4MDA2OQ==", "bodyText": "else fail the test? You don't expect other studies do you?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r440380069", "createdAt": "2020-06-15T18:55:00Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,171 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.web.servlet.MvcResult;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAW_FROM_STUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+\n+    MvcResult result = performGet(STUDY_STATE_PATH, headers, Constants.SUCCESS.toUpperCase(), OK);\n+    List<Map<String, Object>> studyList =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.studies[*]\");\n+    for (Map<String, Object> studyMap : studyList) {\n+      if (studyMap.get(\"studyId\").equals(Constants.STUDYOF_HEALTH)) {\n+        assertTrue((boolean) studyMap.get(\"bookmarked\").equals(Constants.BOOKMARKED));\n+        assertTrue((int) studyMap.get(\"completion\") == Constants.COMPLETION);\n+        assertTrue((int) studyMap.get(\"adherence\") == Constants.ADHERENCE);\n+        break;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bba0abc3de4932be2c2a09dcc8dac9029c2276db"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78cfb87af8dfc9184a9edec5675dadda3d5e15bf", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/78cfb87af8dfc9184a9edec5675dadda3d5e15bf", "committedDate": "2020-06-16T10:23:40Z", "message": "PR review comment issue fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6428a35750269804fdcbff8f1ac1e4fbb0939fd", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c6428a35750269804fdcbff8f1ac1e4fbb0939fd", "committedDate": "2020-06-19T13:16:35Z", "message": "object mapper used"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTIzNTU3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#pullrequestreview-434123557", "createdAt": "2020-06-19T14:31:14Z", "commit": {"oid": "c6428a35750269804fdcbff8f1ac1e4fbb0939fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae29298e40f689f9d8627db65dd7f90304921067", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ae29298e40f689f9d8627db65dd7f90304921067", "committedDate": "2020-06-19T15:31:50Z", "message": "Merge branch 'early-access' into early-access-enroll-mgmt-integration-test-change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 956, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}