{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzExNjQy", "number": 969, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTozOToyOVrOEjbcuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTozOToyOVrOEjbcuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTg1MzM3OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginControllerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTozOToyOVrOHRxb1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMDo0NFrOHTjspQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM5Nzc4Mg==", "bodyText": "If this is done for all MimeMessage verification it would make sense to move it into verifyMimeMessage() itself, and we can just make the method void", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/969#discussion_r488397782", "createdAt": "2020-09-15T05:39:29Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginControllerTest.java", "diffHunk": "@@ -363,6 +370,24 @@ public void shouldSendAccountLockedEmail() throws Exception {\n     userEntity = userRepository.findByUserId(userResponse.getUserId()).get();\n     assertTrue(\n         UserAccountStatus.ACCOUNT_LOCKED.equals(UserAccountStatus.valueOf(userEntity.getStatus())));\n+\n+    String subject = getMailAccountLockedSubject();\n+    String body =\n+        String.join(\n+            \"<br/>\",\n+            \"This is to inform you that, as a security measure, your user account for MyStudies app\",\n+            \"has been temporarily locked for a period of 15 minutes, due to multiple consecutive failed sign-in\",\n+            \"attempts with incorrect password.\");\n+\n+    MimeMessage mail =\n+        verifyMimeMessage(EMAIL_VALUE, appPropertyConfig.getFromEmail(), subject, body);\n+    verifyDoesNotContain(mail.getContent().toString(), \"@tempPassword@\", \"@appId\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "687ab6b3c038bddec28a8cc933cc12afb172bbd7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2OTg2MQ==", "bodyText": "Temporary password is randomly generated and it's hash value is stored in database. We can't use assertEqual for comparing the MimeMessage mail body for this scenario, this needs to be asserted differently so added verifyDoesNotContain method. Please review and approve the PR.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/969#discussion_r490269861", "createdAt": "2020-09-17T14:00:44Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginControllerTest.java", "diffHunk": "@@ -363,6 +370,24 @@ public void shouldSendAccountLockedEmail() throws Exception {\n     userEntity = userRepository.findByUserId(userResponse.getUserId()).get();\n     assertTrue(\n         UserAccountStatus.ACCOUNT_LOCKED.equals(UserAccountStatus.valueOf(userEntity.getStatus())));\n+\n+    String subject = getMailAccountLockedSubject();\n+    String body =\n+        String.join(\n+            \"<br/>\",\n+            \"This is to inform you that, as a security measure, your user account for MyStudies app\",\n+            \"has been temporarily locked for a period of 15 minutes, due to multiple consecutive failed sign-in\",\n+            \"attempts with incorrect password.\");\n+\n+    MimeMessage mail =\n+        verifyMimeMessage(EMAIL_VALUE, appPropertyConfig.getFromEmail(), subject, body);\n+    verifyDoesNotContain(mail.getContent().toString(), \"@tempPassword@\", \"@appId\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM5Nzc4Mg=="}, "originalCommit": {"oid": "687ab6b3c038bddec28a8cc933cc12afb172bbd7"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2009, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}