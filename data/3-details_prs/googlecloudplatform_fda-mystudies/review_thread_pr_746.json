{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTE5ODUx", "number": 746, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODowNToyOFrOEYLGFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDoyNjo0NVrOEaAOCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzgzMDYwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODowNToyOFrOHAXjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzozMDoyNVrOHA84iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0Nzk1Mw==", "bodyText": "Can you name this something more specific than #template?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470147953", "createdAt": "2020-08-13T18:05:28Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.html", "diffHunk": "@@ -0,0 +1,150 @@\n+<ng-container *ngIf=\"appDetail$ | async as appDetails\">\n+  <section class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+      <div class=\"flex__justify__space-between\">\n+        <div\n+          class=\"subheader__title flex__justify__space-between align__items__baseline\"\n+        >\n+          <div>\n+            <a routerLink=\"/coordinator/apps\">\n+              <img src=\"assets/svgs/back-arrow.svg\" alt=\"go back\" />\n+            </a>\n+          </div>\n+          <div>\n+            <div class=\"mb-xs\">App Participant Registry</div>\n+            <div>\n+              <div class=\"pr-xlg flex__justify__space-between\">\n+                <div class=\"banner__label mr-xs\">\n+                  {{ appDetails.customId }}\n+                  <span class=\"banner__text\">{{ appDetails.name }}</span>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </section>\n+  <section class=\"max__w__1280 m-none site__participant\">\n+    <div class=\"cards1 m-none\">\n+      <table\n+        class=\"table table-striped\"\n+        [mfData]=\"appDetails.participants\"\n+        #mf=\"mfDataTable\"\n+        [mfRowsOnPage]=\"10\"\n+      >\n+        <thead>\n+          <tr>\n+            <span\n+              class=\"sort__by__text mobile__view mr-sm\"\n+              style=\"background: transparent;\"\n+            >\n+              Sort By:\n+            </span>\n+            <th>\n+              <mfDefaultSorter by=\"Email\">Participant Email</mfDefaultSorter>\n+            </th>\n+            <th>\n+              <mfDefaultSorter by=\"Date\">App Registration Date</mfDefaultSorter>\n+            </th>\n+            <th>\n+              <mfDefaultSorter by=\"Status\">App Account Status</mfDefaultSorter>\n+            </th>\n+            <th>\n+              <mfDefaultSorter by=\"Enrolled\">\n+                Number of Studies Enrolled\n+              </mfDefaultSorter>\n+            </th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+          <tr *ngFor=\"let applists of mf.data\">\n+            <td [routerLink]=\"['/coordinator/participant', applists.id]\">\n+              <span class=\"tbl__td__label\">Participant Email:</span>\n+              <span class=\"no_st_en\">{{ applists.email }}</span>\n+            </td>\n+            <td>\n+              <span class=\"tbl__td__label\">App Registration Date:</span>\n+              {{ applists.registrationDate }}\n+            </td>\n+            <td>\n+              <span class=\"tbl__td__label\">App Account Status:</span>\n+              <div\n+                [ngClass]=\"{\n+                  participant__label:\n+                    applists.registrationStatus === statusEnum.Active,\n+                  inactive__text:\n+                    applists.registrationStatus === statusEnum.Inactive\n+                }\"\n+              >\n+                {{ applists.registrationStatus }}\n+              </div>\n+            </td>\n+            <td>\n+              <span class=\"tbl__td__label\">Number of Studies Enrolled:</span>\n+              <span\n+                [class.no_st_en]=\"applists.enrolledStudies.length > 0\"\n+                (click)=\"openModal(template, applists.enrolledStudies)\"\n+              >\n+                {{ applists.enrolledStudies.length }}\n+              </span>\n+            </td>\n+          </tr>\n+        </tbody>\n+        <tfoot>\n+          <tr>\n+            <td colspan=\"4\">\n+              <mfBootstrapPaginator></mfBootstrapPaginator>\n+            </td>\n+          </tr>\n+        </tfoot>\n+      </table>\n+    </div>\n+  </section>\n+</ng-container>\n+\n+<ng-template #template>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1OTU2MQ==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470759561", "createdAt": "2020-08-14T17:30:25Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.html", "diffHunk": "@@ -0,0 +1,150 @@\n+<ng-container *ngIf=\"appDetail$ | async as appDetails\">\n+  <section class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+      <div class=\"flex__justify__space-between\">\n+        <div\n+          class=\"subheader__title flex__justify__space-between align__items__baseline\"\n+        >\n+          <div>\n+            <a routerLink=\"/coordinator/apps\">\n+              <img src=\"assets/svgs/back-arrow.svg\" alt=\"go back\" />\n+            </a>\n+          </div>\n+          <div>\n+            <div class=\"mb-xs\">App Participant Registry</div>\n+            <div>\n+              <div class=\"pr-xlg flex__justify__space-between\">\n+                <div class=\"banner__label mr-xs\">\n+                  {{ appDetails.customId }}\n+                  <span class=\"banner__text\">{{ appDetails.name }}</span>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </section>\n+  <section class=\"max__w__1280 m-none site__participant\">\n+    <div class=\"cards1 m-none\">\n+      <table\n+        class=\"table table-striped\"\n+        [mfData]=\"appDetails.participants\"\n+        #mf=\"mfDataTable\"\n+        [mfRowsOnPage]=\"10\"\n+      >\n+        <thead>\n+          <tr>\n+            <span\n+              class=\"sort__by__text mobile__view mr-sm\"\n+              style=\"background: transparent;\"\n+            >\n+              Sort By:\n+            </span>\n+            <th>\n+              <mfDefaultSorter by=\"Email\">Participant Email</mfDefaultSorter>\n+            </th>\n+            <th>\n+              <mfDefaultSorter by=\"Date\">App Registration Date</mfDefaultSorter>\n+            </th>\n+            <th>\n+              <mfDefaultSorter by=\"Status\">App Account Status</mfDefaultSorter>\n+            </th>\n+            <th>\n+              <mfDefaultSorter by=\"Enrolled\">\n+                Number of Studies Enrolled\n+              </mfDefaultSorter>\n+            </th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+          <tr *ngFor=\"let applists of mf.data\">\n+            <td [routerLink]=\"['/coordinator/participant', applists.id]\">\n+              <span class=\"tbl__td__label\">Participant Email:</span>\n+              <span class=\"no_st_en\">{{ applists.email }}</span>\n+            </td>\n+            <td>\n+              <span class=\"tbl__td__label\">App Registration Date:</span>\n+              {{ applists.registrationDate }}\n+            </td>\n+            <td>\n+              <span class=\"tbl__td__label\">App Account Status:</span>\n+              <div\n+                [ngClass]=\"{\n+                  participant__label:\n+                    applists.registrationStatus === statusEnum.Active,\n+                  inactive__text:\n+                    applists.registrationStatus === statusEnum.Inactive\n+                }\"\n+              >\n+                {{ applists.registrationStatus }}\n+              </div>\n+            </td>\n+            <td>\n+              <span class=\"tbl__td__label\">Number of Studies Enrolled:</span>\n+              <span\n+                [class.no_st_en]=\"applists.enrolledStudies.length > 0\"\n+                (click)=\"openModal(template, applists.enrolledStudies)\"\n+              >\n+                {{ applists.enrolledStudies.length }}\n+              </span>\n+            </td>\n+          </tr>\n+        </tbody>\n+        <tfoot>\n+          <tr>\n+            <td colspan=\"4\">\n+              <mfBootstrapPaginator></mfBootstrapPaginator>\n+            </td>\n+          </tr>\n+        </tfoot>\n+      </table>\n+    </div>\n+  </section>\n+</ng-container>\n+\n+<ng-template #template>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0Nzk1Mw=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg4Nzg3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyMTozMVrOHAYGrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjo1Njo0NlrOHDGFbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1Njk3NA==", "bodyText": "this isn't testing the behaviour of this component, this test is the same as the previous one.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470156974", "createdAt": "2020-08-13T18:21:31Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {ModalModule, BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {AppDetailsComponent} from './app-details.component';\n+import {expectedAppDetails} from '../../../entity/mock-apps-data';\n+import {AppsModule} from '../apps.module';\n+\n+describe('AppDetailsComponent', () => {\n+  let component: AppDetailsComponent;\n+  let fixture: ComponentFixture<AppDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const appDetailsServiceSpy = jasmine.createSpyObj<AppDetailsService>(\n+      'AppDetailsService',\n+      {getAppDetails: of(expectedAppDetails)},\n+    );\n+\n+    await TestBed.configureTestingModule({\n+      declarations: [AppDetailsComponent],\n+      imports: [\n+        RouterTestingModule,\n+        ModalModule.forRoot(),\n+        BrowserAnimationsModule,\n+        AppsModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: AppDetailsService, useValue: appDetailsServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(AppDetailsComponent);\n+        component = fixture.componentInstance;\n+        fixture.detectChanges();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should get apps participants details via refresh function', fakeAsync(() => {\n+    component.appDetail$.subscribe((appDetail) => {\n+      expect(appDetail.participants.length).toEqual(\n+        expectedAppDetails.participants.length,\n+      );\n+    });\n+  }));\n+\n+  it('should get apps participants enrolledStudies details', fakeAsync(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNzQ2OQ==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r473007469", "createdAt": "2020-08-19T12:56:46Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {ModalModule, BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {AppDetailsComponent} from './app-details.component';\n+import {expectedAppDetails} from '../../../entity/mock-apps-data';\n+import {AppsModule} from '../apps.module';\n+\n+describe('AppDetailsComponent', () => {\n+  let component: AppDetailsComponent;\n+  let fixture: ComponentFixture<AppDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const appDetailsServiceSpy = jasmine.createSpyObj<AppDetailsService>(\n+      'AppDetailsService',\n+      {getAppDetails: of(expectedAppDetails)},\n+    );\n+\n+    await TestBed.configureTestingModule({\n+      declarations: [AppDetailsComponent],\n+      imports: [\n+        RouterTestingModule,\n+        ModalModule.forRoot(),\n+        BrowserAnimationsModule,\n+        AppsModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: AppDetailsService, useValue: appDetailsServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(AppDetailsComponent);\n+        component = fixture.componentInstance;\n+        fixture.detectChanges();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should get apps participants details via refresh function', fakeAsync(() => {\n+    component.appDetail$.subscribe((appDetail) => {\n+      expect(appDetail.participants.length).toEqual(\n+        expectedAppDetails.participants.length,\n+      );\n+    });\n+  }));\n+\n+  it('should get apps participants enrolledStudies details', fakeAsync(() => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1Njk3NA=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg4ODQzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyMTo0MFrOHAYHAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjo1Njo1NlrOHDGF3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NzA1OQ==", "bodyText": "what about the filter functionality?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470157059", "createdAt": "2020-08-13T18:21:40Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {ModalModule, BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {AppDetailsComponent} from './app-details.component';\n+import {expectedAppDetails} from '../../../entity/mock-apps-data';\n+import {AppsModule} from '../apps.module';\n+\n+describe('AppDetailsComponent', () => {\n+  let component: AppDetailsComponent;\n+  let fixture: ComponentFixture<AppDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const appDetailsServiceSpy = jasmine.createSpyObj<AppDetailsService>(\n+      'AppDetailsService',\n+      {getAppDetails: of(expectedAppDetails)},\n+    );\n+\n+    await TestBed.configureTestingModule({\n+      declarations: [AppDetailsComponent],\n+      imports: [\n+        RouterTestingModule,\n+        ModalModule.forRoot(),\n+        BrowserAnimationsModule,\n+        AppsModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: AppDetailsService, useValue: appDetailsServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(AppDetailsComponent);\n+        component = fixture.componentInstance;\n+        fixture.detectChanges();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should get apps participants details via refresh function', fakeAsync(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNzU4MQ==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r473007581", "createdAt": "2020-08-19T12:56:56Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {ModalModule, BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {AppDetailsComponent} from './app-details.component';\n+import {expectedAppDetails} from '../../../entity/mock-apps-data';\n+import {AppsModule} from '../apps.module';\n+\n+describe('AppDetailsComponent', () => {\n+  let component: AppDetailsComponent;\n+  let fixture: ComponentFixture<AppDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const appDetailsServiceSpy = jasmine.createSpyObj<AppDetailsService>(\n+      'AppDetailsService',\n+      {getAppDetails: of(expectedAppDetails)},\n+    );\n+\n+    await TestBed.configureTestingModule({\n+      declarations: [AppDetailsComponent],\n+      imports: [\n+        RouterTestingModule,\n+        ModalModule.forRoot(),\n+        BrowserAnimationsModule,\n+        AppsModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: AppDetailsService, useValue: appDetailsServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(AppDetailsComponent);\n+        component = fixture.componentInstance;\n+        fixture.detectChanges();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should get apps participants details via refresh function', fakeAsync(() => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NzA1OQ=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg5MjYzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyMzowN1rOHAYJuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzozMDoxM1rOHA84HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1Nzc1Mg==", "bodyText": "[] === [] isn't true, so this statement will always be true. Use length to check for empty lists, or just remove the check and make your modal work on empty lists.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470157752", "createdAt": "2020-08-13T18:23:07Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {\n+    this.enrolledStudies = enrollStudies;\n+    if (enrollStudies !== []) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1OTQ1Mg==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470759452", "createdAt": "2020-08-14T17:30:13Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {\n+    this.enrolledStudies = enrollStudies;\n+    if (enrollStudies !== []) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1Nzc1Mg=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg5NTQwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyMzo1OVrOHAYLdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzozMDowNlrOHA836Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1ODE5OQ==", "bodyText": "enrolledStudies", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470158199", "createdAt": "2020-08-13T18:23:59Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1OTQwMQ==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470759401", "createdAt": "2020-08-14T17:30:06Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1ODE5OQ=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg5NjU0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyNDoyMVrOHAYMMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoyOTo1M1rOHA83dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1ODM4NA==", "bodyText": "params.appId", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470158384", "createdAt": "2020-08-13T18:24:21Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {\n+    this.enrolledStudies = enrollStudies;\n+    if (enrollStudies !== []) {\n+      this.modalRef = this.modalService.show(template);\n+    }\n+  }\n+\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['appId']) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1OTI4NA==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470759284", "createdAt": "2020-08-14T17:29:53Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {\n+    this.enrolledStudies = enrollStudies;\n+    if (enrollStudies !== []) {\n+      this.modalRef = this.modalService.show(template);\n+    }\n+  }\n+\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['appId']) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1ODM4NA=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg5OTU0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyNTowOVrOHAYN2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoyOTo0NlrOHA83Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1ODgwOQ==", "bodyText": "This function should start with a verb, like fetch", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470158809", "createdAt": "2020-08-13T18:25:09Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {\n+    this.enrolledStudies = enrollStudies;\n+    if (enrollStudies !== []) {\n+      this.modalRef = this.modalService.show(template);\n+    }\n+  }\n+\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['appId']) {\n+          this.appId = params.appId as string;\n+        }\n+        this.appParticipantsDetails();\n+      }),\n+    );\n+  }\n+\n+  appParticipantsDetails(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1OTIyNw==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470759227", "createdAt": "2020-08-14T17:29:46Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];\n+  statusEnum = Status;\n+\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly appDetailsService: AppDetailsService,\n+    private readonly route: ActivatedRoute,\n+  ) {\n+    super();\n+  }\n+\n+  openModal(template: TemplateRef<unknown>, enrollStudies: EnrolledStudy[]) {\n+    this.enrolledStudies = enrollStudies;\n+    if (enrollStudies !== []) {\n+      this.modalRef = this.modalService.show(template);\n+    }\n+  }\n+\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['appId']) {\n+          this.appId = params.appId as string;\n+        }\n+        this.appParticipantsDetails();\n+      }),\n+    );\n+  }\n+\n+  appParticipantsDetails(): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1ODgwOQ=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzkwMjY1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyNjowNVrOHAYP3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxOTowNTowOFrOHBAWPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1OTMyNw==", "bodyText": "This is never used", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470159327", "createdAt": "2020-08-13T18:26:05Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1OTAzNw==", "bodyText": "It is used inside the template to display data .", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470759037", "createdAt": "2020-08-14T17:29:26Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1OTMyNw=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgxNjMxNw==", "bodyText": "I see. I only noticed applists.enrolledStudies the first time.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470816317", "createdAt": "2020-08-14T19:05:08Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.ts", "diffHunk": "@@ -0,0 +1,69 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {AppDetailsService} from '../shared/app-details.service';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute} from '@angular/router';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {AppDetails, Participant, EnrolledStudy} from '../shared/app-details';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {map} from 'rxjs/operators';\n+import {Status} from 'src/app/shared/enums';\n+\n+@Component({\n+  selector: 'app-app-details',\n+  templateUrl: './app-details.component.html',\n+  styleUrls: ['./app-details.component.scss'],\n+})\n+export class AppDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  appId = '';\n+  query$ = new BehaviorSubject('');\n+  appDetail$: Observable<AppDetails> = of();\n+  enrolledStudies: EnrolledStudy[] = [];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1OTMyNw=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzkwNzQ3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyNzozNlrOHAYS7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjo1NzowNVrOHDGGXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDExMA==", "bodyText": "Use encodeURIComponent when building URLs", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470160110", "createdAt": "2020-08-13T18:27:36Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {AppDetails} from './app-details';\n+import {EntityService} from 'src/app/service/entity.service';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class AppDetailsService {\n+  constructor(private readonly entityService: EntityService<AppDetails>) {}\n+\n+  getAppDetails(appId: string): Observable<AppDetails> {\n+    return this.entityService.get(`apps/${appId}/participants`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1ODg3Ng==", "bodyText": "We tried in two ways\n\nIn App.details.service.ts\n\nreturn this.entityService.get(\nencodeURIComponent(apps/${appId}/participants),\n);\nAnd same way in EntityService.ts file\nget(urlpath: string): Observable {\nconst serviceUrl = Location.joinWithSlash(this.baseUrl, decodeURIComponent(urlpath));\nreturn this.http.get(serviceUrl);\n}\n\nSecond method is\nin App-details.service.ts file\n\nreturn this.http.get(\nencodeURIComponent(${environment.baseUrl}/apps/${appId}/participants),\n);\nWhich method is to go with?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470758876", "createdAt": "2020-08-14T17:29:06Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {AppDetails} from './app-details';\n+import {EntityService} from 'src/app/service/entity.service';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class AppDetailsService {\n+  constructor(private readonly entityService: EntityService<AppDetails>) {}\n+\n+  getAppDetails(appId: string): Observable<AppDetails> {\n+    return this.entityService.get(`apps/${appId}/participants`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDExMA=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgxNTIxNQ==", "bodyText": "Both of these methods won't work because a URI component specifically doesn't have slashes. The intention is only to encode the appId so if it has a slash, ?, etc it won't mess up the URL. So you just need to do\nreturn this.entityService.get(`apps/${encodeURIComponent(appId)}/participants`);", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470815215", "createdAt": "2020-08-14T19:02:29Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {AppDetails} from './app-details';\n+import {EntityService} from 'src/app/service/entity.service';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class AppDetailsService {\n+  constructor(private readonly entityService: EntityService<AppDetails>) {}\n+\n+  getAppDetails(appId: string): Observable<AppDetails> {\n+    return this.entityService.get(`apps/${appId}/participants`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDExMA=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNzcwOA==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r473007708", "createdAt": "2020-08-19T12:57:05Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {AppDetails} from './app-details';\n+import {EntityService} from 'src/app/service/entity.service';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class AppDetailsService {\n+  constructor(private readonly entityService: EntityService<AppDetails>) {}\n+\n+  getAppDetails(appId: string): Observable<AppDetails> {\n+    return this.entityService.get(`apps/${appId}/participants`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDExMA=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzkwOTIwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyODowN1rOHAYT-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoyNTo0N1rOHA8vIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDM3Ng==", "bodyText": "Enrollment", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470160376", "createdAt": "2020-08-13T18:28:07Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.ts", "diffHunk": "@@ -0,0 +1,48 @@\n+export interface AppDetails {\n+  appId: string;\n+  customId: string;\n+  name: string;\n+  participants: Participant[];\n+  status: number;\n+  message: string;\n+  code: string;\n+}\n+\n+export interface Participant {\n+  email: string;\n+  userDetailsId: string;\n+  registrationStatus: string;\n+  registrationDate: string;\n+  enrolledStudies: EnrolledStudy[];\n+  enrollments: Enrollments[];\n+  consentHistory: Consent[];\n+}\n+\n+export interface EnrolledStudy {\n+  studyId: string;\n+  customStudyId: string;\n+  studyName: string;\n+  sites: Site[];\n+}\n+\n+export interface Site {\n+  siteId: string;\n+  customSiteId: string;\n+  siteName: string;\n+  enrollmentDate: string;\n+  withdrawlDate: string;\n+  siteStatus?: string;\n+}\n+export interface Consent {\n+  id: string;\n+  consentVersion: string;\n+  consentedDate: string;\n+  consentDocumentPath: string;\n+  dataSharingPermissions: string;\n+}\n+export interface Enrollments {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NzE1NA==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470757154", "createdAt": "2020-08-14T17:25:47Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.ts", "diffHunk": "@@ -0,0 +1,48 @@\n+export interface AppDetails {\n+  appId: string;\n+  customId: string;\n+  name: string;\n+  participants: Participant[];\n+  status: number;\n+  message: string;\n+  code: string;\n+}\n+\n+export interface Participant {\n+  email: string;\n+  userDetailsId: string;\n+  registrationStatus: string;\n+  registrationDate: string;\n+  enrolledStudies: EnrolledStudy[];\n+  enrollments: Enrollments[];\n+  consentHistory: Consent[];\n+}\n+\n+export interface EnrolledStudy {\n+  studyId: string;\n+  customStudyId: string;\n+  studyName: string;\n+  sites: Site[];\n+}\n+\n+export interface Site {\n+  siteId: string;\n+  customSiteId: string;\n+  siteName: string;\n+  enrollmentDate: string;\n+  withdrawlDate: string;\n+  siteStatus?: string;\n+}\n+export interface Consent {\n+  id: string;\n+  consentVersion: string;\n+  consentedDate: string;\n+  consentDocumentPath: string;\n+  dataSharingPermissions: string;\n+}\n+export interface Enrollments {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDM3Ng=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzkxMTM3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoyODo1MFrOHAYVag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzoyNTo0MFrOHA8uyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDc0Ng==", "bodyText": "get. The is the AppDetails service, so the AppDetails part is implied.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470160746", "createdAt": "2020-08-13T18:28:50Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {AppDetails} from './app-details';\n+import {EntityService} from 'src/app/service/entity.service';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class AppDetailsService {\n+  constructor(private readonly entityService: EntityService<AppDetails>) {}\n+\n+  getAppDetails(appId: string): Observable<AppDetails> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NzA2Nw==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r470757067", "createdAt": "2020-08-14T17:25:40Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/app-details.service.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {AppDetails} from './app-details';\n+import {EntityService} from 'src/app/service/entity.service';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class AppDetailsService {\n+  constructor(private readonly entityService: EntityService<AppDetails>) {}\n+\n+  getAppDetails(appId: string): Observable<AppDetails> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2MDc0Ng=="}, "originalCommit": {"oid": "e3710e3227ad7fc6f323d6b3cdcbd6927a7aed41"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NzAyMDI3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDoyNjo0NVrOHDJ_iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMDowMVrOHDQ68A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA3MTQ5Nw==", "bodyText": "I bring this up fairly often, don't spy on the component that you're testing. And adding callThrough does nothing", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r473071497", "createdAt": "2020-08-19T14:26:45Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "diffHunk": "@@ -66,10 +69,12 @@ describe('AppDetailsComponent', () => {\n   }));\n \n   it('should get apps participants enrolledStudies details', fakeAsync(() => {\n+    spyOn(component, 'search').and.callThrough();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1437b1dbafb579e7f5524acb8e9147541af565"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE4NTAwOA==", "bodyText": "Sorry  will take care of this in future.Now i have removed that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/746#discussion_r473185008", "createdAt": "2020-08-19T17:00:01Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-details/app-details.component.spec.ts", "diffHunk": "@@ -66,10 +69,12 @@ describe('AppDetailsComponent', () => {\n   }));\n \n   it('should get apps participants enrolledStudies details', fakeAsync(() => {\n+    spyOn(component, 'search').and.callThrough();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA3MTQ5Nw=="}, "originalCommit": {"oid": "ea1437b1dbafb579e7f5524acb8e9147541af565"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2122, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}