{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODM5MDQ0", "number": 269, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzozNDowOVrOD3uwKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo0NDo0NlrOD3u_TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzY0MjY2OnYy", "diffSide": "RIGHT", "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzozNDowOVrOGOJnpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMjozNFrOGOO42w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5MDg1NA==", "bodyText": "can you explain why we need this case?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/269#discussion_r417490854", "createdAt": "2020-04-29T17:34:09Z", "author": {"login": "zohrehj"}, "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "diffHunk": "@@ -160,12 +160,46 @@ private void processActivityResponses(\n         plugInMetadataToResponses(activityMetadataBeanFromWCP, responseBean, false);\n       }\n     }\n+    if (scoreSumResponseBean == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac92b4a358474e23917ff909336c62469111335"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUwMTkyMQ==", "bodyText": "i.e. what's the scenario where dummy sum question has been added to the questionnaire but the response is not found in the loop above.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/269#discussion_r417501921", "createdAt": "2020-04-29T17:51:57Z", "author": {"login": "zohrehj"}, "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "diffHunk": "@@ -160,12 +160,46 @@ private void processActivityResponses(\n         plugInMetadataToResponses(activityMetadataBeanFromWCP, responseBean, false);\n       }\n     }\n+    if (scoreSumResponseBean == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5MDg1NA=="}, "originalCommit": {"oid": "0ac92b4a358474e23917ff909336c62469111335"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzE3OQ==", "bodyText": "Added comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/269#discussion_r417577179", "createdAt": "2020-04-29T20:02:34Z", "author": {"login": "kuoyuchi"}, "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "diffHunk": "@@ -160,12 +160,46 @@ private void processActivityResponses(\n         plugInMetadataToResponses(activityMetadataBeanFromWCP, responseBean, false);\n       }\n     }\n+    if (scoreSumResponseBean == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5MDg1NA=="}, "originalCommit": {"oid": "0ac92b4a358474e23917ff909336c62469111335"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzY4MTQxOnYy", "diffSide": "RIGHT", "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo0NDo0NlrOGOKA0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMjozN1rOGOO47w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5NzI5Ng==", "bodyText": "this would overwrite the responseBean if there are multiple matches found.\nSo it clearly expects only a single match; so maybe the method should fail if there are in fact more than a single match?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/269#discussion_r417497296", "createdAt": "2020-04-29T17:44:46Z", "author": {"login": "zohrehj"}, "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "diffHunk": "@@ -160,12 +160,46 @@ private void processActivityResponses(\n         plugInMetadataToResponses(activityMetadataBeanFromWCP, responseBean, false);\n       }\n     }\n+    if (scoreSumResponseBean == null) {\n+      // Try to create a response for the dummy sum question by copying from metadata.\n+      scoreSumResponseBean =\n+          maybeCreateDummySumResponseFromMetadata(activityMetadataBeanFromWCP);\n+      if (scoreSumResponseBean != null) {\n+        // If copying is successful, add it to the list of responses.\n+        questionnaireResponses.add(scoreSumResponseBean);\n+      }\n+    }\n     if (scoreSumResponseBean != null) {\n       // Iterate through responses for a second pass to calculate the score sum if the dummy sum question presents.\n       calculateScoreSum(questionnaireResponses,scoreSumResponseBean);\n     }\n   }\n \n+  // Returns an empty response with metadata copied from the dummy sum question, or null if the dummy sum question is not found in metadata.\n+  private static QuestionnaireActivityStepsBean maybeCreateDummySumResponseFromMetadata(\n+      List<QuestionnaireActivityStepsBean> activityMetadataBeanFromWCP) {\n+    List<QuestionnaireActivityStepsBean> metadataMatchList = \n+          activityMetadataBeanFromWCP\n+              .stream()\n+              .filter(QuestionnaireActivityStepsBeanPredicate.questionKeyMatch(\n+                  AppConstants.DUMMY_SUM_QUESTION_KEY))\n+              .collect(Collectors.<QuestionnaireActivityStepsBean>toList());\n+    // Return null if dummy sum question is not found from metadata.\n+    if (metadataMatchList == null || metadataMatchList.isEmpty()) return null;\n+    // Otherwise, create a new entry and copy contents from metadata.\n+    QuestionnaireActivityStepsBean responseBean = new QuestionnaireActivityStepsBean();\n+    for (QuestionnaireActivityStepsBean metadataMatchBean : metadataMatchList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac92b4a358474e23917ff909336c62469111335"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzE5OQ==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/269#discussion_r417577199", "createdAt": "2020-04-29T20:02:37Z", "author": {"login": "kuoyuchi"}, "path": "response-server-ws/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ActivityResponseProcessorServiceImpl.java", "diffHunk": "@@ -160,12 +160,46 @@ private void processActivityResponses(\n         plugInMetadataToResponses(activityMetadataBeanFromWCP, responseBean, false);\n       }\n     }\n+    if (scoreSumResponseBean == null) {\n+      // Try to create a response for the dummy sum question by copying from metadata.\n+      scoreSumResponseBean =\n+          maybeCreateDummySumResponseFromMetadata(activityMetadataBeanFromWCP);\n+      if (scoreSumResponseBean != null) {\n+        // If copying is successful, add it to the list of responses.\n+        questionnaireResponses.add(scoreSumResponseBean);\n+      }\n+    }\n     if (scoreSumResponseBean != null) {\n       // Iterate through responses for a second pass to calculate the score sum if the dummy sum question presents.\n       calculateScoreSum(questionnaireResponses,scoreSumResponseBean);\n     }\n   }\n \n+  // Returns an empty response with metadata copied from the dummy sum question, or null if the dummy sum question is not found in metadata.\n+  private static QuestionnaireActivityStepsBean maybeCreateDummySumResponseFromMetadata(\n+      List<QuestionnaireActivityStepsBean> activityMetadataBeanFromWCP) {\n+    List<QuestionnaireActivityStepsBean> metadataMatchList = \n+          activityMetadataBeanFromWCP\n+              .stream()\n+              .filter(QuestionnaireActivityStepsBeanPredicate.questionKeyMatch(\n+                  AppConstants.DUMMY_SUM_QUESTION_KEY))\n+              .collect(Collectors.<QuestionnaireActivityStepsBean>toList());\n+    // Return null if dummy sum question is not found from metadata.\n+    if (metadataMatchList == null || metadataMatchList.isEmpty()) return null;\n+    // Otherwise, create a new entry and copy contents from metadata.\n+    QuestionnaireActivityStepsBean responseBean = new QuestionnaireActivityStepsBean();\n+    for (QuestionnaireActivityStepsBean metadataMatchBean : metadataMatchList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5NzI5Ng=="}, "originalCommit": {"oid": "0ac92b4a358474e23917ff909336c62469111335"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1219, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}