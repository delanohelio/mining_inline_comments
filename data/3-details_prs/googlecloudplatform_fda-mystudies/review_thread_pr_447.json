{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTcyODM2", "number": 447, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1Nzo0MlrOEDhGDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNTozN1rOEEct1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTIzNDA3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1Nzo0MlrOGglJdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNTozN1rOGiBRFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjI0Nw==", "bodyText": "This file should be named data.service.ts.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436816247", "createdAt": "2020-06-08T15:57:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTUyNw==", "bodyText": "Changed the file name to entity.service.ts", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325527", "createdAt": "2020-06-10T18:25:37Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjI0Nw=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTI4NDE1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowOToxNlrOGglohA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNTozMlrOGiBQ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDE5Ng==", "bodyText": "Unused", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436824196", "createdAt": "2020-06-08T16:09:16Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTQ4OQ==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325489", "createdAt": "2020-06-10T18:25:32Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDE5Ng=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTU0NzQ3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzoxNToyM1rOGgoKNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNToyOFrOGiBQzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTU5MQ==", "bodyText": "If this is going to be a \"base\" for all other entity services you should call it something like EntityService (data is too general). Also, this service should be generic, not use any.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436865591", "createdAt": "2020-06-08T17:15:23Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTQ1NA==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325454", "createdAt": "2020-06-10T18:25:28Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTU5MQ=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTU2NzcxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzoyMDoxMlrOGgoWHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNToxOVrOGiBQeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2ODYzOQ==", "bodyText": "This should also be done with an HttpInterceptor. In fact, you probably don't even need this service.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436868639", "createdAt": "2020-06-08T17:20:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTM3MA==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325370", "createdAt": "2020-06-10T18:25:19Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2ODYzOQ=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTU3MTIxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzoyMDo1N1rOGgoYEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNToxMFrOGiBP_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTEzNg==", "bodyText": "This can be done with an https://angular.io/api/common/http/HttpInterceptor", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436869136", "createdAt": "2020-06-08T17:20:57Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTI0NQ==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325245", "createdAt": "2020-06-10T18:25:10Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTEzNg=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTU3NTY2OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzoyMTo1MVrOGgoamw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNTowM1rOGiBPwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTc4Nw==", "bodyText": "These methods names are overly verbose. get(...) is sufficient.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436869787", "createdAt": "2020-06-08T17:21:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTE4NA==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325184", "createdAt": "2020-06-10T18:25:03Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTc4Nw=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTU3NzExOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzoyMjowOFrOGgobdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNDo1NlrOGiBPcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3MDAwNw==", "bodyText": "remove", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436870007", "createdAt": "2020-06-08T17:22:08Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTEwNw==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325107", "createdAt": "2020-06-10T18:24:56Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3MDAwNw=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTYzNzczOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozNjo1MVrOGgpAWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNDo0OVrOGiBPNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTQ0OQ==", "bodyText": "All of these should be added by default by HttpClient.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436879449", "createdAt": "2020-06-08T17:36:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTA0Nw==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325047", "createdAt": "2020-06-10T18:24:49Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTQ0OQ=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTY0NDAyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozODo0N1rOGgpEgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNDozOVrOGiBO2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDUxMw==", "bodyText": "Prefer Location.joinWithSlash", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436880513", "createdAt": "2020-06-08T17:38:47Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNDk1Mg==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438324952", "createdAt": "2020-06-10T18:24:39Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDUxMw=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTY0NDYxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/dataService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozODo1OVrOGgpE4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoyNDozMFrOGiBOiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDYxMQ==", "bodyText": "unneeded.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436880611", "createdAt": "2020-06-08T17:38:59Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.delete(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpPutRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+\n+    return this.http.put<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  prepareHeadrers(headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNDg3NQ==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438324875", "createdAt": "2020-06-10T18:24:30Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.delete(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpPutRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+\n+    return this.http.put<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  prepareHeadrers(headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDYxMQ=="}, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk2MTQ0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxMjowM1rOGiEqYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyMjowNVrOGjB-Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw==", "bodyText": "What purpose does this serve?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438381153", "createdAt": "2020-06-10T20:12:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {\n+  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n+} from '@angular/common/http';\n+\n+import {Observable} from 'rxjs';\n+\n+@Injectable()\n+export class NoopInterceptor implements HttpInterceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMzU0OQ==", "bodyText": "Wen we generated the interceptor automatically the Noopinterceptor is added.Here is a do-nothing noop interceptor that simply passes the request through without touching it.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438903549", "createdAt": "2020-06-11T16:07:55Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {\n+  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n+} from '@angular/common/http';\n+\n+import {Observable} from 'rxjs';\n+\n+@Injectable()\n+export class NoopInterceptor implements HttpInterceptor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NzU1OQ==", "bodyText": "Please remove.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438947559", "createdAt": "2020-06-11T17:22:44Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {\n+  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n+} from '@angular/common/http';\n+\n+import {Observable} from 'rxjs';\n+\n+@Injectable()\n+export class NoopInterceptor implements HttpInterceptor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NTYxOA==", "bodyText": "Removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439385618", "createdAt": "2020-06-12T12:22:05Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {\n+  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n+} from '@angular/common/http';\n+\n+import {Observable} from 'rxjs';\n+\n+@Injectable()\n+export class NoopInterceptor implements HttpInterceptor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk2MjgxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxMjozMlrOGiErSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1NjoxNVrOGi_0dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA==", "bodyText": "This is already set by the framework", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438381384", "createdAt": "2020-06-10T20:12:32Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import {AuthService} from '../service/auth.service';\n+import {Injectable} from '@angular/core';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {\n+  HttpInterceptor,\n+  HttpHandler,\n+  HttpRequest,\n+} from '@angular/common/http';\n+import {finalize} from 'rxjs/operators';\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  constructor(private auth: AuthService, private spinner: NgxSpinnerService) {}\n+\n+  intercept(req: HttpRequest<any>, next: HttpHandler) {\n+    this.spinner.show();\n+    const userId = this.auth.getUserId();\n+    const authUserId = this.auth.getAuthUserId();\n+    const authToken = this.auth.getAuthorizationToken();\n+    if (userId != null && authUserId != null && authToken != null) {\n+      const headers = req.headers\n+          .set('Content-Type', 'application/json')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNzE5Ng==", "bodyText": "Yes.But when we tested in our code we are getting errors related to that content type so we have included that in the header.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438907196", "createdAt": "2020-06-11T16:13:44Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import {AuthService} from '../service/auth.service';\n+import {Injectable} from '@angular/core';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {\n+  HttpInterceptor,\n+  HttpHandler,\n+  HttpRequest,\n+} from '@angular/common/http';\n+import {finalize} from 'rxjs/operators';\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  constructor(private auth: AuthService, private spinner: NgxSpinnerService) {}\n+\n+  intercept(req: HttpRequest<any>, next: HttpHandler) {\n+    this.spinner.show();\n+    const userId = this.auth.getUserId();\n+    const authUserId = this.auth.getAuthUserId();\n+    const authToken = this.auth.getAuthorizationToken();\n+    if (userId != null && authUserId != null && authToken != null) {\n+      const headers = req.headers\n+          .set('Content-Type', 'application/json')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0ODI4OA==", "bodyText": "Can you elaborate on the error? Something else is probably going wrong.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438948288", "createdAt": "2020-06-11T17:23:57Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import {AuthService} from '../service/auth.service';\n+import {Injectable} from '@angular/core';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {\n+  HttpInterceptor,\n+  HttpHandler,\n+  HttpRequest,\n+} from '@angular/common/http';\n+import {finalize} from 'rxjs/operators';\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  constructor(private auth: AuthService, private spinner: NgxSpinnerService) {}\n+\n+  intercept(req: HttpRequest<any>, next: HttpHandler) {\n+    this.spinner.show();\n+    const userId = this.auth.getUserId();\n+    const authUserId = this.auth.getAuthUserId();\n+    const authToken = this.auth.getAuthorizationToken();\n+    if (userId != null && authUserId != null && authToken != null) {\n+      const headers = req.headers\n+          .set('Content-Type', 'application/json')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1MDM5MA==", "bodyText": "This is the error we are getting in HTTP POST/PUT request\nerror: \"Unsupported Media Type\"\nmessage: \"Content type 'text/plain;charset=UTF-8' not supported\"\npath: \"/urwebappws/locations\"\nstatus: 415", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439350390", "createdAt": "2020-06-12T10:56:15Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import {AuthService} from '../service/auth.service';\n+import {Injectable} from '@angular/core';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {\n+  HttpInterceptor,\n+  HttpHandler,\n+  HttpRequest,\n+} from '@angular/common/http';\n+import {finalize} from 'rxjs/operators';\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  constructor(private auth: AuthService, private spinner: NgxSpinnerService) {}\n+\n+  intercept(req: HttpRequest<any>, next: HttpHandler) {\n+    this.spinner.show();\n+    const userId = this.auth.getUserId();\n+    const authUserId = this.auth.getAuthUserId();\n+    const authToken = this.auth.getAuthorizationToken();\n+    if (userId != null && authUserId != null && authToken != null) {\n+      const headers = req.headers\n+          .set('Content-Type', 'application/json')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk2Nzg1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/app.module.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxNDoxOVrOGiEulw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMTo0MlrOGjCOYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ==", "bodyText": "index is only used in certain circumstances. Use a different name.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438382231", "createdAt": "2020-06-10T20:14:19Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/app.module.ts", "diffHunk": "@@ -1,11 +1,14 @@\n import {BrowserModule} from '@angular/platform-browser';\n import {NgModule} from '@angular/core';\n import {AppComponent} from './app.component';\n-import {DataService} from './service/dataService';\n+import {EntityService} from './service/entity.service';\n+import {AuthService} from '../app/service/auth.service';\n+import {httpInterceptorProviders} from './http-interceptors/index';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNjAyMg==", "bodyText": "While including the http-interceptor that will default  include index.ts .We have updated with different name.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438906022", "createdAt": "2020-06-11T16:11:54Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/app.module.ts", "diffHunk": "@@ -1,11 +1,14 @@\n import {BrowserModule} from '@angular/platform-browser';\n import {NgModule} from '@angular/core';\n import {AppComponent} from './app.component';\n-import {DataService} from './service/dataService';\n+import {EntityService} from './service/entity.service';\n+import {AuthService} from '../app/service/auth.service';\n+import {httpInterceptorProviders} from './http-interceptors/index';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0OTUwOQ==", "bodyText": "My apologies. Index should be used, but you don't need to add it to the end of the file path (which is why I was confused). Please go back to index, but just import from './http-interceptors';", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438949509", "createdAt": "2020-06-11T17:26:05Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/app.module.ts", "diffHunk": "@@ -1,11 +1,14 @@\n import {BrowserModule} from '@angular/platform-browser';\n import {NgModule} from '@angular/core';\n import {AppComponent} from './app.component';\n-import {DataService} from './service/dataService';\n+import {EntityService} from './service/entity.service';\n+import {AuthService} from '../app/service/auth.service';\n+import {httpInterceptorProviders} from './http-interceptors/index';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTc5NA==", "bodyText": "Reverted back to Index.According to your comment we changed this import from './http-interceptors'; but buid is failing in github.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439389794", "createdAt": "2020-06-12T12:31:42Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/app.module.ts", "diffHunk": "@@ -1,11 +1,14 @@\n import {BrowserModule} from '@angular/platform-browser';\n import {NgModule} from '@angular/core';\n import {AppComponent} from './app.component';\n-import {DataService} from './service/dataService';\n+import {EntityService} from './service/entity.service';\n+import {AuthService} from '../app/service/auth.service';\n+import {httpInterceptorProviders} from './http-interceptors/index';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk4MjA1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/auth.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxOToxMlrOGiE3xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjowNTozNlrOGikdZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDU4MQ==", "bodyText": "duplicate code", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438384581", "createdAt": "2020-06-10T20:19:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMjExNg==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438902116", "createdAt": "2020-06-11T16:05:36Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDU4MQ=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk4MjMyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/auth.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxOToxN1rOGiE37w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjowNToyOVrOGikdHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDYyMw==", "bodyText": "duplicate code", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438384623", "createdAt": "2020-06-10T20:19:17Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {\n+    this.userId = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.userId = this.user.id.toString();\n+    }\n+    return this.userId;\n+  }\n+\n+  getAuthUserId(): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMjA0Nw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438902047", "createdAt": "2020-06-11T16:05:29Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {\n+    this.userId = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.userId = this.user.id.toString();\n+    }\n+    return this.userId;\n+  }\n+\n+  getAuthUserId(): string {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDYyMw=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk5NzczOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/auth.service.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNDowMlrOGiFBag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMTo1N1rOGjCOxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA==", "bodyText": "Instead of returning undefined here, add a method that returns if the user is logged in. Then use a canActivate guard to make sure that the user is always logged in when these methods are called.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387050", "createdAt": "2020-06-10T20:24:02Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMTk0Mw==", "bodyText": "Thanks for the suggestion.We will look in to this point while releasing the auth-guard PR", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438901943", "createdAt": "2020-06-11T16:05:19Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MDQwMQ==", "bodyText": "I won't be accepting code that is going to be changed later if it doesn't do anything now. Please remove this service from this PR then.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438950401", "createdAt": "2020-06-11T17:27:39Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTg5Mw==", "bodyText": "Removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439389893", "createdAt": "2020-06-12T12:31:57Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk5ODYyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/auth.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNDoxOFrOGiFB8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjowNDowNFrOGikZuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzE4Ng==", "bodyText": "Don't construct a user if we don't have one.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387186", "createdAt": "2020-06-10T20:24:18Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMTE3OQ==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438901179", "createdAt": "2020-06-11T16:04:04Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzE4Ng=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAwMTAzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/auth.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNTowOFrOGiFDjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjowMzo0NFrOGikY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzU5Ng==", "bodyText": "you're not using these properties, you just overwrite them every time the methods are called.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387596", "createdAt": "2020-06-10T20:25:08Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMDk3Nw==", "bodyText": "updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438900977", "createdAt": "2020-06-11T16:03:44Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzU5Ng=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAwMjQ1OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/entity.service.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNTozN1rOGiFEeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMjoxMFrOGjCPIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg==", "bodyText": "Don't use any.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387832", "createdAt": "2020-06-10T20:25:37Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {Location} from '@angular/common';\n+\n+@Injectable()\n+export class EntityService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  serviceUrl: string = '';\n+  constructor(private http: HttpClient) {}\n+\n+  post(bodydata: any, urlpath: string): Observable<any> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMDY5Nw==", "bodyText": "Since this method is getting called from overall the project for adding/updating the data.We do not know the type of body data.(For ex. addlocation,addsites,updateuser etc is calling the same method)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438900697", "createdAt": "2020-06-11T16:03:15Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {Location} from '@angular/common';\n+\n+@Injectable()\n+export class EntityService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  serviceUrl: string = '';\n+  constructor(private http: HttpClient) {}\n+\n+  post(bodydata: any, urlpath: string): Observable<any> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MTIxNw==", "bodyText": "That's when you use generics. I have added a linter rule that will be merged soon that prevents the use of any, so I can't accept this code.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438951217", "createdAt": "2020-06-11T17:29:10Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {Location} from '@angular/common';\n+\n+@Injectable()\n+export class EntityService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  serviceUrl: string = '';\n+  constructor(private http: HttpClient) {}\n+\n+  post(bodydata: any, urlpath: string): Observable<any> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTk4NA==", "bodyText": "Updated in the latest commit", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439389984", "createdAt": "2020-06-12T12:32:10Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {Location} from '@angular/common';\n+\n+@Injectable()\n+export class EntityService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  serviceUrl: string = '';\n+  constructor(private http: HttpClient) {}\n+\n+  post(bodydata: any, urlpath: string): Observable<any> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg=="}, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2369, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}