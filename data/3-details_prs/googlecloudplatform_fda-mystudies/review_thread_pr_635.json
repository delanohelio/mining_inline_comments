{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODg5NTIy", "number": 635, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoxODo0N1rOERSjuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoyMjoyNlrOERSl9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTY1MzA1OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserDetailsEntity.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoxODo0N1rOG17ApA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNToxMTo1MVrOG2jTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDUzMg==", "bodyText": "WHat does this field represent?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459194532", "createdAt": "2020-07-23T03:18:47Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserDetailsEntity.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Setter\n+@Getter\n+@ToString\n+@Entity\n+@Table(name = \"user_details\")\n+public class UserDetailsEntity implements Serializable {\n+\n+  private static final long serialVersionUID = -6971868842609206885L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @Column(name = \"_ts\")\n+  private Date ts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNzY1NA==", "bodyText": "This field is changed for timestamp. It is used for activity timestamp.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459227654", "createdAt": "2020-07-23T05:54:18Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserDetailsEntity.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Setter\n+@Getter\n+@ToString\n+@Entity\n+@Table(name = \"user_details\")\n+public class UserDetailsEntity implements Serializable {\n+\n+  private static final long serialVersionUID = -6971868842609206885L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @Column(name = \"_ts\")\n+  private Date ts;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDUzMg=="}, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTU5NA==", "bodyText": "For what activity does the timestamp represent? I think since the field type is timestamp just naming it \"timestamp\" might not be clear what it represents.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459581594", "createdAt": "2020-07-23T16:37:08Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserDetailsEntity.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Setter\n+@Getter\n+@ToString\n+@Entity\n+@Table(name = \"user_details\")\n+public class UserDetailsEntity implements Serializable {\n+\n+  private static final long serialVersionUID = -6971868842609206885L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @Column(name = \"_ts\")\n+  private Date ts;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDUzMg=="}, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NDc4NA==", "bodyText": "This field is unused. Hence removed.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459854784", "createdAt": "2020-07-24T05:11:51Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/UserDetailsEntity.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.io.Serializable;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.entities.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Setter\n+@Getter\n+@ToString\n+@Entity\n+@Table(name = \"user_details\")\n+public class UserDetailsEntity implements Serializable {\n+\n+  private static final long serialVersionUID = -6971868842609206885L;\n+\n+  @ToString.Exclude\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"first_name\")\n+  private String firstName;\n+\n+  @ToString.Exclude\n+  @Column(name = \"last_name\")\n+  private String lastName;\n+\n+  @Column(name = \"_ts\")\n+  private Date ts;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDUzMg=="}, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTY1ODU4OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/ParticipantRegistrySiteRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoyMjoxM1rOG17Dlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTo1NToyN1rOG19DWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NTI4Nw==", "bodyText": "findParticipantRegistryBySiteIds ?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459195287", "createdAt": "2020-07-23T03:22:13Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/ParticipantRegistrySiteRepository.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.repository;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantRegistrySiteEntity;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.repository.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Repository\n+public interface ParticipantRegistrySiteRepository\n+    extends JpaRepository<ParticipantRegistrySiteEntity, String> {\n+\n+  @Query(\"SELECT pr FROM ParticipantRegistrySiteEntity pr WHERE pr.site.id in (:siteIds)\")\n+  public List<ParticipantRegistrySiteEntity> findParticipantRegistryOfSites(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNzk5NA==", "bodyText": "Changed to findParticipantRegistryBySiteIds.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459227994", "createdAt": "2020-07-23T05:55:27Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/ParticipantRegistrySiteRepository.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.repository;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantRegistrySiteEntity;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.repository.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Repository\n+public interface ParticipantRegistrySiteRepository\n+    extends JpaRepository<ParticipantRegistrySiteEntity, String> {\n+\n+  @Query(\"SELECT pr FROM ParticipantRegistrySiteEntity pr WHERE pr.site.id in (:siteIds)\")\n+  public List<ParticipantRegistrySiteEntity> findParticipantRegistryOfSites(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NTI4Nw=="}, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTY1ODc3OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/ParticipantStudyRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoyMjoyNlrOG17DtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTo1NjowOVrOG19D9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NTMxNg==", "bodyText": "similar comment as above", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459195316", "createdAt": "2020-07-23T03:22:26Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/ParticipantStudyRepository.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.repository;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantStudyEntity;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.repository.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Repository\n+public interface ParticipantStudyRepository extends JpaRepository<ParticipantStudyEntity, String> {\n+\n+  @Query(\"SELECT ps FROM ParticipantStudyEntity ps WHERE ps.site.id in (:siteIds)\")\n+  public List<ParticipantStudyEntity> findParticipantsEnrollmentsOfSites(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyODE1MQ==", "bodyText": "Changed to findParticipantEnrollmentsBySiteIds.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/635#discussion_r459228151", "createdAt": "2020-07-23T05:56:09Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/ParticipantStudyRepository.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.repository;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantStudyEntity;\n+\n+@ConditionalOnProperty(\n+    value = \"participant.manager.repository.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = false)\n+@Repository\n+public interface ParticipantStudyRepository extends JpaRepository<ParticipantStudyEntity, String> {\n+\n+  @Query(\"SELECT ps FROM ParticipantStudyEntity ps WHERE ps.site.id in (:siteIds)\")\n+  public List<ParticipantStudyEntity> findParticipantsEnrollmentsOfSites(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NTMxNg=="}, "originalCommit": {"oid": "9b584e6f6ca71d0c0af7ee0a528dd9e2fd72caa2"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2297, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}