{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NDY2ODYz", "number": 664, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyOTowMlrOEQuaQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNDowM1rOES0FBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTczMDU5OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyOTowMlrOG1CdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOToxNToxOVrOG1Z8jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzkyNw==", "bodyText": "Can this be done in the service? It's not really the job of a Controller to do this kind of logic. Generally Controller classes should have very little logic in MVC, they serve mainly to provide a translation from API semantics to business layer semantics.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458267927", "createdAt": "2020-07-21T17:29:02Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -82,6 +89,17 @@\n \n     // get token from hydra\n     ResponseEntity<JsonNode> response = oauthService.getToken(paramMap, headers);\n+\n+    if ((REFRESH_TOKEN.equals(grantType) || AUTHORIZATION_CODE.equals(grantType))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1MjgxNA==", "bodyText": "Agree with you. Moved this logic to service layer.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458652814", "createdAt": "2020-07-22T09:15:19Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -82,6 +89,17 @@\n \n     // get token from hydra\n     ResponseEntity<JsonNode> response = oauthService.getToken(paramMap, headers);\n+\n+    if ((REFRESH_TOKEN.equals(grantType) || AUTHORIZATION_CODE.equals(grantType))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzkyNw=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTczNjIzOnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzozMDoyNFrOG1CgqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOToyMjoxMlrOG1aMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2ODg0MA==", "bodyText": "ResponseEntity<UserResponse>?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458268840", "createdAt": "2020-07-21T17:30:24Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -116,4 +117,18 @@\n     logger.exit(String.format(STATUS_LOG, status));\n     return ResponseEntity.status(status).body(userResponse);\n   }\n+\n+  @PostMapping(value = \"/users/{userId}/logout\", produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> logout(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1Njk3Mw==", "bodyText": "Changed to ResponseEntity<UserResponse>", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458656973", "createdAt": "2020-07-22T09:22:12Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -116,4 +117,18 @@\n     logger.exit(String.format(STATUS_LOG, status));\n     return ResponseEntity.status(status).body(userResponse);\n   }\n+\n+  @PostMapping(value = \"/users/{userId}/logout\", produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> logout(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2ODg0MA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTczNzgzOnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzozMDo1MlrOG1Chrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDo1NjowM1rOG1mWoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTEwMw==", "bodyText": "throw UserNotFound exception?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458269103", "createdAt": "2020-07-21T17:30:52Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1ODU1MA==", "bodyText": "We are following this approach consistently in audit-log-service, participant-manager-service and oauth-scim-service. We'll be using ErrorCode instead of creating multiple *NotFound exception classes.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458658550", "createdAt": "2020-07-22T09:24:52Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTEwMw=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1NjA5Ng==", "bodyText": "Why are you adopting this pattern though? It's contrary to what we talked about with using Exceptions. You are basically going back to the old way of writing code where null means that an error occured.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458856096", "createdAt": "2020-07-22T14:56:03Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTEwMw=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTczODg2OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzozMTowOFrOG1CiVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzoyNjoyNFrOG4Mc0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTI3MA==", "bodyText": "same here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458269270", "createdAt": "2020-07-21T17:31:08Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    return revokeAndReplaceRefreshToken(userId, null);\n+  }\n+\n+  @Override\n+  public UserResponse revokeAndReplaceRefreshToken(String userId, String refreshToken)\n+      throws JsonProcessingException {\n+    logger.entry(\"revokeAndReplaceRefreshToken(userId, refreshToken)\");\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1ODc5Mw==", "bodyText": "We are following this approach consistently in audit-log-service, participant-manager-service and oauth-scim-service. We'll be using ErrorCode instead of creating multiple *NotFound exception classes.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458658793", "createdAt": "2020-07-22T09:25:14Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    return revokeAndReplaceRefreshToken(userId, null);\n+  }\n+\n+  @Override\n+  public UserResponse revokeAndReplaceRefreshToken(String userId, String refreshToken)\n+      throws JsonProcessingException {\n+    logger.entry(\"revokeAndReplaceRefreshToken(userId, refreshToken)\");\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTI3MA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1NDgwNQ==", "bodyText": "This impacts control flow though. By using not found exceptions we can jump right to the exception handling code and build the response there. You're free to create a base NotFound exception and handle that one instead.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458854805", "createdAt": "2020-07-22T14:54:19Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    return revokeAndReplaceRefreshToken(userId, null);\n+  }\n+\n+  @Override\n+  public UserResponse revokeAndReplaceRefreshToken(String userId, String refreshToken)\n+      throws JsonProcessingException {\n+    logger.entry(\"revokeAndReplaceRefreshToken(userId, refreshToken)\");\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTI3MA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NDE0Nw==", "bodyText": "Mistake 4: Use exceptions to control the flow   Since you've already created ErrorCodeException, we'll go with that approach. We are planning to fix ErrorCode related issues together and submit a new PR.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461394147", "createdAt": "2020-07-28T08:03:41Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    return revokeAndReplaceRefreshToken(userId, null);\n+  }\n+\n+  @Override\n+  public UserResponse revokeAndReplaceRefreshToken(String userId, String refreshToken)\n+      throws JsonProcessingException {\n+    logger.entry(\"revokeAndReplaceRefreshToken(userId, refreshToken)\");\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTI3MA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU3NzQyNQ==", "bodyText": "That blog post is referring to using exceptions to control the flow within a single method, as it says \"better use proper conditions to break your loops or if-else-statements\". Going to global exception handling code for a request is not at all the same thing.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461577425", "createdAt": "2020-07-28T13:26:24Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -422,4 +435,59 @@ public void removeExpiredTempRegIds() {\n             .toEpochMilli();\n     repository.updateTempRegId(new Timestamp(timeInMillis));\n   }\n+\n+  @Override\n+  public UserResponse logout(String userId) throws JsonProcessingException {\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    return revokeAndReplaceRefreshToken(userId, null);\n+  }\n+\n+  @Override\n+  public UserResponse revokeAndReplaceRefreshToken(String userId, String refreshToken)\n+      throws JsonProcessingException {\n+    logger.entry(\"revokeAndReplaceRefreshToken(userId, refreshToken)\");\n+    Optional<UserEntity> optUserEntity = repository.findByUserId(userId);\n+    if (!optUserEntity.isPresent()) {\n+      return new UserResponse(ErrorCode.USER_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2OTI3MA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTc1ODI3OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzozNjozNFrOG1Cung==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMDoxMFrOG4Dw3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3MjQxNA==", "bodyText": "Each test should create the user", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458272414", "createdAt": "2020-07-21T17:36:34Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -539,6 +545,41 @@ public void shouldSaveTheAuditEventInDatabase()\n \n   @Test\n   @Order(13)\n+  public void shouldLogout() throws MalformedURLException, JsonProcessingException, Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2Mzg2MA==", "bodyText": "I agree with you but in this case I am using @Order  for integration tests so I can re-use the data created from previous tests if applicable.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458663860", "createdAt": "2020-07-22T09:33:51Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -539,6 +545,41 @@ public void shouldSaveTheAuditEventInDatabase()\n \n   @Test\n   @Order(13)\n+  public void shouldLogout() throws MalformedURLException, JsonProcessingException, Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3MjQxNA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1NDA4Mg==", "bodyText": "That's the opposite of what we want to do. Every test should be able to be run by itself, and in any order", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458854082", "createdAt": "2020-07-22T14:53:15Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -539,6 +545,41 @@ public void shouldSaveTheAuditEventInDatabase()\n \n   @Test\n   @Order(13)\n+  public void shouldLogout() throws MalformedURLException, JsonProcessingException, Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3MjQxNA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNTEwMA==", "bodyText": "Removed @order from tests. Please review.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461435100", "createdAt": "2020-07-28T09:10:10Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -539,6 +545,41 @@ public void shouldSaveTheAuditEventInDatabase()\n \n   @Test\n   @Order(13)\n+  public void shouldLogout() throws MalformedURLException, JsonProcessingException, Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3MjQxNA=="}, "originalCommit": {"oid": "c82166cdd6cdc45b914e996cc2276410bb6d1848"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzQ3OTk5OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDo1MjowMFrOG1mLDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMDoyNVrOG4Dxng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1MzEzNQ==", "bodyText": "Can you remove the test order annotations now?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r458853135", "createdAt": "2020-07-22T14:52:00Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -91,6 +93,11 @@\n \n   private static String saltAfterChangePassword;\n \n+  @BeforeEach\n+  public void init() {\n+    WireMock.resetAllRequests();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "581ffc68d24bafb9d6aa97775f9fb0b8de24b52d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNTI5NA==", "bodyText": "Removed @order from tests. Please review", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461435294", "createdAt": "2020-07-28T09:10:25Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -91,6 +93,11 @@\n \n   private static String saltAfterChangePassword;\n \n+  @BeforeEach\n+  public void init() {\n+    WireMock.resetAllRequests();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1MzEzNQ=="}, "originalCommit": {"oid": "581ffc68d24bafb9d6aa97775f9fb0b8de24b52d"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTYwMzQ3OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzoyODoxM1rOG4MhxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoxNDo1MVrOG5k-YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU3ODY5Mw==", "bodyText": "You can do this in the afterEach if you want", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461578693", "createdAt": "2020-07-28T13:28:13Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "diffHunk": "@@ -210,17 +205,69 @@ public void shouldReturnNewTokensForRefreshTokenGrant() throws Exception {\n             .andExpect(jsonPath(\"$.refresh_token\").isNotEmpty())\n             .andReturn();\n \n-    accessToken = JsonPath.read(result.getResponse().getContentAsString(), \"$.access_token\");\n+    String refreshToken =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.refresh_token\");\n+\n+    // Step-3 check refresh token saved in database\n+    user = userRepository.findByUserId(user.getUserId()).get();\n+    ObjectNode userInfo = (ObjectNode) toJsonNode(user.getUserInfo());\n+    assertEquals(refreshToken, encryptor.decrypt(getTextValue(userInfo, REFRESH_TOKEN)));\n+\n+    // Step-4 delete the user\n+    userRepository.deleteByUserId(user.getUserId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfa2c0282dbc1c5ff5a5e5ee070c021976b0edc"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyNzgwOA==", "bodyText": "I added @AfterEach in UserControllerTest but forgot to add here. Fixed the review comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r463027808", "createdAt": "2020-07-30T14:14:51Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "diffHunk": "@@ -210,17 +205,69 @@ public void shouldReturnNewTokensForRefreshTokenGrant() throws Exception {\n             .andExpect(jsonPath(\"$.refresh_token\").isNotEmpty())\n             .andReturn();\n \n-    accessToken = JsonPath.read(result.getResponse().getContentAsString(), \"$.access_token\");\n+    String refreshToken =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.refresh_token\");\n+\n+    // Step-3 check refresh token saved in database\n+    user = userRepository.findByUserId(user.getUserId()).get();\n+    ObjectNode userInfo = (ObjectNode) toJsonNode(user.getUserInfo());\n+    assertEquals(refreshToken, encryptor.decrypt(getTextValue(userInfo, REFRESH_TOKEN)));\n+\n+    // Step-4 delete the user\n+    userRepository.deleteByUserId(user.getUserId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU3ODY5Mw=="}, "originalCommit": {"oid": "1bfa2c0282dbc1c5ff5a5e5ee070c021976b0edc"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTYxOTM4OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozMTozMFrOG4Mrmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyMDoyMVrOG5lNnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4MTIxMQ==", "bodyText": "This could go in the BeforeEach if you want", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461581211", "createdAt": "2020-07-28T13:31:30Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "diffHunk": "@@ -163,40 +178,20 @@ public void shouldReturnAccessTokenForClientCredentialsGrant() throws Exception\n   }\n \n   @Test\n-  @Order(5)\n   public void shouldReturnRefreshTokenForAuthorizationCodeGrant() throws Exception {\n+    UserEntity user = newUserEntity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfa2c0282dbc1c5ff5a5e5ee070c021976b0edc"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMTcwOA==", "bodyText": "I did it correctly in UserControllerTest  missed it here. I've fixed the review comment. Thanks for your suggestion.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r463031708", "createdAt": "2020-07-30T14:20:21Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "diffHunk": "@@ -163,40 +178,20 @@ public void shouldReturnAccessTokenForClientCredentialsGrant() throws Exception\n   }\n \n   @Test\n-  @Order(5)\n   public void shouldReturnRefreshTokenForAuthorizationCodeGrant() throws Exception {\n+    UserEntity user = newUserEntity();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4MTIxMQ=="}, "originalCommit": {"oid": "1bfa2c0282dbc1c5ff5a5e5ee070c021976b0edc"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTYzMDc4OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNDowM1rOG4Myyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyMjowNFrOG5lSag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4MzA1MQ==", "bodyText": "You're already cleaning up all the users in the AfterEach, this isn't necessary", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r461583051", "createdAt": "2020-07-28T13:34:03Z", "author": {"login": "nikklassen"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -169,19 +189,21 @@ public void shouldCreateANewUser() throws Exception {\n     assertTrue(userInfo.get(PASSWORD_HISTORY).isArray());\n \n     verify(\n-        2,\n+        1,\n         postRequestedFor(urlEqualTo(\"/oauth-scim-service/oauth2/introspect\"))\n             .withRequestBody(new ContainsPattern(VALID_TOKEN)));\n+\n+    // Step 3: delete the user\n+    userRepository.deleteByUserId(userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfa2c0282dbc1c5ff5a5e5ee070c021976b0edc"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMjkzOA==", "bodyText": "Fixed the review comment", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/664#discussion_r463032938", "createdAt": "2020-07-30T14:22:04Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -169,19 +189,21 @@ public void shouldCreateANewUser() throws Exception {\n     assertTrue(userInfo.get(PASSWORD_HISTORY).isArray());\n \n     verify(\n-        2,\n+        1,\n         postRequestedFor(urlEqualTo(\"/oauth-scim-service/oauth2/introspect\"))\n             .withRequestBody(new ContainsPattern(VALID_TOKEN)));\n+\n+    // Step 3: delete the user\n+    userRepository.deleteByUserId(userId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4MzA1MQ=="}, "originalCommit": {"oid": "1bfa2c0282dbc1c5ff5a5e5ee070c021976b0edc"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2326, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}