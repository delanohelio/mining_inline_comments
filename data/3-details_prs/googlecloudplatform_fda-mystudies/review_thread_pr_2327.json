{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MDUyOTA4", "number": 2327, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoxOTozNlrOFDj8_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0Mzo1MFrOFFFBzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mjc5MTAyOnYy", "diffSide": "RIGHT", "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoxOTozNlrOIDRfug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOTo0NTo1NFrOIDxAeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMzI5MA==", "bodyText": "[auth-server Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r540303290", "createdAt": "2020-12-10T16:19:36Z", "author": {"login": "github-actions"}, "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_ERROR_VIEW;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+@Controller\n+public class GenericErrorController {\n+  private XLogger logger = XLoggerFactory.getXLogger(GenericErrorController.class.getName());\n+\n+  @GetMapping(value = \"/oauth2/error\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e3222bac8a13ee8d6cd0845106d95c288d3a77"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0NDcwMA==", "bodyText": "please add a description here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r540344700", "createdAt": "2020-12-10T17:09:00Z", "author": {"login": "zohrehj"}, "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_ERROR_VIEW;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+@Controller\n+public class GenericErrorController {\n+  private XLogger logger = XLoggerFactory.getXLogger(GenericErrorController.class.getName());\n+\n+  @GetMapping(value = \"/oauth2/error\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMzI5MA=="}, "originalCommit": {"oid": "50e3222bac8a13ee8d6cd0845106d95c288d3a77"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgxOTU3Ng==", "bodyText": "Fixed review comment", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r540819576", "createdAt": "2020-12-11T09:45:54Z", "author": {"login": "harisboston"}, "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_ERROR_VIEW;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+@Controller\n+public class GenericErrorController {\n+  private XLogger logger = XLoggerFactory.getXLogger(GenericErrorController.class.getName());\n+\n+  @GetMapping(value = \"/oauth2/error\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMzI5MA=="}, "originalCommit": {"oid": "50e3222bac8a13ee8d6cd0845106d95c288d3a77"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MjgxMDY5OnYy", "diffSide": "RIGHT", "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoyMzozMlrOIDRrlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjo0MDowNVrOIDSo0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwNjMyNA==", "bodyText": "how do you know this is a sign in error? just logging the error message might be a safer approach", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r540306324", "createdAt": "2020-12-10T16:23:32Z", "author": {"login": "zohrehj"}, "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_ERROR_VIEW;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+@Controller\n+public class GenericErrorController {\n+  private XLogger logger = XLoggerFactory.getXLogger(GenericErrorController.class.getName());\n+\n+  @GetMapping(value = \"/oauth2/error\")\n+  public String error(HttpServletRequest request, HttpServletResponse response, Model model)\n+      throws UnsupportedEncodingException {\n+    String errorDetails = request.getQueryString();\n+    if (StringUtils.isEmpty(errorDetails)) {\n+      return ERROR_VIEW_NAME;\n+    }\n+\n+    logger.error(\n+        String.format(\"sign-in failed due to %s\", URLDecoder.decode(errorDetails, \"UTF-8\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e3222bac8a13ee8d6cd0845106d95c288d3a77"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMyMjAwMg==", "bodyText": "Fixed review comment", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r540322002", "createdAt": "2020-12-10T16:40:05Z", "author": {"login": "harisboston"}, "path": "auth-server/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/GenericErrorController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_ERROR_VIEW;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+@Controller\n+public class GenericErrorController {\n+  private XLogger logger = XLoggerFactory.getXLogger(GenericErrorController.class.getName());\n+\n+  @GetMapping(value = \"/oauth2/error\")\n+  public String error(HttpServletRequest request, HttpServletResponse response, Model model)\n+      throws UnsupportedEncodingException {\n+    String errorDetails = request.getQueryString();\n+    if (StringUtils.isEmpty(errorDetails)) {\n+      return ERROR_VIEW_NAME;\n+    }\n+\n+    logger.error(\n+        String.format(\"sign-in failed due to %s\", URLDecoder.decode(errorDetails, \"UTF-8\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwNjMyNA=="}, "originalCommit": {"oid": "50e3222bac8a13ee8d6cd0845106d95c288d3a77"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODY5MzAzOnYy", "diffSide": "RIGHT", "path": "hydra/tf-deployment.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0MzoyNVrOIFZo8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo1ODowOVrOIFaWxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzMzg3Mg==", "bodyText": "looks like this is not needed since URLS_ERROR in entrypoint.bash is only using AUTH_SERVER_BASE_URL and does not need any other values to be specified.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r542533872", "createdAt": "2020-12-14T16:43:25Z", "author": {"login": "zohrehj"}, "path": "hydra/tf-deployment.yaml", "diffHunk": "@@ -59,6 +59,11 @@ spec:\n             secretKeyRef:\n               name: shared-secrets\n               key: base_url\n+        - name: URLS_ERROR\n+          valueFrom:\n+            secretKeyRef:\n+              name: shared-secrets\n+              key: base_url", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adfc3fa6ed421831ef65ed6419b917f97dd029f6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU0NTYwNg==", "bodyText": "Fixed review comment", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r542545606", "createdAt": "2020-12-14T16:58:09Z", "author": {"login": "harisboston"}, "path": "hydra/tf-deployment.yaml", "diffHunk": "@@ -59,6 +59,11 @@ spec:\n             secretKeyRef:\n               name: shared-secrets\n               key: base_url\n+        - name: URLS_ERROR\n+          valueFrom:\n+            secretKeyRef:\n+              name: shared-secrets\n+              key: base_url", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzMzg3Mg=="}, "originalCommit": {"oid": "adfc3fa6ed421831ef65ed6419b917f97dd029f6"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODY5NTgyOnYy", "diffSide": "RIGHT", "path": "hydra/variables.env", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0Mzo1MFrOIFZqew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTo1MjozNFrOIGSdqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzNDI2Nw==", "bodyText": "@jkrogers18 to confirm.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r542534267", "createdAt": "2020-12-14T16:43:50Z", "author": {"login": "zohrehj"}, "path": "hydra/variables.env", "diffHunk": "@@ -26,6 +26,12 @@ HYDRA_PUBLIC_BASE_URL=\n # For example, https://10.128.0.3\n AUTH_SERVER_BASE_URL=\n \n+# ORY Hydra error: Sets the error endpoint. \n+# The error ui will be shown when an OAuth2/Hydra error occurs that which can not be sent back to the client.\n+# Base URL of your `Auth server` instance\n+# For example, URLS_ERROR=https://10.128.0.3/oauth2/error\n+URLS_ERROR=\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adfc3fa6ed421831ef65ed6419b917f97dd029f6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxOTAwMQ==", "bodyText": "Is \"/oauth2/error\" always the path to get to the error page? And is the that page already created for the customer? (e..g they don't have to make a custom error page at that location?). Also I'm wondering why the context path for the auth-server e.g. domain.com/auth-server/oauth2/error is removed - is that on purpose?\nIt seems that this entry is redundant because you already know the auth server URL from AUTH_SERVER_BASE_URL and everything else is constant. If that is correct then this should not be in variables.env but constructed from AUTH_SERVER_BASE_URL in entrypoiny.bash", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r543319001", "createdAt": "2020-12-15T12:56:57Z", "author": {"login": "jkrogers18"}, "path": "hydra/variables.env", "diffHunk": "@@ -26,6 +26,12 @@ HYDRA_PUBLIC_BASE_URL=\n # For example, https://10.128.0.3\n AUTH_SERVER_BASE_URL=\n \n+# ORY Hydra error: Sets the error endpoint. \n+# The error ui will be shown when an OAuth2/Hydra error occurs that which can not be sent back to the client.\n+# Base URL of your `Auth server` instance\n+# For example, URLS_ERROR=https://10.128.0.3/oauth2/error\n+URLS_ERROR=\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzNDI2Nw=="}, "originalCommit": {"oid": "adfc3fa6ed421831ef65ed6419b917f97dd029f6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NDMzMA==", "bodyText": "@jkrogers18 Yes, \"/oauth2/error\" is the path to get to the custom error page (error.html) if there is any error from Hydra.\nRemoved URLS_ERROR from variables.env file.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r543464330", "createdAt": "2020-12-15T15:52:03Z", "author": {"login": "harisboston"}, "path": "hydra/variables.env", "diffHunk": "@@ -26,6 +26,12 @@ HYDRA_PUBLIC_BASE_URL=\n # For example, https://10.128.0.3\n AUTH_SERVER_BASE_URL=\n \n+# ORY Hydra error: Sets the error endpoint. \n+# The error ui will be shown when an OAuth2/Hydra error occurs that which can not be sent back to the client.\n+# Base URL of your `Auth server` instance\n+# For example, URLS_ERROR=https://10.128.0.3/oauth2/error\n+URLS_ERROR=\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzNDI2Nw=="}, "originalCommit": {"oid": "adfc3fa6ed421831ef65ed6419b917f97dd029f6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NDg3NQ==", "bodyText": "@jkrogers18 Yes, \"/oauth2/error\" is the path to get to the custom error page (error.html) if there is any error from Hydra.\nRemoved URLS_ERROR from variables.env file.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2327#discussion_r543464875", "createdAt": "2020-12-15T15:52:34Z", "author": {"login": "harisboston"}, "path": "hydra/variables.env", "diffHunk": "@@ -26,6 +26,12 @@ HYDRA_PUBLIC_BASE_URL=\n # For example, https://10.128.0.3\n AUTH_SERVER_BASE_URL=\n \n+# ORY Hydra error: Sets the error endpoint. \n+# The error ui will be shown when an OAuth2/Hydra error occurs that which can not be sent back to the client.\n+# Base URL of your `Auth server` instance\n+# For example, URLS_ERROR=https://10.128.0.3/oauth2/error\n+URLS_ERROR=\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzNDI2Nw=="}, "originalCommit": {"oid": "adfc3fa6ed421831ef65ed6419b917f97dd029f6"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1374, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}