{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MTg2MTE0", "number": 670, "title": "Participant Manager Service: GET /apps?fields=studies,sites implementation with integration tests", "bodyText": "participant-manager GET /apps?fields=studies,sites implementation", "createdAt": "2020-07-24T09:37:42Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670", "merged": true, "mergeCommit": {"oid": "b77e8ae2ef95c3cac1a740c0cbc2d520c2ad9f1c"}, "closed": true, "closedAt": "2020-08-13T14:22:31Z", "author": {"login": "monica-BTC"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4AtqZgH2gAyNDU2MTg2MTE0OjYyM2I2Y2RlZjE2Y2QzYTlkNmYwYWMxYWNiMzNmMWI1ZDU0Nzc0N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-gsiqAFqTQ2NjgwMzg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "623b6cdef16cd3a9d6f0ac1acb33f1b5d547747c", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/623b6cdef16cd3a9d6f0ac1acb33f1b5d547747c", "committedDate": "2020-07-24T09:35:43Z", "message": "participant-manager GET /apps?fields=studies,sites\n\nparticipant-manager GET /apps?fields=studies,sites"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b87fb928e220409e03f96989eb452e9fa00dc311", "committedDate": "2020-07-24T09:45:48Z", "message": "added array length\n\nadded array length"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjEyMTMy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-457212132", "createdAt": "2020-07-29T05:50:40Z", "commit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNTo1MDo0MFrOG4pgzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjoxMTozOFrOG4p8KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1MzU4MA==", "bodyText": "typo", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462053580", "createdAt": "2020-07-29T05:50:40Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "diffHunk": "@@ -43,7 +43,9 @@\n   GET_PARTICIPANT_REGISTRY_SUCCESS(\n       HttpStatus.OK, \"MSG-0008\", \"Get participant registry successfull\"),\n \n-  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\");\n+  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\"),\n+\n+  GET_APPS_DETAILS_SUCCESS(HttpStatus.OK, \"MSG-0018\", \"Get App Details successfull\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjQxNw==", "bodyText": "Do you mean findByStudyIds here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462056417", "createdAt": "2020-07-29T05:59:20Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +33,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findBySites(@Param(\"studyIds\") List<String> studyIdList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA==", "bodyText": "Is there a reason we are using CollectionUtils here and for other places, too instead of just built in functions like !sites.isEmpty()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462060584", "createdAt": "2020-07-29T06:11:38Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n+    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n+    if (CollectionUtils.isNotEmpty(sites)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjM0ODk2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-457234896", "createdAt": "2020-07-29T06:42:52Z", "commit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0Mjo1MlrOG4qsHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0Mjo1MlrOG4qsHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA==", "bodyText": "Out of scope. Is the purpose here just to use a new object AppCount here to replace the Map object? Could you just change this in the general GET /apps PR instead", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462072860", "createdAt": "2020-07-29T06:42:52Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java", "diffHunk": "@@ -26,6 +26,7 @@\n public interface UserDetailsRepository extends JpaRepository<UserDetailsEntity, String> {\n \n   @Query(\n-      \"SELECT ud.appInfo.id ,COUNT(ud.appInfo.id) FROM UserDetailsEntity ud WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n-  public Map<String, Long> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);\n+      \"SELECT ud.appInfo.id AS appId,COUNT(ud.appInfo.id) AS count FROM UserDetailsEntity ud \"\n+          + \"WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n+  public List<AppCount> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjM3NzE1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-457237715", "createdAt": "2020-07-29T06:48:19Z", "commit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0ODoxOVrOG4q1Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0ODoxOVrOG4q1Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NTE5OQ==", "bodyText": "What if only studies is passed into fields? only sites? We should test for those cases also", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462075199", "createdAt": "2020-07-29T06:48:19Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java", "diffHunk": "@@ -112,14 +117,69 @@ public void shouldNotReturnApp() throws Exception {\n         .andExpect(jsonPath(\"$.error_description\").value(ErrorCode.APP_NOT_FOUND.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAppsWithOptionalStudiesAndSites() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjM5NDgw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-457239480", "createdAt": "2020-07-29T06:51:33Z", "commit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1MTozM1rOG4q66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1MTozM1rOG4q66A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NjY0OA==", "bodyText": "what happens when a random junk string is passed into fields, shouldn't we handle that as an error", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462076648", "createdAt": "2020-07-29T06:51:33Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -236,4 +258,57 @@ private void calculateEnrollmentPercentage(\n         .distinct()\n         .collect(Collectors.toList());\n   }\n+\n+  @Override\n+  @Transactional(readOnly = true)\n+  public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n+    logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n+        userRegAdminRepository.findByUserRegAdminId(userId);\n+\n+    if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n+      logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+      return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+    }\n+\n+    List<AppEntity> apps =\n+        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n+    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+\n+    List<StudyEntity> studies =\n+        (List<StudyEntity>) CollectionUtils.emptyIfNull(studyRepository.findByAppIds(appIds));\n+    List<String> studyIds = studies.stream().map(StudyEntity::getId).collect(Collectors.toList());\n+\n+    List<SiteEntity> sites = siteRepository.findBySites(studyIds);\n+\n+    AppResponse appResponse = prepareAppResponse(apps, studies, sites, fields);\n+\n+    logger.exit(String.format(\"total apps=%d\", appResponse.getApps().size()));\n+    return appResponse;\n+  }\n+\n+  private AppResponse prepareAppResponse(\n+      List<AppEntity> apps, List<StudyEntity> studies, List<SiteEntity> sites, String[] fields) {\n+    Map<String, List<StudyEntity>> groupByAppIdStudyMap =\n+        studies.stream().collect(Collectors.groupingBy(StudyEntity::getAppId));\n+\n+    Map<String, List<SiteEntity>> groupByStudyIdSiteMap =\n+        sites.stream().collect(Collectors.groupingBy(SiteEntity::getStudyId));\n+\n+    List<AppDetails> appsList = new ArrayList<>();\n+    for (AppEntity app : apps) {\n+      AppDetails appDetails = AppMapper.toAppDetails(app);\n+      if (ArrayUtils.contains(fields, \"studies\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 123}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/db25ded3576ccadcf886f985cb474b892d7b5dc8", "committedDate": "2020-07-29T12:29:59Z", "message": "Fixed PR comments\n\nFixed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTMxNzM2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-457531736", "createdAt": "2020-07-29T13:40:46Z", "commit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo0MDo0N1rOG448-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0Njo1M1rOG48D1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU1NA==", "bodyText": "Isn't this the same as using the findAll() method from JpaRepository?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462306554", "createdAt": "2020-07-29T13:40:47Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java", "diffHunk": "@@ -18,4 +21,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface AppRepository extends JpaRepository<AppEntity, String> {}\n+public interface AppRepository extends JpaRepository<AppEntity, String> {\n+\n+  @Query(\"SELECT ar FROM AppEntity ar\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNTMzNg==", "bodyText": "How about using the getSites() method on the study? Hibernate already knows how to fetch the studies because you've written them with the ManyToOne, OneToMany relationships. When you call getSites() on the App it will construct the appropriate query and fetch corresponding Sites from the database. Don't worry about performance, there are many techniques built into Hibernate that can be used depending on the situation.\nI suggest this because it will eliminate a lot of the code you've written in the Service. You are essentially doing a JOIN in Java by separating out the IDs, querying on them, and then combining the results. Doing this in the database is much better and comes for \"free\" (meaning you don't have to write the code).\nHere is some more information about best practices https://thorben-janssen.com/best-practices-many-one-one-many-associations-mappings/", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462315336", "createdAt": "2020-07-29T13:52:32Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +31,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findByStudyIds(@Param(\"studyIds\") List<String> studyIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg==", "bodyText": "It would be nice if this method (and others) were written to act on a single SiteEntity. That way we could use it directly in stream().map(SiteMapper::toAppDetailsResponse)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462326836", "createdAt": "2020-07-29T14:08:18Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzODk0Nw==", "bodyText": "See my comment on findByStudyIds()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462338947", "createdAt": "2020-07-29T14:23:25Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java", "diffHunk": "@@ -26,4 +28,7 @@\n \n   @Query(\"SELECT study from StudyEntity study where study.id=:studyId\")\n   public Optional<StudyEntity> findByStudyId(String studyId);\n+\n+  @Query(\"SELECT study from StudyEntity study where study.appInfo.id in (:appIds)\")\n+  public List<StudyEntity> findByAppIds(@Param(\"appIds\") List<String> appIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTg5MA==", "bodyText": "This is the same as the built-in findById", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462339890", "createdAt": "2020-07-29T14:24:41Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java", "diffHunk": "@@ -19,4 +22,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {}\n+public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {\n+\n+  @Query(\"SELECT ua FROM UserRegAdminEntity ua WHERE ua.id = :userId\")\n+  Optional<UserRegAdminEntity> findByUserRegAdminId(String userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA==", "bodyText": "Can we just call this id? The fact that it's a site should be implied by the route.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462348254", "createdAt": "2020-07-29T14:35:02Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MjgyNg==", "bodyText": "Can we put this in a location property? It will be easier for the frontend to create interfaces if they can always use the same Location. Otherwise their code needs to extract all of the location-related properties out and map them back into a location object.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462352826", "createdAt": "2020-07-29T14:40:52Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;\n+\n+  private String locationId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzA5Nw==", "bodyText": "Just id here too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462353097", "createdAt": "2020-07-29T14:41:11Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppStudyResponse {\n+  private String studyId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg==", "bodyText": "What about setting fields to allowedFields if the request parameter is empty? I don't think we need two methods here, just use all optional fields if none are specified", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462356136", "createdAt": "2020-07-29T14:45:11Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "diffHunk": "@@ -32,15 +36,34 @@\n \n   @Autowired private AppService appService;\n \n+  private static final String DEFAULT = \"_default_\";\n+\n   private static final String STATUS_LOG = \"status=%d\";\n \n   private static final String BEGIN_REQUEST_LOG = \"%s request\";\n \n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n-      @RequestHeader(name = USER_ID_HEADER) String userId, HttpServletRequest request) {\n-    logger.entry(String.format(BEGIN_REQUEST_LOG, request.getRequestURI()));\n-    AppResponse appResponse = appService.getApps(userId);\n+      @RequestHeader(name = USER_ID_HEADER) String userId,\n+      @RequestParam(name = \"fields\", required = false) String[] fields,\n+      HttpServletRequest request) {\n+    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    logger.entry(\n+        String.format(\n+            \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n+\n+    String[] allowedFields = {\"studies\", \"sites\"};\n+    AppResponse appResponse;\n+    if (ArrayUtils.contains(fields, DEFAULT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NzQ2Mg==", "bodyText": "See my comment on toAppDetailsResponseList. We can use the streams API\n.map(study -> StudyMapper.toAppDetailsResponse(study, fields))\nif this takes a single StudyEntity", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462357462", "createdAt": "2020-07-29T14:46:53Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.ArrayUtils;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AppSiteResponse;\n+import com.google.cloud.healthcare.fdamystudies.beans.AppStudyResponse;\n+import com.google.cloud.healthcare.fdamystudies.model.SiteEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+\n+public final class StudyMapper {\n+\n+  private StudyMapper() {}\n+\n+  public static List<AppStudyResponse> toAppDetailsResponseList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTMxNjg0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-457931684", "createdAt": "2020-07-29T22:06:29Z", "commit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8016b99e234e2d691420140d38d664275b7fc085", "committedDate": "2020-07-30T09:38:52Z", "message": "Fixed PR comments\n\nFixed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDMyNzg4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-458432788", "createdAt": "2020-07-30T14:04:22Z", "commit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDowNDoyMlrOG5khnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDowNDoyMlrOG5khnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMDQ0NA==", "bodyText": "Is CollectionUtils.emptyIfNull necessary? It's not clear from the docs but I would think findAll() will always return a list, it just might be empty if there's nothing to fetch.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463020444", "createdAt": "2020-07-30T14:04:22Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -262,23 +262,20 @@ private void calculateEnrollmentPercentage(\n   public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n     logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n \n-    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n-        userRegAdminRepository.findByUserRegAdminId(userId);\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n \n     if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n       logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n       return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n     }\n \n-    List<AppEntity> apps =\n-        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n-    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+    List<AppEntity> apps = (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAll());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDU4MzY1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-458458365", "createdAt": "2020-07-30T14:30:39Z", "commit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMDozOVrOG5lrOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMDozOVrOG5lrOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTI4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    StudyMapper.toAppStudyResponse(\n          \n          \n            \n                                        study, groupByStudyIdSiteMap.get(study.getId()), fields))\n          \n          \n            \n                                    StudyMapper.toAppStudyResponse(\n          \n          \n            \n                                        study, study.getSites(), fields))\n          \n      \n    \n    \n  \n\nYou don't need to build the whole list of sites out in getAppsWithOptionalFields (line 278)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463039288", "createdAt": "2020-07-30T14:30:39Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -298,9 +295,15 @@ private AppResponse prepareAppResponse(\n     for (AppEntity app : apps) {\n       AppDetails appDetails = AppMapper.toAppDetails(app);\n       if (ArrayUtils.contains(fields, \"studies\")) {\n+        List<StudyEntity> appStudies = groupByAppIdStudyMap.get(app.getId());\n         List<AppStudyResponse> appStudyResponses =\n-            StudyMapper.toAppDetailsResponseList(\n-                groupByAppIdStudyMap.get(app.getId()), groupByStudyIdSiteMap, fields);\n+            appStudies\n+                .stream()\n+                .map(\n+                    study ->\n+                        StudyMapper.toAppStudyResponse(\n+                            study, groupByStudyIdSiteMap.get(study.getId()), fields))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db280afc9030ecedf46a0704636ad77f3666d01c", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/db280afc9030ecedf46a0704636ad77f3666d01c", "committedDate": "2020-08-03T11:00:44Z", "message": "Fixed PR comments\n\nFixed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwODk1Nzc1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-460895775", "createdAt": "2020-08-04T14:56:35Z", "commit": {"oid": "db280afc9030ecedf46a0704636ad77f3666d01c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDM5Njgx", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-461039681", "createdAt": "2020-08-04T17:53:07Z", "commit": {"oid": "db280afc9030ecedf46a0704636ad77f3666d01c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2db0212067608e1124d620c79b78f7342c2f760e", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2db0212067608e1124d620c79b78f7342c2f760e", "committedDate": "2020-08-13T13:20:03Z", "message": "Merge branch 'develop' into participant-manager-apps-with-optional-studies-and-sites"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45bc1336d1ddc79442336058948e22e1c0f77e69", "author": {"user": {"login": "monica-BTC", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/45bc1336d1ddc79442336058948e22e1c0f77e69", "committedDate": "2020-08-13T13:27:22Z", "message": "Fixed conflict error\n\nFixed conflict error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODAzODcz", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#pullrequestreview-466803873", "createdAt": "2020-08-13T14:15:00Z", "commit": {"oid": "45bc1336d1ddc79442336058948e22e1c0f77e69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 903, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}