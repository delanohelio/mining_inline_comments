{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NDAzNDQw", "number": 991, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDoyNDo1MVrOElGxVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoyNzoyMlrOElqFZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzQzNzAyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/mobile-menu/mobile-menu.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDoyNDo1MVrOHUa2OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDoyNDo1MVrOHUa2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE3MzQzMw==", "bodyText": "nit: use ?. to avoid having multiple checks, i.e. user?.manageLocations !== null", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/991#discussion_r491173433", "createdAt": "2020-09-18T20:24:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/mobile-menu/mobile-menu.component.html", "diffHunk": "@@ -75,6 +75,10 @@\n         </li>\n         <li>\n           <a\n+            *ngIf=\"\n+              (user && user.manageLocations !== null) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bec996851b7855ba9461982e66c8ee98f39b9072"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzQ0NTIyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDoyNzo1M1rOHUa7PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDoyNzo1M1rOHUa7PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE3NDcxNw==", "bodyText": "Can you move this to the UserService and use it here and in mobile-menu? Centralizing the logic ensures: the key doesn't change, parsing doesn't change, the default is consistently {}, etc. Basically sessionStorage.getItem(key) should only be called in one place for each key.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/991#discussion_r491174717", "createdAt": "2020-09-18T20:27:53Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -12,10 +13,14 @@ export class SiteCoordinatorComponent implements OnInit {\n   showSearchBar = false;\n   filterQuery = '';\n   searchBar: SearchBar | undefined;\n+  user = {} as Profile;\n \n   constructor(private readonly searchService: SearchService) {}\n \n   ngOnInit(): void {\n+    const userObject = sessionStorage.getItem('user');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bec996851b7855ba9461982e66c8ee98f39b9072"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTIyMjc5OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/service/user.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoyNzoyMlrOHVP7-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjowMToxNFrOHVrMsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0MzI1OQ==", "bodyText": "You don't need to save this as a property. It can just be a local variable with how this is written.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/991#discussion_r492043259", "createdAt": "2020-09-21T13:27:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/user.service.ts", "diffHunk": "@@ -3,11 +3,20 @@ import {HttpClient} from '@angular/common/http';\n import {User} from '../entity/user';\n import {Observable} from 'rxjs';\n import {environment} from 'src/environments/environment';\n+import {Profile} from '../site-coordinator/account/shared/profile.model';\n @Injectable({providedIn: 'root'})\n export class UserService {\n+  user = {} as Profile;\n+\n   constructor(private readonly http: HttpClient) {}\n \n   getUserDetails(): Observable<User> {\n     return this.http.get<User>(`${environment.baseUrl}/users/profile`);\n   }\n+\n+  getUserProfile(): Profile {\n+    const userObject = sessionStorage.getItem('user');\n+    if (userObject) this.user = JSON.parse(userObject) as Profile;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e70bf6cc3bf6f154388e64918a53812fb0e3470"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4OTkwNg==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/991#discussion_r492489906", "createdAt": "2020-09-22T06:01:14Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/service/user.service.ts", "diffHunk": "@@ -3,11 +3,20 @@ import {HttpClient} from '@angular/common/http';\n import {User} from '../entity/user';\n import {Observable} from 'rxjs';\n import {environment} from 'src/environments/environment';\n+import {Profile} from '../site-coordinator/account/shared/profile.model';\n @Injectable({providedIn: 'root'})\n export class UserService {\n+  user = {} as Profile;\n+\n   constructor(private readonly http: HttpClient) {}\n \n   getUserDetails(): Observable<User> {\n     return this.http.get<User>(`${environment.baseUrl}/users/profile`);\n   }\n+\n+  getUserProfile(): Profile {\n+    const userObject = sessionStorage.getItem('user');\n+    if (userObject) this.user = JSON.parse(userObject) as Profile;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0MzI1OQ=="}, "originalCommit": {"oid": "1e70bf6cc3bf6f154388e64918a53812fb0e3470"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1796, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}