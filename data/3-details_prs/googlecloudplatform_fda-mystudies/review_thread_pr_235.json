{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjYxNjcw", "number": 235, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMzo1N1rOD2vmxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToyODoxMlrOD229VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzI5NjY4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMzo1N1rOGMpCOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0NzoyMFrOGNzZfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODQwOA==", "bodyText": "An integer type is not appropriate here. Either use an enum or, preferably, return a boolean", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415908408", "createdAt": "2020-04-27T15:23:57Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjc4MA==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417126780", "createdAt": "2020-04-29T07:47:20Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODQwOA=="}, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzMxNDY3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyNzowOVrOGMpMiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0NzozMFrOGNzZyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMTA0OQ==", "bodyText": "Please don't declaring variables like this. They should always be declared when they are actually assigned", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415911049", "createdAt": "2020-04-27T15:27:09Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjg1OA==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417126858", "createdAt": "2020-04-29T07:47:30Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMTA0OQ=="}, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzMzOTM1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMTozMVrOGMpbJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0Nzo0OFrOGNzadA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNDc4OQ==", "bodyText": "Same here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415914789", "createdAt": "2020-04-27T15:31:31Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNzAyOA==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417127028", "createdAt": "2020-04-29T07:47:48Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNDc4OQ=="}, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzM1MjI5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMzo0MlrOGMpijw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0ODoxMFrOGNzbQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNjY4Nw==", "bodyText": "This method doesn't throw exceptions", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415916687", "createdAt": "2020-04-27T15:33:42Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNzIzMw==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417127233", "createdAt": "2020-04-29T07:48:10Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNjY4Nw=="}, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzM1NTA1OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozNDowOVrOGMpkMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0ODoyMFrOGNzbjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNzEwNQ==", "bodyText": "this method doesn't throw exceptions", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415917105", "createdAt": "2020-04-27T15:34:09Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    boolean isSent = false;\n+    int isEmailSent = 0;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+      if (!isSent) {\n+        isEmailSent = 1;\n+      } else {\n+        isEmailSent = 2;\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Integer contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNzMwOQ==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417127309", "createdAt": "2020-04-29T07:48:20Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    boolean isSent = false;\n+    int isEmailSent = 0;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+      if (!isSent) {\n+        isEmailSent = 1;\n+      } else {\n+        isEmailSent = 2;\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Integer contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNzEwNQ=="}, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ1ODMzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1MDo1NVrOGMqiDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDo0MToxMVrOGOCOLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA==", "bodyText": "Shouldn't we be returning some other message in the case where the email isn't sent?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415932940", "createdAt": "2020-04-27T15:50:55Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNjM4OA==", "bodyText": "Mobile is not relying on the back end message . They display the mapped success message that is configured locally. However , let us know if  you still needs some appropriate  message to return.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417136388", "createdAt": "2020-04-29T08:05:21Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMzQzNA==", "bodyText": "So the response from this method is\n\"200 OK\" if an email was not sent\nand \"200 OK, Success\" if an email was sent\nTo me these are the same and don't provide any information. Shouldn't the user be alerted with a failure message if an email wasn't sent?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417323434", "createdAt": "2020-04-29T13:41:55Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2OTY0NQ==", "bodyText": "@nikklassen thanks for highlighting this point. Did the changes now to return an error message in case of failing to trigger an email . please have a look now", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417369645", "createdAt": "2020-04-29T14:41:11Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ2NzQyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1MjoyNlrOGMqnHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0OTo0M1rOGNzepg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNDIzNg==", "bodyText": "This failure code (and the catch) is exactly the same for both methods. Please extract shared logic.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415934236", "createdAt": "2020-04-27T15:52:26Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isEmailSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODEwMg==", "bodyText": "Already an externalize method is available . However did the change to use the same .", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128102", "createdAt": "2020-04-29T07:49:43Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isEmailSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNDIzNg=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ3MjYxOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1MzoyN1rOGMqqIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0OTo1NVrOGNzfDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTAwOA==", "bodyText": "Unnecessary variable declarations here too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935008", "createdAt": "2020-04-27T15:53:27Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODIwNw==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128207", "createdAt": "2020-04-29T07:49:55Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTAwOA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ3NTA3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1Mzo0OVrOGMqrcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MDowN1rOGNzfXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTM0Ng==", "bodyText": "Type can be a primitive", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935346", "createdAt": "2020-04-27T15:53:49Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODI4NQ==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128285", "createdAt": "2020-04-29T07:50:07Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTM0Ng=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ3NzQ4OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1NDoxNlrOGMqs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MDoxNlrOGNzfsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTcyMg==", "bodyText": "Remove + \"\"", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935722", "createdAt": "2020-04-27T15:54:16Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODM2OQ==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128369", "createdAt": "2020-04-29T07:50:16Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTcyMg=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ4MDgzOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1NDo0N1rOGMquxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MDoyNFrOGNzgAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjE5OA==", "bodyText": "method does not throw an exception", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936198", "createdAt": "2020-04-27T15:54:47Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODQ0OA==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128448", "createdAt": "2020-04-29T07:50:24Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjE5OA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ4MjU3OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1NTowNlrOGMqv0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MDo1M1rOGNzg6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjQ2Ng==", "bodyText": "Incorrect declarations", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936466", "createdAt": "2020-04-27T15:55:06Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODY4Mw==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128683", "createdAt": "2020-04-29T07:50:53Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjQ2Ng=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ4MzMyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1NToxNVrOGMqwSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MTowNFrOGNzhTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjU4Ng==", "bodyText": "Remove + \"\"", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936586", "createdAt": "2020-04-27T15:55:15Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      contactUsSubject = appConfig.getContactusMailSubject() + \"\" + subject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODc4MQ==", "bodyText": "Resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128781", "createdAt": "2020-04-29T07:51:04Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      contactUsSubject = appConfig.getContactusMailSubject() + \"\" + subject;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjU4Ng=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzQ4NDM5OnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1NToyOFrOGMqw-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MToyNVrOGNziGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjc2MA==", "bodyText": "Type can be a primitive", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936760", "createdAt": "2020-04-27T15:55:28Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODk4Ng==", "bodyText": "resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128986", "createdAt": "2020-04-29T07:51:25Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjc2MA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODUwMDcyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToyODowMlrOGM0B4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MTozM1rOGNziUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODU0Ng==", "bodyText": "Typo in feedback", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r416088546", "createdAt": "2020-04-27T19:28:02Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;\n+\n+  @Value(\"${feedback.email}\")\n+  private String feedabckToEmail;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyOTA0MQ==", "bodyText": "resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417129041", "createdAt": "2020-04-29T07:51:33Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;\n+\n+  @Value(\"${feedback.email}\")\n+  private String feedabckToEmail;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODU0Ng=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODUwMTMyOnYy", "diffSide": "RIGHT", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToyODoxMlrOGM0CSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MTo0MVrOGNziqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODY1MA==", "bodyText": "Typo in Subject", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r416088650", "createdAt": "2020-04-27T19:28:12Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyOTEzMQ==", "bodyText": "resolved", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417129131", "createdAt": "2020-04-29T07:51:41Z", "author": {"login": "aswinijena100"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODY1MA=="}, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1193, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}