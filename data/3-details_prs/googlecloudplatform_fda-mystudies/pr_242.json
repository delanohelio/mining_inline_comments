{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTQ3NjA2", "number": 242, "title": "Android: Feedback and contact us moved to registration server and pdf issue for unsupported characters fixed", "bodyText": "1.Feedback and contactUs moved from wcp to registration server\n2.Issue in pdf for unsupported character fixed\n3.Study filter screen UI fixed\nNote: #235 PR also needs to be merge along this build as it has the server side changes.", "createdAt": "2020-04-25T18:07:50Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/242", "merged": true, "mergeCommit": {"oid": "b58b21d89070013839254f11f5cf4743e0bb6022"}, "closed": true, "closedAt": "2020-04-29T18:12:07Z", "author": {"login": "naveenr-btc"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbJ9T2gH2gAyNDA4OTQ3NjA2OmQ3NmE5M2M4MjY3Mjk2NjYyZjA4YTg0NTA5OWViZDA1ZjkzYThlNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccccPagH2gAyNDA4OTQ3NjA2OjAzMWFmM2YwMWU3YzQxYjk3MzQzMDY1N2NjOWNmMmY2NDYyNTZjNDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d76a93c8267296662f08a845099ebd05f93a8e50", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d76a93c8267296662f08a845099ebd05f93a8e50", "committedDate": "2020-04-25T17:58:09Z", "message": "1.Feedback and contactUs moved from wcp to registration server\n2.Issue in pdf for unsupported character fixed\n3.Study filter screen UI fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDk5OTM2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/242#pullrequestreview-400499936", "createdAt": "2020-04-26T12:40:20Z", "commit": {"oid": "d76a93c8267296662f08a845099ebd05f93a8e50"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMjo0MzozOVrOGMEB8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMjo0OToxMlrOGMEGdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMjEyOQ==", "bodyText": "move this to where font is defined as an initial value.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/242#discussion_r415302129", "createdAt": "2020-04-26T12:43:39Z", "author": {"login": "zohrehj"}, "path": "Android/app/src/main/java/com/harvard/studyappmodule/consent/PDFWriter.java", "diffHunk": "@@ -41,18 +50,27 @@\n \n   void createPdfFile(Context context) {\n     PDFBoxResourceLoader.init(context);\n+    assetManager = context.getAssets();\n     doc = new PDDocument();\n-    font = PDType1Font.HELVETICA;\n+    try {\n+      font =\n+          PDType0Font.load(\n+              doc,\n+              assetManager.open(\"com/tom_roush/pdfbox/resources/ttf/LiberationSans-Regular.ttf\"));\n+    } catch (Exception e) {\n+      font = PDType1Font.HELVETICA;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d76a93c8267296662f08a845099ebd05f93a8e50"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMzI4NQ==", "bodyText": "method name is misleading, since if the character is encodable it will not be replaced.\nShould be called something like sanitizeCharacter instead.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/242#discussion_r415303285", "createdAt": "2020-04-26T12:49:12Z", "author": {"login": "zohrehj"}, "path": "Android/app/src/main/java/com/harvard/studyappmodule/consent/PDFWriter.java", "diffHunk": "@@ -149,34 +165,62 @@ void saveAndClose() {\n   }\n \n   private void parseIndividualLines(\n-      StringBuffer wholeLetter, List<String> lines, float fontSize, PDFont pdfFont, float width)\n-      throws IOException {\n+      StringBuffer wholeLetter, List<String> lines, float fontSize, PDFont pdfFont, float width) {\n     String[] paragraphs = wholeLetter.toString().split(System.getProperty(\"line.separator\"));\n     for (int i = 0; i < paragraphs.length; i++) {\n       int lastSpace = -1;\n       lines.add(\" \");\n-      while (paragraphs[i].length() > 0) {\n-        int spaceIndex = paragraphs[i].indexOf(' ', lastSpace + 1);\n-        if (spaceIndex < 0) {\n-          spaceIndex = paragraphs[i].length();\n-        }\n-        String subString = paragraphs[i].substring(0, spaceIndex);\n-        float size = fontSize * pdfFont.getStringWidth(subString) / 1000;\n-        if (size > width) {\n-          if (lastSpace < 0) {\n+      if (paragraphs[i] != null)\n+        while (paragraphs[i].length() > 0) {\n+          paragraphs[i] = replaceUnsupportedCharacter(paragraphs[i]).toString();\n+          int spaceIndex = paragraphs[i].indexOf(' ', lastSpace + 1);\n+          if (spaceIndex < 0) {\n+            spaceIndex = paragraphs[i].length();\n+          }\n+          String subString = paragraphs[i].substring(0, spaceIndex);\n+          float size = 10;\n+          try {\n+            size = fontSize * pdfFont.getStringWidth(subString) / 1000;\n+          } catch (Exception e) {\n+            Logger.log(e);\n+          }\n+          if (size > width) {\n+            if (lastSpace < 0) {\n+              lastSpace = spaceIndex;\n+            }\n+            subString = paragraphs[i].substring(0, lastSpace);\n+            lines.add(subString);\n+            paragraphs[i] = paragraphs[i].substring(lastSpace).trim();\n+            lastSpace = -1;\n+          } else if (spaceIndex == paragraphs[i].length()) {\n+            lines.add(paragraphs[i]);\n+            paragraphs[i] = \"\";\n+          } else {\n             lastSpace = spaceIndex;\n           }\n-          subString = paragraphs[i].substring(0, lastSpace);\n-          lines.add(subString);\n-          paragraphs[i] = paragraphs[i].substring(lastSpace).trim();\n-          lastSpace = -1;\n-        } else if (spaceIndex == paragraphs[i].length()) {\n-          lines.add(paragraphs[i]);\n-          paragraphs[i] = \"\";\n-        } else {\n-          lastSpace = spaceIndex;\n         }\n+    }\n+  }\n+\n+  private StringBuffer replaceUnsupportedCharacter(String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d76a93c8267296662f08a845099ebd05f93a8e50"}, "originalPosition": 151}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "210df470a0b8aae5339b533600b0364ae3153d16", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/210df470a0b8aae5339b533600b0364ae3153d16", "committedDate": "2020-04-29T05:23:11Z", "message": "replaced method name and removed unwanted header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5ca960efc69b38138be4127b77f579ee4fc3e8a", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c5ca960efc69b38138be4127b77f579ee4fc3e8a", "committedDate": "2020-04-29T05:36:29Z", "message": "Merge branch 'early-access' into early-access-Android-25-04"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "031af3f01e7c41b973430657cc9cf2f646256c49", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/031af3f01e7c41b973430657cc9cf2f646256c49", "committedDate": "2020-04-29T18:04:09Z", "message": "Merge branch 'early-access' into early-access-Android-25-04"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1156, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}