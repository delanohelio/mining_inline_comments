{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMjY0MjM4", "number": 2394, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoxMjowMVrOFFm_dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoxMjowMVrOFFm_dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDI2MDM3OnYy", "diffSide": "LEFT", "path": "iOS/MyStudies/MyStudies/Controllers/GatewayUI/ProfileViewUI/ProfileViewController.swift", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoxMjowMVrOIGM7uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozMTo1NFrOIGOSBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM3NDI2Nw==", "bodyText": "doesn't seem related to the change, why remove these?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2394#discussion_r543374267", "createdAt": "2020-12-15T14:12:01Z", "author": {"login": "zohrehj"}, "path": "iOS/MyStudies/MyStudies/Controllers/GatewayUI/ProfileViewUI/ProfileViewController.swift", "diffHunk": "@@ -453,61 +446,47 @@ class ProfileViewController: UIViewController, SlideMenuControllerDelegate {\n \n   @objc func toggleValueChanged(_ sender: UISwitch) {\n \n-    isProfileEdited = true\n-\n-    let toggle: UISwitch? = sender as UISwitch\n+    let toggle = sender\n \n     if user.settings != nil {\n \n       switch ToggelSwitchTags(rawValue: sender.tag)! as ToggelSwitchTags {\n       case .usePasscode:\n-        user.settings?.passcode = toggle?.isOn\n-\n-        if toggle?.isOn == true {\n-\n-          if ORKPasscodeViewController.isPasscodeStoredInKeychain() {\n-            ORKPasscodeViewController.removePasscodeFromKeychain()\n-          }\n-        }\n-\n         self.checkPasscode()\n \n       case .useTouchId:\n-        user.settings?.touchId = toggle?.isOn\n-\n+        user.settings?.touchId = toggle.isOn\n+        UserServices().updateUserProfile(self)\n       case .receivePush:\n-        user.settings?.remoteNotifications = toggle?.isOn\n+        user.settings?.remoteNotifications = toggle.isOn\n+        UserServices().updateUserProfile(self)\n       case .receiveStudyActivityReminders:\n-        user.settings?.localNotifications = toggle?.isOn\n-\n+        user.settings?.localNotifications = toggle.isOn\n         if (user.settings?.localNotifications)! {\n-          self.addProgressIndicator()\n           self.perform(\n             #selector(self.registerLocalNotification),\n             with: self,\n             afterDelay: 1.0\n           )\n         } else {\n-          self.addProgressIndicator()\n           self.perform(\n             #selector(self.cancelAllLocalNotifications),\n             with: self,\n             afterDelay: 1.0\n           )\n         }\n+        UserServices().updateUserProfile(self)\n       }\n       self.editBarButtonItem?.tintColor = UIColor.black\n     }\n   }\n \n   @objc func cancelAllLocalNotifications() {\n     LocalNotification.cancelAllLocalNotification()\n-    self.removeProgressIndicator()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2c27ff7161363780d7e7c62bcda1626f65f604"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5NjM1OA==", "bodyText": "addProgressIndicator was called before this method which was not required and blocking the UI for some ms. I have removed that and this call as well.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2394#discussion_r543396358", "createdAt": "2020-12-15T14:31:54Z", "author": {"login": "tushar-boston"}, "path": "iOS/MyStudies/MyStudies/Controllers/GatewayUI/ProfileViewUI/ProfileViewController.swift", "diffHunk": "@@ -453,61 +446,47 @@ class ProfileViewController: UIViewController, SlideMenuControllerDelegate {\n \n   @objc func toggleValueChanged(_ sender: UISwitch) {\n \n-    isProfileEdited = true\n-\n-    let toggle: UISwitch? = sender as UISwitch\n+    let toggle = sender\n \n     if user.settings != nil {\n \n       switch ToggelSwitchTags(rawValue: sender.tag)! as ToggelSwitchTags {\n       case .usePasscode:\n-        user.settings?.passcode = toggle?.isOn\n-\n-        if toggle?.isOn == true {\n-\n-          if ORKPasscodeViewController.isPasscodeStoredInKeychain() {\n-            ORKPasscodeViewController.removePasscodeFromKeychain()\n-          }\n-        }\n-\n         self.checkPasscode()\n \n       case .useTouchId:\n-        user.settings?.touchId = toggle?.isOn\n-\n+        user.settings?.touchId = toggle.isOn\n+        UserServices().updateUserProfile(self)\n       case .receivePush:\n-        user.settings?.remoteNotifications = toggle?.isOn\n+        user.settings?.remoteNotifications = toggle.isOn\n+        UserServices().updateUserProfile(self)\n       case .receiveStudyActivityReminders:\n-        user.settings?.localNotifications = toggle?.isOn\n-\n+        user.settings?.localNotifications = toggle.isOn\n         if (user.settings?.localNotifications)! {\n-          self.addProgressIndicator()\n           self.perform(\n             #selector(self.registerLocalNotification),\n             with: self,\n             afterDelay: 1.0\n           )\n         } else {\n-          self.addProgressIndicator()\n           self.perform(\n             #selector(self.cancelAllLocalNotifications),\n             with: self,\n             afterDelay: 1.0\n           )\n         }\n+        UserServices().updateUserProfile(self)\n       }\n       self.editBarButtonItem?.tintColor = UIColor.black\n     }\n   }\n \n   @objc func cancelAllLocalNotifications() {\n     LocalNotification.cancelAllLocalNotification()\n-    self.removeProgressIndicator()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM3NDI2Nw=="}, "originalCommit": {"oid": "1f2c27ff7161363780d7e7c62bcda1626f65f604"}, "originalPosition": 104}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1422, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}