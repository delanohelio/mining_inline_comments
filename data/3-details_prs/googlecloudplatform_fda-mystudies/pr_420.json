{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzODIwMjc4", "number": 420, "title": "Android- Alarm issue ", "bodyText": "Fixes for alarm issue if more than 500 alarm scheduled.", "createdAt": "2020-05-27T12:35:08Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420", "merged": true, "mergeCommit": {"oid": "e82304f945ccacf5fe6f8dd23bab006f486ae47e"}, "closed": true, "closedAt": "2020-06-02T07:12:25Z", "author": {"login": "naveenr-btc"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcko9zkAH2gAyNDIzODIwMjc4OmU1YzFjY2JiMTg5MDhlZDFiMzAyMTQwZThjOTAwOGVkYWYxMGYzMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnPdqLAH2gAyNDIzODIwMjc4OmUxMjRhNGMxYmQ5MjcyNjk4NWM4NjczOWY2MGJlOWU5NzY3YjU2NWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e5c1ccbb18908ed1b302140e8c9008edaf10f335", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e5c1ccbb18908ed1b302140e8c9008edaf10f335", "committedDate": "2020-05-25T05:11:04Z", "message": "Notification issue fix for #410"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6", "committedDate": "2020-05-27T12:29:18Z", "message": "notification issue fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MjgxNjkx", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#pullrequestreview-419281691", "createdAt": "2020-05-27T14:36:57Z", "commit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDozNjo1N1rOGbNj1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTowMzozNlrOGbPFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE4NjkwMg==", "bodyText": "This logic appears to be duplicated from NotificationModuleSubscriber. Please extract it to a common utility function.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431186902", "createdAt": "2020-05-27T14:36:57Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/AlarmReceiver.java", "diffHunk": "@@ -53,154 +57,222 @@\n \n   @Override\n   public void onReceive(Context context, Intent intent) {\n-    Intent notificationIntent1 = new Intent(context, NotificationActivity.class);\n-\n-    TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);\n-    stackBuilder.addParentStack(NotificationActivity.class);\n-    stackBuilder.addNextIntent(notificationIntent1);\n-\n-    String title = intent.getStringExtra(\"title\");\n-    String description = intent.getStringExtra(\"description\");\n-    String type = intent.getStringExtra(\"type\");\n-    String studyId = null;\n-    if (intent.getStringExtra(\"studyId\") != null) {\n-      studyId = intent.getStringExtra(\"studyId\");\n-    }\n \n-    String activityId = null;\n-    if (intent.getStringExtra(\"activityId\") != null) {\n-      activityId = intent.getStringExtra(\"activityId\");\n+    int pendingIntentId = 0;\n+    try {\n+      pendingIntentId = intent.getIntExtra(\"pendingIntentId\", 0);\n+    } catch (Exception e) {\n+      Logger.log(e);\n     }\n+    if (pendingIntentId == 1) {\n+      Realm mRealm = AppController.getRealmobj(context);\n+      DBServiceSubscriber dbServiceSubscriber = new DBServiceSubscriber();\n+      RealmResults<NotificationDb> notificationDbs =\n+          dbServiceSubscriber.getNotificationDbByCurrentDate(mRealm);\n+      NotificationModuleSubscriber notificationModuleSubscriber =\n+          new NotificationModuleSubscriber(dbServiceSubscriber, mRealm);\n+      if (notificationDbs != null && notificationDbs.size() > 0) {\n+        for (int i = 0; i < notificationDbs.size(); i++) {\n+          Calendar time = Calendar.getInstance();\n+          time.setTime(notificationDbs.get(i).getDateTime());\n+          notificationModuleSubscriber.setAlarm(\n+              context,\n+              notificationDbs.get(i).getTitle(),\n+              notificationDbs.get(i).getDescription(),\n+              notificationDbs.get(i).getType(),\n+              notificationDbs.get(i).getNotificationId(),\n+              notificationDbs.get(i).getStudyId(),\n+              notificationDbs.get(i).getActivityId(),\n+              time);\n+        }\n+      }\n+      Calendar calendar = Calendar.getInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE4NzY1Ng==", "bodyText": "Use foreach instead", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431187656", "createdAt": "2020-05-27T14:37:42Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/AlarmReceiver.java", "diffHunk": "@@ -53,154 +57,222 @@\n \n   @Override\n   public void onReceive(Context context, Intent intent) {\n-    Intent notificationIntent1 = new Intent(context, NotificationActivity.class);\n-\n-    TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);\n-    stackBuilder.addParentStack(NotificationActivity.class);\n-    stackBuilder.addNextIntent(notificationIntent1);\n-\n-    String title = intent.getStringExtra(\"title\");\n-    String description = intent.getStringExtra(\"description\");\n-    String type = intent.getStringExtra(\"type\");\n-    String studyId = null;\n-    if (intent.getStringExtra(\"studyId\") != null) {\n-      studyId = intent.getStringExtra(\"studyId\");\n-    }\n \n-    String activityId = null;\n-    if (intent.getStringExtra(\"activityId\") != null) {\n-      activityId = intent.getStringExtra(\"activityId\");\n+    int pendingIntentId = 0;\n+    try {\n+      pendingIntentId = intent.getIntExtra(\"pendingIntentId\", 0);\n+    } catch (Exception e) {\n+      Logger.log(e);\n     }\n+    if (pendingIntentId == 1) {\n+      Realm mRealm = AppController.getRealmobj(context);\n+      DBServiceSubscriber dbServiceSubscriber = new DBServiceSubscriber();\n+      RealmResults<NotificationDb> notificationDbs =\n+          dbServiceSubscriber.getNotificationDbByCurrentDate(mRealm);\n+      NotificationModuleSubscriber notificationModuleSubscriber =\n+          new NotificationModuleSubscriber(dbServiceSubscriber, mRealm);\n+      if (notificationDbs != null && notificationDbs.size() > 0) {\n+        for (int i = 0; i < notificationDbs.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE4OTI1Nw==", "bodyText": "Size check is unnecessary when iterating through a list.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431189257", "createdAt": "2020-05-27T14:39:37Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/AlarmReceiver.java", "diffHunk": "@@ -53,154 +57,222 @@\n \n   @Override\n   public void onReceive(Context context, Intent intent) {\n-    Intent notificationIntent1 = new Intent(context, NotificationActivity.class);\n-\n-    TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);\n-    stackBuilder.addParentStack(NotificationActivity.class);\n-    stackBuilder.addNextIntent(notificationIntent1);\n-\n-    String title = intent.getStringExtra(\"title\");\n-    String description = intent.getStringExtra(\"description\");\n-    String type = intent.getStringExtra(\"type\");\n-    String studyId = null;\n-    if (intent.getStringExtra(\"studyId\") != null) {\n-      studyId = intent.getStringExtra(\"studyId\");\n-    }\n \n-    String activityId = null;\n-    if (intent.getStringExtra(\"activityId\") != null) {\n-      activityId = intent.getStringExtra(\"activityId\");\n+    int pendingIntentId = 0;\n+    try {\n+      pendingIntentId = intent.getIntExtra(\"pendingIntentId\", 0);\n+    } catch (Exception e) {\n+      Logger.log(e);\n     }\n+    if (pendingIntentId == 1) {\n+      Realm mRealm = AppController.getRealmobj(context);\n+      DBServiceSubscriber dbServiceSubscriber = new DBServiceSubscriber();\n+      RealmResults<NotificationDb> notificationDbs =\n+          dbServiceSubscriber.getNotificationDbByCurrentDate(mRealm);\n+      NotificationModuleSubscriber notificationModuleSubscriber =\n+          new NotificationModuleSubscriber(dbServiceSubscriber, mRealm);\n+      if (notificationDbs != null && notificationDbs.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE4OTQzNA==", "bodyText": "Can you make each branch here a separate function?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431189434", "createdAt": "2020-05-27T14:39:51Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/AlarmReceiver.java", "diffHunk": "@@ -53,154 +57,222 @@\n \n   @Override\n   public void onReceive(Context context, Intent intent) {\n-    Intent notificationIntent1 = new Intent(context, NotificationActivity.class);\n-\n-    TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);\n-    stackBuilder.addParentStack(NotificationActivity.class);\n-    stackBuilder.addNextIntent(notificationIntent1);\n-\n-    String title = intent.getStringExtra(\"title\");\n-    String description = intent.getStringExtra(\"description\");\n-    String type = intent.getStringExtra(\"type\");\n-    String studyId = null;\n-    if (intent.getStringExtra(\"studyId\") != null) {\n-      studyId = intent.getStringExtra(\"studyId\");\n-    }\n \n-    String activityId = null;\n-    if (intent.getStringExtra(\"activityId\") != null) {\n-      activityId = intent.getStringExtra(\"activityId\");\n+    int pendingIntentId = 0;\n+    try {\n+      pendingIntentId = intent.getIntExtra(\"pendingIntentId\", 0);\n+    } catch (Exception e) {\n+      Logger.log(e);\n     }\n+    if (pendingIntentId == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE4OTk3Ng==", "bodyText": "You shouldn't be expecting NullPointerExceptions", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431189976", "createdAt": "2020-05-27T14:40:33Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/AlarmReceiver.java", "diffHunk": "@@ -53,154 +57,222 @@\n \n   @Override\n   public void onReceive(Context context, Intent intent) {\n-    Intent notificationIntent1 = new Intent(context, NotificationActivity.class);\n-\n-    TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);\n-    stackBuilder.addParentStack(NotificationActivity.class);\n-    stackBuilder.addNextIntent(notificationIntent1);\n-\n-    String title = intent.getStringExtra(\"title\");\n-    String description = intent.getStringExtra(\"description\");\n-    String type = intent.getStringExtra(\"type\");\n-    String studyId = null;\n-    if (intent.getStringExtra(\"studyId\") != null) {\n-      studyId = intent.getStringExtra(\"studyId\");\n-    }\n \n-    String activityId = null;\n-    if (intent.getStringExtra(\"activityId\") != null) {\n-      activityId = intent.getStringExtra(\"activityId\");\n+    int pendingIntentId = 0;\n+    try {\n+      pendingIntentId = intent.getIntExtra(\"pendingIntentId\", 0);\n+    } catch (Exception e) {\n+      Logger.log(e);\n     }\n+    if (pendingIntentId == 1) {\n+      Realm mRealm = AppController.getRealmobj(context);\n+      DBServiceSubscriber dbServiceSubscriber = new DBServiceSubscriber();\n+      RealmResults<NotificationDb> notificationDbs =\n+          dbServiceSubscriber.getNotificationDbByCurrentDate(mRealm);\n+      NotificationModuleSubscriber notificationModuleSubscriber =\n+          new NotificationModuleSubscriber(dbServiceSubscriber, mRealm);\n+      if (notificationDbs != null && notificationDbs.size() > 0) {\n+        for (int i = 0; i < notificationDbs.size(); i++) {\n+          Calendar time = Calendar.getInstance();\n+          time.setTime(notificationDbs.get(i).getDateTime());\n+          notificationModuleSubscriber.setAlarm(\n+              context,\n+              notificationDbs.get(i).getTitle(),\n+              notificationDbs.get(i).getDescription(),\n+              notificationDbs.get(i).getType(),\n+              notificationDbs.get(i).getNotificationId(),\n+              notificationDbs.get(i).getStudyId(),\n+              notificationDbs.get(i).getActivityId(),\n+              time);\n+        }\n+      }\n+      Calendar calendar = Calendar.getInstance();\n+      calendar.set(Calendar.HOUR_OF_DAY, 0);\n+      calendar.set(Calendar.MINUTE, 0);\n+      calendar.set(Calendar.SECOND, 0);\n+      calendar.set(Calendar.MILLISECOND, 0);\n+      calendar.add(Calendar.DATE, 1);\n \n-    int notificationId = intent.getIntExtra(\"notificationId\", 0);\n+      try {\n+        Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+        notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+        notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n+        notificationIntent.putExtra(\"pendingIntentId\", 1);\n+        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+        PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                context, 1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+        try {\n+          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            alarmManager.setExactAndAllowWhileIdle(\n+                AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+          } else {\n+            alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+          }\n+        } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MTc3Mw==", "bodyText": "More duplicated logic. Please extract to a helper function.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431191773", "createdAt": "2020-05-27T14:43:04Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MjE4NA==", "bodyText": "nit: typo, alarm", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431192184", "createdAt": "2020-05-27T14:43:35Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5Mjc0NA==", "bodyText": "Don't catch Exception. There are no checked exceptions in this code block", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431192744", "createdAt": "2020-05-27T14:44:18Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent\n+    boolean isWorking = false;\n+    try {\n+      Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n+      notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+      notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n+      notificationIntent1.putExtra(\"pendingIntentId\", 1);\n+      isWorking =\n+          (PendingIntent.getBroadcast(context, 1, notificationIntent1, PendingIntent.FLAG_NO_CREATE)\n+              != null); // just changed the flag\n+    } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MzEwMg==", "bodyText": "if (isWorking) {\n   return;\n}", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431193102", "createdAt": "2020-05-27T14:44:47Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent\n+    boolean isWorking = false;\n+    try {\n+      Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n+      notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+      notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n+      notificationIntent1.putExtra(\"pendingIntentId\", 1);\n+      isWorking =\n+          (PendingIntent.getBroadcast(context, 1, notificationIntent1, PendingIntent.FLAG_NO_CREATE)\n+              != null); // just changed the flag\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+\n+    if (!isWorking) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5NDA2MA==", "bodyText": "Can you use a more meaningful name than isWorking? This doesn't help me understand what is going on here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431194060", "createdAt": "2020-05-27T14:46:04Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent\n+    boolean isWorking = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5Njk0OQ==", "bodyText": "Use chained setters.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431196949", "createdAt": "2020-05-27T14:49:53Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent\n+    boolean isWorking = false;\n+    try {\n+      Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n+      notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+      notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n+      notificationIntent1.putExtra(\"pendingIntentId\", 1);\n+      isWorking =\n+          (PendingIntent.getBroadcast(context, 1, notificationIntent1, PendingIntent.FLAG_NO_CREATE)\n+              != null); // just changed the flag\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+\n+    if (!isWorking) {\n+      Calendar calendar = Calendar.getInstance();\n+      calendar.set(Calendar.HOUR_OF_DAY, 0);\n+      calendar.set(Calendar.MINUTE, 0);\n+      calendar.set(Calendar.SECOND, 0);\n+      calendar.set(Calendar.MILLISECOND, 0);\n+      calendar.add(Calendar.DATE, 1);\n \n-          Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n-          notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-          notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n-          notificationIntent1.putExtra(\"title\", title);\n-          notificationIntent1.putExtra(\"description\", description1);\n-          notificationIntent1.putExtra(\"type\", ACTIVITY);\n-          notificationIntent1.putExtra(\"studyId\", activityRun.getStudyId());\n-          notificationIntent1.putExtra(\"activityId\", activityRun.getActivityId());\n-          notificationIntent1.putExtra(\"notificationId\", notificationId);\n-          notificationIntent1.putExtra(\n-              \"date\", AppController.getDateFormat().format(time1.getTime()));\n-          notificationIntent1.putExtra(\"notificationNumber\", notificationNumber);\n-          try {\n-            int pendingIntentId =\n-                Integer.parseInt(\n-                        AppController.getHelperSharedPreference()\n-                            .readPreference(\n-                                context,\n-                                context.getResources().getString(R.string.pendingCount),\n-                                \"0\"))\n-                    + 1;\n-            AppController.getHelperSharedPreference()\n-                .writePreference(\n-                    context,\n-                    context.getResources().getString(R.string.pendingCount),\n-                    \"\" + pendingIntentId);\n-            PendingIntent broadcast =\n-                PendingIntent.getBroadcast(\n-                    context,\n-                    pendingIntentId,\n-                    notificationIntent1,\n-                    PendingIntent.FLAG_UPDATE_CURRENT);\n-            PendingIntents pendingIntents = new PendingIntents();\n-            pendingIntents.setActivityId(activityRun.getActivityId());\n-            pendingIntents.setStudyId(activityRun.getStudyId());\n-            pendingIntents.setPendingIntentId(pendingIntentId);\n-            pendingIntents.setDescription(description1);\n-            pendingIntents.setTitle(title);\n-            pendingIntents.setType(ACTIVITY);\n-            pendingIntents.setNotificationId(notificationId);\n-\n-            dbServiceSubscriber.savePendingIntentId(context, pendingIntents);\n-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-              alarmManager.setExactAndAllowWhileIdle(\n-                  AlarmManager.RTC_WAKEUP, time1.getTimeInMillis(), broadcast);\n-            } else {\n-              alarmManager.setExact(AlarmManager.RTC_WAKEUP, time1.getTimeInMillis(), broadcast);\n-            }\n-          } catch (Exception e) {\n-            Logger.log(e);\n+      try {\n+        Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+        notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+        notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n+        notificationIntent.putExtra(\"pendingIntentId\", 1);\n+        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+        PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                context, 1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+        try {\n+          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            alarmManager.setExactAndAllowWhileIdle(\n+                AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+          } else {\n+            alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n           }\n+        } catch (NullPointerException e) {\n+          Logger.log(e);\n         }\n+      } catch (Exception e) {\n+        Logger.log(e);\n       }\n+    }\n+  }\n+\n+  private boolean isSameDay(Date date1, Date date2) {\n+    Calendar calendar1 = Calendar.getInstance();\n+    calendar1.setTime(date1);\n+    Calendar calendar2 = Calendar.getInstance();\n+    calendar2.setTime(date2);\n+    return calendar1.get(Calendar.YEAR) == calendar2.get(Calendar.YEAR)\n+        && calendar1.get(Calendar.MONTH) == calendar2.get(Calendar.MONTH)\n+        && calendar1.get(Calendar.DAY_OF_MONTH) == calendar2.get(Calendar.DAY_OF_MONTH);\n+  }\n \n+  public void setAlarm(\n+      Context context,\n+      String title,\n+      String description,\n+      String type,\n+      int notificationId,\n+      String studyId,\n+      String activityId,\n+      Calendar time) {\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+    int notificationNumber = 1;\n+    Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+    notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 219}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxMTg2NA==", "bodyText": "Why 5?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r431211864", "createdAt": "2020-05-27T15:03:36Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent\n+    boolean isWorking = false;\n+    try {\n+      Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n+      notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+      notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n+      notificationIntent1.putExtra(\"pendingIntentId\", 1);\n+      isWorking =\n+          (PendingIntent.getBroadcast(context, 1, notificationIntent1, PendingIntent.FLAG_NO_CREATE)\n+              != null); // just changed the flag\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+\n+    if (!isWorking) {\n+      Calendar calendar = Calendar.getInstance();\n+      calendar.set(Calendar.HOUR_OF_DAY, 0);\n+      calendar.set(Calendar.MINUTE, 0);\n+      calendar.set(Calendar.SECOND, 0);\n+      calendar.set(Calendar.MILLISECOND, 0);\n+      calendar.add(Calendar.DATE, 1);\n \n-          Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n-          notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-          notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n-          notificationIntent1.putExtra(\"title\", title);\n-          notificationIntent1.putExtra(\"description\", description1);\n-          notificationIntent1.putExtra(\"type\", ACTIVITY);\n-          notificationIntent1.putExtra(\"studyId\", activityRun.getStudyId());\n-          notificationIntent1.putExtra(\"activityId\", activityRun.getActivityId());\n-          notificationIntent1.putExtra(\"notificationId\", notificationId);\n-          notificationIntent1.putExtra(\n-              \"date\", AppController.getDateFormat().format(time1.getTime()));\n-          notificationIntent1.putExtra(\"notificationNumber\", notificationNumber);\n-          try {\n-            int pendingIntentId =\n-                Integer.parseInt(\n-                        AppController.getHelperSharedPreference()\n-                            .readPreference(\n-                                context,\n-                                context.getResources().getString(R.string.pendingCount),\n-                                \"0\"))\n-                    + 1;\n-            AppController.getHelperSharedPreference()\n-                .writePreference(\n-                    context,\n-                    context.getResources().getString(R.string.pendingCount),\n-                    \"\" + pendingIntentId);\n-            PendingIntent broadcast =\n-                PendingIntent.getBroadcast(\n-                    context,\n-                    pendingIntentId,\n-                    notificationIntent1,\n-                    PendingIntent.FLAG_UPDATE_CURRENT);\n-            PendingIntents pendingIntents = new PendingIntents();\n-            pendingIntents.setActivityId(activityRun.getActivityId());\n-            pendingIntents.setStudyId(activityRun.getStudyId());\n-            pendingIntents.setPendingIntentId(pendingIntentId);\n-            pendingIntents.setDescription(description1);\n-            pendingIntents.setTitle(title);\n-            pendingIntents.setType(ACTIVITY);\n-            pendingIntents.setNotificationId(notificationId);\n-\n-            dbServiceSubscriber.savePendingIntentId(context, pendingIntents);\n-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-              alarmManager.setExactAndAllowWhileIdle(\n-                  AlarmManager.RTC_WAKEUP, time1.getTimeInMillis(), broadcast);\n-            } else {\n-              alarmManager.setExact(AlarmManager.RTC_WAKEUP, time1.getTimeInMillis(), broadcast);\n-            }\n-          } catch (Exception e) {\n-            Logger.log(e);\n+      try {\n+        Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+        notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+        notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n+        notificationIntent.putExtra(\"pendingIntentId\", 1);\n+        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+        PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                context, 1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+        try {\n+          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            alarmManager.setExactAndAllowWhileIdle(\n+                AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+          } else {\n+            alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n           }\n+        } catch (NullPointerException e) {\n+          Logger.log(e);\n         }\n+      } catch (Exception e) {\n+        Logger.log(e);\n       }\n+    }\n+  }\n+\n+  private boolean isSameDay(Date date1, Date date2) {\n+    Calendar calendar1 = Calendar.getInstance();\n+    calendar1.setTime(date1);\n+    Calendar calendar2 = Calendar.getInstance();\n+    calendar2.setTime(date2);\n+    return calendar1.get(Calendar.YEAR) == calendar2.get(Calendar.YEAR)\n+        && calendar1.get(Calendar.MONTH) == calendar2.get(Calendar.MONTH)\n+        && calendar1.get(Calendar.DAY_OF_MONTH) == calendar2.get(Calendar.DAY_OF_MONTH);\n+  }\n \n+  public void setAlarm(\n+      Context context,\n+      String title,\n+      String description,\n+      String type,\n+      int notificationId,\n+      String studyId,\n+      String activityId,\n+      Calendar time) {\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+    int notificationNumber = 1;\n+    Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+    notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+    notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n+    notificationIntent.putExtra(\"title\", title);\n+    notificationIntent.putExtra(\"description\", description);\n+    notificationIntent.putExtra(\"type\", type);\n+    notificationIntent.putExtra(\"notificationId\", notificationId);\n+    notificationIntent.putExtra(\"studyId\", studyId);\n+    notificationIntent.putExtra(\"activityId\", activityId);\n+    notificationIntent.putExtra(\"date\", AppController.getDateFormat().format(time.getTime()));\n+    notificationIntent.putExtra(\"notificationNumber\", notificationNumber);\n+    try {\n+      int pendingIntentId =\n+          Integer.parseInt(\n+                  AppController.getHelperSharedPreference()\n+                      .readPreference(\n+                          context, context.getResources().getString(R.string.pendingCount), \"5\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 234}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ddd774b776e07458c06ec87cb1131b29069579", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/91ddd774b776e07458c06ec87cb1131b29069579", "committedDate": "2020-05-28T18:36:35Z", "message": "code review updates for notification classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTUyMTQ0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#pullrequestreview-420952144", "createdAt": "2020-05-29T13:31:29Z", "commit": {"oid": "91ddd774b776e07458c06ec87cb1131b29069579"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzozMToyOVrOGccuuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzozNTo0M1rOGcc4Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4NDAyNA==", "bodyText": "Do you know these will be in order? Otherwise this should use max", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r432484024", "createdAt": "2020-05-29T13:31:29Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -287,194 +200,184 @@ private boolean isSameDay(Date date1, Date date2) {\n     Calendar calendar2 = Calendar.getInstance();\n     calendar2.setTime(date2);\n     return calendar1.get(Calendar.YEAR) == calendar2.get(Calendar.YEAR)\n-        && calendar1.get(Calendar.MONTH) == calendar2.get(Calendar.MONTH)\n-        && calendar1.get(Calendar.DAY_OF_MONTH) == calendar2.get(Calendar.DAY_OF_MONTH);\n+            && calendar1.get(Calendar.MONTH) == calendar2.get(Calendar.MONTH)\n+            && calendar1.get(Calendar.DAY_OF_MONTH) == calendar2.get(Calendar.DAY_OF_MONTH);\n   }\n \n   public void setAlarm(\n-      Context context,\n-      String title,\n-      String description,\n-      String type,\n-      int notificationId,\n-      String studyId,\n-      String activityId,\n-      Calendar time) {\n+          Context context,\n+          String title,\n+          String description,\n+          String type,\n+          int notificationId,\n+          String studyId,\n+          String activityId,\n+          Calendar time) {\n     AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n     int notificationNumber = 1;\n-    Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n-    notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-    notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n-    notificationIntent.putExtra(\"title\", title);\n-    notificationIntent.putExtra(\"description\", description);\n-    notificationIntent.putExtra(\"type\", type);\n-    notificationIntent.putExtra(\"notificationId\", notificationId);\n-    notificationIntent.putExtra(\"studyId\", studyId);\n-    notificationIntent.putExtra(\"activityId\", activityId);\n-    notificationIntent.putExtra(\"date\", AppController.getDateFormat().format(time.getTime()));\n-    notificationIntent.putExtra(\"notificationNumber\", notificationNumber);\n-    try {\n-      int pendingIntentId =\n-          Integer.parseInt(\n-                  AppController.getHelperSharedPreference()\n-                      .readPreference(\n-                          context, context.getResources().getString(R.string.pendingCount), \"5\"))\n-              + 1;\n-      AppController.getHelperSharedPreference()\n-          .writePreference(\n-              context,\n-              context.getResources().getString(R.string.pendingCount),\n-              \"\" + pendingIntentId);\n-\n-      notificationIntent.putExtra(\"pendingIntentId\", pendingIntentId);\n+    Intent notificationIntent =\n+            new Intent(context, AlarmReceiver.class)\n+                    .setAction(\"android.media.action.DISPLAY_NOTIFICATION\")\n+                    .addCategory(\"android.intent.category.DEFAULT\")\n+                    .putExtra(\"title\", title)\n+                    .putExtra(\"description\", description)\n+                    .putExtra(\"type\", type)\n+                    .putExtra(\"notificationId\", notificationId)\n+                    .putExtra(\"studyId\", studyId)\n+                    .putExtra(\"activityId\", activityId)\n+                    .putExtra(\"date\", AppController.getDateFormat().format(time.getTime()))\n+                    .putExtra(\"notificationNumber\", notificationNumber);\n+\n+    int pendingIntentId =\n+            Integer.parseInt(\n+                    AppController.getHelperSharedPreference()\n+                            .readPreference(\n+                                    context, context.getResources().getString(R.string.pendingCount), \"5\"))\n+                    + 1;\n+    AppController.getHelperSharedPreference()\n+            .writePreference(\n+                    context, context.getResources().getString(R.string.pendingCount), \"\" + pendingIntentId);\n \n-      PendingIntent broadcast =\n-          PendingIntent.getBroadcast(\n-              context, pendingIntentId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n-      PendingIntents pendingIntents = new PendingIntents();\n-      pendingIntents.setActivityId(activityId);\n-      pendingIntents.setStudyId(studyId);\n-      pendingIntents.setPendingIntentId(pendingIntentId);\n-      pendingIntents.setDescription(description);\n-      pendingIntents.setTitle(title);\n-      pendingIntents.setType(type);\n-      pendingIntents.setNotificationId(notificationId);\n+    notificationIntent.putExtra(\"pendingIntentId\", pendingIntentId);\n \n-      dbServiceSubscriber.savePendingIntentId(context, pendingIntents);\n-      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-        alarmManager.setExactAndAllowWhileIdle(\n-            AlarmManager.RTC_WAKEUP, time.getTimeInMillis(), broadcast);\n-      } else {\n-        alarmManager.setExact(AlarmManager.RTC_WAKEUP, time.getTimeInMillis(), broadcast);\n-      }\n-    } catch (Exception e) {\n-      Logger.log(e);\n+    PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                    context, pendingIntentId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+    PendingIntents pendingIntents = new PendingIntents();\n+    pendingIntents.setActivityId(activityId);\n+    pendingIntents.setStudyId(studyId);\n+    pendingIntents.setPendingIntentId(pendingIntentId);\n+    pendingIntents.setDescription(description);\n+    pendingIntents.setTitle(title);\n+    pendingIntents.setType(type);\n+    pendingIntents.setNotificationId(notificationId);\n+\n+    dbServiceSubscriber.savePendingIntentId(context, pendingIntents);\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+      alarmManager.setExactAndAllowWhileIdle(\n+              AlarmManager.RTC_WAKEUP, time.getTimeInMillis(), broadcast);\n+    } else {\n+      alarmManager.setExact(AlarmManager.RTC_WAKEUP, time.getTimeInMillis(), broadcast);\n     }\n   }\n \n   public void generateTwoWeekNotification(Date date, Context context) {\n-    try {\n-      String title = context.getResources().getString(R.string.app_name);\n-      Calendar calendar = Calendar.getInstance();\n-      calendar.setTime(date);\n-      AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n \n-      Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n-      notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-      notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n-      notificationIntent.putExtra(\"title\", title);\n-      notificationIntent.putExtra(\n-          \"description\", context.getResources().getString(R.string.studie_your_enrolled));\n-      notificationIntent.putExtra(\"type\", NO_USE_NOTIFICATION);\n-      notificationIntent.putExtra(\"date\", AppController.getDateFormat().format(calendar.getTime()));\n+    String title = context.getResources().getString(R.string.app_name);\n+    Calendar calendar = Calendar.getInstance();\n+    calendar.setTime(date);\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n \n-      PendingIntent broadcast =\n-          PendingIntent.getBroadcast(\n-              context, pendingId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n-      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-        alarmManager.setExactAndAllowWhileIdle(\n-            AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n-      } else {\n-        alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n-      }\n-    } catch (Exception e) {\n-      Logger.log(e);\n+    Intent notificationIntent =\n+            new Intent(context, AlarmReceiver.class)\n+                    .setAction(\"android.media.action.DISPLAY_NOTIFICATION\")\n+                    .addCategory(\"android.intent.category.DEFAULT\")\n+                    .putExtra(\"title\", title)\n+                    .putExtra(\n+                            \"description\", context.getResources().getString(R.string.studie_your_enrolled))\n+                    .putExtra(\"type\", NO_USE_NOTIFICATION)\n+                    .putExtra(\"date\", AppController.getDateFormat().format(calendar.getTime()));\n+\n+    PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                    context, pendingId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+      alarmManager.setExactAndAllowWhileIdle(\n+              AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+    } else {\n+      alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n     }\n   }\n \n   public void cancelTwoWeekNotification(Context context) {\n-    try {\n-      AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n-      String title = context.getResources().getString(R.string.app_name);\n-      Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n-      notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-      notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n-      notificationIntent.putExtra(\"title\", title);\n-      notificationIntent.putExtra(\n-          \"description\", context.getResources().getString(R.string.studie_your_enrolled));\n-      notificationIntent.putExtra(\"type\", NO_USE_NOTIFICATION);\n-      PendingIntent broadcast =\n-          PendingIntent.getBroadcast(\n-              context, pendingId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n-      broadcast.cancel();\n-      alarmManager.cancel(broadcast);\n-    } catch (Exception e) {\n-      Logger.log(e);\n-    }\n+\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+    String title = context.getResources().getString(R.string.app_name);\n+    Intent notificationIntent =\n+            new Intent(context, AlarmReceiver.class)\n+                    .setAction(\"android.media.action.DISPLAY_NOTIFICATION\")\n+                    .addCategory(\"android.intent.category.DEFAULT\")\n+                    .putExtra(\"title\", title)\n+                    .putExtra(\n+                            \"description\", context.getResources().getString(R.string.studie_your_enrolled))\n+                    .putExtra(\"type\", NO_USE_NOTIFICATION);\n+    PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                    context, pendingId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+    broadcast.cancel();\n+    alarmManager.cancel(broadcast);\n   }\n \n   public void generateNotificationTurnOffNotification(Date date, Context context) {\n-    try {\n-      String title = context.getResources().getString(R.string.app_name);\n-      Calendar calendar = Calendar.getInstance();\n-      calendar.setTime(date);\n-      calendar.add(Calendar.DAY_OF_MONTH, 7);\n-      AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n \n-      Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n-      notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-      notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n-      notificationIntent.putExtra(\"title\", title);\n-      notificationIntent.putExtra(\n-          \"description\", context.getResources().getString(R.string.notificatinturnoffnotification));\n-      notificationIntent.putExtra(\"type\", NOTIFICATION_TURN_OFF_NOTIFICATION);\n-      notificationIntent.putExtra(\"date\", AppController.getDateFormat().format(calendar.getTime()));\n+    String title = context.getResources().getString(R.string.app_name);\n+    Calendar calendar = Calendar.getInstance();\n+    calendar.setTime(date);\n+    calendar.add(Calendar.DAY_OF_MONTH, 7);\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n \n-      PendingIntent broadcast =\n-          PendingIntent.getBroadcast(\n-              context, pendingId1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n-      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-        alarmManager.setExactAndAllowWhileIdle(\n-            AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n-      } else {\n-        alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n-      }\n-    } catch (Exception e) {\n-      Logger.log(e);\n+    Intent notificationIntent =\n+            new Intent(context, AlarmReceiver.class)\n+                    .setAction(\"android.media.action.DISPLAY_NOTIFICATION\")\n+                    .addCategory(\"android.intent.category.DEFAULT\")\n+                    .putExtra(\"title\", title)\n+                    .putExtra(\n+                            \"description\",\n+                            context.getResources().getString(R.string.notificatinturnoffnotification))\n+                    .putExtra(\"type\", NOTIFICATION_TURN_OFF_NOTIFICATION)\n+                    .putExtra(\"date\", AppController.getDateFormat().format(calendar.getTime()));\n+\n+    PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                    context, pendingId1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+      alarmManager.setExactAndAllowWhileIdle(\n+              AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+    } else {\n+      alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n     }\n   }\n \n   public void cancelNotificationTurnOffNotification(Context context) {\n-    try {\n-      AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n-      String title = context.getResources().getString(R.string.app_name);\n-      Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n-      notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-      notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n-      notificationIntent.putExtra(\"title\", title);\n-      notificationIntent.putExtra(\n-          \"description\", context.getResources().getString(R.string.notificatinturnoffnotification));\n-      notificationIntent.putExtra(\"type\", NOTIFICATION_TURN_OFF_NOTIFICATION);\n-      PendingIntent broadcast =\n-          PendingIntent.getBroadcast(\n-              context, pendingId1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n-      broadcast.cancel();\n-      alarmManager.cancel(broadcast);\n-    } catch (Exception e) {\n-      Logger.log(e);\n-    }\n+\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+    String title = context.getResources().getString(R.string.app_name);\n+    Intent notificationIntent =\n+            new Intent(context, AlarmReceiver.class)\n+                    .setAction(\"android.media.action.DISPLAY_NOTIFICATION\")\n+                    .addCategory(\"android.intent.category.DEFAULT\")\n+                    .putExtra(\"title\", title)\n+                    .putExtra(\n+                            \"description\",\n+                            context.getResources().getString(R.string.notificatinturnoffnotification))\n+                    .putExtra(\"type\", NOTIFICATION_TURN_OFF_NOTIFICATION);\n+    PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                    context, pendingId1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+    broadcast.cancel();\n+    alarmManager.cancel(broadcast);\n   }\n \n   public void generateAnchorDateLocalNotification(\n-      Date date,\n-      String activityId,\n-      String studyId,\n-      Context context,\n-      String notificationTest,\n-      String resourceId) {\n+          Date date,\n+          String activityId,\n+          String studyId,\n+          Context context,\n+          String notificationTest,\n+          String resourceId) {\n     String title = \"MyStudies\";\n     String description = \"\";\n     Calendar time = Calendar.getInstance();\n     NotificationDbResources notificationsDb = null;\n     RealmResults<NotificationDbResources> notificationsDbs =\n-        dbServiceSubscriber.getNotificationDbResources(activityId, studyId, RESOURCES, mRealm);\n+            dbServiceSubscriber.getNotificationDbResources(activityId, studyId, RESOURCES, mRealm);\n     int id = 0;\n-    if (notificationsDbs != null && notificationsDbs.size() > 0) {\n-      for (int i = 0; i < notificationsDbs.size(); i++) {\n-        if (notificationsDbs.get(i).getResourceId().equalsIgnoreCase(resourceId)) {\n-          notificationsDb = notificationsDbs.get(i);\n+    if (notificationsDbs != null) {\n+      for (NotificationDbResources notificationDbResources : notificationsDbs) {\n+        if (notificationDbResources.getResourceId().equalsIgnoreCase(resourceId)) {\n+          notificationsDb = notificationDbResources;\n         }\n-        id = notificationsDbs.get(i).getId();\n+        id = notificationDbResources.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ddd774b776e07458c06ec87cb1131b29069579"}, "originalPosition": 686}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4NTYyMw==", "bodyText": "if (!time.getTime().after(new Date())) {\n    return;\n}\n...\n\nprevents the whole function from being nested.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r432485623", "createdAt": "2020-05-29T13:34:19Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -655,25 +555,73 @@ public void cancleActivityLocalNotification(Context context) {\n \n     RealmResults<PendingIntents> pendingIntentses = dbServiceSubscriber.getPendingIntentId(mRealm);\n     if (pendingIntentses != null) {\n-      for (int i = 0; i < pendingIntentses.size(); i++) {\n+      for (PendingIntents pendingIntents : pendingIntentses) {\n         Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n-        notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-        notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n-        notificationIntent.putExtra(\"title\", pendingIntentses.get(i).getTitle());\n-        notificationIntent.putExtra(\"description\", pendingIntentses.get(i).getDescription());\n-        notificationIntent.putExtra(\"type\", pendingIntentses.get(i).getType());\n-        notificationIntent.putExtra(\"studyId\", pendingIntentses.get(i).getStudyId());\n-        notificationIntent.putExtra(\"activityId\", pendingIntentses.get(i).getActivityId());\n-        notificationIntent.putExtra(\"notificationId\", pendingIntentses.get(i).getNotificationId());\n+        notificationIntent\n+                .setAction(\"android.media.action.DISPLAY_NOTIFICATION\")\n+                .addCategory(\"android.intent.category.DEFAULT\")\n+                .putExtra(\"title\", pendingIntents.getTitle())\n+                .putExtra(\"description\", pendingIntents.getDescription())\n+                .putExtra(\"type\", pendingIntents.getType())\n+                .putExtra(\"studyId\", pendingIntents.getStudyId())\n+                .putExtra(\"activityId\", pendingIntents.getActivityId())\n+                .putExtra(\"notificationId\", pendingIntents.getNotificationId());\n         PendingIntent broadcast =\n-            PendingIntent.getBroadcast(\n-                context,\n-                pendingIntentses.get(i).getPendingIntentId(),\n-                notificationIntent,\n-                PendingIntent.FLAG_UPDATE_CURRENT);\n+                PendingIntent.getBroadcast(\n+                        context,\n+                        pendingIntents.getPendingIntentId(),\n+                        notificationIntent,\n+                        PendingIntent.FLAG_UPDATE_CURRENT);\n         broadcast.cancel();\n         alarmManager.cancel(broadcast);\n       }\n     }\n   }\n+\n+  private void updateNotificationToDbAndSetAlarm(\n+          Context context,\n+          ActivityRun activityRun,\n+          Calendar time,\n+          String title,\n+          String description,\n+          int offset) {\n+    if (time.getTime().after(new Date())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ddd774b776e07458c06ec87cb1131b29069579"}, "originalPosition": 974}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4NjQ5MA==", "bodyText": "Can you make an enum to give readable names to what the notification types mean?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#discussion_r432486490", "createdAt": "2020-05-29T13:35:43Z", "author": {"login": "nikklassen"}, "path": "Android/app/src/main/java/com/harvard/notificationmodule/NotificationModuleSubscriber.java", "diffHunk": "@@ -252,61 +213,140 @@ public void generateActivityLocalNotification(\n           notificationDb.setId(1);\n           notificationDb.setEndDateTime(removeOffset(activityRun.getEndDate(), offset));\n           dbServiceSubscriber.updateNotificationToDb(context, notificationDb);\n+          set24hourScheduler(context);\n+          if (isSameDay(new Date(), time1.getTime())) {\n+            setAlarm(\n+                context,\n+                title,\n+                description1,\n+                ACTIVITY,\n+                notificationId,\n+                activityRun.getStudyId(),\n+                activityRun.getActivityId(),\n+                time1);\n+          }\n+        }\n+      }\n+\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+  }\n+\n+  private void set24hourScheduler(Context context) {\n+    // checking if alram is working with pendingIntent\n+    boolean isWorking = false;\n+    try {\n+      Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n+      notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+      notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n+      notificationIntent1.putExtra(\"pendingIntentId\", 1);\n+      isWorking =\n+          (PendingIntent.getBroadcast(context, 1, notificationIntent1, PendingIntent.FLAG_NO_CREATE)\n+              != null); // just changed the flag\n+    } catch (Exception e) {\n+      Logger.log(e);\n+    }\n+\n+    if (!isWorking) {\n+      Calendar calendar = Calendar.getInstance();\n+      calendar.set(Calendar.HOUR_OF_DAY, 0);\n+      calendar.set(Calendar.MINUTE, 0);\n+      calendar.set(Calendar.SECOND, 0);\n+      calendar.set(Calendar.MILLISECOND, 0);\n+      calendar.add(Calendar.DATE, 1);\n \n-          Intent notificationIntent1 = new Intent(context, AlarmReceiver.class);\n-          notificationIntent1.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n-          notificationIntent1.addCategory(\"android.intent.category.DEFAULT\");\n-          notificationIntent1.putExtra(\"title\", title);\n-          notificationIntent1.putExtra(\"description\", description1);\n-          notificationIntent1.putExtra(\"type\", ACTIVITY);\n-          notificationIntent1.putExtra(\"studyId\", activityRun.getStudyId());\n-          notificationIntent1.putExtra(\"activityId\", activityRun.getActivityId());\n-          notificationIntent1.putExtra(\"notificationId\", notificationId);\n-          notificationIntent1.putExtra(\n-              \"date\", AppController.getDateFormat().format(time1.getTime()));\n-          notificationIntent1.putExtra(\"notificationNumber\", notificationNumber);\n-          try {\n-            int pendingIntentId =\n-                Integer.parseInt(\n-                        AppController.getHelperSharedPreference()\n-                            .readPreference(\n-                                context,\n-                                context.getResources().getString(R.string.pendingCount),\n-                                \"0\"))\n-                    + 1;\n-            AppController.getHelperSharedPreference()\n-                .writePreference(\n-                    context,\n-                    context.getResources().getString(R.string.pendingCount),\n-                    \"\" + pendingIntentId);\n-            PendingIntent broadcast =\n-                PendingIntent.getBroadcast(\n-                    context,\n-                    pendingIntentId,\n-                    notificationIntent1,\n-                    PendingIntent.FLAG_UPDATE_CURRENT);\n-            PendingIntents pendingIntents = new PendingIntents();\n-            pendingIntents.setActivityId(activityRun.getActivityId());\n-            pendingIntents.setStudyId(activityRun.getStudyId());\n-            pendingIntents.setPendingIntentId(pendingIntentId);\n-            pendingIntents.setDescription(description1);\n-            pendingIntents.setTitle(title);\n-            pendingIntents.setType(ACTIVITY);\n-            pendingIntents.setNotificationId(notificationId);\n-\n-            dbServiceSubscriber.savePendingIntentId(context, pendingIntents);\n-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-              alarmManager.setExactAndAllowWhileIdle(\n-                  AlarmManager.RTC_WAKEUP, time1.getTimeInMillis(), broadcast);\n-            } else {\n-              alarmManager.setExact(AlarmManager.RTC_WAKEUP, time1.getTimeInMillis(), broadcast);\n-            }\n-          } catch (Exception e) {\n-            Logger.log(e);\n+      try {\n+        Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+        notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+        notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n+        notificationIntent.putExtra(\"pendingIntentId\", 1);\n+        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+        PendingIntent broadcast =\n+            PendingIntent.getBroadcast(\n+                context, 1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n+        try {\n+          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            alarmManager.setExactAndAllowWhileIdle(\n+                AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n+          } else {\n+            alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), broadcast);\n           }\n+        } catch (NullPointerException e) {\n+          Logger.log(e);\n         }\n+      } catch (Exception e) {\n+        Logger.log(e);\n       }\n+    }\n+  }\n+\n+  private boolean isSameDay(Date date1, Date date2) {\n+    Calendar calendar1 = Calendar.getInstance();\n+    calendar1.setTime(date1);\n+    Calendar calendar2 = Calendar.getInstance();\n+    calendar2.setTime(date2);\n+    return calendar1.get(Calendar.YEAR) == calendar2.get(Calendar.YEAR)\n+        && calendar1.get(Calendar.MONTH) == calendar2.get(Calendar.MONTH)\n+        && calendar1.get(Calendar.DAY_OF_MONTH) == calendar2.get(Calendar.DAY_OF_MONTH);\n+  }\n \n+  public void setAlarm(\n+      Context context,\n+      String title,\n+      String description,\n+      String type,\n+      int notificationId,\n+      String studyId,\n+      String activityId,\n+      Calendar time) {\n+    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+    int notificationNumber = 1;\n+    Intent notificationIntent = new Intent(context, AlarmReceiver.class);\n+    notificationIntent.setAction(\"android.media.action.DISPLAY_NOTIFICATION\");\n+    notificationIntent.addCategory(\"android.intent.category.DEFAULT\");\n+    notificationIntent.putExtra(\"title\", title);\n+    notificationIntent.putExtra(\"description\", description);\n+    notificationIntent.putExtra(\"type\", type);\n+    notificationIntent.putExtra(\"notificationId\", notificationId);\n+    notificationIntent.putExtra(\"studyId\", studyId);\n+    notificationIntent.putExtra(\"activityId\", activityId);\n+    notificationIntent.putExtra(\"date\", AppController.getDateFormat().format(time.getTime()));\n+    notificationIntent.putExtra(\"notificationNumber\", notificationNumber);\n+    try {\n+      int pendingIntentId =\n+          Integer.parseInt(\n+                  AppController.getHelperSharedPreference()\n+                      .readPreference(\n+                          context, context.getResources().getString(R.string.pendingCount), \"5\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxMTg2NA=="}, "originalCommit": {"oid": "7ba1cc830224e7f6ce12a9c0bcacf910a46b55c6"}, "originalPosition": 234}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acba04c0046ac8fc1de2b7383f9772e5126083a0", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/acba04c0046ac8fc1de2b7383f9772e5126083a0", "committedDate": "2020-05-29T16:13:38Z", "message": "Code review updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ba2ed392f08ab2921ca54f1ce3cc06bcf37ad2", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e0ba2ed392f08ab2921ca54f1ce3cc06bcf37ad2", "committedDate": "2020-06-01T15:08:29Z", "message": "Code review updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDMxMjIy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/420#pullrequestreview-422031222", "createdAt": "2020-06-01T17:17:54Z", "commit": {"oid": "e0ba2ed392f08ab2921ca54f1ce3cc06bcf37ad2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e124a4c1bd92726985c86739f60be9e9767b565b", "author": {"user": {"login": "naveenr-btc", "name": "Naveen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e124a4c1bd92726985c86739f60be9e9767b565b", "committedDate": "2020-06-02T07:10:06Z", "message": "Merge branch 'early-access' into early-access-notification"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1090, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}