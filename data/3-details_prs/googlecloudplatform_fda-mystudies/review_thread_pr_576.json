{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODU0OTMw", "number": 576, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjozMzo1NlrOEMTrlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjo1NzoyOVrOEMT7dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQwODIyOnYy", "diffSide": "RIGHT", "path": "common-modules/common-tests/src/main/resources/__files/hydra/authroization_code_token_response.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjozMzo1NlrOGuV91A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNToxOTo1NlrOGuYfig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0NzU3Mg==", "bodyText": "any reason why we are storing test files in __files directory? is that a common pattern?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451247572", "createdAt": "2020-07-08T02:33:56Z", "author": {"login": "zohrehj"}, "path": "common-modules/common-tests/src/main/resources/__files/hydra/authroization_code_token_response.json", "diffHunk": "@@ -0,0 +1,8 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4ODk3MA==", "bodyText": "This is a common pattern followed for Wiremock, _files folder is used for responses and mappings folder for request mapping files.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451288970", "createdAt": "2020-07-08T05:19:56Z", "author": {"login": "dhanyak-btc"}, "path": "common-modules/common-tests/src/main/resources/__files/hydra/authroization_code_token_response.json", "diffHunk": "@@ -0,0 +1,8 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0NzU3Mg=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQxMDQ4OnYy", "diffSide": "RIGHT", "path": "common-modules/common-tests/src/main/resources/mappings/hydra/authorization_code_token_request.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjozNToxMVrOGuV_BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjoxNzoyOVrOGuZm5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0Nzg3Ng==", "bodyText": "indented with tab, other files are using 4-spaces. Indentation should be consistent and follow style guide.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451247876", "createdAt": "2020-07-08T02:35:11Z", "author": {"login": "zohrehj"}, "path": "common-modules/common-tests/src/main/resources/mappings/hydra/authorization_code_token_request.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+\t\"request\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwNzIzNw==", "bodyText": "I've installed JSON Edit Plugin 1.1.2 to format the JSON files. I'll ask the team to install this plugin to format JSON files if this formatting is correct.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451307237", "createdAt": "2020-07-08T06:17:29Z", "author": {"login": "dhanyak-btc"}, "path": "common-modules/common-tests/src/main/resources/mappings/hydra/authorization_code_token_request.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+\t\"request\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0Nzg3Ng=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQyMzcwOnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjo0MjozM1rOGuWGdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNToyMTo0MFrOGuYiBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0OTc4MA==", "bodyText": "you have defined grantType above. just use that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451249780", "createdAt": "2020-07-08T02:42:33Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.RequestParamValidator.validateRequiredParams;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION_CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CLIENT_ID;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE_VERIFIER;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_URI;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SCOPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.ValidationErrorResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.HttpServletRequest;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@CrossOrigin\n+@RestController\n+@RequestMapping(\"/v1\")\n+public class OAuthController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(OAuthController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @PostMapping(\n+      value = \"/oauth2/token\",\n+      produces = MediaType.APPLICATION_JSON_VALUE,\n+      consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)\n+  public ResponseEntity<?> getToken(\n+      @RequestParam MultiValueMap<String, String> paramMap,\n+      @RequestHeader HttpHeaders headers,\n+      HttpServletRequest request) {\n+    logger.entry(String.format(\"begin %s request\", request.getRequestURI()));\n+\n+    String grantType = paramMap.getFirst(GRANT_TYPE);\n+\n+    // validate required params\n+    ValidationErrorResponse errors = null;\n+    if (REFRESH_TOKEN.equals(paramMap.getFirst(GRANT_TYPE))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MDE3OQ==", "bodyText": "nit: could be more readable as a switch statement.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451250179", "createdAt": "2020-07-08T02:44:04Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.RequestParamValidator.validateRequiredParams;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION_CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CLIENT_ID;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE_VERIFIER;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_URI;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SCOPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.ValidationErrorResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.HttpServletRequest;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@CrossOrigin\n+@RestController\n+@RequestMapping(\"/v1\")\n+public class OAuthController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(OAuthController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @PostMapping(\n+      value = \"/oauth2/token\",\n+      produces = MediaType.APPLICATION_JSON_VALUE,\n+      consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)\n+  public ResponseEntity<?> getToken(\n+      @RequestParam MultiValueMap<String, String> paramMap,\n+      @RequestHeader HttpHeaders headers,\n+      HttpServletRequest request) {\n+    logger.entry(String.format(\"begin %s request\", request.getRequestURI()));\n+\n+    String grantType = paramMap.getFirst(GRANT_TYPE);\n+\n+    // validate required params\n+    ValidationErrorResponse errors = null;\n+    if (REFRESH_TOKEN.equals(paramMap.getFirst(GRANT_TYPE))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0OTc4MA=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4OTYwNw==", "bodyText": "Refactored the code and used switch statement", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451289607", "createdAt": "2020-07-08T05:21:40Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.RequestParamValidator.validateRequiredParams;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION_CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CLIENT_ID;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE_VERIFIER;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_URI;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SCOPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.ValidationErrorResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.HttpServletRequest;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@CrossOrigin\n+@RestController\n+@RequestMapping(\"/v1\")\n+public class OAuthController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(OAuthController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @PostMapping(\n+      value = \"/oauth2/token\",\n+      produces = MediaType.APPLICATION_JSON_VALUE,\n+      consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)\n+  public ResponseEntity<?> getToken(\n+      @RequestParam MultiValueMap<String, String> paramMap,\n+      @RequestHeader HttpHeaders headers,\n+      HttpServletRequest request) {\n+    logger.entry(String.format(\"begin %s request\", request.getRequestURI()));\n+\n+    String grantType = paramMap.getFirst(GRANT_TYPE);\n+\n+    // validate required params\n+    ValidationErrorResponse errors = null;\n+    if (REFRESH_TOKEN.equals(paramMap.getFirst(GRANT_TYPE))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0OTc4MA=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQzNTM2OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/HydraOAuthServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjo0OTo0N1rOGuWNWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNTozMTo0NlrOGuYtPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MTU0Nw==", "bodyText": "this piece is getting repeated everywhere, it would be nice to extract and reuse it instead.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451251547", "createdAt": "2020-07-08T02:49:47Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/HydraOAuthServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.service;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.service.BaseServiceImpl;\n+import java.util.Base64;\n+import javax.annotation.PostConstruct;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Service;\n+import org.springframework.util.MultiValueMap;\n+\n+@Service\n+class HydraOAuthServiceImpl extends BaseServiceImpl implements OAuthService {\n+\n+  @Value(\"${security.oauth2.hydra.token_endpoint}\")\n+  private String tokenEndpoint;\n+\n+  @Value(\"${security.oauth2.hydra.client.client-id}\")\n+  private String clientId;\n+\n+  @Value(\"${security.oauth2.hydra.client.client-secret}\")\n+  private String clientSecret;\n+\n+  private String encodedAuthorization;\n+\n+  @PostConstruct\n+  public void init() {\n+    String credentials = clientId + \":\" + clientSecret;\n+    encodedAuthorization = \"Basic \" + Base64.getEncoder().encodeToString(credentials.getBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5MjQ3OA==", "bodyText": "Extracted the code to getEncodedAuthorization(String clientId, String clientSecret) in BaseServiceImpl", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451292478", "createdAt": "2020-07-08T05:31:46Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/HydraOAuthServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.service;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.service.BaseServiceImpl;\n+import java.util.Base64;\n+import javax.annotation.PostConstruct;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Service;\n+import org.springframework.util.MultiValueMap;\n+\n+@Service\n+class HydraOAuthServiceImpl extends BaseServiceImpl implements OAuthService {\n+\n+  @Value(\"${security.oauth2.hydra.token_endpoint}\")\n+  private String tokenEndpoint;\n+\n+  @Value(\"${security.oauth2.hydra.client.client-id}\")\n+  private String clientId;\n+\n+  @Value(\"${security.oauth2.hydra.client.client-secret}\")\n+  private String clientSecret;\n+\n+  private String encodedAuthorization;\n+\n+  @PostConstruct\n+  public void init() {\n+    String credentials = clientId + \":\" + clientSecret;\n+    encodedAuthorization = \"Basic \" + Base64.getEncoder().encodeToString(credentials.getBytes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MTU0Nw=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQ0ODg2OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjo1NzoyOVrOGuWViw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0ODoxMFrOGuo5iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MzY0Mw==", "bodyText": "As far as I know this is the only server with versioning in the URL, I don't remember any designs or plans to include versioning here; please explain this approach and share the appropriate design doc/discussion with me.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451253643", "createdAt": "2020-07-08T02:57:29Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.RequestParamValidator.validateRequiredParams;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION_CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CLIENT_ID;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE_VERIFIER;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_URI;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SCOPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.ValidationErrorResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.HttpServletRequest;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@CrossOrigin\n+@RestController\n+@RequestMapping(\"/v1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5NDc1Nw==", "bodyText": "I used versioning for APIs during Hydra POC. It follows Best Practices for Versioning REST APIs. I'll remove the versioning and correct the tests to keep it consistent with other services.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451294757", "createdAt": "2020-07-08T05:39:43Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.RequestParamValidator.validateRequiredParams;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION_CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CLIENT_ID;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE_VERIFIER;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_URI;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SCOPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.ValidationErrorResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.HttpServletRequest;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@CrossOrigin\n+@RestController\n+@RequestMapping(\"/v1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MzY0Mw=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1Nzc3MQ==", "bodyText": "it's a good point and we should consider versioning them, but yes, let's do a design and decide on the change for all services.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/576#discussion_r451557771", "createdAt": "2020-07-08T13:48:10Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.RequestParamValidator.validateRequiredParams;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.AUTHORIZATION_CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CLIENT_ID;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CODE_VERIFIER;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.GRANT_TYPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_URI;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REFRESH_TOKEN;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SCOPE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.ValidationErrorResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.HttpServletRequest;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@CrossOrigin\n+@RestController\n+@RequestMapping(\"/v1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MzY0Mw=="}, "originalCommit": {"oid": "f15daaddf4b84f9107335c970b581b76e53adbe7"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2229, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}