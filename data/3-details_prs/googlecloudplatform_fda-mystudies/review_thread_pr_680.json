{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjA1NzI0", "number": 680, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzowMDo0MVrOETgCkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzoxODoxN1rOETgO3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODgzMzQ1OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzowMDo0MVrOG5RUKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNToxMDozN1rOG5neMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcwNTcwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!optAdminDeatils.isPresent()) {\n          \n          \n            \n                if (!optAdminDetails.isPresent()) {", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/680#discussion_r462705707", "createdAt": "2020-07-30T03:00:41Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -320,4 +320,125 @@ private AdminUserResponse saveSuperAdminDetails(UserRequest user) {\n     logger.exit(String.format(\"total app permissions=%d\", appPermissions.size()));\n     return appPermissions;\n   }\n+\n+  @Override\n+  @Transactional\n+  public AdminUserResponse updateUser(UserRequest user, String superAdminUserId) {\n+    logger.entry(String.format(\"updateUser() with isSuperAdmin=%b\", user.isSuperAdmin()));\n+    ErrorCode errorCode = validateUpdateUserRequest(user, superAdminUserId);\n+    if (errorCode != null) {\n+      logger.exit(String.format(CommonConstants.ERROR_CODE_LOG, errorCode));\n+      return new AdminUserResponse(errorCode);\n+    }\n+\n+    AdminUserResponse userResponse =\n+        user.isSuperAdmin()\n+            ? updateSuperAdminDetails(user, superAdminUserId)\n+            : updateAdminDetails(user, superAdminUserId);\n+\n+    logger.exit(String.format(CommonConstants.STATUS_LOG, userResponse.getHttpStatusCode()));\n+    return userResponse;\n+  }\n+\n+  private ErrorCode validateUpdateUserRequest(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"validateUpdateUserRequest()\");\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(superAdminUserId);\n+    if (!optAdminDetails.isPresent() || user.getUserId() == null) {\n+      return ErrorCode.USER_NOT_FOUND;\n+    }\n+\n+    UserRegAdminEntity loggedInUserDeatils = optAdminDetails.get();\n+    if (!loggedInUserDeatils.isSuperAdmin()) {\n+      return ErrorCode.NOT_SUPER_ADMIN_ACCESS;\n+    }\n+\n+    if (!user.isSuperAdmin() && !hasAtleastOnePermission(user)) {\n+      return ErrorCode.PERMISSION_MISSING;\n+    }\n+    logger.exit(\"Successfully validated user request\");\n+    return null;\n+  }\n+\n+  private AdminUserResponse updateSuperAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateSuperAdminDetails()\");\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ce5c6fdf6516dbc6028e915eed6c281fa88f7e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2ODcyMw==", "bodyText": "typo fixed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/680#discussion_r463068723", "createdAt": "2020-07-30T15:10:37Z", "author": {"login": "chiranjibi009"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -320,4 +320,125 @@ private AdminUserResponse saveSuperAdminDetails(UserRequest user) {\n     logger.exit(String.format(\"total app permissions=%d\", appPermissions.size()));\n     return appPermissions;\n   }\n+\n+  @Override\n+  @Transactional\n+  public AdminUserResponse updateUser(UserRequest user, String superAdminUserId) {\n+    logger.entry(String.format(\"updateUser() with isSuperAdmin=%b\", user.isSuperAdmin()));\n+    ErrorCode errorCode = validateUpdateUserRequest(user, superAdminUserId);\n+    if (errorCode != null) {\n+      logger.exit(String.format(CommonConstants.ERROR_CODE_LOG, errorCode));\n+      return new AdminUserResponse(errorCode);\n+    }\n+\n+    AdminUserResponse userResponse =\n+        user.isSuperAdmin()\n+            ? updateSuperAdminDetails(user, superAdminUserId)\n+            : updateAdminDetails(user, superAdminUserId);\n+\n+    logger.exit(String.format(CommonConstants.STATUS_LOG, userResponse.getHttpStatusCode()));\n+    return userResponse;\n+  }\n+\n+  private ErrorCode validateUpdateUserRequest(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"validateUpdateUserRequest()\");\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(superAdminUserId);\n+    if (!optAdminDetails.isPresent() || user.getUserId() == null) {\n+      return ErrorCode.USER_NOT_FOUND;\n+    }\n+\n+    UserRegAdminEntity loggedInUserDeatils = optAdminDetails.get();\n+    if (!loggedInUserDeatils.isSuperAdmin()) {\n+      return ErrorCode.NOT_SUPER_ADMIN_ACCESS;\n+    }\n+\n+    if (!user.isSuperAdmin() && !hasAtleastOnePermission(user)) {\n+      return ErrorCode.PERMISSION_MISSING;\n+    }\n+    logger.exit(\"Successfully validated user request\");\n+    return null;\n+  }\n+\n+  private AdminUserResponse updateSuperAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateSuperAdminDetails()\");\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcwNTcwNw=="}, "originalCommit": {"oid": "b7ce5c6fdf6516dbc6028e915eed6c281fa88f7e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODg2MjI2OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzoxNjozNFrOG5RkMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNToxMTozNFrOG5ngpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcwOTgwOQ==", "bodyText": "saveAndFlush?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/680#discussion_r462709809", "createdAt": "2020-07-30T03:16:34Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -320,4 +320,125 @@ private AdminUserResponse saveSuperAdminDetails(UserRequest user) {\n     logger.exit(String.format(\"total app permissions=%d\", appPermissions.size()));\n     return appPermissions;\n   }\n+\n+  @Override\n+  @Transactional\n+  public AdminUserResponse updateUser(UserRequest user, String superAdminUserId) {\n+    logger.entry(String.format(\"updateUser() with isSuperAdmin=%b\", user.isSuperAdmin()));\n+    ErrorCode errorCode = validateUpdateUserRequest(user, superAdminUserId);\n+    if (errorCode != null) {\n+      logger.exit(String.format(CommonConstants.ERROR_CODE_LOG, errorCode));\n+      return new AdminUserResponse(errorCode);\n+    }\n+\n+    AdminUserResponse userResponse =\n+        user.isSuperAdmin()\n+            ? updateSuperAdminDetails(user, superAdminUserId)\n+            : updateAdminDetails(user, superAdminUserId);\n+\n+    logger.exit(String.format(CommonConstants.STATUS_LOG, userResponse.getHttpStatusCode()));\n+    return userResponse;\n+  }\n+\n+  private ErrorCode validateUpdateUserRequest(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"validateUpdateUserRequest()\");\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(superAdminUserId);\n+    if (!optAdminDetails.isPresent() || user.getUserId() == null) {\n+      return ErrorCode.USER_NOT_FOUND;\n+    }\n+\n+    UserRegAdminEntity loggedInUserDeatils = optAdminDetails.get();\n+    if (!loggedInUserDeatils.isSuperAdmin()) {\n+      return ErrorCode.NOT_SUPER_ADMIN_ACCESS;\n+    }\n+\n+    if (!user.isSuperAdmin() && !hasAtleastOnePermission(user)) {\n+      return ErrorCode.PERMISSION_MISSING;\n+    }\n+    logger.exit(\"Successfully validated user request\");\n+    return null;\n+  }\n+\n+  private AdminUserResponse updateSuperAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateSuperAdminDetails()\");\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {\n+      return new AdminUserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDeatils.get();\n+    adminDetails = UserMapper.fromUpdateUserRequest(user, adminDetails);\n+\n+    deleteAllPermissions(user.getUserId());\n+\n+    user.setSuperAdminUserId(superAdminUserId);\n+\n+    List<AppPermissionEntity> appPermissions = getAppPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getAppPermissions().addAll(appPermissions);\n+\n+    List<StudyPermissionEntity> studyPermissions =\n+        getStudyPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getStudyPermissions().addAll(studyPermissions);\n+\n+    List<SitePermissionEntity> sitePermissions =\n+        getSitePermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getSitePermissions().addAll(sitePermissions);\n+\n+    userAdminRepository.save(adminDetails);\n+\n+    logger.exit(String.format(CommonConstants.MESSAGE_CODE_LOG, MessageCode.UPDATE_USER_SUCCESS));\n+    return new AdminUserResponse(MessageCode.UPDATE_USER_SUCCESS, adminDetails.getId());\n+  }\n+\n+  private AdminUserResponse updateAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateAdminDetails()\");\n+\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {\n+      return new AdminUserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDeatils.get();\n+    adminDetails = UserMapper.fromUpdateUserRequest(user, adminDetails);\n+    userAdminRepository.save(adminDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ce5c6fdf6516dbc6028e915eed6c281fa88f7e"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2OTM1MA==", "bodyText": "save() replaced with saveAndFlush()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/680#discussion_r463069350", "createdAt": "2020-07-30T15:11:34Z", "author": {"login": "chiranjibi009"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -320,4 +320,125 @@ private AdminUserResponse saveSuperAdminDetails(UserRequest user) {\n     logger.exit(String.format(\"total app permissions=%d\", appPermissions.size()));\n     return appPermissions;\n   }\n+\n+  @Override\n+  @Transactional\n+  public AdminUserResponse updateUser(UserRequest user, String superAdminUserId) {\n+    logger.entry(String.format(\"updateUser() with isSuperAdmin=%b\", user.isSuperAdmin()));\n+    ErrorCode errorCode = validateUpdateUserRequest(user, superAdminUserId);\n+    if (errorCode != null) {\n+      logger.exit(String.format(CommonConstants.ERROR_CODE_LOG, errorCode));\n+      return new AdminUserResponse(errorCode);\n+    }\n+\n+    AdminUserResponse userResponse =\n+        user.isSuperAdmin()\n+            ? updateSuperAdminDetails(user, superAdminUserId)\n+            : updateAdminDetails(user, superAdminUserId);\n+\n+    logger.exit(String.format(CommonConstants.STATUS_LOG, userResponse.getHttpStatusCode()));\n+    return userResponse;\n+  }\n+\n+  private ErrorCode validateUpdateUserRequest(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"validateUpdateUserRequest()\");\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(superAdminUserId);\n+    if (!optAdminDetails.isPresent() || user.getUserId() == null) {\n+      return ErrorCode.USER_NOT_FOUND;\n+    }\n+\n+    UserRegAdminEntity loggedInUserDeatils = optAdminDetails.get();\n+    if (!loggedInUserDeatils.isSuperAdmin()) {\n+      return ErrorCode.NOT_SUPER_ADMIN_ACCESS;\n+    }\n+\n+    if (!user.isSuperAdmin() && !hasAtleastOnePermission(user)) {\n+      return ErrorCode.PERMISSION_MISSING;\n+    }\n+    logger.exit(\"Successfully validated user request\");\n+    return null;\n+  }\n+\n+  private AdminUserResponse updateSuperAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateSuperAdminDetails()\");\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {\n+      return new AdminUserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDeatils.get();\n+    adminDetails = UserMapper.fromUpdateUserRequest(user, adminDetails);\n+\n+    deleteAllPermissions(user.getUserId());\n+\n+    user.setSuperAdminUserId(superAdminUserId);\n+\n+    List<AppPermissionEntity> appPermissions = getAppPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getAppPermissions().addAll(appPermissions);\n+\n+    List<StudyPermissionEntity> studyPermissions =\n+        getStudyPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getStudyPermissions().addAll(studyPermissions);\n+\n+    List<SitePermissionEntity> sitePermissions =\n+        getSitePermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getSitePermissions().addAll(sitePermissions);\n+\n+    userAdminRepository.save(adminDetails);\n+\n+    logger.exit(String.format(CommonConstants.MESSAGE_CODE_LOG, MessageCode.UPDATE_USER_SUCCESS));\n+    return new AdminUserResponse(MessageCode.UPDATE_USER_SUCCESS, adminDetails.getId());\n+  }\n+\n+  private AdminUserResponse updateAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateAdminDetails()\");\n+\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {\n+      return new AdminUserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDeatils.get();\n+    adminDetails = UserMapper.fromUpdateUserRequest(user, adminDetails);\n+    userAdminRepository.save(adminDetails);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcwOTgwOQ=="}, "originalCommit": {"oid": "b7ce5c6fdf6516dbc6028e915eed6c281fa88f7e"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODg2NDkzOnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzoxODoxN1rOG5Rlwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNToxMTo0NlrOG5nhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxMDIxMA==", "bodyText": "saveAndFlush instead?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/680#discussion_r462710210", "createdAt": "2020-07-30T03:18:17Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -320,4 +320,125 @@ private AdminUserResponse saveSuperAdminDetails(UserRequest user) {\n     logger.exit(String.format(\"total app permissions=%d\", appPermissions.size()));\n     return appPermissions;\n   }\n+\n+  @Override\n+  @Transactional\n+  public AdminUserResponse updateUser(UserRequest user, String superAdminUserId) {\n+    logger.entry(String.format(\"updateUser() with isSuperAdmin=%b\", user.isSuperAdmin()));\n+    ErrorCode errorCode = validateUpdateUserRequest(user, superAdminUserId);\n+    if (errorCode != null) {\n+      logger.exit(String.format(CommonConstants.ERROR_CODE_LOG, errorCode));\n+      return new AdminUserResponse(errorCode);\n+    }\n+\n+    AdminUserResponse userResponse =\n+        user.isSuperAdmin()\n+            ? updateSuperAdminDetails(user, superAdminUserId)\n+            : updateAdminDetails(user, superAdminUserId);\n+\n+    logger.exit(String.format(CommonConstants.STATUS_LOG, userResponse.getHttpStatusCode()));\n+    return userResponse;\n+  }\n+\n+  private ErrorCode validateUpdateUserRequest(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"validateUpdateUserRequest()\");\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(superAdminUserId);\n+    if (!optAdminDetails.isPresent() || user.getUserId() == null) {\n+      return ErrorCode.USER_NOT_FOUND;\n+    }\n+\n+    UserRegAdminEntity loggedInUserDeatils = optAdminDetails.get();\n+    if (!loggedInUserDeatils.isSuperAdmin()) {\n+      return ErrorCode.NOT_SUPER_ADMIN_ACCESS;\n+    }\n+\n+    if (!user.isSuperAdmin() && !hasAtleastOnePermission(user)) {\n+      return ErrorCode.PERMISSION_MISSING;\n+    }\n+    logger.exit(\"Successfully validated user request\");\n+    return null;\n+  }\n+\n+  private AdminUserResponse updateSuperAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateSuperAdminDetails()\");\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {\n+      return new AdminUserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDeatils.get();\n+    adminDetails = UserMapper.fromUpdateUserRequest(user, adminDetails);\n+\n+    deleteAllPermissions(user.getUserId());\n+\n+    user.setSuperAdminUserId(superAdminUserId);\n+\n+    List<AppPermissionEntity> appPermissions = getAppPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getAppPermissions().addAll(appPermissions);\n+\n+    List<StudyPermissionEntity> studyPermissions =\n+        getStudyPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getStudyPermissions().addAll(studyPermissions);\n+\n+    List<SitePermissionEntity> sitePermissions =\n+        getSitePermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getSitePermissions().addAll(sitePermissions);\n+\n+    userAdminRepository.save(adminDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ce5c6fdf6516dbc6028e915eed6c281fa88f7e"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2OTUwMg==", "bodyText": "save() replaced with saveAndFlush()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/680#discussion_r463069502", "createdAt": "2020-07-30T15:11:46Z", "author": {"login": "chiranjibi009"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -320,4 +320,125 @@ private AdminUserResponse saveSuperAdminDetails(UserRequest user) {\n     logger.exit(String.format(\"total app permissions=%d\", appPermissions.size()));\n     return appPermissions;\n   }\n+\n+  @Override\n+  @Transactional\n+  public AdminUserResponse updateUser(UserRequest user, String superAdminUserId) {\n+    logger.entry(String.format(\"updateUser() with isSuperAdmin=%b\", user.isSuperAdmin()));\n+    ErrorCode errorCode = validateUpdateUserRequest(user, superAdminUserId);\n+    if (errorCode != null) {\n+      logger.exit(String.format(CommonConstants.ERROR_CODE_LOG, errorCode));\n+      return new AdminUserResponse(errorCode);\n+    }\n+\n+    AdminUserResponse userResponse =\n+        user.isSuperAdmin()\n+            ? updateSuperAdminDetails(user, superAdminUserId)\n+            : updateAdminDetails(user, superAdminUserId);\n+\n+    logger.exit(String.format(CommonConstants.STATUS_LOG, userResponse.getHttpStatusCode()));\n+    return userResponse;\n+  }\n+\n+  private ErrorCode validateUpdateUserRequest(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"validateUpdateUserRequest()\");\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(superAdminUserId);\n+    if (!optAdminDetails.isPresent() || user.getUserId() == null) {\n+      return ErrorCode.USER_NOT_FOUND;\n+    }\n+\n+    UserRegAdminEntity loggedInUserDeatils = optAdminDetails.get();\n+    if (!loggedInUserDeatils.isSuperAdmin()) {\n+      return ErrorCode.NOT_SUPER_ADMIN_ACCESS;\n+    }\n+\n+    if (!user.isSuperAdmin() && !hasAtleastOnePermission(user)) {\n+      return ErrorCode.PERMISSION_MISSING;\n+    }\n+    logger.exit(\"Successfully validated user request\");\n+    return null;\n+  }\n+\n+  private AdminUserResponse updateSuperAdminDetails(UserRequest user, String superAdminUserId) {\n+    logger.entry(\"updateSuperAdminDetails()\");\n+    Optional<UserRegAdminEntity> optAdminDeatils = userAdminRepository.findById(user.getUserId());\n+\n+    if (!optAdminDeatils.isPresent()) {\n+      return new AdminUserResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDeatils.get();\n+    adminDetails = UserMapper.fromUpdateUserRequest(user, adminDetails);\n+\n+    deleteAllPermissions(user.getUserId());\n+\n+    user.setSuperAdminUserId(superAdminUserId);\n+\n+    List<AppPermissionEntity> appPermissions = getAppPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getAppPermissions().addAll(appPermissions);\n+\n+    List<StudyPermissionEntity> studyPermissions =\n+        getStudyPermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getStudyPermissions().addAll(studyPermissions);\n+\n+    List<SitePermissionEntity> sitePermissions =\n+        getSitePermissisonsForSuperAdmin(user, adminDetails);\n+    adminDetails.getSitePermissions().addAll(sitePermissions);\n+\n+    userAdminRepository.save(adminDetails);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxMDIxMA=="}, "originalCommit": {"oid": "b7ce5c6fdf6516dbc6028e915eed6c281fa88f7e"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2029, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}