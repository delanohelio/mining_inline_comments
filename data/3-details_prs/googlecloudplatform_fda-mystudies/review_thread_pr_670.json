{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MTg2MTE0", "number": 670, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNTo1MDo0MFrOETGoVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMDozOVrOETtIog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDY3MDMwOnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNTo1MDo0MFrOG4pgzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjozNDoyNVrOG42UUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1MzU4MA==", "bodyText": "typo", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462053580", "createdAt": "2020-07-29T05:50:40Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "diffHunk": "@@ -43,7 +43,9 @@\n   GET_PARTICIPANT_REGISTRY_SUCCESS(\n       HttpStatus.OK, \"MSG-0008\", \"Get participant registry successfull\"),\n \n-  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\");\n+  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\"),\n+\n+  GET_APPS_DETAILS_SUCCESS(HttpStatus.OK, \"MSG-0018\", \"Get App Details successfull\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MzM3OQ==", "bodyText": "changed to Get App Details successfully", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462263379", "createdAt": "2020-07-29T12:34:25Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "diffHunk": "@@ -43,7 +43,9 @@\n   GET_PARTICIPANT_REGISTRY_SUCCESS(\n       HttpStatus.OK, \"MSG-0008\", \"Get participant registry successfull\"),\n \n-  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\");\n+  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\"),\n+\n+  GET_APPS_DETAILS_SUCCESS(HttpStatus.OK, \"MSG-0018\", \"Get App Details successfull\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1MzU4MA=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDY4OTA3OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNTo1OToyMFrOG4pr4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjozNTowMFrOG42VmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjQxNw==", "bodyText": "Do you mean findByStudyIds here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462056417", "createdAt": "2020-07-29T05:59:20Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +33,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findBySites(@Param(\"studyIds\") List<String> studyIdList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MzcwNQ==", "bodyText": "Changed to findByStudyIds.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462263705", "createdAt": "2020-07-29T12:35:00Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +33,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findBySites(@Param(\"studyIds\") List<String> studyIdList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjQxNw=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDcxNjUwOnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjoxMTozOFrOG4p8KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMToyOToxOVrOG5K5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA==", "bodyText": "Is there a reason we are using CollectionUtils here and for other places, too instead of just built in functions like !sites.isEmpty()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462060584", "createdAt": "2020-07-29T06:11:38Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n+    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n+    if (CollectionUtils.isNotEmpty(sites)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1NjI4MA==", "bodyText": "CollectionUtils.isNotEmpty(sites) will check for null or size 0. !sites.isEmpty() may throw NullPointerException.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462156280", "createdAt": "2020-07-29T09:13:45Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n+    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n+    if (CollectionUtils.isNotEmpty(sites)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMDU5MA==", "bodyText": "Okay!", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462600590", "createdAt": "2020-07-29T21:29:19Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n+    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n+    if (CollectionUtils.isNotEmpty(sites)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDc5OTUzOnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0Mjo1MlrOG4qsHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTozMzozNVrOG5LBww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA==", "bodyText": "Out of scope. Is the purpose here just to use a new object AppCount here to replace the Map object? Could you just change this in the general GET /apps PR instead", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462072860", "createdAt": "2020-07-29T06:42:52Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java", "diffHunk": "@@ -26,6 +26,7 @@\n public interface UserDetailsRepository extends JpaRepository<UserDetailsEntity, String> {\n \n   @Query(\n-      \"SELECT ud.appInfo.id ,COUNT(ud.appInfo.id) FROM UserDetailsEntity ud WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n-  public Map<String, Long> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);\n+      \"SELECT ud.appInfo.id AS appId,COUNT(ud.appInfo.id) AS count FROM UserDetailsEntity ud \"\n+          + \"WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n+  public List<AppCount> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1ODg3MQ==", "bodyText": "We have refered this 4.1. Customizing the Result of JPA Queries. Since it was already approved and also belongs to the same API I have implemented here. Please review.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462158871", "createdAt": "2020-07-29T09:17:56Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java", "diffHunk": "@@ -26,6 +26,7 @@\n public interface UserDetailsRepository extends JpaRepository<UserDetailsEntity, String> {\n \n   @Query(\n-      \"SELECT ud.appInfo.id ,COUNT(ud.appInfo.id) FROM UserDetailsEntity ud WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n-  public Map<String, Long> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);\n+      \"SELECT ud.appInfo.id AS appId,COUNT(ud.appInfo.id) AS count FROM UserDetailsEntity ud \"\n+          + \"WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n+  public List<AppCount> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMjY5MQ==", "bodyText": "That's fine, but I think in the future what you could do is just to make another commit to the older PR and request my review again, and I will approve it again. Or you could just raise this in another PR and make note for me to review it rafter I have already approved the previous GET apps PR.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462602691", "createdAt": "2020-07-29T21:33:35Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java", "diffHunk": "@@ -26,6 +26,7 @@\n public interface UserDetailsRepository extends JpaRepository<UserDetailsEntity, String> {\n \n   @Query(\n-      \"SELECT ud.appInfo.id ,COUNT(ud.appInfo.id) FROM UserDetailsEntity ud WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n-  public Map<String, Long> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);\n+      \"SELECT ud.appInfo.id AS appId,COUNT(ud.appInfo.id) AS count FROM UserDetailsEntity ud \"\n+          + \"WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n+  public List<AppCount> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDgxNDYxOnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0ODoxOVrOG4q1Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjo0MTowOVrOG42irQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NTE5OQ==", "bodyText": "What if only studies is passed into fields? only sites? We should test for those cases also", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462075199", "createdAt": "2020-07-29T06:48:19Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java", "diffHunk": "@@ -112,14 +117,69 @@ public void shouldNotReturnApp() throws Exception {\n         .andExpect(jsonPath(\"$.error_description\").value(ErrorCode.APP_NOT_FOUND.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAppsWithOptionalStudiesAndSites() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2NzA1Mw==", "bodyText": "Written testcase for studies and if studies are present then only we have access to sites.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462267053", "createdAt": "2020-07-29T12:41:09Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java", "diffHunk": "@@ -112,14 +117,69 @@ public void shouldNotReturnApp() throws Exception {\n         .andExpect(jsonPath(\"$.error_description\").value(ErrorCode.APP_NOT_FOUND.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAppsWithOptionalStudiesAndSites() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NTE5OQ=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDgyMzc1OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1MTozM1rOG4q66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjo0Mjo0MVrOG42mQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NjY0OA==", "bodyText": "what happens when a random junk string is passed into fields, shouldn't we handle that as an error", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462076648", "createdAt": "2020-07-29T06:51:33Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -236,4 +258,57 @@ private void calculateEnrollmentPercentage(\n         .distinct()\n         .collect(Collectors.toList());\n   }\n+\n+  @Override\n+  @Transactional(readOnly = true)\n+  public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n+    logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n+        userRegAdminRepository.findByUserRegAdminId(userId);\n+\n+    if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n+      logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+      return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+    }\n+\n+    List<AppEntity> apps =\n+        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n+    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+\n+    List<StudyEntity> studies =\n+        (List<StudyEntity>) CollectionUtils.emptyIfNull(studyRepository.findByAppIds(appIds));\n+    List<String> studyIds = studies.stream().map(StudyEntity::getId).collect(Collectors.toList());\n+\n+    List<SiteEntity> sites = siteRepository.findBySites(studyIds);\n+\n+    AppResponse appResponse = prepareAppResponse(apps, studies, sites, fields);\n+\n+    logger.exit(String.format(\"total apps=%d\", appResponse.getApps().size()));\n+    return appResponse;\n+  }\n+\n+  private AppResponse prepareAppResponse(\n+      List<AppEntity> apps, List<StudyEntity> studies, List<SiteEntity> sites, String[] fields) {\n+    Map<String, List<StudyEntity>> groupByAppIdStudyMap =\n+        studies.stream().collect(Collectors.groupingBy(StudyEntity::getAppId));\n+\n+    Map<String, List<SiteEntity>> groupByStudyIdSiteMap =\n+        sites.stream().collect(Collectors.groupingBy(SiteEntity::getStudyId));\n+\n+    List<AppDetails> appsList = new ArrayList<>();\n+    for (AppEntity app : apps) {\n+      AppDetails appDetails = AppMapper.toAppDetails(app);\n+      if (ArrayUtils.contains(fields, \"studies\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2Nzk2OA==", "bodyText": "Handled error in controller for random junk string and also written test case.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462267968", "createdAt": "2020-07-29T12:42:41Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -236,4 +258,57 @@ private void calculateEnrollmentPercentage(\n         .distinct()\n         .collect(Collectors.toList());\n   }\n+\n+  @Override\n+  @Transactional(readOnly = true)\n+  public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n+    logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n+        userRegAdminRepository.findByUserRegAdminId(userId);\n+\n+    if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n+      logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+      return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+    }\n+\n+    List<AppEntity> apps =\n+        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n+    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+\n+    List<StudyEntity> studies =\n+        (List<StudyEntity>) CollectionUtils.emptyIfNull(studyRepository.findByAppIds(appIds));\n+    List<String> studyIds = studies.stream().map(StudyEntity::getId).collect(Collectors.toList());\n+\n+    List<SiteEntity> sites = siteRepository.findBySites(studyIds);\n+\n+    AppResponse appResponse = prepareAppResponse(apps, studies, sites, fields);\n+\n+    logger.exit(String.format(\"total apps=%d\", appResponse.getApps().size()));\n+    return appResponse;\n+  }\n+\n+  private AppResponse prepareAppResponse(\n+      List<AppEntity> apps, List<StudyEntity> studies, List<SiteEntity> sites, String[] fields) {\n+    Map<String, List<StudyEntity>> groupByAppIdStudyMap =\n+        studies.stream().collect(Collectors.groupingBy(StudyEntity::getAppId));\n+\n+    Map<String, List<SiteEntity>> groupByStudyIdSiteMap =\n+        sites.stream().collect(Collectors.groupingBy(SiteEntity::getStudyId));\n+\n+    List<AppDetails> appsList = new ArrayList<>();\n+    for (AppEntity app : apps) {\n+      AppDetails appDetails = AppMapper.toAppDetails(app);\n+      if (ArrayUtils.contains(fields, \"studies\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NjY0OA=="}, "originalCommit": {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjMwMDA1OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo0MDo0N1rOG448-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0MTowOVrOG5bz_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU1NA==", "bodyText": "Isn't this the same as using the findAll() method from JpaRepository?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462306554", "createdAt": "2020-07-29T13:40:47Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java", "diffHunk": "@@ -18,4 +21,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface AppRepository extends JpaRepository<AppEntity, String> {}\n+public interface AppRepository extends JpaRepository<AppEntity, String> {\n+\n+  @Query(\"SELECT ar FROM AppEntity ar\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3NzY5NA==", "bodyText": "Removed findAllApps() and used findAll().", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462877694", "createdAt": "2020-07-30T09:41:09Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java", "diffHunk": "@@ -18,4 +21,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface AppRepository extends JpaRepository<AppEntity, String> {}\n+public interface AppRepository extends JpaRepository<AppEntity, String> {\n+\n+  @Query(\"SELECT ar FROM AppEntity ar\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU1NA=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjM1NDA1OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1MjozMlrOG45fSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0MzozN1rOG5b5nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNTMzNg==", "bodyText": "How about using the getSites() method on the study? Hibernate already knows how to fetch the studies because you've written them with the ManyToOne, OneToMany relationships. When you call getSites() on the App it will construct the appropriate query and fetch corresponding Sites from the database. Don't worry about performance, there are many techniques built into Hibernate that can be used depending on the situation.\nI suggest this because it will eliminate a lot of the code you've written in the Service. You are essentially doing a JOIN in Java by separating out the IDs, querying on them, and then combining the results. Doing this in the database is much better and comes for \"free\" (meaning you don't have to write the code).\nHere is some more information about best practices https://thorben-janssen.com/best-practices-many-one-one-many-associations-mappings/", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462315336", "createdAt": "2020-07-29T13:52:32Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +31,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findByStudyIds(@Param(\"studyIds\") List<String> studyIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3OTEzNQ==", "bodyText": "Thanks for sharing the best practices link. I have refactored the code.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462879135", "createdAt": "2020-07-30T09:43:37Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +31,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findByStudyIds(@Param(\"studyIds\") List<String> studyIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNTMzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjQyNTI4OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDowODoxOFrOG46MNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0NDoyNFrOG5b7VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg==", "bodyText": "It would be nice if this method (and others) were written to act on a single SiteEntity. That way we could use it directly in stream().map(SiteMapper::toAppDetailsResponse)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462326836", "createdAt": "2020-07-29T14:08:18Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMzU2MQ==", "bodyText": "+1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462603561", "createdAt": "2020-07-29T21:35:26Z", "author": {"login": "saminguyen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc2MDg2MQ==", "bodyText": "+1  Discussed with team, we'll refactor the code and  follow this in new code.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462760861", "createdAt": "2020-07-30T06:22:36Z", "author": {"login": "dhanyak-btc"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3OTU3Mw==", "bodyText": "I have fixed the comments. Please review.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462879573", "createdAt": "2020-07-30T09:44:24Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjUwMjU2OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoyMzoyNVrOG467gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0NjozMlrOG5b_qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzODk0Nw==", "bodyText": "See my comment on findByStudyIds()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462338947", "createdAt": "2020-07-29T14:23:25Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java", "diffHunk": "@@ -26,4 +28,7 @@\n \n   @Query(\"SELECT study from StudyEntity study where study.id=:studyId\")\n   public Optional<StudyEntity> findByStudyId(String studyId);\n+\n+  @Query(\"SELECT study from StudyEntity study where study.appInfo.id in (:appIds)\")\n+  public List<StudyEntity> findByAppIds(@Param(\"appIds\") List<String> appIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MDY4MQ==", "bodyText": "I have fixed the comment. Please review.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462880681", "createdAt": "2020-07-30T09:46:32Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java", "diffHunk": "@@ -26,4 +28,7 @@\n \n   @Query(\"SELECT study from StudyEntity study where study.id=:studyId\")\n   public Optional<StudyEntity> findByStudyId(String studyId);\n+\n+  @Query(\"SELECT study from StudyEntity study where study.appInfo.id in (:appIds)\")\n+  public List<StudyEntity> findByAppIds(@Param(\"appIds\") List<String> appIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzODk0Nw=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjUwODUxOnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoyNDo0MVrOG46_Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0NzozMVrOG5cBzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTg5MA==", "bodyText": "This is the same as the built-in findById", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462339890", "createdAt": "2020-07-29T14:24:41Z", "author": {"login": "nikklassen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java", "diffHunk": "@@ -19,4 +22,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {}\n+public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {\n+\n+  @Query(\"SELECT ua FROM UserRegAdminEntity ua WHERE ua.id = :userId\")\n+  Optional<UserRegAdminEntity> findByUserRegAdminId(String userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MTIyOQ==", "bodyText": "Removed findByUserRegAdminId() and used findById()", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462881229", "createdAt": "2020-07-30T09:47:31Z", "author": {"login": "monica-BTC"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java", "diffHunk": "@@ -19,4 +22,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {}\n+public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {\n+\n+  @Query(\"SELECT ua FROM UserRegAdminEntity ua WHERE ua.id = :userId\")\n+  Optional<UserRegAdminEntity> findByUserRegAdminId(String userId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTg5MA=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjU2MTg1OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDozNTowMlrOG47f3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDowODoyOVrOG5ksGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA==", "bodyText": "Can we just call this id? The fact that it's a site should be implied by the route.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462348254", "createdAt": "2020-07-29T14:35:02Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0ODEyNg==", "bodyText": "Participant Manager API's and front-end application was already developed as per design document and QA tested internally. Now, team is refactoring the code to address the Areas of Improvements without breaking the functionality and trying to keep the integration issues minimal during this refactoring. Unfortunately, due to project timelines, we'll not be able to change the structure or rename the variables in Response objects.\nThis applies to similar comments on this PR.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462948126", "createdAt": "2020-07-30T12:05:06Z", "author": {"login": "dhanyak-btc"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMzEyOQ==", "bodyText": "Let's come back to this in the next track.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463023129", "createdAt": "2020-07-30T14:08:29Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjU5MDU2OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0MDo1MlrOG47xug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0MDo1MlrOG47xug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MjgyNg==", "bodyText": "Can we put this in a location property? It will be easier for the frontend to create interfaces if they can always use the same Location. Otherwise their code needs to extract all of the location-related properties out and map them back into a location object.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462352826", "createdAt": "2020-07-29T14:40:52Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;\n+\n+  private String locationId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjU5MjM2OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0MToxMVrOG47yyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0MToxMVrOG47yyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzA5Nw==", "bodyText": "Just id here too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462353097", "createdAt": "2020-07-29T14:41:11Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppStudyResponse {\n+  private String studyId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjYxMTA1OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0NToxMVrOG47-qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMTowNDowNlrOG61U8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg==", "bodyText": "What about setting fields to allowedFields if the request parameter is empty? I don't think we need two methods here, just use all optional fields if none are specified", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462356136", "createdAt": "2020-07-29T14:45:11Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "diffHunk": "@@ -32,15 +36,34 @@\n \n   @Autowired private AppService appService;\n \n+  private static final String DEFAULT = \"_default_\";\n+\n   private static final String STATUS_LOG = \"status=%d\";\n \n   private static final String BEGIN_REQUEST_LOG = \"%s request\";\n \n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n-      @RequestHeader(name = USER_ID_HEADER) String userId, HttpServletRequest request) {\n-    logger.entry(String.format(BEGIN_REQUEST_LOG, request.getRequestURI()));\n-    AppResponse appResponse = appService.getApps(userId);\n+      @RequestHeader(name = USER_ID_HEADER) String userId,\n+      @RequestParam(name = \"fields\", required = false) String[] fields,\n+      HttpServletRequest request) {\n+    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    logger.entry(\n+        String.format(\n+            \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n+\n+    String[] allowedFields = {\"studies\", \"sites\"};\n+    AppResponse appResponse;\n+    if (ArrayUtils.contains(fields, DEFAULT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MjY1Mg==", "bodyText": "allowedFields is added to fix @saminguyen review comment. I am returning bad request if fields contains invalid value.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462882652", "createdAt": "2020-07-30T09:50:02Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "diffHunk": "@@ -32,15 +36,34 @@\n \n   @Autowired private AppService appService;\n \n+  private static final String DEFAULT = \"_default_\";\n+\n   private static final String STATUS_LOG = \"status=%d\";\n \n   private static final String BEGIN_REQUEST_LOG = \"%s request\";\n \n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n-      @RequestHeader(name = USER_ID_HEADER) String userId, HttpServletRequest request) {\n-    logger.entry(String.format(BEGIN_REQUEST_LOG, request.getRequestURI()));\n-    AppResponse appResponse = appService.getApps(userId);\n+      @RequestHeader(name = USER_ID_HEADER) String userId,\n+      @RequestParam(name = \"fields\", required = false) String[] fields,\n+      HttpServletRequest request) {\n+    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    logger.entry(\n+        String.format(\n+            \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n+\n+    String[] allowedFields = {\"studies\", \"sites\"};\n+    AppResponse appResponse;\n+    if (ArrayUtils.contains(fields, DEFAULT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNDM5NQ==", "bodyText": "This is still consistent with what Sami was saying. I'm talking about only the case when the value of fields is empty, you can set fields to {\"studies\", \"sites\"}. (exactly what you're doing with DEFAULT, just with \"\" instead).\nThis is of course assuming that appService.getAppsWithOptionalFields(userId, {\"studies\", \"sites\"}) is the same as calling appService.getApps(userId)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463014395", "createdAt": "2020-07-30T13:56:07Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "diffHunk": "@@ -32,15 +36,34 @@\n \n   @Autowired private AppService appService;\n \n+  private static final String DEFAULT = \"_default_\";\n+\n   private static final String STATUS_LOG = \"status=%d\";\n \n   private static final String BEGIN_REQUEST_LOG = \"%s request\";\n \n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n-      @RequestHeader(name = USER_ID_HEADER) String userId, HttpServletRequest request) {\n-    logger.entry(String.format(BEGIN_REQUEST_LOG, request.getRequestURI()));\n-    AppResponse appResponse = appService.getApps(userId);\n+      @RequestHeader(name = USER_ID_HEADER) String userId,\n+      @RequestParam(name = \"fields\", required = false) String[] fields,\n+      HttpServletRequest request) {\n+    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    logger.entry(\n+        String.format(\n+            \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n+\n+    String[] allowedFields = {\"studies\", \"sites\"};\n+    AppResponse appResponse;\n+    if (ArrayUtils.contains(fields, DEFAULT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0NDMwNA==", "bodyText": "Have fixed the review comment. Both methods returns different responses, in getApps() we calculate enrollment percentage etc., for dashboard screen and getAppsWithOptionalFields() does not calculate enrollment percentage, it returns studies and sites for the apps.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r464344304", "createdAt": "2020-08-03T11:04:06Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "diffHunk": "@@ -32,15 +36,34 @@\n \n   @Autowired private AppService appService;\n \n+  private static final String DEFAULT = \"_default_\";\n+\n   private static final String STATUS_LOG = \"status=%d\";\n \n   private static final String BEGIN_REQUEST_LOG = \"%s request\";\n \n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n-      @RequestHeader(name = USER_ID_HEADER) String userId, HttpServletRequest request) {\n-    logger.entry(String.format(BEGIN_REQUEST_LOG, request.getRequestURI()));\n-    AppResponse appResponse = appService.getApps(userId);\n+      @RequestHeader(name = USER_ID_HEADER) String userId,\n+      @RequestParam(name = \"fields\", required = false) String[] fields,\n+      HttpServletRequest request) {\n+    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    logger.entry(\n+        String.format(\n+            \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n+\n+    String[] allowedFields = {\"studies\", \"sites\"};\n+    AppResponse appResponse;\n+    if (ArrayUtils.contains(fields, DEFAULT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjYxOTE5OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo0Njo1M1rOG48D1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo1NDowM1rOG5cP9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NzQ2Mg==", "bodyText": "See my comment on toAppDetailsResponseList. We can use the streams API\n.map(study -> StudyMapper.toAppDetailsResponse(study, fields))\nif this takes a single StudyEntity", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462357462", "createdAt": "2020-07-29T14:46:53Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.ArrayUtils;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AppSiteResponse;\n+import com.google.cloud.healthcare.fdamystudies.beans.AppStudyResponse;\n+import com.google.cloud.healthcare.fdamystudies.model.SiteEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+\n+public final class StudyMapper {\n+\n+  private StudyMapper() {}\n+\n+  public static List<AppStudyResponse> toAppDetailsResponseList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4NDg1NQ==", "bodyText": "Fixed the review comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462884855", "createdAt": "2020-07-30T09:54:03Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.ArrayUtils;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AppSiteResponse;\n+import com.google.cloud.healthcare.fdamystudies.beans.AppStudyResponse;\n+import com.google.cloud.healthcare.fdamystudies.model.SiteEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+\n+public final class StudyMapper {\n+\n+  private StudyMapper() {}\n+\n+  public static List<AppStudyResponse> toAppDetailsResponseList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NzQ2Mg=="}, "originalCommit": {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDg1OTM1OnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDowNDoyMlrOG5khnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDo0Mjo1NVrOG60xNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMDQ0NA==", "bodyText": "Is CollectionUtils.emptyIfNull necessary? It's not clear from the docs but I would think findAll() will always return a list, it just might be empty if there's nothing to fetch.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463020444", "createdAt": "2020-07-30T14:04:22Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -262,23 +262,20 @@ private void calculateEnrollmentPercentage(\n   public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n     logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n \n-    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n-        userRegAdminRepository.findByUserRegAdminId(userId);\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n \n     if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n       logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n       return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n     }\n \n-    List<AppEntity> apps =\n-        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n-    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+    List<AppEntity> apps = (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAll());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMzNTE1OQ==", "bodyText": "Yes, it returns empty list. I verified it by calling findAll() in @BeforeEach. I'll inform the team not to use CollectionUtils.emptyIfNull for findAll().", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r464335159", "createdAt": "2020-08-03T10:42:55Z", "author": {"login": "dhanyak-btc"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -262,23 +262,20 @@ private void calculateEnrollmentPercentage(\n   public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n     logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n \n-    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n-        userRegAdminRepository.findByUserRegAdminId(userId);\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n \n     if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n       logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n       return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n     }\n \n-    List<AppEntity> apps =\n-        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n-    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+    List<AppEntity> apps = (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAll());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMDQ0NA=="}, "originalCommit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDk3ODkwOnYy", "diffSide": "RIGHT", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMDozOVrOG5lrOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDo0Nzo1NVrOG605gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTI4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    StudyMapper.toAppStudyResponse(\n          \n          \n            \n                                        study, groupByStudyIdSiteMap.get(study.getId()), fields))\n          \n          \n            \n                                    StudyMapper.toAppStudyResponse(\n          \n          \n            \n                                        study, study.getSites(), fields))\n          \n      \n    \n    \n  \n\nYou don't need to build the whole list of sites out in getAppsWithOptionalFields (line 278)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463039288", "createdAt": "2020-07-30T14:30:39Z", "author": {"login": "nikklassen"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -298,9 +295,15 @@ private AppResponse prepareAppResponse(\n     for (AppEntity app : apps) {\n       AppDetails appDetails = AppMapper.toAppDetails(app);\n       if (ArrayUtils.contains(fields, \"studies\")) {\n+        List<StudyEntity> appStudies = groupByAppIdStudyMap.get(app.getId());\n         List<AppStudyResponse> appStudyResponses =\n-            StudyMapper.toAppDetailsResponseList(\n-                groupByAppIdStudyMap.get(app.getId()), groupByStudyIdSiteMap, fields);\n+            appStudies\n+                .stream()\n+                .map(\n+                    study ->\n+                        StudyMapper.toAppStudyResponse(\n+                            study, groupByStudyIdSiteMap.get(study.getId()), fields))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMzNzI4MA==", "bodyText": "As informed earlier these APIs were implemented as per the design document and front-end application also implemented accordingly. You suggestion is valid, but we'll not be able to further refactor due to project timelines.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r464337280", "createdAt": "2020-08-03T10:47:55Z", "author": {"login": "dhanyak-btc"}, "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -298,9 +295,15 @@ private AppResponse prepareAppResponse(\n     for (AppEntity app : apps) {\n       AppDetails appDetails = AppMapper.toAppDetails(app);\n       if (ArrayUtils.contains(fields, \"studies\")) {\n+        List<StudyEntity> appStudies = groupByAppIdStudyMap.get(app.getId());\n         List<AppStudyResponse> appStudyResponses =\n-            StudyMapper.toAppDetailsResponseList(\n-                groupByAppIdStudyMap.get(app.getId()), groupByStudyIdSiteMap, fields);\n+            appStudies\n+                .stream()\n+                .map(\n+                    study ->\n+                        StudyMapper.toAppStudyResponse(\n+                            study, groupByStudyIdSiteMap.get(study.getId()), fields))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTI4OA=="}, "originalCommit": {"oid": "8016b99e234e2d691420140d38d664275b7fc085"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2330, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}