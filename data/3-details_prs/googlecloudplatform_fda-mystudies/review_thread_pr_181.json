{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTQwNzE5", "number": 181, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowNDoxMFrODz1IHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo0NjozMlrODz5K9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njc0Mzk4OnYy", "diffSide": "RIGHT", "path": "kubernetes/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowNDoxMFrOGIem8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoyMDowMVrOGIhmog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MzI4MA==", "bodyText": "Let's say  instead of . db-name refers to something different in MySQL. Same below.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411543280", "createdAt": "2020-04-20T17:04:10Z", "author": {"login": "kuoyuchi"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./response-server-ws/mystudies_response_server_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n+gs://<data-project-id>-sql-import\n+```\n+\n+Find the name of your Cloud SQL DB instance and use it for importing the\n+scripts, in this order:\n+\n+```\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0NDYwOA==", "bodyText": "Sorry, I don't think I understand. Should I change \"db-name\" to something else?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411544608", "createdAt": "2020-04-20T17:06:18Z", "author": {"login": "MartinPetkov"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./response-server-ws/mystudies_response_server_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n+gs://<data-project-id>-sql-import\n+```\n+\n+Find the name of your Cloud SQL DB instance and use it for importing the\n+scripts, in this order:\n+\n+```\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MzI4MA=="}, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MjM1NA==", "bodyText": "Got it. Changed it to \"instance-name\".", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411592354", "createdAt": "2020-04-20T18:20:01Z", "author": {"login": "MartinPetkov"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./response-server-ws/mystudies_response_server_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n+gs://<data-project-id>-sql-import\n+```\n+\n+Find the name of your Cloud SQL DB instance and use it for importing the\n+scripts, in this order:\n+\n+```\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MzI4MA=="}, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njc3NzU4OnYy", "diffSide": "RIGHT", "path": "kubernetes/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoxMjowMlrOGIe7Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1Mjo1MlrOGIgkNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODQ0Nw==", "bodyText": "there are multiple files here that should all be run. You could simply use ./WCP/sqlscript/*\ne.g. procedures have all been moved to procedures.sql and there are some initial enum data in a third script required for applications to run.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411548447", "createdAt": "2020-04-20T17:12:02Z", "author": {"login": "zohrehj"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODY3MQ==", "bodyText": "I am guessing other components have the same requirement", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411548671", "createdAt": "2020-04-20T17:12:23Z", "author": {"login": "zohrehj"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODQ0Nw=="}, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NTM1MA==", "bodyText": "I looked in the early-access branch, and that's the only one that looks different. All the other .sql scripts are the same name.\nI've changed this to WCP/* and updated the import lines.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411575350", "createdAt": "2020-04-20T17:52:52Z", "author": {"login": "MartinPetkov"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODQ0Nw=="}, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjgxNzMwOnYy", "diffSide": "RIGHT", "path": "kubernetes/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyMToyMFrOGIfTJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1NzowOFrOGIgveQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDU5Nw==", "bodyText": "I am not sure what this line means, can you clarify what this is referring to?\nIf it's Cloud SQL DB instance, then maybe we could move this sentence above to maintain the context.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411554597", "createdAt": "2020-04-20T17:21:20Z", "author": {"login": "zohrehj"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./response-server-ws/mystudies_response_server_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n+gs://<data-project-id>-sql-import\n+```\n+\n+Find the name of your Cloud SQL DB instance and use it for importing the\n+scripts, in this order:\n+\n+```\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/HPHC_My_Studies_DB_Create_Script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/mystudies_response_server_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/mystudies_app_info_update_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/mystudies_user_registration_db_script.sql\n+```\n+\n+Not that this is just the instance name, **not** the \"connection name\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3ODIzMw==", "bodyText": "If you go to the GCP console and see the instance details, there's a field called \"Instance connection name\". It might seem reasonable to use that in this command, but you're actually supposed to use just the instance name. This wasn't obvious to me when I was trying out commands, so I thought it worth mentioning.\nI've reworded this.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411578233", "createdAt": "2020-04-20T17:57:08Z", "author": {"login": "MartinPetkov"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.\n+\n+### Terraform\n+\n+Follow the [Terraform README.md](../Terraform/README.md) to create the\n+infrastructure. This will create a GKE cluster and a Cloud SQL MySQL database\n+instance.\n+\n+### SQL\n+\n+There are some SQL dump files in this repo that need to be imported before\n+deploying the apps.\n+\n+The gcloud import command only imports from GCS buckets, so first create a\n+bucket:\n+\n+```\n+$ gsutil mb gs://<data-project-id>-sql-import\n+```\n+\n+Now upload the files to the bucket:\n+\n+```\n+$ gsutil cp \\\n+  ./auth-server-ws/auth_server_db_script.sql \\\n+  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./response-server-ws/mystudies_response_server_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n+  ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n+gs://<data-project-id>-sql-import\n+```\n+\n+Find the name of your Cloud SQL DB instance and use it for importing the\n+scripts, in this order:\n+\n+```\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/HPHC_My_Studies_DB_Create_Script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/mystudies_response_server_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/mystudies_app_info_update_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/mystudies_user_registration_db_script.sql\n+```\n+\n+Not that this is just the instance name, **not** the \"connection name\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDU5Nw=="}, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjgyMjEyOnYy", "diffSide": "RIGHT", "path": "kubernetes/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyMjozM1rOGIfWKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1ODowMlrOGIgxqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NTM2OA==", "bodyText": "Do we need to make a note that these values should also be replaced in the rest of the deployment files listed above?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411555368", "createdAt": "2020-04-20T17:22:33Z", "author": {"login": "zohrehj"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3ODc5NQ==", "bodyText": "Yes, probably. I'll add a section.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411578795", "createdAt": "2020-04-20T17:58:02Z", "author": {"login": "MartinPetkov"}, "path": "kubernetes/README.md", "diffHunk": "@@ -0,0 +1,161 @@\n+# Kubernetes Setup\n+\n+This directory contains some Kubernetes resources common to all the apps.\n+\n+## Kubernetes Files Locations\n+\n+All files below are relative to the root of the repo.\n+\n+*   kubernetes/\n+    *   cert.yaml\n+        *   A Kubernetes ManagedCertificate for using\n+            [Google-managed SSL certificates](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs).\n+    *   ingress.yaml\n+        *   A Kubernetes Ingress for routing HTTP calls to services in the\n+            cluster.\n+    *   pod_security_policy.yaml\n+        *   A restrictive Pod Security Policy that applies to the cluster apps.\n+    *   pod_security_policy-istio.yaml\n+        *   A looser Pod Security Policy that only applies to Istio containers\n+            in the cluster.\n+    *   kubeapply.sh\n+        *   A helper script that applies all resources to the cluster. Not\n+            required, the manual steps will be described below.\n+*   auth-server-ws/\n+    *   deployment.yaml\n+        *   A Kubernetes Deployment, deploying the app along with its secrets.\n+    *   service.yaml\n+        *   A Kubernetes Service, exposing the app to communicate with other\n+            apps and the Ingress.\n+*   response-server-ws/\n+    *   <same as auth-server-ws>\n+*   WCP/\n+    *   <same as auth-server-ws>\n+*   WCP-WS/\n+    *   <same as auth-server-ws>\n+*   user-registration-server-ws/\n+    *   <same as auth-server-ws>\n+\n+## Setup\n+\n+### Prerequisites\n+\n+Install the following dependencies and add them to your PATH:\n+\n+*   [gcloud](https://cloud.google.com/sdk/gcloud)\n+*   [gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n+*   [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n+\n+Find the following project IDs:\n+\n+*   `<apps-project-id>`\n+*   `<data-project-id>`\n+\n+Substitute these in the following instructions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NTM2OA=="}, "originalCommit": {"oid": "80501448aad95c2bc9c6d733e5261b1f203057c5"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzQwNjYyOnYy", "diffSide": "RIGHT", "path": "kubernetes/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo0NjozMlrOGIkzJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MTozMVrOGIk-pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NDcxMA==", "bodyText": "not sure if the order matters, but in case it does we should put procedures above the version_info", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411644710", "createdAt": "2020-04-20T19:46:32Z", "author": {"login": "zohrehj"}, "path": "kubernetes/README.md", "diffHunk": "@@ -76,25 +76,52 @@ Now upload the files to the bucket:\n ```\n $ gsutil cp \\\n   ./auth-server-ws/auth_server_db_script.sql \\\n-  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./WCP/sqlscript/* \\\n   ./response-server-ws/mystudies_response_server_db_script.sql \\\n   ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n   ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n gs://<data-project-id>-sql-import\n ```\n \n-Find the name of your Cloud SQL DB instance and use it for importing the\n-scripts, in this order:\n+Find the name of your Cloud SQL DB instance. If looking at the GCP Console, this\n+is just the instance name, is **not** the \"Instance connection name\". Example:\n+if the connection name is \"myproject-data:us-east1:my-studies-2\", you should use\n+just \"my-studies-2\".\n+\n+Import the scripts, in this order:\n \n ```\n $ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/version_info_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/procedures.sql", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16dc9a36a66559bdd8f8a5f5947cba094b060936"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NzY1NQ==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/181#discussion_r411647655", "createdAt": "2020-04-20T19:51:31Z", "author": {"login": "MartinPetkov"}, "path": "kubernetes/README.md", "diffHunk": "@@ -76,25 +76,52 @@ Now upload the files to the bucket:\n ```\n $ gsutil cp \\\n   ./auth-server-ws/auth_server_db_script.sql \\\n-  ./WCP/sqlscript/HPHC_My_Studies_DB_Create_Script.sql \\\n+  ./WCP/sqlscript/* \\\n   ./response-server-ws/mystudies_response_server_db_script.sql \\\n   ./user-registration-server-ws/sqlscript/mystudies_app_info_update_db_script.sql \\\n   ./user-registration-server-ws/sqlscript/mystudies_user_registration_db_script.sql \\\n gs://<data-project-id>-sql-import\n ```\n \n-Find the name of your Cloud SQL DB instance and use it for importing the\n-scripts, in this order:\n+Find the name of your Cloud SQL DB instance. If looking at the GCP Console, this\n+is just the instance name, is **not** the \"Instance connection name\". Example:\n+if the connection name is \"myproject-data:us-east1:my-studies-2\", you should use\n+just \"my-studies-2\".\n+\n+Import the scripts, in this order:\n \n ```\n $ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/auth_server_db_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/version_info_script.sql\n+$ gcloud sql import sql --project=<data-project-id> <db-name> gs://<data-project-id>-sql-import/procedures.sql", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NDcxMA=="}, "originalCommit": {"oid": "16dc9a36a66559bdd8f8a5f5947cba094b060936"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1160, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}