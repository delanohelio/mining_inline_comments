{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzgyMjE0", "number": 807, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzo1ODoyNlrOEclrbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowMjoxNFrOEclyuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDEyOTA5OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.html", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzo1ODoyNlrOHHNdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDoyOTowNlrOHIKKiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyMjY0Ng==", "bodyText": "You've already checked that manageUsers is true, and the table should handle when manageUsers.users is falsey", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477322646", "createdAt": "2020-08-26T13:58:26Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.html", "diffHunk": "@@ -1 +1,72 @@\n-<p>manage-user-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Manage Users</div>\n+      <div>\n+        <button\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+          routerLink=\"/coordinator/users/new\"\n+        >\n+          Add New User\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\" *ngIf=\"manageUser$ | async as manageUsers\">\n+  <div *ngIf=\"manageUsers && manageUsers.users\" class=\"cards1 m-none\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NjgwMg==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477396802", "createdAt": "2020-08-26T15:37:18Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.html", "diffHunk": "@@ -1 +1,72 @@\n-<p>manage-user-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Manage Users</div>\n+      <div>\n+        <button\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+          routerLink=\"/coordinator/users/new\"\n+        >\n+          Add New User\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\" *ngIf=\"manageUser$ | async as manageUsers\">\n+  <div *ngIf=\"manageUsers && manageUsers.users\" class=\"cards1 m-none\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyMjY0Ng=="}, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0OTU2Nw==", "bodyText": "You've already done *ngIf=\"manageUser$ | async as manageUsers\", which is the same as *ngIf=\"manageUsers\" here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477449567", "createdAt": "2020-08-26T16:57:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.html", "diffHunk": "@@ -1 +1,72 @@\n-<p>manage-user-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Manage Users</div>\n+      <div>\n+        <button\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+          routerLink=\"/coordinator/users/new\"\n+        >\n+          Add New User\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\" *ngIf=\"manageUser$ | async as manageUsers\">\n+  <div *ngIf=\"manageUsers && manageUsers.users\" class=\"cards1 m-none\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyMjY0Ng=="}, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxNzE5Mg==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r478317192", "createdAt": "2020-08-27T10:29:06Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.html", "diffHunk": "@@ -1 +1,72 @@\n-<p>manage-user-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Manage Users</div>\n+      <div>\n+        <button\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+          routerLink=\"/coordinator/users/new\"\n+        >\n+          Add New User\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\" *ngIf=\"manageUser$ | async as manageUsers\">\n+  <div *ngIf=\"manageUsers && manageUsers.users\" class=\"cards1 m-none\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyMjY0Ng=="}, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDE0MTk0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowMDo1NFrOHHNlTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozNjo1OFrOHHR-HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNDYyMA==", "bodyText": "nit: you don't need to write tests to check that things aren't initialized.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477324620", "createdAt": "2020-08-26T14:00:54Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,76 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n \n+import {HttpClientModule} from '@angular/common/http';\n+import {of} from 'rxjs';\n+import {UserModule} from '../user.module';\n+import {UserService} from '../shared/user.service';\n import {UserListComponent} from './user-list.component';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ManageUsers} from '../shared/manage-user';\n+import {expectedManageUsers} from 'src/app/entity/mock-users-data';\n \n describe('ManageUserListComponent', () => {\n   let component: UserListComponent;\n   let fixture: ComponentFixture<UserListComponent>;\n \n   beforeEach(async(async () => {\n+    const userServiceSpy = jasmine.createSpyObj<UserService>('UserService', {\n+      getUsers: of(expectedManageUsers),\n+    });\n     await TestBed.configureTestingModule({\n       declarations: [UserListComponent],\n-    }).compileComponents();\n+      imports: [\n+        UserModule,\n+        BrowserAnimationsModule,\n+        NoopAnimationsModule,\n+        RouterTestingModule.withRoutes([]),\n+        HttpClientModule,\n+      ],\n+      providers: [{provide: UserService, useValue: userServiceSpy}],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(UserListComponent);\n+        component = fixture.componentInstance;\n+      });\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(UserListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n-  });\n-\n   it('should create', () => {\n     expect(component).toBeTruthy();\n   });\n+\n+  it('should NOT have user`s list before ngOnInit', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NjUwOQ==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477396509", "createdAt": "2020-08-26T15:36:58Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,76 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n \n+import {HttpClientModule} from '@angular/common/http';\n+import {of} from 'rxjs';\n+import {UserModule} from '../user.module';\n+import {UserService} from '../shared/user.service';\n import {UserListComponent} from './user-list.component';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ManageUsers} from '../shared/manage-user';\n+import {expectedManageUsers} from 'src/app/entity/mock-users-data';\n \n describe('ManageUserListComponent', () => {\n   let component: UserListComponent;\n   let fixture: ComponentFixture<UserListComponent>;\n \n   beforeEach(async(async () => {\n+    const userServiceSpy = jasmine.createSpyObj<UserService>('UserService', {\n+      getUsers: of(expectedManageUsers),\n+    });\n     await TestBed.configureTestingModule({\n       declarations: [UserListComponent],\n-    }).compileComponents();\n+      imports: [\n+        UserModule,\n+        BrowserAnimationsModule,\n+        NoopAnimationsModule,\n+        RouterTestingModule.withRoutes([]),\n+        HttpClientModule,\n+      ],\n+      providers: [{provide: UserService, useValue: userServiceSpy}],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(UserListComponent);\n+        component = fixture.componentInstance;\n+      });\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(UserListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n-  });\n-\n   it('should create', () => {\n     expect(component).toBeTruthy();\n   });\n+\n+  it('should NOT have user`s list before ngOnInit', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNDYyMA=="}, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDE0NTM0OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowMTozOVrOHHNnaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozNzowMlrOHHR-Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNTE2Mw==", "bodyText": "Why not expect(manageUser).toEqual(expectedManageUsers)? You may as well check all the properties", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477325163", "createdAt": "2020-08-26T14:01:39Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,76 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n \n+import {HttpClientModule} from '@angular/common/http';\n+import {of} from 'rxjs';\n+import {UserModule} from '../user.module';\n+import {UserService} from '../shared/user.service';\n import {UserListComponent} from './user-list.component';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ManageUsers} from '../shared/manage-user';\n+import {expectedManageUsers} from 'src/app/entity/mock-users-data';\n \n describe('ManageUserListComponent', () => {\n   let component: UserListComponent;\n   let fixture: ComponentFixture<UserListComponent>;\n \n   beforeEach(async(async () => {\n+    const userServiceSpy = jasmine.createSpyObj<UserService>('UserService', {\n+      getUsers: of(expectedManageUsers),\n+    });\n     await TestBed.configureTestingModule({\n       declarations: [UserListComponent],\n-    }).compileComponents();\n+      imports: [\n+        UserModule,\n+        BrowserAnimationsModule,\n+        NoopAnimationsModule,\n+        RouterTestingModule.withRoutes([]),\n+        HttpClientModule,\n+      ],\n+      providers: [{provide: UserService, useValue: userServiceSpy}],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(UserListComponent);\n+        component = fixture.componentInstance;\n+      });\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(UserListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n-  });\n-\n   it('should create', () => {\n     expect(component).toBeTruthy();\n   });\n+\n+  it('should NOT have user`s list before ngOnInit', () => {\n+    component.manageUser$.pipe().subscribe((manageUser: ManageUsers) => {\n+      expect(manageUser.users.length).toBe(\n+        0,\n+        'should NOT have user`s participant list before ngOnInit',\n+      );\n+    });\n+  });\n+\n+  describe('after get users', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+\n+    it('should get the list of users via refresh function', fakeAsync(() => {\n+      component.manageUser$.subscribe((manageUser) => {\n+        expect(manageUser.users.length).toEqual(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NjU3OQ==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477396579", "createdAt": "2020-08-26T15:37:02Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,76 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n \n+import {HttpClientModule} from '@angular/common/http';\n+import {of} from 'rxjs';\n+import {UserModule} from '../user.module';\n+import {UserService} from '../shared/user.service';\n import {UserListComponent} from './user-list.component';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ManageUsers} from '../shared/manage-user';\n+import {expectedManageUsers} from 'src/app/entity/mock-users-data';\n \n describe('ManageUserListComponent', () => {\n   let component: UserListComponent;\n   let fixture: ComponentFixture<UserListComponent>;\n \n   beforeEach(async(async () => {\n+    const userServiceSpy = jasmine.createSpyObj<UserService>('UserService', {\n+      getUsers: of(expectedManageUsers),\n+    });\n     await TestBed.configureTestingModule({\n       declarations: [UserListComponent],\n-    }).compileComponents();\n+      imports: [\n+        UserModule,\n+        BrowserAnimationsModule,\n+        NoopAnimationsModule,\n+        RouterTestingModule.withRoutes([]),\n+        HttpClientModule,\n+      ],\n+      providers: [{provide: UserService, useValue: userServiceSpy}],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(UserListComponent);\n+        component = fixture.componentInstance;\n+      });\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(UserListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n-  });\n-\n   it('should create', () => {\n     expect(component).toBeTruthy();\n   });\n+\n+  it('should NOT have user`s list before ngOnInit', () => {\n+    component.manageUser$.pipe().subscribe((manageUser: ManageUsers) => {\n+      expect(manageUser.users.length).toBe(\n+        0,\n+        'should NOT have user`s participant list before ngOnInit',\n+      );\n+    });\n+  });\n+\n+  describe('after get users', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+\n+    it('should get the list of users via refresh function', fakeAsync(() => {\n+      component.manageUser$.subscribe((manageUser) => {\n+        expect(manageUser.users.length).toEqual(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNTE2Mw=="}, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDE0Nzc3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDowMjoxNFrOHHNo7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozNzowNVrOHHR-fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNTU0OQ==", "bodyText": "nit: call query.toLowerCase() once", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477325549", "createdAt": "2020-08-26T14:02:14Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.ts", "diffHunk": "@@ -1,8 +1,42 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit} from '@angular/core';\n+import {ManageUsers} from '../shared/manage-user';\n+import {combineLatest, BehaviorSubject, Observable, of} from 'rxjs';\n+import {User} from 'src/app/entity/user';\n+import {UserService} from '../shared/user.service';\n+import {map} from 'rxjs/operators';\n \n @Component({\n   selector: 'user-list',\n   templateUrl: './user-list.component.html',\n-  styleUrls: ['./user-list.component.scss'],\n })\n-export class UserListComponent {}\n+export class UserListComponent implements OnInit {\n+  manageUser$: Observable<ManageUsers> = of();\n+  query$ = new BehaviorSubject('');\n+\n+  constructor(private readonly userService: UserService) {}\n+\n+  ngOnInit(): void {\n+    this.getUsers();\n+  }\n+\n+  getUsers(): void {\n+    this.manageUser$ = combineLatest(\n+      this.userService.getUsers(),\n+      this.query$,\n+    ).pipe(\n+      map(([manageUser, query]) => {\n+        manageUser.users = manageUser.users.filter(\n+          (user: User) =>\n+            user.firstName.toLowerCase().includes(query.toLowerCase()) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NjYwNw==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/807#discussion_r477396607", "createdAt": "2020-08-26T15:37:05Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/user/user-list/user-list.component.ts", "diffHunk": "@@ -1,8 +1,42 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit} from '@angular/core';\n+import {ManageUsers} from '../shared/manage-user';\n+import {combineLatest, BehaviorSubject, Observable, of} from 'rxjs';\n+import {User} from 'src/app/entity/user';\n+import {UserService} from '../shared/user.service';\n+import {map} from 'rxjs/operators';\n \n @Component({\n   selector: 'user-list',\n   templateUrl: './user-list.component.html',\n-  styleUrls: ['./user-list.component.scss'],\n })\n-export class UserListComponent {}\n+export class UserListComponent implements OnInit {\n+  manageUser$: Observable<ManageUsers> = of();\n+  query$ = new BehaviorSubject('');\n+\n+  constructor(private readonly userService: UserService) {}\n+\n+  ngOnInit(): void {\n+    this.getUsers();\n+  }\n+\n+  getUsers(): void {\n+    this.manageUser$ = combineLatest(\n+      this.userService.getUsers(),\n+      this.query$,\n+    ).pipe(\n+      map(([manageUser, query]) => {\n+        manageUser.users = manageUser.users.filter(\n+          (user: User) =>\n+            user.firstName.toLowerCase().includes(query.toLowerCase()) ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNTU0OQ=="}, "originalCommit": {"oid": "9b855961b968536738ebfc673f8240e04bb9a19b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1883, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}