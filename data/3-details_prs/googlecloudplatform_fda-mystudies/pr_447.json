{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTcyODM2", "number": 447, "title": "Urwebapp dataservice implementation", "bodyText": "data service is implemented", "createdAt": "2020-06-04T17:06:22Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447", "merged": true, "mergeCommit": {"oid": "012039be350a29746bf63450552e548bce51d576"}, "closed": true, "closedAt": "2020-06-12T14:07:57Z", "author": {"login": "firdosebtc1"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoBJ6TgH2gAyNDI3OTcyODM2OmE3Zjc2ZmM1ZGYzMTk4Nzc1Mjc1YjVhMzI3MDdkZDEwMTFjYjU2OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqilGmAFqTQyOTcyNTA5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a7f76fc5df3198775275b5a32707dd1011cb5691", "committedDate": "2020-06-04T17:03:47Z", "message": "dataservice has been implemented"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mzg0NjYw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#pullrequestreview-426384660", "createdAt": "2020-06-08T15:57:42Z", "commit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1Nzo0MlrOGglJdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozODo1OVrOGgpE4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjI0Nw==", "bodyText": "This file should be named data.service.ts.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436816247", "createdAt": "2020-06-08T15:57:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDE5Ng==", "bodyText": "Unused", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436824196", "createdAt": "2020-06-08T16:09:16Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTU5MQ==", "bodyText": "If this is going to be a \"base\" for all other entity services you should call it something like EntityService (data is too general). Also, this service should be generic, not use any.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436865591", "createdAt": "2020-06-08T17:15:23Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2ODYzOQ==", "bodyText": "This should also be done with an HttpInterceptor. In fact, you probably don't even need this service.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436868639", "createdAt": "2020-06-08T17:20:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTEzNg==", "bodyText": "This can be done with an https://angular.io/api/common/http/HttpInterceptor", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436869136", "createdAt": "2020-06-08T17:20:57Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTc4Nw==", "bodyText": "These methods names are overly verbose. get(...) is sufficient.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436869787", "createdAt": "2020-06-08T17:21:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3MDAwNw==", "bodyText": "remove", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436870007", "createdAt": "2020-06-08T17:22:08Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTQ0OQ==", "bodyText": "All of these should be added by default by HttpClient.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436879449", "createdAt": "2020-06-08T17:36:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDUxMw==", "bodyText": "Prefer Location.joinWithSlash", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436880513", "createdAt": "2020-06-08T17:38:47Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDYxMQ==", "bodyText": "unneeded.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436880611", "createdAt": "2020-06-08T17:38:59Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.delete(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpPutRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+\n+    return this.http.put<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  prepareHeadrers(headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6076a2ab73548f09b3654d92233061a8979eb83a", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6076a2ab73548f09b3654d92233061a8979eb83a", "committedDate": "2020-06-10T17:10:32Z", "message": "Code review comments has been resolved"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca74fab7e08e603bbe6f1f499826f544d3ffa72c", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ca74fab7e08e603bbe6f1f499826f544d3ffa72c", "committedDate": "2020-06-10T17:36:55Z", "message": "User Entity has been added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "committedDate": "2020-06-10T18:20:00Z", "message": "Build issue has been fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzkyNDUz", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#pullrequestreview-428392453", "createdAt": "2020-06-10T20:12:02Z", "commit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxMjowM1rOGiEqYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNTozN1rOGiFEeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw==", "bodyText": "What purpose does this serve?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438381153", "createdAt": "2020-06-10T20:12:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {\n+  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n+} from '@angular/common/http';\n+\n+import {Observable} from 'rxjs';\n+\n+@Injectable()\n+export class NoopInterceptor implements HttpInterceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA==", "bodyText": "This is already set by the framework", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438381384", "createdAt": "2020-06-10T20:12:32Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import {AuthService} from '../service/auth.service';\n+import {Injectable} from '@angular/core';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {\n+  HttpInterceptor,\n+  HttpHandler,\n+  HttpRequest,\n+} from '@angular/common/http';\n+import {finalize} from 'rxjs/operators';\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  constructor(private auth: AuthService, private spinner: NgxSpinnerService) {}\n+\n+  intercept(req: HttpRequest<any>, next: HttpHandler) {\n+    this.spinner.show();\n+    const userId = this.auth.getUserId();\n+    const authUserId = this.auth.getAuthUserId();\n+    const authToken = this.auth.getAuthorizationToken();\n+    if (userId != null && authUserId != null && authToken != null) {\n+      const headers = req.headers\n+          .set('Content-Type', 'application/json')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ==", "bodyText": "index is only used in certain circumstances. Use a different name.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438382231", "createdAt": "2020-06-10T20:14:19Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/app.module.ts", "diffHunk": "@@ -1,11 +1,14 @@\n import {BrowserModule} from '@angular/platform-browser';\n import {NgModule} from '@angular/core';\n import {AppComponent} from './app.component';\n-import {DataService} from './service/dataService';\n+import {EntityService} from './service/entity.service';\n+import {AuthService} from '../app/service/auth.service';\n+import {httpInterceptorProviders} from './http-interceptors/index';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDU4MQ==", "bodyText": "duplicate code", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438384581", "createdAt": "2020-06-10T20:19:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDYyMw==", "bodyText": "duplicate code", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438384623", "createdAt": "2020-06-10T20:19:17Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {\n+    this.userId = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.userId = this.user.id.toString();\n+    }\n+    return this.userId;\n+  }\n+\n+  getAuthUserId(): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA==", "bodyText": "Instead of returning undefined here, add a method that returns if the user is logged in. Then use a canActivate guard to make sure that the user is always logged in when these methods are called.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387050", "createdAt": "2020-06-10T20:24:02Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzE4Ng==", "bodyText": "Don't construct a user if we don't have one.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387186", "createdAt": "2020-06-10T20:24:18Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzU5Ng==", "bodyText": "you're not using these properties, you just overwrite them every time the methods are called.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387596", "createdAt": "2020-06-10T20:25:08Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg==", "bodyText": "Don't use any.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387832", "createdAt": "2020-06-10T20:25:37Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {Location} from '@angular/common';\n+\n+@Injectable()\n+export class EntityService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  serviceUrl: string = '';\n+  constructor(private http: HttpClient) {}\n+\n+  post(bodydata: any, urlpath: string): Observable<any> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2970eb6f8f30ac223a513e9926ba96be812ef884", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2970eb6f8f30ac223a513e9926ba96be812ef884", "committedDate": "2020-06-11T15:50:24Z", "message": " Updated PR suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d3f6723a5a9cb3a5946261550595bd421bc9b4", "author": {"user": {"login": "nikklassen", "name": "Nik Klassen"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c2d3f6723a5a9cb3a5946261550595bd421bc9b4", "committedDate": "2020-06-11T17:34:53Z", "message": "Merge branch 'develop' into urwebapp-dataservice-implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTQwNDU5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#pullrequestreview-429140459", "createdAt": "2020-06-11T17:36:36Z", "commit": {"oid": "c2d3f6723a5a9cb3a5946261550595bd421bc9b4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86e57bd355f6a70b25b25168b1c05d0e47e44ef4", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/86e57bd355f6a70b25b25168b1c05d0e47e44ef4", "committedDate": "2020-06-12T11:54:17Z", "message": "Code review comments has been resolved"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f6d434aea4edf58dc925bb8933db3f956245138", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4f6d434aea4edf58dc925bb8933db3f956245138", "committedDate": "2020-06-12T12:17:47Z", "message": "Index causes import error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NzI1MDkw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#pullrequestreview-429725090", "createdAt": "2020-06-12T13:08:12Z", "commit": {"oid": "4f6d434aea4edf58dc925bb8933db3f956245138"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 931, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}