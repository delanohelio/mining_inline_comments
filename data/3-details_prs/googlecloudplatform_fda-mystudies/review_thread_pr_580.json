{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNDQxNzYx", "number": 580, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDoxNjoxNVrOEOhLng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMTo1MDowNFrOEO4Yzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjU5MTY2OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDoxNjoxNVrOGxtmTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzozODozOVrOGzIquw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4MDQ5NQ==", "bodyText": "Similar suggestion to PR #583\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";\n          \n          \n            \n                  \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\[\\\\]^_`{|}~]).{8,64}$\";", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r454780495", "createdAt": "2020-07-15T04:16:15Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+import javax.validation.constraints.Size;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Getter\n+@Setter\n+public class UserRequest {\n+\n+  private static final String PASSWORD_REGEX =\n+      \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MTA4Ng==", "bodyText": "Also I think this PASSWORD_REGEX is also in other requests like ChangePasswordRequest, would it be helpful if we just have this constant in one common place instead of in across multiple files", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r454791086", "createdAt": "2020-07-15T04:54:53Z", "author": {"login": "saminguyen"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+import javax.validation.constraints.Size;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Getter\n+@Setter\n+public class UserRequest {\n+\n+  private static final String PASSWORD_REGEX =\n+      \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4MDQ5NQ=="}, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MjU3MQ==", "bodyText": "I noticed those extra \\ are added by IDE when the regex is copy-pasted inside double quotes. Changed the regex as per your suggestion.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r456272571", "createdAt": "2020-07-17T07:38:39Z", "author": {"login": "dhanyak-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/UserRequest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+import javax.validation.constraints.Size;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@Getter\n+@Setter\n+public class UserRequest {\n+\n+  private static final String PASSWORD_REGEX =\n+      \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4MDQ5NQ=="}, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjY0NjA2OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDo0NTozN1rOGxuE7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzo0MToyOFrOGzIwAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4ODMzMg==", "bodyText": "This line will be removed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r454788332", "createdAt": "2020-07-15T04:45:37Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.UserService;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.validation.Valid;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/v1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MzkyMg==", "bodyText": "Yes, I'll make sure API endpoint doesn't contain version in the last PR of oauth-scim-service.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r456273922", "createdAt": "2020-07-17T07:41:28Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.UserRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResponse;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.UserService;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.validation.Valid;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/v1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4ODMzMg=="}, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDM5Mzc0OnYy", "diffSide": "RIGHT", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/model/UserEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMTo1MDowNFrOGySVlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzo0NDowMFrOGzI0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM4MjQyMw==", "bodyText": "More verbose naming for timestamp columns: I suggest created_at or created_timestamp. And we should use one consistent naming convention throughout the entire project.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r455382423", "createdAt": "2020-07-15T21:50:04Z", "author": {"login": "saminguyen"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/model/UserEntity.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.model;\n+\n+import java.sql.Timestamp;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.text.StringEscapeUtils;\n+import org.hibernate.annotations.GenericGenerator;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"users\")\n+public class UserEntity {\n+\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"user_id\", updatable = false, length = 64)\n+  private String userId;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NTEyMA==", "bodyText": "Zohreh suggested this naming conversion for timestamp in earlier PR so team has removed suffix for timestamp field.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/580#discussion_r456275120", "createdAt": "2020-07-17T07:44:00Z", "author": {"login": "dhanyak-btc"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/model/UserEntity.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.model;\n+\n+import java.sql.Timestamp;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.text.StringEscapeUtils;\n+import org.hibernate.annotations.GenericGenerator;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"users\")\n+public class UserEntity {\n+\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  @ToString.Exclude\n+  @Column(name = \"user_id\", updatable = false, length = 64)\n+  private String userId;\n+\n+  @Column(\n+      name = \"created\",\n+      insertable = false,\n+      updatable = false,\n+      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  private Timestamp created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM4MjQyMw=="}, "originalCommit": {"oid": "f6261940127de6b2ac6a0aa0c766ba17a3dcab30"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2231, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}