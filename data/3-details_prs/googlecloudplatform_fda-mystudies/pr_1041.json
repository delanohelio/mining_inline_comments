{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNTUzNDYx", "number": 1041, "title": "OAuth Scim Service - Added /callback endpoint with integration tests and fixed reset password issue due to code merge", "bodyText": "Fixed Issue #1032: During POC, Hydra was redirecting to the -e URLS_LOGIN=\"${SCIM_AUTH_URL}/login\" after the login/consent flow is completed. I didn't find how to change this default redirection. After referring Redirect URL is not whitelisted common problem, I came to know that redirect_uri can be used to redirect the user agent to ${SCIM_AUTH_URL}/callback.\n\n\nI was unable to test my changes due to reset password issue, code was not properly merged into 'develop' branch. I removed wrong code and ensured tests are passing. Please review and approve the PR.", "createdAt": "2020-09-26T09:29:28Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041", "merged": true, "mergeCommit": {"oid": "3e49f82ee5ac6db7ececa858f53562e7d17b5d15"}, "closed": true, "closedAt": "2020-09-28T18:11:22Z", "author": {"login": "dhanyak-btc"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMm5yHAH2gAyNDkzNTUzNDYxOjE0MzRkMGRkNGIxYWQ2OThjNmVlODkwODY3MDY3MmE5ZWUzZmViYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNXo8FgFqTQ5Nzc3ODUzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1434d0dd4b1ad698c6ee8908670672a9ee3feba2", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1434d0dd4b1ad698c6ee8908670672a9ee3feba2", "committedDate": "2020-09-26T09:23:50Z", "message": "Added /callback endpoint with integration tests and fixed reset password issue due to code merge\n\nAdded /callback endpoint with integration tests and fixed reset password issue due to code merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6788e42334497b420a3316d4894c2916a4f442b", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c6788e42334497b420a3316d4894c2916a4f442b", "committedDate": "2020-09-26T09:32:40Z", "message": "Merge branch 'develop' into oauth_scim_callback_endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4203238a5831df21941db301ae74b333d0c49577", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4203238a5831df21941db301ae74b333d0c49577", "committedDate": "2020-09-26T14:50:31Z", "message": "Changed spring.jpa.show-sql value to false\n\nBuild failed with The forked VM terminated without properly saying goodbye. VM crash or System.exit called?"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzM3NTI0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041#pullrequestreview-497737524", "createdAt": "2020-09-28T17:13:33Z", "commit": {"oid": "4203238a5831df21941db301ae74b333d0c49577"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoxMzozNFrOHZIFEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyMzo0NFrOHZIbeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwODgxOQ==", "bodyText": "this is mobile platform specific code, yet nothing in the method or controller name suggests that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041#discussion_r496108819", "createdAt": "2020-09-28T17:13:34Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/CallbackController.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ACCOUNT_STATUS_COOKIE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.MOBILE_PLATFORM_COOKIE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID_COOKIE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimEvent.SIGNIN_FAILED;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimEvent.SIGNIN_SUCCEEDED;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimEvent.SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventRequest;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccountStatus;\n+import com.google.cloud.healthcare.fdamystudies.mapper.AuditEventMapper;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimAuditHelper;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.RedirectConfig;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.servlet.ModelAndView;\n+import org.springframework.web.util.WebUtils;\n+\n+@Controller\n+public class CallbackController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(CallbackController.class.getName());\n+\n+  @Autowired private RedirectConfig redirectConfig;\n+\n+  @Autowired private AuthScimAuditHelper auditHelper;\n+\n+  @GetMapping(value = \"/callback\")\n+  public String login(\n+      @RequestParam String code,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    AuditLogEventRequest auditRequest = AuditEventMapper.fromHttpServletRequest(request);\n+\n+    if (StringUtils.isEmpty(code)) {\n+      logger.error(\"authorization code is empty, return error view\");\n+      auditHelper.logEvent(SIGNIN_FAILED, auditRequest);\n+      return ERROR_VIEW_NAME;\n+    }\n+\n+    String userId = getCookieValue(request, USER_ID_COOKIE);\n+    if (StringUtils.isEmpty(userId)) {\n+      logger.error(\"userId cookie value is empty, return error view\");\n+      auditHelper.logEvent(SIGNIN_FAILED, auditRequest);\n+      return ERROR_VIEW_NAME;\n+    }\n+\n+    String mobilePlatform = getCookieValue(request, MOBILE_PLATFORM_COOKIE);\n+    String accountStatus = getCookieValue(request, ACCOUNT_STATUS_COOKIE);\n+    String callbackUrl = redirectConfig.getCallbackUrl(mobilePlatform);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4203238a5831df21941db301ae74b333d0c49577"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMDU5MA==", "bodyText": "where is this used and how does it work if the request is coming from the mobile app?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041#discussion_r496110590", "createdAt": "2020-09-28T17:16:42Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/CallbackController.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ACCOUNT_STATUS_COOKIE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.ERROR_VIEW_NAME;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.MOBILE_PLATFORM_COOKIE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID_COOKIE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimEvent.SIGNIN_FAILED;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimEvent.SIGNIN_SUCCEEDED;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimEvent.SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventRequest;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccountStatus;\n+import com.google.cloud.healthcare.fdamystudies.mapper.AuditEventMapper;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimAuditHelper;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.RedirectConfig;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.servlet.ModelAndView;\n+import org.springframework.web.util.WebUtils;\n+\n+@Controller\n+public class CallbackController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(CallbackController.class.getName());\n+\n+  @Autowired private RedirectConfig redirectConfig;\n+\n+  @Autowired private AuthScimAuditHelper auditHelper;\n+\n+  @GetMapping(value = \"/callback\")\n+  public String login(\n+      @RequestParam String code,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    AuditLogEventRequest auditRequest = AuditEventMapper.fromHttpServletRequest(request);\n+\n+    if (StringUtils.isEmpty(code)) {\n+      logger.error(\"authorization code is empty, return error view\");\n+      auditHelper.logEvent(SIGNIN_FAILED, auditRequest);\n+      return ERROR_VIEW_NAME;\n+    }\n+\n+    String userId = getCookieValue(request, USER_ID_COOKIE);\n+    if (StringUtils.isEmpty(userId)) {\n+      logger.error(\"userId cookie value is empty, return error view\");\n+      auditHelper.logEvent(SIGNIN_FAILED, auditRequest);\n+      return ERROR_VIEW_NAME;\n+    }\n+\n+    String mobilePlatform = getCookieValue(request, MOBILE_PLATFORM_COOKIE);\n+    String accountStatus = getCookieValue(request, ACCOUNT_STATUS_COOKIE);\n+    String callbackUrl = redirectConfig.getCallbackUrl(mobilePlatform);\n+\n+    String redirectUrl =\n+        String.format(\n+            \"%s?code=%s&userId=%s&accountStatus=%s\", callbackUrl, code, userId, accountStatus);\n+\n+    if (UserAccountStatus.ACTIVE.getStatus() == Integer.parseInt(accountStatus)) {\n+      auditHelper.logEvent(SIGNIN_SUCCEEDED, auditRequest);\n+    } else {\n+      auditHelper.logEvent(SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED, auditRequest);\n+    }\n+\n+    logger.exit(String.format(\"redirect to %s from /login\", callbackUrl));\n+    return redirect(response, redirectUrl);\n+  }\n+\n+  private String getCookieValue(HttpServletRequest request, String cookieName) {\n+    Cookie cookie = WebUtils.getCookie(request, cookieName);\n+    return cookie != null ? cookie.getValue() : null;\n+  }\n+\n+  private String redirect(HttpServletResponse response, String redirectUrl) {\n+    response.setHeader(\"Location\", redirectUrl);\n+    response.setStatus(HttpStatus.FOUND.value());\n+    return \"redirect:\" + redirectUrl;\n+  }\n+\n+  @ExceptionHandler(Exception.class)\n+  public ModelAndView handleError(HttpServletRequest req, Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4203238a5831df21941db301ae74b333d0c49577"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMTUzOA==", "bodyText": "looks like login_challenge is now required, why is that?\nsame with other changes. removing code and cookie value, why are they needed, and should they be in this PR?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041#discussion_r496111538", "createdAt": "2020-09-28T17:18:30Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginController.java", "diffHunk": "@@ -96,36 +92,16 @@\n \n   @Autowired private AuthScimAuditHelper auditHelper;\n \n-  /**\n-   * @param loginChallenge is optional. ORY Hydra sends this field as query param when login/consent\n-   *     flow is initiated.\n-   * @param code ORY Hydra redirects to this path again when the login/consent flow is completed.\n-   *     ORY Hydra sends authorization 'code' and no login challenge in query params.\n-   * @param request\n-   * @param response\n-   * @param model\n-   * @return\n-   */\n   @GetMapping(value = \"/login\")\n   public String login(\n-      @RequestParam(name = LOGIN_CHALLENGE, required = false) String loginChallenge,\n-      @RequestParam(required = false) String code,\n-      @CookieValue(name = ACCOUNT_STATUS_COOKIE, required = false) String accountStatus,\n+      @RequestParam(name = LOGIN_CHALLENGE) String loginChallenge,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4203238a5831df21941db301ae74b333d0c49577"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExNDU1Mw==", "bodyText": "looks like a bug fix, but outside of the scope of this PR.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041#discussion_r496114553", "createdAt": "2020-09-28T17:23:44Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -207,15 +204,17 @@ public ResetPasswordResponse resetPassword(\n       throw new ErrorCodeException(ErrorCode.ACCOUNT_DEACTIVATED);\n     }\n \n+    Integer accountStatusBeforePasswordReset = userEntity.getStatus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4203238a5831df21941db301ae74b333d0c49577"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83abfbb9daf3ca3e1e09abccd0b3d64e69663223", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/83abfbb9daf3ca3e1e09abccd0b3d64e69663223", "committedDate": "2020-09-28T17:29:00Z", "message": "Merge branch 'develop' into oauth_scim_callback_endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "348e32b191290f39fdf47ca26c7f6fb29e54a331", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/348e32b191290f39fdf47ca26c7f6fb29e54a331", "committedDate": "2020-09-28T18:04:36Z", "message": "Added TODO for Issue #1061\n\nAdded TODO for Issue #1061"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Nzc4NTM2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1041#pullrequestreview-497778536", "createdAt": "2020-09-28T18:10:47Z", "commit": {"oid": "348e32b191290f39fdf47ca26c7f6fb29e54a331"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 311, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}