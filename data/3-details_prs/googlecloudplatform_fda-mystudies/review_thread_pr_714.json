{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMjc0NDA1", "number": 714, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1ODoyNFrOEVeeAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyOTowMlrOEW4-Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU0NzUzOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1ODoyNFrOG8QKgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1ODoyNFrOG8QKgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzMjU3OQ==", "bodyText": "nit: you don't need to check the length, the inner *ngFor will be empty", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465832579", "createdAt": "2020-08-05T15:58:24Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.html", "diffHunk": "@@ -0,0 +1,55 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"app$ | async as apps\">\n+            <div *ngIf=\"apps.length != 0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU0OTY4OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1OTowMVrOG8QL6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1OTowMVrOG8QL6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzMjkzNg==", "bodyText": "What does 0 stand for? Please use enums", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465832936", "createdAt": "2020-08-05T15:59:01Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.html", "diffHunk": "@@ -0,0 +1,55 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"app$ | async as apps\">\n+            <div *ngIf=\"apps.length != 0\">\n+                <div *ngFor=\"let app of apps\" class=\"bg__white cards box__shadow-cmn p-xl ml-none mr-none apps_row\">\n+                    <div (click)=\"navigateToParticipantList('app', app.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div>\n+                            <div class=\"blue__text__md text-capitalize\">\n+                                {{ app.customId }}\n+                            </div>\n+                            <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                {{ app.name }}\n+                            </div>\n+                            <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                <div class=\"col-xs-6 col-md-12 p-none\">\n+                                    {{ app.totalStudiesCount | i18nPlural: studiesMessageMapping }}\n+                                    <span *ngIf=\"app.appPermission != 0\">,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU1ODUyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowMTowM1rOG8QRqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo1ODo1MFrOG8nqyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNDQxMQ==", "bodyText": "suggestion: you can set up the mocked methods and return value at the same time\njasmine.createSpyObj<AppsService>('AppsService', {\n      'getApps': of(expectedAppList),\n})", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465834411", "createdAt": "2020-08-05T16:01:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,95 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {AppsModule} from '../apps.module';\n+import {AppsService} from '../shared/apps.service';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {expectedAppList} from 'src/app/entity/mockAppsData';\n+\n+import {AppListComponent} from './app-list.component';\n+\n+describe('AppListComponent', () => {\n+  let component: AppListComponent;\n+  let fixture: ComponentFixture<AppListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const appsServiceSpy = jasmine.createSpyObj<AppsService>('AppsService', [\n+      'getApps',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNzY3NQ==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r466217675", "createdAt": "2020-08-06T07:58:50Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,95 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {AppsModule} from '../apps.module';\n+import {AppsService} from '../shared/apps.service';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {expectedAppList} from 'src/app/entity/mockAppsData';\n+\n+import {AppListComponent} from './app-list.component';\n+\n+describe('AppListComponent', () => {\n+  let component: AppListComponent;\n+  let fixture: ComponentFixture<AppListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const appsServiceSpy = jasmine.createSpyObj<AppsService>('AppsService', [\n+      'getApps',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNDQxMQ=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU2NDcxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowMjozOVrOG8QVsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowMjozOVrOG8QVsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNTQ0Mg==", "bodyText": "This isn't being used for anything", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465835442", "createdAt": "2020-08-05T16:02:39Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],\n+})\n+export class AppListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  app$: Observable<App[]> = of([]);\n+  apps: App[] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU2ODMxOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowMzozOVrOG8QYCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyOToyMlrOG-YXzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjA0MQ==", "bodyText": "This one needs an unsubscribe because even though it uses a web request it is an infinite observable due to query$", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465836041", "createdAt": "2020-08-05T16:03:39Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],\n+})\n+export class AppListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  app$: Observable<App[]> = of([]);\n+  apps: App[] = [];\n+  appUsersMessageMapping: {[k: string]: string} = {\n+    '=0': 'No App Users',\n+    '=1': 'One App User',\n+    'other': '# App Users',\n+  };\n+  studiesMessageMapping: {[k: string]: string} = {\n+    '=0': 'No Studies',\n+    '=1': 'One Study',\n+    'other': '# Studies',\n+  };\n+\n+  constructor(private readonly appService: AppsService) {}\n+\n+  ngOnInit(): void {\n+    this.getApps();\n+  }\n+\n+  getApps(): void {\n+    this.app$ = combineLatest(this.appService.getApps(), this.query$).pipe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzExMDExNg==", "bodyText": "Please address this", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467110116", "createdAt": "2020-08-07T15:25:38Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],\n+})\n+export class AppListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  app$: Observable<App[]> = of([]);\n+  apps: App[] = [];\n+  appUsersMessageMapping: {[k: string]: string} = {\n+    '=0': 'No App Users',\n+    '=1': 'One App User',\n+    'other': '# App Users',\n+  };\n+  studiesMessageMapping: {[k: string]: string} = {\n+    '=0': 'No Studies',\n+    '=1': 'One Study',\n+    'other': '# Studies',\n+  };\n+\n+  constructor(private readonly appService: AppsService) {}\n+\n+  ngOnInit(): void {\n+    this.getApps();\n+  }\n+\n+  getApps(): void {\n+    this.app$ = combineLatest(this.appService.getApps(), this.query$).pipe(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjA0MQ=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NTE1Mg==", "bodyText": "As we are subscribing to this.app$  using the async pipe in the component template. async pipe will unsubscribe automatically on destroy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467165152", "createdAt": "2020-08-07T17:10:18Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],\n+})\n+export class AppListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  app$: Observable<App[]> = of([]);\n+  apps: App[] = [];\n+  appUsersMessageMapping: {[k: string]: string} = {\n+    '=0': 'No App Users',\n+    '=1': 'One App User',\n+    'other': '# App Users',\n+  };\n+  studiesMessageMapping: {[k: string]: string} = {\n+    '=0': 'No Studies',\n+    '=1': 'One Study',\n+    'other': '# Studies',\n+  };\n+\n+  constructor(private readonly appService: AppsService) {}\n+\n+  ngOnInit(): void {\n+    this.getApps();\n+  }\n+\n+  getApps(): void {\n+    this.app$ = combineLatest(this.appService.getApps(), this.query$).pipe(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjA0MQ=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NDIwNA==", "bodyText": "Yup, sorry, I missed that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r468064204", "createdAt": "2020-08-10T17:29:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],\n+})\n+export class AppListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  app$: Observable<App[]> = of([]);\n+  apps: App[] = [];\n+  appUsersMessageMapping: {[k: string]: string} = {\n+    '=0': 'No App Users',\n+    '=1': 'One App User',\n+    'other': '# App Users',\n+  };\n+  studiesMessageMapping: {[k: string]: string} = {\n+    '=0': 'No Studies',\n+    '=1': 'One Study',\n+    'other': '# Studies',\n+  };\n+\n+  constructor(private readonly appService: AppsService) {}\n+\n+  ngOnInit(): void {\n+    this.getApps();\n+  }\n+\n+  getApps(): void {\n+    this.app$ = combineLatest(this.appService.getApps(), this.query$).pipe(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjA0MQ=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU3MjczOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/shared/apps.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowNDo1MFrOG8QawQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo1ODo0M1rOG8nqhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjczNw==", "bodyText": "Variables are always lower camelCase: app", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465836737", "createdAt": "2020-08-05T16:04:50Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/apps.service.spec.ts", "diffHunk": "@@ -0,0 +1,70 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {throwError, of} from 'rxjs';\n+import {App} from './app.model';\n+import {expectedAppList} from 'src/app/entity/mockAppsData';\n+import {AppsService} from './apps.service';\n+\n+describe('StudiesService', () => {\n+  let appsService: AppsService;\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [AppsService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: AppsService = TestBed.get(AppsService) as AppsService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Apps List', fakeAsync(() => {\n+    const entityServicespy = jasmine.createSpyObj<EntityService<App>>(\n+      'EntityService',\n+      ['getCollection'],\n+    );\n+    appsService = new AppsService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(of(expectedAppList));\n+    appsService\n+      .getApps()\n+      .subscribe(\n+        (App) => expect(App).toEqual(expectedAppList, 'expected AppsList'),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNzYwNQ==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r466217605", "createdAt": "2020-08-06T07:58:43Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/apps.service.spec.ts", "diffHunk": "@@ -0,0 +1,70 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {throwError, of} from 'rxjs';\n+import {App} from './app.model';\n+import {expectedAppList} from 'src/app/entity/mockAppsData';\n+import {AppsService} from './apps.service';\n+\n+describe('StudiesService', () => {\n+  let appsService: AppsService;\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [AppsService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: AppsService = TestBed.get(AppsService) as AppsService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Apps List', fakeAsync(() => {\n+    const entityServicespy = jasmine.createSpyObj<EntityService<App>>(\n+      'EntityService',\n+      ['getCollection'],\n+    );\n+    appsService = new AppsService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(of(expectedAppList));\n+    appsService\n+      .getApps()\n+      .subscribe(\n+        (App) => expect(App).toEqual(expectedAppList, 'expected AppsList'),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjczNw=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU3NDkwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/shared/apps.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowNToyMVrOG8QcDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo1ODozN1rOG8nqRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNzA3MQ==", "bodyText": "nit: prefer toHaveBeenCalledTimes(1)", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465837071", "createdAt": "2020-08-05T16:05:21Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/apps.service.spec.ts", "diffHunk": "@@ -0,0 +1,70 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {throwError, of} from 'rxjs';\n+import {App} from './app.model';\n+import {expectedAppList} from 'src/app/entity/mockAppsData';\n+import {AppsService} from './apps.service';\n+\n+describe('StudiesService', () => {\n+  let appsService: AppsService;\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [AppsService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: AppsService = TestBed.get(AppsService) as AppsService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Apps List', fakeAsync(() => {\n+    const entityServicespy = jasmine.createSpyObj<EntityService<App>>(\n+      'EntityService',\n+      ['getCollection'],\n+    );\n+    appsService = new AppsService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(of(expectedAppList));\n+    appsService\n+      .getApps()\n+      .subscribe(\n+        (App) => expect(App).toEqual(expectedAppList, 'expected AppsList'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNzU0MQ==", "bodyText": "updated", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r466217541", "createdAt": "2020-08-06T07:58:37Z", "author": {"login": "rohithd-btc"}, "path": "UR-web-app/src/app/site-coordinator/apps/shared/apps.service.spec.ts", "diffHunk": "@@ -0,0 +1,70 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {throwError, of} from 'rxjs';\n+import {App} from './app.model';\n+import {expectedAppList} from 'src/app/entity/mockAppsData';\n+import {AppsService} from './apps.service';\n+\n+describe('StudiesService', () => {\n+  let appsService: AppsService;\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [AppsService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: AppsService = TestBed.get(AppsService) as AppsService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Apps List', fakeAsync(() => {\n+    const entityServicespy = jasmine.createSpyObj<EntityService<App>>(\n+      'EntityService',\n+      ['getCollection'],\n+    );\n+    appsService = new AppsService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(of(expectedAppList));\n+    appsService\n+      .getApps()\n+      .subscribe(\n+        (App) => expect(App).toEqual(expectedAppList, 'expected AppsList'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNzA3MQ=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTU3ODEwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjowNjoxN1rOG8QeTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzoxNjo1N1rOG9hsjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNzY0NA==", "bodyText": "If the file is empty you don't need to include it", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r465837644", "createdAt": "2020-08-05T16:06:17Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2ODM5OQ==", "bodyText": "updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467168399", "createdAt": "2020-08-07T17:16:57Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component, OnInit} from '@angular/core';\n+import {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {AppsService} from '../shared/apps.service';\n+import {App} from '../shared/app.model';\n+@Component({\n+  selector: 'app-app-list',\n+  templateUrl: './app-list.component.html',\n+  styleUrls: ['./app-list.component.scss'],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNzY0NA=="}, "originalCommit": {"oid": "493507657629b5f74379ce4d4a3b541ef559ae28"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzczNTIyOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNToyMzo1OFrOG9eFDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzoxNjo0NVrOG9hsLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEwOTEzNQ==", "bodyText": "Remove commented code", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467109135", "createdAt": "2020-08-07T15:23:58Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.spec.ts", "diffHunk": "@@ -59,7 +59,7 @@ describe('AppListComponent', () => {\n         fixture = TestBed.createComponent(AppListComponent);\n         component = fixture.componentInstance;\n \n-        appsServiceSpy.getApps.and.returnValue(of(expectedAppList));\n+        // appsServiceSpy.getApps.and.returnValue(of(expectedAppList));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c3aaf38b1e41c4f68d0645524da35676bfd3ec"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2ODMwMw==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467168303", "createdAt": "2020-08-07T17:16:45Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.spec.ts", "diffHunk": "@@ -59,7 +59,7 @@ describe('AppListComponent', () => {\n         fixture = TestBed.createComponent(AppListComponent);\n         component = fixture.componentInstance;\n \n-        appsServiceSpy.getApps.and.returnValue(of(expectedAppList));\n+        // appsServiceSpy.getApps.and.returnValue(of(expectedAppList));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEwOTEzNQ=="}, "originalCommit": {"oid": "49c3aaf38b1e41c4f68d0645524da35676bfd3ec"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzczNzg3OnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNToyNDo0M1rOG9eGtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzoxNjo1MFrOG9hsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEwOTU1OQ==", "bodyText": "checkEditPermission", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467109559", "createdAt": "2020-08-07T15:24:43Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -54,4 +52,7 @@ export class AppListComponent implements OnInit {\n       return 'green__text__sm';\n     }\n   }\n+  checkeditPermission(permission: number): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c3aaf38b1e41c4f68d0645524da35676bfd3ec"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2ODM0Nw==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r467168347", "createdAt": "2020-08-07T17:16:50Z", "author": {"login": "firdosebtc1"}, "path": "UR-web-app/src/app/site-coordinator/apps/app-list/app-list.component.ts", "diffHunk": "@@ -54,4 +52,7 @@ export class AppListComponent implements OnInit {\n       return 'green__text__sm';\n     }\n   }\n+  checkeditPermission(permission: number): boolean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEwOTU1OQ=="}, "originalCommit": {"oid": "49c3aaf38b1e41c4f68d0645524da35676bfd3ec"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDM3NTEwOnYy", "diffSide": "RIGHT", "path": "UR-web-app/src/app/shared/permission.enums.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyOTowMlrOG-YW-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyOTowMlrOG-YW-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2Mzk5NA==", "bodyText": "ESLint shouldn't be flagging enum members. I'll fix that.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/714#discussion_r468063994", "createdAt": "2020-08-10T17:29:02Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/shared/permission.enums.ts", "diffHunk": "@@ -0,0 +1,4 @@\n+export enum PermisssionEnum {\n+  view = 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "397b381186a18b9d81c1c4504a2d826728c511b7"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2086, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}