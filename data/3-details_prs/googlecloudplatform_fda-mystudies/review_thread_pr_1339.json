{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTQwMzcy", "number": 1339, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjoxMzozMFrOEtdBjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOToxODowNlrOEtoGpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDk2OTExOnYy", "diffSide": "RIGHT", "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjoxMzozMFrOHhP9Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToyNToyMFrOHhYqgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNjQ4Ng==", "bodyText": "I see that this check is being repeated a lot in one file. A suggestion is to create a helper method and call it something like validateUserId", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1339#discussion_r504626486", "createdAt": "2020-10-14T12:13:30Z", "author": {"login": "saminguyen"}, "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "diffHunk": "@@ -278,12 +282,19 @@ public ParticipantResponse addNewParticipant(\n   private ErrorCode validationForAddNewParticipant(\n       ParticipantDetailRequest participant, String userId, SiteEntity site) {\n \n-    Optional<SitePermissionEntity> optSitePermission =\n-        sitePermissionRepository.findByUserIdAndSiteId(userId, participant.getSiteId());\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n+    if (!optUserRegAdminEntity.isPresent()) {\n+      throw new ErrorCodeException(ErrorCode.USER_NOT_FOUND);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5b12458c4d5ac47d081afaf44282fbf3cb1150"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2OTE1Mg==", "bodyText": "Created validateUserId() method.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1339#discussion_r504769152", "createdAt": "2020-10-14T15:25:20Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "diffHunk": "@@ -278,12 +282,19 @@ public ParticipantResponse addNewParticipant(\n   private ErrorCode validationForAddNewParticipant(\n       ParticipantDetailRequest participant, String userId, SiteEntity site) {\n \n-    Optional<SitePermissionEntity> optSitePermission =\n-        sitePermissionRepository.findByUserIdAndSiteId(userId, participant.getSiteId());\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n+    if (!optUserRegAdminEntity.isPresent()) {\n+      throw new ErrorCodeException(ErrorCode.USER_NOT_FOUND);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNjQ4Ng=="}, "originalCommit": {"oid": "cd5b12458c4d5ac47d081afaf44282fbf3cb1150"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDk3NDQ0OnYy", "diffSide": "RIGHT", "path": "participant-manager-datastore/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SiteControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjoxNDo1OFrOHhQAaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo0MjozMlrOHhZciw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNzMwNA==", "bodyText": "test cases for Super Admin == true. Also test cases for USER_NOT_FOUND exception", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1339#discussion_r504627304", "createdAt": "2020-10-14T12:14:58Z", "author": {"login": "saminguyen"}, "path": "participant-manager-datastore/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SiteControllerTest.java", "diffHunk": "@@ -317,6 +317,8 @@ public void shouldReturnEmailExistForAddNewParticipant() throws Exception {\n   @Test\n   public void shouldReturnAccessDeniedForAddNewParticipant() throws Exception {\n     // Step 1: set manage site permission to view only\n+    userRegAdminEntity.setSuperAdmin(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5b12458c4d5ac47d081afaf44282fbf3cb1150"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4MTk2Mw==", "bodyText": "Superadmin will be having all the apps, studies and site level permissions, so access denied error is not applicable for super admin. I have written test case for USER_NOT_FOUND exception.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1339#discussion_r504781963", "createdAt": "2020-10-14T15:42:32Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-datastore/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SiteControllerTest.java", "diffHunk": "@@ -317,6 +317,8 @@ public void shouldReturnEmailExistForAddNewParticipant() throws Exception {\n   @Test\n   public void shouldReturnAccessDeniedForAddNewParticipant() throws Exception {\n     // Step 1: set manage site permission to view only\n+    userRegAdminEntity.setSuperAdmin(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNzMwNA=="}, "originalCommit": {"oid": "cd5b12458c4d5ac47d081afaf44282fbf3cb1150"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mjc4NDM3OnYy", "diffSide": "RIGHT", "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOToxODowNlrOHhhh7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoyMDoyNFrOHh6qWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkxNDQxNA==", "bodyText": "nit: Can we make this a common helper method for all Service Impl classes? Other Services like Study, App, etc are also doing the same check. No need to fix this in this CL, just a code cleanup suggestion", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1339#discussion_r504914414", "createdAt": "2020-10-14T19:18:06Z", "author": {"login": "saminguyen"}, "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "diffHunk": "@@ -320,6 +317,14 @@ private ErrorCode validationForAddNewParticipant(\n     return null;\n   }\n \n+  private Optional<UserRegAdminEntity> validateUserId(String userId) {\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n+    if (!optUserRegAdminEntity.isPresent()) {\n+      throw new ErrorCodeException(ErrorCode.USER_NOT_FOUND);\n+    }\n+    return optUserRegAdminEntity;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebb7f0e949054dd6c24e4ef038822eeeaeee6ff9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMyNjE2OQ==", "bodyText": "Thanks for the suggestion, we will do it in follow up PR", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1339#discussion_r505326169", "createdAt": "2020-10-15T08:20:24Z", "author": {"login": "monica-BTC"}, "path": "participant-manager-datastore/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "diffHunk": "@@ -320,6 +317,14 @@ private ErrorCode validationForAddNewParticipant(\n     return null;\n   }\n \n+  private Optional<UserRegAdminEntity> validateUserId(String userId) {\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n+    if (!optUserRegAdminEntity.isPresent()) {\n+      throw new ErrorCodeException(ErrorCode.USER_NOT_FOUND);\n+    }\n+    return optUserRegAdminEntity;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkxNDQxNA=="}, "originalCommit": {"oid": "ebb7f0e949054dd6c24e4ef038822eeeaeee6ff9"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1754, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}