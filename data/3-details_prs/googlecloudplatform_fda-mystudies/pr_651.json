{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNTU1Nzkx", "number": 651, "title": "OAuth Scim Service - /consent endpoint implementation with integration tests", "bodyText": "/consent endpoint implementation with integration tests\nAdded @transaction annotation to methods in service classes\nRemoved duplicate dependency for commons-lang3\nImplemented scheduler task to remove expired temp_reg_id's\nAdded activation redirect URL's with integration tests", "createdAt": "2020-07-19T13:09:24Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651", "merged": true, "mergeCommit": {"oid": "462f08a4a703f6adb46e6b716c6790a3f89d68d6"}, "closed": true, "closedAt": "2020-08-14T15:01:42Z", "author": {"login": "dhanyak-btc"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2cu55AH2gAyNDUyNTU1NzkxOjkyOTMzOTA5OWFjYTlhYzg2YzAzY2RmYjI1MjFlMGIwM2QyZGEwY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-1wOnAFqTQ2NzYzNjk5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "929339099aca9ac86c03cdfb2521e0b03d2da0ce", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/929339099aca9ac86c03cdfb2521e0b03d2da0ce", "committedDate": "2020-07-19T13:06:34Z", "message": "/consent endpoint implementation with integration tests\n\n1. /consent endpoint implementation with integration tests\n2. Added @Transaction annotation to methods in service classes\n3. Removed duplicate dependency for commons-lang3\n4. Implemented scheduler task to remove expired temp_reg_id's"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a8e8a60e7c8a85817e4641aa10acbd9e5d193152", "committedDate": "2020-07-21T06:08:47Z", "message": "added activation redirect url with integration tests\n\nadded activation redirect url with integration tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDE4NDQx", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-455018441", "createdAt": "2020-07-24T16:19:40Z", "commit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjoxOTo0MVrOG21o_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo1NzowNlrOG223KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE1NTEzNA==", "bodyText": "is this to be replaced with login URl?\nif yes, please add appropriate TODO", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460155134", "createdAt": "2020-07-24T16:19:41Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginController.java", "diffHunk": "@@ -239,7 +256,16 @@ private String redirectToLoginOrSigninPage(\n     // tempRegId for auto signin after signup\n     if (StringUtils.isNotEmpty(tempRegId)) {\n       Optional<UserEntity> optUser = userService.findUserByTempRegId(tempRegId);\n-      return optUser.isPresent() ? \"signin\" : LOGIN;\n+      if (optUser.isPresent()) {\n+        UserEntity user = optUser.get();\n+        logger.exit(\"tempRegId is valid, return to auto signin page\");\n+        addCookie(response, USER_ID, user.getUserId());\n+        return \"signin\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE1Nzg1MQ==", "bodyText": "should be moved to the orgID PR, does not belong here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460157851", "createdAt": "2020-07-24T16:24:57Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -71,8 +71,6 @@\n \n   private static final String APP_ID_VALUE = \"MyStudies\";\n \n-  private static final String ORG_ID_VALUE = \"FDA\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE1OTA5Mw==", "bodyText": "please move the numerical values to the top of the class and make into constant", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460159093", "createdAt": "2020-07-24T16:27:22Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/task/RemoveExpiredTempRegIdScheduledTask.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.task;\n+\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.UserService;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.scheduling.annotation.Scheduled;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class RemoveExpiredTempRegIdScheduledTask {\n+\n+  private XLogger logger =\n+      XLoggerFactory.getXLogger(RemoveExpiredTempRegIdScheduledTask.class.getName());\n+\n+  @Autowired private UserService userService;\n+\n+  // 30min fixed delay and 10s initial delay\n+  @Scheduled(fixedDelay = 1800000, initialDelay = 10000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2MjU4NQ==", "bodyText": "please rename to removeTempRegIDForUser", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460162585", "createdAt": "2020-07-24T16:34:12Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/repository/UserRepository.java", "diffHunk": "@@ -25,4 +29,14 @@\n   public Optional<UserEntity> findByUserId(String userId);\n \n   public Optional<UserEntity> findByTempRegId(String tempRegId);\n+\n+  @Transactional\n+  @Modifying\n+  @Query(\"update UserEntity u set u.tempRegId=null where u.userId=:userId\")\n+  public void resetTempRegId(@Param(\"userId\") String userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2MjgxMA==", "bodyText": "please rename to removeTempRegIdBeforeTime or other descriptive name", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460162810", "createdAt": "2020-07-24T16:34:34Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/repository/UserRepository.java", "diffHunk": "@@ -25,4 +29,14 @@\n   public Optional<UserEntity> findByUserId(String userId);\n \n   public Optional<UserEntity> findByTempRegId(String tempRegId);\n+\n+  @Transactional\n+  @Modifying\n+  @Query(\"update UserEntity u set u.tempRegId=null where u.userId=:userId\")\n+  public void resetTempRegId(@Param(\"userId\") String userId);\n+\n+  @Transactional\n+  @Modifying\n+  @Query(\"update UserEntity u set u.tempRegId=null where u.created < :timestamp\")\n+  public void updateTempRegId(@Param(\"timestamp\") Timestamp timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NTU3MQ==", "bodyText": "do you still need these when you are just deleting the cookie?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460165571", "createdAt": "2020-07-24T16:39:40Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginController.java", "diffHunk": "@@ -285,4 +311,13 @@ public void addCookie(HttpServletResponse response, String cookieName, String co\n     cookie.setPath(\"/\");\n     response.addCookie(cookie);\n   }\n+\n+  public void deleteCookie(HttpServletResponse response, String cookieName) {\n+    Cookie cookie = new Cookie(cookieName, null);\n+    cookie.setMaxAge(0);\n+    cookie.setSecure(appConfig.isSecureCookie());\n+    cookie.setHttpOnly(true);\n+    cookie.setPath(\"/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2Nzk3MA==", "bodyText": "do we need to add a common prefix to create a more identifiable cookieName?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460167970", "createdAt": "2020-07-24T16:43:54Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginController.java", "diffHunk": "@@ -285,4 +311,13 @@ public void addCookie(HttpServletResponse response, String cookieName, String co\n     cookie.setPath(\"/\");\n     response.addCookie(cookie);\n   }\n+\n+  public void deleteCookie(HttpServletResponse response, String cookieName) {\n+    Cookie cookie = new Cookie(cookieName, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2OTg1Nw==", "bodyText": "This code is getting duplicated, please move to one place.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460169857", "createdAt": "2020-07-24T16:47:22Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/ConsentController.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getTextValue;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CONSENT_CHALLENGE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.DEVICE_PLATFORM;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_TO;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SKIP;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.AppPropertyConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.RedirectConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.util.LinkedMultiValueMap;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CookieValue;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.util.WebUtils;\n+\n+@Controller\n+public class ConsentController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(UserController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @Autowired private RedirectConfig redirectConfig;\n+\n+  @Autowired private AppPropertyConfig appConfig;\n+\n+  @GetMapping(value = \"/consent\")\n+  public String authorize(\n+      @RequestParam(required = false, name = CONSENT_CHALLENGE) String consentChallenge,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    if (StringUtils.isNotBlank(consentChallenge)) {\n+      addCookie(response, CONSENT_CHALLENGE, consentChallenge);\n+      // show or skip consent page\n+      MultiValueMap<String, String> paramMap = new LinkedMultiValueMap<>();\n+      paramMap.add(CONSENT_CHALLENGE, consentChallenge);\n+      ResponseEntity<JsonNode> consentResponse = oauthService.requestConsent(paramMap);\n+      if (consentResponse.getStatusCode().is2xxSuccessful()) {\n+        JsonNode responseBody = consentResponse.getBody();\n+        return skipConsent(responseBody)\n+            ? redirectToCallbackUrl(request, true, response)\n+            : \"consent\";\n+      }\n+    }\n+\n+    return redirectToError(request, response);\n+  }\n+\n+  private boolean skipConsent(JsonNode responseBody) {\n+    return responseBody.has(SKIP) && responseBody.get(SKIP).booleanValue();\n+  }\n+\n+  private String redirectToCallbackUrl(\n+      HttpServletRequest request, boolean skipConsent, HttpServletResponse response) {\n+    String userId = WebUtils.getCookie(request, USER_ID).getValue();\n+    String devicePlatform = WebUtils.getCookie(request, DEVICE_PLATFORM).getValue();\n+    String callbackUrl = redirectConfig.getCallbackUrl(devicePlatform);\n+\n+    String redirectUrl =\n+        String.format(\"%s?skip_consent=%b&userId=%s\", callbackUrl, skipConsent, userId);\n+\n+    logger.exit(String.format(\"redirect to %s from /consent\", callbackUrl));\n+    return redirect(response, redirectUrl);\n+  }\n+\n+  private String redirect(HttpServletResponse response, String redirectUrl) {\n+    response.setHeader(\"Location\", redirectUrl);\n+    response.setStatus(HttpStatus.FOUND.value());\n+    return \"redirect:\" + redirectUrl;\n+  }\n+\n+  @PostMapping(value = \"/consent\")\n+  public String authenticate(\n+      @CookieValue(name = CONSENT_CHALLENGE) String consentChallenge,\n+      @CookieValue(name = USER_ID) String userId,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    MultiValueMap<String, String> paramMap = new LinkedMultiValueMap<>();\n+    paramMap.add(CONSENT_CHALLENGE, consentChallenge);\n+    ResponseEntity<JsonNode> consentResponse = oauthService.consentAccept(paramMap);\n+\n+    if (consentResponse.getStatusCode().is2xxSuccessful()) {\n+      String redirectUrl = getTextValue(consentResponse.getBody(), REDIRECT_TO);\n+      return redirect(response, redirectUrl);\n+    }\n+\n+    return redirectToError(request, response);\n+  }\n+\n+  private String redirectToError(HttpServletRequest request, HttpServletResponse response) {\n+    String devicePlatform = WebUtils.getCookie(request, DEVICE_PLATFORM).getValue();\n+    String redirectUrl = redirectConfig.getErrorUrl(devicePlatform);\n+    response.setHeader(\"Location\", redirectUrl);\n+    response.setStatus(HttpStatus.FOUND.value());\n+    return \"redirect:\" + redirectUrl;\n+  }\n+\n+  public void addCookie(HttpServletResponse response, String cookieName, String cookieValue) {\n+    Cookie cookie = new Cookie(cookieName, cookieValue);\n+    cookie.setMaxAge(600);\n+    cookie.setSecure(appConfig.isSecureCookie());\n+    cookie.setHttpOnly(true);\n+    cookie.setPath(\"/\");\n+    response.addCookie(cookie);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3MDUyOA==", "bodyText": "nit: change to early exit instead.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460170528", "createdAt": "2020-07-24T16:48:40Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/ConsentController.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getTextValue;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CONSENT_CHALLENGE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.DEVICE_PLATFORM;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_TO;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SKIP;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.AppPropertyConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.RedirectConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.util.LinkedMultiValueMap;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CookieValue;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.util.WebUtils;\n+\n+@Controller\n+public class ConsentController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(UserController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @Autowired private RedirectConfig redirectConfig;\n+\n+  @Autowired private AppPropertyConfig appConfig;\n+\n+  @GetMapping(value = \"/consent\")\n+  public String authorize(\n+      @RequestParam(required = false, name = CONSENT_CHALLENGE) String consentChallenge,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    if (StringUtils.isNotBlank(consentChallenge)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3MDk0OA==", "bodyText": "is \"consent\" another yet to be added URL? if yes, then please mark it in the code accordingly.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460170948", "createdAt": "2020-07-24T16:49:23Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/ConsentController.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getTextValue;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CONSENT_CHALLENGE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.DEVICE_PLATFORM;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_TO;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SKIP;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.AppPropertyConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.RedirectConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.util.LinkedMultiValueMap;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CookieValue;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.util.WebUtils;\n+\n+@Controller\n+public class ConsentController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(UserController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @Autowired private RedirectConfig redirectConfig;\n+\n+  @Autowired private AppPropertyConfig appConfig;\n+\n+  @GetMapping(value = \"/consent\")\n+  public String authorize(\n+      @RequestParam(required = false, name = CONSENT_CHALLENGE) String consentChallenge,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    if (StringUtils.isNotBlank(consentChallenge)) {\n+      addCookie(response, CONSENT_CHALLENGE, consentChallenge);\n+      // show or skip consent page\n+      MultiValueMap<String, String> paramMap = new LinkedMultiValueMap<>();\n+      paramMap.add(CONSENT_CHALLENGE, consentChallenge);\n+      ResponseEntity<JsonNode> consentResponse = oauthService.requestConsent(paramMap);\n+      if (consentResponse.getStatusCode().is2xxSuccessful()) {\n+        JsonNode responseBody = consentResponse.getBody();\n+        return skipConsent(responseBody)\n+            ? redirectToCallbackUrl(request, true, response)\n+            : \"consent\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3MjQ0OA==", "bodyText": "why do you need \"redirect:\" prefix?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460172448", "createdAt": "2020-07-24T16:52:02Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/ConsentController.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getTextValue;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.CONSENT_CHALLENGE;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.DEVICE_PLATFORM;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.REDIRECT_TO;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.SKIP;\n+import static com.google.cloud.healthcare.fdamystudies.oauthscim.common.AuthScimConstants.USER_ID;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.AppPropertyConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.config.RedirectConfig;\n+import com.google.cloud.healthcare.fdamystudies.oauthscim.service.OAuthService;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.util.LinkedMultiValueMap;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.CookieValue;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.util.WebUtils;\n+\n+@Controller\n+public class ConsentController {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(UserController.class.getName());\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @Autowired private RedirectConfig redirectConfig;\n+\n+  @Autowired private AppPropertyConfig appConfig;\n+\n+  @GetMapping(value = \"/consent\")\n+  public String authorize(\n+      @RequestParam(required = false, name = CONSENT_CHALLENGE) String consentChallenge,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    if (StringUtils.isNotBlank(consentChallenge)) {\n+      addCookie(response, CONSENT_CHALLENGE, consentChallenge);\n+      // show or skip consent page\n+      MultiValueMap<String, String> paramMap = new LinkedMultiValueMap<>();\n+      paramMap.add(CONSENT_CHALLENGE, consentChallenge);\n+      ResponseEntity<JsonNode> consentResponse = oauthService.requestConsent(paramMap);\n+      if (consentResponse.getStatusCode().is2xxSuccessful()) {\n+        JsonNode responseBody = consentResponse.getBody();\n+        return skipConsent(responseBody)\n+            ? redirectToCallbackUrl(request, true, response)\n+            : \"consent\";\n+      }\n+    }\n+\n+    return redirectToError(request, response);\n+  }\n+\n+  private boolean skipConsent(JsonNode responseBody) {\n+    return responseBody.has(SKIP) && responseBody.get(SKIP).booleanValue();\n+  }\n+\n+  private String redirectToCallbackUrl(\n+      HttpServletRequest request, boolean skipConsent, HttpServletResponse response) {\n+    String userId = WebUtils.getCookie(request, USER_ID).getValue();\n+    String devicePlatform = WebUtils.getCookie(request, DEVICE_PLATFORM).getValue();\n+    String callbackUrl = redirectConfig.getCallbackUrl(devicePlatform);\n+\n+    String redirectUrl =\n+        String.format(\"%s?skip_consent=%b&userId=%s\", callbackUrl, skipConsent, userId);\n+\n+    logger.exit(String.format(\"redirect to %s from /consent\", callbackUrl));\n+    return redirect(response, redirectUrl);\n+  }\n+\n+  private String redirect(HttpServletResponse response, String redirectUrl) {\n+    response.setHeader(\"Location\", redirectUrl);\n+    response.setStatus(HttpStatus.FOUND.value());\n+    return \"redirect:\" + redirectUrl;\n+  }\n+\n+  @PostMapping(value = \"/consent\")\n+  public String authenticate(\n+      @CookieValue(name = CONSENT_CHALLENGE) String consentChallenge,\n+      @CookieValue(name = USER_ID) String userId,\n+      HttpServletRequest request,\n+      HttpServletResponse response,\n+      Model model) {\n+    logger.entry(String.format(\"%s request\", request.getRequestURI()));\n+\n+    MultiValueMap<String, String> paramMap = new LinkedMultiValueMap<>();\n+    paramMap.add(CONSENT_CHALLENGE, consentChallenge);\n+    ResponseEntity<JsonNode> consentResponse = oauthService.consentAccept(paramMap);\n+\n+    if (consentResponse.getStatusCode().is2xxSuccessful()) {\n+      String redirectUrl = getTextValue(consentResponse.getBody(), REDIRECT_TO);\n+      return redirect(response, redirectUrl);\n+    }\n+\n+    return redirectToError(request, response);\n+  }\n+\n+  private String redirectToError(HttpServletRequest request, HttpServletResponse response) {\n+    String devicePlatform = WebUtils.getCookie(request, DEVICE_PLATFORM).getValue();\n+    String redirectUrl = redirectConfig.getErrorUrl(devicePlatform);\n+    response.setHeader(\"Location\", redirectUrl);\n+    response.setStatus(HttpStatus.FOUND.value());\n+    return \"redirect:\" + redirectUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3NDAyMA==", "bodyText": "There are a few new app params being added via this PR, this expiry time, app redirection URls etc.\nPlease file a bug and list these values and others (if there are more) to flag that they need to be accounted for in the documentation and deployment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460174020", "createdAt": "2020-07-24T16:54:56Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppPropertyConfig.java", "diffHunk": "@@ -56,4 +56,7 @@\n \n   @Value(\"${cookie.secure:true}\")\n   private boolean secureCookie;\n+\n+  @Value(\"${tempregid.expiry.minutes:30}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3NTE0NQ==", "bodyText": "Please add a db failure test to the controller methods that calls these, and verify that the all actions are getting rolled back properly and correct error response is returned.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r460175145", "createdAt": "2020-07-24T16:57:06Z", "author": {"login": "zohrehj"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AuditEventServiceImpl.java", "diffHunk": "@@ -134,7 +137,8 @@ private AuditLogEventResponse saveAuditLogEvent(JsonNode requestBody, int httpSt\n     return new AuditLogEventResponse(HttpStatus.ACCEPTED, \"event saved for task scheduler\");\n   }\n \n-  private void updateAuditLogEventStatus(\n+  @Transactional\n+  public void updateAuditLogEventStatus(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e8a60e7c8a85817e4641aa10acbd9e5d193152"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3dfa67d7a063233c799032c9a1156aafd268d2c", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c3dfa67d7a063233c799032c9a1156aafd268d2c", "committedDate": "2020-07-28T07:19:33Z", "message": "Fixed PR 651 review comments\n\nFixed PR 651 review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjQ2MTY3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-461646167", "createdAt": "2020-08-05T13:09:01Z", "commit": {"oid": "c3dfa67d7a063233c799032c9a1156aafd268d2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "137c8437b23831099723e7a531e5134c231525f3", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/137c8437b23831099723e7a531e5134c231525f3", "committedDate": "2020-08-07T08:31:34Z", "message": "Fixed review comment: renameed 'signin' to 'autoLogin'\n\nFixed review comment: renameed 'signin' to 'autoLogin'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzIxNDcy", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-463321472", "createdAt": "2020-08-07T13:41:25Z", "commit": {"oid": "137c8437b23831099723e7a531e5134c231525f3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMzo0MToyNVrOG9aUmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMzo0MToyNVrOG9aUmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA0NzU3Nw==", "bodyText": "would be nice to also rename this and  also the filename for consistency.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#discussion_r467047577", "createdAt": "2020-08-07T13:41:25Z", "author": {"login": "zohrehj"}, "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppConfig.java", "diffHunk": "@@ -25,7 +25,7 @@ public void addViewControllers(ViewControllerRegistry registry) {\n         .addViewController(String.format(\"%s/login\", context.getContextPath()))\n         .setViewName(\"login\");\n     registry\n-        .addViewController(String.format(\"%s/signin\", context.getContextPath()))\n+        .addViewController(String.format(\"%s/autoLogin\", context.getContextPath()))\n         .setViewName(\"signin\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "137c8437b23831099723e7a531e5134c231525f3"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8cc4d67e508ee2e313a8347e410e7be541965f", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cf8cc4d67e508ee2e313a8347e410e7be541965f", "committedDate": "2020-08-07T14:16:53Z", "message": "Fixed Review Comment: Replaced \"signin\" with \"autoLogin\" for consistency\n\nFixed Review Comment: Replaced \"signin\" with \"autoLogin\" for consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDg3NTM2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-463487536", "createdAt": "2020-08-07T17:36:04Z", "commit": {"oid": "cf8cc4d67e508ee2e313a8347e410e7be541965f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a4defd4ceed97cca2ee3910161c3f69fc2d9906", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7a4defd4ceed97cca2ee3910161c3f69fc2d9906", "committedDate": "2020-08-11T17:35:53Z", "message": "Fixed Review Comment\n\nFixed Review Comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDgxOTQw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-465481940", "createdAt": "2020-08-11T22:54:17Z", "commit": {"oid": "7a4defd4ceed97cca2ee3910161c3f69fc2d9906"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f570f69d19b692d8698eb68cfbada7c28b43277", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3f570f69d19b692d8698eb68cfbada7c28b43277", "committedDate": "2020-08-12T11:42:14Z", "message": "Fixed review comment - setting userId to subject field and removed remember and remember_for\n\nFixed review comment - setting userId to subject field and removed remember and remember_for"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTMxNTI1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-467531525", "createdAt": "2020-08-14T12:22:29Z", "commit": {"oid": "3f570f69d19b692d8698eb68cfbada7c28b43277"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85ff40b3e201ca87b5befc51755844e797b5d008", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/85ff40b3e201ca87b5befc51755844e797b5d008", "committedDate": "2020-08-14T14:13:26Z", "message": "Merge branch 'develop' into oauth_scim_consent_controller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671daa872fc8009d8afe76e41d9466ce4f4043cc", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/671daa872fc8009d8afe76e41d9466ce4f4043cc", "committedDate": "2020-08-14T14:20:56Z", "message": "Fixed test failures\n\nFixed test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66f2fc14509c184252a408d2dd354533c602daae", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/66f2fc14509c184252a408d2dd354533c602daae", "committedDate": "2020-08-14T14:32:13Z", "message": "Merge branch 'develop' into oauth_scim_consent_controller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a7c9eedbe3af618f18181f56b86ae49026d552", "author": {"user": {"login": "dhanyak-btc", "name": "Dhanya Kumar KV"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a2a7c9eedbe3af618f18181f56b86ae49026d552", "committedDate": "2020-08-14T14:38:35Z", "message": "fixed compilation issues\n\nfixed compilation issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NjM2OTk0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/651#pullrequestreview-467636994", "createdAt": "2020-08-14T14:47:02Z", "commit": {"oid": "a2a7c9eedbe3af618f18181f56b86ae49026d552"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 884, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}