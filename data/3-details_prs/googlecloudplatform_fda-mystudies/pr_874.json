{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NDU4NjM1", "number": 874, "title": "Response Server: Added integration test cases for the ProcessActivityResponseController class ", "bodyText": "Response Server: Added integration test cases for the class ProcessActivityResponseController.", "createdAt": "2020-09-04T08:47:00Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874", "merged": true, "mergeCommit": {"oid": "084cd561f039686f5b55303c5926d6eff2176ba2"}, "closed": true, "closedAt": "2020-09-23T20:01:31Z", "author": {"login": "madhurya-btc"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFhEyOgH2gAyNDc5NDU4NjM1OmY1YTgyOTgzZmRhNTMwYjI4Yzc0N2Q0NzgwMDQwYzViZWZlZDQ0YTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLyOaiAFqTQ5NTAwNDUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5a82983fda530b28c747d4780040c5befed44a6", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f5a82983fda530b28c747d4780040c5befed44a6", "committedDate": "2020-09-04T08:38:57Z", "message": "process activity response controller integration test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDc0Mzk4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#pullrequestreview-482474398", "createdAt": "2020-09-04T08:47:43Z", "commit": {"oid": "f5a82983fda530b28c747d4780040c5befed44a6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwODo0Nzo0M1rOHNFQKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwODo0Nzo0NFrOHNFQLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ3OTU5NA==", "bodyText": "[response-server Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#discussion_r483479594", "createdAt": "2020-09-04T08:47:43Z", "author": {"login": "github-actions"}, "path": "response-server-module/response-server-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.helper;\n+\n+import com.google.cloud.healthcare.fdamystudies.common.IdGenerator;\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantBo;\n+import com.google.cloud.healthcare.fdamystudies.repository.ParticipantBoRepository;\n+import lombok.Getter;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+public class TestDataHelper {\n+\n+  @Autowired private ParticipantBoRepository participantBoRepository;\n+\n+  public ParticipantBo saveParticipant() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5a82983fda530b28c747d4780040c5befed44a6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ3OTU5Nw==", "bodyText": "[response-server Checks] reported by reviewdog \ud83d\udc36\nLocal variable name 'StoredResponseBean' must match pattern '^a-z?$'.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#discussion_r483479597", "createdAt": "2020-09-04T08:47:44Z", "author": {"login": "github-actions"}, "path": "response-server-module/response-server-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/ProcessActivityResponseControllerTest.java", "diffHunk": "@@ -0,0 +1,383 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getObjectMapper;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.readJsonFile;\n+import static com.google.cloud.healthcare.fdamystudies.utils.AppConstants.PARTICIPANT_ID_KEY;\n+import static com.google.cloud.healthcare.fdamystudies.utils.AppConstants.PARTICIPANT_TOKEN_IDENTIFIER_KEY;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.ACTIVITY_COLLECTION_NAME_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.ACTIVITY_ID_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.PARTICIPANT_ID_NOT_EXISTS_MESSAGE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.QUESTION_KEY_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.SITE_ID_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.STUDY_COLLECTION_NAME_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.STUDY_ID_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.SUCCESS;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.USER_ID_HEADER;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.VALID_USER_ID;\n+import static com.google.cloud.healthcare.fdamystudies.utils.ErrorCode.EC_701;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import com.google.cloud.healthcare.fdamystudies.bean.ActivityResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.bean.StoredResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.common.ApiEndpoint;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.common.IdGenerator;\n+import com.google.cloud.healthcare.fdamystudies.common.JsonUtils;\n+import com.google.cloud.healthcare.fdamystudies.dao.CloudFirestoreResponsesDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.helper.TestDataHelper;\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantActivitiesBo;\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantBo;\n+import com.google.cloud.healthcare.fdamystudies.repository.ParticipantActivitiesRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.ParticipantBoRepository;\n+import com.google.cloud.healthcare.fdamystudies.utils.TestUtils;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.skyscreamer.jsonassert.JSONAssert;\n+import org.skyscreamer.jsonassert.JSONCompareMode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_CLASS)\n+public class ProcessActivityResponseControllerTest extends BaseMockIT {\n+\n+  @Autowired private TestDataHelper testDataHelper;\n+\n+  @Autowired private ParticipantBoRepository participantBoRepository;\n+\n+  private ParticipantBo participantBo;\n+\n+  @MockBean private CloudFirestoreResponsesDaoImpl responsesDaoMock;\n+\n+  @Captor ArgumentCaptor<String> studyCollectionNameCaptor;\n+  @Captor ArgumentCaptor<String> studyIdCaptor;\n+  @Captor ArgumentCaptor<String> siteIdCaptor;\n+  @Captor ArgumentCaptor<String> participantIdCaptor;\n+  @Captor ArgumentCaptor<String> activityIdCaptor;\n+  @Captor ArgumentCaptor<String> questionKeyCaptor;\n+  @Captor ArgumentCaptor<String> activityCollectionNameCaptor;\n+  @Captor ArgumentCaptor<Map<String, Object>> dataToStoreCaptor;\n+\n+  @Autowired private ParticipantActivitiesRepository participantActivitiesRepository;\n+\n+  @BeforeEach\n+  public void setUp() {\n+    participantBo = testDataHelper.saveParticipant();\n+  }\n+\n+  @Test\n+  public void shouldSaveProcessActivityResponse() throws Exception {\n+    Map<String, Object> dataToStore = new HashMap<>();\n+    dataToStore.put(PARTICIPANT_ID_KEY, participantBo.getParticipantIdentifier());\n+\n+    // Step-1 saveActivityResponseData\n+    doNothing()\n+        .when(responsesDaoMock)\n+        .saveActivityResponseData(\n+            STUDY_ID_VALUE,\n+            STUDY_COLLECTION_NAME_VALUE,\n+            ACTIVITY_COLLECTION_NAME_VALUE,\n+            dataToStore);\n+\n+    // Step-2 call API to details to save participant activities\n+    ActivityResponseBean activityResponseBean = setActivityResponseBean();\n+    HttpHeaders headers = TestUtils.newHeadersUser();\n+    mockMvc\n+        .perform(\n+            post(ApiEndpoint.PROCESS_ACTIVITY_RESPONSE.getPath())\n+                .contextPath(getContextPath())\n+                .content(JsonUtils.asJsonString(activityResponseBean))\n+                .headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.message\", is(SUCCESS)));\n+\n+    // Step-3: verify saved values\n+    List<ParticipantActivitiesBo> participantActivitiesList =\n+        participantActivitiesRepository.findByStudyIdAndParticipantId(\n+            STUDY_ID_VALUE, participantBo.getParticipantIdentifier());\n+\n+    assertNotNull(participantActivitiesList);\n+    assertEquals(1, participantActivitiesList.size());\n+\n+    verify(responsesDaoMock)\n+        .saveActivityResponseData(\n+            studyIdCaptor.capture(),\n+            studyCollectionNameCaptor.capture(),\n+            activityCollectionNameCaptor.capture(),\n+            dataToStoreCaptor.capture());\n+\n+    // Step-4: assert argument capture\n+\n+    assertEquals(STUDY_ID_VALUE, studyIdCaptor.getValue());\n+    assertEquals(STUDY_COLLECTION_NAME_VALUE, studyCollectionNameCaptor.getValue());\n+    assertEquals(ACTIVITY_COLLECTION_NAME_VALUE, activityCollectionNameCaptor.getValue());\n+    assertEquals(\n+        participantBo.getParticipantIdentifier(),\n+        dataToStoreCaptor.getValue().get(PARTICIPANT_ID_KEY));\n+  }\n+\n+  @Test\n+  public void shouldReturnBadRequestForEmptyInputsOfProccessActivityResponse() throws Exception {\n+    ActivityResponseBean activityResponseBean = new ActivityResponseBean();\n+    HttpHeaders headers = TestUtils.newHeadersUser();\n+    mockMvc\n+        .perform(\n+            post(ApiEndpoint.PROCESS_ACTIVITY_RESPONSE.getPath())\n+                .contextPath(getContextPath())\n+                .content(JsonUtils.asJsonString(activityResponseBean))\n+                .headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isBadRequest())\n+        .andExpect(jsonPath(\"$.userMessage\", is(EC_701.errorMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnBadRequestForInvalidParticipant() throws Exception {\n+    ActivityResponseBean activityResponseBean = setActivityResponseBean();\n+    activityResponseBean.setParticipantId(IdGenerator.id());\n+    HttpHeaders headers = TestUtils.newHeadersUser();\n+    mockMvc\n+        .perform(\n+            post(ApiEndpoint.PROCESS_ACTIVITY_RESPONSE.getPath())\n+                .contextPath(getContextPath())\n+                .content(JsonUtils.asJsonString(activityResponseBean))\n+                .headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isBadRequest())\n+        .andExpect(jsonPath(\"$.detailMessage\", is(PARTICIPANT_ID_NOT_EXISTS_MESSAGE)));\n+  }\n+\n+  @Test\n+  public void shouldGetActivityResponse() throws Exception {\n+    String inputJsonContent = readJsonFile(\"/get_activity_response_data_for_participant.json\");\n+    StoredResponseBean StoredResponseBean =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5a82983fda530b28c747d4780040c5befed44a6"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db997825b99d9b4a98dfd645e63af757a5e9c1ab", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/db997825b99d9b4a98dfd645e63af757a5e9c1ab", "committedDate": "2020-09-04T08:59:33Z", "message": "build issue fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3cc2070058ae8d8ddf56e9b07dcec8e5cd1d8d2", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d3cc2070058ae8d8ddf56e9b07dcec8e5cd1d8d2", "committedDate": "2020-09-04T09:03:27Z", "message": "Github action fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29e992542a8b494baedc358d47c0287bd0129b01", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/29e992542a8b494baedc358d47c0287bd0129b01", "committedDate": "2020-09-04T09:16:55Z", "message": "study metadata integration test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MjY1MTI5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#pullrequestreview-485265129", "createdAt": "2020-09-09T17:55:41Z", "commit": {"oid": "d3cc2070058ae8d8ddf56e9b07dcec8e5cd1d8d2"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo1NTo0MVrOHPTeDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo1NTo0MVrOHPTeDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTY3OA==", "bodyText": "remove, same as PROCESS_RESPONSE above!", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#discussion_r485809678", "createdAt": "2020-09-09T17:55:41Z", "author": {"login": "saminguyen"}, "path": "response-server-module/response-server-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/ApiEndpoint.java", "diffHunk": "@@ -31,7 +26,15 @@\n       \"http://localhost:8004/mystudies-response-server/participant/update-activity-state\"),\n \n   GET_ACTIVITY_STATE(\n-      \"http://localhost:8004/mystudies-response-server/participant/get-activity-state\");\n+      \"http://localhost:8004/mystudies-response-server/participant/get-activity-state\"),\n+\n+  PROCESS_ACTIVITY_RESPONSE(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cc2070058ae8d8ddf56e9b07dcec8e5cd1d8d2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3264505f4db5329788e8bd18d4568f93fb224b9d", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3264505f4db5329788e8bd18d4568f93fb224b9d", "committedDate": "2020-09-11T06:03:53Z", "message": "PR review comment fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ceef3cddadcedc728bcc8e8f8a77a59e77a8068", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1ceef3cddadcedc728bcc8e8f8a77a59e77a8068", "committedDate": "2020-09-11T06:04:27Z", "message": "Merge branch 'develop' into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355d34ac4939a45ca94de1f7ae4116e0084482a6", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/355d34ac4939a45ca94de1f7ae4116e0084482a6", "committedDate": "2020-09-11T06:09:49Z", "message": "no message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c7df54eae3a1af597b30fa8a97aaf5900dbe4a6", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2c7df54eae3a1af597b30fa8a97aaf5900dbe4a6", "committedDate": "2020-09-11T06:10:42Z", "message": "Merge branch 'response-server-process-activity-response-integration-test' of https://github.com/GoogleCloudPlatform/fda-mystudies into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99eba18cb8783a95b98210e634a38a38923d9d0c", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/99eba18cb8783a95b98210e634a38a38923d9d0c", "committedDate": "2020-09-11T06:13:57Z", "message": "Fixed build issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc29ab6838797793062924eeeaef6b5cea751e89", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bc29ab6838797793062924eeeaef6b5cea751e89", "committedDate": "2020-09-11T06:24:47Z", "message": "Merge branch 'response-server-process-activity-response-integration-test' of https://github.com/GoogleCloudPlatform/fda-mystudies into response-server-studymetadata-integration-test-cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b4bfc15c33b5b9489db4ab83f9bbd71a8a0c87", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c7b4bfc15c33b5b9489db4ab83f9bbd71a8a0c87", "committedDate": "2020-09-11T06:29:25Z", "message": "Fixed build issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49d4f160872775e97e0389656db7d93bfe054e84", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/49d4f160872775e97e0389656db7d93bfe054e84", "committedDate": "2020-09-11T06:31:45Z", "message": "Merge pull request #876 from GoogleCloudPlatform/response-server-studymetadata-integration-test-cases\n\nResponse Server: Added integration test cases for the StudyMetadataController class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00f8523efadc94ad93c90e05b35ccd5b16777493", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/00f8523efadc94ad93c90e05b35ccd5b16777493", "committedDate": "2020-09-11T13:16:55Z", "message": "Merge branch 'develop' into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6d0a2fcef817e22793ff17e276301ef351578b0", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c6d0a2fcef817e22793ff17e276301ef351578b0", "committedDate": "2020-09-14T13:49:30Z", "message": "Merge branch 'develop' into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MzA5OTIw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#pullrequestreview-488309920", "createdAt": "2020-09-15T04:15:16Z", "commit": {"oid": "c6d0a2fcef817e22793ff17e276301ef351578b0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7675b0e464916978e4a5ab81750258159d880e9d", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7675b0e464916978e4a5ab81750258159d880e9d", "committedDate": "2020-09-15T06:09:21Z", "message": "Merge branch 'develop' into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1260e3d55782b65960bfca0327e317dc76a826d6", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1260e3d55782b65960bfca0327e317dc76a826d6", "committedDate": "2020-09-15T08:11:42Z", "message": "build issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b76090f667acd02d98a79c161aa49b8cfdae22d", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8b76090f667acd02d98a79c161aa49b8cfdae22d", "committedDate": "2020-09-15T08:18:08Z", "message": "Revert \"build issue\"\n\nThis reverts commit 1260e3d55782b65960bfca0327e317dc76a826d6."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "149f289a18a58246b9af6bf4ed2ebdf1152f7430", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/149f289a18a58246b9af6bf4ed2ebdf1152f7430", "committedDate": "2020-09-15T12:20:19Z", "message": "issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f91ae718f0a58396989ccce6ec65b221a547bd9f", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f91ae718f0a58396989ccce6ec65b221a547bd9f", "committedDate": "2020-09-15T12:23:32Z", "message": "Revert \"issue\"\n\nThis reverts commit 149f289a18a58246b9af6bf4ed2ebdf1152f7430."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a609fa2fba54fc05e8541e14b4e701c96a41cc4", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3a609fa2fba54fc05e8541e14b4e701c96a41cc4", "committedDate": "2020-09-15T13:57:45Z", "message": "Build issue fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12551b15111c2e7d97174385a0d7a3c8e59a280b", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/12551b15111c2e7d97174385a0d7a3c8e59a280b", "committedDate": "2020-09-15T15:21:41Z", "message": "Method level context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38021bd5042ae92e5df8b6bb6d2d0b09dbaf0140", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/38021bd5042ae92e5df8b6bb6d2d0b09dbaf0140", "committedDate": "2020-09-15T15:29:39Z", "message": "Revert \"Method level context\"\n\nThis reverts commit 12551b15111c2e7d97174385a0d7a3c8e59a280b."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f44f51dc3d6909fde104363df01920f121eba654", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f44f51dc3d6909fde104363df01920f121eba654", "committedDate": "2020-09-18T09:48:49Z", "message": "Merge branch 'develop' into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42653c38c66f01b549bb20cee6d8196d003c92c5", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/42653c38c66f01b549bb20cee6d8196d003c92c5", "committedDate": "2020-09-18T10:09:35Z", "message": "Added @FixMethodOrder to check build failed issue\n\nAdded @FixMethodOrder to check build failed issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd50b2f4039d9d55682b7e00e679ddb79ebfdc21", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cd50b2f4039d9d55682b7e00e679ddb79ebfdc21", "committedDate": "2020-09-18T10:10:12Z", "message": "Merge branch 'response-server-process-activity-response-integration-test' of https://github.com/GoogleCloudPlatform/fda-mystudies into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21ba261ed183b84e79620eab037c63944fe82ee5", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/21ba261ed183b84e79620eab037c63944fe82ee5", "committedDate": "2020-09-18T10:14:31Z", "message": "Revert \"Added @FixMethodOrder to check build failed issue\"\n\nThis reverts commit 42653c38c66f01b549bb20cee6d8196d003c92c5."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26c3b447da37ecad0651c296db6113051be8aa06", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/26c3b447da37ecad0651c296db6113051be8aa06", "committedDate": "2020-09-23T08:50:39Z", "message": "Buils issue fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NDQwNTkx", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#pullrequestreview-494440591", "createdAt": "2020-09-23T08:51:57Z", "commit": {"oid": "26c3b447da37ecad0651c296db6113051be8aa06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODo1MTo1OFrOHWegDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODo1MTo1OFrOHWegDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMzMDQ0NQ==", "bodyText": "[response-server Checks] reported by reviewdog \ud83d\udc36\nLine is longer than 100 characters (found 106).", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#discussion_r493330445", "createdAt": "2020-09-23T08:51:58Z", "author": {"login": "github-actions"}, "path": "response-server-module/response-server-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/ProcessActivityResponseControllerTest.java", "diffHunk": "@@ -0,0 +1,396 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.getRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.client.WireMock.verify;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getObjectMapper;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.readJsonFile;\n+import static com.google.cloud.healthcare.fdamystudies.utils.AppConstants.PARTICIPANT_ID_KEY;\n+import static com.google.cloud.healthcare.fdamystudies.utils.AppConstants.PARTICIPANT_TOKEN_IDENTIFIER_KEY;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.ACTIVITY_COLLECTION_NAME_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.ACTIVITY_ID_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.PARTICIPANT_ID_NOT_EXISTS_MESSAGE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.QUESTION_KEY_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.SITE_ID_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.STUDY_COLLECTION_NAME_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.STUDY_ID_VALUE;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.SUCCESS;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.USER_ID_HEADER;\n+import static com.google.cloud.healthcare.fdamystudies.utils.Constants.VALID_USER_ID;\n+import static com.google.cloud.healthcare.fdamystudies.utils.ErrorCode.EC_701;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import com.google.cloud.healthcare.fdamystudies.bean.ActivityResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.bean.StoredResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.common.ApiEndpoint;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.common.IdGenerator;\n+import com.google.cloud.healthcare.fdamystudies.common.JsonUtils;\n+import com.google.cloud.healthcare.fdamystudies.dao.CloudFirestoreResponsesDaoImpl;\n+import com.google.cloud.healthcare.fdamystudies.helper.TestDataHelper;\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantActivitiesBo;\n+import com.google.cloud.healthcare.fdamystudies.model.ParticipantBo;\n+import com.google.cloud.healthcare.fdamystudies.repository.ParticipantActivitiesRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.ParticipantBoRepository;\n+import com.google.cloud.healthcare.fdamystudies.utils.TestUtils;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.skyscreamer.jsonassert.JSONAssert;\n+import org.skyscreamer.jsonassert.JSONCompareMode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_CLASS)\n+public class ProcessActivityResponseControllerTest extends BaseMockIT {\n+\n+  @Autowired private TestDataHelper testDataHelper;\n+\n+  @Autowired private ParticipantBoRepository participantBoRepository;\n+\n+  private ParticipantBo participantBo;\n+\n+  @MockBean private CloudFirestoreResponsesDaoImpl responsesDaoMock;\n+\n+  @Captor ArgumentCaptor<String> studyCollectionNameCaptor;\n+  @Captor ArgumentCaptor<String> studyIdCaptor;\n+  @Captor ArgumentCaptor<String> siteIdCaptor;\n+  @Captor ArgumentCaptor<String> participantIdCaptor;\n+  @Captor ArgumentCaptor<String> activityIdCaptor;\n+  @Captor ArgumentCaptor<String> questionKeyCaptor;\n+  @Captor ArgumentCaptor<String> activityCollectionNameCaptor;\n+  @Captor ArgumentCaptor<Map<String, Object>> dataToStoreCaptor;\n+\n+  @Autowired private ParticipantActivitiesRepository participantActivitiesRepository;\n+\n+  @BeforeEach\n+  public void setUp() {\n+    participantBo = testDataHelper.saveParticipant();\n+  }\n+\n+  @Test\n+  public void shouldSaveProcessActivityResponse() throws Exception {\n+    Map<String, Object> dataToStore = new HashMap<>();\n+    dataToStore.put(PARTICIPANT_ID_KEY, participantBo.getParticipantIdentifier());\n+\n+    // Step-1 saveActivityResponseData\n+    doNothing()\n+        .when(responsesDaoMock)\n+        .saveActivityResponseData(\n+            STUDY_ID_VALUE,\n+            STUDY_COLLECTION_NAME_VALUE,\n+            ACTIVITY_COLLECTION_NAME_VALUE,\n+            dataToStore);\n+\n+    // Step-2 call API to details to save participant activities\n+    ActivityResponseBean activityResponseBean = setActivityResponseBean();\n+    HttpHeaders headers = TestUtils.newHeadersUser();\n+    mockMvc\n+        .perform(\n+            post(ApiEndpoint.PROCESS_ACTIVITY_RESPONSE.getPath())\n+                .contextPath(getContextPath())\n+                .content(JsonUtils.asJsonString(activityResponseBean))\n+                .headers(headers))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.message\", is(SUCCESS)));\n+\n+    // Step-3: verify saved values\n+    List<ParticipantActivitiesBo> participantActivitiesList =\n+        participantActivitiesRepository.findByStudyIdAndParticipantId(\n+            STUDY_ID_VALUE, participantBo.getParticipantIdentifier());\n+\n+    assertNotNull(participantActivitiesList);\n+    assertEquals(1, participantActivitiesList.size());\n+\n+    verify(responsesDaoMock)\n+        .saveActivityResponseData(\n+            studyIdCaptor.capture(),\n+            studyCollectionNameCaptor.capture(),\n+            activityCollectionNameCaptor.capture(),\n+            dataToStoreCaptor.capture());\n+\n+    verify(\n+        1,\n+        getRequestedFor(\n+            urlEqualTo(\n+                \"/myStudiesEnrollmentMgmt/participantInfo?studyId=ASignature01&participantId=\"\n+                    + participantBo.getParticipantIdentifier())));\n+\n+    verify(\n+        1,\n+        getRequestedFor(\n+            urlEqualTo(\n+                \"/StudyMetaData/activity?studyId=ASignature01&activityId=Activity&activityVersion=1.0\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26c3b447da37ecad0651c296db6113051be8aa06"}, "originalPosition": 151}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "385b3dab6ea29025c8aa67bfaed2400a28101ef4", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/385b3dab6ea29025c8aa67bfaed2400a28101ef4", "committedDate": "2020-09-23T09:03:59Z", "message": "github action comment fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38ecbd401e8626da620a75f3e1c8f67fb7860236", "author": {"user": {"login": "madhurya-btc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/38ecbd401e8626da620a75f3e1c8f67fb7860236", "committedDate": "2020-09-23T09:05:10Z", "message": "Merge branch 'develop' into response-server-process-activity-response-integration-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDA0NTEz", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/874#pullrequestreview-495004513", "createdAt": "2020-09-23T20:01:24Z", "commit": {"oid": "38ecbd401e8626da620a75f3e1c8f67fb7860236"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 423, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}