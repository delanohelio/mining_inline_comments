{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzM1ODM2", "number": 1380, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDowMzozMVrOEtgDFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDowMzozMVrOEtgDFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTQ2NDU1OnYy", "diffSide": "RIGHT", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/IdGenerator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDowMzozMVrOHhUspg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowMDowMlrOHhaOiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNDE2Ng==", "bodyText": "how many characters is this random string? we should try to fix the length of the iD to the 64 character (or whatever that length was) we defined at the DB level.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1380#discussion_r504704166", "createdAt": "2020-10-14T14:03:31Z", "author": {"login": "zohrehj"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/IdGenerator.java", "diffHunk": "@@ -8,27 +8,27 @@\n \n package com.google.cloud.healthcare.fdamystudies.common;\n \n-import java.security.SecureRandom;\n import java.util.UUID;\n-import org.apache.commons.codec.digest.DigestUtils;\n+import org.apache.commons.lang3.RandomStringUtils;\n \n public final class IdGenerator {\n \n-  private static SecureRandom secureRandom = new SecureRandom();\n-\n   private IdGenerator() {}\n \n-  /**\n-   * Generates a random Id using UUID and current time (milliseconds). Returns Sha256 Hex value of\n-   * random id (length=64).\n-   */\n+  /** Generate a random Id using UUID and replace hyphen (-) with random alpha numeric letter */\n   public static String id() {\n-    String millis = String.valueOf(System.currentTimeMillis());\n-    StringBuilder builder = new StringBuilder(UUID.randomUUID().toString());\n-    for (int i = 0; i < millis.length(); i++) {\n-      int index = secureRandom.nextInt(builder.length() - 1);\n-      builder.insert(index, millis.charAt(i));\n+    String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af42dda3353ac0cb5604156c02bff5c9f638e133"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMDYyMw==", "bodyText": "The length of randomUUID is 36 characters. I also checked the letters count of the generated id value. Reference: https://www.baeldung.com/java-uuid#overview", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1380#discussion_r504720623", "createdAt": "2020-10-14T14:24:31Z", "author": {"login": "dhanyak-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/IdGenerator.java", "diffHunk": "@@ -8,27 +8,27 @@\n \n package com.google.cloud.healthcare.fdamystudies.common;\n \n-import java.security.SecureRandom;\n import java.util.UUID;\n-import org.apache.commons.codec.digest.DigestUtils;\n+import org.apache.commons.lang3.RandomStringUtils;\n \n public final class IdGenerator {\n \n-  private static SecureRandom secureRandom = new SecureRandom();\n-\n   private IdGenerator() {}\n \n-  /**\n-   * Generates a random Id using UUID and current time (milliseconds). Returns Sha256 Hex value of\n-   * random id (length=64).\n-   */\n+  /** Generate a random Id using UUID and replace hyphen (-) with random alpha numeric letter */\n   public static String id() {\n-    String millis = String.valueOf(System.currentTimeMillis());\n-    StringBuilder builder = new StringBuilder(UUID.randomUUID().toString());\n-    for (int i = 0; i < millis.length(); i++) {\n-      int index = secureRandom.nextInt(builder.length() - 1);\n-      builder.insert(index, millis.charAt(i));\n+    String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNDE2Ng=="}, "originalCommit": {"oid": "af42dda3353ac0cb5604156c02bff5c9f638e133"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1NzM0OA==", "bodyText": "see ID_LENGTH=128 here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1380#discussion_r504757348", "createdAt": "2020-10-14T15:09:55Z", "author": {"login": "zohrehj"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/IdGenerator.java", "diffHunk": "@@ -8,27 +8,27 @@\n \n package com.google.cloud.healthcare.fdamystudies.common;\n \n-import java.security.SecureRandom;\n import java.util.UUID;\n-import org.apache.commons.codec.digest.DigestUtils;\n+import org.apache.commons.lang3.RandomStringUtils;\n \n public final class IdGenerator {\n \n-  private static SecureRandom secureRandom = new SecureRandom();\n-\n   private IdGenerator() {}\n \n-  /**\n-   * Generates a random Id using UUID and current time (milliseconds). Returns Sha256 Hex value of\n-   * random id (length=64).\n-   */\n+  /** Generate a random Id using UUID and replace hyphen (-) with random alpha numeric letter */\n   public static String id() {\n-    String millis = String.valueOf(System.currentTimeMillis());\n-    StringBuilder builder = new StringBuilder(UUID.randomUUID().toString());\n-    for (int i = 0; i < millis.length(); i++) {\n-      int index = secureRandom.nextInt(builder.length() - 1);\n-      builder.insert(index, millis.charAt(i));\n+    String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNDE2Ng=="}, "originalCommit": {"oid": "af42dda3353ac0cb5604156c02bff5c9f638e133"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2NjU1OA==", "bodyText": "I was using the hash value of the generated id, so the length was 64 and we decided to give 128 length for column size during data integrity PR. I've removed adding epochMilliSeconds to id value and then converting to hash value is removed in PR to fix the Issue #1200 .\nPlease let me know whether to change the ID_LENGTH to 64 but this requires database schema DDL statements needs to be re-generated.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1380#discussion_r504766558", "createdAt": "2020-10-14T15:21:56Z", "author": {"login": "dhanyak-btc"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/IdGenerator.java", "diffHunk": "@@ -8,27 +8,27 @@\n \n package com.google.cloud.healthcare.fdamystudies.common;\n \n-import java.security.SecureRandom;\n import java.util.UUID;\n-import org.apache.commons.codec.digest.DigestUtils;\n+import org.apache.commons.lang3.RandomStringUtils;\n \n public final class IdGenerator {\n \n-  private static SecureRandom secureRandom = new SecureRandom();\n-\n   private IdGenerator() {}\n \n-  /**\n-   * Generates a random Id using UUID and current time (milliseconds). Returns Sha256 Hex value of\n-   * random id (length=64).\n-   */\n+  /** Generate a random Id using UUID and replace hyphen (-) with random alpha numeric letter */\n   public static String id() {\n-    String millis = String.valueOf(System.currentTimeMillis());\n-    StringBuilder builder = new StringBuilder(UUID.randomUUID().toString());\n-    for (int i = 0; i < millis.length(); i++) {\n-      int index = secureRandom.nextInt(builder.length() - 1);\n-      builder.insert(index, millis.charAt(i));\n+    String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNDE2Ng=="}, "originalCommit": {"oid": "af42dda3353ac0cb5604156c02bff5c9f638e133"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NDc2MQ==", "bodyText": "yes, please file a bug to update the database as well.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1380#discussion_r504794761", "createdAt": "2020-10-14T16:00:02Z", "author": {"login": "zohrehj"}, "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/IdGenerator.java", "diffHunk": "@@ -8,27 +8,27 @@\n \n package com.google.cloud.healthcare.fdamystudies.common;\n \n-import java.security.SecureRandom;\n import java.util.UUID;\n-import org.apache.commons.codec.digest.DigestUtils;\n+import org.apache.commons.lang3.RandomStringUtils;\n \n public final class IdGenerator {\n \n-  private static SecureRandom secureRandom = new SecureRandom();\n-\n   private IdGenerator() {}\n \n-  /**\n-   * Generates a random Id using UUID and current time (milliseconds). Returns Sha256 Hex value of\n-   * random id (length=64).\n-   */\n+  /** Generate a random Id using UUID and replace hyphen (-) with random alpha numeric letter */\n   public static String id() {\n-    String millis = String.valueOf(System.currentTimeMillis());\n-    StringBuilder builder = new StringBuilder(UUID.randomUUID().toString());\n-    for (int i = 0; i < millis.length(); i++) {\n-      int index = secureRandom.nextInt(builder.length() - 1);\n-      builder.insert(index, millis.charAt(i));\n+    String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNDE2Ng=="}, "originalCommit": {"oid": "af42dda3353ac0cb5604156c02bff5c9f638e133"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1765, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}