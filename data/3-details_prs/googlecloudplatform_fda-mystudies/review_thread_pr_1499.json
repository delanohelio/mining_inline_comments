{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MDg3NDk1", "number": 1499, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowMzoyMlrOEve8-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowMzoyMlrOEve8-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjI1NjU4OnYy", "diffSide": "RIGHT", "path": "participant-datastore/enroll-mgmt-module/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/dao/EnrollmentTokenDaoImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowMzoyMlrOHkfmxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDoxMzozNVrOHk_Ezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyODYxMg==", "bodyText": "How will this fix the two issues mentioned", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1499#discussion_r508028612", "createdAt": "2020-10-19T20:03:22Z", "author": {"login": "saminguyen"}, "path": "participant-datastore/enroll-mgmt-module/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/dao/EnrollmentTokenDaoImpl.java", "diffHunk": "@@ -103,13 +105,25 @@ public boolean hasParticipant(@NotNull String studyId, @NotNull String tokenValu\n     List<Object[]> participantList = null;\n     boolean hasParticipant = false;\n     Session session = this.sessionFactory.getCurrentSession();\n+    List<String> studyStateStatus = new ArrayList<>();\n+    studyStateStatus.add(ParticipantStudyStateStatus.ENROLLED.getValue());\n+    studyStateStatus.add(ParticipantStudyStateStatus.WITHDRAWN.getValue());\n+    studyStateStatus.add(ParticipantStudyStateStatus.INPROGRESS.getValue());\n+\n+    List<String> onboardingStatus = new ArrayList<>();\n+    onboardingStatus.add(OnboardingStatus.ENROLLED.getCode());\n+    onboardingStatus.add(OnboardingStatus.DISABLED.getCode());\n     participantList =\n         session\n             .createQuery(\n                 \"from ParticipantStudyEntity PS,StudyEntity SB, ParticipantRegistrySiteEntity PR\"\n                     + \" where SB.id =PS.study.id and PS.participantRegistrySite.id=PR.id\"\n-                    + \" and PS.status='Enrolled' and PR.enrollmentToken=:token and SB.customId=:studyId\")\n-            .setParameter(\"token\", tokenValue)\n+                    + \" and PS.status in (:studyStateStatus) \"\n+                    + \" and PR.onboardingStatus in (:onboardingStatus)\"\n+                    + \" and upper(trim(PR.enrollmentToken))=:token and SB.customId=:studyId\")\n+            .setParameter(\"studyStateStatus\", studyStateStatus)\n+            .setParameter(\"onboardingStatus\", onboardingStatus)\n+            .setParameter(\"token\", tokenValue.toUpperCase())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd8ef32336c55c7eb625953468b95553b6f19b5a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU0NDIwNw==", "bodyText": "Issue #1447\nIn the existing logic we were validating the token based on the Enroll status only. If a participant Withdrawn from the study , in such scenario other participants were enroll into the study using the same token even if it not mapped to them.\nIssue #1357\nIf the user Withdrawn from the study , we are updating the status to \"Withdrwan\" in Participant_Study_Info table. When we were checking the hasParticipant status , it was returning true as the record is available in the table for the participant with Withdrawn status, hence same participant not able to enroll into the same study.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1499#discussion_r508544207", "createdAt": "2020-10-20T14:13:35Z", "author": {"login": "madhurya-btc"}, "path": "participant-datastore/enroll-mgmt-module/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/dao/EnrollmentTokenDaoImpl.java", "diffHunk": "@@ -103,13 +105,25 @@ public boolean hasParticipant(@NotNull String studyId, @NotNull String tokenValu\n     List<Object[]> participantList = null;\n     boolean hasParticipant = false;\n     Session session = this.sessionFactory.getCurrentSession();\n+    List<String> studyStateStatus = new ArrayList<>();\n+    studyStateStatus.add(ParticipantStudyStateStatus.ENROLLED.getValue());\n+    studyStateStatus.add(ParticipantStudyStateStatus.WITHDRAWN.getValue());\n+    studyStateStatus.add(ParticipantStudyStateStatus.INPROGRESS.getValue());\n+\n+    List<String> onboardingStatus = new ArrayList<>();\n+    onboardingStatus.add(OnboardingStatus.ENROLLED.getCode());\n+    onboardingStatus.add(OnboardingStatus.DISABLED.getCode());\n     participantList =\n         session\n             .createQuery(\n                 \"from ParticipantStudyEntity PS,StudyEntity SB, ParticipantRegistrySiteEntity PR\"\n                     + \" where SB.id =PS.study.id and PS.participantRegistrySite.id=PR.id\"\n-                    + \" and PS.status='Enrolled' and PR.enrollmentToken=:token and SB.customId=:studyId\")\n-            .setParameter(\"token\", tokenValue)\n+                    + \" and PS.status in (:studyStateStatus) \"\n+                    + \" and PR.onboardingStatus in (:onboardingStatus)\"\n+                    + \" and upper(trim(PR.enrollmentToken))=:token and SB.customId=:studyId\")\n+            .setParameter(\"studyStateStatus\", studyStateStatus)\n+            .setParameter(\"onboardingStatus\", onboardingStatus)\n+            .setParameter(\"token\", tokenValue.toUpperCase())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyODYxMg=="}, "originalCommit": {"oid": "cd8ef32336c55c7eb625953468b95553b6f19b5a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1676, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}