{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTI4NDUx", "number": 591, "title": "UR Web App Dashboard header and Study list tab implementation", "bodyText": "UR Web App Dashboard header and Study list tab implementation", "createdAt": "2020-07-03T16:20:26Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591", "merged": true, "mergeCommit": {"oid": "dde5fc3b5b521537e8358a3c60fc01d02b682394"}, "closed": true, "closedAt": "2020-07-07T14:07:37Z", "author": {"login": "firdosebtc1"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxRONugH2gAyNDQ0MTI4NDUxOjU2ZmViYWYwOTg2NGI3MDMzMmQ4ZGI1NjIzNzllMDE1MDU3MjQxZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcymXX0gH2gAyNDQ0MTI4NDUxOjQ5MDQzYmRjNGQyYzI4NTJkM2M0NGIyNWMzYWVlYjViZDlkZThiZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "56febaf09864b70332d8db562379e015057241fa", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/56febaf09864b70332d8db562379e015057241fa", "committedDate": "2020-07-03T10:52:17Z", "message": "studies tab has been implemented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "608c8b24817dd9aacf12f3a1931c00f3382accfc", "author": {"user": {"login": "prasannaatbtc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/608c8b24817dd9aacf12f3a1931c00f3382accfc", "committedDate": "2020-07-03T12:22:08Z", "message": "study-list.component.html,dashboard-header.component.html"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d998a01b1f023fc8bfa422e56ca21fc633a8615", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4d998a01b1f023fc8bfa422e56ca21fc633a8615", "committedDate": "2020-07-03T13:04:24Z", "message": "added active class to tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b9752bead30c718a126fb60256f0ec87bae013", "author": {"user": {"login": "prasannaatbtc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/09b9752bead30c718a126fb60256f0ec87bae013", "committedDate": "2020-07-03T14:45:12Z", "message": "dashboard header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c5680d75ec65382cf7200b031631c718070c4f4", "author": {"user": {"login": "prasannaatbtc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7c5680d75ec65382cf7200b031631c718070c4f4", "committedDate": "2020-07-03T14:48:17Z", "message": "css"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76af7695843c37c086d3aed2a1d13ed15cba077d", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/76af7695843c37c086d3aed2a1d13ed15cba077d", "committedDate": "2020-07-03T14:55:53Z", "message": "Initial Studylist test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acd0c98f232a685bdc2c0621c9c8504434c76fdf", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/acd0c98f232a685bdc2c0621c9c8504434c76fdf", "committedDate": "2020-07-03T14:56:02Z", "message": "Merge branch 'dashboard-header-implementation' of https://github.com/GoogleCloudPlatform/fda-mystudies into dashboard-header-implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c154f6341c86689678295d3a1ea9c915be0e2387", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c154f6341c86689678295d3a1ea9c915be0e2387", "committedDate": "2020-07-03T15:25:21Z", "message": "New Test Cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cae030755f1e58e67ce492ad84c72f148191d9c7", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cae030755f1e58e67ce492ad84c72f148191d9c7", "committedDate": "2020-07-03T15:51:05Z", "message": "Study list component with test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/383e946a2d80daa296162de29e818ceeb11a58c1", "committedDate": "2020-07-03T16:18:26Z", "message": "Files has been  Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTMwOTA4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#pullrequestreview-442530908", "createdAt": "2020-07-03T18:30:12Z", "commit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxODozMDoxMlrOGs2Lxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxODozMDoxMlrOGs2Lxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3ODI3OQ==", "bodyText": "Can you update this one too?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449678279", "createdAt": "2020-07-03T18:30:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/package.json", "diffHunk": "@@ -11,6 +11,7 @@\n     \"e2e\": \"ng e2e\",\n     \"build:prod\": \"ng build --prod\",\n     \"clean\": \"rimraf ./dist\",\n+    \"format:fix\": \"prettier --write \\\"**/*.{ts,js,json,scss,svg}\\\"\",\n     \"build:ci\": \"npm run clean && npm run lint && npm run format:check && npm run build:prod\",\n     \"format:check\": \"prettier --check \\\"**/*.{ts,js,json}\\\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTMyOTk2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#pullrequestreview-442532996", "createdAt": "2020-07-03T18:39:52Z", "commit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxODozOTo1MlrOGs2SfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxOTowNjowMVrOGs2kgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3OTk5Ng==", "bodyText": "What does this do?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449679996", "createdAt": "2020-07-03T18:39:52Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.html", "diffHunk": "@@ -0,0 +1,11 @@\n+<div class=\"subheader\">\n+    <ul *ngIf=\"showNavBar\" mat-tab-nav-bar class=\"max__w__1280 subheader__menu nav nav-tabs\">\n+        <li *ngFor=\"let link of navLinks\">\n+            <a mat-tab-link [routerLink]=\"link.link\" routerLinkActive=\"active\" #rla=\"routerLinkActive\"\n+                [active]=\"rla.isActive\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDYzMg==", "bodyText": "What is this for?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449680632", "createdAt": "2020-07-03T18:43:30Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.ts", "diffHunk": "@@ -0,0 +1,49 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+export interface NavLink {\n+  label: string;\n+  link: string;\n+  index: number;\n+}\n+@Component({\n+  selector: 'app-dashboard-header',\n+  templateUrl: './dashboard-header.component.html',\n+  styleUrls: ['./dashboard-header.component.scss'],\n+})\n+export class DashboardHeaderComponent implements OnInit {\n+  navLinks: NavLink[];\n+  activeLinkIndex = 0;\n+  showNavBar = true;\n+  constructor(private readonly router: Router) {\n+    this.navLinks = [\n+      {\n+        label: 'Sites',\n+        link: '/coordinator/studies/sites',\n+        index: 0,\n+      },\n+      {\n+        label: 'Studies',\n+        link: '/coordinator/studies',\n+        index: 1,\n+      },\n+      {\n+        label: 'Apps',\n+        link: '/coordinator/apps',\n+        index: 2,\n+      },\n+    ];\n+  }\n+  ngOnInit(): void {\n+    this.router.events.subscribe(() => {\n+      for (const navLink of this.navLinks) {\n+        if (navLink.link === this.router.url) {\n+          this.showNavBar = true;\n+          this.activeLinkIndex = this.navLinks.indexOf(navLink);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg==", "bodyText": "If the URL doesn't match any of the navLinks how did we get to this page?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449680842", "createdAt": "2020-07-03T18:44:46Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.ts", "diffHunk": "@@ -0,0 +1,49 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+export interface NavLink {\n+  label: string;\n+  link: string;\n+  index: number;\n+}\n+@Component({\n+  selector: 'app-dashboard-header',\n+  templateUrl: './dashboard-header.component.html',\n+  styleUrls: ['./dashboard-header.component.scss'],\n+})\n+export class DashboardHeaderComponent implements OnInit {\n+  navLinks: NavLink[];\n+  activeLinkIndex = 0;\n+  showNavBar = true;\n+  constructor(private readonly router: Router) {\n+    this.navLinks = [\n+      {\n+        label: 'Sites',\n+        link: '/coordinator/studies/sites',\n+        index: 0,\n+      },\n+      {\n+        label: 'Studies',\n+        link: '/coordinator/studies',\n+        index: 1,\n+      },\n+      {\n+        label: 'Apps',\n+        link: '/coordinator/apps',\n+        index: 2,\n+      },\n+    ];\n+  }\n+  ngOnInit(): void {\n+    this.router.events.subscribe(() => {\n+      for (const navLink of this.navLinks) {\n+        if (navLink.link === this.router.url) {\n+          this.showNavBar = true;\n+          this.activeLinkIndex = this.navLinks.indexOf(navLink);\n+          break;\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MTk1OQ==", "bodyText": "Dashboard isn't the right name for this. It isn't the data for displaying a dashboard (as far as I can tell).", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449681959", "createdAt": "2020-07-03T18:51:02Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/shared/dashboard.model.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface DashboardModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjIyOQ==", "bodyText": "You only need one error test", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682229", "createdAt": "2020-07-03T18:52:34Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/shared/studies.service.spec.ts", "diffHunk": "@@ -0,0 +1,140 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from './studies.service';\n+\n+describe('StudiesService', () => {\n+  let studiesService: StudiesService;\n+  const expectedStudies = [\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'NewStudyTest',\n+      enrolledCount: 41,\n+      enrollmentPercentage: 38,\n+      id: 1,\n+      invitedCount: 0,\n+      name: 'New Study Test',\n+      sites: [],\n+      studyPermission: 0,\n+      totalSitesCount: 16,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'OpenStudy',\n+      enrolledCount: 5,\n+      enrollmentPercentage: 0,\n+      id: 12,\n+      invitedCount: 9,\n+      name: 'Open Study 02',\n+      sites: [],\n+      studyPermission: 1,\n+      totalSitesCount: 5,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'ClosedStudy',\n+      enrolledCount: 54,\n+      enrollmentPercentage: 17,\n+      id: 14,\n+      invitedCount: 0,\n+      name: 'Closed Study',\n+      sites: [],\n+      studyPermission: 2,\n+      totalSitesCount: 6,\n+      type: 'CLOSE',\n+    },\n+  ];\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [StudiesService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: StudiesService = TestBed.get(\n+      StudiesService,\n+    ) as StudiesService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Studies List', () => {\n+    const entityServicespy = jasmine.createSpyObj<\n+      EntityService<DashboardModel>\n+    >('EntityService', ['getCollection']);\n+    studiesService = new StudiesService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(of(expectedStudies));\n+    studiesService\n+      .getStudies()\n+      .subscribe(\n+        (Studies) =>\n+          expect(Studies).toEqual(expectedStudies, 'expected StudiesList'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+  it('should return an error when the server returns a 401', fakeAsync(() => {\n+    const entityServicespy = jasmine.createSpyObj<\n+      EntityService<DashboardModel>\n+    >('EntityService', ['getCollection']);\n+    studiesService = new StudiesService(entityServicespy);\n+    const errorResponse: ApiResponse = {\n+      error: {\n+        userMessage: 'User does not exist',\n+        type: 'error',\n+        detailMessage: '404 Cant able to get the details',\n+      },\n+    };\n+\n+    entityServicespy.getCollection.and.returnValue(throwError(errorResponse));\n+\n+    studiesService.getStudies().subscribe(\n+      () => fail('expected an error'),\n+      (error: ApiResponse) => {\n+        expect(error.error.userMessage).toContain('User does not exist');\n+      },\n+    );\n+  }));\n+\n+  it('should return an error when the server returns a 400', fakeAsync(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjMwMA==", "bodyText": "I believe that this needs fakeAsync", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682300", "createdAt": "2020-07-03T18:53:01Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/shared/studies.service.spec.ts", "diffHunk": "@@ -0,0 +1,140 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from './studies.service';\n+\n+describe('StudiesService', () => {\n+  let studiesService: StudiesService;\n+  const expectedStudies = [\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'NewStudyTest',\n+      enrolledCount: 41,\n+      enrollmentPercentage: 38,\n+      id: 1,\n+      invitedCount: 0,\n+      name: 'New Study Test',\n+      sites: [],\n+      studyPermission: 0,\n+      totalSitesCount: 16,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'OpenStudy',\n+      enrolledCount: 5,\n+      enrollmentPercentage: 0,\n+      id: 12,\n+      invitedCount: 9,\n+      name: 'Open Study 02',\n+      sites: [],\n+      studyPermission: 1,\n+      totalSitesCount: 5,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'ClosedStudy',\n+      enrolledCount: 54,\n+      enrollmentPercentage: 17,\n+      id: 14,\n+      invitedCount: 0,\n+      name: 'Closed Study',\n+      sites: [],\n+      studyPermission: 2,\n+      totalSitesCount: 6,\n+      type: 'CLOSE',\n+    },\n+  ];\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [StudiesService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: StudiesService = TestBed.get(\n+      StudiesService,\n+    ) as StudiesService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Studies List', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjM1NA==", "bodyText": "EntityService<Study>", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682354", "createdAt": "2020-07-03T18:53:20Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/shared/studies.service.ts", "diffHunk": "@@ -0,0 +1,13 @@\n+import {Injectable} from '@angular/core';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {Observable} from 'rxjs';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class StudiesService {\n+  constructor(private readonly entityService: EntityService<unknown>) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4Mjg0MA==", "bodyText": "Test data should come from the server, not be hard-coded into the page.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682840", "createdAt": "2020-07-03T18:55:45Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjkxNA==", "bodyText": "New line after <span>", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682914", "createdAt": "2020-07-03T18:56:10Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjkyOQ==", "bodyText": "New line", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682929", "createdAt": "2020-07-03T18:56:17Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzQzMA==", "bodyText": "I get a network error when I try to visit this page after replacing baseUrl in entity.service.ts with 35.222.67.4:8086", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683430", "createdAt": "2020-07-03T18:59:31Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzU2Nw==", "bodyText": "This would be more readable as a function", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683567", "createdAt": "2020-07-03T19:00:13Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"mb__width__100\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"mb__width__100\">\n+                                    <div class=\"col-xs-12 p-none lh__6\">\n+                                        <div class=\"prog\">\n+                                            <div *ngIf=\"study.invitedCount != 0\" class=\"pro__base\">\n+                                                <div class=\"pro__top\" [style.width.%]=\"study.enrollmentPercentage\">\n+                                                </div>\n+                                            </div>\n+                                            <div class=\"progress-label font__bold\" [ngClass]=\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzY3MQ==", "bodyText": "Newline", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683671", "createdAt": "2020-07-03T19:00:52Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"mb__width__100\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"mb__width__100\">\n+                                    <div class=\"col-xs-12 p-none lh__6\">\n+                                        <div class=\"prog\">\n+                                            <div *ngIf=\"study.invitedCount != 0\" class=\"pro__base\">\n+                                                <div class=\"pro__top\" [style.width.%]=\"study.enrollmentPercentage\">\n+                                                </div>\n+                                            </div>\n+                                            <div class=\"progress-label font__bold\" [ngClass]=\"\n+                          study.enrollmentPercentage < 30\n+                            ? 'red__text__sm'\n+                            : study.enrollmentPercentage < 70\n+                            ? 'orange__text__sm'\n+                            : 'green__text__sm'\n+                        \">\n+                                                <span *ngIf=\"study.invitedCount != 0\">{{ study.enrolledCount }} /\n+                                                    {{ study.invitedCount }}</span><span\n+                                                    *ngIf=\"study.invitedCount == 0\">N/A</span>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                                <div class=\"text-right progress__bar__next\">\n+                                    <div class=\"progress-bar-next__title\">\n+                                        <span\n+                                            *ngIf=\"study.invitedCount != 0\">{{ study.enrollmentPercentage | number: \".2-2\" }}%</span><span\n+                                            *ngIf=\"study.invitedCount == 0\">N/A</span>\n+                                    </div>\n+                                    <div class=\"text-grey__sm\">\n+                                        <span *ngIf=\"study.type != 'OPEN'\">Enrolled / Invited</span><span", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4Mzc5Ng==", "bodyText": "This test doesn't really add anything. Please remove.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683796", "createdAt": "2020-07-03T19:01:38Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,153 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+import {StudyListComponent} from './study-list.component';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of, Observable} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {StudiesModule} from '../studies.module';\n+import {StudiesService} from '../shared/studies.service';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+\n+describe('StudyListComponent', () => {\n+  let component: StudyListComponent;\n+  let fixture: ComponentFixture<StudyListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const studyServiceSpy = jasmine.createSpyObj<StudiesService>(\n+      'StudiesService',\n+      ['getStudies'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [StudyListComponent],\n+      imports: [\n+        SiteCoordinatorModule,\n+        BrowserAnimationsModule,\n+        StudiesModule,\n+        NoopAnimationsModule,\n+        HttpClientModule,\n+        RouterTestingModule.withRoutes([]),\n+        ModalModule.forRoot(),\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: StudiesService, useValue: studyServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(StudyListComponent);\n+        component = fixture.componentInstance;\n+        const expectedStudyList: Observable<DashboardModel[]> = of([\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'NewStudyTest',\n+            enrolledCount: 41,\n+            enrollmentPercentage: 38,\n+            id: 1,\n+            invitedCount: 0,\n+            name: 'New Study Test',\n+            sites: [],\n+            studyPermission: 0,\n+            totalSitesCount: 16,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'OpenStudy',\n+            enrolledCount: 5,\n+            enrollmentPercentage: 0,\n+            id: 12,\n+            invitedCount: 9,\n+            name: 'Open Study 02',\n+            sites: [],\n+            studyPermission: 1,\n+            totalSitesCount: 5,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'ClosedStudy',\n+            enrolledCount: 54,\n+            enrollmentPercentage: 17,\n+            id: 14,\n+            invitedCount: 0,\n+            name: 'Closed Study',\n+            sites: [],\n+            studyPermission: 2,\n+            totalSitesCount: 6,\n+            type: 'CLOSE',\n+          },\n+        ]);\n+        studyServiceSpy.getStudies.and.returnValue(expectedStudyList);\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should NOT have studies before ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies before ngOnInit',\n+    );\n+  });\n+  it('should NOT have studies immediately after ngOnInit', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzkxNw==", "bodyText": "There isn't any search box in this component. Please remove", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683917", "createdAt": "2020-07-03T19:02:18Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,153 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+import {StudyListComponent} from './study-list.component';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of, Observable} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {StudiesModule} from '../studies.module';\n+import {StudiesService} from '../shared/studies.service';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+\n+describe('StudyListComponent', () => {\n+  let component: StudyListComponent;\n+  let fixture: ComponentFixture<StudyListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const studyServiceSpy = jasmine.createSpyObj<StudiesService>(\n+      'StudiesService',\n+      ['getStudies'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [StudyListComponent],\n+      imports: [\n+        SiteCoordinatorModule,\n+        BrowserAnimationsModule,\n+        StudiesModule,\n+        NoopAnimationsModule,\n+        HttpClientModule,\n+        RouterTestingModule.withRoutes([]),\n+        ModalModule.forRoot(),\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: StudiesService, useValue: studyServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(StudyListComponent);\n+        component = fixture.componentInstance;\n+        const expectedStudyList: Observable<DashboardModel[]> = of([\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'NewStudyTest',\n+            enrolledCount: 41,\n+            enrollmentPercentage: 38,\n+            id: 1,\n+            invitedCount: 0,\n+            name: 'New Study Test',\n+            sites: [],\n+            studyPermission: 0,\n+            totalSitesCount: 16,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'OpenStudy',\n+            enrolledCount: 5,\n+            enrollmentPercentage: 0,\n+            id: 12,\n+            invitedCount: 9,\n+            name: 'Open Study 02',\n+            sites: [],\n+            studyPermission: 1,\n+            totalSitesCount: 5,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'ClosedStudy',\n+            enrolledCount: 54,\n+            enrollmentPercentage: 17,\n+            id: 14,\n+            invitedCount: 0,\n+            name: 'Closed Study',\n+            sites: [],\n+            studyPermission: 2,\n+            totalSitesCount: 6,\n+            type: 'CLOSE',\n+          },\n+        ]);\n+        studyServiceSpy.getStudies.and.returnValue(expectedStudyList);\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should NOT have studies before ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies before ngOnInit',\n+    );\n+  });\n+  it('should NOT have studies immediately after ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies until service promise resolves',\n+    );\n+  });\n+  describe('after get studies', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+    it('should not have search box ', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDA2OA==", "bodyText": "tests should be all lowercase. should display all studies", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449684068", "createdAt": "2020-07-03T19:03:04Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,153 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+import {StudyListComponent} from './study-list.component';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of, Observable} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {StudiesModule} from '../studies.module';\n+import {StudiesService} from '../shared/studies.service';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+\n+describe('StudyListComponent', () => {\n+  let component: StudyListComponent;\n+  let fixture: ComponentFixture<StudyListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const studyServiceSpy = jasmine.createSpyObj<StudiesService>(\n+      'StudiesService',\n+      ['getStudies'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [StudyListComponent],\n+      imports: [\n+        SiteCoordinatorModule,\n+        BrowserAnimationsModule,\n+        StudiesModule,\n+        NoopAnimationsModule,\n+        HttpClientModule,\n+        RouterTestingModule.withRoutes([]),\n+        ModalModule.forRoot(),\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: StudiesService, useValue: studyServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(StudyListComponent);\n+        component = fixture.componentInstance;\n+        const expectedStudyList: Observable<DashboardModel[]> = of([\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'NewStudyTest',\n+            enrolledCount: 41,\n+            enrollmentPercentage: 38,\n+            id: 1,\n+            invitedCount: 0,\n+            name: 'New Study Test',\n+            sites: [],\n+            studyPermission: 0,\n+            totalSitesCount: 16,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'OpenStudy',\n+            enrolledCount: 5,\n+            enrollmentPercentage: 0,\n+            id: 12,\n+            invitedCount: 9,\n+            name: 'Open Study 02',\n+            sites: [],\n+            studyPermission: 1,\n+            totalSitesCount: 5,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'ClosedStudy',\n+            enrolledCount: 54,\n+            enrollmentPercentage: 17,\n+            id: 14,\n+            invitedCount: 0,\n+            name: 'Closed Study',\n+            sites: [],\n+            studyPermission: 2,\n+            totalSitesCount: 6,\n+            type: 'CLOSE',\n+          },\n+        ]);\n+        studyServiceSpy.getStudies.and.returnValue(expectedStudyList);\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should NOT have studies before ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies before ngOnInit',\n+    );\n+  });\n+  it('should NOT have studies immediately after ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies until service promise resolves',\n+    );\n+  });\n+  describe('after get studies', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+    it('should not have search box ', () => {\n+      const compiled = fixture.nativeElement as HTMLElement;\n+      expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+        undefined,\n+        'should not have search box',\n+      );\n+    });\n+    it('should get the studies List via refresh function', fakeAsync(() => {\n+      component.study$.subscribe((studies) => {\n+        expect(studies.length).toEqual(3);\n+      });\n+    }));\n+    it('should DISPLAY All Studies', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDM4OQ==", "bodyText": "What if it isn't an ApiResponse? I ran into this issue with the page not loading. You should fall back to another error message if something else went wrong. I would also extract this into an HttpInterceptor, because I'm sure you're going to want to do this on every HTTP request", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449684389", "createdAt": "2020-07-03T19:04:44Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {catchError, map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from '../shared/studies.service';\n+@Component({\n+  selector: 'app-study-list',\n+  templateUrl: './study-list.component.html',\n+  styleUrls: ['./study-list.component.scss'],\n+})\n+export class StudyListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  study$: Observable<DashboardModel[]> = of([]);\n+  studies: DashboardModel[] = [];\n+  constructor(\n+    private readonly studiesService: StudiesService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getStudies();\n+  }\n+\n+  getStudies(): void {\n+    this.study$ = combineLatest(\n+      this.studiesService.getStudies(),\n+      this.query$,\n+    ).pipe(\n+      catchError((error: ApiResponse) => {\n+        this.toastr.error(error.error.userMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDYxMQ==", "bodyText": "Use optional chaining instead\nstudy.name?.toLowerCase()?.includes(query.toLowerCase())", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449684611", "createdAt": "2020-07-03T19:06:01Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {catchError, map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from '../shared/studies.service';\n+@Component({\n+  selector: 'app-study-list',\n+  templateUrl: './study-list.component.html',\n+  styleUrls: ['./study-list.component.scss'],\n+})\n+export class StudyListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  study$: Observable<DashboardModel[]> = of([]);\n+  studies: DashboardModel[] = [];\n+  constructor(\n+    private readonly studiesService: StudiesService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getStudies();\n+  }\n+\n+  getStudies(): void {\n+    this.study$ = combineLatest(\n+      this.studiesService.getStudies(),\n+      this.query$,\n+    ).pipe(\n+      catchError((error: ApiResponse) => {\n+        this.toastr.error(error.error.userMessage);\n+        return throwError(error);\n+      }),\n+      map(([studies, query]) => {\n+        this.studies = studies as DashboardModel[];\n+        return this.studies.filter(\n+          (study: DashboardModel) =>\n+            (study.name &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c196e5da80ec1d66587d6caf62a519da9d87da33", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c196e5da80ec1d66587d6caf62a519da9d87da33", "committedDate": "2020-07-06T13:46:09Z", "message": "Code Review comments has been resolved"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa0f04312e803ef0469484a19f9698c9189f17ae", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fa0f04312e803ef0469484a19f9698c9189f17ae", "committedDate": "2020-07-06T16:36:28Z", "message": "Errors has been handled in HttpInterceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "committedDate": "2020-07-06T16:59:37Z", "message": "Build issues has been fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjY5OTA0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#pullrequestreview-443269904", "createdAt": "2020-07-06T17:20:44Z", "commit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyMDo0NFrOGtgZ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzo1MzoxM1rOGthbLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3MDAwNA==", "bodyText": "Exceptions aren't very common in TS? What are you expecting to be thrown here?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450370004", "createdAt": "2020-07-06T17:20:44Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -40,9 +53,36 @@ export class AuthInterceptor implements HttpInterceptor {\n       .set('authUserId', user.urAdminAuthId);\n     const authReq = req.clone({headers});\n     return next.handle(authReq).pipe(\n+      catchError((err) => {\n+        this.handleError(err);\n+        return of(err);\n+      }),\n       finalize(() => {\n         void this.spinner.hide();\n       }),\n     );\n   }\n+\n+  handleError(err: unknown): void {\n+    if (err instanceof HttpErrorResponse) {\n+      try {\n+        if (err.error instanceof ErrorEvent) {\n+          this.toasterService.error(err.error.message);\n+        } else {\n+          const customError = err.error as Error;\n+          if (customError.userMessage) {\n+            this.toasterService.error(customError.userMessage);\n+          } else {\n+            this.toasterService.error(\n+              `Error Code: ${err.status}\\nMessage: ${err.message}`,\n+            );\n+          }\n+        }\n+      } catch (e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NjEyNA==", "bodyText": "You should move all of this to handleError. I would write it like this\n  handleError<T>(): OperatorFunction<T, T> {\n    return catchError(\n      (err: unknown): Observable<T> => {\n        if (err instanceof HttpErrorResponse) {\n            // ...\n        }\n        return throwError(err);\n      },\n    );\n  }\n}", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450376124", "createdAt": "2020-07-06T17:32:23Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -40,9 +53,36 @@ export class AuthInterceptor implements HttpInterceptor {\n       .set('authUserId', user.urAdminAuthId);\n     const authReq = req.clone({headers});\n     return next.handle(authReq).pipe(\n+      catchError((err) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzE3NQ==", "bodyText": "Site should be in its own file.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377175", "createdAt": "2020-07-06T17:34:28Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/shared/study.model.ts", "diffHunk": "@@ -11,6 +11,7 @@ export interface DashboardModel {\n   studyPermission: number;\n   totalSitesCount: number;\n   type: string;\n+  logo: string;\n }\n export interface Site {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzQ4Mg==", "bodyText": "Remove empty attribute.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377482", "createdAt": "2020-07-06T17:35:06Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -8,9 +8,8 @@\n                         class=\"flex__justify__space-between flex__wrap\">\n                         <div class=\"\">\n                             <div class=\"flex__ flex__row align__items__center\">\n-                                <div class=\"img__container__left\">\n-                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n-                                        alt=\"A Study for Pregnant Women\" />\n+                                <div class=\"img__container__left\" *ngIf=\"study.logo\">\n+                                    <img class=\"\" [src]=\"study.logo\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzYxMA==", "bodyText": "Space after number", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377610", "createdAt": "2020-07-06T17:35:20Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -21,8 +20,12 @@\n                                     </div>\n                                     <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n                                         <div class=\"col-xs-6 col-md-12 p-none\">\n-                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n-                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                            <span *ngIf=\"study.type != 'OPEN'\">\n+                                                {{ study.totalSitesCount }}sites", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3ODkyMA==", "bodyText": "Well if it isn't nullable then you don't need either. If it's an empty check the includes will always fail, so you don't need it in that case either.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450378920", "createdAt": "2020-07-06T17:37:48Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {catchError, map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from '../shared/studies.service';\n+@Component({\n+  selector: 'app-study-list',\n+  templateUrl: './study-list.component.html',\n+  styleUrls: ['./study-list.component.scss'],\n+})\n+export class StudyListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  study$: Observable<DashboardModel[]> = of([]);\n+  studies: DashboardModel[] = [];\n+  constructor(\n+    private readonly studiesService: StudiesService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getStudies();\n+  }\n+\n+  getStudies(): void {\n+    this.study$ = combineLatest(\n+      this.studiesService.getStudies(),\n+      this.query$,\n+    ).pipe(\n+      catchError((error: ApiResponse) => {\n+        this.toastr.error(error.error.userMessage);\n+        return throwError(error);\n+      }),\n+      map(([studies, query]) => {\n+        this.studies = studies as DashboardModel[];\n+        return this.studies.filter(\n+          (study: DashboardModel) =>\n+            (study.name &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDYxMQ=="}, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NTA2OQ==", "bodyText": "I don't know how your design process works, but I would expect things to change as we implement them. It's just my opinion though, if someone disagrees we can keep it as-is", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450385069", "createdAt": "2020-07-06T17:49:59Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.ts", "diffHunk": "@@ -0,0 +1,49 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+export interface NavLink {\n+  label: string;\n+  link: string;\n+  index: number;\n+}\n+@Component({\n+  selector: 'app-dashboard-header',\n+  templateUrl: './dashboard-header.component.html',\n+  styleUrls: ['./dashboard-header.component.scss'],\n+})\n+export class DashboardHeaderComponent implements OnInit {\n+  navLinks: NavLink[];\n+  activeLinkIndex = 0;\n+  showNavBar = true;\n+  constructor(private readonly router: Router) {\n+    this.navLinks = [\n+      {\n+        label: 'Sites',\n+        link: '/coordinator/studies/sites',\n+        index: 0,\n+      },\n+      {\n+        label: 'Studies',\n+        link: '/coordinator/studies',\n+        index: 1,\n+      },\n+      {\n+        label: 'Apps',\n+        link: '/coordinator/apps',\n+        index: 2,\n+      },\n+    ];\n+  }\n+  ngOnInit(): void {\n+    this.router.events.subscribe(() => {\n+      for (const navLink of this.navLinks) {\n+        if (navLink.link === this.router.url) {\n+          this.showNavBar = true;\n+          this.activeLinkIndex = this.navLinks.indexOf(navLink);\n+          break;\n+        } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg=="}, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NjMwOA==", "bodyText": "I don't want to have to edit your code to get the app working, it makes it impossible to review unless you tell me what changes to make. Please create a follow up PR that makes all the existing code work without other developers making changes.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450386308", "createdAt": "2020-07-06T17:52:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzQzMA=="}, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NjczNQ==", "bodyText": "Move this logic to the controller and then change this to <div class=\"progress-label font__bold\" [ngClass]=\"progressBarColor(study)\">", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450386735", "createdAt": "2020-07-06T17:53:13Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"mb__width__100\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"mb__width__100\">\n+                                    <div class=\"col-xs-12 p-none lh__6\">\n+                                        <div class=\"prog\">\n+                                            <div *ngIf=\"study.invitedCount != 0\" class=\"pro__base\">\n+                                                <div class=\"pro__top\" [style.width.%]=\"study.enrollmentPercentage\">\n+                                                </div>\n+                                            </div>\n+                                            <div class=\"progress-label font__bold\" [ngClass]=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzU2Nw=="}, "originalCommit": {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3af49417e1e3928505b64a2f1bd0e07492314f28", "author": {"user": {"login": "prasannaatbtc", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3af49417e1e3928505b64a2f1bd0e07492314f28", "committedDate": "2020-07-07T08:50:22Z", "message": "empty attribute removed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78414ac8a14e746b0dcfdc24e85e9ab3f9425812", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/78414ac8a14e746b0dcfdc24e85e9ab3f9425812", "committedDate": "2020-07-07T12:32:32Z", "message": "code review comments has been resolved"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODg0OTY2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#pullrequestreview-443884966", "createdAt": "2020-07-07T13:23:32Z", "commit": {"oid": "78414ac8a14e746b0dcfdc24e85e9ab3f9425812"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49043bdc4d2c2852d3c44b25c3aeeb5bd9de8bed", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/49043bdc4d2c2852d3c44b25c3aeeb5bd9de8bed", "committedDate": "2020-07-07T14:04:13Z", "message": "Merge branch 'develop' into dashboard-header-implementation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 787, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}