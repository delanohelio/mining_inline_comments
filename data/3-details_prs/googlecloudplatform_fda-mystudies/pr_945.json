{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NjE1NDk3", "number": 945, "title": "Participant manager web-app site details test cases", "bodyText": "", "createdAt": "2020-09-11T03:58:56Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945", "merged": true, "mergeCommit": {"oid": "54527b3c2f80c0c3432d90f0ef6bcb31c9103ca7"}, "closed": true, "closedAt": "2020-09-23T05:27:06Z", "author": {"login": "firdosebtc1"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHsSydgH2gAyNDg0NjE1NDk3OjliZjI4ZjU5OGNjM2E1ZTVlMGYyNThlOTQxOWU4OGYyMzNjZjdjZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLa1AjAFqTQ5MzY1NzgyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9bf28f598cc3a5e5e0f258e9419e88f233cf7cd2", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9bf28f598cc3a5e5e0f258e9419e88f233cf7cd2", "committedDate": "2020-09-11T02:51:03Z", "message": "particpant-manager-webapp-site-details-without-test-case\n\nparticpant-manager-webapp-site-details-without-test-case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/746e87e9c01f6c923568c3857b4f84798d1b6301", "committedDate": "2020-09-11T03:57:30Z", "message": "participant-manger-webapp-site-details-test-cases\n\nparticipant-manger-webapp-site-details-test-cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2ODEzNTU5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#pullrequestreview-486813559", "createdAt": "2020-09-11T13:38:11Z", "commit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzozODoxMlrOHQfM3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNDowNTo0NVrOHQgSUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1MDQ2MA==", "bodyText": "Use block disables instead of disabling the whole file", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487050460", "createdAt": "2020-09-11T13:38:12Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/entity/mock-sitedetail-data.ts", "diffHunk": "@@ -0,0 +1,92 @@\n+/* eslint-disable @typescript-eslint/naming-convention */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1MDYyNA==", "bodyText": "same here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487050624", "createdAt": "2020-09-11T13:38:26Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/entity/mock-studies-data.ts", "diffHunk": "@@ -1,3 +1,4 @@\n+/* eslint-disable @typescript-eslint/naming-convention */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1MjE2Mw==", "bodyText": "same here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487052163", "createdAt": "2020-09-11T13:40:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/shared/participant-registry-detail.ts", "diffHunk": "@@ -1,3 +1,4 @@\n+/* eslint-disable @typescript-eslint/naming-convention */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1MzYzMg==", "bodyText": "fetchingOption should be an enum.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487053632", "createdAt": "2020-09-11T13:43:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+import {Injectable} from '@angular/core';\n+import {SiteParticipants} from './site-detail.model';\n+import {EntityService} from '../../../service/entity.service';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {environment} from '@environment';\n+import {\n+  InviteSend,\n+  StatusUpdate,\n+  UpdateInviteResponse,\n+} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SiteDetailsService {\n+  baseUrl = environment.baseUrl;\n+  constructor(\n+    private readonly entityService: EntityService<SiteParticipants>,\n+    private readonly http: HttpClient,\n+  ) {}\n+  get(siteId: string, fetchingOption: string): Observable<SiteParticipants> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1MzgzNg==", "bodyText": "This should be a params object.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487053836", "createdAt": "2020-09-11T13:43:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+import {Injectable} from '@angular/core';\n+import {SiteParticipants} from './site-detail.model';\n+import {EntityService} from '../../../service/entity.service';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {environment} from '@environment';\n+import {\n+  InviteSend,\n+  StatusUpdate,\n+  UpdateInviteResponse,\n+} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SiteDetailsService {\n+  baseUrl = environment.baseUrl;\n+  constructor(\n+    private readonly entityService: EntityService<SiteParticipants>,\n+    private readonly http: HttpClient,\n+  ) {}\n+  get(siteId: string, fetchingOption: string): Observable<SiteParticipants> {\n+    const fetchingOptions =\n+      fetchingOption === 'all'\n+        ? ''\n+        : fetchingOption === 'new'\n+        ? '?onboardingStatus=N'\n+        : fetchingOption === 'invited'\n+        ? '?onboardingStatus=I'\n+        : '?onboardingStatus=D';\n+    return this.entityService.get(\n+      `sites/${siteId}/participants` + fetchingOptions,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NDEwMw==", "bodyText": "use a switch or a lookup map. chained ternaries are hard to understand.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487054103", "createdAt": "2020-09-11T13:43:46Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+import {Injectable} from '@angular/core';\n+import {SiteParticipants} from './site-detail.model';\n+import {EntityService} from '../../../service/entity.service';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {environment} from '@environment';\n+import {\n+  InviteSend,\n+  StatusUpdate,\n+  UpdateInviteResponse,\n+} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SiteDetailsService {\n+  baseUrl = environment.baseUrl;\n+  constructor(\n+    private readonly entityService: EntityService<SiteParticipants>,\n+    private readonly http: HttpClient,\n+  ) {}\n+  get(siteId: string, fetchingOption: string): Observable<SiteParticipants> {\n+    const fetchingOptions =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1Njk3Mw==", "bodyText": "This is the same as #template", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487056973", "createdAt": "2020-09-11T13:48:11Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.html", "diffHunk": "@@ -0,0 +1,556 @@\n+<ng-container *ngIf=\"siteParticipants$ | async as siteParticipants\">\n+  <div>\n+    <div class=\"subheader p-none pl-none\">\n+      <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+          <div\n+            class=\"subheader__title flex__justify__space-between align__items__baseline\"\n+          >\n+            <div>\n+              <a routerLink=\"/coordinator/studies/sites\">\n+                <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+              </a>\n+            </div>\n+            <div>\n+              <div class=\"mb-xs\">\n+                Site Participant Registry\n+                <span\n+                  *ngIf=\"siteParticipants.participantRegistryDetail.siteStatus\"\n+                  class=\"active__\"\n+                >\n+                  {{\n+                    siteParticipants.participantRegistryDetail.siteStatus === 1\n+                      ? \"Active\"\n+                      : \"Inactive\"\n+                  }}\n+                </span>\n+              </div>\n+              <div class=\"display-inline-flex overflow__auto\">\n+                <div class=\"pr-xlg\">\n+                  <div class=\"banner__label\">\n+                    {{\n+                      siteParticipants.participantRegistryDetail\n+                        .customLocationId\n+                    }}\n+                  </div>\n+                  <div class=\"banner__text\">\n+                    {{\n+                      siteParticipants.participantRegistryDetail.locationName\n+                    }}\n+                  </div>\n+                </div>\n+                <div class=\"pr-xlg\">\n+                  <div class=\"banner__label\">\n+                    {{\n+                      siteParticipants.participantRegistryDetail.customStudyId\n+                    }}\n+                  </div>\n+                  <div class=\"banner__text\">\n+                    {{ siteParticipants.participantRegistryDetail.studyName }}\n+                  </div>\n+                </div>\n+                <div>\n+                  <div class=\"banner__label\">\n+                    {{ siteParticipants.participantRegistryDetail.customAppId }}\n+                  </div>\n+                  <div class=\"banner__text\">\n+                    {{ siteParticipants.participantRegistryDetail.appName }}\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+          <div class=\"desk__view\">\n+            <div class=\"flex__justify__space-between\">\n+              <div>\n+                <div class=\"dropdown\">\n+                  <button\n+                    name=\"btnToggleParticipant\"\n+                    class=\"dropbtn btn banner__primary__btn mr-sm tnsb\"\n+                    (click)=\"toggleParticipant()\"\n+                  >\n+                    Add Participants\n+                    <i class=\"fa fa-caret-down\"></i>\n+                  </button>\n+                  <div\n+                    [ngClass]=\"toggLeDisplay ? 'show' : ''\"\n+                    class=\"dropdown-content participantSlideDown\"\n+                  >\n+                    <div class=\"flex__justify__space-between mb-xs\">\n+                      <div class=\"mr-sm\">\n+                        <button\n+                          class=\"primary__btn font__bold\"\n+                          (click)=\"openModal(template)\"\n+                        >\n+                          Add Email\n+                        </button>\n+                      </div>\n+                      <div>\n+                        <button\n+                          class=\"primary__btn font__bold\"\n+                          (click)=\"openModal(template1)\"\n+                        >\n+                          Import Email List\n+                        </button>\n+                      </div>\n+                    </div>\n+                    <div class=\"flex__row__reverse\">\n+                      <a\n+                        download=\"Email_Import_Template\"\n+                        target=\"_blank\"\n+                        href=\"/assets/Email_Import_Template.xlsx\"\n+                        class=\"p-none\"\n+                      >\n+                        <div class=\"download__text\">Download Template</div>\n+                      </a>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div>\n+                <button\n+                  name=\"buttonDecommision\"\n+                  class=\"btn banner__default__btn flex__row__reverse pad__5__13\"\n+                  (click)=\"decommissionSite()\"\n+                >\n+                  {{\n+                    siteParticipants.participantRegistryDetail.siteStatus === 1\n+                      ? \"Decommission Site for Study\"\n+                      : \"Activate Site for Study\"\n+                  }}\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <!-- ForMobile View  -->\n+    <div class=\"mobile__view yel__tabs\">\n+      <div class=\"p-md pb-none\">\n+        <div class=\"flex__ flex__justify__center\">\n+          <div>\n+            <div class=\"dropdown\">\n+              <button\n+                name=\"btnToggleParticipant\"\n+                class=\"dropbtn btn banner__primary__btn mr-sm font12\"\n+                (click)=\"toggleParticipant()\"\n+              >\n+                Add Participants\n+                <i class=\"fa fa-caret-down\"></i>\n+              </button>\n+              <div\n+                [ngClass]=\"toggLeDisplay ? 'show' : ''\"\n+                lass=\"dropdown-content participantSlideDown\"\n+              >\n+                <div class=\"flex__justify__space-between mb-xs\">\n+                  <div class=\"mr-sm\">\n+                    <button\n+                      class=\"primary__btn font__bold\"\n+                      (click)=\"openModal(template)\"\n+                    >\n+                      Add Email\n+                    </button>\n+                  </div>\n+                  <div>\n+                    <button\n+                      class=\"primary__btn font__bold\"\n+                      (click)=\"openModal(template1)\"\n+                    >\n+                      Import Email List\n+                    </button>\n+                  </div>\n+                </div>\n+                <div class=\"flex__row__reverse\">\n+                  <a\n+                    download=\"Email_Import_Template\"\n+                    target=\"_blank\"\n+                    href=\"/assets/Email_Import_Template.xlsx\"\n+                    class=\"p-none\"\n+                  >\n+                    <div class=\"download__text\">Download Template</div>\n+                  </a>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+          <div>\n+            <button\n+              name=\"buttonDecommision\"\n+              class=\"btn banner__default__btn flex__row__reverse pad__5__13 font12\"\n+              (click)=\"decommissionSite()\"\n+            >\n+              Decommission Site for Study\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+      <div>\n+        <ul class=\"nav nav-tabs\">\n+          <li [ngClass]=\"{active: activeTab == 'all'}\">\n+            <a data-toggle=\"tab\" (click)=\"changeTab('all')\">\n+              All\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.A\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li [ngClass]=\"{active: activeTab == 'new'}\">\n+            <a class=\"classNew\" data-toggle=\"tab\" (click)=\"changeTab('new')\">\n+              New\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.N\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li [ngClass]=\"{active: activeTab == 'invited'}\">\n+            <a data-toggle=\"tab\" (click)=\"changeTab('invited')\">\n+              Invited\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.I\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li [ngClass]=\"{active: activeTab == 'disabled'}\">\n+            <a data-toggle=\"tab\" (click)=\"changeTab('disabled')\">\n+              Disabled\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.D\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li></li>\n+        </ul>\n+      </div>\n+      <div class=\"sred\">\n+        <div class=\"flex__ flex__justify__center\">\n+          <div\n+            *ngIf=\"activeTab == 'new' || activeTab == 'invited'\"\n+            class=\"mr-sm\"\n+          >\n+            <button\n+              class=\"dropbtn btn banner__primary__btn white__text bt__font12__pad113\"\n+              (click)=\"sendInvitation()\"\n+            >\n+              {{ sendResend }}\n+            </button>\n+          </div>\n+\n+          <div\n+            class=\"sendResendActiveClass\"\n+            *ngIf=\"\n+              activeTab == 'new' ||\n+              activeTab == 'invited' ||\n+              activeTab == 'disable'\n+            \"\n+          >\n+            <button\n+              class=\"btn banner__default__btn flex__row__reverse pad__5__13 bt__font12__pad113\"\n+              (click)=\"toggleInvitation()\"\n+            >\n+              {{ enableDisable }}\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <div class=\"max__w__1280 p-none site__participant\">\n+      <div class=\"desk__view\">\n+        <div\n+          class=\"flex__justify__space-between bg__white yel__tabs border-bottom__dee2e6\"\n+        >\n+          <div>\n+            <ul class=\"nav nav-tabs\">\n+              <li [ngClass]=\"{active: activeTab == 'all'}\">\n+                <a data-toggle=\"tab\" (click)=\"changeTab('all')\">\n+                  All\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .A\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li [ngClass]=\"{active: activeTab == 'new'}\">\n+                <a\n+                  class=\"classNew\"\n+                  data-toggle=\"tab\"\n+                  (click)=\"changeTab('new')\"\n+                >\n+                  New\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .N\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li [ngClass]=\"{active: activeTab == 'invited'}\">\n+                <a data-toggle=\"tab\" (click)=\"changeTab('invited')\">\n+                  Invited\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .I\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li [ngClass]=\"{active: activeTab == 'disabled'}\">\n+                <a data-toggle=\"tab\" (click)=\"changeTab('disabled')\">\n+                  Disabled\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .D\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li></li>\n+            </ul>\n+          </div>\n+          <div class=\"pr-xlg\">\n+            <div class=\"flex__justify__space-between mb-xs\">\n+              <div\n+                *ngIf=\"activeTab == 'new' || activeTab == 'invited'\"\n+                class=\"mr-sm\"\n+              >\n+                <button\n+                  name=\"sendInvite\"\n+                  class=\"dropbtn btn banner__primary__btn white__text bt__font12__pad113\"\n+                  (click)=\"sendInvitation()\"\n+                >\n+                  {{ sendResend }}\n+                </button>\n+              </div>\n+              <div\n+                class=\"sendResendActiveClass\"\n+                *ngIf=\"\n+                  activeTab == 'new' ||\n+                  activeTab == 'invited' ||\n+                  activeTab == 'disable'\n+                \"\n+              >\n+                <button\n+                  name=\"toggleInvite\"\n+                  class=\"btn banner__default__btn flex__row__reverse pad__5__13 bt__font12__pad113\"\n+                  (click)=\"toggleInvitation()\"\n+                >\n+                  {{ enableDisable }}\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+      <div class=\"tab-content site__table\">\n+        <div>\n+          <table\n+            class=\"table table-striped\"\n+            [mfData]=\"\n+              siteParticipants.participantRegistryDetail.registryParticipants\n+            \"\n+            #mf=\"mfDataTable\"\n+            [mfRowsOnPage]=\"10\"\n+          >\n+            <thead>\n+              <tr>\n+                <span\n+                  class=\"sort__by__text mobile__view mr-sm\"\n+                  style=\"background: transparent;\"\n+                >\n+                  Sort By:\n+                </span>\n+                <th *ngIf=\"activeTab != 'new'\">\n+                  <mfDefaultSorter by=\"name\">Participant Email</mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'new'\">\n+                  <mfDefaultSorter by=\"name\">\n+                    <div class=\"form-group mb-none\">\n+                      <label for=\"css\">Participant Email</label>\n+                    </div>\n+                  </mfDefaultSorter>\n+                </th>\n+\n+                <th *ngIf=\"activeTab == 'all'\">\n+                  <mfDefaultSorter by=\"onboardingStatus\">\n+                    Onboarding Status\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'invited'\">\n+                  <mfDefaultSorter by=\"invitedDate\">\n+                    Last Invited On\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'disabled'\">\n+                  <mfDefaultSorter by=\"invitedDate\">\n+                    Date Disabled\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab != 'new'\">\n+                  <mfDefaultSorter by=\"enrollmentStatus\">\n+                    Enrollment Status\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'all'\">\n+                  <mfDefaultSorter by=\"enrollmentDate\">\n+                    Enrollment Date\n+                  </mfDefaultSorter>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              <tr *ngFor=\"let participant of mf.data\">\n+                <!-- for all Selected -->\n+                <td\n+                  *ngIf=\"activeTab == 'all'\"\n+                  (click)=\"redirectParticipant(participant.id)\"\n+                >\n+                  <span class=\"no_st_en\">{{ participant.email }}</span>\n+                </td>\n+\n+                <!-- for New Selected -->\n+                <td *ngIf=\"activeTab == 'new'\">\n+                  <div>\n+                    <div class=\"form-group mb-none\">\n+                      <input\n+                        type=\"checkbox\"\n+                        id=\"{{ participant.id }}\"\n+                        (change)=\"rowCheckBoxChange($event)\"\n+                      />\n+                      <label for=\"{{ participant.id }}\">\n+                        <span\n+                          class=\"no_st_en\"\n+                          (click)=\"redirectParticipant(participant.id)\"\n+                        >\n+                          {{ participant.email }}\n+                        </span>\n+                      </label>\n+                    </div>\n+                  </div>\n+                </td>\n+                <td *ngIf=\"activeTab == 'all'\">\n+                  <div\n+                    [ngClass]=\"{\n+                      participant__label:\n+                        participant.onboardingStatus ==\n+                        onBoardingStatus.Invited,\n+                      inactive__text:\n+                        participant.onboardingStatus ==\n+                        onBoardingStatus.Disabled\n+                    }\"\n+                  >\n+                    {{ participant.onboardingStatus }}\n+                  </div>\n+                </td>\n+\n+                <!-- For Invited  -->\n+                <td *ngIf=\"activeTab == 'invited'\">\n+                  <div>\n+                    <div class=\"form-group mb-none\">\n+                      <div\n+                        *ngIf=\"participant.enrollmentStatus == 'Yet to Enroll'\"\n+                      >\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"{{ participant.id }}\"\n+                          (change)=\"rowCheckBoxChange($event)\"\n+                        />\n+                        <label for=\"{{ participant.id }}\">\n+                          <span\n+                            class=\"no_st_en\"\n+                            (click)=\"redirectParticipant(participant.id)\"\n+                          >\n+                            {{ participant.email }}\n+                          </span>\n+                        </label>\n+                      </div>\n+                      <div\n+                        *ngIf=\"participant.enrollmentStatus != 'Yet to Enroll'\"\n+                      >\n+                        <span (click)=\"redirectParticipant(participant.id)\">\n+                          {{ participant.email }}\n+                        </span>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </td>\n+                <td *ngIf=\"activeTab == 'invited'\">\n+                  {{ participant.invitedDate }}\n+                </td>\n+                <!-- For Disabled -->\n+                <td *ngIf=\"activeTab === 'disabled'\">\n+                  <div>\n+                    <div class=\"form-group mb-none\">\n+                      <input\n+                        type=\"checkbox\"\n+                        id=\"{{ participant.id }}\"\n+                        (change)=\"rowCheckBoxChange($event)\"\n+                      />\n+                      <label for=\"{{ participant.id }}\">\n+                        <span\n+                          class=\"no_st_en\"\n+                          (click)=\"redirectParticipant(participant.id)\"\n+                        >\n+                          {{ participant.email }}\n+                        </span>\n+                      </label>\n+                    </div>\n+                  </div>\n+                </td>\n+                <td *ngIf=\"activeTab === 'disabled'\">\n+                  {{ participant.invitedDate }}\n+                </td>\n+                <!-- Belongs to all and invited and disabled  -->\n+                <td *ngIf=\"activeTab != 'new'\">\n+                  <div\n+                    [ngClass]=\"{\n+                      participant__label:\n+                        participant.enrollmentStatus == 'Enrolled',\n+                      inactive__text:\n+                        participant.enrollmentStatus == 'Withdrawn'\n+                    }\"\n+                  >\n+                    {{ participant.enrollmentStatus }}\n+                  </div>\n+                </td>\n+                <!-- Belongs to all -->\n+                <td *ngIf=\"activeTab == 'all'\">\n+                  {{ participant.enrollmentDate }}\n+                </td>\n+              </tr>\n+            </tbody>\n+            <tfoot>\n+              <tr>\n+                <td colspan=\"4\">\n+                  <mfBootstrapPaginator></mfBootstrapPaginator>\n+                </td>\n+              </tr>\n+            </tfoot>\n+          </table>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <ng-template #template>\n+      <div class=\"modal-body modal__body\"></div>\n+    </ng-template>\n+\n+    <ng-template #template1>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 552}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NzA1OQ==", "bodyText": "This needs a more descriptive name", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487057059", "createdAt": "2020-09-11T13:48:19Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.html", "diffHunk": "@@ -0,0 +1,556 @@\n+<ng-container *ngIf=\"siteParticipants$ | async as siteParticipants\">\n+  <div>\n+    <div class=\"subheader p-none pl-none\">\n+      <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+          <div\n+            class=\"subheader__title flex__justify__space-between align__items__baseline\"\n+          >\n+            <div>\n+              <a routerLink=\"/coordinator/studies/sites\">\n+                <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+              </a>\n+            </div>\n+            <div>\n+              <div class=\"mb-xs\">\n+                Site Participant Registry\n+                <span\n+                  *ngIf=\"siteParticipants.participantRegistryDetail.siteStatus\"\n+                  class=\"active__\"\n+                >\n+                  {{\n+                    siteParticipants.participantRegistryDetail.siteStatus === 1\n+                      ? \"Active\"\n+                      : \"Inactive\"\n+                  }}\n+                </span>\n+              </div>\n+              <div class=\"display-inline-flex overflow__auto\">\n+                <div class=\"pr-xlg\">\n+                  <div class=\"banner__label\">\n+                    {{\n+                      siteParticipants.participantRegistryDetail\n+                        .customLocationId\n+                    }}\n+                  </div>\n+                  <div class=\"banner__text\">\n+                    {{\n+                      siteParticipants.participantRegistryDetail.locationName\n+                    }}\n+                  </div>\n+                </div>\n+                <div class=\"pr-xlg\">\n+                  <div class=\"banner__label\">\n+                    {{\n+                      siteParticipants.participantRegistryDetail.customStudyId\n+                    }}\n+                  </div>\n+                  <div class=\"banner__text\">\n+                    {{ siteParticipants.participantRegistryDetail.studyName }}\n+                  </div>\n+                </div>\n+                <div>\n+                  <div class=\"banner__label\">\n+                    {{ siteParticipants.participantRegistryDetail.customAppId }}\n+                  </div>\n+                  <div class=\"banner__text\">\n+                    {{ siteParticipants.participantRegistryDetail.appName }}\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+          <div class=\"desk__view\">\n+            <div class=\"flex__justify__space-between\">\n+              <div>\n+                <div class=\"dropdown\">\n+                  <button\n+                    name=\"btnToggleParticipant\"\n+                    class=\"dropbtn btn banner__primary__btn mr-sm tnsb\"\n+                    (click)=\"toggleParticipant()\"\n+                  >\n+                    Add Participants\n+                    <i class=\"fa fa-caret-down\"></i>\n+                  </button>\n+                  <div\n+                    [ngClass]=\"toggLeDisplay ? 'show' : ''\"\n+                    class=\"dropdown-content participantSlideDown\"\n+                  >\n+                    <div class=\"flex__justify__space-between mb-xs\">\n+                      <div class=\"mr-sm\">\n+                        <button\n+                          class=\"primary__btn font__bold\"\n+                          (click)=\"openModal(template)\"\n+                        >\n+                          Add Email\n+                        </button>\n+                      </div>\n+                      <div>\n+                        <button\n+                          class=\"primary__btn font__bold\"\n+                          (click)=\"openModal(template1)\"\n+                        >\n+                          Import Email List\n+                        </button>\n+                      </div>\n+                    </div>\n+                    <div class=\"flex__row__reverse\">\n+                      <a\n+                        download=\"Email_Import_Template\"\n+                        target=\"_blank\"\n+                        href=\"/assets/Email_Import_Template.xlsx\"\n+                        class=\"p-none\"\n+                      >\n+                        <div class=\"download__text\">Download Template</div>\n+                      </a>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div>\n+                <button\n+                  name=\"buttonDecommision\"\n+                  class=\"btn banner__default__btn flex__row__reverse pad__5__13\"\n+                  (click)=\"decommissionSite()\"\n+                >\n+                  {{\n+                    siteParticipants.participantRegistryDetail.siteStatus === 1\n+                      ? \"Decommission Site for Study\"\n+                      : \"Activate Site for Study\"\n+                  }}\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <!-- ForMobile View  -->\n+    <div class=\"mobile__view yel__tabs\">\n+      <div class=\"p-md pb-none\">\n+        <div class=\"flex__ flex__justify__center\">\n+          <div>\n+            <div class=\"dropdown\">\n+              <button\n+                name=\"btnToggleParticipant\"\n+                class=\"dropbtn btn banner__primary__btn mr-sm font12\"\n+                (click)=\"toggleParticipant()\"\n+              >\n+                Add Participants\n+                <i class=\"fa fa-caret-down\"></i>\n+              </button>\n+              <div\n+                [ngClass]=\"toggLeDisplay ? 'show' : ''\"\n+                lass=\"dropdown-content participantSlideDown\"\n+              >\n+                <div class=\"flex__justify__space-between mb-xs\">\n+                  <div class=\"mr-sm\">\n+                    <button\n+                      class=\"primary__btn font__bold\"\n+                      (click)=\"openModal(template)\"\n+                    >\n+                      Add Email\n+                    </button>\n+                  </div>\n+                  <div>\n+                    <button\n+                      class=\"primary__btn font__bold\"\n+                      (click)=\"openModal(template1)\"\n+                    >\n+                      Import Email List\n+                    </button>\n+                  </div>\n+                </div>\n+                <div class=\"flex__row__reverse\">\n+                  <a\n+                    download=\"Email_Import_Template\"\n+                    target=\"_blank\"\n+                    href=\"/assets/Email_Import_Template.xlsx\"\n+                    class=\"p-none\"\n+                  >\n+                    <div class=\"download__text\">Download Template</div>\n+                  </a>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+          <div>\n+            <button\n+              name=\"buttonDecommision\"\n+              class=\"btn banner__default__btn flex__row__reverse pad__5__13 font12\"\n+              (click)=\"decommissionSite()\"\n+            >\n+              Decommission Site for Study\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+      <div>\n+        <ul class=\"nav nav-tabs\">\n+          <li [ngClass]=\"{active: activeTab == 'all'}\">\n+            <a data-toggle=\"tab\" (click)=\"changeTab('all')\">\n+              All\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.A\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li [ngClass]=\"{active: activeTab == 'new'}\">\n+            <a class=\"classNew\" data-toggle=\"tab\" (click)=\"changeTab('new')\">\n+              New\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.N\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li [ngClass]=\"{active: activeTab == 'invited'}\">\n+            <a data-toggle=\"tab\" (click)=\"changeTab('invited')\">\n+              Invited\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.I\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li [ngClass]=\"{active: activeTab == 'disabled'}\">\n+            <a data-toggle=\"tab\" (click)=\"changeTab('disabled')\">\n+              Disabled\n+              <span class=\"font11\">\n+                ({{\n+                  siteParticipants.participantRegistryDetail.countByStatus.D\n+                }})\n+              </span>\n+            </a>\n+          </li>\n+          <li></li>\n+        </ul>\n+      </div>\n+      <div class=\"sred\">\n+        <div class=\"flex__ flex__justify__center\">\n+          <div\n+            *ngIf=\"activeTab == 'new' || activeTab == 'invited'\"\n+            class=\"mr-sm\"\n+          >\n+            <button\n+              class=\"dropbtn btn banner__primary__btn white__text bt__font12__pad113\"\n+              (click)=\"sendInvitation()\"\n+            >\n+              {{ sendResend }}\n+            </button>\n+          </div>\n+\n+          <div\n+            class=\"sendResendActiveClass\"\n+            *ngIf=\"\n+              activeTab == 'new' ||\n+              activeTab == 'invited' ||\n+              activeTab == 'disable'\n+            \"\n+          >\n+            <button\n+              class=\"btn banner__default__btn flex__row__reverse pad__5__13 bt__font12__pad113\"\n+              (click)=\"toggleInvitation()\"\n+            >\n+              {{ enableDisable }}\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <div class=\"max__w__1280 p-none site__participant\">\n+      <div class=\"desk__view\">\n+        <div\n+          class=\"flex__justify__space-between bg__white yel__tabs border-bottom__dee2e6\"\n+        >\n+          <div>\n+            <ul class=\"nav nav-tabs\">\n+              <li [ngClass]=\"{active: activeTab == 'all'}\">\n+                <a data-toggle=\"tab\" (click)=\"changeTab('all')\">\n+                  All\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .A\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li [ngClass]=\"{active: activeTab == 'new'}\">\n+                <a\n+                  class=\"classNew\"\n+                  data-toggle=\"tab\"\n+                  (click)=\"changeTab('new')\"\n+                >\n+                  New\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .N\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li [ngClass]=\"{active: activeTab == 'invited'}\">\n+                <a data-toggle=\"tab\" (click)=\"changeTab('invited')\">\n+                  Invited\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .I\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li [ngClass]=\"{active: activeTab == 'disabled'}\">\n+                <a data-toggle=\"tab\" (click)=\"changeTab('disabled')\">\n+                  Disabled\n+                  <span class=\"font11\">\n+                    ({{\n+                      siteParticipants.participantRegistryDetail.countByStatus\n+                        .D\n+                    }})\n+                  </span>\n+                </a>\n+              </li>\n+              <li></li>\n+            </ul>\n+          </div>\n+          <div class=\"pr-xlg\">\n+            <div class=\"flex__justify__space-between mb-xs\">\n+              <div\n+                *ngIf=\"activeTab == 'new' || activeTab == 'invited'\"\n+                class=\"mr-sm\"\n+              >\n+                <button\n+                  name=\"sendInvite\"\n+                  class=\"dropbtn btn banner__primary__btn white__text bt__font12__pad113\"\n+                  (click)=\"sendInvitation()\"\n+                >\n+                  {{ sendResend }}\n+                </button>\n+              </div>\n+              <div\n+                class=\"sendResendActiveClass\"\n+                *ngIf=\"\n+                  activeTab == 'new' ||\n+                  activeTab == 'invited' ||\n+                  activeTab == 'disable'\n+                \"\n+              >\n+                <button\n+                  name=\"toggleInvite\"\n+                  class=\"btn banner__default__btn flex__row__reverse pad__5__13 bt__font12__pad113\"\n+                  (click)=\"toggleInvitation()\"\n+                >\n+                  {{ enableDisable }}\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+      <div class=\"tab-content site__table\">\n+        <div>\n+          <table\n+            class=\"table table-striped\"\n+            [mfData]=\"\n+              siteParticipants.participantRegistryDetail.registryParticipants\n+            \"\n+            #mf=\"mfDataTable\"\n+            [mfRowsOnPage]=\"10\"\n+          >\n+            <thead>\n+              <tr>\n+                <span\n+                  class=\"sort__by__text mobile__view mr-sm\"\n+                  style=\"background: transparent;\"\n+                >\n+                  Sort By:\n+                </span>\n+                <th *ngIf=\"activeTab != 'new'\">\n+                  <mfDefaultSorter by=\"name\">Participant Email</mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'new'\">\n+                  <mfDefaultSorter by=\"name\">\n+                    <div class=\"form-group mb-none\">\n+                      <label for=\"css\">Participant Email</label>\n+                    </div>\n+                  </mfDefaultSorter>\n+                </th>\n+\n+                <th *ngIf=\"activeTab == 'all'\">\n+                  <mfDefaultSorter by=\"onboardingStatus\">\n+                    Onboarding Status\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'invited'\">\n+                  <mfDefaultSorter by=\"invitedDate\">\n+                    Last Invited On\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'disabled'\">\n+                  <mfDefaultSorter by=\"invitedDate\">\n+                    Date Disabled\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab != 'new'\">\n+                  <mfDefaultSorter by=\"enrollmentStatus\">\n+                    Enrollment Status\n+                  </mfDefaultSorter>\n+                </th>\n+                <th *ngIf=\"activeTab == 'all'\">\n+                  <mfDefaultSorter by=\"enrollmentDate\">\n+                    Enrollment Date\n+                  </mfDefaultSorter>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              <tr *ngFor=\"let participant of mf.data\">\n+                <!-- for all Selected -->\n+                <td\n+                  *ngIf=\"activeTab == 'all'\"\n+                  (click)=\"redirectParticipant(participant.id)\"\n+                >\n+                  <span class=\"no_st_en\">{{ participant.email }}</span>\n+                </td>\n+\n+                <!-- for New Selected -->\n+                <td *ngIf=\"activeTab == 'new'\">\n+                  <div>\n+                    <div class=\"form-group mb-none\">\n+                      <input\n+                        type=\"checkbox\"\n+                        id=\"{{ participant.id }}\"\n+                        (change)=\"rowCheckBoxChange($event)\"\n+                      />\n+                      <label for=\"{{ participant.id }}\">\n+                        <span\n+                          class=\"no_st_en\"\n+                          (click)=\"redirectParticipant(participant.id)\"\n+                        >\n+                          {{ participant.email }}\n+                        </span>\n+                      </label>\n+                    </div>\n+                  </div>\n+                </td>\n+                <td *ngIf=\"activeTab == 'all'\">\n+                  <div\n+                    [ngClass]=\"{\n+                      participant__label:\n+                        participant.onboardingStatus ==\n+                        onBoardingStatus.Invited,\n+                      inactive__text:\n+                        participant.onboardingStatus ==\n+                        onBoardingStatus.Disabled\n+                    }\"\n+                  >\n+                    {{ participant.onboardingStatus }}\n+                  </div>\n+                </td>\n+\n+                <!-- For Invited  -->\n+                <td *ngIf=\"activeTab == 'invited'\">\n+                  <div>\n+                    <div class=\"form-group mb-none\">\n+                      <div\n+                        *ngIf=\"participant.enrollmentStatus == 'Yet to Enroll'\"\n+                      >\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"{{ participant.id }}\"\n+                          (change)=\"rowCheckBoxChange($event)\"\n+                        />\n+                        <label for=\"{{ participant.id }}\">\n+                          <span\n+                            class=\"no_st_en\"\n+                            (click)=\"redirectParticipant(participant.id)\"\n+                          >\n+                            {{ participant.email }}\n+                          </span>\n+                        </label>\n+                      </div>\n+                      <div\n+                        *ngIf=\"participant.enrollmentStatus != 'Yet to Enroll'\"\n+                      >\n+                        <span (click)=\"redirectParticipant(participant.id)\">\n+                          {{ participant.email }}\n+                        </span>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </td>\n+                <td *ngIf=\"activeTab == 'invited'\">\n+                  {{ participant.invitedDate }}\n+                </td>\n+                <!-- For Disabled -->\n+                <td *ngIf=\"activeTab === 'disabled'\">\n+                  <div>\n+                    <div class=\"form-group mb-none\">\n+                      <input\n+                        type=\"checkbox\"\n+                        id=\"{{ participant.id }}\"\n+                        (change)=\"rowCheckBoxChange($event)\"\n+                      />\n+                      <label for=\"{{ participant.id }}\">\n+                        <span\n+                          class=\"no_st_en\"\n+                          (click)=\"redirectParticipant(participant.id)\"\n+                        >\n+                          {{ participant.email }}\n+                        </span>\n+                      </label>\n+                    </div>\n+                  </div>\n+                </td>\n+                <td *ngIf=\"activeTab === 'disabled'\">\n+                  {{ participant.invitedDate }}\n+                </td>\n+                <!-- Belongs to all and invited and disabled  -->\n+                <td *ngIf=\"activeTab != 'new'\">\n+                  <div\n+                    [ngClass]=\"{\n+                      participant__label:\n+                        participant.enrollmentStatus == 'Enrolled',\n+                      inactive__text:\n+                        participant.enrollmentStatus == 'Withdrawn'\n+                    }\"\n+                  >\n+                    {{ participant.enrollmentStatus }}\n+                  </div>\n+                </td>\n+                <!-- Belongs to all -->\n+                <td *ngIf=\"activeTab == 'all'\">\n+                  {{ participant.enrollmentDate }}\n+                </td>\n+              </tr>\n+            </tbody>\n+            <tfoot>\n+              <tr>\n+                <td colspan=\"4\">\n+                  <mfBootstrapPaginator></mfBootstrapPaginator>\n+                </td>\n+              </tr>\n+            </tfoot>\n+          </table>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <ng-template #template>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 548}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MDYwMQ==", "bodyText": "you haven't done anything that would affect arrayOfuserId yet. these assertions will never fail. Also, why 11?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487060601", "createdAt": "2020-09-11T13:53:50Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,163 @@\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+  tick,\n+} from '@angular/core/testing';\n+import {SiteDetailsComponent} from './site-details.component';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {HttpClientModule} from '@angular/common/http';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {ToastrModule} from 'ngx-toastr';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {of} from 'rxjs';\n+import {SiteCoordinatorModule} from '../../../site-coordinator/site-coordinator.module';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {expectedSiteParticipantDetails} from 'src/app/entity/mock-sitedetail-data';\n+import {By} from '@angular/platform-browser';\n+import {NgxDataTableModule} from 'angular-9-datatable';\n+import {\n+  expectedToggleResponse,\n+  expectedSendInviteResponse,\n+  expectedDecommissionResponse,\n+} from 'src/app/entity/mock-participant-data';\n+import {SitesModule} from '../sites.module';\n+\n+describe('SiteDetailsComponent', () => {\n+  let component: SiteDetailsComponent;\n+  let fixture: ComponentFixture<SiteDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const siteDetailServiceSpy = jasmine.createSpyObj<SiteDetailsService>(\n+      'SiteDetailsService',\n+      {\n+        get: of(expectedSiteParticipantDetails),\n+        toggleInvitation: of(expectedToggleResponse),\n+        sendInvitation: of(expectedSendInviteResponse),\n+        siteDecommission: of(expectedDecommissionResponse),\n+      },\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [SiteDetailsComponent],\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule,\n+        SitesModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        SiteCoordinatorModule,\n+        NgxDataTableModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: SiteDetailsService, useValue: siteDetailServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(SiteDetailsComponent);\n+        component = fixture.componentInstance;\n+      });\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(SiteDetailsComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  describe('after get site participants', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+\n+    it('should change tab on click on tab', fakeAsync(async () => {\n+      fixture.detectChanges();\n+      const changetab = fixture.debugElement.query(By.css('.classNew'))\n+        .nativeElement as HTMLInputElement;\n+      component.activeTab = 'new';\n+      const changeTabSpy = spyOn(component, 'changeTab');\n+      fixture.detectChanges();\n+      tick();\n+      changetab.click();\n+      fixture.detectChanges();\n+      await fixture.whenStable();\n+      expect(component.activeTab).toEqual('new');\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+    it('it should open default tab when site details is loaded', () => {\n+      expect(component.activeTab).toEqual('all');\n+    });\n+\n+    it('should decommission the site when  button is clicked', fakeAsync(async () => {\n+      fixture.autoDetectChanges();\n+      component.siteId = '2';\n+      const decommisionButton = fixture.debugElement.query(\n+        By.css('[name=\"buttonDecommision\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(component.siteId).toBeDefined();\n+      const changeTabSpy = spyOn(component, 'decommissionSite');\n+      decommisionButton.click();\n+      tick(10000);\n+      await fixture.whenStable();\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+\n+    it('should enable/disable the invitation when toggle button is clicked', fakeAsync(async () => {\n+      component.activeTab = 'invited';\n+      fixture.detectChanges();\n+      expect(component.activeTab).toEqual('invited');\n+      fixture.detectChanges();\n+      const toggleInviteButton = fixture.debugElement.query(\n+        By.css('[name=\"toggleInvite\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(toggleInviteButton).toBeTruthy();\n+      fixture.detectChanges();\n+      component.arrayOfuserId = ['1', '2'];\n+      const toggleChangeSpy = spyOn(component, 'toggleInvitation');\n+      expect(component.arrayOfuserId.length > 0).toBeTruthy();\n+      expect(component.arrayOfuserId.length < 11).toBeTruthy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MDg5NA==", "bodyText": "same here.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487060894", "createdAt": "2020-09-11T13:54:15Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,163 @@\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+  tick,\n+} from '@angular/core/testing';\n+import {SiteDetailsComponent} from './site-details.component';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {HttpClientModule} from '@angular/common/http';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {ToastrModule} from 'ngx-toastr';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {of} from 'rxjs';\n+import {SiteCoordinatorModule} from '../../../site-coordinator/site-coordinator.module';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {expectedSiteParticipantDetails} from 'src/app/entity/mock-sitedetail-data';\n+import {By} from '@angular/platform-browser';\n+import {NgxDataTableModule} from 'angular-9-datatable';\n+import {\n+  expectedToggleResponse,\n+  expectedSendInviteResponse,\n+  expectedDecommissionResponse,\n+} from 'src/app/entity/mock-participant-data';\n+import {SitesModule} from '../sites.module';\n+\n+describe('SiteDetailsComponent', () => {\n+  let component: SiteDetailsComponent;\n+  let fixture: ComponentFixture<SiteDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const siteDetailServiceSpy = jasmine.createSpyObj<SiteDetailsService>(\n+      'SiteDetailsService',\n+      {\n+        get: of(expectedSiteParticipantDetails),\n+        toggleInvitation: of(expectedToggleResponse),\n+        sendInvitation: of(expectedSendInviteResponse),\n+        siteDecommission: of(expectedDecommissionResponse),\n+      },\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [SiteDetailsComponent],\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule,\n+        SitesModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        SiteCoordinatorModule,\n+        NgxDataTableModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: SiteDetailsService, useValue: siteDetailServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(SiteDetailsComponent);\n+        component = fixture.componentInstance;\n+      });\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(SiteDetailsComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  describe('after get site participants', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+\n+    it('should change tab on click on tab', fakeAsync(async () => {\n+      fixture.detectChanges();\n+      const changetab = fixture.debugElement.query(By.css('.classNew'))\n+        .nativeElement as HTMLInputElement;\n+      component.activeTab = 'new';\n+      const changeTabSpy = spyOn(component, 'changeTab');\n+      fixture.detectChanges();\n+      tick();\n+      changetab.click();\n+      fixture.detectChanges();\n+      await fixture.whenStable();\n+      expect(component.activeTab).toEqual('new');\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+    it('it should open default tab when site details is loaded', () => {\n+      expect(component.activeTab).toEqual('all');\n+    });\n+\n+    it('should decommission the site when  button is clicked', fakeAsync(async () => {\n+      fixture.autoDetectChanges();\n+      component.siteId = '2';\n+      const decommisionButton = fixture.debugElement.query(\n+        By.css('[name=\"buttonDecommision\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(component.siteId).toBeDefined();\n+      const changeTabSpy = spyOn(component, 'decommissionSite');\n+      decommisionButton.click();\n+      tick(10000);\n+      await fixture.whenStable();\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+\n+    it('should enable/disable the invitation when toggle button is clicked', fakeAsync(async () => {\n+      component.activeTab = 'invited';\n+      fixture.detectChanges();\n+      expect(component.activeTab).toEqual('invited');\n+      fixture.detectChanges();\n+      const toggleInviteButton = fixture.debugElement.query(\n+        By.css('[name=\"toggleInvite\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(toggleInviteButton).toBeTruthy();\n+      fixture.detectChanges();\n+      component.arrayOfuserId = ['1', '2'];\n+      const toggleChangeSpy = spyOn(component, 'toggleInvitation');\n+      expect(component.arrayOfuserId.length > 0).toBeTruthy();\n+      expect(component.arrayOfuserId.length < 11).toBeTruthy();\n+      fixture.detectChanges();\n+      toggleInviteButton.click();\n+      tick(1000);\n+      await fixture.whenStable();\n+      expect(toggleChangeSpy).toHaveBeenCalledTimes(1);\n+    }));\n+\n+    it('should send the invitation when send button is clicked', fakeAsync(async () => {\n+      component.activeTab = 'new';\n+      fixture.detectChanges();\n+      expect(component.activeTab).toEqual('new');\n+      fixture.detectChanges();\n+      const sendInviteButton = fixture.debugElement.query(\n+        By.css('[name=\"sendInvite\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(sendInviteButton).toBeTruthy();\n+      component.arrayOfuserId = ['1', '2'];\n+      expect(component.arrayOfuserId.length > 0).toBeTruthy();\n+      expect(component.arrayOfuserId.length < 11).toBeTruthy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MTE2OA==", "bodyText": "remove this, why would it have changed from line 122?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487061168", "createdAt": "2020-09-11T13:54:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,163 @@\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+  tick,\n+} from '@angular/core/testing';\n+import {SiteDetailsComponent} from './site-details.component';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {HttpClientModule} from '@angular/common/http';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {ToastrModule} from 'ngx-toastr';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {of} from 'rxjs';\n+import {SiteCoordinatorModule} from '../../../site-coordinator/site-coordinator.module';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {expectedSiteParticipantDetails} from 'src/app/entity/mock-sitedetail-data';\n+import {By} from '@angular/platform-browser';\n+import {NgxDataTableModule} from 'angular-9-datatable';\n+import {\n+  expectedToggleResponse,\n+  expectedSendInviteResponse,\n+  expectedDecommissionResponse,\n+} from 'src/app/entity/mock-participant-data';\n+import {SitesModule} from '../sites.module';\n+\n+describe('SiteDetailsComponent', () => {\n+  let component: SiteDetailsComponent;\n+  let fixture: ComponentFixture<SiteDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const siteDetailServiceSpy = jasmine.createSpyObj<SiteDetailsService>(\n+      'SiteDetailsService',\n+      {\n+        get: of(expectedSiteParticipantDetails),\n+        toggleInvitation: of(expectedToggleResponse),\n+        sendInvitation: of(expectedSendInviteResponse),\n+        siteDecommission: of(expectedDecommissionResponse),\n+      },\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [SiteDetailsComponent],\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule,\n+        SitesModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        SiteCoordinatorModule,\n+        NgxDataTableModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: SiteDetailsService, useValue: siteDetailServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(SiteDetailsComponent);\n+        component = fixture.componentInstance;\n+      });\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(SiteDetailsComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  describe('after get site participants', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+\n+    it('should change tab on click on tab', fakeAsync(async () => {\n+      fixture.detectChanges();\n+      const changetab = fixture.debugElement.query(By.css('.classNew'))\n+        .nativeElement as HTMLInputElement;\n+      component.activeTab = 'new';\n+      const changeTabSpy = spyOn(component, 'changeTab');\n+      fixture.detectChanges();\n+      tick();\n+      changetab.click();\n+      fixture.detectChanges();\n+      await fixture.whenStable();\n+      expect(component.activeTab).toEqual('new');\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+    it('it should open default tab when site details is loaded', () => {\n+      expect(component.activeTab).toEqual('all');\n+    });\n+\n+    it('should decommission the site when  button is clicked', fakeAsync(async () => {\n+      fixture.autoDetectChanges();\n+      component.siteId = '2';\n+      const decommisionButton = fixture.debugElement.query(\n+        By.css('[name=\"buttonDecommision\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(component.siteId).toBeDefined();\n+      const changeTabSpy = spyOn(component, 'decommissionSite');\n+      decommisionButton.click();\n+      tick(10000);\n+      await fixture.whenStable();\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+\n+    it('should enable/disable the invitation when toggle button is clicked', fakeAsync(async () => {\n+      component.activeTab = 'invited';\n+      fixture.detectChanges();\n+      expect(component.activeTab).toEqual('invited');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MTI2Nw==", "bodyText": "remove this, why would it have changed from line 143?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487061267", "createdAt": "2020-09-11T13:54:50Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,163 @@\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+  tick,\n+} from '@angular/core/testing';\n+import {SiteDetailsComponent} from './site-details.component';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {HttpClientModule} from '@angular/common/http';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {ToastrModule} from 'ngx-toastr';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {of} from 'rxjs';\n+import {SiteCoordinatorModule} from '../../../site-coordinator/site-coordinator.module';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {expectedSiteParticipantDetails} from 'src/app/entity/mock-sitedetail-data';\n+import {By} from '@angular/platform-browser';\n+import {NgxDataTableModule} from 'angular-9-datatable';\n+import {\n+  expectedToggleResponse,\n+  expectedSendInviteResponse,\n+  expectedDecommissionResponse,\n+} from 'src/app/entity/mock-participant-data';\n+import {SitesModule} from '../sites.module';\n+\n+describe('SiteDetailsComponent', () => {\n+  let component: SiteDetailsComponent;\n+  let fixture: ComponentFixture<SiteDetailsComponent>;\n+\n+  beforeEach(async(async () => {\n+    const siteDetailServiceSpy = jasmine.createSpyObj<SiteDetailsService>(\n+      'SiteDetailsService',\n+      {\n+        get: of(expectedSiteParticipantDetails),\n+        toggleInvitation: of(expectedToggleResponse),\n+        sendInvitation: of(expectedSendInviteResponse),\n+        siteDecommission: of(expectedDecommissionResponse),\n+      },\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [SiteDetailsComponent],\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule,\n+        SitesModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        SiteCoordinatorModule,\n+        NgxDataTableModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: SiteDetailsService, useValue: siteDetailServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(SiteDetailsComponent);\n+        component = fixture.componentInstance;\n+      });\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(SiteDetailsComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  describe('after get site participants', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+\n+    it('should change tab on click on tab', fakeAsync(async () => {\n+      fixture.detectChanges();\n+      const changetab = fixture.debugElement.query(By.css('.classNew'))\n+        .nativeElement as HTMLInputElement;\n+      component.activeTab = 'new';\n+      const changeTabSpy = spyOn(component, 'changeTab');\n+      fixture.detectChanges();\n+      tick();\n+      changetab.click();\n+      fixture.detectChanges();\n+      await fixture.whenStable();\n+      expect(component.activeTab).toEqual('new');\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+    it('it should open default tab when site details is loaded', () => {\n+      expect(component.activeTab).toEqual('all');\n+    });\n+\n+    it('should decommission the site when  button is clicked', fakeAsync(async () => {\n+      fixture.autoDetectChanges();\n+      component.siteId = '2';\n+      const decommisionButton = fixture.debugElement.query(\n+        By.css('[name=\"buttonDecommision\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(component.siteId).toBeDefined();\n+      const changeTabSpy = spyOn(component, 'decommissionSite');\n+      decommisionButton.click();\n+      tick(10000);\n+      await fixture.whenStable();\n+      expect(changeTabSpy).toHaveBeenCalledTimes(1);\n+    }));\n+\n+    it('should enable/disable the invitation when toggle button is clicked', fakeAsync(async () => {\n+      component.activeTab = 'invited';\n+      fixture.detectChanges();\n+      expect(component.activeTab).toEqual('invited');\n+      fixture.detectChanges();\n+      const toggleInviteButton = fixture.debugElement.query(\n+        By.css('[name=\"toggleInvite\"]'),\n+      ).nativeElement as HTMLInputElement;\n+      expect(toggleInviteButton).toBeTruthy();\n+      fixture.detectChanges();\n+      component.arrayOfuserId = ['1', '2'];\n+      const toggleChangeSpy = spyOn(component, 'toggleInvitation');\n+      expect(component.arrayOfuserId.length > 0).toBeTruthy();\n+      expect(component.arrayOfuserId.length < 11).toBeTruthy();\n+      fixture.detectChanges();\n+      toggleInviteButton.click();\n+      tick(1000);\n+      await fixture.whenStable();\n+      expect(toggleChangeSpy).toHaveBeenCalledTimes(1);\n+    }));\n+\n+    it('should send the invitation when send button is clicked', fakeAsync(async () => {\n+      component.activeTab = 'new';\n+      fixture.detectChanges();\n+      expect(component.activeTab).toEqual('new');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MTg1Mg==", "bodyText": "nit: constructor after properties.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487061852", "createdAt": "2020-09-11T13:55:42Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MjAzNw==", "bodyText": "typo", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487062037", "createdAt": "2020-09-11T13:56:02Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MjE2Ng==", "bodyText": "userIds", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487062166", "createdAt": "2020-09-11T13:56:10Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2MjQyOA==", "bodyText": "typo: templateRef", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487062428", "createdAt": "2020-09-11T13:56:29Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2Mjc5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (this.toggLeDisplay) {\n          \n          \n            \n                  this.toggLeDisplay = false;\n          \n          \n            \n                } else this.toggLeDisplay = true;\n          \n          \n            \n            this.toggleDisplay = !this.toggleDisplay", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487062791", "createdAt": "2020-09-11T13:57:04Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2Mjk2Ng==", "bodyText": "typo: fetchingOption", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487062966", "createdAt": "2020-09-11T13:57:22Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NDczNQ==", "bodyText": "There's no error on this line. Please remove", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487064735", "createdAt": "2020-09-11T14:00:08Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NTA0Mg==", "bodyText": "typo. You should be using an enum so this doesn't happen.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487065042", "createdAt": "2020-09-11T14:00:36Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NTcxNg==", "bodyText": "nit: should be the same as this.arrayOfuserId = []. I don't see why you'd have to modify it in place.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487065716", "createdAt": "2020-09-11T14:01:44Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggLeDisplay = false;\n+    this.arrayOfuserId.splice(0, this.arrayOfuserId.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NTg3OA==", "bodyText": "remove logging statement", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487065878", "createdAt": "2020-09-11T14:02:02Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggLeDisplay = false;\n+    this.arrayOfuserId.splice(0, this.arrayOfuserId.length);\n+    this.fetchSiteParticipant(this.activeTab);\n+  }\n+  redirectParticipant(userId: string): void {\n+    void this.router.navigate(['/user/participantDetail', userId]);\n+  }\n+  rowCheckBoxChange(event: Event): void {\n+    const checkbox = event.target as HTMLInputElement;\n+    if (checkbox.checked) {\n+      this.arrayOfuserId.push(checkbox.id);\n+    } else {\n+      this.arrayOfuserId = this.arrayOfuserId.filter(\n+        (item) => item !== checkbox.id,\n+      );\n+    }\n+    console.log(this.arrayOfuserId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NjQxOQ==", "bodyText": "10 is not greater than 11 or less than 10. But why this restriction, seems very low.\nThis should also be a constant on the class (no magic numbers).", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487066419", "createdAt": "2020-09-11T14:02:51Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggLeDisplay = false;\n+    this.arrayOfuserId.splice(0, this.arrayOfuserId.length);\n+    this.fetchSiteParticipant(this.activeTab);\n+  }\n+  redirectParticipant(userId: string): void {\n+    void this.router.navigate(['/user/participantDetail', userId]);\n+  }\n+  rowCheckBoxChange(event: Event): void {\n+    const checkbox = event.target as HTMLInputElement;\n+    if (checkbox.checked) {\n+      this.arrayOfuserId.push(checkbox.id);\n+    } else {\n+      this.arrayOfuserId = this.arrayOfuserId.filter(\n+        (item) => item !== checkbox.id,\n+      );\n+    }\n+    console.log(this.arrayOfuserId);\n+  }\n+  decommissionSite(): void {\n+    this.subs.add(\n+      this.particpantDetailService\n+        .siteDecommission(this.siteId)\n+        .subscribe((successResponse: ApiResponse) => {\n+          if (getMessage(successResponse.code)) {\n+            this.toastr.success(getMessage(successResponse.code));\n+          } else {\n+            this.toastr.success(successResponse.message);\n+            void this.router.navigate(['/sites']);\n+          }\n+        }),\n+    );\n+  }\n+  sendInvitation(): void {\n+    if (this.arrayOfuserId.length > 0) {\n+      if (this.arrayOfuserId.length > 11) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NjUwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    'Please select atleast one participant for sending invitation',\n          \n          \n            \n                    'Please select at least one participant',", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487066501", "createdAt": "2020-09-11T14:02:59Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggLeDisplay = false;\n+    this.arrayOfuserId.splice(0, this.arrayOfuserId.length);\n+    this.fetchSiteParticipant(this.activeTab);\n+  }\n+  redirectParticipant(userId: string): void {\n+    void this.router.navigate(['/user/participantDetail', userId]);\n+  }\n+  rowCheckBoxChange(event: Event): void {\n+    const checkbox = event.target as HTMLInputElement;\n+    if (checkbox.checked) {\n+      this.arrayOfuserId.push(checkbox.id);\n+    } else {\n+      this.arrayOfuserId = this.arrayOfuserId.filter(\n+        (item) => item !== checkbox.id,\n+      );\n+    }\n+    console.log(this.arrayOfuserId);\n+  }\n+  decommissionSite(): void {\n+    this.subs.add(\n+      this.particpantDetailService\n+        .siteDecommission(this.siteId)\n+        .subscribe((successResponse: ApiResponse) => {\n+          if (getMessage(successResponse.code)) {\n+            this.toastr.success(getMessage(successResponse.code));\n+          } else {\n+            this.toastr.success(successResponse.message);\n+            void this.router.navigate(['/sites']);\n+          }\n+        }),\n+    );\n+  }\n+  sendInvitation(): void {\n+    if (this.arrayOfuserId.length > 0) {\n+      if (this.arrayOfuserId.length > 11) {\n+        this.toastr.error('Please select less than 10 participants');\n+      } else {\n+        const sendInvitations = {\n+          ids: this.arrayOfuserId,\n+        };\n+        this.subs.add(\n+          this.particpantDetailService\n+            .sendInvitation(this.siteId, sendInvitations)\n+            .subscribe((successResponse: UpdateInviteResponse) => {\n+              if (getMessage(successResponse.code)) {\n+                this.toastr.success(getMessage(successResponse.code));\n+              } else {\n+                this.toastr.success(successResponse.message);\n+                this.changeTab('invited');\n+              }\n+            }),\n+        );\n+      }\n+    } else {\n+      this.toastr.error(\n+        'Please select atleast one participant for sending invitation',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2ODA0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    status === '0'\n          \n          \n            \n                      ? 'Please select atleast one participant to disable'\n          \n          \n            \n                      : 'Please select atleast one participant for to enable',\n          \n          \n            \n                    'Please select at least one participant'", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487068044", "createdAt": "2020-09-11T14:05:27Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggLeDisplay = false;\n+    this.arrayOfuserId.splice(0, this.arrayOfuserId.length);\n+    this.fetchSiteParticipant(this.activeTab);\n+  }\n+  redirectParticipant(userId: string): void {\n+    void this.router.navigate(['/user/participantDetail', userId]);\n+  }\n+  rowCheckBoxChange(event: Event): void {\n+    const checkbox = event.target as HTMLInputElement;\n+    if (checkbox.checked) {\n+      this.arrayOfuserId.push(checkbox.id);\n+    } else {\n+      this.arrayOfuserId = this.arrayOfuserId.filter(\n+        (item) => item !== checkbox.id,\n+      );\n+    }\n+    console.log(this.arrayOfuserId);\n+  }\n+  decommissionSite(): void {\n+    this.subs.add(\n+      this.particpantDetailService\n+        .siteDecommission(this.siteId)\n+        .subscribe((successResponse: ApiResponse) => {\n+          if (getMessage(successResponse.code)) {\n+            this.toastr.success(getMessage(successResponse.code));\n+          } else {\n+            this.toastr.success(successResponse.message);\n+            void this.router.navigate(['/sites']);\n+          }\n+        }),\n+    );\n+  }\n+  sendInvitation(): void {\n+    if (this.arrayOfuserId.length > 0) {\n+      if (this.arrayOfuserId.length > 11) {\n+        this.toastr.error('Please select less than 10 participants');\n+      } else {\n+        const sendInvitations = {\n+          ids: this.arrayOfuserId,\n+        };\n+        this.subs.add(\n+          this.particpantDetailService\n+            .sendInvitation(this.siteId, sendInvitations)\n+            .subscribe((successResponse: UpdateInviteResponse) => {\n+              if (getMessage(successResponse.code)) {\n+                this.toastr.success(getMessage(successResponse.code));\n+              } else {\n+                this.toastr.success(successResponse.message);\n+                this.changeTab('invited');\n+              }\n+            }),\n+        );\n+      }\n+    } else {\n+      this.toastr.error(\n+        'Please select atleast one participant for sending invitation',\n+      );\n+    }\n+  }\n+  toggleInvitation(): void {\n+    if (this.arrayOfuserId.length > 0) {\n+      if (this.arrayOfuserId.length > 11) {\n+        this.toastr.error('Please select less than 10 participants');\n+      } else {\n+        const statusUpdate =\n+          this.activeTab === 'Enable' || this.activeTab === 'Invited'\n+            ? 'N'\n+            : 'D';\n+        const invitationUpdate = {\n+          ids: this.arrayOfuserId,\n+          status: statusUpdate,\n+        };\n+        this.subs.add(\n+          this.particpantDetailService\n+            .toggleInvitation(this.siteId, invitationUpdate)\n+            .subscribe((successResponse: ApiResponse) => {\n+              if (getMessage(successResponse.code)) {\n+                this.toastr.success(getMessage(successResponse.code));\n+              } else {\n+                this.toastr.success(successResponse.message);\n+                this.changeTab(status === 'enable' ? 'new' : 'disabled');\n+              }\n+            }),\n+        );\n+      }\n+    } else {\n+      this.toastr.error(\n+        status === '0'\n+          ? 'Please select atleast one participant to disable'\n+          : 'Please select atleast one participant for to enable',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2ODI0Mg==", "bodyText": "nit: onFileImportSuccess", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r487068242", "createdAt": "2020-09-11T14:05:45Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,185 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+  ) {\n+    super();\n+  }\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  activeTab = 'all';\n+  toggLeDisplay = false;\n+  arrayOfuserId: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  openModal(templateref: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateref);\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant('all');\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    if (this.toggLeDisplay) {\n+      this.toggLeDisplay = false;\n+    } else this.toggLeDisplay = true;\n+  }\n+  fetchSiteParticipant(fetcingOption: string): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetcingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        return siteDetails;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim());\n+  }\n+  changeTab(tab: string): void {\n+    this.sendResend = tab === 'new' ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === 'new' || tab === 'inivited'\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggLeDisplay = false;\n+    this.arrayOfuserId.splice(0, this.arrayOfuserId.length);\n+    this.fetchSiteParticipant(this.activeTab);\n+  }\n+  redirectParticipant(userId: string): void {\n+    void this.router.navigate(['/user/participantDetail', userId]);\n+  }\n+  rowCheckBoxChange(event: Event): void {\n+    const checkbox = event.target as HTMLInputElement;\n+    if (checkbox.checked) {\n+      this.arrayOfuserId.push(checkbox.id);\n+    } else {\n+      this.arrayOfuserId = this.arrayOfuserId.filter(\n+        (item) => item !== checkbox.id,\n+      );\n+    }\n+    console.log(this.arrayOfuserId);\n+  }\n+  decommissionSite(): void {\n+    this.subs.add(\n+      this.particpantDetailService\n+        .siteDecommission(this.siteId)\n+        .subscribe((successResponse: ApiResponse) => {\n+          if (getMessage(successResponse.code)) {\n+            this.toastr.success(getMessage(successResponse.code));\n+          } else {\n+            this.toastr.success(successResponse.message);\n+            void this.router.navigate(['/sites']);\n+          }\n+        }),\n+    );\n+  }\n+  sendInvitation(): void {\n+    if (this.arrayOfuserId.length > 0) {\n+      if (this.arrayOfuserId.length > 11) {\n+        this.toastr.error('Please select less than 10 participants');\n+      } else {\n+        const sendInvitations = {\n+          ids: this.arrayOfuserId,\n+        };\n+        this.subs.add(\n+          this.particpantDetailService\n+            .sendInvitation(this.siteId, sendInvitations)\n+            .subscribe((successResponse: UpdateInviteResponse) => {\n+              if (getMessage(successResponse.code)) {\n+                this.toastr.success(getMessage(successResponse.code));\n+              } else {\n+                this.toastr.success(successResponse.message);\n+                this.changeTab('invited');\n+              }\n+            }),\n+        );\n+      }\n+    } else {\n+      this.toastr.error(\n+        'Please select atleast one participant for sending invitation',\n+      );\n+    }\n+  }\n+  toggleInvitation(): void {\n+    if (this.arrayOfuserId.length > 0) {\n+      if (this.arrayOfuserId.length > 11) {\n+        this.toastr.error('Please select less than 10 participants');\n+      } else {\n+        const statusUpdate =\n+          this.activeTab === 'Enable' || this.activeTab === 'Invited'\n+            ? 'N'\n+            : 'D';\n+        const invitationUpdate = {\n+          ids: this.arrayOfuserId,\n+          status: statusUpdate,\n+        };\n+        this.subs.add(\n+          this.particpantDetailService\n+            .toggleInvitation(this.siteId, invitationUpdate)\n+            .subscribe((successResponse: ApiResponse) => {\n+              if (getMessage(successResponse.code)) {\n+                this.toastr.success(getMessage(successResponse.code));\n+              } else {\n+                this.toastr.success(successResponse.message);\n+                this.changeTab(status === 'enable' ? 'new' : 'disabled');\n+              }\n+            }),\n+        );\n+      }\n+    } else {\n+      this.toastr.error(\n+        status === '0'\n+          ? 'Please select atleast one participant to disable'\n+          : 'Please select atleast one participant for to enable',\n+      );\n+    }\n+  }\n+  onSucceedAddEmail(): void {\n+    this.modalRef.hide();\n+    this.fetchSiteParticipant(this.activeTab);\n+  }\n+  onSucceedFileImport(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "746e87e9c01f6c923568c3857b4f84798d1b6301"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/618f099b829b102386ee3eb92bdf3fb1dec45dab", "committedDate": "2020-09-14T12:47:33Z", "message": "code optimization\n\ncode optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "467e0addbdad60b44114909a409754c59fcdef7a", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/467e0addbdad60b44114909a409754c59fcdef7a", "committedDate": "2020-09-14T13:35:25Z", "message": "Git conflicts fix\n\nGit conflicts fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8601e1f0f19e97ce2bcd3bc83d390f7b65ba2f3f", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8601e1f0f19e97ce2bcd3bc83d390f7b65ba2f3f", "committedDate": "2020-09-14T13:36:43Z", "message": "Merge branch 'develop' into participant-manager-webapp-site-details-test-cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDU3NTYw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#pullrequestreview-488057560", "createdAt": "2020-09-14T18:59:45Z", "commit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo1OTo0NlrOHRik0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOToyNToyOFrOHRjb5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDMyMw==", "bodyText": "You can disable a rule for a block of code with\n/* eslint-disable @typescript-eslint/naming-convention */\n...\n/* eslint-enable @typescript-eslint/naming-convention */", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488154323", "createdAt": "2020-09-14T18:59:46Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/entity/mock-sitedetail-data.ts", "diffHunk": "@@ -52,11 +51,17 @@ export const expectedSiteParticipantDetails = {\n         consentHistory: [],\n       },\n     ],\n+\n     countByStatus: {\n+      // eslint-disable-next-line @typescript-eslint/naming-convention", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1OTkzMQ==", "bodyText": "break after a return is unreachable.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488159931", "createdAt": "2020-09-14T19:09:50Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -61,4 +58,25 @@ export class SiteDetailsService {\n       invitationToSend,\n     );\n   }\n+\n+  getInvitationType(fetchingOption: string): string {\n+    switch (fetchingOption) {\n+      case 'All':\n+        return '';\n+        break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2MDU2Ng==", "bodyText": "Don't build the url like this.\nReturn just 'N' and construct a params object in the caller.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488160566", "createdAt": "2020-09-14T19:10:55Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -61,4 +58,25 @@ export class SiteDetailsService {\n       invitationToSend,\n     );\n   }\n+\n+  getInvitationType(fetchingOption: string): string {\n+    switch (fetchingOption) {\n+      case 'All':\n+        return '';\n+        break;\n+\n+      case 'New':\n+        return '?onboardingStatus=N';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2MDc1Mw==", "bodyText": "should be private", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488160753", "createdAt": "2020-09-14T19:11:13Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -61,4 +58,25 @@ export class SiteDetailsService {\n       invitationToSend,\n     );\n   }\n+\n+  getInvitationType(fetchingOption: string): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2NDU0OA==", "bodyText": "This should use the enum too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488164548", "createdAt": "2020-09-14T19:18:05Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.spec.ts", "diffHunk": "@@ -90,18 +90,17 @@ describe('SiteDetailsComponent', () => {\n       fixture.detectChanges();\n       const changetab = fixture.debugElement.query(By.css('.classNew'))\n         .nativeElement as HTMLInputElement;\n-      component.activeTab = 'new';\n       const changeTabSpy = spyOn(component, 'changeTab');\n       fixture.detectChanges();\n       tick();\n       changetab.click();\n       fixture.detectChanges();\n       await fixture.whenStable();\n-      expect(component.activeTab).toEqual('new');\n+      expect(component.activeTab).toBe('new');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2NTAyNg==", "bodyText": "enum here too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488165026", "createdAt": "2020-09-14T19:18:59Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -19,6 +19,16 @@ import {OnboardingStatus} from 'src/app/shared/enums';\n })\n export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n   implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  toggleDisplay = false;\n+  userIds: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  activeTab = 'All';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2Njg4OA==", "bodyText": "Use the imported enum OnboardingStatus.All instead of the property", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488166888", "createdAt": "2020-09-14T19:22:31Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -29,40 +39,28 @@ export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n   ) {\n     super();\n   }\n-  query$ = new BehaviorSubject('');\n-  siteParticipants$: Observable<SiteParticipants> = of();\n-  siteId = '';\n-  sendResend = '';\n-  enableDisable = '';\n-  activeTab = 'all';\n-  toggLeDisplay = false;\n-  arrayOfuserId: string[] = [];\n-  onBoardingStatus = OnboardingStatus;\n-  openModal(templateref: TemplateRef<unknown>): void {\n-    this.modalRef = this.modalService.show(templateref);\n+  openModal(templateRef: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateRef);\n   }\n   ngOnInit(): void {\n     this.subs.add(\n       this.route.params.subscribe((params) => {\n         if (params.siteId) {\n           this.siteId = params.siteId as string;\n         }\n-        this.fetchSiteParticipant('all');\n+        this.fetchSiteParticipant(this.onBoardingStatus.All);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2NzUyNQ==", "bodyText": "use constant here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488167525", "createdAt": "2020-09-14T19:23:43Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -114,12 +112,12 @@ export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n     );\n   }\n   sendInvitation(): void {\n-    if (this.arrayOfuserId.length > 0) {\n-      if (this.arrayOfuserId.length > 11) {\n+    if (this.userIds.length > 0) {\n+      if (this.userIds.length > 11) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2NzY4Mw==", "bodyText": "OnboardingStatus.Disabled?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488167683", "createdAt": "2020-09-14T19:24:04Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -129,28 +127,23 @@ export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n                 this.toastr.success(getMessage(successResponse.code));\n               } else {\n                 this.toastr.success(successResponse.message);\n-                this.changeTab('invited');\n+                this.changeTab(this.onBoardingStatus.Invited);\n               }\n             }),\n         );\n       }\n     } else {\n-      this.toastr.error(\n-        'Please select atleast one participant for sending invitation',\n-      );\n+      this.toastr.error('Please select at least one participant');\n     }\n   }\n   toggleInvitation(): void {\n-    if (this.arrayOfuserId.length > 0) {\n-      if (this.arrayOfuserId.length > 11) {\n+    if (this.userIds.length > 0) {\n+      if (this.userIds.length > this.maximumUser) {\n         this.toastr.error('Please select less than 10 participants');\n       } else {\n-        const statusUpdate =\n-          this.activeTab === 'Enable' || this.activeTab === 'Invited'\n-            ? 'N'\n-            : 'D';\n+        const statusUpdate = this.activeTab === 'Disabled' ? 'N' : 'D';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2ODQyMA==", "bodyText": "prefer const MAXIMUM_USER_COUNT = 10; to a property", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488168420", "createdAt": "2020-09-14T19:25:28Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -19,6 +19,16 @@ import {OnboardingStatus} from 'src/app/shared/enums';\n })\n export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n   implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteId = '';\n+  sendResend = '';\n+  enableDisable = '';\n+  toggleDisplay = false;\n+  userIds: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  activeTab = 'All';\n+  maximumUser = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f099b829b102386ee3eb92bdf3fb1dec45dab"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a0262356e1f22c33749200ed4b30035bda03d9f", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4a0262356e1f22c33749200ed4b30035bda03d9f", "committedDate": "2020-09-15T17:08:37Z", "message": "Merge branch 'develop' into participant-manager-webapp-site-details-test-cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ff7188af8dfb5087b06bc265816f5b54ef15bb", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/80ff7188af8dfb5087b06bc265816f5b54ef15bb", "committedDate": "2020-09-15T17:11:15Z", "message": "Comment fix\n\nComment fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4OTUyMDQ3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#pullrequestreview-488952047", "createdAt": "2020-09-15T18:27:18Z", "commit": {"oid": "80ff7188af8dfb5087b06bc265816f5b54ef15bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyNzoxOFrOHSOosQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyNzoxOFrOHSOosQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NjIwOQ==", "bodyText": "fetchingOption: OnboardingStatus", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r488876209", "createdAt": "2020-09-15T18:27:18Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import {Injectable} from '@angular/core';\n+import {SiteParticipants} from './site-detail.model';\n+import {EntityService} from '../../../service/entity.service';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {environment} from '@environment';\n+import {\n+  InviteSend,\n+  StatusUpdate,\n+  UpdateInviteResponse,\n+} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SiteDetailsService {\n+  baseUrl = environment.baseUrl;\n+  constructor(\n+    private readonly entityService: EntityService<SiteParticipants>,\n+    private readonly http: HttpClient,\n+  ) {}\n+  get(\n+    siteId: string,\n+    fetchingOption: OnboardingStatus,\n+  ): Observable<SiteParticipants> {\n+    const fetchingOptions = this.getInvitationType(fetchingOption);\n+    if (fetchingOption !== OnboardingStatus.All) {\n+      return this.entityService.get(\n+        `sites/${encodeURIComponent(siteId)}/participants?onboardingStatus=` +\n+          fetchingOptions,\n+      );\n+    } else {\n+      return this.entityService.get(\n+        `sites/${encodeURIComponent(siteId)}/participants`,\n+      );\n+    }\n+  }\n+\n+  siteDecommission(siteId: string): Observable<ApiResponse> {\n+    return this.http.put<ApiResponse>(\n+      `${environment.baseUrl}/sites/${encodeURIComponent(siteId)}/decommission`,\n+      '',\n+    );\n+  }\n+\n+  toggleInvitation(\n+    siteId: string,\n+    participantToBeUpdated: StatusUpdate,\n+  ): Observable<ApiResponse> {\n+    return this.http.patch<ApiResponse>(\n+      `${environment.baseUrl}/sites/${encodeURIComponent(\n+        siteId,\n+      )}/participants/status`,\n+      participantToBeUpdated,\n+    );\n+  }\n+  sendInvitation(\n+    siteId: string,\n+    invitationToSend: InviteSend,\n+  ): Observable<UpdateInviteResponse> {\n+    return this.http.post<UpdateInviteResponse>(\n+      `${environment.baseUrl}/sites/${encodeURIComponent(\n+        siteId,\n+      )}/participants/invite`,\n+      invitationToSend,\n+    );\n+  }\n+\n+  private getInvitationType(fetchingOption: string): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ff7188af8dfb5087b06bc265816f5b54ef15bb"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8294a05bfcb84d954b928c873d9e5e062f87f42c", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8294a05bfcb84d954b928c873d9e5e062f87f42c", "committedDate": "2020-09-21T01:47:35Z", "message": "search email-implementation\n\nsearch email-implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "818769e6011a67f46294a4eac2a1f391a5d9fd72", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/818769e6011a67f46294a4eac2a1f391a5d9fd72", "committedDate": "2020-09-21T01:48:32Z", "message": "Merge branch 'develop' into participant-manager-webapp-site-details-test-cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e47ab9af116176713327da4805725d6c6e2dcb7", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3e47ab9af116176713327da4805725d6c6e2dcb7", "committedDate": "2020-09-21T08:20:51Z", "message": "search-integration\n\nsearch-integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4f61ef27041c692c759775267f2a5adcf9dedff", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f4f61ef27041c692c759775267f2a5adcf9dedff", "committedDate": "2020-09-21T12:07:29Z", "message": "search email-implementation\n\nsearch email-implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f94be7218f1fdae1e2ba3503b85a697bb1d18b3", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4f94be7218f1fdae1e2ba3503b85a697bb1d18b3", "committedDate": "2020-09-21T13:23:33Z", "message": "client comment fix\n\nclient comment fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNjAwNjYw", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#pullrequestreview-492600660", "createdAt": "2020-09-21T13:29:33Z", "commit": {"oid": "4f94be7218f1fdae1e2ba3503b85a697bb1d18b3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoyOTozM1rOHVQBzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzozNDoyMVrOHVQPpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0NDc1MQ==", "bodyText": "Don't disable this linter rule. Please read up on casting in Typescript.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r492044751", "createdAt": "2020-09-21T13:29:33Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -61,16 +66,19 @@ export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n       this.query$,\n     ).pipe(\n       map(([siteDetails, query]) => {\n-        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f94be7218f1fdae1e2ba3503b85a697bb1d18b3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0NDk2MQ==", "bodyText": "Remove logging statements.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r492044961", "createdAt": "2020-09-21T13:29:52Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -61,16 +66,19 @@ export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n       this.query$,\n     ).pipe(\n       map(([siteDetails, query]) => {\n-        siteDetails.participantRegistryDetail.registryParticipants = siteDetails.participantRegistryDetail.registryParticipants.filter(\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        this.siteDetailsBackup = JSON.parse(JSON.stringify(siteDetails));\n+        this.siteDetailsBackup.participantRegistryDetail.registryParticipants = this.siteDetailsBackup.participantRegistryDetail.registryParticipants.filter(\n           (participant: RegistryParticipant) =>\n             participant.email.toLowerCase().includes(query.toLowerCase()),\n         );\n-        return siteDetails;\n+        console.log(this.siteDetailsBackup);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f94be7218f1fdae1e2ba3503b85a697bb1d18b3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0NjYzMg==", "bodyText": "The get function is fine, this one should be changed too though, i.e.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private getInvitationType(fetchingOption: string): string {\n          \n          \n            \n              private getInvitationType(fetchingOption: OnboardingStatus): string {", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r492046632", "createdAt": "2020-09-21T13:32:03Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import {Injectable} from '@angular/core';\n+import {SiteParticipants} from './site-detail.model';\n+import {EntityService} from '../../../service/entity.service';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {environment} from '@environment';\n+import {\n+  InviteSend,\n+  StatusUpdate,\n+  UpdateInviteResponse,\n+} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SiteDetailsService {\n+  baseUrl = environment.baseUrl;\n+  constructor(\n+    private readonly entityService: EntityService<SiteParticipants>,\n+    private readonly http: HttpClient,\n+  ) {}\n+  get(\n+    siteId: string,\n+    fetchingOption: OnboardingStatus,\n+  ): Observable<SiteParticipants> {\n+    const fetchingOptions = this.getInvitationType(fetchingOption);\n+    if (fetchingOption !== OnboardingStatus.All) {\n+      return this.entityService.get(\n+        `sites/${encodeURIComponent(siteId)}/participants?onboardingStatus=` +\n+          fetchingOptions,\n+      );\n+    } else {\n+      return this.entityService.get(\n+        `sites/${encodeURIComponent(siteId)}/participants`,\n+      );\n+    }\n+  }\n+\n+  siteDecommission(siteId: string): Observable<ApiResponse> {\n+    return this.http.put<ApiResponse>(\n+      `${environment.baseUrl}/sites/${encodeURIComponent(siteId)}/decommission`,\n+      '',\n+    );\n+  }\n+\n+  toggleInvitation(\n+    siteId: string,\n+    participantToBeUpdated: StatusUpdate,\n+  ): Observable<ApiResponse> {\n+    return this.http.patch<ApiResponse>(\n+      `${environment.baseUrl}/sites/${encodeURIComponent(\n+        siteId,\n+      )}/participants/status`,\n+      participantToBeUpdated,\n+    );\n+  }\n+  sendInvitation(\n+    siteId: string,\n+    invitationToSend: InviteSend,\n+  ): Observable<UpdateInviteResponse> {\n+    return this.http.post<UpdateInviteResponse>(\n+      `${environment.baseUrl}/sites/${encodeURIComponent(\n+        siteId,\n+      )}/participants/invite`,\n+      invitationToSend,\n+    );\n+  }\n+\n+  private getInvitationType(fetchingOption: string): string {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NjIwOQ=="}, "originalCommit": {"oid": "80ff7188af8dfb5087b06bc265816f5b54ef15bb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0NzM2OA==", "bodyText": "URLs should never have a manually constructed query parameter. Please fix.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r492047368", "createdAt": "2020-09-21T13:33:04Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/shared/site-details.service.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import {Injectable} from '@angular/core';\n+import {SiteParticipants} from './site-detail.model';\n+import {EntityService} from '../../../service/entity.service';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {environment} from '@environment';\n+import {\n+  InviteSend,\n+  StatusUpdate,\n+  UpdateInviteResponse,\n+} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SiteDetailsService {\n+  baseUrl = environment.baseUrl;\n+  constructor(\n+    private readonly entityService: EntityService<SiteParticipants>,\n+    private readonly http: HttpClient,\n+  ) {}\n+  get(\n+    siteId: string,\n+    fetchingOption: OnboardingStatus,\n+  ): Observable<SiteParticipants> {\n+    const fetchingOptions = this.getInvitationType(fetchingOption);\n+    if (fetchingOption !== OnboardingStatus.All) {\n+      return this.entityService.get(\n+        `sites/${encodeURIComponent(siteId)}/participants?onboardingStatus=` +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f94be7218f1fdae1e2ba3503b85a697bb1d18b3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0ODI5Mg==", "bodyText": "Use one const for the whole file. Just move it outside the class.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#discussion_r492048292", "createdAt": "2020-09-21T13:34:21Z", "author": {"login": "nikklassen"}, "path": "UR-web-app/src/app/site-coordinator/sites/site-details/site-details.component.ts", "diffHunk": "@@ -0,0 +1,190 @@\n+import {Component, OnInit, TemplateRef} from '@angular/core';\n+import {SiteParticipants} from '../shared/site-detail.model';\n+import {Router, ActivatedRoute} from '@angular/router';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ToastrService} from 'ngx-toastr';\n+import {BehaviorSubject, Observable, of, combineLatest} from 'rxjs';\n+import {SiteDetailsService} from '../shared/site-details.service';\n+import {RegistryParticipant} from 'src/app/shared/participant';\n+import {map} from 'rxjs/operators';\n+import {UpdateInviteResponse} from '../../participant-details/participant-details';\n+import {ApiResponse} from 'src/app/entity/api.response.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {OnboardingStatus} from 'src/app/shared/enums';\n+import {SearchService} from 'src/app/shared/search.service';\n+@Component({\n+  selector: 'app-site-details',\n+  templateUrl: './site-details.component.html',\n+  styleUrls: ['./site-details.component.scss'],\n+})\n+export class SiteDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  siteParticipants$: Observable<SiteParticipants> = of();\n+  siteDetailsBackup = {} as SiteParticipants;\n+  siteId = '';\n+\n+  sendResend = '';\n+  enableDisable = '';\n+  toggleDisplay = false;\n+  userIds: string[] = [];\n+  onBoardingStatus = OnboardingStatus;\n+  activeTab = OnboardingStatus.All;\n+\n+  constructor(\n+    private readonly particpantDetailService: SiteDetailsService,\n+    private readonly router: Router,\n+    private readonly route: ActivatedRoute,\n+    private readonly toastr: ToastrService,\n+    private readonly modalService: BsModalService,\n+    public modalRef: BsModalRef,\n+    private readonly sharedService: SearchService,\n+  ) {\n+    super();\n+  }\n+  openModal(templateRef: TemplateRef<unknown>): void {\n+    this.modalRef = this.modalService.show(templateRef);\n+  }\n+  ngOnInit(): void {\n+    this.sharedService.updateSearchPlaceHolder('Search Participant Email');\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params.siteId) {\n+          this.siteId = params.siteId as string;\n+        }\n+        this.fetchSiteParticipant(OnboardingStatus.All);\n+      }),\n+    );\n+  }\n+  toggleParticipant(): void {\n+    this.toggleDisplay = !this.toggleDisplay;\n+  }\n+  fetchSiteParticipant(fetchingOption: OnboardingStatus): void {\n+    this.siteParticipants$ = combineLatest(\n+      this.particpantDetailService.get(this.siteId, fetchingOption),\n+      this.query$,\n+    ).pipe(\n+      map(([siteDetails, query]) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n+        this.siteDetailsBackup = JSON.parse(JSON.stringify(siteDetails));\n+        this.siteDetailsBackup.participantRegistryDetail.registryParticipants = this.siteDetailsBackup.participantRegistryDetail.registryParticipants.filter(\n+          (participant: RegistryParticipant) =>\n+            participant.email.toLowerCase().includes(query.toLowerCase()),\n+        );\n+        console.log(this.siteDetailsBackup);\n+        return this.siteDetailsBackup;\n+      }),\n+    );\n+  }\n+  search(query: string): void {\n+    this.query$.next(query.trim().toLowerCase());\n+  }\n+  changeTab(tab: OnboardingStatus): void {\n+    this.sendResend =\n+      tab === OnboardingStatus.New ? 'Send Invitation' : 'Resend Invitation';\n+    this.enableDisable =\n+      tab === OnboardingStatus.New || tab === OnboardingStatus.Invited\n+        ? 'Disable Invitation'\n+        : 'Enable Invitation';\n+    this.activeTab = tab;\n+    this.toggleDisplay = false;\n+    this.userIds = [];\n+    this.fetchSiteParticipant(tab);\n+  }\n+  redirectParticipant(userId: string): void {\n+    void this.router.navigate(['/user/participantDetail', userId]);\n+  }\n+  rowCheckBoxChange(event: Event): void {\n+    const checkbox = event.target as HTMLInputElement;\n+    if (checkbox.checked) {\n+      this.userIds.push(checkbox.id);\n+    } else {\n+      this.userIds = this.userIds.filter((item) => item !== checkbox.id);\n+    }\n+  }\n+  decommissionSite(): void {\n+    this.subs.add(\n+      this.particpantDetailService\n+        .siteDecommission(this.siteId)\n+        .subscribe((successResponse: ApiResponse) => {\n+          if (getMessage(successResponse.code)) {\n+            this.toastr.success(getMessage(successResponse.code));\n+          } else {\n+            this.toastr.success(successResponse.message);\n+            void this.router.navigate(['/sites']);\n+          }\n+        }),\n+    );\n+  }\n+  sendInvitation(): void {\n+    const MAXIMUM_USER_COUNT = 10;\n+    if (this.userIds.length > 0) {\n+      if (this.userIds.length > MAXIMUM_USER_COUNT) {\n+        this.toastr.error('Please select less than 10 participants');\n+      } else {\n+        const sendInvitations = {\n+          ids: this.userIds,\n+        };\n+        this.subs.add(\n+          this.particpantDetailService\n+            .sendInvitation(this.siteId, sendInvitations)\n+            .subscribe((successResponse: UpdateInviteResponse) => {\n+              if (getMessage(successResponse.code)) {\n+                this.toastr.success(getMessage(successResponse.code));\n+              } else {\n+                this.toastr.success(successResponse.message);\n+                this.changeTab(OnboardingStatus.Invited);\n+              }\n+            }),\n+        );\n+      }\n+    } else {\n+      this.toastr.error('Please select at least one participant');\n+    }\n+  }\n+\n+  toggleInvitation(): void {\n+    const MAXIMUM_USER_COUNT = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f94be7218f1fdae1e2ba3503b85a697bb1d18b3"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "177939ec51993aa22d419a32ef186828bcbe42e0", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/177939ec51993aa22d419a32ef186828bcbe42e0", "committedDate": "2020-09-21T15:25:54Z", "message": "fixing client comments\n\nfixing client comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8201f7b8dc53e2711a46230b81f22cf42adcbbf", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c8201f7b8dc53e2711a46230b81f22cf42adcbbf", "committedDate": "2020-09-22T10:07:54Z", "message": "url-constructor-fix\n\nurl-constructor-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2102346bb9221e9248e6f30c2510a95fd3a47ea0", "author": {"user": {"login": "rohithd-btc", "name": "Rohith D C"}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2102346bb9221e9248e6f30c2510a95fd3a47ea0", "committedDate": "2020-09-22T12:20:43Z", "message": "client comment fix\n\nclient comment fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26db2ba3b4bec2eddef2a499b22df51d9af7ed6e", "author": {"user": {"login": "firdosebtc1", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/26db2ba3b4bec2eddef2a499b22df51d9af7ed6e", "committedDate": "2020-09-22T12:53:13Z", "message": "Merge branch 'develop' into participant-manager-webapp-site-details-test-cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjU3ODI1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/945#pullrequestreview-493657825", "createdAt": "2020-09-22T16:45:50Z", "commit": {"oid": "26db2ba3b4bec2eddef2a499b22df51d9af7ed6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 513, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}