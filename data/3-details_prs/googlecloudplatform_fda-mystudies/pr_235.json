{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjYxNjcw", "number": 235, "title": "Early access build", "bodyText": "PR contains bug # 231 fixes.\nNote : Please replace feedback.email and contactus.email property's  dummy value in appConfigurations.properties with the actual value.", "createdAt": "2020-04-24T16:56:11Z", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235", "merged": true, "mergeCommit": {"oid": "924e0b649c6a88c3776b1d1128f6a5bef0cfccb9"}, "closed": true, "closedAt": "2020-04-29T19:06:02Z", "author": {"login": "aswinijena100"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca0XMxgH2gAyNDA4NjYxNjcwOjQ3OWVhMmQwY2U2MjNiNTM2ZjdlODM1OTlhMmIzYmRkNDViMzE2NDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccdMNugH2gAyNDA4NjYxNjcwOmFjODRhZTZlNTdjMDE4ODBiMjZiZDIwOGI3MGNhMTcyNzYwY2MyZGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "479ea2d0ce623b536f7e83599a2b3bdd45b31649", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/479ea2d0ce623b536f7e83599a2b3bdd45b31649", "committedDate": "2020-04-24T16:48:31Z", "message": "code commit for issue #231 fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757796c13a48a7d6a356b603ac74d639c8012d3d", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/757796c13a48a7d6a356b603ac74d639c8012d3d", "committedDate": "2020-04-24T16:51:25Z", "message": "Merge branch 'early-access' of https://github.com/GoogleCloudPlatform/fda-mystudies into early-access-build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "committedDate": "2020-04-27T14:19:05Z", "message": "Merge branch 'early-access' into early-access-build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e389fb5ad3b838c858c7ca07929a25cd25673244", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e389fb5ad3b838c858c7ca07929a25cd25673244", "committedDate": "2020-04-27T15:40:57Z", "message": "GitHub Comment issue fix for issue no #235"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cba0a1bac094378923ee178a63ff7661f24815cb", "committedDate": "2020-04-27T15:41:58Z", "message": "Merge branch 'early-access' into early-access-build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMDYyMjQ5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#pullrequestreview-401062249", "createdAt": "2020-04-27T15:23:57Z", "commit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMzo1N1rOGMpCOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTo1NToyOFrOGMqw-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODQwOA==", "bodyText": "An integer type is not appropriate here. Either use an enum or, preferably, return a boolean", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415908408", "createdAt": "2020-04-27T15:23:57Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMTA0OQ==", "bodyText": "Please don't declaring variables like this. They should always be declared when they are actually assigned", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415911049", "createdAt": "2020-04-27T15:27:09Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNDc4OQ==", "bodyText": "Same here", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415914789", "createdAt": "2020-04-27T15:31:31Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNjY4Nw==", "bodyText": "This method doesn't throw exceptions", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415916687", "createdAt": "2020-04-27T15:33:42Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNzEwNQ==", "bodyText": "this method doesn't throw exceptions", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415917105", "createdAt": "2020-04-27T15:34:09Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    boolean isSent = false;\n+    int isEmailSent = 0;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+      if (!isSent) {\n+        isEmailSent = 1;\n+      } else {\n+        isEmailSent = 2;\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Integer contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA==", "bodyText": "Shouldn't we be returning some other message in the case where the email isn't sent?", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415932940", "createdAt": "2020-04-27T15:50:55Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNDIzNg==", "bodyText": "This failure code (and the catch) is exactly the same for both methods. Please extract shared logic.", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415934236", "createdAt": "2020-04-27T15:52:26Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isEmailSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTAwOA==", "bodyText": "Unnecessary variable declarations here too", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935008", "createdAt": "2020-04-27T15:53:27Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTM0Ng==", "bodyText": "Type can be a primitive", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935346", "createdAt": "2020-04-27T15:53:49Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTcyMg==", "bodyText": "Remove + \"\"", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935722", "createdAt": "2020-04-27T15:54:16Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjE5OA==", "bodyText": "method does not throw an exception", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936198", "createdAt": "2020-04-27T15:54:47Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjQ2Ng==", "bodyText": "Incorrect declarations", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936466", "createdAt": "2020-04-27T15:55:06Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjU4Ng==", "bodyText": "Remove + \"\"", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936586", "createdAt": "2020-04-27T15:55:15Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      contactUsSubject = appConfig.getContactusMailSubject() + \"\" + subject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjc2MA==", "bodyText": "Type can be a primitive", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936760", "createdAt": "2020-04-27T15:55:28Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjU5OTg1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#pullrequestreview-401259985", "createdAt": "2020-04-27T19:28:02Z", "commit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToyODowMlrOGM0B4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToyODoxMlrOGM0CSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODU0Ng==", "bodyText": "Typo in feedback", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r416088546", "createdAt": "2020-04-27T19:28:02Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;\n+\n+  @Value(\"${feedback.email}\")\n+  private String feedabckToEmail;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODY1MA==", "bodyText": "Typo in Subject", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r416088650", "createdAt": "2020-04-27T19:28:12Z", "author": {"login": "nikklassen"}, "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bfc3b067582fffba8f4777042dc2929e2919038", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4bfc3b067582fffba8f4777042dc2929e2919038", "committedDate": "2020-04-29T07:46:45Z", "message": "Issue fixes for Feedback and Contact Us related PR as per the Comment provided  [ # 231]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31c47222cc07e8a619ee96773bd34606cd251ae2", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/31c47222cc07e8a619ee96773bd34606cd251ae2", "committedDate": "2020-04-29T07:55:54Z", "message": "Merge branch 'early-access' into early-access-build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "403a3371909c7caa1bbf4fe45a8ff2389642442e", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/403a3371909c7caa1bbf4fe45a8ff2389642442e", "committedDate": "2020-04-29T14:36:28Z", "message": "Fix for to retrun an error message if mail not triggered due to an error/exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cbf0eb54eb41817e66ca3389a04cc0bd623246d", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/0cbf0eb54eb41817e66ca3389a04cc0bd623246d", "committedDate": "2020-04-29T14:47:07Z", "message": "Merge branch 'early-access' into early-access-build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTAwNjA1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#pullrequestreview-402900605", "createdAt": "2020-04-29T17:49:29Z", "commit": {"oid": "0cbf0eb54eb41817e66ca3389a04cc0bd623246d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac84ae6e57c01880b26bd208b70ca172760cc2db", "author": {"user": {"login": "aswinijena100", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ac84ae6e57c01880b26bd208b70ca172760cc2db", "committedDate": "2020-04-29T18:56:33Z", "message": "Merge branch 'early-access' into early-access-build"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1154, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}