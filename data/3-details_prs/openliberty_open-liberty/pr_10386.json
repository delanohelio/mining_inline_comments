{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjQwNzk2", "number": 10386, "title": "introspector for persistent executor", "bodyText": "Create an introspector for persistent executor, then write an initial test that captures a dump of the server and validates some of the output that it generates.", "createdAt": "2020-01-10T22:05:19Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386", "merged": true, "mergeCommit": {"oid": "f0737cad845905cf55b61866b474b028128ad018"}, "closed": true, "closedAt": "2020-01-13T22:31:52Z", "author": {"login": "njr-11"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4u0cMAH2gAyMzYxNjQwNzk2OjQ1NGZkMWZmMzJhMzE5MzBiOTc2ZjZhZDc0OGZhODFkMzZjYmExNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb588NigFqTM0MTg2NzE0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "454fd1ff32a31930b976f6ad748fa81d36cba167", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/454fd1ff32a31930b976f6ad748fa81d36cba167", "committedDate": "2020-01-09T19:07:36Z", "message": "Issue #8611 remove unused methods from DatabaseTaskStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b39a002895eb6104cb30dae315bd48f329b64c3f", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b39a002895eb6104cb30dae315bd48f329b64c3f", "committedDate": "2020-01-10T21:59:14Z", "message": "Issue #8611 add introspector for persistent executor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94", "committedDate": "2020-01-10T22:03:49Z", "message": "Issue #8611 initial test for persistent executor server dump output"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDU1MDAx", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#pullrequestreview-341455001", "createdAt": "2020-01-10T22:25:22Z", "commit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNToyMlrOFchlyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNTo0MFrOFchmGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDc5NQ==", "bodyText": "Did you intend to leave System.out.println statements?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#discussion_r365454795", "createdAt": "2020-01-10T22:25:22Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.persistent.internal;\n+\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+import com.ibm.websphere.concurrent.persistent.PersistentExecutor;\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.kernel.service.util.SecureAction;\n+import com.ibm.wsspi.logging.Introspector;\n+\n+/**\n+ * Introspector for persistent executors.\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE)\n+public class PersistentExecutorIntrospector implements Introspector {\n+    @Override\n+    @Trivial\n+    public String getIntrospectorName() {\n+        System.out.println(\"getIntrospectorName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDg3NA==", "bodyText": "Same question as above.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#discussion_r365454874", "createdAt": "2020-01-10T22:25:40Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.persistent.internal;\n+\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+import com.ibm.websphere.concurrent.persistent.PersistentExecutor;\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.kernel.service.util.SecureAction;\n+import com.ibm.wsspi.logging.Introspector;\n+\n+/**\n+ * Introspector for persistent executors.\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE)\n+public class PersistentExecutorIntrospector implements Introspector {\n+    @Override\n+    @Trivial\n+    public String getIntrospectorName() {\n+        System.out.println(\"getIntrospectorName\");\n+        return \"PersistentExecutorIntrospector\";\n+    }\n+\n+    @Override\n+    @Trivial\n+    public String getIntrospectorDescription() {\n+        System.out.println(\"getIntrospectorDescription\");\n+        return \"Persistent timers/tasks diagnostics\";\n+    }\n+\n+    @Override\n+    public void introspect(PrintWriter out) throws Exception {\n+        SecureAction priv = AccessController.doPrivileged(SecureAction.get());\n+        BundleContext bundleContext = priv.getBundleContext(FrameworkUtil.getBundle(getClass()));\n+\n+        for (ServiceReference<PersistentExecutor> ref : priv.getServiceReferences(bundleContext, PersistentExecutor.class, \"(!(com.ibm.wsspi.resource.ResourceFactory=true))\")) {\n+            System.out.println(\"Found service reference: \" + ref);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bab90779e065b8e35bfb153a878fc37b6c262b1", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0bab90779e065b8e35bfb153a878fc37b6c262b1", "committedDate": "2020-01-10T22:34:02Z", "message": "Issue #8611 code review fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxODY3MTQ4", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#pullrequestreview-341867148", "createdAt": "2020-01-13T14:08:41Z", "commit": {"oid": "0bab90779e065b8e35bfb153a878fc37b6c262b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3488, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}