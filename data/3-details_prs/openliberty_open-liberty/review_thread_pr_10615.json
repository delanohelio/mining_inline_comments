{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MTExODgy", "number": 10615, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjowNDo1NVrODboNHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozNTo1MFrODbrV2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjk2ODYxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.oauth/src/com/ibm/ws/security/oauth20/error/impl/BrowserAndServerLogMessage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjowNDo1NVrOFjOGfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjowNDo1NVrOFjOGfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ3NTUxNw==", "bodyText": "These System.out lines need to be taken out.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10615#discussion_r372475517", "createdAt": "2020-01-29T16:04:55Z", "author": {"login": "ayoho"}, "path": "dev/com.ibm.ws.security.oauth/src/com/ibm/ws/security/oauth20/error/impl/BrowserAndServerLogMessage.java", "diffHunk": "@@ -45,4 +47,39 @@ public void setLocales(Enumeration<Locale> requestLocales) {\n         this.requestLocales = requestLocales;\n     }\n \n+    /**\n+     * Determines the preferred Locale of the request, <b>as supported by the Liberty profile</b>.\n+     * In other words, if the most-preferred Locale that is requested that is not supported by the\n+     * Liberty runtime, then the next most-preferred Locale will be used, finally resulting in the\n+     * JVM's default Locale.\n+     * <p>\n+     * The net effect of this is any French locale (fr, fr_ca, fr_fr, etc) would resolve to just 'fr'.\n+     * Any Portugese locale ('pt') other than Brazillian ('pt_br') would resolve to the JVM default\n+     * encoding. Portugese Brazillian is tranlated to, so 'pt_br' is returned. Any English locale\n+     * is returned as 'en'. Any unrecognized locale resolves to the JVM default.\n+     *\n+     * @return The Locale for the request. The best match supported by the Liberty runtime is returned, or the defualt Locale.\n+     */\n+    public static Locale getLocale(final Enumeration<Locale> locales) {\n+        System.out.println(\"here\");\n+        // System.out.println(locales.nextElement());\n+        System.out.println(locales);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c608fa5d249e753beb26e961f5a481c5e3c09bef"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzQ4MjQ5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.social/src/com/ibm/ws/security/social/web/SelectionPageGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozNTo1MFrOFjTK_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozNTo1MFrOFjTK_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1ODU5MA==", "bodyText": "So this would make three duplicates of this getLocale() method. Instead of duplicating the method so many times, adding it to a single common location - for instance a new lang package under com.ibm.ws.security.common - would be ideal. Even adding it to a single common location in security would still be duplicating code since we're just copying this method from a UI project. The theoretical ideal is a single method that the entire product can use, but off the top of my head I don't know where I'd put something like that.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10615#discussion_r372558590", "createdAt": "2020-01-29T18:35:50Z", "author": {"login": "ayoho"}, "path": "dev/com.ibm.ws.security.social/src/com/ibm/ws/security/social/web/SelectionPageGenerator.java", "diffHunk": "@@ -276,9 +279,38 @@ String createJavascript() {\n     }\n \n     String getHtmlTitle() {\n-        return Tr.formatMessage(tc, request.getLocales(), \"SELECTION_PAGE_TITLE\");\n+        return Tr.formatMessage(tc, getLocale(request.getLocales()), \"SELECTION_PAGE_TITLE\");\n     }\n \n+    /**\n+     * Determines the preferred Locale of the request, <b>as supported by the Liberty profile</b>.\n+     * In other words, if the most-preferred Locale that is requested that is not supported by the\n+     * Liberty runtime, then the next most-preferred Locale will be used, finally resulting in the\n+     * JVM's default Locale.\n+     * <p>\n+     * The net effect of this is any French locale (fr, fr_ca, fr_fr, etc) would resolve to just 'fr'.\n+     * Any Portugese locale ('pt') other than Brazillian ('pt_br') would resolve to the JVM default\n+     * encoding. Portugese Brazillian is tranlated to, so 'pt_br' is returned. Any English locale\n+     * is returned as 'en'. Any unrecognized locale resolves to the JVM default.\n+     * \n+     * @return The Locale for the request. The best match supported by the Liberty runtime is returned, or the defualt Locale.\n+     */\n+    public static Locale getLocale(final Enumeration<Locale> locales) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c608fa5d249e753beb26e961f5a481c5e3c09bef"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2181, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}