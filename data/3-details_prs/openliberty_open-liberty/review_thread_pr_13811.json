{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMzA2ODQ3", "number": 13811, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo0ODowNVrOEq2qGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo1MDoyMFrOEq2thA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzcxMTYxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/FATSuite.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo0ODowNVrOHdTKMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNzowMjowNVrOHd9C2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NDY1OQ==", "bodyText": "Normally the feature replacement repeat action would update the server for you. Is there a reason that doesn't work in this case?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13811#discussion_r500484659", "createdAt": "2020-10-06T17:48:05Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/FATSuite.java", "diffHunk": "@@ -29,7 +32,21 @@\n                 ConnectionManagerMBeanTest.class\n })\n public class FATSuite {\n+\n+    public static final String javaeeServer = \"com.ibm.ws.jca.fat\";\n+    public static final String jakartaeeServer = \"com.ibm.ws.jca.fat.jakarta\";\n+\n     @ClassRule\n     public static RepeatTests r = RepeatTests.withoutModification()\n-                    .andWith(FeatureReplacementAction.EE8_FEATURES());\n-}\n\\ No newline at end of file\n+                    .andWith(FeatureReplacementAction.EE8_FEATURES())\n+                    .andWith(new JakartaEE9Action());\n+\n+    public static LibertyServer getServer() {\n+        if (JakartaEE9Action.isActive()) {\n+            return LibertyServerFactory.getLibertyServer(jakartaeeServer);\n+        } else {\n+            return LibertyServerFactory.getLibertyServer(javaeeServer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d69059ce8c08f901740aa90b884935862ad7b0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwODI0NQ==", "bodyText": "The feature replacement action just replaces features, but in this case the server.xml file has configurations like:\n    <jmsActivationSpec id=\"FVTMessageDrivenBeanBindingOverride\">\n      <properties.FAT1 destinationRef=\"topic1\" destinationType=\"javax.jms.Topic\"/>\n    </jmsActivationSpec>\n\nInstead of trying to run the transformer on the server.xml file, I figured it would be easier and quicker just to make a copy and change the configuration manually.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13811#discussion_r500508245", "createdAt": "2020-10-06T18:25:40Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/FATSuite.java", "diffHunk": "@@ -29,7 +32,21 @@\n                 ConnectionManagerMBeanTest.class\n })\n public class FATSuite {\n+\n+    public static final String javaeeServer = \"com.ibm.ws.jca.fat\";\n+    public static final String jakartaeeServer = \"com.ibm.ws.jca.fat.jakarta\";\n+\n     @ClassRule\n     public static RepeatTests r = RepeatTests.withoutModification()\n-                    .andWith(FeatureReplacementAction.EE8_FEATURES());\n-}\n\\ No newline at end of file\n+                    .andWith(FeatureReplacementAction.EE8_FEATURES())\n+                    .andWith(new JakartaEE9Action());\n+\n+    public static LibertyServer getServer() {\n+        if (JakartaEE9Action.isActive()) {\n+            return LibertyServerFactory.getLibertyServer(jakartaeeServer);\n+        } else {\n+            return LibertyServerFactory.getLibertyServer(javaeeServer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NDY1OQ=="}, "originalCommit": {"oid": "d8d69059ce8c08f901740aa90b884935862ad7b0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxNTc5NA==", "bodyText": "That's a good point.  I'm sure making the copy is easier for now, but it will be more difficult in the long term to maintain.  With two copies, we will inevitably end up with developers making a fix or improvement in only one of the files and they will get out of sync.  It seems like it ought to be something the EE9 replacement action can do to update config element values automatically with the simplicity config support in place.  Does that not apply here because this is generated metatype/config?  Otherwise it ought to be possible.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13811#discussion_r500515794", "createdAt": "2020-10-06T18:37:41Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/FATSuite.java", "diffHunk": "@@ -29,7 +32,21 @@\n                 ConnectionManagerMBeanTest.class\n })\n public class FATSuite {\n+\n+    public static final String javaeeServer = \"com.ibm.ws.jca.fat\";\n+    public static final String jakartaeeServer = \"com.ibm.ws.jca.fat.jakarta\";\n+\n     @ClassRule\n     public static RepeatTests r = RepeatTests.withoutModification()\n-                    .andWith(FeatureReplacementAction.EE8_FEATURES());\n-}\n\\ No newline at end of file\n+                    .andWith(FeatureReplacementAction.EE8_FEATURES())\n+                    .andWith(new JakartaEE9Action());\n+\n+    public static LibertyServer getServer() {\n+        if (JakartaEE9Action.isActive()) {\n+            return LibertyServerFactory.getLibertyServer(jakartaeeServer);\n+        } else {\n+            return LibertyServerFactory.getLibertyServer(javaeeServer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NDY1OQ=="}, "originalCommit": {"oid": "d8d69059ce8c08f901740aa90b884935862ad7b0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE3MDkwNw==", "bodyText": "Opened this as a new issue here: #14374", "url": "https://github.com/OpenLiberty/open-liberty/pull/13811#discussion_r501170907", "createdAt": "2020-10-07T17:02:05Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/FATSuite.java", "diffHunk": "@@ -29,7 +32,21 @@\n                 ConnectionManagerMBeanTest.class\n })\n public class FATSuite {\n+\n+    public static final String javaeeServer = \"com.ibm.ws.jca.fat\";\n+    public static final String jakartaeeServer = \"com.ibm.ws.jca.fat.jakarta\";\n+\n     @ClassRule\n     public static RepeatTests r = RepeatTests.withoutModification()\n-                    .andWith(FeatureReplacementAction.EE8_FEATURES());\n-}\n\\ No newline at end of file\n+                    .andWith(FeatureReplacementAction.EE8_FEATURES())\n+                    .andWith(new JakartaEE9Action());\n+\n+    public static LibertyServer getServer() {\n+        if (JakartaEE9Action.isActive()) {\n+            return LibertyServerFactory.getLibertyServer(jakartaeeServer);\n+        } else {\n+            return LibertyServerFactory.getLibertyServer(javaeeServer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NDY1OQ=="}, "originalCommit": {"oid": "d8d69059ce8c08f901740aa90b884935862ad7b0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzcyMDM2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/app/JCATest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo1MDoyMFrOHdTPtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODoyNjowMlrOHdUnPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NjA2OA==", "bodyText": "It's fine to skip the test, but this seems like something to report to the team that is working on the transformer if you haven't already.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13811#discussion_r500486068", "createdAt": "2020-10-06T17:50:20Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/app/JCATest.java", "diffHunk": "@@ -134,27 +101,28 @@ public static void tearDown() throws Exception {\n \n     @Test\n     public void testActivationSpec() throws Exception {\n-        runInServlet(\"testActivationSpec\", fvtweb);\n+        runTest();\n     }\n \n     @Test\n     public void testActivationSpecBindings() throws Exception {\n-        runInServlet(\"testActivationSpecBindings\", fvtweb);\n+        runTest();\n     }\n \n     @Test\n     public void testDestinations() throws Exception {\n-        runInServlet(\"testDestinations\", fvtweb);\n+        runTest();\n     }\n \n     @Test\n+    @SkipForRepeat(EE9_FEATURES) //Transformer does not seem to transform jars inside of jars", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d69059ce8c08f901740aa90b884935862ad7b0"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwODQ3OA==", "bodyText": "\ud83d\udc4d Will do!", "url": "https://github.com/OpenLiberty/open-liberty/pull/13811#discussion_r500508478", "createdAt": "2020-10-06T18:26:02Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.jca_fat/fat/src/com/ibm/ws/jca/fat/app/JCATest.java", "diffHunk": "@@ -134,27 +101,28 @@ public static void tearDown() throws Exception {\n \n     @Test\n     public void testActivationSpec() throws Exception {\n-        runInServlet(\"testActivationSpec\", fvtweb);\n+        runTest();\n     }\n \n     @Test\n     public void testActivationSpecBindings() throws Exception {\n-        runInServlet(\"testActivationSpecBindings\", fvtweb);\n+        runTest();\n     }\n \n     @Test\n     public void testDestinations() throws Exception {\n-        runInServlet(\"testDestinations\", fvtweb);\n+        runTest();\n     }\n \n     @Test\n+    @SkipForRepeat(EE9_FEATURES) //Transformer does not seem to transform jars inside of jars", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NjA2OA=="}, "originalCommit": {"oid": "d8d69059ce8c08f901740aa90b884935862ad7b0"}, "originalPosition": 110}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2864, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}