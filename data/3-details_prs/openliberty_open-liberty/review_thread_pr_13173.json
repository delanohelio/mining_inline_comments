{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjkxNzI1", "number": 13173, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo1ODoyOFrOEW5nVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNjoxM1rOFY-j_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDQ4MDg0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo1ODoyOFrOG-ZX8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNTowMjo1M1rOH2i22g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4MDYyNQ==", "bodyText": "Setting this static variable dynamically means that if the static method getLoadedJspSpecLevel is called early then it could return null.  It seems that AbstractJSPExtensionServletWrapper is the only place calling this static.  Is there something passed into the constructor of AbstractJSPExtensionServletWrapper that has access to a service component that can be injected with the JspVersion or this JSPExtensionFactory", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r468080625", "createdAt": "2020-08-10T17:58:28Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "diffHunk": "@@ -177,6 +183,19 @@ protected void modified(Map<Object, Object> properties) {\n                 defaultProperties.put(key, value);\n         }\n     }\n+\n+    @Reference(service = JspVersion.class, cardinality = ReferenceCardinality.MANDATORY, policy = ReferencePolicy.DYNAMIC, policyOption = ReferencePolicyOption.GREEDY)\n+    protected synchronized void setVersion(ServiceReference<JspVersion> reference) {\n+      this.versionRef = reference;\n+      JSPExtensionFactory.CURRENT_LOADED_VERSION = (String) reference.getProperty(\"version\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85cc9448b828ce220c9a6921966c3993805f775"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzNzIyNA==", "bodyText": "Sorry for the long delay.  I didn't see a way to pass in the variable. Additionally, I did not experience a null values during my testing.\nSince this is quite similar to the servlet version implementation, I think it should be fine for JSP?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r520637224", "createdAt": "2020-11-10T15:10:49Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "diffHunk": "@@ -177,6 +183,19 @@ protected void modified(Map<Object, Object> properties) {\n                 defaultProperties.put(key, value);\n         }\n     }\n+\n+    @Reference(service = JspVersion.class, cardinality = ReferenceCardinality.MANDATORY, policy = ReferencePolicy.DYNAMIC, policyOption = ReferencePolicyOption.GREEDY)\n+    protected synchronized void setVersion(ServiceReference<JspVersion> reference) {\n+      this.versionRef = reference;\n+      JSPExtensionFactory.CURRENT_LOADED_VERSION = (String) reference.getProperty(\"version\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4MDYyNQ=="}, "originalCommit": {"oid": "f85cc9448b828ce220c9a6921966c3993805f775"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM1NzA3MA==", "bodyText": "I think this will work, but still should be considered some amount of technical dept.  If I follow the code correctly the JSPExtensionFactory ends up driving the construction of AbstractJSPExtensionServletWrapper through inherited method com.ibm.ws.jsp.webcontainerext.AbstractJSPExtensionProcessor.createServletWrapper(IServletConfig) when JSPExtensionFactory creates the com.ibm.ws.jsp.webcontainerext.JSPExtensionProcessor from the method com.ibm.ws.jsp.webcontainerext.JSPExtensionFactory.createProcessor(IServletContext, JspXmlExtConfig, JspClassloaderContext)\nIt seems that somehow the version could be passed down through this code path, but I'm not sure if this is the only usage of AbstractJSPExtensionServletWrapper.  It seems there is also an extending class com.ibm.ws.jsp.inmemory.webcontainerext.AbstractInMemoryJSPExtensionServletWrapper but I don't see how that class is ever used.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r525357070", "createdAt": "2020-11-17T17:40:51Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "diffHunk": "@@ -177,6 +183,19 @@ protected void modified(Map<Object, Object> properties) {\n                 defaultProperties.put(key, value);\n         }\n     }\n+\n+    @Reference(service = JspVersion.class, cardinality = ReferenceCardinality.MANDATORY, policy = ReferencePolicy.DYNAMIC, policyOption = ReferencePolicyOption.GREEDY)\n+    protected synchronized void setVersion(ServiceReference<JspVersion> reference) {\n+      this.versionRef = reference;\n+      JSPExtensionFactory.CURRENT_LOADED_VERSION = (String) reference.getProperty(\"version\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4MDYyNQ=="}, "originalCommit": {"oid": "f85cc9448b828ce220c9a6921966c3993805f775"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1NjI1MA==", "bodyText": "As the web app is initialized, JSP page is translated to servlet code, then compiled. When the actual compilation occurs (compile on startup vs compile during a request) depends on some web.xml parameters.\nThe translation phase needs a JSP class version associated with it (GeneratorUtilsExtImpl.getClassFileVersion). This version is later used to check if page was compiled against a different JSP version (2.2 vs 2.3, for example) in the AbstractJSPExtensionServletWrapper  _checkForTranslation method\nThis comparison should be done only during new requests as it\u2019s not needed during startup (translate/compile only occurs once).  The translationRequired flag skips the compilation version check.\nI added a Thread.sleep in the new setVersion method to see if it creates any problems with the versions, but not unexpected errors occurred. (I\"m guessing the later Threads don't kick off until the majority of the liberty initializations finish?)\nIn short, I don\u2019t think there shouldn\u2019t be any issues with AbstractJSPExtensionServletWrapper since when  JSPExtensionFactory.getLoadedPagesSpecLevel is called the jsps would have been compiled at least once and that means there must have been enough time for setVersion to be called.\nIn Jsp flow, GeneratorUtilsExtImpl.getClassFileVersion(which retrieves the version) is called first since translation is one of the earlier steps in the JSP process.\nAs for the flow you mentioned in your post the stack trace is below. The createServletWrapper method is called between checkForTranslation & findWrapper.\nJSPExtensionServletWrapper(AbstractJSPExtensionServletWrapper).checkForTranslation(HttpServletRequest) line: 245\t\nJSPExtensionProcessor(AbstractJSPExtensionProcessor).findWrapper(HttpServletRequest, HttpServletResponse) line: 508\t\nJSPExtensionProcessor(AbstractJSPExtensionProcessor).getServletWrapper(ServletRequest, ServletResponse) line: 351\t\nWebApp31(WebApp).handleRequest(ServletRequest, ServletResponse, HttpInboundConnection) line: 5027\t\nDynamicVirtualHost$2.handleRequest(ServletRequest, ServletResponse) line: 314\t\nWebContainer(WebContainer).handleRequest(IRequest, IResponse, VirtualHost, RequestProcessor) line: 1005\t\nDynamicVirtualHost$2.run() line: 279", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r526956250", "createdAt": "2020-11-19T15:02:53Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "diffHunk": "@@ -177,6 +183,19 @@ protected void modified(Map<Object, Object> properties) {\n                 defaultProperties.put(key, value);\n         }\n     }\n+\n+    @Reference(service = JspVersion.class, cardinality = ReferenceCardinality.MANDATORY, policy = ReferencePolicy.DYNAMIC, policyOption = ReferencePolicyOption.GREEDY)\n+    protected synchronized void setVersion(ServiceReference<JspVersion> reference) {\n+      this.versionRef = reference;\n+      JSPExtensionFactory.CURRENT_LOADED_VERSION = (String) reference.getProperty(\"version\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4MDYyNQ=="}, "originalCommit": {"oid": "f85cc9448b828ce220c9a6921966c3993805f775"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDQ5MTc0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp.2.3/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODowMToxNlrOG-Zeeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODowMToxNlrOG-Zeeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4MjI5OA==", "bodyText": "duplicate build path entry", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r468082298", "createdAt": "2020-08-10T18:01:16Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.jsp.2.3/bnd.bnd", "diffHunk": "@@ -100,4 +104,9 @@ instrument.classesExcludes: org/apache/**/*.class\n \tcom.ibm.ws.container.service;version=latest,\\\n \tcom.ibm.ws.logging.core,\\\n \tcom.ibm.wsspi.org.osgi.service.component.annotations, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85cc9448b828ce220c9a6921966c3993805f775"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDQ5MjgxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp.2.3/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODowMTozNVrOG-ZfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODowMTozNVrOG-ZfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4MjQ2NA==", "bodyText": "duplicate build path entry", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r468082464", "createdAt": "2020-08-10T18:01:35Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.jsp.2.3/bnd.bnd", "diffHunk": "@@ -100,4 +104,9 @@ instrument.classesExcludes: org/apache/**/*.class\n \tcom.ibm.ws.container.service;version=latest,\\\n \tcom.ibm.ws.logging.core,\\\n \tcom.ibm.wsspi.org.osgi.service.component.annotations, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+\tcom.ibm.websphere.org.osgi.service.component;version=latest, \\\n+\tcom.ibm.wsspi.org.osgi.service.component.annotations;version=latest, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85cc9448b828ce220c9a6921966c3993805f775"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDA2NDMxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/resources/com/ibm/ws/jsp/resources/messages.nlsprops", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNTo0MDoxMlrOHwimtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyNDoxMFrOH18Lrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY2MDY2Mg==", "bodyText": "Let me know if any word changes should be made.  I wasn't sure to go with JSP or Pages as this message applies to all features.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r520660662", "createdAt": "2020-11-10T15:40:12Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/resources/com/ibm/ws/jsp/resources/messages.nlsprops", "diffHunk": "@@ -1257,4 +1257,8 @@ jsp.parse.tld.exception.useraction=Check the JSP Tag Library Descriptor file for\n \n system.java.compiler.not.found=JSPG0304W: The JSP attribute, useJDKCompiler, is set to true, but the Java SDK compiler was not found. The JSP container uses the compiler that is embedded in the product to compile the JSP files in web module: {0}.\n system.java.compiler.not.found.explanation=The JSP container was unable to find the system compiler, which usually indicates that the Java SDK jar file, tools.jar, was not found in the class path.\n-system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n\\ No newline at end of file\n+system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n+\n+jsp.feature.not.loaded.correctly=CWWJS0001: The JSP [Pages] feature did not load with an acceptable version.\n+jsp.feature.not.loaded.correctly.explanation=The JSP [Pages] feature is loaded with a version that corresponds to the Java [Jakarta] EE specification of that JSP [Pages] feature. The feature was loaded with no version defined.\n+jsp.feature.not.loaded.correctly.useraction=Check the server.xml file for existence of either a jsp-2.2, jsp-2.3, or pages-3.0 feature. Only one of the listed features should be specified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "497da86488dbb0e7268840b4efab97da538acbde"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI3MjA5Ng==", "bodyText": "My only worry here is the useraction as this is going to require continuous updates going forward to add in additional features as they are available. This is something that could be easily missed in the future.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r525272096", "createdAt": "2020-11-17T15:52:46Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp/resources/com/ibm/ws/jsp/resources/messages.nlsprops", "diffHunk": "@@ -1257,4 +1257,8 @@ jsp.parse.tld.exception.useraction=Check the JSP Tag Library Descriptor file for\n \n system.java.compiler.not.found=JSPG0304W: The JSP attribute, useJDKCompiler, is set to true, but the Java SDK compiler was not found. The JSP container uses the compiler that is embedded in the product to compile the JSP files in web module: {0}.\n system.java.compiler.not.found.explanation=The JSP container was unable to find the system compiler, which usually indicates that the Java SDK jar file, tools.jar, was not found in the class path.\n-system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n\\ No newline at end of file\n+system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n+\n+jsp.feature.not.loaded.correctly=CWWJS0001: The JSP [Pages] feature did not load with an acceptable version.\n+jsp.feature.not.loaded.correctly.explanation=The JSP [Pages] feature is loaded with a version that corresponds to the Java [Jakarta] EE specification of that JSP [Pages] feature. The feature was loaded with no version defined.\n+jsp.feature.not.loaded.correctly.useraction=Check the server.xml file for existence of either a jsp-2.2, jsp-2.3, or pages-3.0 feature. Only one of the listed features should be specified.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY2MDY2Mg=="}, "originalCommit": {"oid": "497da86488dbb0e7268840b4efab97da538acbde"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NzM0Mg==", "bodyText": "I can have it more generic.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r525347342", "createdAt": "2020-11-17T17:26:30Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/resources/com/ibm/ws/jsp/resources/messages.nlsprops", "diffHunk": "@@ -1257,4 +1257,8 @@ jsp.parse.tld.exception.useraction=Check the JSP Tag Library Descriptor file for\n \n system.java.compiler.not.found=JSPG0304W: The JSP attribute, useJDKCompiler, is set to true, but the Java SDK compiler was not found. The JSP container uses the compiler that is embedded in the product to compile the JSP files in web module: {0}.\n system.java.compiler.not.found.explanation=The JSP container was unable to find the system compiler, which usually indicates that the Java SDK jar file, tools.jar, was not found in the class path.\n-system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n\\ No newline at end of file\n+system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n+\n+jsp.feature.not.loaded.correctly=CWWJS0001: The JSP [Pages] feature did not load with an acceptable version.\n+jsp.feature.not.loaded.correctly.explanation=The JSP [Pages] feature is loaded with a version that corresponds to the Java [Jakarta] EE specification of that JSP [Pages] feature. The feature was loaded with no version defined.\n+jsp.feature.not.loaded.correctly.useraction=Check the server.xml file for existence of either a jsp-2.2, jsp-2.3, or pages-3.0 feature. Only one of the listed features should be specified.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY2MDY2Mg=="}, "originalCommit": {"oid": "497da86488dbb0e7268840b4efab97da538acbde"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMjYwNg==", "bodyText": "updated to jsp.feature.not.loaded.correctly.useraction=Check the server.xml file for existence of either a JSP [Pages] feature. Only one should be specified.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r526322606", "createdAt": "2020-11-18T18:24:10Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/resources/com/ibm/ws/jsp/resources/messages.nlsprops", "diffHunk": "@@ -1257,4 +1257,8 @@ jsp.parse.tld.exception.useraction=Check the JSP Tag Library Descriptor file for\n \n system.java.compiler.not.found=JSPG0304W: The JSP attribute, useJDKCompiler, is set to true, but the Java SDK compiler was not found. The JSP container uses the compiler that is embedded in the product to compile the JSP files in web module: {0}.\n system.java.compiler.not.found.explanation=The JSP container was unable to find the system compiler, which usually indicates that the Java SDK jar file, tools.jar, was not found in the class path.\n-system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n\\ No newline at end of file\n+system.java.compiler.not.found.useraction=Ensure that the Java SDK jar file, tools.jar, is in the class path and verify that the Java SDK supports the Java Compiler API. See Java Specification Request 199 for more information.\n+\n+jsp.feature.not.loaded.correctly=CWWJS0001: The JSP [Pages] feature did not load with an acceptable version.\n+jsp.feature.not.loaded.correctly.explanation=The JSP [Pages] feature is loaded with a version that corresponds to the Java [Jakarta] EE specification of that JSP [Pages] feature. The feature was loaded with no version defined.\n+jsp.feature.not.loaded.correctly.useraction=Check the server.xml file for existence of either a jsp-2.2, jsp-2.3, or pages-3.0 feature. Only one of the listed features should be specified.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY2MDY2Mg=="}, "originalCommit": {"oid": "497da86488dbb0e7268840b4efab97da538acbde"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODg1NTU4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.javaee.version/src/com/ibm/ws/javaee/version/PagesVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDo1MzowMFrOHyxYtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo1MzozM1rOH08Gdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk5OTk5MA==", "bodyText": "PagesVerion or JspVersion?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r522999990", "createdAt": "2020-11-13T14:53:00Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.javaee.version/src/com/ibm/ws/javaee/version/PagesVersion.java", "diffHunk": "@@ -8,13 +10,10 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n-package com.ibm.ws.jsp.webcontainerext;\n \n /**\n- *\n- */\n-public interface JspVersionFactory {\n-    \n-    public JspVersion getJspVersion();\n-\n+*  Holder class for version info.\n+*/\n+public class PagesVersion {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b820830b45ac8f232a0efa9313a556514a8412"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI3MjY5NQ==", "bodyText": "I think PagesVersion is fine it could easily be related back to JSP (Java Server Pages) or to Jakarta  Server Pages in my opinion", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r525272695", "createdAt": "2020-11-17T15:53:33Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.javaee.version/src/com/ibm/ws/javaee/version/PagesVersion.java", "diffHunk": "@@ -8,13 +10,10 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n-package com.ibm.ws.jsp.webcontainerext;\n \n /**\n- *\n- */\n-public interface JspVersionFactory {\n-    \n-    public JspVersion getJspVersion();\n-\n+*  Holder class for version info.\n+*/\n+public class PagesVersion {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk5OTk5MA=="}, "originalCommit": {"oid": "33b820830b45ac8f232a0efa9313a556514a8412"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzY1NzIxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/bnd.bnd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjozNToyMVrOH0-IWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyNDo0MlrOH18M4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwNTk0NA==", "bodyText": "Can you fix this formatting?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r525305944", "createdAt": "2020-11-17T16:35:21Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp/bnd.bnd", "diffHunk": "@@ -165,4 +165,5 @@ instrument.classesExcludes: com/ibm/ws/jsp/resources/*.class\n \tcom.ibm.ws.org.apache.jasper.el.2.2;version=latest,\\\n \tcom.ibm.ws.kernel.security.thread;version=latest,\\\n \tcom.ibm.ws.artifact.url;version=latest, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+  com.ibm.ws.javaee.version;version=latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbec17d9c5ecb34eb7524b7c11953ff923db8c35"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMjkxMg==", "bodyText": "done", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r526322912", "createdAt": "2020-11-18T18:24:42Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/bnd.bnd", "diffHunk": "@@ -165,4 +165,5 @@ instrument.classesExcludes: com/ibm/ws/jsp/resources/*.class\n \tcom.ibm.ws.org.apache.jasper.el.2.2;version=latest,\\\n \tcom.ibm.ws.kernel.security.thread;version=latest,\\\n \tcom.ibm.ws.artifact.url;version=latest, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+  com.ibm.ws.javaee.version;version=latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwNTk0NA=="}, "originalCommit": {"oid": "dbec17d9c5ecb34eb7524b7c11953ff923db8c35"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwNzMwNDQ0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/AbstractJSPExtensionProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQxOTozNTo1M1rOIhzYtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQyMDoyODowNVrOIh1ZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjMxNTgzMQ==", "bodyText": "This looks like it could be a  final field?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r572315831", "createdAt": "2021-02-08T19:35:53Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/AbstractJSPExtensionProcessor.java", "diffHunk": "@@ -135,6 +135,8 @@ static final protected Object getSyncObject(String name) {\n     protected JspClassloaderContext jspClassloaderContext = null;\n     protected JspCompilerFactory jspCompilerFactory = null;\n     protected IServletContextExtended webapp = null;\n+    \n+    protected String loadedJSPVersion = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3283a1e269a5c753dc2f842bd9515a4d905145"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjM0ODcwMQ==", "bodyText": "I see no harm in that. When a new JSP feature is loaded, a new com.ibm.ws.jsp.webcontainerext.JSPExtensionProcessor is created with a newer version associated with it.  Let me update the code .", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r572348701", "createdAt": "2021-02-08T20:28:05Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/AbstractJSPExtensionProcessor.java", "diffHunk": "@@ -135,6 +135,8 @@ static final protected Object getSyncObject(String name) {\n     protected JspClassloaderContext jspClassloaderContext = null;\n     protected JspCompilerFactory jspCompilerFactory = null;\n     protected IServletContextExtended webapp = null;\n+    \n+    protected String loadedJSPVersion = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjMxNTgzMQ=="}, "originalCommit": {"oid": "ce3283a1e269a5c753dc2f842bd9515a4d905145"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwNzQyNzE4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQyMDowNTo1NVrOIh0jhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQyMDowNTo1NVrOIh0jhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjMzNDk4Mg==", "bodyText": "Reminder to fix this spacing.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r572334982", "createdAt": "2021-02-08T20:05:55Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.jsp/bnd.bnd", "diffHunk": "@@ -156,4 +156,5 @@ instrument.classesExcludes: com/ibm/ws/jsp/resources/*.class\n \tcom.ibm.ws.kernel.security.thread;version=latest,\\\n \tcom.ibm.ws.artifact.url;version=latest, \\\n \tcom.ibm.ws.org.osgi.annotation.versioning;version=latest,\\\n-\tcom.ibm.ws.org.apache.taglibs.standard;version=latest\n+\tcom.ibm.ws.org.apache.taglibs.standard;version=latest, \\\n+   com.ibm.ws.javaee.version;version=latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3283a1e269a5c753dc2f842bd9515a4d905145"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNzMyMjM1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp.2.3_fat/fat/src/com/ibm/ws/jsp23/fat/tests/JSP23JSP22ServerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowMDoyNlrOIjRQSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowMDoyNlrOIjRQSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzg1Mzc3MQ==", "bodyText": "This should be pages-3.0 , just a slight spelling mistake", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r573853771", "createdAt": "2021-02-10T16:00:26Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp.2.3_fat/fat/src/com/ibm/ws/jsp23/fat/tests/JSP23JSP22ServerTest.java", "diffHunk": "@@ -112,4 +114,44 @@ public void testJspFeatureChange() throws Exception {\n         assertTrue(\"The response did not contain: JSP version: 2.2\", response.getText().contains(\"JSP version: 2.2\"));\n \n     }\n+\n+    /**\n+     * Test a JSP request with the jsp-2.3 feature enabled.\n+     * Then change the feature to pages-3.0 and request the same JSP again.\n+     * The JSP should be recompiled.\n+     * The JSP file pulls the version out of it's generated code and displays it in the rendered page.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    @SkipForRepeat(SkipForRepeat.NO_MODIFICATION)\n+    public void testJsp30to23FeatureChange() throws Exception {\n+        WebConversation wc = new WebConversation();\n+        wc.setExceptionsThrownOnErrorStatus(false);\n+\n+        LOG.info(\"Requesting JSP with pagse-3.0 feature enabled\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5199cb0dd204797f0f81c0e86f7b2eadef1b8e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNzMyODM1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp.2.3_fat/fat/src/com/ibm/ws/jsp23/fat/tests/JSP23JSP22ServerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowMTozN1rOIjRUHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowMTozN1rOIjRUHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzg1NDc0OQ==", "bodyText": "Should this documentation be a bit different here? It seems you're driving a request with pages-30 first then jsp-2.3?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r573854749", "createdAt": "2021-02-10T16:01:37Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp.2.3_fat/fat/src/com/ibm/ws/jsp23/fat/tests/JSP23JSP22ServerTest.java", "diffHunk": "@@ -112,4 +114,44 @@ public void testJspFeatureChange() throws Exception {\n         assertTrue(\"The response did not contain: JSP version: 2.2\", response.getText().contains(\"JSP version: 2.2\"));\n \n     }\n+\n+    /**\n+     * Test a JSP request with the jsp-2.3 feature enabled.\n+     * Then change the feature to pages-3.0 and request the same JSP again.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5199cb0dd204797f0f81c0e86f7b2eadef1b8e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNzMzNjAzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowMzoxMVrOIjRY9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowMzoxMVrOIjRY9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzg1NTk4OA==", "bodyText": "Should we clean up these no new lines errors? Also in messages.nlsprops.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r573855988", "createdAt": "2021-02-10T16:03:11Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp/bnd.bnd", "diffHunk": "@@ -156,4 +156,5 @@ instrument.classesExcludes: com/ibm/ws/jsp/resources/*.class\n \tcom.ibm.ws.kernel.security.thread;version=latest,\\\n \tcom.ibm.ws.artifact.url;version=latest, \\\n \tcom.ibm.ws.org.osgi.annotation.versioning;version=latest,\\\n-\tcom.ibm.ws.org.apache.taglibs.standard;version=latest\n+\tcom.ibm.ws.org.apache.taglibs.standard;version=latest, \\\n+\tcom.ibm.ws.javaee.version;version=latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5199cb0dd204797f0f81c0e86f7b2eadef1b8e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNzMzOTk4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/AbstractJSPExtensionProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNDowMlrOIjRblw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNDowMlrOIjRblw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzg1NjY2Mw==", "bodyText": "Update copyright in this class for 2021", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r573856663", "createdAt": "2021-02-10T16:04:02Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/AbstractJSPExtensionProcessor.java", "diffHunk": "@@ -135,6 +135,8 @@ static final protected Object getSyncObject(String name) {\n     protected JspClassloaderContext jspClassloaderContext = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5199cb0dd204797f0f81c0e86f7b2eadef1b8e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNzM0Mjk0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNDo0MFrOIjRdkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNDo0MFrOIjRdkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzg1NzE3MQ==", "bodyText": "Update copyright to 2021.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r573857171", "createdAt": "2021-02-10T16:04:40Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionFactory.java", "diffHunk": "@@ -16,11 +16,14 @@\n import java.net.URL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5199cb0dd204797f0f81c0e86f7b2eadef1b8e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNzM1MTY0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNjoxM1rOIjRiuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxNjowNjoxM1rOIjRiuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzg1ODQ4OA==", "bodyText": "Use loadedJSPVersion for consistency across classes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13173#discussion_r573858488", "createdAt": "2021-02-10T16:06:13Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/webcontainerext/JSPExtensionProcessor.java", "diffHunk": "@@ -26,8 +26,8 @@\n     public JSPExtensionProcessor(IServletContext webapp, \n                                  JspXmlExtConfig webAppConfig, \n                                  GlobalTagLibraryCache globalTagLibraryCache,\n-                                 JspClassloaderContext jspClassloaderContext) throws Exception {\n-        super(webapp, webAppConfig, globalTagLibraryCache, jspClassloaderContext);\n+                                 JspClassloaderContext jspClassloaderContext, String loadedJSPversion) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5199cb0dd204797f0f81c0e86f7b2eadef1b8e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2976, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}