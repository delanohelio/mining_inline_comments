{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODIzODAz", "number": 12250, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoyNTo1NlrOEOYP8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODozMDoxNlrOEOYWWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTEyODE3OnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoyNTo1NlrOGxf-dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoyNzozMVrOGxr4uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1NzMwMg==", "bodyText": "we can remove this case, or throw an exception here. All public features should have a version component", "url": "https://github.com/OpenLiberty/open-liberty/pull/12250#discussion_r454557302", "createdAt": "2020-07-14T18:25:56Z", "author": {"login": "aguibert"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "diffHunk": "@@ -378,14 +390,54 @@ public void setup() throws Exception {\n             LibertyClientFactory.getLibertyClient(clientName);\n     }\n \n-    private static String getReplacementFeature(String originalFeature, Set<String> featuresToAdd) {\n+    /**\n+     * Obtain the replacement for a feature for this replacement action.\n+     * \n+     * The lookup uses the base feature name, which is the feature name up to\n+     * the first '-' character.\n+     * \n+     * If EE9 replacement is active, allow the base feature name to be replaced\n+     * with an EE9 replacement.\n+     * \n+     * If no replacement is located, answer null, which indicates that the feature\n+     * should be removed instead of being replaced.\n+     *\n+     * Feature names are required to have a '-', for example, \"servlet-3.1\".  Null\n+     * is answered for feature names which do not have a '-'.\n+     *\n+     * @param originalFeature The feature name which is to be replaced.\n+     * @param replacementFeatures Table of replacement features.\n+     *\n+     * @return The replacement feature name.  Null if no replacement is available.\n+     */\n+    private static String getReplacementFeature(String originalFeature, Set<String> replacementFeatures) {\n+        String methodName = \"getReplacementFeature\";\n         // Example: servlet-3.1 --> servlet-4.0\n-        String featureBasename = originalFeature.substring(0, originalFeature.indexOf('-') + 1); // \"servlet-\"\n-        for (String featureToAdd : featuresToAdd)\n-            if (featureToAdd.contains(featureBasename)) // \"servlet-4.0\".contains(\"servlet-\")\n-                return featureToAdd;\n+        int dashOffset = originalFeature.indexOf('-');\n+        if ( dashOffset == -1 ) {\n+            Log.info(c, methodName, \"Remove feature [ \" + originalFeature +  \" ]: No '-' was found.\");\n+            return null;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c831075057cd1264ab85d205f0b6ace41fa26c9"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1MjQ0Mw==", "bodyText": "Ok sounds good Ill make the change to throw an exception since it could be possible that manually someone adds a feature and mistakenly leaves out the '-' so that would be a good debug as to why it failed", "url": "https://github.com/OpenLiberty/open-liberty/pull/12250#discussion_r454752443", "createdAt": "2020-07-15T02:27:31Z", "author": {"login": "isaacrivriv"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "diffHunk": "@@ -378,14 +390,54 @@ public void setup() throws Exception {\n             LibertyClientFactory.getLibertyClient(clientName);\n     }\n \n-    private static String getReplacementFeature(String originalFeature, Set<String> featuresToAdd) {\n+    /**\n+     * Obtain the replacement for a feature for this replacement action.\n+     * \n+     * The lookup uses the base feature name, which is the feature name up to\n+     * the first '-' character.\n+     * \n+     * If EE9 replacement is active, allow the base feature name to be replaced\n+     * with an EE9 replacement.\n+     * \n+     * If no replacement is located, answer null, which indicates that the feature\n+     * should be removed instead of being replaced.\n+     *\n+     * Feature names are required to have a '-', for example, \"servlet-3.1\".  Null\n+     * is answered for feature names which do not have a '-'.\n+     *\n+     * @param originalFeature The feature name which is to be replaced.\n+     * @param replacementFeatures Table of replacement features.\n+     *\n+     * @return The replacement feature name.  Null if no replacement is available.\n+     */\n+    private static String getReplacementFeature(String originalFeature, Set<String> replacementFeatures) {\n+        String methodName = \"getReplacementFeature\";\n         // Example: servlet-3.1 --> servlet-4.0\n-        String featureBasename = originalFeature.substring(0, originalFeature.indexOf('-') + 1); // \"servlet-\"\n-        for (String featureToAdd : featuresToAdd)\n-            if (featureToAdd.contains(featureBasename)) // \"servlet-4.0\".contains(\"servlet-\")\n-                return featureToAdd;\n+        int dashOffset = originalFeature.indexOf('-');\n+        if ( dashOffset == -1 ) {\n+            Log.info(c, methodName, \"Remove feature [ \" + originalFeature +  \" ]: No '-' was found.\");\n+            return null;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1NzMwMg=="}, "originalCommit": {"oid": "0c831075057cd1264ab85d205f0b6ace41fa26c9"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTE0NDU3OnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODozMDoxNlrOGxgIbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoyOToxOFrOGxr6WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1OTg1Mg==", "bodyText": "Lets move this block after the standard replacement block -- we should prefer standard replacements over the special case replacements generally.\nAlso, we need to support both directions: EE7/8 --> EE9 but also EE9 --> EE7/8\nFor this we can simply iterate over featuresWithNameChangeOnEE9.entrySet() and check if replacementFeature is the key or the value, and if it is, check the opposite entry (value or key respectively) for the replacement.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12250#discussion_r454559852", "createdAt": "2020-07-14T18:30:16Z", "author": {"login": "aguibert"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "diffHunk": "@@ -378,14 +390,54 @@ public void setup() throws Exception {\n             LibertyClientFactory.getLibertyClient(clientName);\n     }\n \n-    private static String getReplacementFeature(String originalFeature, Set<String> featuresToAdd) {\n+    /**\n+     * Obtain the replacement for a feature for this replacement action.\n+     * \n+     * The lookup uses the base feature name, which is the feature name up to\n+     * the first '-' character.\n+     * \n+     * If EE9 replacement is active, allow the base feature name to be replaced\n+     * with an EE9 replacement.\n+     * \n+     * If no replacement is located, answer null, which indicates that the feature\n+     * should be removed instead of being replaced.\n+     *\n+     * Feature names are required to have a '-', for example, \"servlet-3.1\".  Null\n+     * is answered for feature names which do not have a '-'.\n+     *\n+     * @param originalFeature The feature name which is to be replaced.\n+     * @param replacementFeatures Table of replacement features.\n+     *\n+     * @return The replacement feature name.  Null if no replacement is available.\n+     */\n+    private static String getReplacementFeature(String originalFeature, Set<String> replacementFeatures) {\n+        String methodName = \"getReplacementFeature\";\n         // Example: servlet-3.1 --> servlet-4.0\n-        String featureBasename = originalFeature.substring(0, originalFeature.indexOf('-') + 1); // \"servlet-\"\n-        for (String featureToAdd : featuresToAdd)\n-            if (featureToAdd.contains(featureBasename)) // \"servlet-4.0\".contains(\"servlet-\")\n-                return featureToAdd;\n+        int dashOffset = originalFeature.indexOf('-');\n+        if ( dashOffset == -1 ) {\n+            Log.info(c, methodName, \"Remove feature [ \" + originalFeature +  \" ]: No '-' was found.\");\n+            return null;\n+        }\n+        // \"servlet-3.1\" ==> \"servlet\"\n+        String baseFeature = originalFeature.substring(0, dashOffset);\n+        if ( JakartaEE9Action.isActive() ) {\n+            String ee9BaseFeature = featuresWithNameChangeOnEE9.get(baseFeature);\n+            if ( ee9BaseFeature != null ) {\n+                Log.info(c, methodName, \"Replace base feature [ \" + baseFeature +  \" ] with EE9 feature [ \" + ee9BaseFeature + \" ]\");\n+                baseFeature = ee9BaseFeature;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c831075057cd1264ab85d205f0b6ace41fa26c9"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1Mjg1Ng==", "bodyText": "Ok sounds good Ill make the change", "url": "https://github.com/OpenLiberty/open-liberty/pull/12250#discussion_r454752856", "createdAt": "2020-07-15T02:29:18Z", "author": {"login": "isaacrivriv"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "diffHunk": "@@ -378,14 +390,54 @@ public void setup() throws Exception {\n             LibertyClientFactory.getLibertyClient(clientName);\n     }\n \n-    private static String getReplacementFeature(String originalFeature, Set<String> featuresToAdd) {\n+    /**\n+     * Obtain the replacement for a feature for this replacement action.\n+     * \n+     * The lookup uses the base feature name, which is the feature name up to\n+     * the first '-' character.\n+     * \n+     * If EE9 replacement is active, allow the base feature name to be replaced\n+     * with an EE9 replacement.\n+     * \n+     * If no replacement is located, answer null, which indicates that the feature\n+     * should be removed instead of being replaced.\n+     *\n+     * Feature names are required to have a '-', for example, \"servlet-3.1\".  Null\n+     * is answered for feature names which do not have a '-'.\n+     *\n+     * @param originalFeature The feature name which is to be replaced.\n+     * @param replacementFeatures Table of replacement features.\n+     *\n+     * @return The replacement feature name.  Null if no replacement is available.\n+     */\n+    private static String getReplacementFeature(String originalFeature, Set<String> replacementFeatures) {\n+        String methodName = \"getReplacementFeature\";\n         // Example: servlet-3.1 --> servlet-4.0\n-        String featureBasename = originalFeature.substring(0, originalFeature.indexOf('-') + 1); // \"servlet-\"\n-        for (String featureToAdd : featuresToAdd)\n-            if (featureToAdd.contains(featureBasename)) // \"servlet-4.0\".contains(\"servlet-\")\n-                return featureToAdd;\n+        int dashOffset = originalFeature.indexOf('-');\n+        if ( dashOffset == -1 ) {\n+            Log.info(c, methodName, \"Remove feature [ \" + originalFeature +  \" ]: No '-' was found.\");\n+            return null;\n+        }\n+        // \"servlet-3.1\" ==> \"servlet\"\n+        String baseFeature = originalFeature.substring(0, dashOffset);\n+        if ( JakartaEE9Action.isActive() ) {\n+            String ee9BaseFeature = featuresWithNameChangeOnEE9.get(baseFeature);\n+            if ( ee9BaseFeature != null ) {\n+                Log.info(c, methodName, \"Replace base feature [ \" + baseFeature +  \" ] with EE9 feature [ \" + ee9BaseFeature + \" ]\");\n+                baseFeature = ee9BaseFeature;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1OTg1Mg=="}, "originalCommit": {"oid": "0c831075057cd1264ab85d205f0b6ace41fa26c9"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1657, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}