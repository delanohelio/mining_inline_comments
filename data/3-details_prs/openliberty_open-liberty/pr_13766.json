{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzM5MDkw", "number": 13766, "title": "Update grpcClient configuration attributes", "bodyText": "A few updates need to be made to the <grpcTarget/> configuration:\n\nrename grpcTarget -> grpcClient\nrename target -> host and path\nrename sslConfig -> sslRef and add correct type\nadd new props keepAliveWithoutCalls, maxInboundMetadataSize, overrideAuthority, userAgent, and usePlaintext\nremove enableKeepAlive and authnToken\nset duration, min, max, default where applicable\n\nfor #10089, #10090, and #13586", "createdAt": "2020-09-01T21:13:51Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766", "merged": true, "mergeCommit": {"oid": "82291bd8db39393cd54ea140b1d3f4c79ae15867"}, "closed": true, "closedAt": "2020-09-14T12:06:04Z", "author": {"login": "wtlucy"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFFI_SABqjM3MjIyNjY4NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHlG52AH2gAyNDc3MzM5MDkwOjdmYWEzMWZkYjg3MzAwZThhZGFmMTFkM2I2ZDA0NzQ4YjMxOGJiOWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ace0ed0e24a97b9d685b5631ba21e9ecf20df890", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ace0ed0e24a97b9d685b5631ba21e9ecf20df890", "committedDate": "2020-09-02T20:53:15Z", "message": "rename grpcClient target -> host"}, "afterCommit": {"oid": "59fe7de71d8c6e00f782bff944eccd4c0ecafd3a", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/59fe7de71d8c6e00f782bff944eccd4c0ecafd3a", "committedDate": "2020-09-03T00:05:44Z", "message": "rename grpcClient target -> host"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59fe7de71d8c6e00f782bff944eccd4c0ecafd3a", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/59fe7de71d8c6e00f782bff944eccd4c0ecafd3a", "committedDate": "2020-09-03T00:05:44Z", "message": "rename grpcClient target -> host"}, "afterCommit": {"oid": "e16c33bf1138701178fae90f59f1aa6602f3cd2b", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e16c33bf1138701178fae90f59f1aa6602f3cd2b", "committedDate": "2020-09-08T16:23:55Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e16c33bf1138701178fae90f59f1aa6602f3cd2b", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e16c33bf1138701178fae90f59f1aa6602f3cd2b", "committedDate": "2020-09-08T16:23:55Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}, "afterCommit": {"oid": "eb42aa9ebac90a186c03c69b06b45afd81aa5f31", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/eb42aa9ebac90a186c03c69b06b45afd81aa5f31", "committedDate": "2020-09-08T16:45:16Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb42aa9ebac90a186c03c69b06b45afd81aa5f31", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/eb42aa9ebac90a186c03c69b06b45afd81aa5f31", "committedDate": "2020-09-08T16:45:16Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}, "afterCommit": {"oid": "8b125b5a127881071575771a6e01917542678351", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8b125b5a127881071575771a6e01917542678351", "committedDate": "2020-09-08T20:53:41Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55467be80a7b0b7a5006d6a639536f12f212a29c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/55467be80a7b0b7a5006d6a639536f12f212a29c", "committedDate": "2020-09-09T15:09:22Z", "message": "fix ssl config attribute for grpcClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6612f064aae2279403a2fe0bfdfacf7e6a6b3f5e", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6612f064aae2279403a2fe0bfdfacf7e6a6b3f5e", "committedDate": "2020-09-09T15:09:23Z", "message": "add new grpcClient server.xml config props"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5df0f0b70f88e2ac83fe129ed6ee6156aa88a38", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a5df0f0b70f88e2ac83fe129ed6ee6156aa88a38", "committedDate": "2020-09-09T15:11:15Z", "message": "remove authnToken config from grpcClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a51a66927a094174919c2f9c22832a3d3a11dd44", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a51a66927a094174919c2f9c22832a3d3a11dd44", "committedDate": "2020-09-09T15:16:07Z", "message": "rename server.xml grpcTarget -> grpcClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "973dd4ad921d313ef0e116811f5825e3c04a32a5", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/973dd4ad921d313ef0e116811f5825e3c04a32a5", "committedDate": "2020-09-09T15:17:13Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "committedDate": "2020-09-09T16:17:17Z", "message": "merge updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b125b5a127881071575771a6e01917542678351", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8b125b5a127881071575771a6e01917542678351", "committedDate": "2020-09-08T20:53:41Z", "message": "replace grpcClient \"target\" config with \"host\" and \"port\""}, "afterCommit": {"oid": "722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "committedDate": "2020-09-09T16:17:17Z", "message": "merge updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14ffbb0cdab8d7f3fa885ed0d5407d5ae4e34d9b", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/14ffbb0cdab8d7f3fa885ed0d5407d5ae4e34d9b", "committedDate": "2020-09-09T16:21:23Z", "message": "merge with integration"}, "afterCommit": {"oid": "722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "committedDate": "2020-09-09T16:17:17Z", "message": "merge updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab946af60b6f5cccde9d35d940729cc2a5af67e9", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ab946af60b6f5cccde9d35d940729cc2a5af67e9", "committedDate": "2020-09-09T16:24:20Z", "message": "merge with integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e91e798c79b1a0e77cbae2a4daf46f329b3fe831", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e91e798c79b1a0e77cbae2a4daf46f329b3fe831", "committedDate": "2020-09-09T18:25:13Z", "message": "add grpcClient usePlaintext config prop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Mzg0NTQ5", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#pullrequestreview-485384549", "createdAt": "2020-09-09T20:36:32Z", "commit": {"oid": "e91e798c79b1a0e77cbae2a4daf46f329b3fe831"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18cd5dd290d396816084da1722f660f239955781", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/18cd5dd290d396816084da1722f660f239955781", "committedDate": "2020-09-09T21:05:57Z", "message": "code review updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTcyMjg1", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#pullrequestreview-486172285", "createdAt": "2020-09-10T17:49:24Z", "commit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo0OToyNVrOHP_Kdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1Njo1MlrOHP_b4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNTU1OQ==", "bodyText": "Suggested update\n\nA path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n\nTo\n\nA path consists of the gRPC service and method names, in the \"ServiceName/MethodName\" format.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486525559", "createdAt": "2020-09-10T17:49:25Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjY1Nw==", "bodyText": "Suggested update\n\nPerform keepalive when there are no outstanding RPCs on the channel.\n\nTo\n\nPerform keepalive when no outstanding RPCs are on the channel.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486526657", "createdAt": "2020-09-10T17:51:15Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ==", "bodyText": "Suggested update\n\nSSL Reference\n\nTo\n\nSSL reference", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486526845", "createdAt": "2020-09-10T17:51:36Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNzc1Nw==", "bodyText": "Suggested update\n\nA custom authority which will override the default authority.\n\nTo\n\nA custom authority that overrides the default authority.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486527757", "createdAt": "2020-09-10T17:53:03Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyOTQ4NA==", "bodyText": "Suggested update\n\nA custom User-Agent which will prepend the default User-Agent.\n\nTo\n\nA custom User-Agent that adds a prefix to the default User-Agent.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486529484", "createdAt": "2020-09-10T17:55:59Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyOTc0Mw==", "bodyText": "Suggested update\n\nUse a plaintext connection\n\nTo\n\nUse a plain text connection", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486529743", "createdAt": "2020-09-10T17:56:23Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.\n+\n+usePlaintext=Use a plaintext connection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzMDAxNg==", "bodyText": "Suggested update\n\nUse a plaintext connection for the outbound gRPC channel.\n\nTo\n\nUse a plain text connection for the outbound gRPC channel.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486530016", "createdAt": "2020-09-10T17:56:52Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.\n+\n+usePlaintext=Use a plaintext connection\n+usePlaintext.desc=Use a plaintext connection for the outbound gRPC channel.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7faa31fdb87300e8adaf11d3b6d04748b318bb9c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7faa31fdb87300e8adaf11d3b6d04748b318bb9c", "committedDate": "2020-09-10T18:28:44Z", "message": "ID review updates"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3433, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}