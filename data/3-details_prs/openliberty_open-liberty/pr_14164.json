{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDY3NDU4", "number": 14164, "title": "Add a JAX-RS MULTIPART_FORM_DATA test that consumes a .csv file with at least 256 characters of data", "bodyText": "", "createdAt": "2020-09-25T13:21:23Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164", "merged": true, "mergeCommit": {"oid": "ac202a723fa1185203f4faf0329c514528d82e87"}, "closed": true, "closedAt": "2020-09-27T23:46:00Z", "author": {"login": "jkoehler22"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMWUG2AFqTQ5NjQ1MDAzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdM-1BIgBqjM4MTE2NjA2MjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDUwMDM0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164#pullrequestreview-496450034", "createdAt": "2020-09-25T14:04:11Z", "commit": {"oid": "307dd1d210b85a7329ebfe1016d2e501ad979b61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNDoxMlrOHYFCOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNDoxMlrOHYFCOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMDM2MA==", "bodyText": "Probably you should move the stream.close(), out.flush() and out.close() into a finally{} with null checks.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164#discussion_r495010360", "createdAt": "2020-09-25T14:04:12Z", "author": {"login": "jim-krueger"}, "path": "dev/com.ibm.ws.jaxrs.2.x.webcontainer_fat/test-applications/thirdpartylib/src/com/ibm/ws/jaxrs2x/fat/thirdparty/multipart/UploadServiceImpl.java", "diffHunk": "@@ -70,6 +73,37 @@ public Response uploadFile(List<IAttachment> attachments, @Context HttpServletRe\n         return Response.ok(\"file uploaded\").build();\n     }\n \n+    @POST\n+    @Path(\"/uploadFile2\")\n+    @Consumes(MediaType.MULTIPART_FORM_DATA)\n+    public Response uploadFile2(List<IAttachment> attachments, @Context HttpServletRequest request) {\n+        for (IAttachment attachment : attachments) {\n+            DataHandler handler = attachment.getDataHandler();\n+            try {\n+                InputStream stream = handler.getInputStream();\n+                MultivaluedMap<String, String> map = attachment.getHeaders();\n+                System.out.println(\"fileName2 Here \" + getFileName(map));\n+                OutputStream out = new FileOutputStream(new File(\"./\" + getFileName(map)));\n+                StringBuilder stringBuilder = new StringBuilder();\n+                Reader in = new InputStreamReader(stream, StandardCharsets.UTF_8);\n+                char[] chars = new char[1024];\n+                int charsRead;\n+                while((charsRead = in.read(chars, 0, chars.length)) > 0) {\n+                    stringBuilder.append(chars, 0, charsRead);\n+                    out.write(new String(chars).getBytes(\"UTF-8\"), 0, charsRead);\n+                }\n+                System.out.println(\"uploadFile2 stringBuilder.toString(): \" + stringBuilder.toString());\n+                stream.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "307dd1d210b85a7329ebfe1016d2e501ad979b61"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDc1NDE5", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164#pullrequestreview-496475419", "createdAt": "2020-09-25T14:28:48Z", "commit": {"oid": "307dd1d210b85a7329ebfe1016d2e501ad979b61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoyODo0OFrOHYGENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoyODo0OFrOHYGENg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyNzI1NA==", "bodyText": "this will always return ok(\"file uploaded\") even if there was an exception thrown.\nMaybe put this return statement as the last line of the try block, and then add the following line inside the catch block (after printing the stack trace):\nreturn Response.serverError().entity(\"caught exception: \" + e);", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164#discussion_r495027254", "createdAt": "2020-09-25T14:28:48Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.2.x.webcontainer_fat/test-applications/thirdpartylib/src/com/ibm/ws/jaxrs2x/fat/thirdparty/multipart/UploadServiceImpl.java", "diffHunk": "@@ -70,6 +73,37 @@ public Response uploadFile(List<IAttachment> attachments, @Context HttpServletRe\n         return Response.ok(\"file uploaded\").build();\n     }\n \n+    @POST\n+    @Path(\"/uploadFile2\")\n+    @Consumes(MediaType.MULTIPART_FORM_DATA)\n+    public Response uploadFile2(List<IAttachment> attachments, @Context HttpServletRequest request) {\n+        for (IAttachment attachment : attachments) {\n+            DataHandler handler = attachment.getDataHandler();\n+            try {\n+                InputStream stream = handler.getInputStream();\n+                MultivaluedMap<String, String> map = attachment.getHeaders();\n+                System.out.println(\"fileName2 Here \" + getFileName(map));\n+                OutputStream out = new FileOutputStream(new File(\"./\" + getFileName(map)));\n+                StringBuilder stringBuilder = new StringBuilder();\n+                Reader in = new InputStreamReader(stream, StandardCharsets.UTF_8);\n+                char[] chars = new char[1024];\n+                int charsRead;\n+                while((charsRead = in.read(chars, 0, chars.length)) > 0) {\n+                    stringBuilder.append(chars, 0, charsRead);\n+                    out.write(new String(chars).getBytes(\"UTF-8\"), 0, charsRead);\n+                }\n+                System.out.println(\"uploadFile2 stringBuilder.toString(): \" + stringBuilder.toString());\n+                stream.close();\n+                out.flush();\n+                out.close();\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        return Response.ok(\"file uploaded\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "307dd1d210b85a7329ebfe1016d2e501ad979b61"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDc3MDU1", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164#pullrequestreview-496477055", "createdAt": "2020-09-25T14:30:35Z", "commit": {"oid": "307dd1d210b85a7329ebfe1016d2e501ad979b61"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2Njk2NTkx", "url": "https://github.com/OpenLiberty/open-liberty/pull/14164#pullrequestreview-496696591", "createdAt": "2020-09-25T18:50:50Z", "commit": {"oid": "5af047d42893aa3e25d10aefb93f44e46cbaae0b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f96de47960599f63f8a2bd9dee00aacdc7a86ef2", "author": {"user": {"login": "jkoehler22", "name": "John Koehler"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f96de47960599f63f8a2bd9dee00aacdc7a86ef2", "committedDate": "2020-09-27T13:15:53Z", "message": "Add a JAX-RS MULTIPART_FORM_DATA test that consumes a .csv file with at least 256 characters of data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d903d7adfe95f7e53378e11b818904d0efe24f28", "author": {"user": {"login": "jkoehler22", "name": "John Koehler"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d903d7adfe95f7e53378e11b818904d0efe24f28", "committedDate": "2020-09-27T13:15:53Z", "message": "Add a JAX-RS MULTIPART_FORM_DATA test that consume a .csv file with at least 256 characters of data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2dd70138deaf9a6b5b3e30b3ed4a5bf54d1105a", "author": {"user": {"login": "jkoehler22", "name": "John Koehler"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b2dd70138deaf9a6b5b3e30b3ed4a5bf54d1105a", "committedDate": "2020-09-27T13:15:54Z", "message": "Add a JAX-RS MULTIPART_FORM_DATA test that consume a .csv file with at least 256 characters of data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9590959e66a92fd5fdd5256a8a164af33c1917a1", "author": {"user": {"login": "jkoehler22", "name": "John Koehler"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9590959e66a92fd5fdd5256a8a164af33c1917a1", "committedDate": "2020-09-27T13:15:54Z", "message": "Add a JAX-RS MULTIPART_FORM_DATA test that consume a .csv file with at least 256 characters of data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5af047d42893aa3e25d10aefb93f44e46cbaae0b", "author": {"user": {"login": "jkoehler22", "name": "John Koehler"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5af047d42893aa3e25d10aefb93f44e46cbaae0b", "committedDate": "2020-09-25T18:18:57Z", "message": "Add a JAX-RS MULTIPART_FORM_DATA test that consume a .csv file with at least 256 characters of data"}, "afterCommit": {"oid": "9590959e66a92fd5fdd5256a8a164af33c1917a1", "author": {"user": {"login": "jkoehler22", "name": "John Koehler"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9590959e66a92fd5fdd5256a8a164af33c1917a1", "committedDate": "2020-09-27T13:15:54Z", "message": "Add a JAX-RS MULTIPART_FORM_DATA test that consume a .csv file with at least 256 characters of data"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3302, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}