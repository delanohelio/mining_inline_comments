{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTQwODI4", "number": 12563, "title": "Send Redirect to Relative URL", "bodyText": "#10000", "createdAt": "2020-06-10T15:39:03Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563", "merged": true, "mergeCommit": {"oid": "45e786bfab448c7b9b50ac933cfdc6f17685710d"}, "closed": true, "closedAt": "2020-12-03T19:38:42Z", "author": {"login": "pmd1nh"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp706LAFqTQyODIwMzk0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiDOnCAFqTU0MjQwMjIwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjAzOTQy", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428203942", "createdAt": "2020-06-10T15:59:10Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1OToxMFrOGh7wtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1OToxMFrOGh7wtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTMxNw==", "bodyText": "This is a new class right? If so then we don't need a 2017 date range in it.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438235317", "createdAt": "2020-06-10T15:59:10Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLDefault.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA0Mzgz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428204383", "createdAt": "2020-06-10T15:59:38Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1OTozOFrOGh7yEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1OTozOFrOGh7yEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTY2Nw==", "bodyText": "New class don't see it necessary for a 2017 date range unless I'm missing something.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438235667", "createdAt": "2020-06-10T15:59:38Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLTrue.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA0NzEz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428204713", "createdAt": "2020-06-10T16:00:00Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMDowMVrOGh7zGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMDowMVrOGh7zGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTkyOA==", "bodyText": "Have you considered running this test in FULL mode vs LITE?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438235928", "createdAt": "2020-06-10T16:00:01Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLTrue.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.fat.wc.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.logging.Logger;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.ws.fat.util.LoggingTest;\n+import com.ibm.ws.fat.util.SharedServer;\n+import com.ibm.ws.fat.wc.WCApplicationHelper;\n+\n+import componenttest.custom.junit.runner.FATRunner;\n+\n+@RunWith(FATRunner.class)\n+public class WCSendRedirectRelativeURLTrue extends LoggingTest {\n+\n+    private static final Logger LOG = Logger.getLogger(WCAddJspFileTest.class.getName());\n+\n+    @ClassRule\n+    public static SharedServer SHARED_SERVER = new SharedServer(\"servlet40_sendRedirectURL_True\");\n+\n+    /*\n+     * (non-Javadoc)\n+     *\n+     * @see com.ibm.ws.fat.util.LoggingTest#getSharedServer()\n+     */\n+    @Override\n+    protected SharedServer getSharedServer() {\n+        return SHARED_SERVER;\n+    }\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        LOG.info(\"Setup : add TestAddJspFile to the server if not already present.\");\n+\n+        WCApplicationHelper.addEarToServerDropins(SHARED_SERVER.getLibertyServer(), \"TestAddJspFile.ear\", false,\n+                                                  \"TestAddJspFile.war\", true, null, false, \"testaddjspfile.war.listeners\");\n+\n+        SHARED_SERVER.startIfNotStarted();\n+        WCApplicationHelper.waitForAppStart(\"TestAddJspFile\", WCAddJspFileTest.class.getName(), SHARED_SERVER.getLibertyServer());\n+        LOG.info(\"Setup : complete, ready for Tests\");\n+    }\n+\n+    @AfterClass\n+    public static void testCleanup() throws Exception {\n+        SHARED_SERVER.getLibertyServer().stopServer();\n+    }\n+\n+    /**\n+     * Test with WC property: redirecttorelativeurl = true.\n+     * Request to a JSP which generates sendRedirect(RelativeURL). //NOTE that this target RelativeURL does not actually exist.\n+     * Use the HttpURLConnection() with conn.setInstanceFollowRedirects(false) to stop following the redirect.\n+     * The test only interests in the 302 with Location header being set to the RelativeURL (i.e there is no http://host:port/ portion)\n+     * Most (if not all) modern browser agents should be able to redirect with the relative URL\n+     */\n+    @Test\n+    public void testResponseSendRedirectToRelativeURL_True() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA0ODQ5", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428204849", "createdAt": "2020-06-10T16:00:09Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMDowOVrOGh7zew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMDowOVrOGh7zew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjAyNw==", "bodyText": "Have you considered running this test in FULL mode vs LITE?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438236027", "createdAt": "2020-06-10T16:00:09Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLDefault.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.fat.wc.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.logging.Logger;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.ws.fat.util.LoggingTest;\n+import com.ibm.ws.fat.util.SharedServer;\n+import com.ibm.ws.fat.wc.WCApplicationHelper;\n+\n+import componenttest.custom.junit.runner.FATRunner;\n+\n+@RunWith(FATRunner.class)\n+public class WCSendRedirectRelativeURLDefault extends LoggingTest {\n+\n+    private static final Logger LOG = Logger.getLogger(WCAddJspFileTest.class.getName());\n+\n+    @ClassRule\n+    public static SharedServer SHARED_SERVER = new SharedServer(\"servlet40_sendRedirectURL_Default\");\n+\n+    @Override\n+    protected SharedServer getSharedServer() {\n+        return SHARED_SERVER;\n+    }\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        LOG.info(\"Setup : add TestAddJspFile to the server if not already present.\");\n+\n+        WCApplicationHelper.addEarToServerDropins(SHARED_SERVER.getLibertyServer(), \"TestAddJspFile.ear\", false,\n+                                                  \"TestAddJspFile.war\", true, null, false, \"testaddjspfile.war.listeners\");\n+\n+        SHARED_SERVER.startIfNotStarted();\n+        WCApplicationHelper.waitForAppStart(\"TestAddJspFile\", WCAddJspFileTest.class.getName(), SHARED_SERVER.getLibertyServer());\n+        LOG.info(\"Setup : complete, ready for Tests\");\n+    }\n+\n+    @AfterClass\n+    public static void testCleanup() throws Exception {\n+        SHARED_SERVER.getLibertyServer().stopServer();\n+    }\n+\n+    /**\n+     * Test default sendRedirect\n+     * Request to a JSP which generate sendRedirect(RelativeURL). //NOTE that this target RelativeURL does not actually exist.\n+     * Use the HttpURLConnection() with conn.setInstanceFollowRedirects(false) to stop following the redirect.\n+     * The test only interest in the 302 with Location header being set to absolute URL (i.e http://host:port/ portion)\n+     */\n+    @Test\n+    public void testResponseSendRedirectToRelativeURL_Default() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA1ODQw", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428205840", "createdAt": "2020-06-10T16:01:14Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMToxNFrOGh72eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMToxNFrOGh72eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjc5NA==", "bodyText": "This comment is for both test classes, any reason we're specifically using the SharedServer here vs just the standard LibertyServer?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438236794", "createdAt": "2020-06-10T16:01:14Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLDefault.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.fat.wc.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.logging.Logger;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.ws.fat.util.LoggingTest;\n+import com.ibm.ws.fat.util.SharedServer;\n+import com.ibm.ws.fat.wc.WCApplicationHelper;\n+\n+import componenttest.custom.junit.runner.FATRunner;\n+\n+@RunWith(FATRunner.class)\n+public class WCSendRedirectRelativeURLDefault extends LoggingTest {\n+\n+    private static final Logger LOG = Logger.getLogger(WCAddJspFileTest.class.getName());\n+\n+    @ClassRule\n+    public static SharedServer SHARED_SERVER = new SharedServer(\"servlet40_sendRedirectURL_Default\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA3OTIx", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428207921", "createdAt": "2020-06-10T16:03:26Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMzoyNlrOGh78Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMzoyNlrOGh78Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzODIxMQ==", "bodyText": "If you're targeting the next release it should be 20.0.0.7", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438238211", "createdAt": "2020-06-10T16:03:26Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -312,6 +312,9 @@\n \n     //19.0.0.8\n     public static boolean GET_REAL_PATH_RETURNS_QUALIFIED_PATH;\n+    \n+    //20.0.0.6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA4NTE1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428208515", "createdAt": "2020-06-10T16:03:48Z", "commit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMzo0OVrOGh786Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMzo0OVrOGh786Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzODQ0MQ==", "bodyText": "20.0.0.7 if targeting the next release", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438238441", "createdAt": "2020-06-10T16:03:49Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -789,6 +792,10 @@ public static void setCustomPropertyVariables() {\n \n         // 19.0.0.8\n         GET_REAL_PATH_RETURNS_QUALIFIED_PATH = Boolean.valueOf(WebContainer.getWebContainerProperties().getProperty(\"com.ibm.ws.webcontainer.getrealpathreturnsqualifiedpath\", \"true\")).booleanValue();\n+        \n+        //20.0.0.6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3fdcfae7a9ff4abd900e4a350284c24806080a74", "committedDate": "2020-06-10T15:36:29Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/489e3907da9f8eab4d6e63bbec5674d59c1d0f3f", "committedDate": "2020-06-10T16:44:46Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzQxNDA1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-428341405", "createdAt": "2020-06-10T18:55:21Z", "commit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODo1NToyMVrOGiCQMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODo1NTo1N1rOGiCRhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0MTY4Mg==", "bodyText": "Set this property to true to send response redirect without checking and converting to an absolute URL location.\ndoes this mean the response redirect is not converted to an absolute URL location? or the destination of the redirect is not converted?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438341682", "createdAt": "2020-06-10T18:55:21Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.webcontainer/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -174,3 +174,6 @@ getRealPathReturnsQualifiedPath.desc=Return non-null paths from the ServletConte\n \n stopAppStartUponListenerException.name=Stop application for unhandled listener exception\n stopAppStartUponListenerException.desc=Some web applications depend on context listeners for setup before the web application starts. Set this property to true to stop the application from starting up when an unhandled exception is thrown from the context listeners.\n+\n+redirectToRelativeUrl.name=Send response redirect to a relative URL location\n+redirectToRelativeUrl.desc=Send response redirect to a relative URL location without processing it. Set this property to true to send response redirect without checking and converting to an absolute URL location. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0MjAyMg==", "bodyText": "what is a \"response redirect\"  in this context?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438342022", "createdAt": "2020-06-10T18:55:57Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.webcontainer/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -174,3 +174,6 @@ getRealPathReturnsQualifiedPath.desc=Return non-null paths from the ServletConte\n \n stopAppStartUponListenerException.name=Stop application for unhandled listener exception\n stopAppStartUponListenerException.desc=Some web applications depend on context listeners for setup before the web application starts. Set this property to true to stop the application from starting up when an unhandled exception is thrown from the context listeners.\n+\n+redirectToRelativeUrl.name=Send response redirect to a relative URL location", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/489e3907da9f8eab4d6e63bbec5674d59c1d0f3f", "committedDate": "2020-06-10T16:44:46Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "f51da0ca323f1aa5240188ed0b9990862ace98f5", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f51da0ca323f1aa5240188ed0b9990862ace98f5", "committedDate": "2020-06-10T19:58:06Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Mzc2MDEz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-429376013", "createdAt": "2020-06-12T00:01:20Z", "commit": {"oid": "f51da0ca323f1aa5240188ed0b9990862ace98f5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDowMToyMFrOGiyktw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDowMzo0NVrOGiynFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMzM2Nw==", "bodyText": "ok in that case\nchange\nSend response redirect to a relative URL location\nto\nSend a redirect response to a relative URL location", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r439133367", "createdAt": "2020-06-12T00:01:20Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.webcontainer/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -174,3 +174,6 @@ getRealPathReturnsQualifiedPath.desc=Return non-null paths from the ServletConte\n \n stopAppStartUponListenerException.name=Stop application for unhandled listener exception\n stopAppStartUponListenerException.desc=Some web applications depend on context listeners for setup before the web application starts. Set this property to true to stop the application from starting up when an unhandled exception is thrown from the context listeners.\n+\n+redirectToRelativeUrl.name=Send response redirect to a relative URL location", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0MjAyMg=="}, "originalCommit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMzk3NA==", "bodyText": "based on above comments, should be redirect response. I'm also wondering if \"checking\" is needed here, or if it might be part of \"converting\". If not:\nSet this property to true to send a redirect response without converting the URL to an absolute location.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r439133974", "createdAt": "2020-06-12T00:03:45Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.webcontainer/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -174,3 +174,6 @@ getRealPathReturnsQualifiedPath.desc=Return non-null paths from the ServletConte\n \n stopAppStartUponListenerException.name=Stop application for unhandled listener exception\n stopAppStartUponListenerException.desc=Some web applications depend on context listeners for setup before the web application starts. Set this property to true to stop the application from starting up when an unhandled exception is thrown from the context listeners.\n+\n+redirectToRelativeUrl.name=Send response redirect to a relative URL location\n+redirectToRelativeUrl.desc=Send response redirect to a relative URL location without processing it. Set this property to true to send response redirect without checking and converting to an absolute URL location. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0MTY4Mg=="}, "originalCommit": {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f51da0ca323f1aa5240188ed0b9990862ace98f5", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f51da0ca323f1aa5240188ed0b9990862ace98f5", "committedDate": "2020-06-10T19:58:06Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "c67fafa50b714e548e78cf67c2b1a093d3cdb026", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c67fafa50b714e548e78cf67c2b1a093d3cdb026", "committedDate": "2020-06-15T14:24:27Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNjk3MDk2", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-430697096", "createdAt": "2020-06-15T14:27:19Z", "commit": {"oid": "c67fafa50b714e548e78cf67c2b1a093d3cdb026"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c67fafa50b714e548e78cf67c2b1a093d3cdb026", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c67fafa50b714e548e78cf67c2b1a093d3cdb026", "committedDate": "2020-06-15T14:24:27Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "82ea07a1af7a31e1886043f843151e220bf89267", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/82ea07a1af7a31e1886043f843151e220bf89267", "committedDate": "2020-08-03T15:11:35Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82ea07a1af7a31e1886043f843151e220bf89267", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/82ea07a1af7a31e1886043f843151e220bf89267", "committedDate": "2020-08-03T15:11:35Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1", "committedDate": "2020-08-04T18:33:35Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjgxNjIz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-461681623", "createdAt": "2020-08-05T13:48:48Z", "commit": {"oid": "d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1", "committedDate": "2020-08-04T18:33:35Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "0fe2e77267ef1e863f7ceff0494c5275b52efba4", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0fe2e77267ef1e863f7ceff0494c5275b52efba4", "committedDate": "2020-08-26T18:02:39Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0fe2e77267ef1e863f7ceff0494c5275b52efba4", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0fe2e77267ef1e863f7ceff0494c5275b52efba4", "committedDate": "2020-08-26T18:02:39Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "e2be326d8c339cc389d13a4253c90c00af5a0461", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e2be326d8c339cc389d13a4253c90c00af5a0461", "committedDate": "2020-08-27T14:11:00Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2be326d8c339cc389d13a4253c90c00af5a0461", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e2be326d8c339cc389d13a4253c90c00af5a0461", "committedDate": "2020-08-27T14:11:00Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "0c05b86c9575000a8cccc7d04c91ef16a661556f", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0c05b86c9575000a8cccc7d04c91ef16a661556f", "committedDate": "2020-08-27T14:16:00Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c05b86c9575000a8cccc7d04c91ef16a661556f", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0c05b86c9575000a8cccc7d04c91ef16a661556f", "committedDate": "2020-08-27T14:16:00Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "01d6a3afe2e2cd7692a80bb3b59b60123712c903", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/01d6a3afe2e2cd7692a80bb3b59b60123712c903", "committedDate": "2020-10-29T14:34:57Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01d6a3afe2e2cd7692a80bb3b59b60123712c903", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/01d6a3afe2e2cd7692a80bb3b59b60123712c903", "committedDate": "2020-10-29T14:34:57Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "ecf510ca3f0ff8bd80c5d485a28551a5239b8ebd", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ecf510ca3f0ff8bd80c5d485a28551a5239b8ebd", "committedDate": "2020-10-29T18:28:25Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecf510ca3f0ff8bd80c5d485a28551a5239b8ebd", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ecf510ca3f0ff8bd80c5d485a28551a5239b8ebd", "committedDate": "2020-10-29T18:28:25Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "1f66b7adca84b48fbac049c9f5a268103b86a101", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1f66b7adca84b48fbac049c9f5a268103b86a101", "committedDate": "2020-10-30T01:55:22Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f66b7adca84b48fbac049c9f5a268103b86a101", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1f66b7adca84b48fbac049c9f5a268103b86a101", "committedDate": "2020-10-30T01:55:22Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "24d30bef290d5923219ab48648812a813c7434a6", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/24d30bef290d5923219ab48648812a813c7434a6", "committedDate": "2020-10-30T01:58:52Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzk2NjU3", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-541396657", "createdAt": "2020-12-01T00:18:39Z", "commit": {"oid": "24d30bef290d5923219ab48648812a813c7434a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxODo0MFrOH8TFcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxODo0MFrOH8TFcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4OTI5OA==", "bodyText": "Phu I think we need to update this comment to reflect whatever release this is going to make it into. Please check it out, update the comment, run a build and lets get this merged this week if we can.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r532989298", "createdAt": "2020-12-01T00:18:40Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -316,6 +316,9 @@\n     //20.0.0.8\n     public static boolean DECODE_URL_PLUS_SIGN;\n \n+    //20.0.0.12\n+    public static boolean REDIRECT_TO_RELATIVE_URL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d30bef290d5923219ab48648812a813c7434a6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzk2NzI0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-541396724", "createdAt": "2020-12-01T00:18:49Z", "commit": {"oid": "24d30bef290d5923219ab48648812a813c7434a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxODo1MFrOH8TFqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxODo1MFrOH8TFqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4OTM1NA==", "bodyText": "Same goes for this comment", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r532989354", "createdAt": "2020-12-01T00:18:50Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -792,6 +795,9 @@ public static void setCustomPropertyVariables() {\n         // 19.0.0.8\n         GET_REAL_PATH_RETURNS_QUALIFIED_PATH = Boolean.valueOf(WebContainer.getWebContainerProperties().getProperty(\"com.ibm.ws.webcontainer.getrealpathreturnsqualifiedpath\", \"true\")).booleanValue();\n         \n+        //20.0.0.12\n+        REDIRECT_TO_RELATIVE_URL = Boolean.valueOf(WebContainer.getWebContainerProperties().getProperty(\"com.ibm.ws.webcontainer.redirecttorelativeurl\", \"false\")).booleanValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d30bef290d5923219ab48648812a813c7434a6"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b32823202b61c2bd0b1aa715e714f92c88c901", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/22b32823202b61c2bd0b1aa715e714f92c88c901", "committedDate": "2020-12-01T21:28:03Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24d30bef290d5923219ab48648812a813c7434a6", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/24d30bef290d5923219ab48648812a813c7434a6", "committedDate": "2020-10-30T01:58:52Z", "message": "Send Redirect to Relative URL"}, "afterCommit": {"oid": "22b32823202b61c2bd0b1aa715e714f92c88c901", "author": {"user": {"login": "pmd1nh", "name": "Phu Dinh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/22b32823202b61c2bd0b1aa715e714f92c88c901", "committedDate": "2020-12-01T21:28:03Z", "message": "Send Redirect to Relative URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDAyMjAw", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#pullrequestreview-542402200", "createdAt": "2020-12-02T00:16:20Z", "commit": {"oid": "22b32823202b61c2bd0b1aa715e714f92c88c901"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2407, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}