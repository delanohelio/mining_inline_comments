{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTUxMDQ2", "number": 14661, "title": "trusted header configuration improvements ", "bodyText": "for #9809", "createdAt": "2020-10-22T20:49:42Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661", "merged": true, "mergeCommit": {"oid": "ce1753f099d2f9cefe939ba7c0ed02d78ef932d1"}, "closed": true, "closedAt": "2021-01-18T22:56:21Z", "author": {"login": "wtlucy"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZUnX7gBqjM5NTk1NDgwMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABduy4soAH2gAyNTA4NTUxMDQ2OmMzMjY2NDdmYzA5MjA0ZjkwZWM0NzcwMTNkOWJmZjk3YWJhOTRmMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dbf36a0ee97bd6a7f8f8c76d0ba8e0245be128cc", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/dbf36a0ee97bd6a7f8f8c76d0ba8e0245be128cc", "committedDate": "2020-10-22T20:47:07Z", "message": "first pass at supporting CIDR filters"}, "afterCommit": {"oid": "27da4f06619599036a46ebe9044f8d338cb848f4", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/27da4f06619599036a46ebe9044f8d338cb848f4", "committedDate": "2020-11-04T21:26:13Z", "message": "keep existing public method names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86260aefee937ff540c0e8dcc1f713ad30c39d30", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/86260aefee937ff540c0e8dcc1f713ad30c39d30", "committedDate": "2020-11-10T13:37:53Z", "message": "update unittests"}, "afterCommit": {"oid": "31ce26a0291417064185682e75098786bf384f39", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/31ce26a0291417064185682e75098786bf384f39", "committedDate": "2020-12-02T22:00:48Z", "message": "refactor to use chfw FilterList utilities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31ce26a0291417064185682e75098786bf384f39", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/31ce26a0291417064185682e75098786bf384f39", "committedDate": "2020-12-02T22:00:48Z", "message": "refactor to use chfw FilterList utilities"}, "afterCommit": {"oid": "95201f2b33d455fa994a66f1488538baad269f88", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/95201f2b33d455fa994a66f1488538baad269f88", "committedDate": "2020-12-02T23:42:57Z", "message": "refactor to use chfw FilterList utilities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95201f2b33d455fa994a66f1488538baad269f88", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/95201f2b33d455fa994a66f1488538baad269f88", "committedDate": "2020-12-02T23:42:57Z", "message": "refactor to use chfw FilterList utilities"}, "afterCommit": {"oid": "9b26213e1f742ce7bec05cc2f1abec173a9677f5", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9b26213e1f742ce7bec05cc2f1abec173a9677f5", "committedDate": "2020-12-03T16:32:33Z", "message": "refactor to use cfw FilterList objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b26213e1f742ce7bec05cc2f1abec173a9677f5", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9b26213e1f742ce7bec05cc2f1abec173a9677f5", "committedDate": "2020-12-03T16:32:33Z", "message": "refactor to use cfw FilterList objects"}, "afterCommit": {"oid": "a43f0b89d47115262f4167a5256cf5103053c67e", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a43f0b89d47115262f4167a5256cf5103053c67e", "committedDate": "2020-12-03T19:48:55Z", "message": "refactor to use cfw FilterList objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a43f0b89d47115262f4167a5256cf5103053c67e", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a43f0b89d47115262f4167a5256cf5103053c67e", "committedDate": "2020-12-03T19:48:55Z", "message": "refactor to use cfw FilterList objects"}, "afterCommit": {"oid": "862d3565b658a548611c784a54f1508e337241dd", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/862d3565b658a548611c784a54f1508e337241dd", "committedDate": "2020-12-03T20:02:01Z", "message": "refactor to use cfw FilterList objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "862d3565b658a548611c784a54f1508e337241dd", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/862d3565b658a548611c784a54f1508e337241dd", "committedDate": "2020-12-03T20:02:01Z", "message": "refactor to use cfw FilterList objects"}, "afterCommit": {"oid": "303e649296e5374b671b87d8afde907a10bb864d", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/303e649296e5374b671b87d8afde907a10bb864d", "committedDate": "2020-12-03T20:04:32Z", "message": "refactor to use cfw FilterList objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "303e649296e5374b671b87d8afde907a10bb864d", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/303e649296e5374b671b87d8afde907a10bb864d", "committedDate": "2020-12-03T20:04:32Z", "message": "refactor to use cfw FilterList objects"}, "afterCommit": {"oid": "7f9abc2b56e0b62437afd7464f0ca77cb5af2f51", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7f9abc2b56e0b62437afd7464f0ca77cb5af2f51", "committedDate": "2020-12-03T20:07:40Z", "message": "refactor to use cfw FilterList objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1804ea6b7883f731a5b77329b5ed9a87247f62c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e1804ea6b7883f731a5b77329b5ed9a87247f62c", "committedDate": "2020-12-04T20:14:09Z", "message": "add validation and warning message"}, "afterCommit": {"oid": "a90a8b81136e1b8ecb089d4f60d3c1ae66b9316c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a90a8b81136e1b8ecb089d4f60d3c1ae66b9316c", "committedDate": "2020-12-11T17:40:07Z", "message": "update metatype and add messages for trustedHeaderOrigin update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a90a8b81136e1b8ecb089d4f60d3c1ae66b9316c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a90a8b81136e1b8ecb089d4f60d3c1ae66b9316c", "committedDate": "2020-12-11T17:40:07Z", "message": "update metatype and add messages for trustedHeaderOrigin update"}, "afterCommit": {"oid": "268d72cc13e456bd5bfaf557a15b59dc8293c3d5", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/268d72cc13e456bd5bfaf557a15b59dc8293c3d5", "committedDate": "2020-12-14T15:05:13Z", "message": "update unittests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTEyMTg4", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#pullrequestreview-552912188", "createdAt": "2020-12-15T21:31:30Z", "commit": {"oid": "268d72cc13e456bd5bfaf557a15b59dc8293c3d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTozMTozMFrOIGg3gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTozMTozMFrOIGg3gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwMDg2NA==", "bodyText": "Will 'trusted' be true if remoteAddr==null? Otherwise this line might potentially NPE since remoteAddr may not have been initialized in lines 2181-2182.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r543700864", "createdAt": "2020-12-15T21:31:30Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpRequestMessageImpl.java", "diffHunk": "@@ -2178,16 +2178,15 @@ protected boolean filterAdd(HeaderKeys key, byte[] value) {\n     private boolean isPrivateHeaderTrusted(HeaderKeys key) {\n         HttpServiceContextImpl hisc = getServiceContext();\n         InetAddress remoteAddr = null;\n-        String address = null;\n-        if (hisc != null && (remoteAddr = hisc.getRemoteAddr()) != null) {\n-            address = remoteAddr.getHostAddress();\n+        if (hisc != null) {\n+            remoteAddr = hisc.getRemoteAddr();\n         }\n \n-        boolean trusted = HttpDispatcher.usePrivateHeaders(address, key.getName());\n+        boolean trusted = HttpDispatcher.usePrivateHeaders(remoteAddr, key.getName());\n \n         if (!trusted) {\n             if (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n-                Tr.debug(tc, \"isPrivateHeaderTrusted: \" + key.getName() + \" is not trusted for host \" + address);\n+                Tr.debug(tc, \"isPrivateHeaderTrusted: \" + key.getName() + \" is not trusted for host \" + remoteAddr.getHostAddress());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "268d72cc13e456bd5bfaf557a15b59dc8293c3d5"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe10cf9c857fff7b231161c95efec28ae576d7f2", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fe10cf9c857fff7b231161c95efec28ae576d7f2", "committedDate": "2020-12-16T18:09:06Z", "message": "code review comment: avoid trace NPE"}, "afterCommit": {"oid": "6172cd5570c3f0cb175f57db2b3b51b6c444408b", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6172cd5570c3f0cb175f57db2b3b51b6c444408b", "committedDate": "2020-12-16T21:33:13Z", "message": "code review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6172cd5570c3f0cb175f57db2b3b51b6c444408b", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6172cd5570c3f0cb175f57db2b3b51b6c444408b", "committedDate": "2020-12-16T21:33:13Z", "message": "code review comments"}, "afterCommit": {"oid": "68e04a5baa0535338d12997a43a5002bfc2b800c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/68e04a5baa0535338d12997a43a5002bfc2b800c", "committedDate": "2020-12-17T18:55:15Z", "message": "code review updates: restore public APIs, add unittests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMDYwNjcw", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#pullrequestreview-561060670", "createdAt": "2021-01-04T14:16:07Z", "commit": {"oid": "68e04a5baa0535338d12997a43a5002bfc2b800c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f43eaf8bc6ddecd35725caa78d36119dafefd1a", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2f43eaf8bc6ddecd35725caa78d36119dafefd1a", "committedDate": "2021-01-05T17:11:54Z", "message": "support hostnames and wildcards for trusted*HeaderOrigin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/03e81d4ad1edf9ad75bc80891441f9c7e597acd6", "committedDate": "2021-01-05T17:11:54Z", "message": "update metatype and add messages for trustedHeaderOrigin update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f21ee237dad9aeb1a897e73d3bc7ef98aacb448", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8f21ee237dad9aeb1a897e73d3bc7ef98aacb448", "committedDate": "2021-01-05T17:11:54Z", "message": "update unittests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a218e0b2ec487979079fe4d372cf47922f5e6981", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a218e0b2ec487979079fe4d372cf47922f5e6981", "committedDate": "2021-01-05T17:11:55Z", "message": "code review updates: restore public APIs, add unittests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68e04a5baa0535338d12997a43a5002bfc2b800c", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/68e04a5baa0535338d12997a43a5002bfc2b800c", "committedDate": "2020-12-17T18:55:15Z", "message": "code review updates: restore public APIs, add unittests"}, "afterCommit": {"oid": "a218e0b2ec487979079fe4d372cf47922f5e6981", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a218e0b2ec487979079fe4d372cf47922f5e6981", "committedDate": "2021-01-05T17:11:55Z", "message": "code review updates: restore public APIs, add unittests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMDIyODYx", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#pullrequestreview-562022861", "createdAt": "2021-01-05T18:17:49Z", "commit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODoxNzo0OVrOIOiEsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODoyODo0NFrOIOiapg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjEwOTIzMg==", "bodyText": "suggested edit:\nThe web server plug-in uses private headers  to provide information about the original request. These headers take precedence over the HTTP host header and are used to select a virtual host to service a request. The default value is '', which trusts incoming private headers from any source. To disable private headers and rely only on the http Host header, specify 'none'. To restrict private header processing to specific trusted sources, specify a comma-separated list of IP addresses and hostnames. This list supports '' wildcards, with the following restrictions: IP addresses cannot be shortened and must contain a value for each field, for example \"127.0.0.\" or \"0:0:0:0:0:ffff::\", and hostnames must start with \".\", for example \".ibm.com\". The following example shows a valid list that includes wildcards: \"localhost, 127.0.0.1, 192.168.., 0:0:0:0:0:ffff::*, *.ibm.com\".", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r552109232", "createdAt": "2021-01-05T18:17:49Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -174,16 +174,22 @@ http.dispatcher=HTTP Dispatcher\n http.dispatcher.desc=HTTP Dispatcher configuration.\n \n dispatcher.trustedHeaderOrigin=Trusted private header origin\n-dispatcher.trustedHeaderOrigin.desc=Private headers are used by the web server plug-in to provide information about the original \\\n- request. These headers take precedence over the http Host header, and are used to select a virtual host to service a request. The \\\n- default value is '*', which will trust incoming private headers from any source. Specify 'none' to disable private headers and rely \\\n- only on the http Host header, or specify a list of IP addresses to restrict private header processing to specific trusted sources.\n+dispatcher.trustedHeaderOrigin.desc=Private headers are used by the web server plug-in to provide information about the original request. \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExMjAxMQ==", "bodyText": "suggested edit:\nThe web server plug-in uses private headers to provide information about the original request. A subset of these headers is considered sensitive. By default, the value for this property is 'none'. Incoming sensitive private headers are not trusted from any source. To allow sensitive private header processing for specific trusted sources, specify a comma-separated list of IP addresses and hostnames. To trust incoming sensitive private headers from any source, specify ''. This list supports '' wildcards, with the following restrictions: IP addresses cannot be shortened and must contain a value for each field, for example \"127.0.0.\" or \"0:0:0:0:0:ffff::\", and hostnames must start with \".\", for example \".ibm.com\". The following example shows a valid list that includes wildcards: \"localhost, 127.0.0.1, 192.168.., 0:0:0:0:0:ffff::*, *.ibm.com\".", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r552112011", "createdAt": "2021-01-05T18:23:25Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -174,16 +174,22 @@ http.dispatcher=HTTP Dispatcher\n http.dispatcher.desc=HTTP Dispatcher configuration.\n \n dispatcher.trustedHeaderOrigin=Trusted private header origin\n-dispatcher.trustedHeaderOrigin.desc=Private headers are used by the web server plug-in to provide information about the original \\\n- request. These headers take precedence over the http Host header, and are used to select a virtual host to service a request. The \\\n- default value is '*', which will trust incoming private headers from any source. Specify 'none' to disable private headers and rely \\\n- only on the http Host header, or specify a list of IP addresses to restrict private header processing to specific trusted sources.\n+dispatcher.trustedHeaderOrigin.desc=Private headers are used by the web server plug-in to provide information about the original request. \\\n+ These headers take precedence over the HTTP Host header, and are used to select a virtual host to service a request. The default value is \\\n+ '*', which will trust incoming private headers from any source. Specify 'none' to disable private headers and rely only on the http Host \\\n+ header, or specify a comma-separated list of IP addresses and hostnames to restrict private header processing to specific trusted sources. \\\n+ This list supports '*' wildcards in the following formats: IP addresses cannot be shortened and must contain a value for each field, eg. \\\n+ \"127.0.0.*\" or \"0:0:0:0:0:ffff:*:*\", and hostnames must start with \"*.\", eg. \"*.ibm.com\". As an example, the following list is valid: \\\n+ \"localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com\".\n \n dispatcher.trustedSensitiveHeaderOrigin=Trusted sensitive private header origin\n dispatcher.trustedSensitiveHeaderOrigin.desc=Private headers are used by the web server plug-in to provide information about the original \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExMjc0Nw==", "bodyText": "change\nThe configured trustedHeaderOrigin value [{0}] is invalid and will not be used.\nto\nThe [{0}] configured trustedHeaderOrigin value is invalid and cannot be used.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r552112747", "createdAt": "2021-01-05T18:24:46Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "diffHunk": "@@ -177,3 +177,11 @@ cookies.samesite.unsupportedWildcard.useraction=Ensure that only a single wildca\n cookies.samesite.knownDuplicateName=CWWKT0037W: A cookie name or pattern [{0}], which is marked as a duplicate, was found in the SameSite [{1}] configuration. The [{0}] cookie name or pattern is ignored. Any cookie name or pattern that is defined by the lax, none, and strict configurations can be defined in only one of the three configurations.\n cookies.samesite.knownDuplicateName.explanation=The specified value was already found by the configuration and mapped to a SameSite value.\n cookies.samesite.knownDuplicateName.useraction=Ensure that cookie names and patterns are unique across the lax, none, and strict configuration lists.\n+\n+trusted.header.origin.invalid.value=CWWKT0038W: The configured trustedHeaderOrigin value [{0}] is invalid and will not be used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExMzQ2NA==", "bodyText": "change\nThe specified value is not a full IP address or correctly formatted hostname.\nto\nThe specified value must be either a full IP address or correctly formatted hostname.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r552113464", "createdAt": "2021-01-05T18:26:09Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "diffHunk": "@@ -177,3 +177,11 @@ cookies.samesite.unsupportedWildcard.useraction=Ensure that only a single wildca\n cookies.samesite.knownDuplicateName=CWWKT0037W: A cookie name or pattern [{0}], which is marked as a duplicate, was found in the SameSite [{1}] configuration. The [{0}] cookie name or pattern is ignored. Any cookie name or pattern that is defined by the lax, none, and strict configurations can be defined in only one of the three configurations.\n cookies.samesite.knownDuplicateName.explanation=The specified value was already found by the configuration and mapped to a SameSite value.\n cookies.samesite.knownDuplicateName.useraction=Ensure that cookie names and patterns are unique across the lax, none, and strict configuration lists.\n+\n+trusted.header.origin.invalid.value=CWWKT0038W: The configured trustedHeaderOrigin value [{0}] is invalid and will not be used.\n+trusted.header.origin.invalid.value.explanation=The specified value is not a full IP address or correctly formatted hostname.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNDQzMg==", "bodyText": "will the user know what characters are invalid for hostnames? Is it according to general protocols or specific to this config?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r552114432", "createdAt": "2021-01-05T18:28:02Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "diffHunk": "@@ -177,3 +177,11 @@ cookies.samesite.unsupportedWildcard.useraction=Ensure that only a single wildca\n cookies.samesite.knownDuplicateName=CWWKT0037W: A cookie name or pattern [{0}], which is marked as a duplicate, was found in the SameSite [{1}] configuration. The [{0}] cookie name or pattern is ignored. Any cookie name or pattern that is defined by the lax, none, and strict configurations can be defined in only one of the three configurations.\n cookies.samesite.knownDuplicateName.explanation=The specified value was already found by the configuration and mapped to a SameSite value.\n cookies.samesite.knownDuplicateName.useraction=Ensure that cookie names and patterns are unique across the lax, none, and strict configuration lists.\n+\n+trusted.header.origin.invalid.value=CWWKT0038W: The configured trustedHeaderOrigin value [{0}] is invalid and will not be used.\n+trusted.header.origin.invalid.value.explanation=The specified value is not a full IP address or correctly formatted hostname.\n+trusted.header.origin.invalid.value.useraction=Ensure that configured IP addresses contain a value for each segment, and that hostnames do not contain any invalid characters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNDg1NA==", "bodyText": "see comments for CWWKT0038W", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#discussion_r552114854", "createdAt": "2021-01-05T18:28:44Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "diffHunk": "@@ -177,3 +177,11 @@ cookies.samesite.unsupportedWildcard.useraction=Ensure that only a single wildca\n cookies.samesite.knownDuplicateName=CWWKT0037W: A cookie name or pattern [{0}], which is marked as a duplicate, was found in the SameSite [{1}] configuration. The [{0}] cookie name or pattern is ignored. Any cookie name or pattern that is defined by the lax, none, and strict configurations can be defined in only one of the three configurations.\n cookies.samesite.knownDuplicateName.explanation=The specified value was already found by the configuration and mapped to a SameSite value.\n cookies.samesite.knownDuplicateName.useraction=Ensure that cookie names and patterns are unique across the lax, none, and strict configuration lists.\n+\n+trusted.header.origin.invalid.value=CWWKT0038W: The configured trustedHeaderOrigin value [{0}] is invalid and will not be used.\n+trusted.header.origin.invalid.value.explanation=The specified value is not a full IP address or correctly formatted hostname.\n+trusted.header.origin.invalid.value.useraction=Ensure that configured IP addresses contain a value for each segment, and that hostnames do not contain any invalid characters.\n+\n+trusted.sensitive.header.origin.invalid.value=CWWKT0039W: The configured trustedSensitiveHeaderOrigin value [{0}] is invalid and will not be used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e81d4ad1edf9ad75bc80891441f9c7e597acd6"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d8f36dc18cf1a41efb311e1fd13b694d0a5406", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/77d8f36dc18cf1a41efb311e1fd13b694d0a5406", "committedDate": "2021-01-05T19:57:16Z", "message": "message review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMDk3MzAy", "url": "https://github.com/OpenLiberty/open-liberty/pull/14661#pullrequestreview-562097302", "createdAt": "2021-01-05T20:10:32Z", "commit": {"oid": "77d8f36dc18cf1a41efb311e1fd13b694d0a5406"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c326647fc09204f90ec477013d9bff97aba94f21", "author": {"user": {"login": "wtlucy", "name": "Bill Lucy"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c326647fc09204f90ec477013d9bff97aba94f21", "committedDate": "2021-01-10T14:34:56Z", "message": "minor logging and readability improvements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3000, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}