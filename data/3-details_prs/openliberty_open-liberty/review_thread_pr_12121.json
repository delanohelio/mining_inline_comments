{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTQwMjQ4", "number": 12121, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToxMjoyNVrOD7SGwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMTozNDoyOVrOD8StjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDg5MjE4OnYy", "diffSide": "LEFT", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/EE9PackageReplacementHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToxMjoyNVrOGTgvkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozNTo1NVrOGThxrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMjU5Mg==", "bodyText": "you can still keep this old constructor as an option for people, I was just suggesting adding a new ctor with 0-args", "url": "https://github.com/OpenLiberty/open-liberty/pull/12121#discussion_r423112592", "createdAt": "2020-05-11T15:12:25Z", "author": {"login": "aguibert"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/EE9PackageReplacementHelper.java", "diffHunk": "@@ -35,7 +35,8 @@\n \n     private static final Logger Log = Logger.getLogger(EE9PackageReplacementHelper.class.getName());\n \n-    public EE9PackageReplacementHelper(String rulesPath){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0052e2d6d39524845e1d3ab8826ad85cb9c0596"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyOTUxNw==", "bodyText": "Added it back in.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12121#discussion_r423129517", "createdAt": "2020-05-11T15:35:55Z", "author": {"login": "volosied"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/EE9PackageReplacementHelper.java", "diffHunk": "@@ -35,7 +35,8 @@\n \n     private static final Logger Log = Logger.getLogger(EE9PackageReplacementHelper.class.getName());\n \n-    public EE9PackageReplacementHelper(String rulesPath){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMjU5Mg=="}, "originalCommit": {"oid": "f0052e2d6d39524845e1d3ab8826ad85cb9c0596"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDkwNDgxOnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/custom/junit/runner/FATRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToxNToxNFrOGTg3wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToxNToxNFrOGTg3wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExNDY4OA==", "bodyText": "We can't init quite this early, it implies that in order to run any FAT (whether or not an EE9 repeat is used) this properties file will need to be present. Instead, lets just lazy-init the field, but do so using the no-args ctor", "url": "https://github.com/OpenLiberty/open-liberty/pull/12121#discussion_r423114688", "createdAt": "2020-05-11T15:15:14Z", "author": {"login": "aguibert"}, "path": "dev/fattest.simplicity/src/componenttest/custom/junit/runner/FATRunner.java", "diffHunk": "@@ -83,7 +84,7 @@\n                                                                       new JavaLevelFilter()\n     };\n \n-    private static EE9PackageReplacementHelper ee9Helper;\n+    private static EE9PackageReplacementHelper ee9Helper = new EE9PackageReplacementHelper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0052e2d6d39524845e1d3ab8826ad85cb9c0596"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTQ3NzI1OnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/EE9PackageReplacementHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMTozNDoyOVrOGVJFkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMzo0Nzo1MlrOGVdHnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjE2Mw==", "bodyText": "since the code here is common with the other constructor, you can just do:\npublic EE9PackageReplacementHelper() {\n  this(System.getProperty(\"user.dir\") + \"/autoFVT-templates/\" + \"jakarta-renames.properties\");\n}", "url": "https://github.com/OpenLiberty/open-liberty/pull/12121#discussion_r424822163", "createdAt": "2020-05-14T01:34:29Z", "author": {"login": "aguibert"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/EE9PackageReplacementHelper.java", "diffHunk": "@@ -35,7 +35,19 @@\n \n     private static final Logger Log = Logger.getLogger(EE9PackageReplacementHelper.class.getName());\n \n-    public EE9PackageReplacementHelper(String rulesPath){\n+    public EE9PackageReplacementHelper(String rulesPath) {\n+        Properties appProps = new Properties();\n+        try {\n+            appProps.load(new FileInputStream(rulesPath));\n+            packageRenameRules = (Map) appProps;\n+        } catch (Exception e) {\n+            Log.warning(\"Error occured when reading in \" + rulesPath);\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public EE9PackageReplacementHelper() {\n+            String rulesPath = System.getProperty(\"user.dir\") + \"/autoFVT-templates/\" + \"jakarta-renames.properties\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde6ec7348bce7cd135f5e7e73359df089819ae3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE1MDM2NA==", "bodyText": "Fixed, Thank you :)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12121#discussion_r425150364", "createdAt": "2020-05-14T13:47:52Z", "author": {"login": "volosied"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/EE9PackageReplacementHelper.java", "diffHunk": "@@ -35,7 +35,19 @@\n \n     private static final Logger Log = Logger.getLogger(EE9PackageReplacementHelper.class.getName());\n \n-    public EE9PackageReplacementHelper(String rulesPath){\n+    public EE9PackageReplacementHelper(String rulesPath) {\n+        Properties appProps = new Properties();\n+        try {\n+            appProps.load(new FileInputStream(rulesPath));\n+            packageRenameRules = (Map) appProps;\n+        } catch (Exception e) {\n+            Log.warning(\"Error occured when reading in \" + rulesPath);\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public EE9PackageReplacementHelper() {\n+            String rulesPath = System.getProperty(\"user.dir\") + \"/autoFVT-templates/\" + \"jakarta-renames.properties\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjE2Mw=="}, "originalCommit": {"oid": "dde6ec7348bce7cd135f5e7e73359df089819ae3"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1753, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}