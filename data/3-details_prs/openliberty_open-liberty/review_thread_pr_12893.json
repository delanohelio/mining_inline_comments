{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTMwNTk4", "number": 12893, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzoyODo0MFrOEOyGzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzoyOTowN1rOEOyH2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTM2NDYyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigBootstrapTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzoyODo0MFrOGyIJ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0MzozMFrOGyNNOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIxNTU4OA==", "bodyText": "Is trace enabled when this method is called?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12893#discussion_r455215588", "createdAt": "2020-07-15T17:28:40Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigBootstrapTest.java", "diffHunk": "@@ -496,10 +503,11 @@ private void runApplication(RemoteFile consoleLogFile) throws Exception {\n         TestUtils.runApp(server, \"logServlet\");\n     }\n \n-    private static String setServerConfig(String fileName) throws Exception {\n-        server.setMarkToEndOfLog();\n+    private static void setServerConfig(String fileName) throws Exception {\n+        RemoteFile log = server.getDefaultTraceFile();\n+        server.setMarkToEndOfLog(log);\n         server.setServerConfigurationFile(fileName);\n-        return server.waitForStringInLogUsingMark(\"CWWKG0017I.*|CWWKG0018I.*\");\n+        Assert.assertNotNull(server.waitForStringInLog(\"CWWKG0017I.*|CWWKG0018I.*\", log));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82fd19d6f8bca81dcd915cc05b9888f8a33cd7ca"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI5ODM2Mw==", "bodyText": "Trace should be enabled by default to *=info:logservice=detail:com.ibm.ws.runtime.update.*=all. None of the server.xml configurations have an empty traceSpecification like traceSpecification=\"\", so there should be trace enabled for every server config update.\n\n  \n    \n      open-liberty/dev/fattest.simplicity/autoFVT-defaults/testports.properties\n    \n    \n        Lines 145 to 146\n      in\n      76bc2fe\n    \n    \n    \n    \n\n        \n          \n           # If a FAT does not specify any trace spec, they will get this setting by default \n        \n\n        \n          \n           com.ibm.ws.logging.trace.specification=*=info:logservice=detail:com.ibm.ws.runtime.update.*=all", "url": "https://github.com/OpenLiberty/open-liberty/pull/12893#discussion_r455298363", "createdAt": "2020-07-15T19:43:30Z", "author": {"login": "ellen-lau"}, "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigBootstrapTest.java", "diffHunk": "@@ -496,10 +503,11 @@ private void runApplication(RemoteFile consoleLogFile) throws Exception {\n         TestUtils.runApp(server, \"logServlet\");\n     }\n \n-    private static String setServerConfig(String fileName) throws Exception {\n-        server.setMarkToEndOfLog();\n+    private static void setServerConfig(String fileName) throws Exception {\n+        RemoteFile log = server.getDefaultTraceFile();\n+        server.setMarkToEndOfLog(log);\n         server.setServerConfigurationFile(fileName);\n-        return server.waitForStringInLogUsingMark(\"CWWKG0017I.*|CWWKG0018I.*\");\n+        Assert.assertNotNull(server.waitForStringInLog(\"CWWKG0017I.*|CWWKG0018I.*\", log));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIxNTU4OA=="}, "originalCommit": {"oid": "82fd19d6f8bca81dcd915cc05b9888f8a33cd7ca"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTM2NzMxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzoyOTowN1rOGyIL2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoxNzoyOVrOGyXp8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIxNjA5MQ==", "bodyText": "Is trace enabled when this method is called?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12893#discussion_r455216091", "createdAt": "2020-07-15T17:29:07Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigTest.java", "diffHunk": "@@ -356,10 +356,12 @@ private void runApplication(RemoteFile consoleLogFile) throws Exception {\n         TestUtils.runApp(server, \"logServlet\");\n     }\n \n-    private static String setServerConfig(String fileName) throws Exception {\n-        server.setMarkToEndOfLog();\n+    //check message.log for CWWKG0017I.*|CWWKG0018I. message, messageSource must have \"message\"\n+    private static void setServerConfig(String fileName) throws Exception {\n+        RemoteFile log = server.getDefaultTraceFile();\n+        server.setMarkToEndOfLog(log);\n         server.setServerConfigurationFile(fileName);\n-        return server.waitForStringInLogUsingMark(\"CWWKG0017I.*|CWWKG0018I.*\");\n+        Assert.assertNotNull(server.waitForStringInLog(\"CWWKG0017I.*|CWWKG0018I.*\", log));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82fd19d6f8bca81dcd915cc05b9888f8a33cd7ca"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTU1NQ==", "bodyText": "Same as above comment.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12893#discussion_r455469555", "createdAt": "2020-07-16T02:17:29Z", "author": {"login": "ellen-lau"}, "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigTest.java", "diffHunk": "@@ -356,10 +356,12 @@ private void runApplication(RemoteFile consoleLogFile) throws Exception {\n         TestUtils.runApp(server, \"logServlet\");\n     }\n \n-    private static String setServerConfig(String fileName) throws Exception {\n-        server.setMarkToEndOfLog();\n+    //check message.log for CWWKG0017I.*|CWWKG0018I. message, messageSource must have \"message\"\n+    private static void setServerConfig(String fileName) throws Exception {\n+        RemoteFile log = server.getDefaultTraceFile();\n+        server.setMarkToEndOfLog(log);\n         server.setServerConfigurationFile(fileName);\n-        return server.waitForStringInLogUsingMark(\"CWWKG0017I.*|CWWKG0018I.*\");\n+        Assert.assertNotNull(server.waitForStringInLog(\"CWWKG0017I.*|CWWKG0018I.*\", log));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIxNjA5MQ=="}, "originalCommit": {"oid": "82fd19d6f8bca81dcd915cc05b9888f8a33cd7ca"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3110, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}