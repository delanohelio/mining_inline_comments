{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzYyNTI2", "number": 12816, "title": "Create application start barrier", "bodyText": "See issue #12815", "createdAt": "2020-06-29T12:03:56Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816", "merged": true, "mergeCommit": {"oid": "3c68c3d00efe14276056718dac5dfcb460a4117d"}, "closed": true, "closedAt": "2020-10-06T09:15:39Z", "author": {"login": "AndrewDJBanks"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwtGsOgFqTQ0MTAyNzg2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPnn81AFqTUwMjI5MDE1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDI3ODY1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816#pullrequestreview-441027865", "createdAt": "2020-07-01T16:32:52Z", "commit": {"oid": "656084dcc79159c6af7bd200a249ae28e1ee4fe5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjozMjo1MlrOGrtPUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjozNDoxOVrOGrtSQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ4MzE1Mg==", "bodyText": "It is not clear to me how this component does anything other than provide some additional trace points.  It is fine if that is all this component does, but if so please add a comment to the class itself.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816#discussion_r448483152", "createdAt": "2020-07-01T16:32:52Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.app.manager/src/com/ibm/ws/app/manager/internal/lifecycle/ApplicationStartBarrierImpl.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.app.manager.internal.lifecycle;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.service.cm.Configuration;\n+import org.osgi.service.cm.ConfigurationAdmin;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ReferenceCardinality;\n+import org.osgi.service.component.annotations.ReferencePolicy;\n+import org.osgi.service.component.annotations.ReferencePolicyOption;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.wsspi.application.lifecycle.ApplicationPrereq;\n+import com.ibm.wsspi.application.lifecycle.ApplicationStartBarrier;\n+\n+/**\n+ * Enable Declarative Services to enforce start sequencing.\n+ * Application handlers should depend on this service.\n+ * Services should implement {@link ApplicationPrereq}\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.REQUIRE)\n+public class ApplicationStartBarrierImpl implements ApplicationStartBarrier {\n+    private static final TraceComponent tc = Tr.register(ApplicationStartBarrierImpl.class);\n+\n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE)\n+    void setApplicationPrereq(ApplicationPrereq applicationPrereq) {\n+    }\n+\n+    /**\n+     * Non configurable immediate component to track prereqs as they appear.\n+     */\n+    @Component(configurationPolicy = ConfigurationPolicy.IGNORE, immediate = true)\n+    public static class PrereqWatcher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656084dcc79159c6af7bd200a249ae28e1ee4fe5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ4MzkwNg==", "bodyText": "Why always sort even when trace is not enabled.  I only see realisedPrereqs getting used within trace blocks.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816#discussion_r448483906", "createdAt": "2020-07-01T16:34:19Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.app.manager/src/com/ibm/ws/app/manager/internal/lifecycle/ApplicationStartBarrierImpl.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.app.manager.internal.lifecycle;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.service.cm.Configuration;\n+import org.osgi.service.cm.ConfigurationAdmin;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ReferenceCardinality;\n+import org.osgi.service.component.annotations.ReferencePolicy;\n+import org.osgi.service.component.annotations.ReferencePolicyOption;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.wsspi.application.lifecycle.ApplicationPrereq;\n+import com.ibm.wsspi.application.lifecycle.ApplicationStartBarrier;\n+\n+/**\n+ * Enable Declarative Services to enforce start sequencing.\n+ * Application handlers should depend on this service.\n+ * Services should implement {@link ApplicationPrereq}\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.REQUIRE)\n+public class ApplicationStartBarrierImpl implements ApplicationStartBarrier {\n+    private static final TraceComponent tc = Tr.register(ApplicationStartBarrierImpl.class);\n+\n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE)\n+    void setApplicationPrereq(ApplicationPrereq applicationPrereq) {\n+    }\n+\n+    /**\n+     * Non configurable immediate component to track prereqs as they appear.\n+     */\n+    @Component(configurationPolicy = ConfigurationPolicy.IGNORE, immediate = true)\n+    public static class PrereqWatcher {\n+        private final ConfigurationAdmin configurationAdmin;\n+        private final ArrayList<String> realisedPrereqs = new ArrayList<>();\n+\n+        /**\n+         * Use constructor parameter references to ensure that mandatory references are supplied first.\n+         *\n+         * @param configurationAdmin must be supplied before any calls to setApplicationPrereq\n+         */\n+        @Activate\n+        public PrereqWatcher(@Reference ConfigurationAdmin configurationAdmin) {\n+            this.configurationAdmin = configurationAdmin;\n+            if (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n+                Tr.debug(tc, \"Known configured application prereqs:\" + listConfiguredPrereqs());\n+            }\n+        }\n+\n+        private String listConfiguredPrereqs() {\n+            Configuration[] configs;\n+            try {\n+                configs = this.configurationAdmin.listConfigurations(\"(service.factoryPid=\" + ApplicationPrereq.class.getName() + \")\");\n+            } catch (IOException | InvalidSyntaxException e) {\n+                StringWriter sw = new StringWriter();\n+                e.printStackTrace(new PrintWriter(sw));\n+                return \"Error listing prereqs:\" + sw;\n+            }\n+            if (configs == null)\n+                return null;\n+\n+            String[] prereqClassNames = new String[configs.length];\n+            for (int i = 0; i < configs.length; i++) {\n+                prereqClassNames[i] = (String) configs[i].getProperties().get(\"className\");\n+            }\n+\n+            Arrays.sort(prereqClassNames);\n+            return Arrays.toString(prereqClassNames);\n+        }\n+\n+        @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC, policyOption = ReferencePolicyOption.GREEDY)\n+        void setApplicationPrereq(ApplicationPrereq applicationPrereq) {\n+            realisedPrereqs.add(applicationPrereq.getClass().getName());\n+            Collections.sort(realisedPrereqs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656084dcc79159c6af7bd200a249ae28e1ee4fe5"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDU1OTk2", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816#pullrequestreview-441055996", "createdAt": "2020-07-01T17:13:53Z", "commit": {"oid": "656084dcc79159c6af7bd200a249ae28e1ee4fe5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoxMzo1M1rOGrulLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoxMzo1M1rOGrulLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwNTEzNQ==", "bodyText": "@tjwatson makes a good point, you can't expose this as a SPI straight away. You need a Feature and UFO to expose a new SPI. Please change the package name.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816#discussion_r448505135", "createdAt": "2020-07-01T17:13:53Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.app.manager.lifecycle/src/com/ibm/wsspi/application/lifecycle/ApplicationPrereq.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.wsspi.application.lifecycle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656084dcc79159c6af7bd200a249ae28e1ee4fe5"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "656084dcc79159c6af7bd200a249ae28e1ee4fe5", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/656084dcc79159c6af7bd200a249ae28e1ee4fe5", "committedDate": "2020-06-29T09:58:05Z", "message": "Make _fat depend on known ApplicationPrereqs"}, "afterCommit": {"oid": "3754c7e7bd0b7ed8f38cf456d59ee9c2565e5ff2", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3754c7e7bd0b7ed8f38cf456d59ee9c2565e5ff2", "committedDate": "2020-07-08T15:01:30Z", "message": "Make _fat depend on known ApplicationPrereqs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fb725582a1bfaf5925496039b405a1faa761cc4", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8fb725582a1bfaf5925496039b405a1faa761cc4", "committedDate": "2020-07-28T15:22:56Z", "message": "Add fat AppPreqTest"}, "afterCommit": {"oid": "d8e90cccc728a701eed1a3ab55957baac6352f8d", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d8e90cccc728a701eed1a3ab55957baac6352f8d", "committedDate": "2020-07-29T11:48:00Z", "message": "Add fat AppPreqTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8e90cccc728a701eed1a3ab55957baac6352f8d", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d8e90cccc728a701eed1a3ab55957baac6352f8d", "committedDate": "2020-07-29T11:48:00Z", "message": "Add fat AppPreqTest"}, "afterCommit": {"oid": "cab31b004e4698cf5b1cc7f1976ff217bafe394f", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cab31b004e4698cf5b1cc7f1976ff217bafe394f", "committedDate": "2020-07-30T16:10:37Z", "message": "Add fat AppPreqTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cab31b004e4698cf5b1cc7f1976ff217bafe394f", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cab31b004e4698cf5b1cc7f1976ff217bafe394f", "committedDate": "2020-07-30T16:10:37Z", "message": "Add fat AppPreqTest"}, "afterCommit": {"oid": "3fa6959bacd360c5637f501327fa268211144a87", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3fa6959bacd360c5637f501327fa268211144a87", "committedDate": "2020-08-04T16:59:19Z", "message": "Add config listener trace point and use metatype id AD instead of className"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bab46d68ac0bbac906237560c9d1361e47f2063e", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/bab46d68ac0bbac906237560c9d1361e47f2063e", "committedDate": "2020-08-12T10:56:00Z", "message": "Track ApplicationPrereq declaration Ids"}, "afterCommit": {"oid": "f2e89cb2e2b8c8db3a2293e6e3bc73555b1d7ad1", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f2e89cb2e2b8c8db3a2293e6e3bc73555b1d7ad1", "committedDate": "2020-08-18T09:37:45Z", "message": "Use method to get app prereq ID from service at runtime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad7a01e8648c94e4eeacaf5b9c205a742f1e884", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1ad7a01e8648c94e4eeacaf5b9c205a742f1e884", "committedDate": "2020-09-23T16:02:00Z", "message": "Created ApplicationPrereq and ApplicationStartBarrier to control component startup."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1f0ec2637d5ecc6b2a438be4abda6fb9e6034b0", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f1f0ec2637d5ecc6b2a438be4abda6fb9e6034b0", "committedDate": "2020-09-23T16:02:01Z", "message": "Make WARs depend on known ApplicationPrereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2349bd09a8255c04cdb5c28b8930e4e1c5e1d372", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2349bd09a8255c04cdb5c28b8930e4e1c5e1d372", "committedDate": "2020-09-23T16:02:02Z", "message": "Make EARs depend on known ApplicationPrereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ddb75e83049a9319a47984cffa2fef7eead641", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a9ddb75e83049a9319a47984cffa2fef7eead641", "committedDate": "2020-09-23T16:02:02Z", "message": "Make EJBs depend on known ApplicationPrereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "393eb689b9d52a1ef3888cbfbcde645df394a5bf", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/393eb689b9d52a1ef3888cbfbcde645df394a5bf", "committedDate": "2020-09-23T16:02:02Z", "message": "Make RARs depend on known ApplicationPrereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "942f2b9f011bbbbb3cdade7e6fe7cc102b7788d5", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/942f2b9f011bbbbb3cdade7e6fe7cc102b7788d5", "committedDate": "2020-09-23T16:02:04Z", "message": "Make springboot depend on known ApplicationPrereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6e7fb2bae9832556d60603c334971dd3b7eb7d", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2b6e7fb2bae9832556d60603c334971dd3b7eb7d", "committedDate": "2020-09-23T16:02:04Z", "message": "Make _fat depend on known ApplicationPrereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "445425600747a263e8fb8ca6b48afd7b3c74c7a9", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/445425600747a263e8fb8ca6b48afd7b3c74c7a9", "committedDate": "2020-09-23T16:02:04Z", "message": "Add fat AppPreqTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2d53e53cf7f64ff75805fc27f32c39019e73efb", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a2d53e53cf7f64ff75805fc27f32c39019e73efb", "committedDate": "2020-09-23T16:02:04Z", "message": "Improve trace and add id attribute to app prereq config entry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "013b22c1406c9b012a23277a60dc5a30dae1be36", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/013b22c1406c9b012a23277a60dc5a30dae1be36", "committedDate": "2020-09-23T16:02:05Z", "message": "Add config listener trace point and use metatype id AD instead of className"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ebb05b327d9dcc55ee139843965c3c37594b28", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/91ebb05b327d9dcc55ee139843965c3c37594b28", "committedDate": "2020-09-23T16:02:05Z", "message": "Use pre-written configuration files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9a2f8a577a86a3c14070ab29140025852cee581", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c9a2f8a577a86a3c14070ab29140025852cee581", "committedDate": "2020-09-23T16:02:05Z", "message": "Test app starts immediately when prereq\nsatisfied"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3942652ae30765d4630936cfa57f6750faa8cffe", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3942652ae30765d4630936cfa57f6750faa8cffe", "committedDate": "2020-09-23T16:02:05Z", "message": "Add more config changes to tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8118b83ae5153cea9a6d7631706c1c25479ea99f", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8118b83ae5153cea9a6d7631706c1c25479ea99f", "committedDate": "2020-09-23T16:08:33Z", "message": "Test that undeclared prereq causes an FFDC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03e446a3baffabc46f6c51712bec3c569aafece", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f03e446a3baffabc46f6c51712bec3c569aafece", "committedDate": "2020-09-23T16:08:33Z", "message": "Trivial formatting change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98f327800257b34be7d5ed50884226ff7c0049a0", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/98f327800257b34be7d5ed50884226ff7c0049a0", "committedDate": "2020-09-23T16:08:34Z", "message": "Refactor prereq monitor to use config processing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7591260a9b1e643d2ba4310959c7a864b342eb1a", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7591260a9b1e643d2ba4310959c7a864b342eb1a", "committedDate": "2020-09-23T16:08:34Z", "message": "Throw IllegalStateException in case of Prereq mismatch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39b911ab8d5cbb383049674437ec2e71ff8528ea", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/39b911ab8d5cbb383049674437ec2e71ff8528ea", "committedDate": "2020-09-23T16:08:34Z", "message": "Track ApplicationPrereq declaration Ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f3e45fb8b19b99cf21a232b19624dd11db10fcd", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0f3e45fb8b19b99cf21a232b19624dd11db10fcd", "committedDate": "2020-09-23T16:08:34Z", "message": "Use method to get app prereq ID from service at runtime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afe4f0004cf885dcf69bab7353a80b014dfc48e", "author": {"user": {"login": "joe-chacko", "name": "Joe Chacko"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6afe4f0004cf885dcf69bab7353a80b014dfc48e", "committedDate": "2020-09-23T16:08:35Z", "message": "Add Widget to test DS and Metatype prereqs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8c09bd95bcbb7403e08439a4298da7a358f7aac", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e8c09bd95bcbb7403e08439a4298da7a358f7aac", "committedDate": "2020-09-23T16:11:07Z", "message": "Don't remove Widget configuration when removing PreReq feature\nAdd deactivate methods to display Widget state."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd1cb0502de11b54ec02f4d4abfd3fa785fbd947", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fd1cb0502de11b54ec02f4d4abfd3fa785fbd947", "committedDate": "2020-09-23T15:54:15Z", "message": "Don't remove Widget configuration when removing PreReq feature\nAdd deactivate methods to display Widget state."}, "afterCommit": {"oid": "e8c09bd95bcbb7403e08439a4298da7a358f7aac", "author": {"user": null}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e8c09bd95bcbb7403e08439a4298da7a358f7aac", "committedDate": "2020-09-23T16:11:07Z", "message": "Don't remove Widget configuration when removing PreReq feature\nAdd deactivate methods to display Widget state."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjkwMTU4", "url": "https://github.com/OpenLiberty/open-liberty/pull/12816#pullrequestreview-502290158", "createdAt": "2020-10-05T17:56:02Z", "commit": {"oid": "e8c09bd95bcbb7403e08439a4298da7a358f7aac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2202, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}