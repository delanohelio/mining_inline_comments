{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTAxOTM0", "number": 14489, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODo0NDowNFrOEtnWpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODo0NDowNFrOEtnWpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjY2MTQ4OnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/topology/database/DerbyNetworkUtilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODo0NDowNFrOHhgXSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTo1ODoxNFrOHhi5PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg5NTMwNw==", "bodyText": "Did you leave off the m argument for the 2nd parameter intentionally?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14489#discussion_r504895307", "createdAt": "2020-10-14T18:44:04Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.simplicity/src/componenttest/topology/database/DerbyNetworkUtilities.java", "diffHunk": "@@ -16,43 +16,47 @@\n \n import org.apache.derby.drda.NetworkServerControl;\n \n+import com.ibm.websphere.simplicity.log.Log;\n+\n /**\n  * Provides methods for starting and stopping Derby Network.\n  * The server is checked a number of times to be sure it has started,\n  * otherwise the exception returned from the ping is thrown.\n  */\n public class DerbyNetworkUtilities {\n+    private static final Class<?> c = DerbyNetworkUtilities.class;\n \n     static final int NUMBER_OF_PINGS = 10;\n     static final int SLEEP_BETWEEN_PINGS = 10000;\n-    // TODO serverName and portNumber are hard coded, \n+    // TODO serverName and portNumber are hard coded,\n     // but in the future should be taken from bootstrapping.properties if specified\n     static final String serverName = \"localhost\";\n     static final int portNumber = 1527;\n \n     static public void startDerbyNetwork() throws UnknownHostException, Exception {\n-        NetworkServerControl serverControl =\n-                        new NetworkServerControl(InetAddress.getByName(serverName), portNumber);\n+        final String m = \"startDerbyNetwork\";\n+        NetworkServerControl serverControl = new NetworkServerControl(InetAddress.getByName(serverName), portNumber);\n         serverControl.start(new PrintWriter(System.out));\n         for (int i = 1; i <= NUMBER_OF_PINGS; i++) {\n             try {\n-                System.out.println(\"Attempt \" + i + \" to see if Derby Network server started\");\n+                Log.info(c, m, \"Attempt \" + i + \" to see if Derby Network server started\");\n                 serverControl.ping();\n                 break;\n             } catch (Exception ex) {\n                 if (i == NUMBER_OF_PINGS) {\n-                    System.out.println(\"Derby Network server failed to start\");\n-                    ex.printStackTrace();\n+                    Log.info(c, m, \"Derby Network server failed to start\");\n+                    Log.error(c, m, ex);\n                     throw ex;\n+                } else {\n+                    Log.warning(c, \"Attempt \" + i + \" failed due to exception: \" + System.lineSeparator() + ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fee406dad5e7e83c48eb2bb43d40dc8b25a362"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkzNjc2NQ==", "bodyText": "Log.warning does not require the name of the method.  I believe it substitutes the word \"warning\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/14489#discussion_r504936765", "createdAt": "2020-10-14T19:58:14Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.simplicity/src/componenttest/topology/database/DerbyNetworkUtilities.java", "diffHunk": "@@ -16,43 +16,47 @@\n \n import org.apache.derby.drda.NetworkServerControl;\n \n+import com.ibm.websphere.simplicity.log.Log;\n+\n /**\n  * Provides methods for starting and stopping Derby Network.\n  * The server is checked a number of times to be sure it has started,\n  * otherwise the exception returned from the ping is thrown.\n  */\n public class DerbyNetworkUtilities {\n+    private static final Class<?> c = DerbyNetworkUtilities.class;\n \n     static final int NUMBER_OF_PINGS = 10;\n     static final int SLEEP_BETWEEN_PINGS = 10000;\n-    // TODO serverName and portNumber are hard coded, \n+    // TODO serverName and portNumber are hard coded,\n     // but in the future should be taken from bootstrapping.properties if specified\n     static final String serverName = \"localhost\";\n     static final int portNumber = 1527;\n \n     static public void startDerbyNetwork() throws UnknownHostException, Exception {\n-        NetworkServerControl serverControl =\n-                        new NetworkServerControl(InetAddress.getByName(serverName), portNumber);\n+        final String m = \"startDerbyNetwork\";\n+        NetworkServerControl serverControl = new NetworkServerControl(InetAddress.getByName(serverName), portNumber);\n         serverControl.start(new PrintWriter(System.out));\n         for (int i = 1; i <= NUMBER_OF_PINGS; i++) {\n             try {\n-                System.out.println(\"Attempt \" + i + \" to see if Derby Network server started\");\n+                Log.info(c, m, \"Attempt \" + i + \" to see if Derby Network server started\");\n                 serverControl.ping();\n                 break;\n             } catch (Exception ex) {\n                 if (i == NUMBER_OF_PINGS) {\n-                    System.out.println(\"Derby Network server failed to start\");\n-                    ex.printStackTrace();\n+                    Log.info(c, m, \"Derby Network server failed to start\");\n+                    Log.error(c, m, ex);\n                     throw ex;\n+                } else {\n+                    Log.warning(c, \"Attempt \" + i + \" failed due to exception: \" + System.lineSeparator() + ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg5NTMwNw=="}, "originalCommit": {"oid": "32fee406dad5e7e83c48eb2bb43d40dc8b25a362"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2601, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}