{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTI4MDM1", "number": 12452, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyMjoyMlrOEBiGwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1ODozOVrOEE3R5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDQyODE2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyMjoyMlrOGdcBsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo0NTozOVrOGgnCtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMTA3Mw==", "bodyText": "Does \"the latest minute\" sound better?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433521073", "createdAt": "2020-06-01T22:22:22Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NzI4Ng==", "bodyText": "Fixed (as well as for the other related methods)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r436847286", "createdAt": "2020-06-08T16:45:39Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMTA3Mw=="}, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDQ1MzczOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/JaxRsMonitorFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjozNDowMlrOGdcQ3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjozNDowMlrOGdcQ3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyNDk1Nw==", "bodyText": "Mix of tab and space messed up the indentation in github.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433524957", "createdAt": "2020-06-01T22:34:02Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/JaxRsMonitorFilter.java", "diffHunk": "@@ -135,8 +139,48 @@ public void filter(ContainerRequestContext reqCtx, ContainerResponseContext resp\n             //Store the response time for the resource method.\n             stats.updateRT(elapsedTime < 0 ? 0 : elapsedTime);\n         \t\n-        }\n+            \n+\t\t\t// Figure out min/max", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDQ5MTIxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1Mjo0OVrOGdcn3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo0NTo0OFrOGgnDGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMDg0Ng==", "bodyText": "Irregular indentation", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433530846", "createdAt": "2020-06-01T22:52:49Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "diffHunk": "@@ -155,10 +222,82 @@ public Counter getRequestCountDetails() {\n      * Type = StatisticMeter.\n      * Data: mean, min, max, description, unit\n      **/\n-\n     @Override\n     public StatisticsMeter getResponseTimeDetails() {\n         return this.responseTime;\n     }\n+    \n+    \n+    /**\n+     * Method getMinutePreviousMinimumDuration()\n+     * This is returning the details for the minimum\n+     * timed duration of the previous complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinutePreviousMinimumDuration() {\n+        return this.minutePreviousMinimumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinutePreviousMaximumDuration\n+     * This is returning the details for the maximum\n+     * timed duration of the previous complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinutePreviousMaximumDuration() {\n+        return this.minutePreviousMaximumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinuteLatestMinimumDuration()\n+     * This is returning the details for the minimum\n+     * timed duration of the latest complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinuteLatestMinimumDuration() {\n+        return this.minuteLatestMinimumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinuteLatestMaximumDuration()\n+     * This is returning the details for the maximum\n+     * timed duration of the latest complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinuteLatestMaximumDuration() {\n+        return this.minuteLatestMaximumDuration;\n+    }\n+\n+    /**\n+     * Method getMinuteLatest()\n+     * This is returning the details for the latest\n+     * minute (measured in minutes since epoch)\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+\t@Override\n+\tpublic Gauge getMinuteLatest() {\n+\t\treturn this.minuteLatest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NzM4NQ==", "bodyText": "Fixed", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r436847385", "createdAt": "2020-06-08T16:45:48Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "diffHunk": "@@ -155,10 +222,82 @@ public Counter getRequestCountDetails() {\n      * Type = StatisticMeter.\n      * Data: mean, min, max, description, unit\n      **/\n-\n     @Override\n     public StatisticsMeter getResponseTimeDetails() {\n         return this.responseTime;\n     }\n+    \n+    \n+    /**\n+     * Method getMinutePreviousMinimumDuration()\n+     * This is returning the details for the minimum\n+     * timed duration of the previous complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinutePreviousMinimumDuration() {\n+        return this.minutePreviousMinimumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinutePreviousMaximumDuration\n+     * This is returning the details for the maximum\n+     * timed duration of the previous complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinutePreviousMaximumDuration() {\n+        return this.minutePreviousMaximumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinuteLatestMinimumDuration()\n+     * This is returning the details for the minimum\n+     * timed duration of the latest complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinuteLatestMinimumDuration() {\n+        return this.minuteLatestMinimumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinuteLatestMaximumDuration()\n+     * This is returning the details for the maximum\n+     * timed duration of the latest complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinuteLatestMaximumDuration() {\n+        return this.minuteLatestMaximumDuration;\n+    }\n+\n+    /**\n+     * Method getMinuteLatest()\n+     * This is returning the details for the latest\n+     * minute (measured in minutes since epoch)\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+\t@Override\n+\tpublic Gauge getMinuteLatest() {\n+\t\treturn this.minuteLatest;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMDg0Ng=="}, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDgwNjM2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo1Njo1MFrOGdfmpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo0NjoxMlrOGgnEDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3OTY4NQ==", "bodyText": "Use of min to represent both minimum and minute may be confusing to readers.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433579685", "createdAt": "2020-06-02T01:56:50Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "diffHunk": "@@ -138,6 +180,31 @@ public void updateRT(long elapsed) {\n         this.responseTime.addDataPoint(elapsed);\n     }\n \n+    \n+    public void updateMinutePreviousMaximumDuration(long max) {\n+        this.minutePreviousMaximumDuration.setCurrentValue(max);\n+    }\n+    \n+    public void updateMinutePreviousMinimumDuration(long min) {\n+        this.minutePreviousMinimumDuration.setCurrentValue(min);\n+    }\n+    \n+    public void updateMinutePrevious(long min) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NzYzMA==", "bodyText": "Fixed  (as well as the updateMinuteLatest method)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r436847630", "createdAt": "2020-06-08T16:46:12Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "diffHunk": "@@ -138,6 +180,31 @@ public void updateRT(long elapsed) {\n         this.responseTime.addDataPoint(elapsed);\n     }\n \n+    \n+    public void updateMinutePreviousMaximumDuration(long max) {\n+        this.minutePreviousMaximumDuration.setCurrentValue(max);\n+    }\n+    \n+    public void updateMinutePreviousMinimumDuration(long min) {\n+        this.minutePreviousMinimumDuration.setCurrentValue(min);\n+    }\n+    \n+    public void updateMinutePrevious(long min) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3OTY4NQ=="}, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDgyMzg0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.metrics.3.0.monitor/src/com/ibm/ws/microprofile/metrics/monitor/MonitorSimpleTimer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjowOToxNlrOGdfxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo0NjoxOVrOGgnEZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MjUxNg==", "bodyText": "inconsistent variable names", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433582516", "createdAt": "2020-06-02T02:09:16Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.microprofile.metrics.3.0.monitor/src/com/ibm/ws/microprofile/metrics/monitor/MonitorSimpleTimer.java", "diffHunk": "@@ -33,30 +33,29 @@\n     \n     HashSet<Long> usedTimes = new HashSet<Long>();\n \n-    private long cachedMaxOldMinute = 0L;\n-    private long cachedMinOldMinute = 0L;\n-    private long cachedMaxCurrentMinute = 0L;\n-    private long cachedMinCurrentMinute = 0L;\n+    private long cachedMBPreviousMinute_max = 0L;\n+    private long cachedMBPreviousMinute_min = 0L;\n+    private long cachedMBLatestMinute_max = 0L;\n+    private long cachedMBLatestMinute_min = 0L;\n     \n-    private long displayMaxCurrent_thisMinute = 0L;\n-    private long displayMinCurrent_thisMinute = 0L;\n-    private long displayMaxCurrent_thisMinute_val = 0L;\n-    private long displayMinCurrent_thisMinute_val = 0L;\n+    private long displayMaxLatest_forThisMinute = 0L;\n+    private long displayMinLatest_forThisMinute = 0L;\n+    private long displayMaxLatest_forThisMinute_val = 0L;\n+    private long displayMinLatest_forThisMinute_val = 0L;\n     \n     \n-    private long displayMaxOld_thisMinute = 0L;\n-    private long displayMinOld_thisMinute = 0L;\n+    private long displayMaxPrev_forThisMinute = 0L;\n+    private long displayMinPrev_forThisMinute = 0L;\n     \n-    private long minCurrent;\n-    private long maxCurrent;\n+    private long mbean_latest_min;\n+    private long mbean_latest_max;\n+    private long mbean_latestMinute;\n     \n-    private long minuteCurrent;\n-\n-    private long rollingBaseMinute = 0L;\n+    private long mbean_previous_min;\n+    private long mbean_prev_max;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NzcxOA==", "bodyText": "Fixed", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r436847718", "createdAt": "2020-06-08T16:46:19Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.microprofile.metrics.3.0.monitor/src/com/ibm/ws/microprofile/metrics/monitor/MonitorSimpleTimer.java", "diffHunk": "@@ -33,30 +33,29 @@\n     \n     HashSet<Long> usedTimes = new HashSet<Long>();\n \n-    private long cachedMaxOldMinute = 0L;\n-    private long cachedMinOldMinute = 0L;\n-    private long cachedMaxCurrentMinute = 0L;\n-    private long cachedMinCurrentMinute = 0L;\n+    private long cachedMBPreviousMinute_max = 0L;\n+    private long cachedMBPreviousMinute_min = 0L;\n+    private long cachedMBLatestMinute_max = 0L;\n+    private long cachedMBLatestMinute_min = 0L;\n     \n-    private long displayMaxCurrent_thisMinute = 0L;\n-    private long displayMinCurrent_thisMinute = 0L;\n-    private long displayMaxCurrent_thisMinute_val = 0L;\n-    private long displayMinCurrent_thisMinute_val = 0L;\n+    private long displayMaxLatest_forThisMinute = 0L;\n+    private long displayMinLatest_forThisMinute = 0L;\n+    private long displayMaxLatest_forThisMinute_val = 0L;\n+    private long displayMinLatest_forThisMinute_val = 0L;\n     \n     \n-    private long displayMaxOld_thisMinute = 0L;\n-    private long displayMinOld_thisMinute = 0L;\n+    private long displayMaxPrev_forThisMinute = 0L;\n+    private long displayMinPrev_forThisMinute = 0L;\n     \n-    private long minCurrent;\n-    private long maxCurrent;\n+    private long mbean_latest_min;\n+    private long mbean_latest_max;\n+    private long mbean_latestMinute;\n     \n-    private long minuteCurrent;\n-\n-    private long rollingBaseMinute = 0L;\n+    private long mbean_previous_min;\n+    private long mbean_prev_max;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MjUxNg=="}, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDg0ODUzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoyNTowNlrOGdgAhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzo0MTowMFrOGhVYHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4NjMwOQ==", "bodyText": "These are API breaking changes!", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433586309", "createdAt": "2020-06-02T02:25:06Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute\n+\t */\n+\tpublic Gauge getMinuteLatestMinimumDuration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0ODM2OQ==", "bodyText": "Currently not exactly a public API. This is addressed in #12530.\nThus we can modify the API at the moment.\nFurther discussion shows that adding methods to the API on necessitates a package-info version change.\nThe modifications here will be considered part of the 1.0 API.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r436848369", "createdAt": "2020-06-08T16:47:21Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute\n+\t */\n+\tpublic Gauge getMinuteLatestMinimumDuration();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4NjMwOQ=="}, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYwNjQyOQ==", "bodyText": "I don't see the package-info.java got updated in this PR.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r437606429", "createdAt": "2020-06-09T17:41:00Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute\n+\t */\n+\tpublic Gauge getMinuteLatestMinimumDuration();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4NjMwOQ=="}, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQ1ODI1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/package-info.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoyMzo1OVrOGinR0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoyMzo1OVrOGinR0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0ODMwNg==", "bodyText": "Version to 1.1 instead of 2.0 as requested.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r438948306", "createdAt": "2020-06-11T17:23:59Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/package-info.java", "diffHunk": "@@ -11,5 +11,5 @@\n /**\n  * @version 1.0\n  */\n-@org.osgi.annotation.versioning.Version(\"1.0\")\n+@org.osgi.annotation.versioning.Version(\"1.1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTM1NDYzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/package-info.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1ODozOVrOGiwPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1ODozOVrOGiwPFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NTA2Mg==", "bodyText": "version 1.1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r439095062", "createdAt": "2020-06-11T21:58:39Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/package-info.java", "diffHunk": "@@ -11,5 +11,5 @@\n /**\n  * @version 1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1717, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}