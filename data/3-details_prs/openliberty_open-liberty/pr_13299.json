{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODIxODUw", "number": 13299, "title": "Chunk Error Fix", "bodyText": "Fixes  #11847", "createdAt": "2020-08-04T14:57:39Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299", "merged": true, "mergeCommit": {"oid": "41d0b43797676b4319aafada8e75fdd63b49460a"}, "closed": true, "closedAt": "2020-08-27T16:03:00Z", "author": {"login": "FlynnIBM"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7n59SgH2gAyNDYyODIxODUwOmJhNDE2NzU3M2ZiYjRjOTFkNGViNzgwOGJkOTM2YTg2NzA5NWUxOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAcNsWAFqTQ3MDQ5NjQwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba4167573fbb4c91d4eb7808bd936a867095e194", "author": {"user": {"login": "FlynnMcG", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ba4167573fbb4c91d4eb7808bd936a867095e194", "committedDate": "2020-08-04T14:57:13Z", "message": "Reworked"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686", "author": {"user": {"login": "FlynnMcG", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a7b9bf601d1018d9ffe568c0b96acd794376f686", "committedDate": "2020-08-04T19:25:08Z", "message": "Trace changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDc0NzAy", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-462474702", "createdAt": "2020-08-06T12:35:01Z", "commit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNTowMlrOG8xjEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNTowMlrOG8xjEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3OTUzOA==", "bodyText": "Is the  localHisc instanceof HttpInboundServiceContextImpl   check needed? It was checked above before setting localHisc", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r466379538", "createdAt": "2020-08-06T12:35:02Z", "author": {"login": "tspewak"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "diffHunk": "@@ -2853,7 +2854,19 @@ final protected void sendFullOutgoing(WsByteBuffer[] wsbb, HttpBaseMessageImpl m\n                 }\n \n             } else if (msg.isChunkedEncodingSet()) {\n-                createEndOfBodyChunk();\n+                HttpInboundServiceContextImpl localHisc = null;\n+                if (this instanceof HttpInboundServiceContextImpl) {\n+                    localHisc = (HttpInboundServiceContextImpl) this;\n+                }\n+                if (localHisc != null && localHisc instanceof HttpInboundServiceContextImpl", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDc1NjU0", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-462475654", "createdAt": "2020-08-06T12:36:24Z", "commit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNjoyNFrOG8xl0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNjoyNFrOG8xl0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4MDI0Mg==", "bodyText": "Is && hisc instanceof HttpInboundServiceContextImpl  needed?  it was checked above before setting hisc", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r466380242", "createdAt": "2020-08-06T12:36:24Z", "author": {"login": "tspewak"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "diffHunk": "@@ -2892,8 +2905,18 @@ final protected VirtualConnection sendFullOutgoing(WsByteBuffer[] wsbb, HttpBase\n             if (this instanceof HttpInboundServiceContextImpl) {\n                 hisc = (HttpInboundServiceContextImpl) this;\n             }\n-            if (hisc != null && !(hisc.getLink() instanceof H2HttpInboundLinkWrap)) {\n+            if (hisc != null && hisc instanceof HttpInboundServiceContextImpl) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDc3OTA3", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-462477907", "createdAt": "2020-08-06T12:39:32Z", "commit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozOTozM1rOG8xsJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozOTozM1rOG8xsJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4MTg2Mw==", "bodyText": "Could extendedConnection ever be null?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r466381863", "createdAt": "2020-08-06T12:39:33Z", "author": {"login": "tspewak"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/webapp/WebApp.java", "diffHunk": "@@ -4095,8 +4099,21 @@ public void sendError(HttpServletRequest req, HttpServletResponse res, ServletEr\n         WebContainerRequestState reqState = WebContainerRequestState.getInstance(true);   //PI80786\n \n         // PK82794\n-        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE)\n-            reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE) {\n+           // reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+            if (req instanceof SRTServletRequest) {\n+                SRTServletRequest srtReq = (SRTServletRequest) req;\n+                IRequestExtended iReq = (IRequestExtended)srtReq.getIRequest();\n+                if (iReq != null) {\n+                    HttpInboundConnection httpInboundConnection = iReq.getHttpInboundConnection();\n+                    HttpInboundConnectionExtended extendedConnection= (HttpInboundConnectionExtended) httpInboundConnection;\n+                    HttpDispatcherLink dispatcherLink=(HttpDispatcherLink) extendedConnection.getHttpDispatcherLink();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d3e44a6fe4f245aecb6677fef567ab61b97e168", "author": {"user": {"login": "FlynnMcG", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3d3e44a6fe4f245aecb6677fef567ab61b97e168", "committedDate": "2020-08-14T15:50:14Z", "message": "ReviewChanges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ed4e078d8d81810d89bcd69527ae7e7eed2f059", "author": {"user": {"login": "FlynnMcG", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7ed4e078d8d81810d89bcd69527ae7e7eed2f059", "committedDate": "2020-08-17T13:29:27Z", "message": "More changes for code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1", "author": {"user": {"login": "FlynnIBM", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/367d64d7268e357d26782d0a70c9d97a7c2f3ae1", "committedDate": "2020-08-17T13:30:51Z", "message": "Merge branch 'integration' into ChunkErrorFix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDkwOTQ5", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-468490949", "createdAt": "2020-08-17T14:02:29Z", "commit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMjoyOVrOHBqGDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMjoyOVrOHBqGDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwMDMwMw==", "bodyText": "Description ?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r471500303", "createdAt": "2020-08-17T14:02:29Z", "author": {"login": "ginnick"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/dispatcher/internal/channel/HttpDispatcherLink.java", "diffHunk": "@@ -1260,4 +1260,14 @@ public boolean useForwardedHeaders() {\n         return false;\n     }\n \n+    /**\n+     * @param b", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDkyMTQ2", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-468492146", "createdAt": "2020-08-17T14:03:57Z", "commit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMzo1OFrOHBqJkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMzo1OFrOHBqJkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwMTIwMg==", "bodyText": "Should wrap the \"logp\" with an if testing for enabling trace trace... look elsewhere in part for examples.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r471501202", "createdAt": "2020-08-17T14:03:58Z", "author": {"login": "ginnick"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/webapp/WebApp.java", "diffHunk": "@@ -4095,8 +4099,22 @@ public void sendError(HttpServletRequest req, HttpServletResponse res, ServletEr\n         WebContainerRequestState reqState = WebContainerRequestState.getInstance(true);   //PI80786\n \n         // PK82794\n-        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE)\n-            reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE) {\n+           // reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+            if (req instanceof SRTServletRequest) {\n+                SRTServletRequest srtReq = (SRTServletRequest) req;\n+                IRequestExtended iReq = (IRequestExtended)srtReq.getIRequest();\n+                if (iReq != null) {\n+                    HttpInboundConnection httpInboundConnection = iReq.getHttpInboundConnection();\n+                    HttpInboundConnectionExtended extendedConnection= (HttpInboundConnectionExtended) httpInboundConnection;\n+                    if(extendedConnection!=null) {\n+                        HttpDispatcherLink dispatcherLink=(HttpDispatcherLink) extendedConnection.getHttpDispatcherLink();\n+                        logger.logp(Level.FINE, CLASS_NAME, \"sendError\", \"Setting SuppressZeroByteChunk\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890ca3dd6bd1f53636ecd501b1177ee69d9f8999", "author": {"user": {"login": "FlynnIBM", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/890ca3dd6bd1f53636ecd501b1177ee69d9f8999", "committedDate": "2020-08-17T22:59:30Z", "message": "Update HttpDispatcherLink.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e", "author": {"user": {"login": "FlynnIBM", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d386d0798d0cd548e6065617464d5fb808413f6e", "committedDate": "2020-08-17T23:00:51Z", "message": "Update WebApp.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NTI1ODA3", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-469525807", "createdAt": "2020-08-18T14:42:18Z", "commit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDcyMjY2", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-470472266", "createdAt": "2020-08-19T13:45:16Z", "commit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0NToxNlrOHDIH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0ODozMFrOHDIRKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0MDg2OA==", "bodyText": "Originally this was checking that the link wasn't an H2HttpInboundLinkWrap, and not doing it now would seem to be a change in behavior. Additionally, by not checking the instanceof of the hisc, this conditional could potentially do a hisc.getSupress0ByteChunk() on an object that isn't an HttpInboundServiceContextImpl, which could lead to exceptions during the runtime. I recommend only doing the new code when the hisc is proven to be HttpInboundServiceContextImpl.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r473040868", "createdAt": "2020-08-19T13:45:16Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "diffHunk": "@@ -2892,8 +2903,16 @@ final protected VirtualConnection sendFullOutgoing(WsByteBuffer[] wsbb, HttpBase\n             if (this instanceof HttpInboundServiceContextImpl) {\n                 hisc = (HttpInboundServiceContextImpl) this;\n             }\n-            if (hisc != null && !(hisc.getLink() instanceof H2HttpInboundLinkWrap)) {\n-                createEndOfBodyChunk();\n+            if (hisc != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0MzI0MA==", "bodyText": "Might be useful to log if this method isn't able to set the flag due to the isc being null. Nothing code breaking, just QoL change for easier debugging.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r473043240", "createdAt": "2020-08-19T13:48:30Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/dispatcher/internal/channel/HttpDispatcherLink.java", "diffHunk": "@@ -1260,4 +1260,14 @@ public boolean useForwardedHeaders() {\n         return false;\n     }\n \n+    /**\n+     * Calls function to set the supress 0 byte chunk flag.\n+     */\n+    public void setSuppressZeroByteChunk(boolean suppress0ByteChunk) {\n+        if (this.isc != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "783b5d8855cb407927504e09e1a08537f8ee27a8", "author": {"user": {"login": "FlynnIBM", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/783b5d8855cb407927504e09e1a08537f8ee27a8", "committedDate": "2020-08-19T14:01:18Z", "message": "Update HttpServiceContextImpl.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dc641620a4a97694456728a0754596af6918c78", "author": {"user": {"login": "FlynnIBM", "name": null}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9dc641620a4a97694456728a0754596af6918c78", "committedDate": "2020-08-19T14:04:28Z", "message": "Update HttpDispatcherLink.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDk2NDA5", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#pullrequestreview-470496409", "createdAt": "2020-08-19T14:09:32Z", "commit": {"oid": "9dc641620a4a97694456728a0754596af6918c78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3554, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}