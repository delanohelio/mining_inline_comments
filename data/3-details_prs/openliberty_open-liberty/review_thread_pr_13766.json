{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzM5MDkw", "number": 13766, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo0OToyNVrOEiOitQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1Njo1MlrOEiOtzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI1MzAxOnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo0OToyNVrOHP_Kdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo0OToyNVrOHP_Kdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNTU1OQ==", "bodyText": "Suggested update\n\nA path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n\nTo\n\nA path consists of the gRPC service and method names, in the \"ServiceName/MethodName\" format.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486525559", "createdAt": "2020-09-10T17:49:25Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI2MDAyOnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1MToxNVrOHP_OwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1MToxNVrOHP_OwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjY1Nw==", "bodyText": "Suggested update\n\nPerform keepalive when there are no outstanding RPCs on the channel.\n\nTo\n\nPerform keepalive when no outstanding RPCs are on the channel.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486526657", "createdAt": "2020-09-10T17:51:15Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI2MTI0OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1MTozNlrOHP_PfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxODozMzoxNlrOHQA6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ==", "bodyText": "Suggested update\n\nSSL Reference\n\nTo\n\nSSL reference", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486526845", "createdAt": "2020-09-10T17:51:36Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzNzY4Mg==", "bodyText": "I agree that making reference lowercase here makes the most sense - but the build process includes a schema validator tool that fails if I make this change.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486537682", "createdAt": "2020-09-10T18:10:27Z", "author": {"login": "wtlucy"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ=="}, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU0OTIyNw==", "bodyText": "junit.framework.AssertionFailedError: The label \"SSL reference\" for element ssl of pid io.openliberty.grpc.clientConfig should be in title case.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486549227", "createdAt": "2020-09-10T18:26:33Z", "author": {"login": "wtlucy"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ=="}, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1NDE3Ng==", "bodyText": "Ah, okay. Then it's alright.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486554176", "createdAt": "2020-09-10T18:33:16Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ=="}, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI2NzA5OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1MzowM1rOHP_TDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1MzowM1rOHP_TDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNzc1Nw==", "bodyText": "Suggested update\n\nA custom authority which will override the default authority.\n\nTo\n\nA custom authority that overrides the default authority.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486527757", "createdAt": "2020-09-10T17:53:03Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI3Nzk4OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1NTo1OVrOHP_ZzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1NTo1OVrOHP_ZzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyOTQ4NA==", "bodyText": "Suggested update\n\nA custom User-Agent which will prepend the default User-Agent.\n\nTo\n\nA custom User-Agent that adds a prefix to the default User-Agent.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486529484", "createdAt": "2020-09-10T17:55:59Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI3OTczOnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1NjoyM1rOHP_azw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1NjoyM1rOHP_azw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyOTc0Mw==", "bodyText": "Suggested update\n\nUse a plaintext connection\n\nTo\n\nUse a plain text connection", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486529743", "createdAt": "2020-09-10T17:56:23Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.\n+\n+usePlaintext=Use a plaintext connection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzI4MTQxOnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1Njo1MlrOHP_b4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo1Njo1MlrOHP_b4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzMDAxNg==", "bodyText": "Suggested update\n\nUse a plaintext connection for the outbound gRPC channel.\n\nTo\n\nUse a plain text connection for the outbound gRPC channel.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486530016", "createdAt": "2020-09-10T17:56:52Z", "author": {"login": "Charlotte-Holt"}, "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.\n+\n+usePlaintext=Use a plaintext connection\n+usePlaintext.desc=Use a plaintext connection for the outbound gRPC channel.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd5dd290d396816084da1722f660f239955781"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2852, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}