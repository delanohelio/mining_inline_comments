{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDc4MzYy", "number": 14182, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzozNjoyM1rOEojbCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozNTowNlrOEsNCOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTU4ODU5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.internal.restfulWS-3.0.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzozNjoyM1rOHZthOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0MToxNlrOHZtwZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyMjIzMw==", "bodyText": "You already have that line", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r496722233", "createdAt": "2020-09-29T13:36:23Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.internal.restfulWS-3.0.feature", "diffHunk": "@@ -15,7 +15,7 @@ Subsystem-Name: Internal Java RESTful Services 3.0\n  com.ibm.websphere.appserver.org.eclipse.microprofile.config-1.4, \\\n  io.openliberty.jakarta.validation-3.0, \\\n  com.ibm.websphere.appserver.org.reactivestreams.reactive-streams-1.0, \\\n- com.ibm.websphere.appserver.mpConfig-1.4, \\\n+ com.ibm.websphere.appserver.org.eclipse.microprofile.config-1.4, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23ec626175846787012ac228bbc9c69697cd33d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyNjExNw==", "bodyText": "Also, that feature depends on cdi-1.2 and tolerates 2.0 ... you're pulling in cdi-3.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r496726117", "createdAt": "2020-09-29T13:41:16Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.internal.restfulWS-3.0.feature", "diffHunk": "@@ -15,7 +15,7 @@ Subsystem-Name: Internal Java RESTful Services 3.0\n  com.ibm.websphere.appserver.org.eclipse.microprofile.config-1.4, \\\n  io.openliberty.jakarta.validation-3.0, \\\n  com.ibm.websphere.appserver.org.reactivestreams.reactive-streams-1.0, \\\n- com.ibm.websphere.appserver.mpConfig-1.4, \\\n+ com.ibm.websphere.appserver.org.eclipse.microprofile.config-1.4, \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyMjIzMw=="}, "originalCommit": {"oid": "f23ec626175846787012ac228bbc9c69697cd33d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzg2MDE2OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozMzozN1rOHfZNZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozMzozN1rOHfZNZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MDkzNA==", "bodyText": "\"ANDY\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r502680934", "createdAt": "2020-10-09T21:33:37Z", "author": {"login": "WhiteCat22"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigImpl.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.config;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+\n+public class ConfigImpl implements Config {\n+    private final Set<ConfigSource> configSources = Collections.singleton(new ConfigSourceImpl(this));\n+    private final Map<String, String> configProperties = new HashMap<>();\n+\n+    ConfigImpl() {\n+        if (ConfigProviderResolverImpl.java2SecurityEnabled) {\n+            AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+                for (Object key : System.getProperties().keySet()) {\n+                    configProperties.put((String) key, System.getProperty((String)key));\n+                }\n+                return null;\n+            });\n+        }\n+        for (Object key : System.getProperties().keySet()) {\n+            configProperties.put((String) key, System.getProperty((String)key));\n+        }\n+    }\n+\n+    @Override\n+    public Iterable<ConfigSource> getConfigSources() {\n+        new Throwable(\"ANDY: Config.getConfigSources\").printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32e7e75498421e8d7dc10f6354fe815dc258b82"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzg2MzE3OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigProviderResolverImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozNDo1N1rOHfZPLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozNDo1N1rOHfZPLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MTM4OQ==", "bodyText": "ANDY", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r502681389", "createdAt": "2020-10-09T21:34:57Z", "author": {"login": "WhiteCat22"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigProviderResolverImpl.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.config;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.WeakHashMap;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigBuilder;\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+public class ConfigProviderResolverImpl extends ConfigProviderResolver {\n+    \n+    static final boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+\n+    static String getSysProp(String propName) {\n+        if (java2SecurityEnabled) {\n+            return AccessController.doPrivileged((PrivilegedAction<String>) () ->\n+                System.getProperty(propName));\n+        }\n+        return System.getProperty(propName);\n+    }\n+\n+    private static ClassLoader getThreadContextClassLoader() {\n+        if (java2SecurityEnabled) {\n+            return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () ->\n+                Thread.currentThread().getContextClassLoader());\n+        }\n+        return Thread.currentThread().getContextClassLoader();\n+    }\n+\n+    private static ClassLoader getParentClassLoader(ClassLoader loader) {\n+        if (java2SecurityEnabled) {\n+            return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () ->\n+                loader.getParent());\n+        }\n+        return loader.getParent();\n+    }\n+\n+    private final Map<ClassLoader, Config> configs = new WeakHashMap<>();\n+\n+    @Override\n+    public ConfigBuilder getBuilder() {\n+        new Throwable(\"ANDY: ConfigProviderResolverImpl.getBuilder\").printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32e7e75498421e8d7dc10f6354fe815dc258b82"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzg2MzYzOnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigSourceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozNTowNlrOHfZPYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozNTowNlrOHfZPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MTQ0Mw==", "bodyText": "ANDY", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r502681443", "createdAt": "2020-10-09T21:35:06Z", "author": {"login": "WhiteCat22"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigSourceImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.config;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+\n+public class ConfigSourceImpl implements ConfigSource {\n+    static final boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+    private final Config config;\n+    \n+    ConfigSourceImpl(Config config) {\n+        this.config = config;\n+    }\n+    @Override\n+    public String getName() {\n+        new Throwable(\"ANDY: ConfigSourceImpl.getName\").printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32e7e75498421e8d7dc10f6354fe815dc258b82"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2771, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}