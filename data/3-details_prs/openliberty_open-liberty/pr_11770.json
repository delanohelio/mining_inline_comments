{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzkyMjA3", "number": 11770, "title": "hang resolution cleanup including hung-busy detection", "bodyText": "Various hang resolution cleanups:\n\ndon't add threads when hung-busy (high cpu)\nhandle hang detection when not at targetPoolSize\navoid shrinking below the hang threshold buffer\nprovide more trace info during hang detection cycles\nremove getThroughputDistribution clutter from trace", "createdAt": "2020-04-15T14:24:35Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770", "merged": true, "mergeCommit": {"oid": "4e277330430a5a8a150c01d9d9bcf639102c7c03"}, "closed": true, "closedAt": "2020-05-11T14:31:09Z", "author": {"login": "gjdeval"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX5LAWgBqjMyMzU4MTk2NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgQk0EgBqjMzMjMyNDkyNDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cadcdcda09ea5c1c1f4720ac953d07587a308b94", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cadcdcda09ea5c1c1f4720ac953d07587a308b94", "committedDate": "2020-04-15T14:20:35Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6", "committedDate": "2020-04-15T14:42:47Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODcwNzE0", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-396870714", "createdAt": "2020-04-20T23:01:21Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzowMToyMVrOGIrH5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzowMToyMVrOGIrH5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0ODMyNQ==", "bodyText": "Copyright should be updated to say 2012, 2020 instead of 2012, 2016", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r411748325", "createdAt": "2020-04-20T23:01:21Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -136,6 +136,12 @@\n      */\n     private int hangBufferPoolSize = 0;\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODcyNjM3", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-396872637", "createdAt": "2020-04-20T23:06:28Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzowNjoyOVrOGIrPzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzowNjoyOVrOGIrPzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1MDM1MQ==", "bodyText": "Should the comment be updated?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r411750351", "createdAt": "2020-04-20T23:06:29Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1217,7 +1225,7 @@ int adjustPoolSize(int poolSize, int poolAdjustment) {\n \n         if (poolAdjustment != 0) {\n             // don't shrink below coreThreads", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODg4MDE2", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-396888016", "createdAt": "2020-04-20T23:28:11Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoyODoxMVrOGIrvwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoyODoxMVrOGIrvwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1ODUyOA==", "bodyText": "Should the comment be updated?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r411758528", "createdAt": "2020-04-20T23:28:11Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -893,19 +901,19 @@ boolean handleOutliers(ThroughputDistribution distribution, double throughput) {\n         boolean flippedCoin = false;\n         int downwardCompareSpan = 0;\n \n-        if (poolSize >= coreThreads + poolDecrement) {\n+        if (poolSize >= currentMinimumPoolSize + poolDecrement) {\n             // compareSpan is poolSize range used for throughput comparison\n-            downwardCompareSpan = Math.min(compareRange * poolDecrement, poolSize - coreThreads);\n+            downwardCompareSpan = Math.min(compareRange * poolDecrement, poolSize - currentMinimumPoolSize);\n \n             // if poolSize already close to coreThreads, we can skip some shrinkScore tweaks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODg5MjE3", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-396889217", "createdAt": "2020-04-20T23:30:33Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzozMDozM1rOGIr3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzozMDozM1rOGIr3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MDU1OA==", "bodyText": "currentMinimumPoolSize is not reset in resetThreadPool.  Should it be?  Or should resetThreadPool use currentMinimumPoolSize instead of coreThreads in its calculation?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r411760558", "createdAt": "2020-04-20T23:30:33Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -606,6 +612,7 @@\n         this.executorService = executorService;\n         this.threadPool = pool;\n         this.coreThreads = pool.getCorePoolSize();\n+        this.currentMinimumPoolSize = this.coreThreads;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTA0NzY3", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-400904767", "createdAt": "2020-04-27T12:31:42Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjozMTo0MlrOGMgryg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjozMTo0MlrOGMgryg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3MTU5NA==", "bodyText": "Should the comments and trace be updated here to reference currentMinimumPoolSize instead of coreThreads?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r415771594", "createdAt": "2020-04-27T12:31:42Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1760,13 +1796,14 @@ private void setPoolIncrementDecrement(int poolSize) {\n          * decrement exactly to coreThreads.\n          */\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 240}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTA4MTQ2", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-400908146", "createdAt": "2020-04-27T12:36:26Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjozNjoyNlrOGMg3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjozNjoyNlrOGMg3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3NDYzOA==", "bodyText": "Should the above code be updated?\n    if (poolSize < coreThreads) {\n        return \"poolSize < coreThreads\";\n    }\n\nThis ties into the reset though as well and your logic about things not adjusting between intervals.  It is a question that may have the answer of no.  If there is a short lived hang that doesn't require us to grow to the new hang pool size because it resolves with less than that and we never grow to that limit.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r415774638", "createdAt": "2020-04-27T12:36:26Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1285,9 +1293,13 @@ synchronized String evaluateInterval() {\n                 return \"monitoring paused\";\n             }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTEzMTgy", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-400913182", "createdAt": "2020-04-27T12:43:22Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjo0MzoyMlrOGMhJwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjo0MzoyMlrOGMhJwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3OTI2NQ==", "bodyText": "I do not understand this else case.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r415779265", "createdAt": "2020-04-27T12:43:22Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1552,12 +1585,15 @@ private boolean resolveHang(long tasksCompleted, boolean queueEmpty, int poolSiz\n                     if (controllerCyclesWithoutHang > noHangCyclesThreshold) {\n                         setPoolIncrementDecrement(poolSize);\n                         hangBufferPoolSize -= poolDecrement;\n+                        currentMinimumPoolSize = hangBufferPoolSize;\n                         controllerCyclesWithoutHang = 0;\n                     }\n                 }\n+            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "originalPosition": 219}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTE0NDEx", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-400914411", "createdAt": "2020-04-27T12:45:03Z", "commit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/06ce0bec1f4f9eeeb92dfc4d6103224afd17e5d6", "committedDate": "2020-04-15T14:42:47Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "85e68df00e1ef4752ee367d82d6c73960aa9a527", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/85e68df00e1ef4752ee367d82d6c73960aa9a527", "committedDate": "2020-04-28T22:59:05Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85e68df00e1ef4752ee367d82d6c73960aa9a527", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/85e68df00e1ef4752ee367d82d6c73960aa9a527", "committedDate": "2020-04-28T22:59:05Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e11368e29139f3e26739ee75ec684974feed68d0", "committedDate": "2020-04-30T20:36:42Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTQ4MzQ2", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-405148346", "createdAt": "2020-05-04T16:27:00Z", "commit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjoyNzowMFrOGQIHKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjoyNzowMFrOGQIHKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2MzMwNg==", "bodyText": "The use of activeThreads in this method is confusing now that you have a instance scoped variable with the same name.  In reality activeThreads doesn't actually portray what this argument is.  numberOfThreads or something like that may be a better option.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r419563306", "createdAt": "2020-05-04T16:27:00Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -749,6 +775,7 @@ synchronized void resume() {\n      * @return the data representing the throughput distribution for the\n      *         specified number of active threads\n      */\n+    @Trivial\n     ThroughputDistribution getThroughputDistribution(int activeThreads, boolean create) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTUzNjk0", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-405153694", "createdAt": "2020-05-04T16:33:41Z", "commit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjozMzo0MVrOGQIYHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjozMzo0MVrOGQIYHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2NzY0NA==", "bodyText": "I am not sure if this is the right comparison for lowActivity related to activeThreads.  I would expect it to be something like activeThreads < poolSize - poolIncrement or maybe 2 * poolIncrement.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r419567644", "createdAt": "2020-05-04T16:33:41Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1323,21 +1356,21 @@ synchronized String evaluateInterval() {\n                 currentStats.addDataPoint(throughput, controllerCycle);\n             }\n \n-            boolean lowTput = false;\n-            if (queueDepth == 0 && throughput < poolSize * lowTputThreadsRatio) {\n-                lowTput = true;\n+            boolean lowActivity = false;\n+            if (queueEmpty && ((throughput < (poolSize * lowTputThreadsRatio)) || (activeThreads < (poolSize * activeThreadsGrowthRatio)))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "originalPosition": 280}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTY2NTUy", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-405166552", "createdAt": "2020-05-04T16:50:19Z", "commit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjo1MDoxOVrOGQJCNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjo1MDoxOVrOGQJCNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3ODQyMQ==", "bodyText": "warnings are translated messages.  If you are going to leave this in here you should add a translated message for it.  This will automatically get an FFDC added due to instrumentation which likely will be sufficient.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r419578421", "createdAt": "2020-05-04T16:50:19Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1350,16 +1383,21 @@ synchronized String evaluateInterval() {\n             }\n \n             // Force some random variation into the pool size algorithm\n-            poolAdjustment = forceVariation(poolSize, poolAdjustment, deltaCompleted, lowTput);\n+            poolAdjustment = forceVariation(poolSize, poolAdjustment, deltaCompleted, lowActivity);\n \n             // Format an event level trace point with the most useful data\n             if (tc.isEventEnabled()) {\n-                Tr.event(tc, \"Interval data\", toIntervalData(throughput, forecast, shrinkScore, growScore, poolSize, poolAdjustment));\n+                Tr.event(tc, \"Interval data\", toIntervalData(throughput, forecast, deltaCompleted, shrinkScore, growScore,\n+                                                             poolSize, poolAdjustment));\n             }\n \n             // Change the pool size and save the result, will check it at start of next control cycle\n             targetPoolSize = adjustPoolSize(poolSize, poolAdjustment);\n \n+        } catch (Exception ex) {\n+            if (tc.isWarningEnabled()) {\n+                Tr.warning(tc, \"Exception caught: \" + ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "originalPosition": 321}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTc0NzM5", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-405174739", "createdAt": "2020-05-04T17:00:52Z", "commit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzowMDo1MlrOGQJdPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzowMDo1MlrOGQJdPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU4NTM0MQ==", "bodyText": "Should this call executorService.getActiveThreads() instead?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r419585341", "createdAt": "2020-05-04T17:00:52Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -1264,6 +1291,7 @@ synchronized String evaluateInterval() {\n         try {\n             queueDepth = threadPool.getQueue().size();\n             boolean queueEmpty = (queueDepth <= 0);\n+            activeThreads = threadPool.getActiveCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0"}, "originalPosition": 251}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e11368e29139f3e26739ee75ec684974feed68d0", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e11368e29139f3e26739ee75ec684974feed68d0", "committedDate": "2020-04-30T20:36:42Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "affbd9c17c0d80136310b520072212b27c8cd8a1", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/affbd9c17c0d80136310b520072212b27c8cd8a1", "committedDate": "2020-05-05T16:21:11Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjIyMzQ1", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-406222345", "createdAt": "2020-05-05T23:26:13Z", "commit": {"oid": "affbd9c17c0d80136310b520072212b27c8cd8a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoyNjoxM1rOGQ_OGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoyNjoxM1rOGQ_OGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2NjIwMA==", "bodyText": "It would appear that this does not need to be an instance scoped variable, but instead can be passed to toIntervalData in evaluateInterval.  It is only used in those two methods.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#discussion_r420466200", "createdAt": "2020-05-05T23:26:13Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.threading/src/com/ibm/ws/threading/internal/ThreadPoolController.java", "diffHunk": "@@ -395,13 +413,19 @@\n     private double processCpuUtil = -1.0;\n     private double systemCpuUtil = -1.0;\n     private double cpuUtil = -1.0;\n+    private static DecimalFormat df = new DecimalFormat(\"0.00\", DecimalFormatSymbols.getInstance(Locale.US));\n \n     /**\n      * The controller uses the threadpool queue depth as an input to some of the\n      * decisions it makes.\n      */\n     private int queueDepth = 0;\n \n+    /**\n+     * How many threads are active (running tasks) at the current controller cycle\n+     */\n+    private int activeThreads = 0;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "affbd9c17c0d80136310b520072212b27c8cd8a1"}, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "affbd9c17c0d80136310b520072212b27c8cd8a1", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/affbd9c17c0d80136310b520072212b27c8cd8a1", "committedDate": "2020-05-05T16:21:11Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "b35f54e5df454f094d4c30f5ae45df0297944ce6", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b35f54e5df454f094d4c30f5ae45df0297944ce6", "committedDate": "2020-05-06T15:44:10Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MDQ5MTMw", "url": "https://github.com/OpenLiberty/open-liberty/pull/11770#pullrequestreview-407049130", "createdAt": "2020-05-06T23:13:11Z", "commit": {"oid": "b35f54e5df454f094d4c30f5ae45df0297944ce6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b35f54e5df454f094d4c30f5ae45df0297944ce6", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b35f54e5df454f094d4c30f5ae45df0297944ce6", "committedDate": "2020-05-06T15:44:10Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "f3848a40399797edbdb029e67ed94805aa618d09", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f3848a40399797edbdb029e67ed94805aa618d09", "committedDate": "2020-05-08T21:24:01Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3848a40399797edbdb029e67ed94805aa618d09", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f3848a40399797edbdb029e67ed94805aa618d09", "committedDate": "2020-05-08T21:24:01Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "b3bdcbf3afb1175584ad6ed581b8611c5f253a2b", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b3bdcbf3afb1175584ad6ed581b8611c5f253a2b", "committedDate": "2020-05-08T22:15:44Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5602001feab17db292bfc7623d2ff81f81e721b", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a5602001feab17db292bfc7623d2ff81f81e721b", "committedDate": "2020-05-11T14:30:13Z", "message": "hang resolution cleanup including hung-busy detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3bdcbf3afb1175584ad6ed581b8611c5f253a2b", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b3bdcbf3afb1175584ad6ed581b8611c5f253a2b", "committedDate": "2020-05-08T22:15:44Z", "message": "hang resolution cleanup including hung-busy detection"}, "afterCommit": {"oid": "a5602001feab17db292bfc7623d2ff81f81e721b", "author": {"user": {"login": "gjdeval", "name": "Gary DeVal"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a5602001feab17db292bfc7623d2ff81f81e721b", "committedDate": "2020-05-11T14:30:13Z", "message": "hang resolution cleanup including hung-busy detection"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2816, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}