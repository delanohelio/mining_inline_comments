{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjY4MDAy", "number": 12023, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTozOToyMlrOD4duLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTo0MDowNlrOD4du3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTMzODA2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTozOToyMlrOGPTqRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTo0MTozMFrOGPTtuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwMzk0Mw==", "bodyText": "The null check is redundant.  We already checked it above", "url": "https://github.com/OpenLiberty/open-liberty/pull/12023#discussion_r418703943", "createdAt": "2020-05-01T19:39:22Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "diffHunk": "@@ -85,9 +85,18 @@ public URITemplate(String theTemplate, List<Parameter> params) {\n                 variables.add(var.getName());\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n-                    patternBuilder.append('(');\n-                    patternBuilder.append(var.getPattern());\n-                    patternBuilder.append(')');\n+                    String pattern = var.getPattern();\n+                    // #11893 Add parenthesis to the pattern to identify a regex in the pattern, \n+                    // however do not add them if they already exist since that will cause the Matcher\n+                    // to create extraneous values.  Parens identify a group so multiple parens would\n+                    // indicate multiple groups.\n+                    if ((pattern != null) && ((pattern.startsWith(\"(\")) && (pattern.endsWith(\")\")))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "defaaa013bca82ce706f1f294ebeeb76668bf83b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwNDgyNA==", "bodyText": "Also definitely overuse of parentheses in the if condition.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12023#discussion_r418704824", "createdAt": "2020-05-01T19:41:30Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "diffHunk": "@@ -85,9 +85,18 @@ public URITemplate(String theTemplate, List<Parameter> params) {\n                 variables.add(var.getName());\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n-                    patternBuilder.append('(');\n-                    patternBuilder.append(var.getPattern());\n-                    patternBuilder.append(')');\n+                    String pattern = var.getPattern();\n+                    // #11893 Add parenthesis to the pattern to identify a regex in the pattern, \n+                    // however do not add them if they already exist since that will cause the Matcher\n+                    // to create extraneous values.  Parens identify a group so multiple parens would\n+                    // indicate multiple groups.\n+                    if ((pattern != null) && ((pattern.startsWith(\"(\")) && (pattern.endsWith(\")\")))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwMzk0Mw=="}, "originalCommit": {"oid": "defaaa013bca82ce706f1f294ebeeb76668bf83b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTMzOTgxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTo0MDowNlrOGPTrZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTo0MDowNlrOGPTrZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwNDIyOQ==", "bodyText": "// Liberty change begin and // Liberty change end comments are missing", "url": "https://github.com/OpenLiberty/open-liberty/pull/12023#discussion_r418704229", "createdAt": "2020-05-01T19:40:06Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "diffHunk": "@@ -85,9 +85,18 @@ public URITemplate(String theTemplate, List<Parameter> params) {\n                 variables.add(var.getName());\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n-                    patternBuilder.append('(');\n-                    patternBuilder.append(var.getPattern());\n-                    patternBuilder.append(')');\n+                    String pattern = var.getPattern();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "defaaa013bca82ce706f1f294ebeeb76668bf83b"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1880, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}