{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODIxODUw", "number": 13299, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNTowMlrOEVzw_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0ODozMFrOEZ_I9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzAzNjc4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNTowMlrOG8xjEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNTowMlrOG8xjEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3OTUzOA==", "bodyText": "Is the  localHisc instanceof HttpInboundServiceContextImpl   check needed? It was checked above before setting localHisc", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r466379538", "createdAt": "2020-08-06T12:35:02Z", "author": {"login": "tspewak"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "diffHunk": "@@ -2853,7 +2854,19 @@ final protected void sendFullOutgoing(WsByteBuffer[] wsbb, HttpBaseMessageImpl m\n                 }\n \n             } else if (msg.isChunkedEncodingSet()) {\n-                createEndOfBodyChunk();\n+                HttpInboundServiceContextImpl localHisc = null;\n+                if (this instanceof HttpInboundServiceContextImpl) {\n+                    localHisc = (HttpInboundServiceContextImpl) this;\n+                }\n+                if (localHisc != null && localHisc instanceof HttpInboundServiceContextImpl", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzA0MTI1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNjoyNFrOG8xl0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozNjoyNFrOG8xl0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4MDI0Mg==", "bodyText": "Is && hisc instanceof HttpInboundServiceContextImpl  needed?  it was checked above before setting hisc", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r466380242", "createdAt": "2020-08-06T12:36:24Z", "author": {"login": "tspewak"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "diffHunk": "@@ -2892,8 +2905,18 @@ final protected VirtualConnection sendFullOutgoing(WsByteBuffer[] wsbb, HttpBase\n             if (this instanceof HttpInboundServiceContextImpl) {\n                 hisc = (HttpInboundServiceContextImpl) this;\n             }\n-            if (hisc != null && !(hisc.getLink() instanceof H2HttpInboundLinkWrap)) {\n+            if (hisc != null && hisc instanceof HttpInboundServiceContextImpl) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzA1MTQ1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/webapp/WebApp.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozOTozM1rOG8xsJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjozOTozM1rOG8xsJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4MTg2Mw==", "bodyText": "Could extendedConnection ever be null?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r466381863", "createdAt": "2020-08-06T12:39:33Z", "author": {"login": "tspewak"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/webapp/WebApp.java", "diffHunk": "@@ -4095,8 +4099,21 @@ public void sendError(HttpServletRequest req, HttpServletResponse res, ServletEr\n         WebContainerRequestState reqState = WebContainerRequestState.getInstance(true);   //PI80786\n \n         // PK82794\n-        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE)\n-            reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE) {\n+           // reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+            if (req instanceof SRTServletRequest) {\n+                SRTServletRequest srtReq = (SRTServletRequest) req;\n+                IRequestExtended iReq = (IRequestExtended)srtReq.getIRequest();\n+                if (iReq != null) {\n+                    HttpInboundConnection httpInboundConnection = iReq.getHttpInboundConnection();\n+                    HttpInboundConnectionExtended extendedConnection= (HttpInboundConnectionExtended) httpInboundConnection;\n+                    HttpDispatcherLink dispatcherLink=(HttpDispatcherLink) extendedConnection.getHttpDispatcherLink();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b9bf601d1018d9ffe568c0b96acd794376f686"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzExOTQ2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/dispatcher/internal/channel/HttpDispatcherLink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMjoyOVrOHBqGDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMjoyOVrOHBqGDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwMDMwMw==", "bodyText": "Description ?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r471500303", "createdAt": "2020-08-17T14:02:29Z", "author": {"login": "ginnick"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/dispatcher/internal/channel/HttpDispatcherLink.java", "diffHunk": "@@ -1260,4 +1260,14 @@ public boolean useForwardedHeaders() {\n         return false;\n     }\n \n+    /**\n+     * @param b", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzEyNTE3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/webapp/WebApp.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMzo1OFrOHBqJkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMzo1OFrOHBqJkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwMTIwMg==", "bodyText": "Should wrap the \"logp\" with an if testing for enabling trace trace... look elsewhere in part for examples.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r471501202", "createdAt": "2020-08-17T14:03:58Z", "author": {"login": "ginnick"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/webapp/WebApp.java", "diffHunk": "@@ -4095,8 +4099,22 @@ public void sendError(HttpServletRequest req, HttpServletResponse res, ServletEr\n         WebContainerRequestState reqState = WebContainerRequestState.getInstance(true);   //PI80786\n \n         // PK82794\n-        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE)\n-            reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+        if (WCCustomProperties.SUPPRESS_LAST_ZERO_BYTE_PACKAGE) {\n+           // reqState.setAttribute(\"com.ibm.ws.webcontainer.suppresslastzerobytepackage\", \"true\");\n+            if (req instanceof SRTServletRequest) {\n+                SRTServletRequest srtReq = (SRTServletRequest) req;\n+                IRequestExtended iReq = (IRequestExtended)srtReq.getIRequest();\n+                if (iReq != null) {\n+                    HttpInboundConnection httpInboundConnection = iReq.getHttpInboundConnection();\n+                    HttpInboundConnectionExtended extendedConnection= (HttpInboundConnectionExtended) httpInboundConnection;\n+                    if(extendedConnection!=null) {\n+                        HttpDispatcherLink dispatcherLink=(HttpDispatcherLink) extendedConnection.getHttpDispatcherLink();\n+                        logger.logp(Level.FINE, CLASS_NAME, \"sendError\", \"Setting SuppressZeroByteChunk\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367d64d7268e357d26782d0a70c9d97a7c2f3ae1"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjgyOTIyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0NToxNlrOHDIH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0NToxNlrOHDIH5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0MDg2OA==", "bodyText": "Originally this was checking that the link wasn't an H2HttpInboundLinkWrap, and not doing it now would seem to be a change in behavior. Additionally, by not checking the instanceof of the hisc, this conditional could potentially do a hisc.getSupress0ByteChunk() on an object that isn't an HttpInboundServiceContextImpl, which could lead to exceptions during the runtime. I recommend only doing the new code when the hisc is proven to be HttpInboundServiceContextImpl.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r473040868", "createdAt": "2020-08-19T13:45:16Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/channel/internal/HttpServiceContextImpl.java", "diffHunk": "@@ -2892,8 +2903,16 @@ final protected VirtualConnection sendFullOutgoing(WsByteBuffer[] wsbb, HttpBase\n             if (this instanceof HttpInboundServiceContextImpl) {\n                 hisc = (HttpInboundServiceContextImpl) this;\n             }\n-            if (hisc != null && !(hisc.getLink() instanceof H2HttpInboundLinkWrap)) {\n-                createEndOfBodyChunk();\n+            if (hisc != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Njg0MzQzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/dispatcher/internal/channel/HttpDispatcherLink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0ODozMFrOHDIRKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo0ODozMFrOHDIRKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0MzI0MA==", "bodyText": "Might be useful to log if this method isn't able to set the flag due to the isc being null. Nothing code breaking, just QoL change for easier debugging.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13299#discussion_r473043240", "createdAt": "2020-08-19T13:48:30Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/src/com/ibm/ws/http/dispatcher/internal/channel/HttpDispatcherLink.java", "diffHunk": "@@ -1260,4 +1260,14 @@ public boolean useForwardedHeaders() {\n         return false;\n     }\n \n+    /**\n+     * Calls function to set the supress 0 byte chunk flag.\n+     */\n+    public void setSuppressZeroByteChunk(boolean suppress0ByteChunk) {\n+        if (this.isc != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d386d0798d0cd548e6065617464d5fb808413f6e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2915, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}