{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzgwNTE5", "number": 10836, "title": "Update ConfiguredTopicBean", "bodyText": "#build\nUpdate to check headers are propagated properly", "createdAt": "2020-02-11T17:15:14Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/10836", "merged": true, "mergeCommit": {"oid": "7520e6898b482b62aa90beeeb0f56fe82643e652"}, "closed": true, "closedAt": "2020-02-12T10:40:54Z", "author": {"login": "tevans78"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDUx4_gH2gAyMzczNzgwNTE5OmY4MWQzZThhMTk1ZDU0YjNlZmUxY2I2NzZjNGFhMzBiOGI1NGUxYTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDVJFXgFqTM1Njg0NDM1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3", "committedDate": "2020-02-11T17:00:27Z", "message": "Update ConfiguredTopicBean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODQ0MzUy", "url": "https://github.com/OpenLiberty/open-liberty/pull/10836#pullrequestreview-356844352", "createdAt": "2020-02-11T17:19:11Z", "commit": {"oid": "f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoxOTo0OVrOFoR4zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoxOTo0OVrOFoR4zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MDQyOQ==", "bodyText": "Could use StandardCharsets.UTF_8 instead of the string", "url": "https://github.com/OpenLiberty/open-liberty/pull/10836#discussion_r377780429", "createdAt": "2020-02-11T17:19:49Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.reactive.messaging_fat/fat/src/com/ibm/ws/microprofile/reactive/messaging/fat/kafka/message/ConfiguredTopicBean.java", "diffHunk": "@@ -26,14 +28,22 @@\n     public static final String PRODUCER_RECORD_KEY = TEST_PREFIX + \"key\";\n     public static final String PRODUCER_RECORD_VALUE = TEST_PREFIX + \"value\";\n     public static final String GROUP_ID = TEST_PREFIX + \"app-group\";\n+    public static final String HEADER_KEY_PREFIX = TEST_PREFIX + \"headerKey_\";\n+    public static final String HEADER_VALUE_PREFIX = TEST_PREFIX + \"headerValue_\";\n+    public static final int NUM_HEADERS = 5;\n \n     public static final String CONFIGURED_TOPIC = TEST_PREFIX + \"configured-topic\";\n     public static final String PRODUCER_RECORD_TOPIC = TEST_PREFIX + \"producer-record-topic\";\n \n     @Incoming(CHANNEL_IN)\n     @Outgoing(CHANNEL_OUT)\n-    public ProducerRecord<String, String> reverseString(String in) {\n-        ProducerRecord<String, String> producerRecord = new ProducerRecord<String, String>(PRODUCER_RECORD_TOPIC, PRODUCER_RECORD_KEY, PRODUCER_RECORD_VALUE);\n+    public ProducerRecord<String, String> reverseString(String in) throws UnsupportedEncodingException {\n+\n+        ProducerRecord<String, String> producerRecord = new ProducerRecord<String, String>(PRODUCER_RECORD_TOPIC, null, PRODUCER_RECORD_KEY, PRODUCER_RECORD_VALUE);\n+        for (int i = 0; i < ConsumerRecordBean.NUM_HEADERS; i++) {\n+            producerRecord.headers().add(HEADER_KEY_PREFIX + i, (HEADER_VALUE_PREFIX + i).getBytes(\"UTF-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3189, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}