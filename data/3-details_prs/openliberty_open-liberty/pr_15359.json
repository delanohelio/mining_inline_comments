{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjYzNTM3", "number": 15359, "title": "Add capability to identify errorCodes and sqlStates as stale connections", "bodyText": "Add a new <identifyException> configuration element under <dataSource> which can be used to identify SQLExceptions with specific errorCode and sqlState values as stale connections.\nThe <identifyException> config element has 3 attributes:\n\nerrorCode: (Integer) the SQL error code that should be mapped\nsqlState: (String) the SQL state that should be mapped\nas: (String, required) the target action that exceptions of the specified errorCode or sqlState should be mapped to. Current allowed values are:\n\nNone: removes mapping\nStaleConnection: maps to a stale connection. Connections that are determined to be stale will be evicted from the connection pool\n\n\n\nExample usage:\n    <dataSource jndiName=\"jdbc/myDb\">\n        <jdbcDriver ... />\n        <properties ... />\n        <identifyException errorCode=\"1234\" as=\"StaleConnection\"/>\n    </dataSource>\nBuild settings: prioritize JDBC and JCA", "createdAt": "2020-12-22T17:32:08Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359", "merged": true, "mergeCommit": {"oid": "60ac52d3cce7e4b226989bdf8b71c1dbf5e1d801"}, "closed": true, "closedAt": "2020-12-31T15:16:30Z", "author": {"login": "aguibert"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdouMCLgBqjQxNDExNDk2MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrlen_gBqjQxNTk4MzUwMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "798b84d81a1a10e8242e996dc478b0b39c65bf6b", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/798b84d81a1a10e8242e996dc478b0b39c65bf6b", "committedDate": "2020-12-22T17:03:14Z", "message": "Rename mapError element to identifyException"}, "afterCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/51b4e303b812dc8857af1e041defd066230c4e35", "committedDate": "2020-12-22T17:42:51Z", "message": "Rename mapError element to identifyException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzgxOTky", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#pullrequestreview-557381992", "createdAt": "2020-12-22T21:39:53Z", "commit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMTozOTo1M1rOIKJ81w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMTo1NTozNVrOIKKS1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUxOTcwMw==", "bodyText": "Invalid value ''{0}'' specified for the identifyException ''as'' attribute.\n--->\nThe  ''{0}'' invalid value was specified for the ''as'' attribute on the identifyException element.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r547519703", "createdAt": "2020-12-22T21:39:53Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.jdbc/resources/com/ibm/ws/rsadapter/resources/IBMDataStoreAdapterNLS.nlsprops", "diffHunk": "@@ -366,6 +366,20 @@ PROP_SET_ERROR.useraction=Verify that the value that is specified is valid for t\n # 8060 deleted\n # 8065 deleted\n \n+# 8066E\n+# {0}         The invalid attribute value\n+# {1}         The allowed attribute values\n+# Do not translate: identifyException, as\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET=DSRA8066E: Invalid value ''{0}'' specified for the identifyException ''as'' attribute. Allowed values are: {1}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyMDk0NA==", "bodyText": "An unknown value was specified for the identifyException configuration element.\n--->\nAn invalid value was specified for the identifyException configuration element.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r547520944", "createdAt": "2020-12-22T21:43:27Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.jdbc/resources/com/ibm/ws/rsadapter/resources/IBMDataStoreAdapterNLS.nlsprops", "diffHunk": "@@ -366,6 +366,20 @@ PROP_SET_ERROR.useraction=Verify that the value that is specified is valid for t\n # 8060 deleted\n # 8065 deleted\n \n+# 8066E\n+# {0}         The invalid attribute value\n+# {1}         The allowed attribute values\n+# Do not translate: identifyException, as\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET=DSRA8066E: Invalid value ''{0}'' specified for the identifyException ''as'' attribute. Allowed values are: {1}\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET.explanation=An unknown value was specified for the identifyException configuration element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyMzgxNw==", "bodyText": "Must specify exactly one of the ''errorCode'' or ''sqlState'' attributes on the identifyException element.\n--->\nExactly one of either the ''errorCode'' or ''sqlState'' attributes must be specified on the identifyException element.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r547523817", "createdAt": "2020-12-22T21:51:08Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.jdbc/resources/com/ibm/ws/rsadapter/resources/IBMDataStoreAdapterNLS.nlsprops", "diffHunk": "@@ -366,6 +366,20 @@ PROP_SET_ERROR.useraction=Verify that the value that is specified is valid for t\n # 8060 deleted\n # 8065 deleted\n \n+# 8066E\n+# {0}         The invalid attribute value\n+# {1}         The allowed attribute values\n+# Do not translate: identifyException, as\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET=DSRA8066E: Invalid value ''{0}'' specified for the identifyException ''as'' attribute. Allowed values are: {1}\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET.explanation=An unknown value was specified for the identifyException configuration element.\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET.useraction=Update the configuration to specify one of the allowed values.\n+\n+# 8067E\n+# Do not translate: errorCode, sqlState, identifyException\n+8067E_IDENTIFY_EXCEPTION_ERRCODE_SQLSTATE=DSRA8067E: Must specify exactly one of the ''errorCode'' or ''sqlState'' attributes on the identifyException element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyNDI3Nw==", "bodyText": "Update the configuration to specify exactly one of the errorCode or sqlState attributes.\n--->\nUpdate the configuration to specify exactly one of the errorCode or sqlState attributes on the identifyException element.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r547524277", "createdAt": "2020-12-22T21:52:32Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.jdbc/resources/com/ibm/ws/rsadapter/resources/IBMDataStoreAdapterNLS.nlsprops", "diffHunk": "@@ -366,6 +366,20 @@ PROP_SET_ERROR.useraction=Verify that the value that is specified is valid for t\n # 8060 deleted\n # 8065 deleted\n \n+# 8066E\n+# {0}         The invalid attribute value\n+# {1}         The allowed attribute values\n+# Do not translate: identifyException, as\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET=DSRA8066E: Invalid value ''{0}'' specified for the identifyException ''as'' attribute. Allowed values are: {1}\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET.explanation=An unknown value was specified for the identifyException configuration element.\n+8066E_IDENTIFY_EXCEPTION_INVALID_TARGET.useraction=Update the configuration to specify one of the allowed values.\n+\n+# 8067E\n+# Do not translate: errorCode, sqlState, identifyException\n+8067E_IDENTIFY_EXCEPTION_ERRCODE_SQLSTATE=DSRA8067E: Must specify exactly one of the ''errorCode'' or ''sqlState'' attributes on the identifyException element.\n+8067E_IDENTIFY_EXCEPTION_ERRCODE_SQLSTATE.explanation=The errorCode and sqlState attributes are mutually exclusive, and one of the attributes must be specified.\n+8067E_IDENTIFY_EXCEPTION_ERRCODE_SQLSTATE.useraction=Update the configuration to specify exactly one of the errorCode or sqlState attributes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyNDcxNQ==", "bodyText": "Normally this will be the actual error code returned by the underlying database.\n--->\nNormally, this is the actual error code that is returned by the underlying database.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r547524715", "createdAt": "2020-12-22T21:53:53Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception as\n+identifyException.desc=Map a specific sqlCode or sqlState to an action such as a stale connection.\n+\n+identifyException.sqlState=SQL State\n+identifyException.sqlState.desc=A string that follows either the XOPEN SQLstate conventions or the SQL:2003 conventions.\n+identifyException.errorCode=SQL Error Code\n+identifyException.errorCode.desc=An integer error code specific to the backend database. Normally this will be the actual error code returned by the underlying database.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyNTMzMg==", "bodyText": "Allowed values are: None (removes a mapping), or StaleConnection (connections that are determined to be stale will be evicted from the connection pool once closed)\n--->\nAllowed values are: None, which removes a mapping, or StaleConnection. Connections that are determined to be stale are evicted from the connection pool once they are closed.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r547525332", "createdAt": "2020-12-22T21:55:35Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception as\n+identifyException.desc=Map a specific sqlCode or sqlState to an action such as a stale connection.\n+\n+identifyException.sqlState=SQL State\n+identifyException.sqlState.desc=A string that follows either the XOPEN SQLstate conventions or the SQL:2003 conventions.\n+identifyException.errorCode=SQL Error Code\n+identifyException.errorCode.desc=An integer error code specific to the backend database. Normally this will be the actual error code returned by the underlying database.\n+identifyException.as=Identify exception as\n+identifyException.as.desc=The target mapping for the sqlCode or sqlState. Allowed values are: None (removes a mapping), or StaleConnection (connections that are determined to be stale will be evicted from the connection pool once closed)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b4e303b812dc8857af1e041defd066230c4e35"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f910dad8c540db8e14080a481c1a7c362924d40b", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f910dad8c540db8e14080a481c1a7c362924d40b", "committedDate": "2020-12-28T15:43:27Z", "message": "Message review comments"}, "afterCommit": {"oid": "ab8810ae768f59668990a4cd869640d3afa4d4f0", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ab8810ae768f59668990a4cd869640d3afa4d4f0", "committedDate": "2020-12-28T15:43:55Z", "message": "Message review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjAxNjg0", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#pullrequestreview-559201684", "createdAt": "2020-12-28T15:56:34Z", "commit": {"oid": "ab8810ae768f59668990a4cd869640d3afa4d4f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0dcdc1586382b196228c1b36d6965ff9726b4485", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0dcdc1586382b196228c1b36d6965ff9726b4485", "committedDate": "2020-12-29T16:15:53Z", "message": "Allow identifyException to specify an errorCode and sqlState at the same time"}, "afterCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/32230f4f9eb8082a4985c92b43f5265d9a153369", "committedDate": "2020-12-29T16:21:42Z", "message": "Allow identifyException to specify an errorCode and sqlState at the same time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NjExMDA1", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#pullrequestreview-559611005", "createdAt": "2020-12-29T16:37:23Z", "commit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjozNzoyM1rOIMTUpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzo0MDoyMlrOIMUj0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MDQwNw==", "bodyText": "Inconsistent use of \"SQL state\" vs \"SQLstate\" vs \"sqlState\" vs \"SQL State\" between this and the following translatable text.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549770407", "createdAt": "2020-12-29T16:37:23Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception\n+identifyException.desc=Identify a specific SQL error code or SQL state on a SQLException.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MDUzOQ==", "bodyText": "Capitalization should be \"SQL error code\" for consistency with usage above.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549770539", "createdAt": "2020-12-29T16:37:55Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception\n+identifyException.desc=Identify a specific SQL error code or SQL state on a SQLException.\n+\n+identifyException.sqlState=SQL State\n+identifyException.sqlState.desc=A string that follows either the XOPEN SQLstate conventions or the SQL:2003 conventions.\n+identifyException.errorCode=SQL Error Code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTI5MQ==", "bodyText": "We should add the reason: \"This enables the application server (or container, whatever is the right word) to take appropriate action based on the error condition. For example, closing a stale connection instead of returning it to the connection pool.\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549771291", "createdAt": "2020-12-29T16:40:07Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception\n+identifyException.desc=Identify a specific SQL error code or SQL state on a SQLException.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3Mzk4MQ==", "bodyText": "\"integer\" is unnecessary. The type is already correctly included in the schema and documentation that is generated from it.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549773981", "createdAt": "2020-12-29T16:48:47Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception\n+identifyException.desc=Identify a specific SQL error code or SQL state on a SQLException.\n+\n+identifyException.sqlState=SQL State\n+identifyException.sqlState.desc=A string that follows either the XOPEN SQLstate conventions or the SQL:2003 conventions.\n+identifyException.errorCode=SQL Error Code\n+identifyException.errorCode.desc=An integer error code specific to the backend database. Normally, this is the actual error code that is returned by the underlying database.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NDIxMA==", "bodyText": "What about StaleStatement?", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549774210", "createdAt": "2020-12-29T16:49:28Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception\n+identifyException.desc=Identify a specific SQL error code or SQL state on a SQLException.\n+\n+identifyException.sqlState=SQL State\n+identifyException.sqlState.desc=A string that follows either the XOPEN SQLstate conventions or the SQL:2003 conventions.\n+identifyException.errorCode=SQL Error Code\n+identifyException.errorCode.desc=An integer error code specific to the backend database. Normally, this is the actual error code that is returned by the underlying database.\n+identifyException.as=Identify exception as\n+identifyException.as.desc=The target mapping for the sqlCode or sqlState. Allowed values are: None or StaleConnection. None removes a mapping. StaleConnection causes connections that are stale to be evicted from the connection pool once they are closed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NDg3OA==", "bodyText": "Rather than saying, \"The target mapping for\", I think we could phrase this in a way that will be more easily understood by users.  \"Identifies the error condition that the SQL error code or SQL state represents. Allowed values ...  None removes the identification. Stale Connection ...\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549774878", "createdAt": "2020-12-29T16:51:45Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc.metatype/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -106,6 +106,17 @@ isoLevel.SERIALIZABLE.desc=Dirty reads, non-repeatable reads and phantom reads a\n isoLevel.SNAPSHOT.desc=Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.\n isoLevel.NONE.desc=Indicates that the JDBC driver does not support transactions.\n \n+# Identify Exception\n+identifyException=Identify exception\n+identifyException.desc=Identify a specific SQL error code or SQL state on a SQLException.\n+\n+identifyException.sqlState=SQL State\n+identifyException.sqlState.desc=A string that follows either the XOPEN SQLstate conventions or the SQL:2003 conventions.\n+identifyException.errorCode=SQL Error Code\n+identifyException.errorCode.desc=An integer error code specific to the backend database. Normally, this is the actual error code that is returned by the underlying database.\n+identifyException.as=Identify exception as\n+identifyException.as.desc=The target mapping for the sqlCode or sqlState. Allowed values are: None or StaleConnection. None removes a mapping. StaleConnection causes connections that are stale to be evicted from the connection pool once they are closed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NjA3Mw==", "bodyText": "The statement that this may be null doesn't appear to be true, and if it were would cause a NullPointerException in the code that follows.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549786073", "createdAt": "2020-12-29T17:25:25Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/DSConfig.java", "diffHunk": "@@ -194,6 +245,12 @@\n      * JNDI name.\n      */\n     public final String jndiName;\n+    \n+    /**\n+     * List of identified exceptinos to check if certain errorCode or sqlState values that should map to specific actions.\n+     * May be null if none are configured", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODU3OA==", "bodyText": "The - is a confusing delimiter given that error codes can and sometimes do have negative values.  A  different delimiter (maybe &) would be clearer for someone who is debugging.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549788578", "createdAt": "2020-12-29T17:33:32Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java", "diffHunk": "@@ -99,6 +103,14 @@\n      * SQLException SQL States that indicate a stale connection.\n      */\n     final Set<String> staleSQLStates = new HashSet<String>();\n+    \n+    /**\n+     * Pairs of SQLException error codes and SQL states that indicate a stale exception.\n+     * This differs from staleErrorCodes and staleSQLStates because here both items must\n+     * match in order to be considered stale.\n+     * The entries are of the format: SQLSTATE-SQLCODE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MDY3Mg==", "bodyText": "This approach is unable to override an improperly identified stale when the JDBC driver raises a SQLNonTransientConnectionException or SQLRecoverableException.\nIt is also unable to override an improperly identified stale when there was a built-in mapping to just the SQL State, for example 08003 and the user it trying to override so that the combination of SQL State 08003 with error code 230 means not stale.\nThat said, we have probably gone too far ahead with the implementation here when we know that ultimately we will also need to consider how other types of identified exceptions fit into the map and may end up altering the approach a bit for that regardless.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549790672", "createdAt": "2020-12-29T17:40:22Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java", "diffHunk": "@@ -394,22 +445,24 @@ public boolean isConnectionError(SQLException ex) {\n \n         // Maintain a set in order to check for cycles\n         Set<Throwable> chain = new HashSet<Throwable>();\n-\n+        \n         boolean stale = false;\n         for (Throwable t = ex; t != null && !stale && chain.add(t); t = t.getCause()) {\n             SQLException sqlX = t instanceof SQLException ? (SQLException) t : null;\n             if (isTraceOn && tc.isDebugEnabled())\n                 Tr.debug(this, tc, \"checking \" + t,\n                          sqlX == null ? null : sqlX.getSQLState(),\n                          sqlX == null ? null : sqlX.getErrorCode());\n+            \n             if (sqlX != null)\n                 stale |= sqlX instanceof SQLRecoverableException ||\n                          sqlX instanceof SQLNonTransientConnectionException ||\n                          sqlX instanceof SQLTransientConnectionException && failoverOccurred(sqlX) ||\n+                         staleStateAndCodes.contains(sqlX.getSQLState() + \"-\" + sqlX.getErrorCode()) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e593e4df0d88671c47563b523d9756b63957763", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6e593e4df0d88671c47563b523d9756b63957763", "committedDate": "2020-12-30T16:27:48Z", "message": "Add capability to map sqlCodes and sqlStates to stale connections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eb54d91ed46b5eef720372ea83ec97f823c7bdf", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1eb54d91ed46b5eef720372ea83ec97f823c7bdf", "committedDate": "2020-12-30T16:27:49Z", "message": "Rename mapError element to identifyException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec40e3c238754d9243f59d1872c1361b1211b44b", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ec40e3c238754d9243f59d1872c1361b1211b44b", "committedDate": "2020-12-30T16:27:49Z", "message": "Message review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ff9e376c2da789c817c7fe73d7e75dd48a875c", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a7ff9e376c2da789c817c7fe73d7e75dd48a875c", "committedDate": "2020-12-30T16:27:49Z", "message": "Allow identifyException to specify an errorCode and sqlState at the same time"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/32230f4f9eb8082a4985c92b43f5265d9a153369", "committedDate": "2020-12-29T16:21:42Z", "message": "Allow identifyException to specify an errorCode and sqlState at the same time"}, "afterCommit": {"oid": "5d95b513ed5dfff079469c8853ffb11ec82b05c4", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5d95b513ed5dfff079469c8853ffb11ec82b05c4", "committedDate": "2020-12-30T16:27:49Z", "message": "Review comments from Nathan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzk2MjYy", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#pullrequestreview-560396262", "createdAt": "2020-12-31T14:43:14Z", "commit": {"oid": "5d95b513ed5dfff079469c8853ffb11ec82b05c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7889624e006749fa3a6cfd68e5f99043f8e6a626", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7889624e006749fa3a6cfd68e5f99043f8e6a626", "committedDate": "2020-12-31T15:15:13Z", "message": "Review comments from Nathan"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d95b513ed5dfff079469c8853ffb11ec82b05c4", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5d95b513ed5dfff079469c8853ffb11ec82b05c4", "committedDate": "2020-12-30T16:27:49Z", "message": "Review comments from Nathan"}, "afterCommit": {"oid": "7889624e006749fa3a6cfd68e5f99043f8e6a626", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7889624e006749fa3a6cfd68e5f99043f8e6a626", "committedDate": "2020-12-31T15:15:13Z", "message": "Review comments from Nathan"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2667, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}