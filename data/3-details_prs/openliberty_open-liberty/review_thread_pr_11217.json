{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTY4NTk0", "number": 11217, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToxMzo0MFrODq-Q1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToxNzozNlrODq-ViQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mzg2OTAyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.oauth/src/com/ibm/ws/security/oauth20/web/OAuth20ClientMetatypeService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToxMzo0MFrOF7DUqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxODoxNVrOF7dOyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NDc0NQ==", "bodyText": "Removing the LibertyOAuth20Provider.KEY_CLIENT_TRUSTED_URI_PREFIXES.equals(attributeId) check in isUnsupportedRegistrationAttribute() should make this if statement superfluous.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11217#discussion_r397464745", "createdAt": "2020-03-24T21:13:40Z", "author": {"login": "ayoho"}, "path": "dev/com.ibm.ws.security.oauth/src/com/ibm/ws/security/oauth20/web/OAuth20ClientMetatypeService.java", "diffHunk": "@@ -236,14 +236,17 @@ private JsonObject createMetatypeJsonForObjectClassDefinition(MetaTypeInformatio\n \n     @Trivial\n     private boolean isAttributeToIgnore(AttributeDefinition attrDef) {\n+        if (attrDef.getID().equals(LibertyOAuth20Provider.KEY_CLIENT_TRUSTED_URI_PREFIXES)) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "837493268e2b30fd38d1c30615ae770e56a802d3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4OTIyNw==", "bodyText": "fixed", "url": "https://github.com/OpenLiberty/open-liberty/pull/11217#discussion_r397889227", "createdAt": "2020-03-25T14:18:15Z", "author": {"login": "brutif"}, "path": "dev/com.ibm.ws.security.oauth/src/com/ibm/ws/security/oauth20/web/OAuth20ClientMetatypeService.java", "diffHunk": "@@ -236,14 +236,17 @@ private JsonObject createMetatypeJsonForObjectClassDefinition(MetaTypeInformatio\n \n     @Trivial\n     private boolean isAttributeToIgnore(AttributeDefinition attrDef) {\n+        if (attrDef.getID().equals(LibertyOAuth20Provider.KEY_CLIENT_TRUSTED_URI_PREFIXES)) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NDc0NQ=="}, "originalCommit": {"oid": "837493268e2b30fd38d1c30615ae770e56a802d3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mzg4MTA1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.openidconnect.client/src/com/ibm/ws/security/openidconnect/client/internal/OidcClientImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToxNzozNlrOF7DcNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxODowNlrOF7dOXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NjY3Nw==", "bodyText": "HttpServletRequest.getCookies() can return null, which would cause this line to throw an NPE.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11217#discussion_r397466677", "createdAt": "2020-03-24T21:17:36Z", "author": {"login": "ayoho"}, "path": "dev/com.ibm.ws.security.openidconnect.client/src/com/ibm/ws/security/openidconnect/client/internal/OidcClientImpl.java", "diffHunk": "@@ -425,16 +425,33 @@ public ProviderAuthenticationResult authenticate(HttpServletRequest req,\n         return oidcClientAuthenticator.authenticate(req, res, oidcClientConfig);\n     }\n \n+    private boolean requestHasOidcCookie(HttpServletRequest req) {\n+        Cookie[] cookies = req.getCookies();\n+        for (int i = 0; i < cookies.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "837493268e2b30fd38d1c30615ae770e56a802d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4OTExNw==", "bodyText": "good catch, fixed", "url": "https://github.com/OpenLiberty/open-liberty/pull/11217#discussion_r397889117", "createdAt": "2020-03-25T14:18:06Z", "author": {"login": "brutif"}, "path": "dev/com.ibm.ws.security.openidconnect.client/src/com/ibm/ws/security/openidconnect/client/internal/OidcClientImpl.java", "diffHunk": "@@ -425,16 +425,33 @@ public ProviderAuthenticationResult authenticate(HttpServletRequest req,\n         return oidcClientAuthenticator.authenticate(req, res, oidcClientConfig);\n     }\n \n+    private boolean requestHasOidcCookie(HttpServletRequest req) {\n+        Cookie[] cookies = req.getCookies();\n+        for (int i = 0; i < cookies.length; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NjY3Nw=="}, "originalCommit": {"oid": "837493268e2b30fd38d1c30615ae770e56a802d3"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2054, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}