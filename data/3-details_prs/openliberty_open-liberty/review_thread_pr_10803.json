{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjI2MDg1", "number": 10803, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzo0MDoxOVrODeLn_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzo0Njo1MlrODe5ntg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTc0MzMzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc_fat/publish/servers/com.ibm.ws.jdbc.fat/bootstrap.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzo0MDoxOVrOFnNVaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyMzoxN1rOFoSAzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzI1Nw==", "bodyText": "What does this change do?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r376657257", "createdAt": "2020-02-07T23:40:19Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.jdbc_fat/publish/servers/com.ibm.ws.jdbc.fat/bootstrap.properties", "diffHunk": "@@ -12,8 +12,7 @@ com.ibm.ws.logging.trace.specification=*=info=enabled:\\\n com.ibm.ws.jdbc.*=all=enabled:\\\n com.ibm.ejs.j2c.*=all=enabled:\\\n com.ibm.ws.rsadapter.*=all=enabled:\\\n-com.ibm.ws.security.jca.*=all=enabled:\\\n-LogService=all\n+com.ibm.ws.security.jca.*=all=enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE2NTI0MA==", "bodyText": "LogService=all was logging a bunch of OSGi services that are not needed by our tace test, and are not directly related to JDBC/DB testing.  I don't think it is necessary to log, and would probably make debugging a test/product defect more difficult since we would need to weed this out anyways.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377165240", "createdAt": "2020-02-10T16:17:53Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.jdbc_fat/publish/servers/com.ibm.ws.jdbc.fat/bootstrap.properties", "diffHunk": "@@ -12,8 +12,7 @@ com.ibm.ws.logging.trace.specification=*=info=enabled:\\\n com.ibm.ws.jdbc.*=all=enabled:\\\n com.ibm.ejs.j2c.*=all=enabled:\\\n com.ibm.ws.rsadapter.*=all=enabled:\\\n-com.ibm.ws.security.jca.*=all=enabled:\\\n-LogService=all\n+com.ibm.ws.security.jca.*=all=enabled", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzI1Nw=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjQ3OA==", "bodyText": "Thanks for that answer!", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377782478", "createdAt": "2020-02-11T17:23:17Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.jdbc_fat/publish/servers/com.ibm.ws.jdbc.fat/bootstrap.properties", "diffHunk": "@@ -12,8 +12,7 @@ com.ibm.ws.logging.trace.specification=*=info=enabled:\\\n com.ibm.ws.jdbc.*=all=enabled:\\\n com.ibm.ejs.j2c.*=all=enabled:\\\n com.ibm.ws.rsadapter.*=all=enabled:\\\n-com.ibm.ws.security.jca.*=all=enabled:\\\n-LogService=all\n+com.ibm.ws.security.jca.*=all=enabled", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzI1Nw=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzg2NDE1OnYy", "diffSide": "RIGHT", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOToxNzo1NVrOFnyWvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyNToyNFrOFoSF1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg==", "bodyText": "Where does org.testcontainers.containers exist?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377263806", "createdAt": "2020-02-10T19:17:55Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5MTkyMA==", "bodyText": "That is part of the testcontainers library that we pull in here:\nhttps://github.com/OpenLiberty/open-liberty/blob/integration/dev/fattest.databases/bnd.bnd#L33-L35", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377291920", "createdAt": "2020-02-10T20:14:56Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4Mzc2NQ==", "bodyText": "Thanks!", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377783765", "createdAt": "2020-02-11T17:25:24Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzkxNDkzOnYy", "diffSide": "RIGHT", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOTozMzo0NFrOFny2Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1NDowMFrOFn4mSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MTg0Mw==", "bodyText": "typo?: \"Could not find one...\"\nI only see one class that will be displayed in the failed assertion.  Suggest changing the message to something like \"Could not find class: ...\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377271843", "createdAt": "2020-02-10T19:33:44Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find class: \" + className);\n+\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NjA4OA==", "bodyText": "Nice catch on the typo.  Here I am throwing an error if we fail to find a class during one of these lines:\ncontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\ndsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\nDo you think I should try then one at a time and have a more specific failure?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377366088", "createdAt": "2020-02-10T22:54:00Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find class: \" + className);\n+\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MTg0Mw=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDMwODM0OnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops/Properties_postgresql.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTo0NDo1OVrOFn2sGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyODoyOFrOFoSMvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ==", "bodyText": "How did you manufacture this class?  Did you copy another one and change the names to Postgres as needed?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377334811", "createdAt": "2020-02-10T21:44:59Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops/Properties_postgresql.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*******************************************************************************", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MTI0Mw==", "bodyText": "Added in the fields manually.  Then, used eclipse tools to generate getters, setters, and toString method.  Then added in the annotations and (unfortunately) had to edit the toString method to look like the other properties classes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377361243", "createdAt": "2020-02-10T22:42:31Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops/Properties_postgresql.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*******************************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NTUzMg==", "bodyText": "Thank you!", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377785532", "createdAt": "2020-02-11T17:28:28Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops/Properties_postgresql.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*******************************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDMyNzM4OnYy", "diffSide": "RIGHT", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTo1MToyNVrOFn23zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyNzowMlrOFoSJmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg==", "bodyText": "Where does com.ibm.websphere.simplicity.config.dsprops.* exist?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377337806", "createdAt": "2020-02-10T21:51:25Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MzAxMg==", "bodyText": "In the fattest.simplicity module.  https://github.com/OpenLiberty/open-liberty/tree/integration/dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops that is where all the datasource property classes we create datasource objects from exist (when testing) in order to make changes to the config.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377363012", "createdAt": "2020-02-10T22:46:42Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NDczMQ==", "bodyText": "Thanks for the memory jog.  I knew I had seen those files before, but was not able to traverse back to them.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377784731", "createdAt": "2020-02-11T17:27:02Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg=="}, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzI3OTI2OnYy", "diffSide": "RIGHT", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzo0Njo1MlrOFoSyow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzo0Njo1MlrOFoSyow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5NTIzNQ==", "bodyText": "typo? changes -> changed", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377795235", "createdAt": "2020-02-11T17:46:52Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java", "diffHunk": "@@ -30,6 +31,24 @@\n     private DatabaseContainerUtil() {\n     \t//No objects should be created from this class\n     }\n+    \n+    /**\n+     * Performs the same property substitution as {@link DatabaseContainerUtil#setupDataSourceProperties(LibertyServer, JdbcDatabaseContainer)}\n+     * but ensures that we use properties.{database} instead of generic properties.\n+     */\n+    public static void setupDataSourceDatabaseProperties(LibertyServer serv, JdbcDatabaseContainer<?> cont) throws CloneNotSupportedException, Exception {\n+        //Skip for Derby and DerbyClient\n+    \tif (DatabaseContainerType.valueOf(cont) == DatabaseContainerType.Derby ||\n+    \t\t\tDatabaseContainerType.valueOf(cont) == DatabaseContainerType.DerbyClient)\n+            return; //Derby used by default no need to change DS properties\n+    \t\n+    \t//Get server config\n+    \tServerConfiguration cloneConfig = serv.getServerConfiguration().clone();\n+    \t//Get datasources to be changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbd8a30468cc1e18782703f8f3b4d9558f71b0b6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2106, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}