{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDcyODA2", "number": 14062, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNDo0N1rOElymUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNTo1NlrOElyn-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDYxNzc5OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/client/ConfigProviderResolverImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNDo0OFrOHVdjsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDo1ODozMVrOHViMBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2NjQxOA==", "bodyText": "This is more of a question. I know this is an SE environment only, but do we need do-privs when getting system properties? If this wasn't SE would we need them?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14062#discussion_r492266418", "createdAt": "2020-09-21T18:34:48Z", "author": {"login": "WhiteCat22"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/client/ConfigProviderResolverImpl.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.client;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Optional;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigBuilder;\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+\n+/**\n+ * Only intended to be used in Java SE client environments.\n+ */\n+public class ConfigProviderResolverImpl extends ConfigProviderResolver {\n+    \n+    private final boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+\n+    private final Config config = new Config() {\n+\n+        @Override\n+        public Iterable<ConfigSource> getConfigSources() {\n+            // TODO Auto-generated method stub\n+            return null;\n+        }\n+\n+        @Override\n+        public <T> Optional<T> getOptionalValue(String propName, Class<T> type) {\n+            return Optional.ofNullable(getValue(propName, type));\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public Iterable<String> getPropertyNames() {\n+            return (Iterable<String>) System.getProperties().keySet().iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81a815039e7b00e45ac967eef99ae853786c6026"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0MjI3Ng==", "bodyText": "Good catch.  Our FATs and the TCK most likely wouldn't test with a Java 2 security manager in a Java SE environment (and this code should never run outside of a Java SE env), but it is good practice to wrap it in a doPriv block.  I'll update.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14062#discussion_r492342276", "createdAt": "2020-09-21T20:58:31Z", "author": {"login": "andymc12"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/client/ConfigProviderResolverImpl.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.client;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Optional;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigBuilder;\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+\n+/**\n+ * Only intended to be used in Java SE client environments.\n+ */\n+public class ConfigProviderResolverImpl extends ConfigProviderResolver {\n+    \n+    private final boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+\n+    private final Config config = new Config() {\n+\n+        @Override\n+        public Iterable<ConfigSource> getConfigSources() {\n+            // TODO Auto-generated method stub\n+            return null;\n+        }\n+\n+        @Override\n+        public <T> Optional<T> getOptionalValue(String propName, Class<T> type) {\n+            return Optional.ofNullable(getValue(propName, type));\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public Iterable<String> getPropertyNames() {\n+            return (Iterable<String>) System.getProperties().keySet().iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2NjQxOA=="}, "originalCommit": {"oid": "81a815039e7b00e45ac967eef99ae853786c6026"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDYyMjAwOnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.jboss.resteasy.common/resources/META-INF/services/org.eclipse.microprofile.config.spi.ConfigProviderResolver", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNTo1NlrOHVdmOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDo1NDo1OFrOHViE5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2NzA2Nw==", "bodyText": "do we need to explicitly NOT export this package in bnd?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14062#discussion_r492267067", "createdAt": "2020-09-21T18:35:56Z", "author": {"login": "WhiteCat22"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/resources/META-INF/services/org.eclipse.microprofile.config.spi.ConfigProviderResolver", "diffHunk": "@@ -0,0 +1,2 @@\n+# Intended only for Java SE environments - should NOT be exposed by the ResourceProvider in the bnd file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81a815039e7b00e45ac967eef99ae853786c6026"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0MDQ1Mw==", "bodyText": "The package is fine to export.  We just not explicitly NOT add this file to the app_resources list of META-INF files that we \"publicize\" via the ResourceProvider service - i.e.\napp-resources= \\\n  META-INF/services/javax.ws.rs.client.ClientBuilder | \\\n  META-INF/services/javax.ws.rs.sse.SseEventSource\\$Builder | \\\n  META-INF/services/javax.ws.rs.sse.SseEventSource.Builder | \\\n  META-INF/services/javax.ws.rs.ext.RuntimeDelegate | \\\n  META-INF/services/javax.ws.rs.ext.Providers\n\nIf we do, then things might go awry when users try to use the client inside Liberty servers.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14062#discussion_r492340453", "createdAt": "2020-09-21T20:54:58Z", "author": {"login": "andymc12"}, "path": "dev/io.openliberty.org.jboss.resteasy.common/resources/META-INF/services/org.eclipse.microprofile.config.spi.ConfigProviderResolver", "diffHunk": "@@ -0,0 +1,2 @@\n+# Intended only for Java SE environments - should NOT be exposed by the ResourceProvider in the bnd file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2NzA2Nw=="}, "originalCommit": {"oid": "81a815039e7b00e45ac967eef99ae853786c6026"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2734, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}