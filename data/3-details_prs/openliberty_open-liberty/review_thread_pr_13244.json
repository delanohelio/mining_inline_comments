{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzAwNDM1", "number": 13244, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNjo1MlrOETtBlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNjo1MlrOETtBlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDk2MDg1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNjo1MlrOG5lgTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTo1Nzo1MVrOG5pfiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg==", "bodyText": "What is the scenario that can cause getReference() to be null?  Seems ejbRemoteRuntimeServiceRef.getService() would also be null; so wondering if we should stop caching it in remoteRuntime, and instead just call getService at the beginning of every function that needs it?  Or, can getService() return a non-null value when getReference() returns null?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463036492", "createdAt": "2020-07-30T14:26:52Z", "author": {"login": "tkburroughs"}, "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "diffHunk": "@@ -259,15 +260,15 @@ public void bindDefaultEJBRemote(EJBBinding bindingObject, HomeRecord hr) {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null) {\n+        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b9e17cb4456d06e34a382a7ebaeb7b1fcdfd49d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0MjUwNA==", "bodyText": "Would it be safer (less timing concern) with something like this:\n        EJBRemoteRuntime remoteRuntime = ejbRemoteRuntimeServiceRef.getService();\n        ServiceReference<EJBRemoteRuntime> remoteRuntimeRef = ejbRemoteRuntimeServiceRef.getReference();\n        \n        if (remoteRuntime != null && remoteRuntimeRef != null) {\n\n            BundleContext bc = remoteRuntimeRef.getBundle().getBundleContext();", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463042504", "createdAt": "2020-07-30T14:34:57Z", "author": {"login": "tkburroughs"}, "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "diffHunk": "@@ -259,15 +260,15 @@ public void bindDefaultEJBRemote(EJBBinding bindingObject, HomeRecord hr) {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null) {\n+        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, "originalCommit": {"oid": "8b9e17cb4456d06e34a382a7ebaeb7b1fcdfd49d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA4NzExNw==", "bodyText": "they would both be null, but I kept forgetting that while investigating.\nNamespaceBindleImpl init failing trace:\n[7/26/20, 19:23:24:151 PDT] 00000029 id=00000000 com.ibm.ws.ejbcontainer.osgi.internal.NameSpaceBinderImpl    > <init> Entry  \n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.metadata.OSGiEJBModuleMetaDataImpl@b978b529[BindingNameTestApp#BindingNameEJB.jar]\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBJavaColonNamingHelper@e42f6546\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBLocalNamingHelperImpl@68e21ee0\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.LocalColonEJBNamingHelperImpl@7ba5c40a\n                                                                                                               AtomicServiceReference[name=ejbRemoteRuntime,ctx=org.apache.felix.scr.impl.manager.ComponentContextImpl@73f649fd,ref=null,svc=null]\n\npassing:\n[7/30/20, 9:33:28:382 CDT] 0000005e id=00000000 com.ibm.ws.ejbcontainer.osgi.internal.NameSpaceBinderImpl    > <init> Entry  \n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.metadata.OSGiEJBModuleMetaDataImpl@b61d4416[ConfigTestsOtherTestApp#ConfigTestsOtherEJB.jar]\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBJavaColonNamingHelper@3f5134dd\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBLocalNamingHelperImpl@b8b59f55\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.LocalColonEJBNamingHelperImpl@34043eb2\n                                                                                                               AtomicServiceReference[name=ejbRemoteRuntime,ctx=org.apache.felix.scr.impl.manager.ComponentContextImpl@b61c24f9,ref={com.ibm.ws.ejbcontainer.osgi.EJBRemoteRuntime, com.ibm.ws.transport.iiop.spi.RemoteObjectReplacer}={service.id=372, orbRef.target=(id=defaultOrb), service.bundleid=116, service.scope=bundle, LibertyProcess.target=(wlp.process.type=server), component.name=com.ibm.ws.ejbcontainer.remote.internal.EJBRemoteRuntimeImpl, component.id=288},svc=null]", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463087117", "createdAt": "2020-07-30T15:36:47Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "diffHunk": "@@ -259,15 +260,15 @@ public void bindDefaultEJBRemote(EJBBinding bindingObject, HomeRecord hr) {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null) {\n+        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, "originalCommit": {"oid": "8b9e17cb4456d06e34a382a7ebaeb7b1fcdfd49d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA4NzU5Mw==", "bodyText": "I did remove checking it being null but I do like getting the RemoteRuntime each time instead of caching it so I added that and maybe both won't be null by then.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463087593", "createdAt": "2020-07-30T15:37:29Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "diffHunk": "@@ -259,15 +260,15 @@ public void bindDefaultEJBRemote(EJBBinding bindingObject, HomeRecord hr) {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null) {\n+        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, "originalCommit": {"oid": "8b9e17cb4456d06e34a382a7ebaeb7b1fcdfd49d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEwMTgzNQ==", "bodyText": "actually com.ibm.wsspi.kernel.service.utils.AtomicServiceReference.getService(boolean) throws IllegalStateException if the ref is null, so maybe I should be checking ejbRemoteRuntimeServiceRef.getReference() != null`before calling getService.\nnvm it has throwException = false by default.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463101835", "createdAt": "2020-07-30T15:57:51Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "diffHunk": "@@ -259,15 +260,15 @@ public void bindDefaultEJBRemote(EJBBinding bindingObject, HomeRecord hr) {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null) {\n+        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, "originalCommit": {"oid": "8b9e17cb4456d06e34a382a7ebaeb7b1fcdfd49d"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3017, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}