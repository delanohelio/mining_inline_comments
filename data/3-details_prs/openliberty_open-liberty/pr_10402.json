{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzAxMjU1", "number": 10402, "title": "Issue 10362: Follow up to initial service account logic", "bodyText": "Adds logic to appropriately parse and handle the response from OpenShift's user API being used for the service account token. Also adds some @Sensitive annotations where we're logging the service account token", "createdAt": "2020-01-13T20:16:23Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/10402", "merged": true, "mergeCommit": {"oid": "26c2709ce8f61a89478db774b36d018384f1c02e"}, "closed": true, "closedAt": "2020-01-15T15:46:03Z", "author": {"login": "ayoho"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5FbELAH2gAyMzYyMzAxMjU1OmMxZDg5YWIyZDRhNjY2MzRhYzJiOGRkZjE2YTU5MjMwOWZlZmI0YmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6ngEsAFqTM0MzMxNTg5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c1d89ab2d4a66634ac2b8ddf16a592309fefb4ba", "author": {"user": {"login": "ayoho", "name": "Adam Yoho"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c1d89ab2d4a66634ac2b8ddf16a592309fefb4ba", "committedDate": "2020-01-10T21:27:42Z", "message": "Issue 10362: Follow up to initial service account logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzAxMDI0", "url": "https://github.com/OpenLiberty/open-liberty/pull/10402#pullrequestreview-343301024", "createdAt": "2020-01-15T15:25:37Z", "commit": {"oid": "c1d89ab2d4a66634ac2b8ddf16a592309fefb4ba"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNToyNTozOFrOFd8FMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNToyOTowM1rOFd8N5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkzNzM5NQ==", "bodyText": "should this be in line with line 44", "url": "https://github.com/OpenLiberty/open-liberty/pull/10402#discussion_r366937395", "createdAt": "2020-01-15T15:25:38Z", "author": {"login": "ezhou365"}, "path": "dev/com.ibm.ws.security.social/src/com/ibm/ws/security/social/tai/AuthorizationCodeAuthenticator.java", "diffHunk": "@@ -39,6 +40,7 @@\n     SSLSocketFactory sslSocketFactory = null;\n \n     private Map<String, Object> tokens = new HashMap<String, Object>();\n+    @Sensitive", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1d89ab2d4a66634ac2b8ddf16a592309fefb4ba"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkzOTYyMQ==", "bodyText": "does it matter if group is added to the end or beginning of the jsonObject object", "url": "https://github.com/OpenLiberty/open-liberty/pull/10402#discussion_r366939621", "createdAt": "2020-01-15T15:29:03Z", "author": {"login": "ezhou365"}, "path": "dev/com.ibm.ws.security.social/src/com/ibm/ws/security/social/internal/utils/OpenShiftUserApiUtils.java", "diffHunk": "@@ -244,4 +253,63 @@ JsonObject getStatusJsonObjectFromResponse(JsonObject currentResponse) throws So\n \n     }\n \n+    String processServiceAccountIntrospectResponse(String response) throws SocialLoginException {\n+        JsonObject jsonResponse = readResponseAsJsonObject(response);\n+        JsonObject userMetadata = getJsonObjectValueFromJson(jsonResponse, \"metadata\");\n+        JsonObject result = addGroupsToResult(jsonResponse, userMetadata);\n+        return result.toString();\n+    }\n+\n+    JsonObject readResponseAsJsonObject(String response) throws SocialLoginException {\n+        if (response == null || response.isEmpty()) {\n+            return null;\n+        }\n+        JsonObject jsonResponse;\n+        try {\n+            jsonResponse = Json.createReader(new StringReader(response)).readObject();\n+        } catch (JsonParsingException e) {\n+            throw new SocialLoginException(\"RESPONSE_NOT_JSON\", null, new Object[] { response, e });\n+            //RESPONSE_NOT_JSON=CWWKS53xxE: The content of the response is not a valid JSON object. The full response is {0}. {1}\n+            //RESPONSE_NOT_JSON.explanation=The response is expected to be a valid JSON object.\n+            //RESPONSE_NOT_JSON.useraction=Verify that request was sent to the expected target. Ensure that the intended target of the request is capable of returning JSON data. Check the response to see whether more information is included.\n+        }\n+        return jsonResponse;\n+    }\n+\n+    JsonObject getJsonObjectValueFromJson(JsonObject json, String key) throws SocialLoginException {\n+        if (!json.containsKey(key)) {\n+            throw new SocialLoginException(\"JSON_MISSING_KEY\", null, new Object[] { key, json });\n+            //JSON_MISSING_KEY=CWWKS53xxE: The JSON object that is provided is missing an expected key: [{0}]. The full JSON object is [{1}].\n+            //JSON_MISSING_KEY.explanation=The key that is specified in the message is expected to be within the JSON data. The key might be missing, or it might be in an unexpected location.\n+            //JSON_MISSING_KEY.useraction=Check the JSON data to determine whether the key is missing.\n+        }\n+        JsonValue rawValue = json.get(key);\n+        if (rawValue.getValueType() != ValueType.OBJECT) {\n+            throw new SocialLoginException(\"JSON_ENTRY_WRONG_JSON_TYPE\", null, new Object[] { key, ValueType.OBJECT, rawValue.getValueType(), json });\n+            //JSON_ENTRY_WRONG_JSON_TYPE=CWWKS53xxE: The value for the key [{0}] in the JSON data is expected to be of type {1}, but the value is of type {2}. The JSON data is [{3}].\n+            //JSON_ENTRY_WRONG_JSON_TYPE.explanation=The value for the specified key did not have the correct type. The JSON data might be malformed or might have an unexpected structure.\n+            //JSON_ENTRY_WRONG_JSON_TYPE.useraction=Check the structure of the JSON data. Check the JSON data to see whether an error occurred.\n+        }\n+        return json.getJsonObject(key);\n+    }\n+\n+    JsonObject addGroupsToResult(JsonObject rawJsonResponse, JsonObject metadataEntry) {\n+        JsonObject result = metadataEntry;\n+        String groupNameAttribute = config.getGroupNameAttribute();\n+        if (groupNameAttribute != null && rawJsonResponse.containsKey(groupNameAttribute)) {\n+            JsonObjectBuilder resultBuilder = copyJsonObject(metadataEntry);\n+            resultBuilder.add(groupNameAttribute, rawJsonResponse.get(groupNameAttribute));\n+            result = resultBuilder.build();\n+        }\n+        return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1d89ab2d4a66634ac2b8ddf16a592309fefb4ba"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzE1ODkz", "url": "https://github.com/OpenLiberty/open-liberty/pull/10402#pullrequestreview-343315893", "createdAt": "2020-01-15T15:43:52Z", "commit": {"oid": "c1d89ab2d4a66634ac2b8ddf16a592309fefb4ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3496, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}