{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTY0Njg4", "number": 11896, "title": "Add jaxrs default exceptionmapper", "bodyText": "", "createdAt": "2020-04-22T21:45:42Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896", "merged": true, "mergeCommit": {"oid": "da04cd8a77d2938b3a664fe69194de1b2868dd25"}, "closed": true, "closedAt": "2020-05-07T13:42:23Z", "author": {"login": "jim-krueger"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaQ88vABqjMyNjI4MTM4MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce9Y6lAFqTQwNzQ3NjY5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b273a32085f183560765a53988b0465932400fd9", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b273a32085f183560765a53988b0465932400fd9", "committedDate": "2020-04-22T21:43:14Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "988cc098095fea2eb571f3a25a07f16674e3ba46", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/988cc098095fea2eb571f3a25a07f16674e3ba46", "committedDate": "2020-04-22T23:32:57Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "988cc098095fea2eb571f3a25a07f16674e3ba46", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/988cc098095fea2eb571f3a25a07f16674e3ba46", "committedDate": "2020-04-22T23:32:57Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "1d0ff704907d0d08bb56f70e9f368e3251ec6417", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1d0ff704907d0d08bb56f70e9f368e3251ec6417", "committedDate": "2020-04-23T17:30:17Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d0ff704907d0d08bb56f70e9f368e3251ec6417", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1d0ff704907d0d08bb56f70e9f368e3251ec6417", "committedDate": "2020-04-23T17:30:17Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "7a41204b2f0dca8417098c2934ebe679e422288d", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7a41204b2f0dca8417098c2934ebe679e422288d", "committedDate": "2020-04-23T20:13:48Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a41204b2f0dca8417098c2934ebe679e422288d", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7a41204b2f0dca8417098c2934ebe679e422288d", "committedDate": "2020-04-23T20:13:48Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "712f9faa76d7c32bb6445d64796b9b306efdd544", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/712f9faa76d7c32bb6445d64796b9b306efdd544", "committedDate": "2020-04-23T22:27:38Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "712f9faa76d7c32bb6445d64796b9b306efdd544", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/712f9faa76d7c32bb6445d64796b9b306efdd544", "committedDate": "2020-04-23T22:27:38Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "f3acb1f4703f57b71b9c85f4b243764337b876cf", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f3acb1f4703f57b71b9c85f4b243764337b876cf", "committedDate": "2020-04-24T12:17:23Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3acb1f4703f57b71b9c85f4b243764337b876cf", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f3acb1f4703f57b71b9c85f4b243764337b876cf", "committedDate": "2020-04-24T12:17:23Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/4d9ec2c61601323cd10814f0c926702bf56eadb5", "committedDate": "2020-04-24T15:07:13Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NDAxNTYy", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-399401562", "createdAt": "2020-04-23T19:16:08Z", "commit": {"oid": "1d0ff704907d0d08bb56f70e9f368e3251ec6417"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOToxNjowOVrOGK4FMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo1NTo0MFrOGLlCIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1Nzc3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Copyright (c) 2019 IBM Corporation and others.\n          \n          \n            \n            # Copyright (c) 2020 IBM Corporation and others.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414057776", "createdAt": "2020-04-23T19:16:09Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/bnd.bnd", "diffHunk": "@@ -0,0 +1,80 @@\n+#*******************************************************************************\n+# Copyright (c) 2019 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0ff704907d0d08bb56f70e9f368e3251ec6417"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NTI1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\\n          \n          \n            \n                     com.ibm.ws.jaxrs.defaultexceptionmapper, \\\n          \n      \n    \n    \n  \n\nWe should try to keep the spacing the same as the original", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414685255", "createdAt": "2020-04-24T15:57:08Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/opentracing-1.0/com.ibm.websphere.appserver.opentracing-1.0.feature", "diffHunk": "@@ -13,6 +13,7 @@ IBM-API-Package: io.opentracing;  type=\"third-party\",\\\n -features=com.ibm.websphere.appserver.jaxrs-2.0; ibm.tolerates:=2.1, \\\n           com.ibm.websphere.appserver.cdi-1.2; ibm.tolerates:=2.0\n -bundles=com.ibm.ws.require.java8, \\\n+\t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NjIxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\\n          \n          \n            \n                     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414686210", "createdAt": "2020-04-24T15:58:37Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/opentracing-1.1/com.ibm.websphere.appserver.opentracing-1.1.feature", "diffHunk": "@@ -13,6 +13,7 @@ IBM-API-Package: io.opentracing;  type=\"third-party\",\\\n -features=com.ibm.websphere.appserver.jaxrs-2.0; ibm.tolerates:=2.1, \\\n           com.ibm.websphere.appserver.cdi-1.2; ibm.tolerates:=2.0\n -bundles=com.ibm.ws.require.java8, \\\n+\t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4Njc3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\\n          \n          \n            \n                     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414686776", "createdAt": "2020-04-24T15:59:22Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/opentracing-1.2/com.ibm.websphere.appserver.opentracing-1.2.feature", "diffHunk": "@@ -14,6 +14,7 @@ IBM-API-Package: io.opentracing;  type=\"third-party\",\\\n           com.ibm.websphere.appserver.cdi-1.2; ibm.tolerates:=2.0, \\\n           com.ibm.websphere.appserver.mpConfig-1.3; ibm.tolerates:=1.4\n -bundles=com.ibm.ws.require.java8, \\\n+\t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4Njg5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\\n          \n          \n            \n                     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414686899", "createdAt": "2020-04-24T15:59:35Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/opentracing-1.3/com.ibm.websphere.appserver.opentracing-1.3.feature", "diffHunk": "@@ -14,6 +14,7 @@ IBM-API-Package: io.opentracing;  type=\"third-party\",\\\n           com.ibm.websphere.appserver.cdi-2.0, \\\n           com.ibm.websphere.appserver.mpConfig-1.3; ibm.tolerates:=1.4\n -bundles=com.ibm.ws.require.java8, \\\n+\t     com.ibm.ws.jaxrs.defaultexceptionmapper, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4ODMxNw==", "bodyText": "it's a nit, but I prefer that the serialVersionUID is the first line in the class, so that it doesn't distract from the other \"more useful\" fields in the class.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414688317", "createdAt": "2020-04-24T16:01:26Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/src/com/ibm/ws/jaxrs/defaultexceptionmapper/DefaultExceptionMapper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.jaxrs.defaultexceptionmapper;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.websphere.ras.annotation.TraceObjectField;\n+import com.ibm.websphere.ras.annotation.TraceOptions;\n+import com.ibm.ws.ras.instrument.annotation.InjectedFFDC;import java.lang.Override;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+import javax.ws.rs.ext.Provider;\n+\n+@Provider \n+public class DefaultExceptionMapper implements ExceptionMapper<Throwable> {\n+   @Context\n+   private ResourceInfo resourceInfo;\n+   \n+   private final List<DefaultExceptionMapperCallback> callbacks = new LinkedList<>();\n+   \n+   static final long serialVersionUID = 9083611544695926229L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4OTkzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019 IBM Corporation and others.\n          \n          \n            \n             * Copyright (c) 2020 IBM Corporation and others.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414689938", "createdAt": "2020-04-24T16:03:55Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/src/com/ibm/ws/jaxrs/defaultexceptionmapper/package-info.java", "diffHunk": "@@ -0,0 +1,15 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDk2MQ==", "bodyText": "I'd undo these before you merge.  They are valuable for development/debugging now, but will add a lot of trace output for every build that we should probably avoid.  Or at least set it to the same settings that the MP OT team had previously set - I'm fine with moving from server.xml to bootstrap.properties, but the OT team should also approve that.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414690961", "createdAt": "2020-04-24T16:05:31Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.microprofile.opentracing_fat_tck/publish/servers/OpentracingTCKServer/bootstrap.properties", "diffHunk": "@@ -9,4 +9,6 @@\n #     IBM Corporation - initial API and implementation\n ###############################################################################\n bootstrap.include=../testports.properties\n-com.ibm.ws.logging.trace.specification=*=info\n\\ No newline at end of file\n+com.ibm.ws.logging.trace.specification=*=info:com.ibm.ws.opentracing*=all:com.ibm.ws.microprofile.opentracing*=all:com.ibm.ws.jaxrs*=all:com.ibm.websphere.jaxrs*=all:org.apache.cxf.*=all\n+com.ibm.ws.logging.max.file.size=900\n+com.ibm.ws.logging.max.files=5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5NDc3NA==", "bodyText": "This @Component annotation should specify the DefaultExceptionMapperCallback as it's service. Maybe this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Component\n          \n          \n            \n            @Component(service = { DefaultExceptionMapperCallback.class }, configurationPolicy = ConfigurationPolicy.IGNORE, property = { \"service.vendor=IBM\" })", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414694774", "createdAt": "2020-04-24T16:11:18Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing.1.1/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -40,12 +43,15 @@\n import io.opentracing.propagation.TextMap;\n import io.opentracing.tag.Tags;\n \n+import org.osgi.service.component.annotations.Component;\n+\n /**\n  * <p>Container filter implementation.</p>\n  *\n  * <p>This implementation is stateless. A single container filter is used by all applications.</p> *\n  */\n-public class OpentracingContainerFilter implements ContainerRequestFilter, ContainerResponseFilter, ExceptionMapper<Throwable> {\n+@Component", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5NTg2MA==", "bodyText": "delete", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414695860", "createdAt": "2020-04-24T16:13:03Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing.1.1/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -272,14 +278,21 @@ public void remove() {\n         }\n     }\n \n-    /** {@inheritDoc} */\n     @Override\n+    public Map<String,Object> onDefaultMappedException(Throwable t, int statusCode, ResourceInfo resourceInfo ) {\n+        Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", t);\n+        return Collections.singletonMap(EXCEPTION_KEY, t);\n+    }\n+\n+\n+    /** {@inheritDoc} */\n+/*    @Override\n     public Response toResponse(Throwable exception) {\n         Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", exception);\n         if (exception instanceof WebApplicationException) {\n             return Response.fromResponse(((WebApplicationException) exception).getResponse()).header(EXCEPTION_KEY, exception).build();\n         }\n         return Response.serverError().header(EXCEPTION_KEY, exception).build();\n     }\n-\n+*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5NjM0Nw==", "bodyText": "same comment as 1.1", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414696347", "createdAt": "2020-04-24T16:13:46Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing.1.2/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -41,12 +44,15 @@\n import io.opentracing.propagation.TextMap;\n import io.opentracing.tag.Tags;\n \n+import org.osgi.service.component.annotations.Component;\n+\n /**\n  * <p>Container filter implementation.</p>\n  *\n  * <p>This implementation is stateless. A single container filter is used by all applications.</p> *\n  */\n-public class OpentracingContainerFilter implements ContainerRequestFilter, ContainerResponseFilter, ExceptionMapper<Throwable> {\n+@Component", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5NjUzMQ==", "bodyText": "delete", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414696531", "createdAt": "2020-04-24T16:14:01Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing.1.2/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -273,14 +279,21 @@ public void remove() {\n         }\n     }\n \n-    /** {@inheritDoc} */\n     @Override\n+    public Map<String,Object> onDefaultMappedException(Throwable t, int statusCode, ResourceInfo resourceInfo ) {\n+        Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", t);\n+        return Collections.singletonMap(EXCEPTION_KEY, t);\n+    }\n+\n+\n+    /** {@inheritDoc} */\n+/*    @Override\n     public Response toResponse(Throwable exception) {\n         Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", exception);\n         if (exception instanceof WebApplicationException) {\n             return Response.fromResponse(((WebApplicationException) exception).getResponse()).header(EXCEPTION_KEY, exception).build();\n         }\n         return Response.serverError().header(EXCEPTION_KEY, exception).build();\n     }\n-\n+*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5Njc4Mw==", "bodyText": "same comment as 1.1", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414696783", "createdAt": "2020-04-24T16:14:28Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing.1.3/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -41,12 +44,15 @@\n import io.opentracing.propagation.TextMap;\n import io.opentracing.tag.Tags;\n \n+import org.osgi.service.component.annotations.Component;\n+\n /**\n  * <p>Container filter implementation.</p>\n  *\n  * <p>This implementation is stateless. A single container filter is used by all applications.</p> *\n  */\n-public class OpentracingContainerFilter implements ContainerRequestFilter, ContainerResponseFilter, ExceptionMapper<Throwable> {\n+@Component", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5NjkxNw==", "bodyText": "delete", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414696917", "createdAt": "2020-04-24T16:14:42Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing.1.3/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -273,13 +279,21 @@ public void remove() {\n         }\n     }\n \n-    /** {@inheritDoc} */\n     @Override\n+    public Map<String,Object> onDefaultMappedException(Throwable t, int statusCode, ResourceInfo resourceInfo ) {\n+        Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", t);\n+        return Collections.singletonMap(EXCEPTION_KEY, t);\n+    }\n+\n+\n+    /** {@inheritDoc} */\n+/*    @Override\n     public Response toResponse(Throwable exception) {\n         Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", exception);\n         if (exception instanceof WebApplicationException) {\n             return Response.fromResponse(((WebApplicationException) exception).getResponse()).header(EXCEPTION_KEY, exception).build();\n         }\n         return Response.serverError().header(EXCEPTION_KEY, exception).build();\n     }\n+*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5MjUxMA==", "bodyText": "This should either explicitly add the class name or should end with \".*\"\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             \tcom.ibm.ws.jaxrs.defaultexceptionmapper\n          \n          \n            \n             \tcom.ibm.ws.jaxrs.defaultexceptionmapper.*", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414792510", "createdAt": "2020-04-24T18:52:30Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/bnd.bnd", "diffHunk": "@@ -0,0 +1,80 @@\n+#*******************************************************************************\n+# Copyright (c) 2019 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+Bundle-Name: JAX-RS Default Exception Mapper\n+Bundle-SymbolicName: com.ibm.ws.jaxrs.defaultexceptionmapper\n+Bundle-Description: IBM JAX-RS Default Exception Mapper; version=${bVersion}\n+\n+\n+WS-TraceGroup: JAXRS\n+\n+Import-Package: \\\n+    !*.internal.*,*\n+\n+Export-Package: \\\n+    com.ibm.ws.jaxrs.defaultexceptionmapper\n+    \n+\n+DynamicImport-Package: \\\n+ javax.xml.ws, \\\n+ javax.xml.ws.*, \\\n+ javax.xml.bind, \\\n+ javax.xml.bind.annotation, \\\n+ javax.xml.bind.annotation.adapters, \\\n+ javax.xml.bind.attachment, \\\n+ javax.xml.bind.helpers, \\\n+ javax.xml.bind.util\n+ \n+Liberty-Monitoring-Components: \n+\n+-dsannotations:  \\\n+ \tcom.ibm.ws.jaxrs.defaultexceptionmapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5MzgwMg==", "bodyText": "this class will need to be added to the bnd file under -dsannotations\nAlso, it should have the same annotation attributes that I mentioned in the 1.1 project.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414793802", "createdAt": "2020-04-24T18:54:51Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -40,12 +43,15 @@\n import io.opentracing.propagation.TextMap;\n import io.opentracing.tag.Tags;\n \n+import org.osgi.service.component.annotations.Component;\n+\n /**\n  * <p>Container filter implementation.</p>\n  *\n  * <p>This implementation is stateless. A single container filter is used by all applications.</p> *\n  */\n-public class OpentracingContainerFilter implements ContainerRequestFilter, ContainerResponseFilter, ExceptionMapper<Throwable> {\n+@Component", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5MzkxNg==", "bodyText": "delete", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414793916", "createdAt": "2020-04-24T18:55:01Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing/src/com/ibm/ws/opentracing/OpentracingContainerFilter.java", "diffHunk": "@@ -264,14 +270,21 @@ public void remove() {\n         }\n     }\n \n-    /** {@inheritDoc} */\n     @Override\n+    public Map<String,Object> onDefaultMappedException(Throwable t, int statusCode, ResourceInfo resourceInfo ) {\n+        Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", t);\n+        return Collections.singletonMap(EXCEPTION_KEY, t);\n+    }\n+\n+\n+    /** {@inheritDoc} */\n+/*    @Override\n     public Response toResponse(Throwable exception) {\n         Tr.warning(tc, \"OPENTRACING_UNHANDLED_JAXRS_EXCEPTION\", exception);\n         if (exception instanceof WebApplicationException) {\n             return Response.fromResponse(((WebApplicationException) exception).getResponse()).header(EXCEPTION_KEY, exception).build();\n         }\n         return Response.serverError().header(EXCEPTION_KEY, exception).build();\n     }\n-\n+*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NDI3Mw==", "bodyText": "I'm not sure this is necessary - I thought opentracing-1.0 already depended on jaxrs-2.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r414794273", "createdAt": "2020-04-24T18:55:40Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.opentracing_fat/publish/servers/opentracingFATServer1/server.xml", "diffHunk": "@@ -3,6 +3,7 @@\n   <featureManager>\n     <feature>servlet-3.1</feature>\n     <feature>opentracing-1.0</feature>\n+    <feature>jaxrs-2.0</feature>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d9ec2c61601323cd10814f0c926702bf56eadb5", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/4d9ec2c61601323cd10814f0c926702bf56eadb5", "committedDate": "2020-04-24T15:07:13Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "127b474dcdc110114583804863ffeaeb3c9951d6", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/127b474dcdc110114583804863ffeaeb3c9951d6", "committedDate": "2020-04-24T23:56:51Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "127b474dcdc110114583804863ffeaeb3c9951d6", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/127b474dcdc110114583804863ffeaeb3c9951d6", "committedDate": "2020-04-24T23:56:51Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "efa4efec8b4054d14f279624bb02f35ae7f45d28", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/efa4efec8b4054d14f279624bb02f35ae7f45d28", "committedDate": "2020-04-26T11:49:34Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "efa4efec8b4054d14f279624bb02f35ae7f45d28", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/efa4efec8b4054d14f279624bb02f35ae7f45d28", "committedDate": "2020-04-26T11:49:34Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "47d6cd0633c4cb569df27fa5c079c5a68853dd4d", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/47d6cd0633c4cb569df27fa5c079c5a68853dd4d", "committedDate": "2020-04-26T12:04:52Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47d6cd0633c4cb569df27fa5c079c5a68853dd4d", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/47d6cd0633c4cb569df27fa5c079c5a68853dd4d", "committedDate": "2020-04-26T12:04:52Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "668b1ebbad0183ef63a26caf5e187920fab75e86", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/668b1ebbad0183ef63a26caf5e187920fab75e86", "committedDate": "2020-04-26T12:07:39Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "668b1ebbad0183ef63a26caf5e187920fab75e86", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/668b1ebbad0183ef63a26caf5e187920fab75e86", "committedDate": "2020-04-26T12:07:39Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "31119f5105c62f8c0e709432334013338035499b", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/31119f5105c62f8c0e709432334013338035499b", "committedDate": "2020-04-26T12:18:32Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31119f5105c62f8c0e709432334013338035499b", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/31119f5105c62f8c0e709432334013338035499b", "committedDate": "2020-04-26T12:18:32Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "7ef6d66f2a39605155ac155c2b892917ee816ed3", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7ef6d66f2a39605155ac155c2b892917ee816ed3", "committedDate": "2020-04-26T12:21:13Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ef6d66f2a39605155ac155c2b892917ee816ed3", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7ef6d66f2a39605155ac155c2b892917ee816ed3", "committedDate": "2020-04-26T12:21:13Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "663c002458360e13822934413d1461f3bcdf4490", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/663c002458360e13822934413d1461f3bcdf4490", "committedDate": "2020-04-26T12:24:11Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "663c002458360e13822934413d1461f3bcdf4490", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/663c002458360e13822934413d1461f3bcdf4490", "committedDate": "2020-04-26T12:24:11Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "0662a7025e5e083928c4a7ce2d10208f1a8a1efb", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0662a7025e5e083928c4a7ce2d10208f1a8a1efb", "committedDate": "2020-04-26T12:32:55Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0662a7025e5e083928c4a7ce2d10208f1a8a1efb", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0662a7025e5e083928c4a7ce2d10208f1a8a1efb", "committedDate": "2020-04-26T12:32:55Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "ffabf7d895633750002226d1789e1932afd9ddd0", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ffabf7d895633750002226d1789e1932afd9ddd0", "committedDate": "2020-04-26T12:45:53Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ffabf7d895633750002226d1789e1932afd9ddd0", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ffabf7d895633750002226d1789e1932afd9ddd0", "committedDate": "2020-04-26T12:45:53Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "fd52af3a2964aba97e9586180d31750c06638346", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fd52af3a2964aba97e9586180d31750c06638346", "committedDate": "2020-04-26T13:10:10Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd52af3a2964aba97e9586180d31750c06638346", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fd52af3a2964aba97e9586180d31750c06638346", "committedDate": "2020-04-26T13:10:10Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "02c0cc1ceff1db33f454f7c417a728c5c9a017b7", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/02c0cc1ceff1db33f454f7c417a728c5c9a017b7", "committedDate": "2020-04-27T21:43:33Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTAwMTk4", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-402900198", "createdAt": "2020-04-29T17:48:57Z", "commit": {"oid": "02c0cc1ceff1db33f454f7c417a728c5c9a017b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo0ODo1N1rOGOKLSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo0ODo1N1rOGOKLSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5OTk3OQ==", "bodyText": "If we want callback implementations to be able to return null to indicate that they don't need to add any headers, then there should be a null check here to only call putAll if the returned map is not null.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r417499979", "createdAt": "2020-04-29T17:48:57Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/src/com/ibm/ws/jaxrs/defaultexceptionmapper/DefaultExceptionMapper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.jaxrs.defaultexceptionmapper;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.websphere.ras.annotation.TraceObjectField;\n+import com.ibm.websphere.ras.annotation.TraceOptions;\n+import com.ibm.ws.ras.instrument.annotation.InjectedFFDC;import java.lang.Override;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+import javax.ws.rs.ext.Provider;\n+\n+@Provider \n+public class DefaultExceptionMapper implements ExceptionMapper<Throwable> {\n+   static final long serialVersionUID = 9083611544695926229L;\n+   \n+   @Context\n+   private ResourceInfo resourceInfo;\n+   \n+   private final List<DefaultExceptionMapperCallback> callbacks = new LinkedList<>();\n+   \n+   DefaultExceptionMapper(Collection<DefaultExceptionMapperCallback> callbacks) {\n+     this.callbacks.addAll(callbacks);\n+   }\n+   \n+   @Override\n+   public Response toResponse(Throwable t) {\n+     Response response;\n+     if (t instanceof WebApplicationException && ((WebApplicationException)t).getResponse() != null) {\n+       response = ((WebApplicationException)t).getResponse();\n+     } else {\n+       response = Response.serverError().build();\n+     } \n+     Map<String, Object> callbackHeaders = new HashMap<>();\n+     for (DefaultExceptionMapperCallback callback : this.callbacks)\n+       callbackHeaders.putAll(callback.onDefaultMappedException(t, response.getStatus(), this.resourceInfo)); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02c0cc1ceff1db33f454f7c417a728c5c9a017b7"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTAxOTQ2", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-402901946", "createdAt": "2020-04-29T17:51:12Z", "commit": {"oid": "02c0cc1ceff1db33f454f7c417a728c5c9a017b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo1MToxM1rOGOKQww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo1MToxM1rOGOKQww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUwMTM3OQ==", "bodyText": "This should include @TraceOptions - take a look at some of the other JAX-RS package-info.java files for examples.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r417501379", "createdAt": "2020-04-29T17:51:13Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/src/com/ibm/ws/jaxrs/defaultexceptionmapper/package-info.java", "diffHunk": "@@ -0,0 +1,15 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+/**\n+ * @version 1.0\n+ */\n+@org.osgi.annotation.versioning.Version(\"1.0\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02c0cc1ceff1db33f454f7c417a728c5c9a017b7"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02c0cc1ceff1db33f454f7c417a728c5c9a017b7", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/02c0cc1ceff1db33f454f7c417a728c5c9a017b7", "committedDate": "2020-04-27T21:43:33Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "c5a14dabe09fff88b1ba8de1e27b0d77b826dc4e", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c5a14dabe09fff88b1ba8de1e27b0d77b826dc4e", "committedDate": "2020-04-29T19:13:58Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5a14dabe09fff88b1ba8de1e27b0d77b826dc4e", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c5a14dabe09fff88b1ba8de1e27b0d77b826dc4e", "committedDate": "2020-04-29T19:13:58Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f", "committedDate": "2020-04-29T19:41:31Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTg2Mjc0", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-402986274", "createdAt": "2020-04-29T19:49:04Z", "commit": {"oid": "76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo0OTowNFrOGOObNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo0OTowNFrOGOObNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2OTU5MA==", "bodyText": "Just nitpicking here.  The indentation of this file varies from 1-4 spaces.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r417569590", "createdAt": "2020-04-29T19:49:04Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/src/com/ibm/ws/jaxrs/defaultexceptionmapper/DefaultExceptionMapper.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.jaxrs.defaultexceptionmapper;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.websphere.ras.annotation.TraceObjectField;\n+import com.ibm.websphere.ras.annotation.TraceOptions;\n+import com.ibm.ws.ras.instrument.annotation.InjectedFFDC;import java.lang.Override;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+import javax.ws.rs.ext.Provider;\n+\n+@Provider \n+public class DefaultExceptionMapper implements ExceptionMapper<Throwable> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTg3MjA4", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-402987208", "createdAt": "2020-04-29T19:50:25Z", "commit": {"oid": "76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1MDoyNVrOGOOeOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1MDoyNVrOGOOeOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MDM2MA==", "bodyText": "2 import statements in one line", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#discussion_r417570360", "createdAt": "2020-04-29T19:50:25Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.defaultexceptionmapper/src/com/ibm/ws/jaxrs/defaultexceptionmapper/DefaultExceptionMapper.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.jaxrs.defaultexceptionmapper;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.websphere.ras.annotation.TraceObjectField;\n+import com.ibm.websphere.ras.annotation.TraceOptions;\n+import com.ibm.ws.ras.instrument.annotation.InjectedFFDC;import java.lang.Override;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71ff46f082db9b565a5bc76db47d0649d0750f3c", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/71ff46f082db9b565a5bc76db47d0649d0750f3c", "committedDate": "2020-05-01T20:36:42Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/76fdfe28a5ac7f80b2f6132f9096ceb87dd31b6f", "committedDate": "2020-04-29T19:41:31Z", "message": "Add jaxrs default exceptionmapper"}, "afterCommit": {"oid": "71ff46f082db9b565a5bc76db47d0649d0750f3c", "author": {"user": {"login": "jim-krueger", "name": "Jim Krueger"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/71ff46f082db9b565a5bc76db47d0649d0750f3c", "committedDate": "2020-05-01T20:36:42Z", "message": "Add jaxrs default exceptionmapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTg3ODM5", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-404987839", "createdAt": "2020-05-04T13:30:37Z", "commit": {"oid": "71ff46f082db9b565a5bc76db47d0649d0750f3c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDc2Njk3", "url": "https://github.com/OpenLiberty/open-liberty/pull/11896#pullrequestreview-407476697", "createdAt": "2020-05-07T13:35:14Z", "commit": {"oid": "71ff46f082db9b565a5bc76db47d0649d0750f3c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2686, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}