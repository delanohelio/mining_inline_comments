{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzY0NDk2", "number": 12357, "title": "code implementation LG-286 write json to system.out without wrapping", "bodyText": "Fixes #11999", "createdAt": "2020-05-25T13:55:52Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357", "merged": true, "mergeCommit": {"oid": "5bc91be99b3a636637895b140871c4a5664a5a4b"}, "closed": true, "closedAt": "2020-06-19T02:20:15Z", "author": {"login": "Yushan-Lin"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABck3PEyABqjMzNzEzMjQ0MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsev2ZABqjM0NTgyMTc4Mjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30a9b3bec17209b237c92b9d19071c08b0bc17cc", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/30a9b3bec17209b237c92b9d19071c08b0bc17cc", "committedDate": "2020-05-25T21:42:25Z", "message": "update logging metatype.properties"}, "afterCommit": {"oid": "dbd56f60e0a1cbb5274fb15e522c130a3f701a35", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/dbd56f60e0a1cbb5274fb15e522c130a3f701a35", "committedDate": "2020-05-25T21:47:16Z", "message": "add appsWriteJson attribute for loggin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODg4OTU1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-417888955", "createdAt": "2020-05-25T22:16:11Z", "commit": {"oid": "dbd56f60e0a1cbb5274fb15e522c130a3f701a35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjoxNjoxMVrOGaKYkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjo0MDoyNVrOGaKnQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4NjI4OQ==", "bodyText": "should start with the cheapest check... which is to see if appsWriteJson is true.  would also be better to put the content of the second if block inside the first if block since it only applies when the first if condition is true.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r430086289", "createdAt": "2020-05-25T22:16:11Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/ConsoleLogHandler.java", "diffHunk": "@@ -105,7 +108,16 @@ public void synchronousWrite(Object event) {\n \n             //First retrieve a cached JSON  message if possible, if not, format it and store it.\n             if (genData.getJsonMessage() == null) {\n-                genData.setJsonMessage((String) formatEvent(eventSourceName, CollectorConstants.MEMORY, event, null, MAXFIELDLENGTH));\n+                //check if it's in JSON format\n+                String json = null;\n+                if (event instanceof LogTraceData) {\n+                    json = ((LogTraceData) event).getMessage();\n+                }\n+                if (isJSON(json) && appsWriteJson) {\n+                    genData.setJsonMessage(json);\n+                } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbd56f60e0a1cbb5274fb15e522c130a3f701a35"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4ODIwOA==", "bodyText": "it's not just to System.out... could be System.err or could be messages.log.  will this also apply when someone logs (using JUL) a JSON message?\nperhaps something like...\nWhen message log or console is in JSON format, allow applications to write JSON-formatted messages to those destinations, without modification.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r430088208", "createdAt": "2020-05-25T22:28:09Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging.osgi/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -91,4 +91,7 @@ console.format.simple=Use the simple logging format.\n console.format.json=Use the JSON logging format.\n \n json.fields=JSON field names that are being replaced\n-json.fields.desc=When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.\n\\ No newline at end of file\n+json.fields.desc=When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.\n+\n+apps.write.json=Allow apps to write JSON\n+apps.write.json=When logs are in JSON format, if the log itself is pre-formatted in JSON, write the logs directly to System.out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbd56f60e0a1cbb5274fb15e522c130a3f701a35"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA5MDA1MA==", "bodyText": "see comments for ConsoleLogHandler", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r430090050", "createdAt": "2020-05-25T22:40:25Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/MessageLogHandler.java", "diffHunk": "@@ -63,7 +66,15 @@ public void synchronousWrite(Object event) {\n         String messageOutput = null;\n         if (currFormat.equals(LoggingConstants.JSON_FORMAT) || !eventSourceName.equals(CollectorConstants.MESSAGES_SOURCE)) {\n             if (genData.getJsonMessage() == null) {\n-                genData.setJsonMessage((String) formatEvent(eventSourceName, CollectorConstants.MEMORY, event, null, MAXFIELDLENGTH));\n+                String json = null;\n+                if (event instanceof LogTraceData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbd56f60e0a1cbb5274fb15e522c130a3f701a35"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTE4OTcx", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-417918971", "createdAt": "2020-05-26T01:23:03Z", "commit": {"oid": "36356bd76ee7a3c2a3fec126ee5a7c86cf34af13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMToyMzowNFrOGaMCdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMToyMzowNFrOGaMCdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExMzM5Nw==", "bodyText": "maybe could refactor further...\n            String jsonMessage = null;\n            if (appsWriteJson && event instanceof LogTraceData) {\n                jsonMessage = ((LogTraceData) event).getMessage();\n                if (!isJSON(jsonMessage)) {\n                    jsonMessage = null;\n                }\n            }\n            \n            if (jsonMessage == null) {\n                jsonMessage = (String)formatEvent(eventSourceName, CollectorConstants.MEMORY, event, null, MAXFIELDLENGTH);\n            }\n            \n            genData.setJsonMessage(jsonMessage);", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r430113397", "createdAt": "2020-05-26T01:23:04Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/ConsoleLogHandler.java", "diffHunk": "@@ -105,7 +108,21 @@ public void synchronousWrite(Object event) {\n \n             //First retrieve a cached JSON  message if possible, if not, format it and store it.\n             if (genData.getJsonMessage() == null) {\n-                genData.setJsonMessage((String) formatEvent(eventSourceName, CollectorConstants.MEMORY, event, null, MAXFIELDLENGTH));\n+                //check if it's in JSON format\n+\n+                if (appsWriteJson) {\n+                    String json = null;\n+                    if (event instanceof LogTraceData) {\n+                        json = ((LogTraceData) event).getMessage();\n+                    }\n+                    if (isJSON(json)) {\n+                        genData.setJsonMessage(json);\n+                    } else {\n+                        genData.setJsonMessage((String) formatEvent(eventSourceName, CollectorConstants.MEMORY, event, null, MAXFIELDLENGTH));\n+                    }\n+                } else {\n+                    genData.setJsonMessage((String) formatEvent(eventSourceName, CollectorConstants.MEMORY, event, null, MAXFIELDLENGTH));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36356bd76ee7a3c2a3fec126ee5a7c86cf34af13"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NTIwMDcz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-418520073", "createdAt": "2020-05-26T17:27:33Z", "commit": {"oid": "9ec6a5cf76d295b9f83753255f8775b8cf90f5e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Mzg5NTc3", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-419389577", "createdAt": "2020-05-27T16:14:04Z", "commit": {"oid": "9ec6a5cf76d295b9f83753255f8775b8cf90f5e2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNDowNFrOGbSi6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNDozMFrOGbSj9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2ODU4Ng==", "bodyText": "When message log or console log is in JSON format,\nshould this be\nWhen message log or console log is in JSON format,", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r431268586", "createdAt": "2020-05-27T16:14:04Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.logging.osgi/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -91,4 +91,7 @@ console.format.simple=Use the simple logging format.\n console.format.json=Use the JSON logging format.\n \n json.fields=JSON field names that are being replaced\n-json.fields.desc=When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.\n\\ No newline at end of file\n+json.fields.desc=When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.\n+\n+apps.write.json=Allow apps to write JSON\n+apps.write.json=When message log or console is in JSON format, allow applications to write JSON-formatted messages to those destinations, without modification.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec6a5cf76d295b9f83753255f8775b8cf90f5e2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2ODg1NA==", "bodyText": "When message log or console log is in JSON format,\nshould this be\nWhen message log or console log is in JSON format,", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r431268854", "createdAt": "2020-05-27T16:14:30Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.ws.logging/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -91,4 +91,7 @@ console.format.simple=Use the simple logging format.\n console.format.json=Use the JSON logging format.\n \n json.fields=JSON field names that are being replaced\n-json.fields.desc=When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.\n\\ No newline at end of file\n+json.fields.desc=When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.\n+\n+apps.write.json=Allow apps to write JSON\n+apps.write.json=When message log or console is in JSON format, allow applications to write JSON-formatted messages to those destinations, without modification.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec6a5cf76d295b9f83753255f8775b8cf90f5e2"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a1d4355127472863793789424ec8272080f2f41", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3a1d4355127472863793789424ec8272080f2f41", "committedDate": "2020-06-04T14:43:41Z", "message": "update metatype.properties in osgi"}, "afterCommit": {"oid": "d102c49e5b7bdeb36e5e5630ae37c233e631f8fa", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d102c49e5b7bdeb36e5e5630ae37c233e631f8fa", "committedDate": "2020-06-04T15:04:10Z", "message": "add appsWriteJson to logging attribute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODgzMjc2", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-425883276", "createdAt": "2020-06-08T02:20:17Z", "commit": {"oid": "d102c49e5b7bdeb36e5e5630ae37c233e631f8fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d102c49e5b7bdeb36e5e5630ae37c233e631f8fa", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d102c49e5b7bdeb36e5e5630ae37c233e631f8fa", "committedDate": "2020-06-04T15:04:10Z", "message": "add appsWriteJson to logging attribute"}, "afterCommit": {"oid": "cb429d7263a9a32fcb30ea22ebbd3fd4e8e734cd", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cb429d7263a9a32fcb30ea22ebbd3fd4e8e734cd", "committedDate": "2020-06-08T13:55:20Z", "message": "add FAT for appsWriteJson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Njk5NzA3", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-426699707", "createdAt": "2020-06-08T23:57:49Z", "commit": {"oid": "f06110471153ee5bbba2bbc32e9bd4cb31675d39"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d40dd0a5b30b042c0b77c97db7e0a1728ee7723", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3d40dd0a5b30b042c0b77c97db7e0a1728ee7723", "committedDate": "2020-06-09T18:51:18Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}, "afterCommit": {"oid": "2f3526b8be8a8c21ffe75c9ab50f37b1b711ad29", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2f3526b8be8a8c21ffe75c9ab50f37b1b711ad29", "committedDate": "2020-06-11T19:17:39Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f3526b8be8a8c21ffe75c9ab50f37b1b711ad29", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2f3526b8be8a8c21ffe75c9ab50f37b1b711ad29", "committedDate": "2020-06-11T19:17:39Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}, "afterCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0e751ce8ac0b5fade6da804578fb060afadde722", "committedDate": "2020-06-11T19:59:31Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Mzk1MzEz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-429395313", "createdAt": "2020-06-12T00:54:09Z", "commit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDo1NDowOVrOGizrgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTowNzo0MVrOGiz4pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1MTQ4OQ==", "bodyText": "add a comment above this to say what this is for", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r439151489", "createdAt": "2020-06-12T00:54:09Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/LogProviderConfigImpl.java", "diffHunk": "@@ -132,6 +132,8 @@\n     /** The wlp user dir name. */\n     private final String wlpUsrDir;\n \n+    protected volatile boolean appsWriteJson = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1MTYyNA==", "bodyText": "add blank line above (just to keep consistent with rest of spacing in the method)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r439151624", "createdAt": "2020-06-12T00:54:43Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/LogProviderConfigImpl.java", "diffHunk": "@@ -171,6 +173,8 @@ public LogProviderConfigImpl(Map<String, String> config, File logLocation, TextF\n \n         consoleLogLevel = LoggingConfigUtils.getLogLevel(LoggingConfigUtils.getEnvValue(LoggingConstants.ENV_WLP_LOGGING_CONSOLE_LOGLEVEL),\n                                                          consoleLogLevel);\n+        appsWriteJson = LoggingConfigUtils.getBooleanValue(LoggingConfigUtils.getEnvValue(LoggingConstants.ENV_WLP_LOGGING_APPS_WRITE_JSON),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1MTk0OQ==", "bodyText": "remove empty javadoc", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r439151949", "createdAt": "2020-06-12T00:55:55Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/LogProviderConfigImpl.java", "diffHunk": "@@ -425,6 +430,13 @@ public boolean getNewLogsOnStart() {\n         return newLogsOnStart;\n     }\n \n+    /**\n+     * @return\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NDgzNA==", "bodyText": "comment doesn't match code", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r439154834", "createdAt": "2020-06-12T01:07:36Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigBootstrapTest.java", "diffHunk": "@@ -281,6 +286,60 @@ public void testMaxFileSizeLevelInPropertiesXML() throws Exception {\n         }\n     }\n \n+    /*\n+     * Test enabling com.ibm.ws.logging.apps.write.json in bootstrap.properties\n+     */\n+    @Test\n+    public void testEnableAppsWriteJsonInProperties() throws Exception {\n+\n+        // Get the bootstrap.properties file and store the original content\n+        RemoteFile bootstrapFile = server.getServerBootstrapPropertiesFile();\n+        FileInputStream in = getFileInputStreamForRemoteFile(bootstrapFile);\n+        Properties initialBootstrapProps = loadProperties(in);\n+\n+        try {\n+            // Set maxFileSize to 100 in bootstrap.properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NDg1NQ==", "bodyText": "comment doesn't match code", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r439154855", "createdAt": "2020-06-12T01:07:41Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging.json_fat/fat/src/com/ibm/ws/logging/json/fat/JsonConfigBootstrapTest.java", "diffHunk": "@@ -281,6 +286,60 @@ public void testMaxFileSizeLevelInPropertiesXML() throws Exception {\n         }\n     }\n \n+    /*\n+     * Test enabling com.ibm.ws.logging.apps.write.json in bootstrap.properties\n+     */\n+    @Test\n+    public void testEnableAppsWriteJsonInProperties() throws Exception {\n+\n+        // Get the bootstrap.properties file and store the original content\n+        RemoteFile bootstrapFile = server.getServerBootstrapPropertiesFile();\n+        FileInputStream in = getFileInputStreamForRemoteFile(bootstrapFile);\n+        Properties initialBootstrapProps = loadProperties(in);\n+\n+        try {\n+            // Set maxFileSize to 100 in bootstrap.properties\n+            setInBootstrapPropertiesFile(bootstrapFile, \"com.ibm.ws.logging.apps.write.json\", \"true\");\n+            server.startServer();\n+            // Set maxFileSize to 1 in server.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e751ce8ac0b5fade6da804578fb060afadde722", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0e751ce8ac0b5fade6da804578fb060afadde722", "committedDate": "2020-06-11T19:59:31Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}, "afterCommit": {"oid": "d34ca67f416b982620ecd761d22f91ad84c9fec1", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d34ca67f416b982620ecd761d22f91ad84c9fec1", "committedDate": "2020-06-12T16:01:30Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzI3ODkx", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-430727891", "createdAt": "2020-06-15T14:59:08Z", "commit": {"oid": "36cc28ebb64b0d298cc3da73afef4f8a9850edff"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo1OTowOFrOGj2EVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMToyMlrOGj2Kgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTE4OQ==", "bodyText": "this should be a static method", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r440239189", "createdAt": "2020-06-15T14:59:08Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/JsonLogHandler.java", "diffHunk": "@@ -230,4 +230,9 @@ protected String getSourceNameFromDataObject(Object event) {\n         }\n     }\n \n+    protected boolean isJSON(String message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36cc28ebb64b0d298cc3da73afef4f8a9850edff"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDM4NQ==", "bodyText": "should this method be moved to JsonLogHandler?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r440240385", "createdAt": "2020-06-15T15:00:50Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/ConsoleLogHandler.java", "diffHunk": "@@ -234,6 +246,15 @@ public void setFormat(String format) {\n         this.format = format;\n     }\n \n+    /**\n+     * Set apps that write json to wrap or unwrap\n+     *\n+     * @param format the format to set (i.e. wrap, unwrap)\n+     */\n+    public void setAppsWriteJson(boolean appsWriteJson) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36cc28ebb64b0d298cc3da73afef4f8a9850edff"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDc3MQ==", "bodyText": "should this be moved to JsonLogHandler?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r440240771", "createdAt": "2020-06-15T15:01:22Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/ConsoleLogHandler.java", "diffHunk": "@@ -39,6 +39,8 @@\n \n     private BaseTraceService baseTraceService = null;\n \n+    private boolean appsWriteJson = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36cc28ebb64b0d298cc3da73afef4f8a9850edff"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzcxMzky", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-430771392", "createdAt": "2020-06-15T15:46:43Z", "commit": {"oid": "688cd38d242b3cc4beab4a0a81b8530ab45adb3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo0Njo0M1rOGj4GVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo0Njo0M1rOGj4GVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3MjQ3MQ==", "bodyText": "was this file added by accident?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#discussion_r440272471", "createdAt": "2020-06-15T15:46:43Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/collector/JSONObject.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.logging.collector;\n+\n+/**\n+ *\n+ */\n+public class JSONObject {\n+    private final boolean hasAnyFields = false;\n+    private final StringBuilder JSONBuilder = new StringBuilder();\n+\n+    // s - name:value, name:value, ...\n+//    public JSONObject() {\n+//\n+//    }\n+\n+    /**\n+     * Constructor for JSONObject\n+     * Initialize hasAnyFields to false\n+     * Initialize StringBuilder\n+     *\n+     */\n+\n+//    public void addField(String s) {\n+//        if (s == null) {\n+//            return;\n+//        }\n+//        setHasAnyFields();\n+//\n+//        //add the field to the JSON\n+//\n+//    }\n+//\n+//    //\n+//    public void addField(String name, String value, boolean jsonEscapeValue, boolean trim) {\n+//        if (name == null || value == null) {\n+//            return;\n+//        }\n+//        setHasAnyFields();\n+//    }\n+//\n+//    public void addField(String name, int value) {\n+//        if (name == null || value == null) {\n+//            return;\n+//        }\n+//        setHasAnyFields();\n+//        return;\n+//    }\n+//\n+//    public boolean addField(String name, boolean value) {\n+//        if (name == null || value == null) {\n+//            return;\n+//        }\n+//        setHasAnyFields();\n+//        return true;\n+//\n+//    }\n+//\n+//    public void addField(String name, long value) {\n+//        if (name == null || value == null) {\n+//            return;\n+//        }\n+//        setHasAnyFields();\n+//        return true;\n+//\n+//    }\n+//\n+//    //get current JSON log string\n+//    public StringBuilder getJSONString() {\n+//        return JSONBuilder;\n+//    }\n+//\n+//    private void setHasAnyFields() {\n+//        if (hasAnyFields) {\n+//            JSONBuilder.append(\",\");\n+//            hasAnyFields = true;\n+//        } else {\n+//            hasAnyFields = true;\n+//        }\n+//\n+//    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688cd38d242b3cc4beab4a0a81b8530ab45adb3e"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzgxMTI1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12357#pullrequestreview-430781125", "createdAt": "2020-06-15T15:57:47Z", "commit": {"oid": "09c88166ea52e0174c911bd0ac79ad6bc472929b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68677f9b7e831c4d194c5e28f1ebee022c457e76", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/68677f9b7e831c4d194c5e28f1ebee022c457e76", "committedDate": "2020-06-18T13:47:02Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "174e58466aaae63df2158a1ca5c2fffbe45e8047", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/174e58466aaae63df2158a1ca5c2fffbe45e8047", "committedDate": "2020-06-18T13:47:12Z", "message": "update appsWriteJson test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddf6531b2b616f9d18b846fbf1e8a812aa39017d", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ddf6531b2b616f9d18b846fbf1e8a812aa39017d", "committedDate": "2020-06-18T13:47:12Z", "message": "add FAT tests to test server.env and bootstrap.properties config of appsWriteJson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8496d2ecccd0c5f52073ef6f115b5c137841caed", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8496d2ecccd0c5f52073ef6f115b5c137841caed", "committedDate": "2020-06-18T13:47:13Z", "message": "update comments for appsWriteJson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0496bf25d8d8bb626fe3aaba3a7d8669c8cde37", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b0496bf25d8d8bb626fe3aaba3a7d8669c8cde37", "committedDate": "2020-06-18T13:47:13Z", "message": "move setAppsWriteJson to JsonLogHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1804b680e6bf0dbbe5bc4c2e235c3c9ca3f1ae27", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1804b680e6bf0dbbe5bc4c2e235c3c9ca3f1ae27", "committedDate": "2020-06-18T13:47:14Z", "message": "remove JSONObject.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09c88166ea52e0174c911bd0ac79ad6bc472929b", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/09c88166ea52e0174c911bd0ac79ad6bc472929b", "committedDate": "2020-06-15T15:53:59Z", "message": "remove JSONObject.java"}, "afterCommit": {"oid": "1804b680e6bf0dbbe5bc4c2e235c3c9ca3f1ae27", "author": {"user": {"login": "Yushan-Lin", "name": "Yushan Lin"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1804b680e6bf0dbbe5bc4c2e235c3c9ca3f1ae27", "committedDate": "2020-06-18T13:47:14Z", "message": "remove JSONObject.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2502, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}