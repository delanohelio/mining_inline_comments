{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzYwNDQw", "number": 13055, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo1MjowNVrOEPCPcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo1MjowNVrOEPCPcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjAwODE3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.cdi.weld/src/com/ibm/ws/cdi/impl/weld/injection/EEValidationUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo1MjowNVrOGyhZ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoyMzo0MVrOG4UlMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyOTI4Ng==", "bodyText": "I expect that you intended to remove the line above?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13055#discussion_r455629286", "createdAt": "2020-07-16T08:52:05Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.weld/src/com/ibm/ws/cdi/impl/weld/injection/EEValidationUtils.java", "diffHunk": "@@ -212,26 +212,27 @@ private static void validateJndiLookup(InitialContext c, String lookupString, An\n                 try {\n                     String className = pair.getClassName();\n                     Class<?> jndiClass = cdiArchive.getClassLoader().loadClass(className);\n-                    if (\"javax.resource.cci.ConnectionFactory\".equals(className)) {\n-                        try {\n-                            Object o = c.lookup(lookupName);\n-                            if (o != null) {\n-                                jndiClass = o.getClass();\n-                            }\n-                        } catch (RuntimeException e) {\n-                            // An error occurred while getting the object from JNDI. This may happen\n-                            // at this early point in the initialisation process, but if so we just\n-                            // skip validation.\n-                        }\n-                    } else {\n-                        try {\n-                            jndiClass = cdiArchive.getClassLoader().loadClass(className);\n-                        } catch (ClassNotFoundException ex) {\n-                            // Couldn't load the jndiClass name, can't validate\n-                        }\n+                    try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9790c43d0e89c962ed892e4f175cbcaa8d8e124"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxMDY0MQ==", "bodyText": "good point, I didn't realize this was redundant with the try/catch block. I can just remove the try/catch entirely since we're already doing cdiArchive.getClassLoader().loadClass(className) earlier with no try/catch", "url": "https://github.com/OpenLiberty/open-liberty/pull/13055#discussion_r461710641", "createdAt": "2020-07-28T16:23:41Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.cdi.weld/src/com/ibm/ws/cdi/impl/weld/injection/EEValidationUtils.java", "diffHunk": "@@ -212,26 +212,27 @@ private static void validateJndiLookup(InitialContext c, String lookupString, An\n                 try {\n                     String className = pair.getClassName();\n                     Class<?> jndiClass = cdiArchive.getClassLoader().loadClass(className);\n-                    if (\"javax.resource.cci.ConnectionFactory\".equals(className)) {\n-                        try {\n-                            Object o = c.lookup(lookupName);\n-                            if (o != null) {\n-                                jndiClass = o.getClass();\n-                            }\n-                        } catch (RuntimeException e) {\n-                            // An error occurred while getting the object from JNDI. This may happen\n-                            // at this early point in the initialisation process, but if so we just\n-                            // skip validation.\n-                        }\n-                    } else {\n-                        try {\n-                            jndiClass = cdiArchive.getClassLoader().loadClass(className);\n-                        } catch (ClassNotFoundException ex) {\n-                            // Couldn't load the jndiClass name, can't validate\n-                        }\n+                    try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyOTI4Ng=="}, "originalCommit": {"oid": "b9790c43d0e89c962ed892e4f175cbcaa8d8e124"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3055, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}