{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODE3Njc5", "number": 12462, "title": "Only destroy the TCCL if we created it", "bodyText": "Fixes an issue where bean validation might inadvertantly call destroyThreadContextClassLoader when it never created one. This can happen if somebody has already created a TCCL and put it on the current thread.  Then BV would not create a new one, but would call destroy.  This will lead to the reference count being off by one, which could cause the classloading service to uninstall the TCCL's gateway bundle when it is still in use.", "createdAt": "2020-06-02T20:39:08Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462", "merged": true, "mergeCommit": {"oid": "1e80381bffee3e931d3772cf5e43111f982dcf91"}, "closed": true, "closedAt": "2020-06-05T18:58:19Z", "author": {"login": "andymc12"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnbiJoAFqTQyMzA2MjA1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoW-iGAFqTQyNTM2OTM0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDYyMDUw", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#pullrequestreview-423062050", "createdAt": "2020-06-02T21:13:51Z", "commit": {"oid": "82ff485e629ba3e78a5e31771c7850ca3d807f68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxMzo1MlrOGeELgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxMzo1MlrOGeELgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3ODk0Nw==", "bodyText": "To make sure I understand the nature of this fix.  I think the problem could only occur if (newClassloaderHint !=null) because in that case the code above would wrapper the class loader in a Validation20ClassLoader instance and that would always force a replacement of the TCCL even if the expected TCCL instance was already set.  So that would force us to release the existing (previous) TCCL even though we may not have created it.  Is my understanding correct?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#discussion_r434178947", "createdAt": "2020-06-02T21:13:52Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.beanvalidation.v20.cdi/src/com/ibm/ws/beanvalidation/v20/cdi/internal/LibertyHibernateValidatorExtension.java", "diffHunk": "@@ -109,8 +110,8 @@ private ValidationExtension delegate(String newClassloaderHint) {\n                         Tr.debug(tc, \"Set Class loader back to \" + oldClassLoader);\n                     }\n                 }\n-                if (setClassLoader != null && setClassLoader.wasChanged) {\n-                    releaseLoader(tcclClassLoader);\n+                if (tuple != null && tuple.wasCreatedViaClassLoadingService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ff485e629ba3e78a5e31771c7850ca3d807f68"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54f51a5f813e6ca75d66fd34c1386e117b36fba3", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/54f51a5f813e6ca75d66fd34c1386e117b36fba3", "committedDate": "2020-06-03T15:24:18Z", "message": "Only destroy the TCCL if we created it"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82ff485e629ba3e78a5e31771c7850ca3d807f68", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/82ff485e629ba3e78a5e31771c7850ca3d807f68", "committedDate": "2020-06-02T20:34:56Z", "message": "Only destroy the TCCL if we created it"}, "afterCommit": {"oid": "54f51a5f813e6ca75d66fd34c1386e117b36fba3", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/54f51a5f813e6ca75d66fd34c1386e117b36fba3", "committedDate": "2020-06-03T15:24:18Z", "message": "Only destroy the TCCL if we created it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjczMTgy", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#pullrequestreview-423673182", "createdAt": "2020-06-03T15:30:19Z", "commit": {"oid": "54f51a5f813e6ca75d66fd34c1386e117b36fba3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjkxOTQ4", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#pullrequestreview-423691948", "createdAt": "2020-06-03T15:50:57Z", "commit": {"oid": "54f51a5f813e6ca75d66fd34c1386e117b36fba3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzQzMDMy", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#pullrequestreview-423743032", "createdAt": "2020-06-03T16:44:51Z", "commit": {"oid": "54f51a5f813e6ca75d66fd34c1386e117b36fba3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86a75f27fb70da005e85bcf18fda62ba5809e4c", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b86a75f27fb70da005e85bcf18fda62ba5809e4c", "committedDate": "2020-06-04T15:16:12Z", "message": "Refactor to catch more places where destroy could occur w/o create"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db9e43818af3e4b249c3cfef0d932e932a0056d2", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/db9e43818af3e4b249c3cfef0d932e932a0056d2", "committedDate": "2020-06-04T03:27:54Z", "message": "Refactor to catch more places where destroy could occur w/o create"}, "afterCommit": {"oid": "b86a75f27fb70da005e85bcf18fda62ba5809e4c", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b86a75f27fb70da005e85bcf18fda62ba5809e4c", "committedDate": "2020-06-04T15:16:12Z", "message": "Refactor to catch more places where destroy could occur w/o create"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MzY5MzQ4", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#pullrequestreview-425369348", "createdAt": "2020-06-05T14:48:18Z", "commit": {"oid": "b86a75f27fb70da005e85bcf18fda62ba5809e4c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoxOFrOGfxo5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoxOFrOGfxo5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MjMyNw==", "bodyText": "I think this check is a duplicate of the check done in AbstractBeanValidation.instance().releaseLoader(tuple).", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#discussion_r435972327", "createdAt": "2020-06-05T14:48:18Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.core/src/com/ibm/ws/beanvalidation/ValidatorFactoryAccessor.java", "diffHunk": "@@ -240,8 +241,8 @@ public static ValidatorFactory getValidatorFactory(ClassLoader classLoader, bool\n                     Tr.debug(tc, \"Set Class loader back to \" + oldClassLoader);\n                 }\n             }\n-            if (setClassLoader != null && setClassLoader.wasChanged) {\n-                AbstractBeanValidation.instance().releaseLoader(classLoader);\n+            if (tuple != null && tuple.wasCreatedViaClassLoadingService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86a75f27fb70da005e85bcf18fda62ba5809e4c"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2348, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}