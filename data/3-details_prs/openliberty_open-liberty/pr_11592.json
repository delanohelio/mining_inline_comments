{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjUzNjY5", "number": 11592, "title": "Fix prometheus/open-metrics format for multiple metrics with same name", "bodyText": "fixes #11364\n#build", "createdAt": "2020-04-01T22:00:41Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/11592", "merged": true, "mergeCommit": {"oid": "6f77e93d91b090066de734c3160f78afbf0e73ea"}, "closed": true, "closedAt": "2020-04-16T16:10:33Z", "author": {"login": "Channyboy"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTtNMdgFqTM4NjQ4NDg0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXlnkjgH2gAyMzk3MjUzNjY5Ojc4NWU3YmJhZGQzZDZjZWYwNDU2NGI2NmEzYTZmNjFmYjlmN2ZlYWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDg0ODQz", "url": "https://github.com/OpenLiberty/open-liberty/pull/11592#pullrequestreview-386484843", "createdAt": "2020-04-02T14:30:46Z", "commit": {"oid": "5862e29997b2cb93a04c3ee482ced042f9a2a3f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDozMDo0N1rOF_uChA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDozMDo0N1rOF_uChA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1ODkxNg==", "bodyText": "Will this message be printed every time /metrics is served?  i.e. will it be printed a lot of times in the log?  Same question for all other Tr.event().", "url": "https://github.com/OpenLiberty/open-liberty/pull/11592#discussion_r402358916", "createdAt": "2020-04-02T14:30:47Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.microprofile.metrics.2.0/src/com/ibm/ws/microprofile/metrics/helper/PrometheusBuilder.java", "diffHunk": "@@ -36,30 +37,43 @@\n     private static final String QUANTILE = \"quantile\";\n \n     @FFDCIgnore({ IllegalStateException.class })\n-    public static void buildGauge(StringBuilder builder, String name, Gauge<?> gauge, String description, Double conversionFactor, String tags, String appendUnit) {\n-        // Skip non number values\n-        Number gaugeValNumber = null;\n-        Object gaugeValue = null;\n-        try {\n-            gaugeValue = gauge.getValue();\n-        } catch (IllegalStateException e) {\n-            // The forwarding gauge is likely unloaded. A warning has already been emitted\n-            return;\n-        }\n-        if (!Number.class.isInstance(gaugeValue)) {\n-            Tr.event(tc, \"Skipping Prometheus output for Gauge: \" + name + \" of type \" + gauge.getValue().getClass());\n-            return;\n-        }\n-        gaugeValNumber = (Number) gaugeValue;\n-        if (!(Double.isNaN(conversionFactor))) {\n-            gaugeValNumber = gaugeValNumber.doubleValue() * conversionFactor;\n-        }\n+\n+    public static void buildGauge(StringBuilder builder, String name, String description, Map<MetricID, Metric> currentMetricMap, Double conversionFactor,\n+                                  String appendUnit) {\n         getPromTypeLine(builder, name, \"gauge\", appendUnit);\n         getPromHelpLine(builder, name, description, appendUnit);\n-        getPromValueLine(builder, name, gaugeValNumber, tags, appendUnit);\n+\n+        for (MetricID mid : currentMetricMap.keySet()) {\n+            // Skip non number values\n+            Number gaugeValNumber = null;\n+            Object gaugeValue = null;\n+            try {\n+                gaugeValue = ((Gauge) currentMetricMap.get(mid)).getValue();\n+            } catch (IllegalStateException e) {\n+                // The forwarding gauge is likely unloaded. A warning has already been emitted\n+                return;\n+            }\n+            if (!Number.class.isInstance(gaugeValue)) {\n+                Tr.event(tc, \"Skipping Prometheus output for Gauge: \" + name + \" of type \" + ((Gauge) currentMetricMap.get(mid)).getValue().getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5862e29997b2cb93a04c3ee482ced042f9a2a3f5"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63b2bc252f3cf829ae98ee9bd37bdcd0f9f31b85", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/63b2bc252f3cf829ae98ee9bd37bdcd0f9f31b85", "committedDate": "2020-04-03T02:43:47Z", "message": "Fix prometheus/open-metrics format so that only there is only one TYPE and HELP line for multiple metrics of the same name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb4c031c343482ed8b8f1fa77409055a2b3767a", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9fb4c031c343482ed8b8f1fa77409055a2b3767a", "committedDate": "2020-04-03T02:43:47Z", "message": "Limit amount of trace emissions if there is an invalid metric/metadata and gauge value"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78cf98dce589c4ce00554d3649a9b929d73ed4af", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/78cf98dce589c4ce00554d3649a9b929d73ed4af", "committedDate": "2020-04-03T02:35:05Z", "message": "Limit amount of trace emissions if there is an invalid metric/metadata and gauge value"}, "afterCommit": {"oid": "9fb4c031c343482ed8b8f1fa77409055a2b3767a", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9fb4c031c343482ed8b8f1fa77409055a2b3767a", "committedDate": "2020-04-03T02:43:47Z", "message": "Limit amount of trace emissions if there is an invalid metric/metadata and gauge value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "888d2286c37bf1a3261168a2fddea69505f8093a", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/888d2286c37bf1a3261168a2fddea69505f8093a", "committedDate": "2020-04-06T16:18:59Z", "message": "Use MetricID for identifying improper Gauge instead of the name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjcxMzg1", "url": "https://github.com/OpenLiberty/open-liberty/pull/11592#pullrequestreview-390271385", "createdAt": "2020-04-08T19:34:43Z", "commit": {"oid": "888d2286c37bf1a3261168a2fddea69505f8093a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTozNDo0M1rOGC977w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTozNDo0M1rOGC977w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2NTEwMw==", "bodyText": "Update copyright year to 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/11592#discussion_r405765103", "createdAt": "2020-04-08T19:34:43Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.microprofile.metrics.2.0/src/com/ibm/ws/microprofile/metrics/helper/PrometheusBuilder.java", "diffHunk": "@@ -10,16 +10,19 @@\n  *******************************************************************************/\n package com.ibm.ws.microprofile.metrics.helper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "888d2286c37bf1a3261168a2fddea69505f8093a"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjg4NzU0", "url": "https://github.com/OpenLiberty/open-liberty/pull/11592#pullrequestreview-390288754", "createdAt": "2020-04-08T20:01:10Z", "commit": {"oid": "888d2286c37bf1a3261168a2fddea69505f8093a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "785e7bbadd3d6cef04564b66a3a6f61fb9f7feaf", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/785e7bbadd3d6cef04564b66a3a6f61fb9f7feaf", "committedDate": "2020-04-14T15:56:03Z", "message": "copyright"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2878, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}