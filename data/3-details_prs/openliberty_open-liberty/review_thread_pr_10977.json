{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3ODcxNDg3", "number": 10977, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDo1ODo0NlrODi6Kkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTowNTowN1rODi6PUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTMxMTU0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.grpc.client/.project", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDo1ODo0NlrOFua4Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDo1ODo0NlrOFua4Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxOTIxNA==", "bodyText": "I think you'll want to / need to add the bndNature/bndBuilder here", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r384219214", "createdAt": "2020-02-26T00:58:46Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.grpc.client/.project", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>com.ibm.ws.grpc.client</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTMxMzEwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.grpc.client/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDo1OTowNlrOFua5Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDo1OTowNlrOFua5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxOTQ0Mg==", "bodyText": "Should we update this to 2020, same goes for all files?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r384219442", "createdAt": "2020-02-26T00:59:06Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.grpc.client/bnd.bnd", "diffHunk": "@@ -0,0 +1,64 @@\n+#*******************************************************************************\n+# Copyright (c) 2019 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTMxNDc4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.grpc.client/.classpath", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDo1OTo1OVrOFua6Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTo0NTowMFrOFxXqWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxOTcwMg==", "bodyText": "bnd requires java11 should be use that here as well?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r384219702", "createdAt": "2020-02-26T00:59:59Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.grpc.client/.classpath", "diffHunk": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMjIxOA==", "bodyText": "No other projects are doing this, so let's hold off for now.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r387312218", "createdAt": "2020-03-03T21:45:00Z", "author": {"login": "wtlucy"}, "path": "dev/com.ibm.ws.grpc.client/.classpath", "diffHunk": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxOTcwMg=="}, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTMxODY5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.grpc.server/src/com/ibm/ws/grpc/GrpcApplicationManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTowMjowMFrOFua8gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTo0NDoyOFrOFxXpYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDI4OA==", "bodyText": "Do we want to do more than log the message?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r384220288", "createdAt": "2020-02-26T01:02:00Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.grpc.server/src/com/ibm/ws/grpc/GrpcApplicationManager.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.grpc;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import org.osgi.service.component.ComponentContext;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Modified;\n+\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.container.service.annocache.AnnotationsBetaHelper;\n+import com.ibm.ws.container.service.annotations.WebAnnotations;\n+import com.ibm.ws.container.service.app.deploy.ApplicationInfo;\n+import com.ibm.ws.container.service.app.deploy.WebModuleInfo;\n+import com.ibm.ws.container.service.state.ApplicationStateListener;\n+import com.ibm.ws.container.service.state.StateChangeException;\n+import com.ibm.wsspi.adaptable.module.NonPersistentCache;\n+import com.ibm.wsspi.adaptable.module.UnableToAdaptException;\n+import com.ibm.wsspi.anno.targets.AnnotationTargets_Targets;\n+\n+import io.grpc.BindableService;\n+import io.grpc.Server;\n+\n+@Component(service = {\n+\t\tApplicationStateListener.class }, configurationPolicy = ConfigurationPolicy.IGNORE, immediate = true)\n+public class GrpcApplicationManager implements ApplicationStateListener {\n+\n+\tprivate static final String CLASS_NAME = GrpcApplicationManager.class.getName();\n+\tprivate static final Logger logger = Logger.getLogger(GrpcApplicationManager.class.getName());\n+\n+\t@Activate\n+\tprotected void activate(ComponentContext cc) {\n+\t}\n+\n+\t@Deactivate\n+\tprotected void deactivate(ComponentContext cc) {\n+\t}\n+\n+\t@Modified\n+\tprotected void modified(Map<?, ?> newProperties) {\n+\t}\n+\n+\t/**\n+\t * Discover and start gRPC services provided by this application\n+\t */\n+\t@Override\n+\tpublic void applicationStarting(ApplicationInfo appInfo) throws StateChangeException {\n+\t\tSet<String> grpcServiceClassNames = findGrpcServiceImplementors(appInfo);\n+\t\tSet<BindableService> services = initGrpcServices(appInfo, grpcServiceClassNames);\n+\t\tif (services != null && !services.isEmpty()) {\n+\t\t\tLibertyServerBuilder serverBuilder = new LibertyServerBuilder();\n+\t\t\tfor (BindableService service : services) {\n+\t\t\t\tserverBuilder.addService(service.bindService());\n+\t\t\t}\n+\t\t\tServer server = serverBuilder.build();\n+\t\t\ttry {\n+\t\t\t\tserver.start();\n+\t\t\t\tActiveGrpcServers.addServer(appInfo.getName(), server);\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tlogMessage(Level.FINE, \"initGrpcServices\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMTk3MA==", "bodyText": "I've added a FFDC for now.  We'll go back over messages more carefully in another PR.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r387311970", "createdAt": "2020-03-03T21:44:28Z", "author": {"login": "wtlucy"}, "path": "dev/com.ibm.ws.grpc.server/src/com/ibm/ws/grpc/GrpcApplicationManager.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.grpc;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import org.osgi.service.component.ComponentContext;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Modified;\n+\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.container.service.annocache.AnnotationsBetaHelper;\n+import com.ibm.ws.container.service.annotations.WebAnnotations;\n+import com.ibm.ws.container.service.app.deploy.ApplicationInfo;\n+import com.ibm.ws.container.service.app.deploy.WebModuleInfo;\n+import com.ibm.ws.container.service.state.ApplicationStateListener;\n+import com.ibm.ws.container.service.state.StateChangeException;\n+import com.ibm.wsspi.adaptable.module.NonPersistentCache;\n+import com.ibm.wsspi.adaptable.module.UnableToAdaptException;\n+import com.ibm.wsspi.anno.targets.AnnotationTargets_Targets;\n+\n+import io.grpc.BindableService;\n+import io.grpc.Server;\n+\n+@Component(service = {\n+\t\tApplicationStateListener.class }, configurationPolicy = ConfigurationPolicy.IGNORE, immediate = true)\n+public class GrpcApplicationManager implements ApplicationStateListener {\n+\n+\tprivate static final String CLASS_NAME = GrpcApplicationManager.class.getName();\n+\tprivate static final Logger logger = Logger.getLogger(GrpcApplicationManager.class.getName());\n+\n+\t@Activate\n+\tprotected void activate(ComponentContext cc) {\n+\t}\n+\n+\t@Deactivate\n+\tprotected void deactivate(ComponentContext cc) {\n+\t}\n+\n+\t@Modified\n+\tprotected void modified(Map<?, ?> newProperties) {\n+\t}\n+\n+\t/**\n+\t * Discover and start gRPC services provided by this application\n+\t */\n+\t@Override\n+\tpublic void applicationStarting(ApplicationInfo appInfo) throws StateChangeException {\n+\t\tSet<String> grpcServiceClassNames = findGrpcServiceImplementors(appInfo);\n+\t\tSet<BindableService> services = initGrpcServices(appInfo, grpcServiceClassNames);\n+\t\tif (services != null && !services.isEmpty()) {\n+\t\t\tLibertyServerBuilder serverBuilder = new LibertyServerBuilder();\n+\t\t\tfor (BindableService service : services) {\n+\t\t\t\tserverBuilder.addService(service.bindService());\n+\t\t\t}\n+\t\t\tServer server = serverBuilder.build();\n+\t\t\ttry {\n+\t\t\t\tserver.start();\n+\t\t\t\tActiveGrpcServers.addServer(appInfo.getName(), server);\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tlogMessage(Level.FINE, \"initGrpcServices\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDI4OA=="}, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTMxODk0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.grpc.server/src/com/ibm/ws/grpc/GrpcApplicationManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTowMjoxM1rOFua8sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTowMjoxM1rOFua8sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDMzOA==", "bodyText": "Just pointing out the System.out", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r384220338", "createdAt": "2020-02-26T01:02:13Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.grpc.server/src/com/ibm/ws/grpc/GrpcApplicationManager.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.grpc;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import org.osgi.service.component.ComponentContext;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Modified;\n+\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.container.service.annocache.AnnotationsBetaHelper;\n+import com.ibm.ws.container.service.annotations.WebAnnotations;\n+import com.ibm.ws.container.service.app.deploy.ApplicationInfo;\n+import com.ibm.ws.container.service.app.deploy.WebModuleInfo;\n+import com.ibm.ws.container.service.state.ApplicationStateListener;\n+import com.ibm.ws.container.service.state.StateChangeException;\n+import com.ibm.wsspi.adaptable.module.NonPersistentCache;\n+import com.ibm.wsspi.adaptable.module.UnableToAdaptException;\n+import com.ibm.wsspi.anno.targets.AnnotationTargets_Targets;\n+\n+import io.grpc.BindableService;\n+import io.grpc.Server;\n+\n+@Component(service = {\n+\t\tApplicationStateListener.class }, configurationPolicy = ConfigurationPolicy.IGNORE, immediate = true)\n+public class GrpcApplicationManager implements ApplicationStateListener {\n+\n+\tprivate static final String CLASS_NAME = GrpcApplicationManager.class.getName();\n+\tprivate static final Logger logger = Logger.getLogger(GrpcApplicationManager.class.getName());\n+\n+\t@Activate\n+\tprotected void activate(ComponentContext cc) {\n+\t}\n+\n+\t@Deactivate\n+\tprotected void deactivate(ComponentContext cc) {\n+\t}\n+\n+\t@Modified\n+\tprotected void modified(Map<?, ?> newProperties) {\n+\t}\n+\n+\t/**\n+\t * Discover and start gRPC services provided by this application\n+\t */\n+\t@Override\n+\tpublic void applicationStarting(ApplicationInfo appInfo) throws StateChangeException {\n+\t\tSet<String> grpcServiceClassNames = findGrpcServiceImplementors(appInfo);\n+\t\tSet<BindableService> services = initGrpcServices(appInfo, grpcServiceClassNames);\n+\t\tif (services != null && !services.isEmpty()) {\n+\t\t\tLibertyServerBuilder serverBuilder = new LibertyServerBuilder();\n+\t\t\tfor (BindableService service : services) {\n+\t\t\t\tserverBuilder.addService(service.bindService());\n+\t\t\t}\n+\t\t\tServer server = serverBuilder.build();\n+\t\t\ttry {\n+\t\t\t\tserver.start();\n+\t\t\t\tActiveGrpcServers.addServer(appInfo.getName(), server);\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tlogMessage(Level.FINE, \"initGrpcServices\",\n+\t\t\t\t\t\t\"gRPC Server \" + server + \" could not be started \", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void applicationStarted(ApplicationInfo appInfo) throws StateChangeException {\n+\t}\n+\n+\t@Override\n+\tpublic void applicationStopping(ApplicationInfo appInfo) {\n+\t\tCollection<Server> servers = ActiveGrpcServers.getServerList();\n+\t\tfor (Server s : servers) {\n+\t\t\tSystem.out.println(\"applicationStopping removing grpc server: \" + s);\n+\t\t\ts.shutdown();\n+\t\t}\n+\t\tActiveGrpcServers.removeServer(appInfo.getName());\n+\t\tSystem.out.println(\"applicationStopping app: \" + appInfo.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTMyMzY5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.grpc.server/bnd.bnd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTowNTowN1rOFua_sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTozOTo1NFrOFxXgFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTEwNA==", "bodyText": "Does this make sense given the java11 requirement? I don't see any other bnd listing anything other than 1.8/1.7 but just asking.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r384221104", "createdAt": "2020-02-26T01:05:07Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.grpc.server/bnd.bnd", "diffHunk": "@@ -0,0 +1,57 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+Bundle-Name: gRPC Server 1.0.\n+Bundle-SymbolicName: com.ibm.ws.grpc.server.1.0\n+Bundle-Description: gRPC Server, version 1.0\n+\n+-dsannotations: \\\n+  com.ibm.ws.grpc.GrpcApplicationManager\n+\n+Import-Package: !sun.*,\\\n+  !com.google.code.gson,\\\n+  !org.checkerframework,\\\n+  *\n+\n+Export-Package: com.ibm.ws.grpc\n+\n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=11))\"\n+\n+instrument.disabled: true\n+\n+-buildpath: \\\n+  com.ibm.ws.container.service;version=latest,\\\n+  com.ibm.websphere.org.osgi.core;version=latest,\\\n+  com.ibm.websphere.org.osgi.service.component;version=latest,\\\n+  com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\\\n+  com.ibm.ws.kernel.boot;version=latest,\\\n+  com.ibm.ws.kernel.service;version=latest,\\\n+  com.ibm.ws.adaptable.module;version=latest,\\\n+  com.ibm.ws.app.manager.lifecycle;version=latest,\\\n+  com.ibm.ws.resource;version=latest,\\\n+  com.ibm.ws.anno;version=latest,\\\n+  com.ibm.ws.logging.core,\\\n+  com.ibm.websphere.javaee.cdi.2.0;version=latest,\\\n+  com.ibm.websphere.javaee.servlet.4.0;version=latest,\\\n+  com.ibm.ws.grpc.common.1.0;version=latest,\\\n+  com.google.code.findbugs:jsr305;version=3.0.2,\\\n+  com.google.guava:guava;version=27.0.1, \\\n+  com.ibm.ws.channelfw;version=latest,\\\n+  com.ibm.ws.transport.http;version=latest,\\\n+  com.ibm.ws.kernel.service\n+  \n+javac.source: 1.8\n+javac.target: 1.8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwOTU5MA==", "bodyText": "We only need java 8 at build time, so this does make sense", "url": "https://github.com/OpenLiberty/open-liberty/pull/10977#discussion_r387309590", "createdAt": "2020-03-03T21:39:54Z", "author": {"login": "wtlucy"}, "path": "dev/com.ibm.ws.grpc.server/bnd.bnd", "diffHunk": "@@ -0,0 +1,57 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+Bundle-Name: gRPC Server 1.0.\n+Bundle-SymbolicName: com.ibm.ws.grpc.server.1.0\n+Bundle-Description: gRPC Server, version 1.0\n+\n+-dsannotations: \\\n+  com.ibm.ws.grpc.GrpcApplicationManager\n+\n+Import-Package: !sun.*,\\\n+  !com.google.code.gson,\\\n+  !org.checkerframework,\\\n+  *\n+\n+Export-Package: com.ibm.ws.grpc\n+\n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=11))\"\n+\n+instrument.disabled: true\n+\n+-buildpath: \\\n+  com.ibm.ws.container.service;version=latest,\\\n+  com.ibm.websphere.org.osgi.core;version=latest,\\\n+  com.ibm.websphere.org.osgi.service.component;version=latest,\\\n+  com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\\\n+  com.ibm.ws.kernel.boot;version=latest,\\\n+  com.ibm.ws.kernel.service;version=latest,\\\n+  com.ibm.ws.adaptable.module;version=latest,\\\n+  com.ibm.ws.app.manager.lifecycle;version=latest,\\\n+  com.ibm.ws.resource;version=latest,\\\n+  com.ibm.ws.anno;version=latest,\\\n+  com.ibm.ws.logging.core,\\\n+  com.ibm.websphere.javaee.cdi.2.0;version=latest,\\\n+  com.ibm.websphere.javaee.servlet.4.0;version=latest,\\\n+  com.ibm.ws.grpc.common.1.0;version=latest,\\\n+  com.google.code.findbugs:jsr305;version=3.0.2,\\\n+  com.google.guava:guava;version=27.0.1, \\\n+  com.ibm.ws.channelfw;version=latest,\\\n+  com.ibm.ws.transport.http;version=latest,\\\n+  com.ibm.ws.kernel.service\n+  \n+javac.source: 1.8\n+javac.target: 1.8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTEwNA=="}, "originalCommit": {"oid": "4d538ed11aefbad0848ff937886ef68b3d1b7232"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2086, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}