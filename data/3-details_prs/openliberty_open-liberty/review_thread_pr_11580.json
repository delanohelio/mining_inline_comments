{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDAyMTY3", "number": 11580, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTozNzoxOVrODvwEOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTozOTo1NFrODvwHhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzk3MTc3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.opentracing.1.x_fat/fat/src/com/ibm/ws/testing/opentracing/test/FATMPOpenTracing.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTozNzoxOVrOGCXEug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoxOToxM1rOGCxgMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyODM3OA==", "bodyText": "Expected exception", "url": "https://github.com/OpenLiberty/open-liberty/pull/11580#discussion_r405128378", "createdAt": "2020-04-07T21:37:19Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.opentracing.1.x_fat/fat/src/com/ibm/ws/testing/opentracing/test/FATMPOpenTracing.java", "diffHunk": "@@ -99,22 +105,57 @@ public void testHelloWorld() throws Exception {\n             tracerState += actualResponseLine;\n         }\n \n+        int expectedSpans = 3;\n+        int spanCount = getSpanCount(tracerState);\n+        if (spanCount != expectedSpans) {\n+            Assert.assertEquals(\"Expected \" + expectedSpans + \" spans but found \" + spanCount + \":\", tracerState);\n+        }\n+    }\n+    \n+    @Test\n+    public void testNotFoundException() throws Exception {\n+    \tString methodName = \"testNotFoundException\";\n+\n+        try {\n+            \n+            executeWebService(\"notFound\");\n+        } catch (TestAppException tae) {\n+            FATLogging.info(CLASS, methodName, \"Expection exception\", tae);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b88d2df50253cc22d3ad974890331cc95a91c07"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2MTM5Mg==", "bodyText": "Fixed", "url": "https://github.com/OpenLiberty/open-liberty/pull/11580#discussion_r405561392", "createdAt": "2020-04-08T14:19:13Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.opentracing.1.x_fat/fat/src/com/ibm/ws/testing/opentracing/test/FATMPOpenTracing.java", "diffHunk": "@@ -99,22 +105,57 @@ public void testHelloWorld() throws Exception {\n             tracerState += actualResponseLine;\n         }\n \n+        int expectedSpans = 3;\n+        int spanCount = getSpanCount(tracerState);\n+        if (spanCount != expectedSpans) {\n+            Assert.assertEquals(\"Expected \" + expectedSpans + \" spans but found \" + spanCount + \":\", tracerState);\n+        }\n+    }\n+    \n+    @Test\n+    public void testNotFoundException() throws Exception {\n+    \tString methodName = \"testNotFoundException\";\n+\n+        try {\n+            \n+            executeWebService(\"notFound\");\n+        } catch (TestAppException tae) {\n+            FATLogging.info(CLASS, methodName, \"Expection exception\", tae);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyODM3OA=="}, "originalCommit": {"oid": "1b88d2df50253cc22d3ad974890331cc95a91c07"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzk4MDIxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.opentracing.1.x_fat/fat/src/com/ibm/ws/testing/opentracing/test/FATMPOpenTracing.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTozOTo1NFrOGCXJ3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyNDowMFrOGCxttA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyOTY5Mg==", "bodyText": "why does number of expected spans change to 3 (from 2)?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11580#discussion_r405129692", "createdAt": "2020-04-07T21:39:54Z", "author": {"login": "donbourne"}, "path": "dev/com.ibm.ws.opentracing.1.x_fat/fat/src/com/ibm/ws/testing/opentracing/test/FATMPOpenTracing.java", "diffHunk": "@@ -99,22 +105,57 @@ public void testHelloWorld() throws Exception {\n             tracerState += actualResponseLine;\n         }\n \n+        int expectedSpans = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b88d2df50253cc22d3ad974890331cc95a91c07"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NDg1Mg==", "bodyText": "The clearTracer() method that was added to clear the Tracer object between tests.  It makes a HTTP DELETE call to clear the tracer before each test.  Therefore, each test will have an additional span from the HTTP DELETE call.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11580#discussion_r405564852", "createdAt": "2020-04-08T14:24:00Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.opentracing.1.x_fat/fat/src/com/ibm/ws/testing/opentracing/test/FATMPOpenTracing.java", "diffHunk": "@@ -99,22 +105,57 @@ public void testHelloWorld() throws Exception {\n             tracerState += actualResponseLine;\n         }\n \n+        int expectedSpans = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyOTY5Mg=="}, "originalCommit": {"oid": "1b88d2df50253cc22d3ad974890331cc95a91c07"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1945, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}