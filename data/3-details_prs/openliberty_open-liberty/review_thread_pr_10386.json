{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjQwNzk2", "number": 10386, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNToyMlrODXSS-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNTo0MFrODXSTIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQzNjExOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNToyMlrOFchlyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjozMTozNlrOFchszg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDc5NQ==", "bodyText": "Did you intend to leave System.out.println statements?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#discussion_r365454795", "createdAt": "2020-01-10T22:25:22Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.persistent.internal;\n+\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+import com.ibm.websphere.concurrent.persistent.PersistentExecutor;\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.kernel.service.util.SecureAction;\n+import com.ibm.wsspi.logging.Introspector;\n+\n+/**\n+ * Introspector for persistent executors.\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE)\n+public class PersistentExecutorIntrospector implements Introspector {\n+    @Override\n+    @Trivial\n+    public String getIntrospectorName() {\n+        System.out.println(\"getIntrospectorName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NjU5MA==", "bodyText": "good catch, those were just for debugging locally. I'll remove them.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#discussion_r365456590", "createdAt": "2020-01-10T22:31:36Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.persistent.internal;\n+\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+import com.ibm.websphere.concurrent.persistent.PersistentExecutor;\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.kernel.service.util.SecureAction;\n+import com.ibm.wsspi.logging.Introspector;\n+\n+/**\n+ * Introspector for persistent executors.\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE)\n+public class PersistentExecutorIntrospector implements Introspector {\n+    @Override\n+    @Trivial\n+    public String getIntrospectorName() {\n+        System.out.println(\"getIntrospectorName\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDc5NQ=="}, "originalCommit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQzNjQ4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNTo0MFrOFchmGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjozMTo0MlrOFchs6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDg3NA==", "bodyText": "Same question as above.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#discussion_r365454874", "createdAt": "2020-01-10T22:25:40Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.persistent.internal;\n+\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+import com.ibm.websphere.concurrent.persistent.PersistentExecutor;\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.kernel.service.util.SecureAction;\n+import com.ibm.wsspi.logging.Introspector;\n+\n+/**\n+ * Introspector for persistent executors.\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE)\n+public class PersistentExecutorIntrospector implements Introspector {\n+    @Override\n+    @Trivial\n+    public String getIntrospectorName() {\n+        System.out.println(\"getIntrospectorName\");\n+        return \"PersistentExecutorIntrospector\";\n+    }\n+\n+    @Override\n+    @Trivial\n+    public String getIntrospectorDescription() {\n+        System.out.println(\"getIntrospectorDescription\");\n+        return \"Persistent timers/tasks diagnostics\";\n+    }\n+\n+    @Override\n+    public void introspect(PrintWriter out) throws Exception {\n+        SecureAction priv = AccessController.doPrivileged(SecureAction.get());\n+        BundleContext bundleContext = priv.getBundleContext(FrameworkUtil.getBundle(getClass()));\n+\n+        for (ServiceReference<PersistentExecutor> ref : priv.getServiceReferences(bundleContext, PersistentExecutor.class, \"(!(com.ibm.wsspi.resource.ResourceFactory=true))\")) {\n+            System.out.println(\"Found service reference: \" + ref);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NjYxNw==", "bodyText": "good catch, those were just for debugging locally. I'll remove them.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10386#discussion_r365456617", "createdAt": "2020-01-10T22:31:42Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.concurrent.persistent/src/com/ibm/ws/concurrent/persistent/internal/PersistentExecutorIntrospector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.persistent.internal;\n+\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+import com.ibm.websphere.concurrent.persistent.PersistentExecutor;\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.kernel.service.util.SecureAction;\n+import com.ibm.wsspi.logging.Introspector;\n+\n+/**\n+ * Introspector for persistent executors.\n+ */\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE)\n+public class PersistentExecutorIntrospector implements Introspector {\n+    @Override\n+    @Trivial\n+    public String getIntrospectorName() {\n+        System.out.println(\"getIntrospectorName\");\n+        return \"PersistentExecutorIntrospector\";\n+    }\n+\n+    @Override\n+    @Trivial\n+    public String getIntrospectorDescription() {\n+        System.out.println(\"getIntrospectorDescription\");\n+        return \"Persistent timers/tasks diagnostics\";\n+    }\n+\n+    @Override\n+    public void introspect(PrintWriter out) throws Exception {\n+        SecureAction priv = AccessController.doPrivileged(SecureAction.get());\n+        BundleContext bundleContext = priv.getBundleContext(FrameworkUtil.getBundle(getClass()));\n+\n+        for (ServiceReference<PersistentExecutor> ref : priv.getServiceReferences(bundleContext, PersistentExecutor.class, \"(!(com.ibm.wsspi.resource.ResourceFactory=true))\")) {\n+            System.out.println(\"Found service reference: \" + ref);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDg3NA=="}, "originalCommit": {"oid": "e1e76e78e2e6ff1ef64620efcac234fa5fb3dd94"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2309, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}