{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjc2MzQ4", "number": 14963, "title": "Runtime updates for jaxws-2.3", "bodyText": "", "createdAt": "2020-11-13T16:17:17Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963", "merged": true, "mergeCommit": {"oid": "dd6f36ca952006375c03e7c7001c5ccc48788e53"}, "closed": true, "closedAt": "2020-12-05T05:02:39Z", "author": {"login": "neuwerk"}, "timelineItems": {"totalCount": 54, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcJz5qgBqjM5OTQyNzQxMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi9XLPgBqjQwNzQyNTc5OTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91140c13d2e48c12571c6cb010c6b2650ddb5097", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/91140c13d2e48c12571c6cb010c6b2650ddb5097", "committedDate": "2020-11-13T15:36:08Z", "message": "WIP: fat changes for PB run"}, "afterCommit": {"oid": "7331953aa59a9edd7eed6aa79ef2ca5bd41c3a44", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7331953aa59a9edd7eed6aa79ef2ca5bd41c3a44", "committedDate": "2020-11-13T16:32:48Z", "message": "Undo changes to jaxws.common by bad merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjEyOTI4", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-530212928", "createdAt": "2020-11-13T16:34:32Z", "commit": {"oid": "7331953aa59a9edd7eed6aa79ef2ca5bd41c3a44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjozNDozM1rOHy1YlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjozNDozM1rOHy1YlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA2NTQ5Mg==", "bodyText": "Because these tests use jaxwstest-2.x feature files to override what API's are exported to the APP class path, I've had to break the tests into different versions. I had a problem building them after I undid some tests changes, and for the sake of time I've just stashed them locally to revisit.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r523065492", "createdAt": "2020-11-13T16:34:33Z", "author": {"login": "neuwerk"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/fat/src/com/ibm/ws/jaxws/fat/FATSuite.java", "diffHunk": "@@ -33,7 +33,9 @@\n                 CXFJMXSupportTest.class,\n                 WebServiceMonitorTest.class,\n                 HttpConduitPropertiesTest.class,\n+                //HttpConduitPropertiesTest23.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7331953aa59a9edd7eed6aa79ef2ca5bd41c3a44"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b828dcfe547a5ec70171d433c7678aafff7c0878", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/b828dcfe547a5ec70171d433c7678aafff7c0878", "committedDate": "2020-11-20T01:57:19Z", "message": "jaxws-2.3 runtime and FAT updates"}, "afterCommit": {"oid": "35259487ef04b4431024027567317336110c630f", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/35259487ef04b4431024027567317336110c630f", "committedDate": "2020-11-20T02:05:25Z", "message": "jaxws-2.3 runtime and FAT updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35259487ef04b4431024027567317336110c630f", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/35259487ef04b4431024027567317336110c630f", "committedDate": "2020-11-20T02:05:25Z", "message": "jaxws-2.3 runtime and FAT updates"}, "afterCommit": {"oid": "f16e9b5c5e2b36848268264ad7104e673e34850e", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f16e9b5c5e2b36848268264ad7104e673e34850e", "committedDate": "2020-11-20T14:14:37Z", "message": "jaxws-2.3 runtime and FAT updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47f23687f3d093b5b02a141ae8638eea6f4d1891", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/47f23687f3d093b5b02a141ae8638eea6f4d1891", "committedDate": "2020-11-20T15:05:19Z", "message": "missing file from merge"}, "afterCommit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5a3991f7a1573d2eb934ef381a59321da8d703bc", "committedDate": "2020-11-20T15:38:43Z", "message": "jaxws-2.3 runtime and FAT updates\n\nmerge fixing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTY1MzEx", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-535565311", "createdAt": "2020-11-20T16:11:51Z", "commit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoxMTo1MlrOH3WKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoxMTo1MlrOH3WKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5NjkxNw==", "bodyText": "Added bundles missing from the original feature port", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r527796917", "createdAt": "2020-11-20T16:11:52Z", "author": {"login": "neuwerk"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.internal.jaxws-2.3.feature", "diffHunk": "@@ -37,7 +38,12 @@ Subsystem-Name: Internal Java Web Services 2.3\n  com.ibm.ws.jaxws.2.3.common; start-phase:=CONTAINER_LATE, \\\n  com.ibm.websphere.prereq.wsdl4j.api; location:=\"dev/api/spec/,lib/\", \\\n  com.ibm.websphere.javaee.wsdl4j.1.2; location:=\"dev/api/spec/,lib/\"; mavenCoordinates=\"wsdl4j:wsdl4j:1.6.3\", \\\n- com.ibm.ws.prereq.wsdl4j.1.6.2\n+ com.ibm.ws.prereq.wsdl4j.1.6.2, \\\n+ com.ibm.ws.jaxws.2.3.wsat, \\\n+ com.ibm.ws.javaee.ddmodel.ws, \\\n+ com.ibm.ws.javaee.ddmodel.wsbnd, \\\n+ com.ibm.ws.webservices.javaee.common, \\\n+ com.ibm.ws.webservices.handler\n -files=\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTY2MjIy", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-535566222", "createdAt": "2020-11-20T16:12:50Z", "commit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoxMjo1MFrOH3WNeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoxMjo1MFrOH3WNeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5NzYyNg==", "bodyText": "Add to match jaxws-2.2's SPI", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r527797626", "createdAt": "2020-11-20T16:12:50Z", "author": {"login": "neuwerk"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jaxws-2.3/com.ibm.websphere.appserver.jaxws-2.3.feature", "diffHunk": "@@ -5,6 +5,7 @@ singleton=true\n IBM-App-ForceRestart: uninstall, \\\n  install\n IBM-ShortName: jaxws-2.3\n+IBM-SPI-Package: com.ibm.wsspi.webservices.handler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTY2Njk3", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-535566697", "createdAt": "2020-11-20T16:13:25Z", "commit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoxMzoyNVrOH3WOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoxMzoyNVrOH3WOxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5Nzk1Ng==", "bodyText": "Switched dependencies for the pureCXF tests case", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r527797956", "createdAt": "2020-11-20T16:13:25Z", "author": {"login": "neuwerk"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/build.gradle", "diffHunk": "@@ -45,16 +45,16 @@ dependencies {\n   pureCXF 'aopalliance:aopalliance:1.0',\n   'asm:asm:3.1',\n   'commons-logging:commons-logging:1.1.1',\n-  'org.apache.cxf:cxf-api:2.6.2',\n-  'org.apache.cxf:cxf-rt-bindings-soap:2.6.2',\n-  'org.apache.cxf:cxf-rt-bindings-xml:2.6.2',\n-  'org.apache.cxf:cxf-rt-core:2.6.2',\n-  'org.apache.cxf:cxf-rt-databinding-jaxb:2.6.2',\n-  'org.apache.cxf:cxf-rt-frontend-jaxws:2.6.2',\n-  'org.apache.cxf:cxf-rt-frontend-simple:2.6.2',\n-  'org.apache.cxf:cxf-rt-transports-http:2.6.2',\n-  'org.apache.cxf:cxf-rt-ws-addr:2.6.2',\n-  'org.apache.cxf:cxf-rt-ws-policy:2.6.2',\n+  'org.apache.cxf:cxf-core:3.3.3',\n+  'org.apache.cxf:cxf-rt-bindings-soap:3.3.3',\n+  'org.apache.cxf:cxf-rt-bindings-xml:3.3.3',\n+  'org.apache.cxf:cxf-rt-databinding-jaxb:3.3.3',\n+  'org.apache.cxf:cxf-rt-frontend-jaxws:3.3.3',\n+  'org.apache.cxf:cxf-rt-frontend-simple:3.3.3',\n+  'org.apache.cxf:cxf-rt-transports-http:3.3.3',\n+  'org.apache.cxf:cxf-rt-ws-addr:3.3.3',\n+  'org.apache.cxf:cxf-rt-ws-policy:3.3.3',\n+  'org.apache.cxf:cxf-rt-wsdl:3.3.3',\n   'org.apache.neethi:neethi:3.0.2',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a3991f7a1573d2eb934ef381a59321da8d703bc"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjY4NzYw", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-535668760", "createdAt": "2020-11-20T18:12:48Z", "commit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "state": "APPROVED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODoxMjo0OVrOH3bodQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMzo1OTo1N1rOH3keJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4NjQ1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019 IBM Corporation and others.\n          \n          \n            \n             * Copyright (c) 2020 IBM Corporation and others.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r527886453", "createdAt": "2020-11-20T18:12:49Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/fat/src/com/ibm/ws/jaxws/fat/EJBServiceRefBndTest23.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4NzY0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019 IBM Corporation and others.\n          \n          \n            \n             * Copyright (c) 2020 IBM Corporation and others.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r527887642", "createdAt": "2020-11-20T18:15:00Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/fat/src/com/ibm/ws/jaxws/fat/HttpConduitPropertiesTest23.java", "diffHunk": "@@ -0,0 +1,426 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyNTI3MQ==", "bodyText": "Not required for this PR, but it would be nice to understand what permissions are missing - especially to differentiate between permissions that the app needs vs permissions that the runtime needs (which should be none).", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r527925271", "createdAt": "2020-11-20T19:28:06Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/publish/servers/EJBServiceRefBndTestServer23/server.xml", "diffHunk": "@@ -0,0 +1,13 @@\n+<server>\n+    <featureManager>\n+    \t<feature>jsp-2.3</feature>\n+        <feature>jaxwsTest-2.3</feature>\n+        <feature>ejbLite-3.2</feature>\n+    </featureManager>\n+\n+    <include location=\"../fatTestPorts.xml\"/>\n+ \n+    <!-- TESTING THE UPLOAD! -->\n+  \t<javaPermission className=\"java.security.AllPermission\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNjg0OA==", "bodyText": "Could you add //Liberty change comments here to distinguish the code that is specific to Liberty vs the rest of CXF code?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528026848", "createdAt": "2020-11-20T23:42:06Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/ConduitConfigurer.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.ibm.ws.jaxws;\n+\n+import java.util.Dictionary;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.transport.http.HTTPConduit;\n+import org.apache.cxf.transport.http.HTTPConduitConfigurer;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.service.cm.ConfigurationException;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+\n+/**\n+ *  Allows us to Apply our HTTPConduit configuration on a HTTPConduit via a ManagedService added to the Bus\n+ *  Mostly borrowed from\n+ *  org.apache.cxf.transport.http.asyncclient.Activator\n+ *  org.apache.cxf.transport.http.osgi.HttpConduitConfigApplier\n+ */\n+public class ConduitConfigurer extends ConduitConfigurerService  implements HTTPConduitConfigurer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNjk4Nw==", "bodyText": "Same comment here wrt //Liberty change", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528026987", "createdAt": "2020-11-20T23:42:40Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/ConduitConfigurerService.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.ibm.ws.jaxws;\n+\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.cm.ConfigurationException;\n+import org.osgi.service.cm.ManagedService;\n+import org.osgi.util.tracker.ServiceTracker;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+\n+/**\n+ *  Lifted from org.apache.cxf.transport.http.asyncclient.Activator\n+ */\n+public class ConduitConfigurerService extends ServiceTracker<Bus, Bus> implements ManagedService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNzMxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2012 IBM Corporation and others.\n          \n          \n            \n             * Copyright (c) 2019, 2020 IBM Corporation and others.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528027316", "createdAt": "2020-11-20T23:44:00Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/bus/LibertyApplicationBusFactory.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2019 IBM Corporation and others.\n+ * Copyright (c) 2012 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNzcyMg==", "bodyText": "Remove these lines?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528027722", "createdAt": "2020-11-20T23:45:31Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/client/LibertyCustomizeBindingOutInterceptor.java", "diffHunk": "@@ -244,26 +183,95 @@ protected void customizePortAddress(Message message) {\n     }\n \n     private void customizeHttpConduitProperties(Message message, Bus bus, ConfigProperties configProps) {\n-        Conduit conduit = message.getExchange().getConduit(message);\n-        HTTPConduitConfigurer conduitConfigurer = bus.getExtension(HTTPConduitConfigurer.class);\n+        HTTPConduit conduit = (HTTPConduit) message.getExchange().getConduit(message);\n+        // applyClientPolicies(configProps.getProperties(), conduit);\n+\n+        //Conduit conduit = message.getExchange().getConduit(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyODM3Nw==", "bodyText": "Is this just added for auto-trace injection?  I don't think it's necessary unless you also want to add explicit trace statements.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528028377", "createdAt": "2020-11-20T23:48:38Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/metadata/JaxWsModuleMetaData.java", "diffHunk": "@@ -27,6 +30,8 @@\n  * JaxWsModuleMetaData holds all the runtime data for the webservice engine, e.g. Container, classloader and etc.\n  */\n public class JaxWsModuleMetaData {\n+    \n+    private static final TraceComponent tc = Tr.register( JaxWsModuleMetaData.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyODUzOQ==", "bodyText": "Same as above - you can probably remove this unless you want to add explicit trace statements.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528028539", "createdAt": "2020-11-20T23:49:16Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/metadata/JaxWsServerMetaData.java", "diffHunk": "@@ -15,11 +15,15 @@\n import java.util.Map.Entry;\n \n import com.ibm.websphere.csi.J2EEName;\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n import com.ibm.ws.jaxws.bus.LibertyApplicationBus;\n import com.ibm.ws.jaxws.bus.LibertyApplicationBusFactory;\n \n public class JaxWsServerMetaData {\n \n+    private static final TraceComponent tc = Tr.register( JaxWsServerMetaData.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyODY5NA==", "bodyText": "Remove this line too?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528028694", "createdAt": "2020-11-20T23:49:47Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -110,7 +110,8 @@ public Policy getEffectivePolicy(BindingMessageInfo bmi) {\n     }\n \n     // @TJJ removed overridde annotation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyODk1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Policy getEffectivePolicy(BindingFaultInfo bfi, Message M) {\n          \n          \n            \n                public Policy getEffectivePolicy(BindingFaultInfo bfi, Message m) {\n          \n      \n    \n    \n  \n\nsuggest lowercase for parameter variables", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528028953", "createdAt": "2020-11-20T23:50:51Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -69,8 +69,8 @@ public String getLocation() {\n         return location;\n     }\n \n-    // @TJJ removed overridde annotation\n-    public Policy getEffectivePolicy(BindingFaultInfo bfi) {\n+    @Override\n+    public Policy getEffectivePolicy(BindingFaultInfo bfi, Message M) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyOTAwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Policy getEffectivePolicy(BindingMessageInfo bmi, Message M) {\n          \n          \n            \n                public Policy getEffectivePolicy(BindingMessageInfo bmi, Message m) {", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528029002", "createdAt": "2020-11-20T23:51:01Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -89,8 +89,8 @@ public Policy getEffectivePolicy(BindingFaultInfo bfi) {\n         return p;\n     }\n \n-    // @TJJ removed overridde annotation\n-    public Policy getEffectivePolicy(BindingMessageInfo bmi) {\n+    @Override\n+    public Policy getEffectivePolicy(BindingMessageInfo bmi, Message M) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyOTA0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Policy getEffectivePolicy(BindingOperationInfo boi, Message M) {\n          \n          \n            \n                public Policy getEffectivePolicy(BindingOperationInfo boi, Message m) {", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528029049", "createdAt": "2020-11-20T23:51:09Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -110,7 +110,8 @@ public Policy getEffectivePolicy(BindingMessageInfo bmi) {\n     }\n \n     // @TJJ removed overridde annotation\n-    public Policy getEffectivePolicy(BindingOperationInfo boi) {\n+    @Override\n+    public Policy getEffectivePolicy(BindingOperationInfo boi, Message M) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyOTA3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Policy getEffectivePolicy(EndpointInfo ei, Message M) {\n          \n          \n            \n                public Policy getEffectivePolicy(EndpointInfo ei, Message m) {", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528029074", "createdAt": "2020-11-20T23:51:18Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -129,8 +130,8 @@ public Policy getEffectivePolicy(BindingOperationInfo boi) {\n         return p;\n     }\n \n-    // @TJJ removed overridde annotation\n-    public Policy getEffectivePolicy(EndpointInfo ei) {\n+    @Override\n+    public Policy getEffectivePolicy(EndpointInfo ei, Message M) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyOTEwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Policy getEffectivePolicy(ServiceInfo si, Message M) {\n          \n          \n            \n                public Policy getEffectivePolicy(ServiceInfo si, Message m) {", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528029107", "createdAt": "2020-11-20T23:51:26Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -149,8 +150,8 @@ public Policy getEffectivePolicy(EndpointInfo ei) {\n         return p;\n     }\n \n-    // @TJJ removed overridde annotation\n-    public Policy getEffectivePolicy(ServiceInfo si) {\n+    @Override\n+    public Policy getEffectivePolicy(ServiceInfo si, Message M) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMTI3MA==", "bodyText": "These probably mean that the latest CXF code might have some Java 2 security permission issues... Can you open a separate issue to look into them?  We'd probably need to remove all these AllPermission statements and see what blows up - then add doPrivs appropriately.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r528031270", "createdAt": "2020-11-20T23:59:57Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxws.ejb_fat/publish/servers/com.ibm.ws.jaxws.ejb.fat.ejbwscontext/server.xml", "diffHunk": "@@ -27,6 +27,8 @@\n     \t\t\t</security-role>    \t\t\t\t\n     \t\t</application-bnd>\n     </application>\n+    \n+    <javaPermission className=\"java.security.AllPermission\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69827679e6e9a49d97b5b5f042d0f5826cbb4878", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/69827679e6e9a49d97b5b5f042d0f5826cbb4878", "committedDate": "2020-11-20T18:07:00Z", "message": "additional jaxws-2.3 code clean up changes"}, "afterCommit": {"oid": "d62924d7aabc0ccc847e83f0fb83f16187405923", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d62924d7aabc0ccc847e83f0fb83f16187405923", "committedDate": "2020-11-23T09:20:09Z", "message": "add wsat\n\njaxws-2.3 runtime and FAT updates\n\nmerge fixing\n\nadditional jaxws-2.3 code clean up changes\n\nAdd jaxws-2.3 changes for code review and more test fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d62924d7aabc0ccc847e83f0fb83f16187405923", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d62924d7aabc0ccc847e83f0fb83f16187405923", "committedDate": "2020-11-23T09:20:09Z", "message": "add wsat\n\njaxws-2.3 runtime and FAT updates\n\nmerge fixing\n\nadditional jaxws-2.3 code clean up changes\n\nAdd jaxws-2.3 changes for code review and more test fixes"}, "afterCommit": {"oid": "78a64c9e5b5d62deb5cc4f6b5082c628e86f1134", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/78a64c9e5b5d62deb5cc4f6b5082c628e86f1134", "committedDate": "2020-11-24T21:12:04Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDYyOTky", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538062992", "createdAt": "2020-11-25T00:07:34Z", "commit": {"oid": "78a64c9e5b5d62deb5cc4f6b5082c628e86f1134"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMDowNzozNFrOH5eFbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMDoxMDowOVrOH5eIng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAyMzc5MQ==", "bodyText": "@TJJ still here", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530023791", "createdAt": "2020-11-25T00:07:34Z", "author": {"login": "WhiteCat22"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/policy/DynamicAttachmentProvider.java", "diffHunk": "@@ -110,7 +110,8 @@ public Policy getEffectivePolicy(BindingMessageInfo bmi) {\n     }\n \n     // @TJJ removed overridde annotation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78a64c9e5b5d62deb5cc4f6b5082c628e86f1134"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAyNDYwNg==", "bodyText": "should be 2019, 2020\nwe are supposed to preserve the original date", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530024606", "createdAt": "2020-11-25T00:10:09Z", "author": {"login": "WhiteCat22"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/threading/LibertyJaxWsAutomaticWorkQueueImpl.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2019 IBM Corporation and others.\n+ * Copyright (c) 2020 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78a64c9e5b5d62deb5cc4f6b5082c628e86f1134"}, "originalPosition": 3}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "837ceefa9d664b63be49a3ff4ed704ed970b2538", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/837ceefa9d664b63be49a3ff4ed704ed970b2538", "committedDate": "2020-11-25T05:32:42Z", "message": "remove wrong version change"}, "afterCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/33192c7927bae6e5516a9ccb59bbd5edbdff6c9d", "committedDate": "2020-11-25T16:01:50Z", "message": "More code review comments\n\nremove wrong version change\n\nremove wrong version change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI3OTg0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538727984", "createdAt": "2020-11-25T17:43:20Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0MzoyMFrOH5-CXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0MzoyMFrOH5-CXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NzI5NA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530547294", "createdAt": "2020-11-25T17:43:20Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI4MTg2", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538728186", "createdAt": "2020-11-25T17:43:38Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0MzozOFrOH5-C_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0MzozOFrOH5-C_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NzQ1NA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530547454", "createdAt": "2020-11-25T17:43:38Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_cs.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI4NDA2", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538728406", "createdAt": "2020-11-25T17:43:55Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0Mzo1NVrOH5-DuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0Mzo1NVrOH5-DuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NzY0MQ==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530547641", "createdAt": "2020-11-25T17:43:55Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_de.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI4NTMw", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538728530", "createdAt": "2020-11-25T17:44:06Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDowNlrOH5-EGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDowNlrOH5-EGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NzczOQ==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530547739", "createdAt": "2020-11-25T17:44:06Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_es.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI4Njk1", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538728695", "createdAt": "2020-11-25T17:44:19Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDoyMFrOH5-EnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDoyMFrOH5-EnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0Nzg2OA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530547868", "createdAt": "2020-11-25T17:44:20Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_fr.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI4ODUy", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538728852", "createdAt": "2020-11-25T17:44:33Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDozM1rOH5-FOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDozM1rOH5-FOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODAyNQ==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548025", "createdAt": "2020-11-25T17:44:33Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_hu.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5MDUz", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729053", "createdAt": "2020-11-25T17:44:48Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDo0OFrOH5-FyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NDo0OFrOH5-FyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODE2OA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548168", "createdAt": "2020-11-25T17:44:48Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_it.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5MTg1", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729185", "createdAt": "2020-11-25T17:45:01Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NTowMVrOH5-GNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NTowMVrOH5-GNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODI3OA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548278", "createdAt": "2020-11-25T17:45:01Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_ja.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5MzQz", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729343", "createdAt": "2020-11-25T17:45:15Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NToxNlrOH5-Gvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NToxNlrOH5-Gvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODQxNA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548414", "createdAt": "2020-11-25T17:45:16Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_ko.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5NDg5", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729489", "createdAt": "2020-11-25T17:45:27Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NToyOFrOH5-HNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NToyOFrOH5-HNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODUzNQ==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548535", "createdAt": "2020-11-25T17:45:28Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_pl.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5NjU3", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729657", "createdAt": "2020-11-25T17:45:40Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NTo0MVrOH5-HwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NTo0MVrOH5-HwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODY3Mg==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548672", "createdAt": "2020-11-25T17:45:41Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_pt_BR.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5Nzgy", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729782", "createdAt": "2020-11-25T17:45:51Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NTo1MVrOH5-IOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NTo1MVrOH5-IOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODc5Mw==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548793", "createdAt": "2020-11-25T17:45:51Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_ro.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzI5OTEw", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538729910", "createdAt": "2020-11-25T17:46:00Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NjowMFrOH5-Img==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NjowMFrOH5-Img==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODg5MA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548890", "createdAt": "2020-11-25T17:46:00Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_ru.nlsprops", "diffHunk": "@@ -0,0 +1,205 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzMwMDUx", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538730051", "createdAt": "2020-11-25T17:46:11Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NjoxMVrOH5-JAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NjoxMVrOH5-JAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODk5NA==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530548994", "createdAt": "2020-11-25T17:46:11Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_zh.nlsprops", "diffHunk": "@@ -0,0 +1,206 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzMwMTg2", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538730186", "createdAt": "2020-11-25T17:46:21Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NjoyMVrOH5-JZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzo0NjoyMVrOH5-JZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0OTA5Mg==", "bodyText": "Copyright year 2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530549092", "createdAt": "2020-11-25T17:46:21Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/resources/com/ibm/ws/jaxws/internal/resources/JaxWsCommonMessages_zh_TW.nlsprops", "diffHunk": "@@ -0,0 +1,206 @@\n+###############################################################################\n+# Copyright (c) 2011 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzQ0MDM0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538744034", "createdAt": "2020-11-25T18:06:56Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODowNjo1NlrOH5-02A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODowNjo1NlrOH5-02A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2MDIxNg==", "bodyText": "Copyright year adjustment", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530560216", "createdAt": "2020-11-25T18:06:56Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.jaxws.2.3.webcontainer/src/com/ibm/ws/jaxws23/webcontainer/LibertyJaxWsServlet.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2019 IBM Corporation and others.\n+ * Copyright (c) 2012 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzUzNTI5", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-538753529", "createdAt": "2020-11-25T18:21:52Z", "commit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyMTo1MlrOH5_Seg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyMTo1MlrOH5_Seg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2NzgwMg==", "bodyText": "? bvcxzinclude is typo?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r530567802", "createdAt": "2020-11-25T18:21:52Z", "author": {"login": "BerksanAtes"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.transports.http.3.2/bnd.overrides", "diffHunk": "@@ -1,4 +1,6 @@\n--include= ~../cnf/resources/bnd/rejar.props\n+? bvcxzinclude= ~../cnf/resources/bnd/rejar.props", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33192c7927bae6e5516a9ccb59bbd5edbdff6c9d", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/33192c7927bae6e5516a9ccb59bbd5edbdff6c9d", "committedDate": "2020-11-25T16:01:50Z", "message": "More code review comments\n\nremove wrong version change\n\nremove wrong version change"}, "afterCommit": {"oid": "c612ac854cf268b9805f607807d2963c5b51e676", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c612ac854cf268b9805f607807d2963c5b51e676", "committedDate": "2020-11-25T20:58:08Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets\n\nMore code review comments\n\nMore code review comments\n\nremove wrong version change\n\nremove wrong version change\n\nMore code review changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c612ac854cf268b9805f607807d2963c5b51e676", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c612ac854cf268b9805f607807d2963c5b51e676", "committedDate": "2020-11-25T20:58:08Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets\n\nMore code review comments\n\nMore code review comments\n\nremove wrong version change\n\nremove wrong version change\n\nMore code review changes"}, "afterCommit": {"oid": "432992c3adcb846c4ae54cef461c963d615866c3", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/432992c3adcb846c4ae54cef461c963d615866c3", "committedDate": "2020-11-28T21:25:07Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets\n\nMore code review comments\n\nMore code review comments\n\nremove wrong version change\n\nremove wrong version change\n\nMore code review changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa81435877c77282ededbd258e627e6b48a26255", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/aa81435877c77282ededbd258e627e6b48a26255", "committedDate": "2020-11-29T23:49:32Z", "message": "Udno bnd.overrides typo"}, "afterCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a6acc20fd1ba794ff76daa387c092f02af53f57d", "committedDate": "2020-11-30T15:49:41Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets\n\nMore code review comments\n\nMore code review comments\n\nremove wrong version change\n\nremove wrong version change\n\nMore code review changes\n\nUdno bnd.overrides typo\n\nDiable instrumentation to prevent unncessary FFDCs from being generating by custom JAX-RS execptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzc4MzM0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-541378334", "createdAt": "2020-11-30T23:32:40Z", "commit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzozMjo0MFrOH8SDEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjo0NTowOFrOH8q94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk3MjMwNQ==", "bodyText": "You will want to rebase.  This was delivered today to have this updated.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r532972305", "createdAt": "2020-11-30T23:32:40Z", "author": {"login": "jhanders34"}, "path": "dev/cnf/dependabot/check_this_in_if_it_changes/pom.xml", "diffHunk": "@@ -381,6 +381,11 @@\n       <artifactId>FastInfoset</artifactId>\n       <version>1.2.16</version>\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxODM0Nw==", "bodyText": "com.ibm.ws.javaee.ddmodel.wsbnd is already in the list.  No need to have it twice.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533018347", "createdAt": "2020-12-01T01:45:28Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.internal.jaxws-2.3.feature", "diffHunk": "@@ -37,7 +38,11 @@ Subsystem-Name: Internal Java Web Services 2.3\n  com.ibm.ws.jaxws.2.3.common; start-phase:=CONTAINER_LATE, \\\n  com.ibm.websphere.prereq.wsdl4j.api; location:=\"dev/api/spec/,lib/\", \\\n  com.ibm.websphere.javaee.wsdl4j.1.2; location:=\"dev/api/spec/,lib/\"; mavenCoordinates=\"wsdl4j:wsdl4j:1.6.3\", \\\n- com.ibm.ws.prereq.wsdl4j.1.6.2\n+ com.ibm.ws.prereq.wsdl4j.1.6.2, \\\n+ com.ibm.ws.jaxws.2.3.wsat, \\\n+ com.ibm.ws.javaee.ddmodel.ws, \\\n+ com.ibm.ws.javaee.ddmodel.wsbnd, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNTA2Ng==", "bodyText": "JAXWS 2.2 has com.ibm.ws.org.jvnet.mimepull; require-java:=\"9\" .  Note the require-java.  Does 2.3 need the require-java as well?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533025066", "createdAt": "2020-12-01T02:06:16Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.internal.jaxws-2.3.feature", "diffHunk": "@@ -37,7 +38,11 @@ Subsystem-Name: Internal Java Web Services 2.3\n  com.ibm.ws.jaxws.2.3.common; start-phase:=CONTAINER_LATE, \\\n  com.ibm.websphere.prereq.wsdl4j.api; location:=\"dev/api/spec/,lib/\", \\\n  com.ibm.websphere.javaee.wsdl4j.1.2; location:=\"dev/api/spec/,lib/\"; mavenCoordinates=\"wsdl4j:wsdl4j:1.6.3\", \\\n- com.ibm.ws.prereq.wsdl4j.1.6.2\n+ com.ibm.ws.prereq.wsdl4j.1.6.2, \\\n+ com.ibm.ws.jaxws.2.3.wsat, \\\n+ com.ibm.ws.javaee.ddmodel.ws, \\\n+ com.ibm.ws.javaee.ddmodel.wsbnd, \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxODM0Nw=="}, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNjI0OA==", "bodyText": "Any reason to have the internal.jaxws-2.3 feature at all?  Why not just have it contained in this feature like was done with jaxws-2.2?\nYou should add dependency on the eeCompatible-8.0 feature.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533026248", "createdAt": "2020-12-01T02:10:11Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jaxws-2.3/com.ibm.websphere.appserver.jaxws-2.3.feature", "diffHunk": "@@ -5,6 +5,7 @@ singleton=true\n IBM-App-ForceRestart: uninstall, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMDQ3Mg==", "bodyText": "So why do you want to have false?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533030472", "createdAt": "2020-12-01T02:23:48Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/fat/src/com/ibm/ws/jaxws/fat/EJBServiceRefBndTest.java", "diffHunk": "@@ -87,7 +94,10 @@ public void tearDown() throws Exception {\n         }\n \n         if (server.isStarted()) {\n-            server.stopServer();\n+\n+            // Since the individual tests are starting the server due to the config change\n+            // You must remove the false boolean in order to get logs for debuging failures\n+            server.stopServer(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMTEwOQ==", "bodyText": "Why not adding jaxwstest-2.3?  Wouldn't that make combining the tests into a single test like mentioned above possible?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533031109", "createdAt": "2020-12-01T02:25:51Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/fat/src/com/ibm/ws/jaxws/fat/FATSuite.java", "diffHunk": "@@ -43,6 +48,6 @@\n })\n public class FATSuite {\n     @ClassRule\n-    public static RepeatTests r = RepeatTests.withoutModification().andWith(new FeatureReplacementAction().addFeature(\"jaxws-2.3\").removeFeature(\"jaxws-2.2\").removeFeature(\"jsp-2.2\").withID(\"jaxws-2.3\"));\n+    public static RepeatTests r = RepeatTests.withoutModification().andWith(new FeatureReplacementAction().addFeature(\"jaxws-2.3\").removeFeature(\"jaxws-2.2\").removeFeature(\"jsp-2.2\").removeFeature(\"servlet-3.1\").removeFeature(\"jaxwstest-2.2\").withID(\"jaxws-2.3\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMjk2OA==", "bodyText": "Should this heavy of a trace stay on going forward?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533032968", "createdAt": "2020-12-01T02:31:36Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.2.webcontainer_fat/publish/servers/BindingTypeWsdlMismatchTestServer/server.xml", "diffHunk": "@@ -6,6 +6,7 @@\n \n     <include location=\"../fatTestPorts.xml\"/>\n     \n+    <logging traceSpecification=\"org.apache.cxf.*=all:com.ibm.ws.jaxws*=all:*=info\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzNDA4Ng==", "bodyText": "Why do private packages need a version?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533034086", "createdAt": "2020-12-01T02:35:36Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/bnd.bnd", "diffHunk": "@@ -52,9 +57,9 @@ Import-Package: \\\n    *\n \n Private-Package:\\\n-   com.ibm.ws.jaxws.*, \\\n-   com.ibm.wsspi.jaxws\n-\n+   com.ibm.ws.jaxws.*;version=${exportVer},\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzNDc4Mg==", "bodyText": "If it depends on javaee.concurrent API does that need to be added to the feature definition as a dependent API bundle/feature?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533034782", "createdAt": "2020-12-01T02:37:52Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/bnd.bnd", "diffHunk": "@@ -215,7 +213,9 @@ instrument.classesExcludes: com/ibm/ws/jaxws/internal/resources/*.class\n \tcom.ibm.websphere.appserver.spi.threading;version=latest, \\\n \tcom.ibm.ws.org.osgi.annotation.versioning;version=latest,\\\n \tcom.ibm.ws.jaxws.tools.2.2.10, \\\n-\tjavax.activation:activation;version=1.1\n+\tjavax.activation:activation;version=1.1, \\\n+\tcom.ibm.websphere.javaee.concurrent.1.0;version=latest,\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzNzE4OA==", "bodyText": "Again same question about the com.ibm.ws instead of using existing cxf file.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533037188", "createdAt": "2020-12-01T02:45:11Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/JaxwsConduitConfigActivator.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzNzQ0MA==", "bodyText": "Again same questions.  Could we subclass instead of taking the whole file and bring it over?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533037440", "createdAt": "2020-12-01T02:46:03Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/JaxwsHttpConduitConfigApplier.java", "diffHunk": "@@ -0,0 +1,387 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.ibm.ws.jaxws;\n+\n+\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+import org.apache.cxf.configuration.jsse.TLSClientParameters;\n+import org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils;\n+import org.apache.cxf.configuration.security.AuthorizationPolicy;\n+import org.apache.cxf.configuration.security.CertStoreType;\n+import org.apache.cxf.configuration.security.CertificateConstraintsType;\n+import org.apache.cxf.configuration.security.CombinatorType;\n+import org.apache.cxf.configuration.security.DNConstraintsType;\n+import org.apache.cxf.configuration.security.FiltersType;\n+import org.apache.cxf.configuration.security.KeyManagersType;\n+import org.apache.cxf.configuration.security.KeyStoreType;\n+import org.apache.cxf.configuration.security.ProxyAuthorizationPolicy;\n+import org.apache.cxf.configuration.security.SecureRandomParameters;\n+import org.apache.cxf.configuration.security.TrustManagersType;\n+import org.apache.cxf.transport.http.HTTPConduit;\n+import org.apache.cxf.transport.http.auth.HttpAuthSupplier;\n+import org.apache.cxf.transports.http.configuration.ConnectionType;\n+import org.apache.cxf.transports.http.configuration.HTTPClientPolicy;\n+import org.apache.cxf.transports.http.configuration.ProxyServerType;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+\n+/**\n+ * Applies configuration properties to a HTTPConduit\n+ * Lifted from org.apache.cxf.transport.http.osgi.HttpConduitConfigApplier\n+ */\n+public class JaxwsHttpConduitConfigApplier {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzODAyOA==", "bodyText": "Why not just declare them final in the method signature?  Seems silly to make new variables if you can just have it final in the method parameters.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533038028", "createdAt": "2020-12-01T02:47:57Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/bus/LibertyApplicationBusFactory.java", "diffHunk": "@@ -103,9 +106,16 @@ public LibertyApplicationBus createBus(Map<Class<?>, Object> e, Map<String, Obje\n \n         Bus originalBus = getThreadDefaultBus(false);\n \n+        final Map<Class<?>, Object> e1 = e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzOTQwMg==", "bodyText": "Should this be done conditionally if there are SSL properties set like is done with JAXRS?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533039402", "createdAt": "2020-12-01T02:52:25Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/client/LibertyServiceImpl.java", "diffHunk": "@@ -158,6 +159,8 @@ protected void configureCustomizeBinding(Client client, QName portName) {\n \n         Set<ConfigProperties> configPropsSet = servicePropertiesMap.get(portName);\n         client.getOutInterceptors().add(new LibertyCustomizeBindingOutInterceptor(wsrInfo, securityConfigService, configPropsSet));\n+\n+        client.getOutInterceptors().add(new LibertyJaxWsClientSSLOutInterceptor(wsrInfo, securityConfigService, configPropsSet, client.getEndpoint().getEndpointInfo()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0MDM1Mw==", "bodyText": "This added import is not used it would appear.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533040353", "createdAt": "2020-12-01T02:55:28Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/metadata/JaxWsModuleMetaData.java", "diffHunk": "@@ -16,7 +16,10 @@\n import java.util.Map;\n \n import com.ibm.websphere.csi.J2EEName;\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n import com.ibm.ws.container.service.app.deploy.ModuleInfo;\n+import com.ibm.ws.jaxws.client.injection.ServiceRefObjectFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0MTcyNw==", "bodyText": "Is the Endpoint guaranteed to be the same object for a particular endpoint?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533041727", "createdAt": "2020-12-01T02:59:50Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/support/LibertyJaxWsCompatibleWSDLGetInterceptor.java", "diffHunk": "@@ -77,110 +84,73 @@ public LibertyJaxWsCompatibleWSDLGetInterceptor(String implBeanClazzName, String\n \n     }\n \n-    // @TJJ removed the @Override\n-    public Document getDocument(Message message, String base, Map<String, String> params, String ctxUri, EndpointInfo endpointInfo) {\n-\n-        if (wsdlLoationExisted) {\n-            if (TraceComponent.isAnyTracingEnabled() && tc.isWarningEnabled()) {\n-                Tr.warning(tc, \"warn.no.wsdl.generate\", implBeanClazzName);\n-            }\n-            return noWSDLDoc;\n-        } else {\n-            if (TraceComponent.isAnyTracingEnabled() && tc.isWarningEnabled()) {\n-                Tr.warning(tc, \"error.no.wsdl.find\", new Object[] { wsdlLocation, implBeanClazzName });\n-            }\n-            return noWSDLLocationDoc;\n-        }\n-    }\n+\n+    private Document getDocument(WSDLGetUtils utils,\n+                                Message message, String base,\n+                                Map<String, String> params, String ctxUri) {\n+       // cannot have two wsdl's being generated for the same endpoint at the same\n+       // time as the addresses may get mixed up\n+       // For WSDL's the WSDLWriter does not share any state between documents.\n+       // For XSD's, the WSDLGetUtils makes a copy of any XSD schema documents before updating\n+       // any addresses and returning them, so for both WSDL and XSD this is the only part that needs\n+       // to be synchronized.\n+       synchronized (message.getExchange().getEndpoint()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0MjQ2NQ==", "bodyText": "There is a lot of change here.  The copyright should be updated to include 2020.  You should do the same for other classes you changed.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533042465", "createdAt": "2020-12-01T03:02:27Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/support/LibertyJaxWsCompatibleWSDLGetInterceptor.java", "diffHunk": "@@ -77,110 +84,73 @@ public LibertyJaxWsCompatibleWSDLGetInterceptor(String implBeanClazzName, String\n \n     }\n \n-    // @TJJ removed the @Override\n-    public Document getDocument(Message message, String base, Map<String, String> params, String ctxUri, EndpointInfo endpointInfo) {\n-\n-        if (wsdlLoationExisted) {\n-            if (TraceComponent.isAnyTracingEnabled() && tc.isWarningEnabled()) {\n-                Tr.warning(tc, \"warn.no.wsdl.generate\", implBeanClazzName);\n-            }\n-            return noWSDLDoc;\n-        } else {\n-            if (TraceComponent.isAnyTracingEnabled() && tc.isWarningEnabled()) {\n-                Tr.warning(tc, \"error.no.wsdl.find\", new Object[] { wsdlLocation, implBeanClazzName });\n-            }\n-            return noWSDLLocationDoc;\n-        }\n-    }\n+\n+    private Document getDocument(WSDLGetUtils utils,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0MzY5OA==", "bodyText": "Should this be in a finally block?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533043698", "createdAt": "2020-12-01T03:06:43Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/threading/LibertyJaxWsAutomaticWorkQueueImpl.java", "diffHunk": "@@ -10,15 +10,47 @@\n  *******************************************************************************/\n package com.ibm.ws.jaxws.threading;\n \n+import java.security.AccessController;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.TimeUnit;\n \n import org.apache.cxf.workqueue.AutomaticWorkQueue;\n \n+import com.ibm.ws.util.ThreadContextAccessor;\n import com.ibm.wsspi.threading.WSExecutorService;\n \n public class LibertyJaxWsAutomaticWorkQueueImpl implements AutomaticWorkQueue {\n \n+    private static final ThreadContextAccessor THREAD_CONTEXT_ACCESSOR =\n+                    AccessController.doPrivileged(ThreadContextAccessor.getPrivilegedAction());\n+\n+    /**\n+     * Borrowed from jaxrs-2.x to udpate our LibertyThreadPoolAdapter to match changes need for CXF Updates\n+     * LibertyJaxWsWorker helps to switch the Thread Context Classloader of InvocationCallback & CompletionCallback to application context classloader which can access the jaxws-2.3\n+     * spec API such as Client API\n+     */\n+    public class LibertyJaxWsWorker implements Runnable {\n+\n+        private final Runnable work;\n+        private final ClassLoader appContextClassLoader;\n+\n+        public LibertyJaxWsWorker(Runnable work) {\n+            this.work = work;\n+            //get the application context classloader from main thread\n+            this.appContextClassLoader = THREAD_CONTEXT_ACCESSOR.getContextClassLoader(Thread.currentThread());\n+        }\n+\n+        @Override\n+        public void run() {\n+            //switch thread context classloader of async thread to application context classloader\n+            ClassLoader oClsLoader = THREAD_CONTEXT_ACCESSOR.getContextClassLoader(Thread.currentThread());\n+            THREAD_CONTEXT_ACCESSOR.setContextClassLoader(Thread.currentThread(), appContextClassLoader);\n+            work.run();\n+            //after callback done, switch back the original classloader\n+            THREAD_CONTEXT_ACCESSOR.setContextClassLoader(Thread.currentThread(), oClsLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI5ODk3NA==", "bodyText": "setThreadContext is not necessary to be here.  initialValue is called on get if nothing is in the ThreadLocal and get will put it in automatically into the ThreadLocal without your needing to call set in initialValue.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533298974", "createdAt": "2020-12-01T10:34:20Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/threading/LibertyJaxWsWorkQueueThreadContextHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.jaxws.threading;\n+\n+/**\n+ *\n+ */\n+public class LibertyJaxWsWorkQueueThreadContextHelper {\n+\n+    private static ThreadLocal<LibertyJaxWsWorkQueueThreadContext> threadLocal = new ThreadLocal<LibertyJaxWsWorkQueueThreadContext>() {\n+\n+        @Override\n+        protected LibertyJaxWsWorkQueueThreadContext initialValue() {\n+            LibertyJaxWsWorkQueueThreadContext wqtc = new LibertyJaxWsWorkQueueThreadContext();\n+            LibertyJaxWsWorkQueueThreadContextHelper.setThreadContext(wqtc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxMjIyNQ==", "bodyText": "Many of these variables could be declared final earlier instead of having to make extra variables just to be final.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533312225", "createdAt": "2020-12-01T10:45:25Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/client/LibertyProviderImpl.java", "diffHunk": "@@ -91,7 +91,7 @@ public ServiceDelegate createServiceDelegate(URL url, QName qname,\n         AtomicServiceReference<JaxWsSecurityConfigurationService> secConfigSR = securityConfigSR.get();\n         JaxWsSecurityConfigurationService securityConfigService = secConfigSR == null ? null : secConfigSR.getService();\n \n-        // @TJJ create final vars in order to call a doPriv when creating the LibertyServiceImpl as required by java 2 security\n+        // Create final vars in order to call a doPriv when creating the LibertyServiceImpl as required by java 2 security\n         final JaxWsSecurityConfigurationService scs = securityConfigService;\n         final WebServiceRefInfo wi = wsrInfo;\n         final Bus b = bus;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNzcxNw==", "bodyText": "This Interceptor seems to handle both SSL and basic auth so the having the name SSL as part of the class name is misleading.  So either it should be specific to SSL only or the name changed to Security instead of SSL?  The class comment here only talks about SSL and not basic auth so that is also misleading.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533317717", "createdAt": "2020-12-01T10:53:59Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws23/client/security/LibertyJaxWsClientSSLOutInterceptor.java", "diffHunk": "@@ -0,0 +1,241 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.jaxws23.client.security;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.security.PrivilegedExceptionAction;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import javax.net.ssl.SSLSocketFactory;\n+import javax.xml.namespace.QName;\n+\n+import org.apache.cxf.common.util.PropertyUtils;\n+import org.apache.cxf.common.util.StringUtils;\n+import org.apache.cxf.configuration.jsse.TLSClientParameters;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.phase.AbstractPhaseInterceptor;\n+import org.apache.cxf.transport.Conduit;\n+import org.apache.cxf.transport.http.HTTPConduit;\n+import org.apache.cxf.transports.http.configuration.HTTPClientPolicy;\n+import org.apache.cxf.ws.addressing.EndpointReferenceType;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.jaxws.metadata.ConfigProperties;\n+import com.ibm.ws.jaxws.metadata.PortComponentRefInfo;\n+import com.ibm.ws.jaxws.metadata.WebServiceRefInfo;\n+import com.ibm.ws.jaxws.security.JaxWsSecurityConfigurationService;\n+import com.ibm.wsspi.kernel.service.utils.AtomicServiceReference;\n+\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.phase.AbstractPhaseInterceptor;\n+import org.apache.cxf.phase.Phase;\n+import org.apache.cxf.service.model.EndpointInfo;\n+import org.apache.cxf.transport.Conduit;\n+import org.apache.cxf.transport.http.HTTPConduit;\n+import org.apache.cxf.transport.http.HTTPConduitConfigurer;\n+import org.osgi.service.cm.ConfigurationException;\n+import org.osgi.service.cm.ManagedServiceFactory;\n+\n+import com.ibm.websphere.ras.ProtectedString;\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.websphere.ras.annotation.Sensitive;\n+import com.ibm.ws.jaxws.JaxWsConstants;\n+import com.ibm.ws.jaxws.metadata.ConfigProperties;\n+import com.ibm.ws.jaxws.metadata.PortComponentRefInfo;\n+import com.ibm.ws.jaxws.metadata.WebServiceRefInfo;\n+import com.ibm.ws.jaxws.security.JaxWsSecurityConfigurationService;\n+\n+/**\n+ * Used to set the SSL config on the Client side conduit. This removes the need to modify the\n+ * HttpConduit directly through an extended LibertyHttpConduit \n+ */\n+public class LibertyJaxWsClientSSLOutInterceptor extends AbstractPhaseInterceptor<Message> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMzMDg4NQ==", "bodyText": "If methodDispatcher is null then we should skip this entire logic.  No reason to loop through a for loop just to do nothing in it if methodDispatcher is null.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533330885", "createdAt": "2020-12-01T11:16:33Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.ejb/src/com/ibm/ws/jaxws/ejb/EJBJaxWsWebEndpoint.java", "diffHunk": "@@ -116,20 +115,31 @@ public void init(ServletConfig servletConfig) throws ServletException {\n             inInterceptors.add(ejbPreInvokeInterceptor);\n             outInterceptors.add(new EJBPostInvokeInterceptor());\n         } else {\n-            Service service = serviceFactory.getService();\n+\n+            if (service == null) {\n+                service = serviceFactory.getService();\n+            }\n+\n             org.apache.cxf.service.model.EndpointInfo cxfEndpointInfo = service.getEndpointInfo(endpointInfo.getWsdlPort());\n-            //MethodDispatcher methodDispatcher = (MethodDispatcher) service.get(MethodDispatcher.class.getName());\n-            JAXWSMethodDispatcher methodDispatcher = (JAXWSMethodDispatcher) service.get(JAXWSMethodDispatcher.class.getName());\n+\n+            JAXWSMethodDispatcher methodDispatcher = (JAXWSMethodDispatcher) service.get(MethodDispatcher.class.getName());\n             List<Method> methods = new ArrayList<Method>(cxfEndpointInfo.getBinding().getOperations().size());\n-            for (BindingOperationInfo bindingOperationInfo : cxfEndpointInfo.getBinding().getOperations()) {\n-                Method method = methodDispatcher.getMethod(bindingOperationInfo);\n-                if (method != null) {\n-                    methods.add(method);\n-                } else {\n-                    if (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n-                        Tr.debug(tc, \"Unable to get method for binding operation info \" + bindingOperationInfo.getName());\n+            if (cxfEndpointInfo.getBinding().getOperations() != null) {\n+                for (BindingOperationInfo bindingOperationInfo : cxfEndpointInfo.getBinding().getOperations()) {\n+                    if (methodDispatcher != null && bindingOperationInfo != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMzMjk0Ng==", "bodyText": "Why would ejbContainer be null?  If it can be null here, couldn't it be null in the if as well?\nThis same logic does not exist in the 2.2 version of the code.  If it can be null, the logic should be there as well.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533332946", "createdAt": "2020-12-01T11:20:18Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.ejb/src/com/ibm/ws/jaxws/ejb/EJBPreInvokeInterceptor.java", "diffHunk": "@@ -91,8 +90,10 @@ public void handleMessage(SoapMessage message) throws Fault {\n                 endpointManager = ejbContainer.createWebServiceEndpointManager(j2EEName, Provider.class);\n                 targetMethod = getProviderMethod(implClass);\n             } else {\n-                endpointManager = ejbContainer.createWebServiceEndpointManager(j2EEName, methods);\n-                targetMethod = getTargetMethod(implClass, message);\n+                if (ejbContainer != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMzNjMzNQ==", "bodyText": "The isAnnotationPresent can be cached during the constructor instead of having to calculate it each time that handleMessage is called.  Not sure if the annotation service should be used instead of calling it directly.\nIf you change it in 2.3, you should also look at changing it in 2.2 as well.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533336335", "createdAt": "2020-12-01T11:26:14Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.ejb/src/com/ibm/ws/jaxws/ejb/EJBPreInvokeInterceptor.java", "diffHunk": "@@ -77,7 +77,6 @@ public EJBPreInvokeInterceptor(J2EEName j2EEName, Class<?> implClass, EJBContain\n         this.j2EEName = j2EEName;\n         this.ejbContainer = ejbContainer;\n         this.methods = methods == null ? null : methods.toArray(new Method[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM0MTk2OA==", "bodyText": "With all the changes you have in this project, the source code appears to be the same between jaxws.2.3.ejb and jaxws.ejb.  As such I see no reason to have duplication of code.  This bnd can depend on com.ibm.ws.jaxws.ejb and export and import classes with the new version information without having to duplicate all the code.  This will reduce dual maintenance in the future.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533341968", "createdAt": "2020-12-01T11:36:12Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.ejb/bnd.bnd", "diffHunk": "@@ -16,7 +16,7 @@ Bundle-Name: JAX-WS EJB\n Bundle-SymbolicName: com.ibm.ws.jaxws.2.3.ejb\n Bundle-Description: IBM JAX-WS EJB support; version=${bVersion}\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM0Mjc3Nw==", "bodyText": "Why do private packages need a version number?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533342777", "createdAt": "2020-12-01T11:37:15Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.security/bnd.bnd", "diffHunk": "@@ -36,11 +37,11 @@ Service-Component: \\\n     properties:=\"service.vendor=IBM\", \\\n   com.ibm.ws.jaxws.security.internal.JaxWsWebAppSecurityConfigurator; \\\n      implementation:=com.ibm.ws.jaxws.security.internal.JaxWsWebAppSecurityConfigurator; \\\n-     provide:='com.ibm.ws.jaxws.webcontainer.JaxWsWebAppConfigurator'; \\\n+     provide:='com.ibm.ws.jaxws23.webcontainer.JaxWsWebAppConfigurator'; \\\n      properties:=\"service.vendor=IBM\"\n \n-Private-Package: com.ibm.ws.jaxws.security.internal, \\\n- com.ibm.ws.jaxws.security.internal.resources\n+Private-Package: com.ibm.ws.jaxws.security.internal;version=${exportVer},\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM0NzEwNA==", "bodyText": "Similar to jaxws.2.3.ejb.  The code is the same between the jaxws.web and jaxws.2.3.web.  Can avoid the dual maintenance by not having the same classes duplicated and just have the 2.3.web project just bundle the jaxws.web project like mentioned in the ejb one.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533347104", "createdAt": "2020-12-01T11:45:06Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.web/bnd.bnd", "diffHunk": "@@ -16,9 +16,9 @@ Bundle-Name: JAX-WS 2.3 Web\n Bundle-SymbolicName: com.ibm.ws.jaxws.2.3.web\n Bundle-Description: IBM JAX-WS 2.3 Web support; version=${bVersion}\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM0OTc1Nw==", "bodyText": "Again same comment.  Code is duplicated.  Can just have one copy of the code and just update the bundle logic in the bnd without having to duplicate all the code.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533349757", "createdAt": "2020-12-01T11:50:03Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.webcontainer/bnd.bnd", "diffHunk": "@@ -16,9 +16,9 @@ Bundle-Name: JAX-WS WebContainer\n Bundle-SymbolicName: com.ibm.ws.jaxws.2.3.webcontainer\n Bundle-Description: IBM JAX-WS 2.3 Web Container; version=${bVersion}\n \n+exportVer=2.3\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM1MTQwMA==", "bodyText": "This is different than 2.2.  Should this be updated in the 2.2 version as well.  Like I said if the code is the same between the two might as well just have one copy.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533351400", "createdAt": "2020-12-01T11:53:07Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.webcontainer/src/com/ibm/ws/jaxws23/webcontainer/JaxWsHttpServletRequestAdapter.java", "diffHunk": "@@ -41,7 +42,7 @@\n  * as in EJB based Web Services, the EJB invocation context is built very earlier in one intercepter, which may cause issue for those methods requiring\n  * Web Component Context MetaData\n  */\n-public class JaxWsHttpServletRequestAdapter implements HttpServletRequest {\n+public class JaxWsHttpServletRequestAdapter extends HttpServletRequestWrapper implements HttpServletRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM1MzY4MA==", "bodyText": "I am guessing this is a complete copy of the jaxws.wsat bundle.  Again can avoid the dual maintenance and just have one copy of the code and the bnd file does the logic for updating the versions.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533353680", "createdAt": "2020-12-01T11:56:54Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.wsat/bnd.bnd", "diffHunk": "@@ -0,0 +1,64 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+\n+bVersion=1.0\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM1NjM3MA==", "bodyText": "I did not find any server.xml files that have jaxwstest-2.2 and jsp-2.2, so it seems unnecessary to have the removeFeature calls for them.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533356370", "createdAt": "2020-12-01T12:01:28Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.cdi_fat/fat/src/com/ibm/ws/jaxws/cdi/FATSuite.java", "diffHunk": "@@ -10,17 +10,30 @@\n  *******************************************************************************/\n package com.ibm.ws.jaxws.cdi;\n \n+import org.junit.ClassRule;\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;\n import org.junit.runners.Suite.SuiteClasses;\n \n import componenttest.custom.junit.runner.AlwaysPassesTest;\n+import componenttest.rules.repeater.FeatureReplacementAction;\n+import componenttest.rules.repeater.RepeatTests;\n \n @RunWith(Suite.class)\n @SuiteClasses({\n                 AlwaysPassesTest.class,\n                 BasicTest.class,\n })\n public class FATSuite {\n+    @ClassRule\n+    public static RepeatTests r = RepeatTests.withoutModification()\n+                    .andWith(new FeatureReplacementAction().addFeature(\"jaxws-2.3\")\n+                                    .addFeature(\"cdi-2.0\")\n+                                    .removeFeature(\"cdi-1.2\")\n+                                    .removeFeature(\"jaxws-2.2\")\n+                                    .removeFeature(\"jsp-2.2\")\n+                                    .removeFeature(\"servlet-3.1\")\n+                                    .removeFeature(\"jaxwstest-2.2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM2Mzc3NA==", "bodyText": "As before.  Not sure why version is needed in private package", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533363774", "createdAt": "2020-12-01T12:14:49Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.common/bnd.bnd", "diffHunk": "@@ -49,8 +57,8 @@ Import-Package: \\\n    *\n \n Private-Package:\\\n-   com.ibm.ws.jaxws.*, \\\n-   com.ibm.wsspi.jaxws\n+   com.ibm.ws.jaxws.*;version=${exportVer},\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM2NTU2Ng==", "bodyText": "Only a few classes are different between jaxws.common and jaxws.2.3.common.  It is odd to say it is a common bundle when it needs to be duplicated.  This would seem to be nicely refactored so that the common stuff is truly common and you could still have a 2.3.common, but it just have the bnd differences.  For classes that are not common, having them in their own bundle will be helpful.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533365566", "createdAt": "2020-12-01T12:17:58Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.common/bnd.bnd", "diffHunk": "@@ -16,23 +16,31 @@ Bundle-Name: JAX-WS Common\n Bundle-SymbolicName: com.ibm.ws.jaxws.common\n Bundle-Description: IBM JAX-WS Common; version=${bVersion}\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM2NjE4Ng==", "bodyText": "Again private packages need versions?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533366186", "createdAt": "2020-12-01T12:19:11Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.ejb/bnd.bnd", "diffHunk": "@@ -60,10 +62,12 @@ Import-Package: \\\n    javax.xml.ws.*;version=\"[2.2,3)\", \\\n    org.apache.cxf.*;version=\"[2.6.2,2.6.3)\", \\\n    javax.xml.soap;version=!,\\\n+   com.ibm.ws.jaxws;version=\"[2.0,2.3)\", \\\n+   com.ibm.ws.jaxws.*;version=\"[2.0,2.3)\", \\\n    *\n \n Private-Package:\\\n-   com.ibm.ws.jaxws.ejb.*\n+   com.ibm.ws.jaxws.ejb.*;version=${exportVer}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM2OTQyOQ==", "bodyText": "jsp-2.2, servlet-3.1 and jaxwstest-2.2 are not necessary since server.xml files don't use them in this fat project.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533369429", "createdAt": "2020-12-01T12:24:58Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.ejb_fat/fat/src/com/ibm/ws/jaxws/ejb/suite/FATSuite.java", "diffHunk": "@@ -42,4 +46,7 @@\n                 EJBWSInterceptorTest.class\n })\n public class FATSuite {\n+    @ClassRule\n+    public static RepeatTests r = RepeatTests.withoutModification().andWith(new FeatureReplacementAction().addFeature(\"jaxws-2.3\").removeFeature(\"jaxws-2.2\").removeFeature(\"jsp-2.2\").removeFeature(\"servlet-3.1\").removeFeature(\"jaxwstest-2.2\").withID(\"jaxws-2.3\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3MDUzMw==", "bodyText": "Private package with version.  Same comment as with others.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533370533", "createdAt": "2020-12-01T12:27:01Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.web/bnd.bnd", "diffHunk": "@@ -50,10 +52,12 @@ Import-Package: \\\n    com.ibm.ws.container.service.metadata, \\\n    javax.xml.ws.*;version=\"[2.2,3)\", \\\n    org.apache.cxf.*;version=\"[2.6.2,2.6.3)\", \\\n+   com.ibm.ws.jaxws;version=\"[2.0,2.3)\", \\\n+   com.ibm.ws.jaxws.*;version=\"[2.0,2.3)\", \\\n    *\n \n Private-Package:\\\n-   com.ibm.ws.jaxws.web.*\n+   com.ibm.ws.jaxws.web.*;version=${exportVer}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3MTAxNQ==", "bodyText": "Same comment about private packages with versions being needed.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533371015", "createdAt": "2020-12-01T12:27:53Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.webcontainer/bnd.bnd", "diffHunk": "@@ -44,15 +46,17 @@ Service-Component: com.ibm.ws.jaxws.webcontainer.jaxWsWebContainerManager; \\\n   \n \n Export-Package: \\\n-    com.ibm.ws.jaxws.webcontainer\n+    com.ibm.ws.jaxws.webcontainer;version=${exportVer}\n \n Import-Package: \\\n    javax.xml.ws.*;version=\"[2.2,3)\", \\\n    org.apache.cxf.*;version=\"[2.6.2,2.6.3)\", \\\n+   com.ibm.ws.jaxws;version=\"[2.0,2.3)\", \\\n+   com.ibm.ws.jaxws.*;version=\"[2.0,2.3)\", \\\n    *\n \n Private-Package:\\\n-   com.ibm.ws.jaxws.webcontainer.*\n+   com.ibm.ws.jaxws.webcontainer.*;version=${exportVer}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3NjYxMA==", "bodyText": "No Liberty change comments in this class.  What did you change from the vanilla CXF version?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533376610", "createdAt": "2020-12-01T12:38:05Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxws.3.2/src/org/apache/cxf/jaxws/JaxwsClientCallback.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.jaxws;\n+\n+import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import javax.xml.ws.AsyncHandler;\n+import javax.xml.ws.Response;\n+\n+import org.apache.cxf.endpoint.ClientCallback;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3NzAzNQ==", "bodyText": "No Liberty change comments in this class. What did you change from the vanilla CXF version?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533377035", "createdAt": "2020-12-01T12:38:55Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxws.3.2/src/org/apache/cxf/jaxws/ServiceImpl.java", "diffHunk": "@@ -0,0 +1,772 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.jaxws;\n+\n+import java.net.MalformedURLException;\n+import java.net.URI;\n+import java.net.URL;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.security.PrivilegedExceptionAction;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.ResourceBundle;\n+import java.util.concurrent.Executor;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import javax.jws.WebService;\n+import javax.wsdl.Definition;\n+import javax.wsdl.Port;\n+import javax.wsdl.extensions.ExtensibilityElement;\n+import javax.wsdl.extensions.http.HTTPAddress;\n+import javax.wsdl.extensions.soap.SOAPAddress;\n+import javax.wsdl.extensions.soap12.SOAP12Address;\n+import javax.wsdl.extensions.soap12.SOAP12Binding;\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.namespace.QName;\n+import javax.xml.ws.Dispatch;\n+import javax.xml.ws.EndpointReference;\n+import javax.xml.ws.Service.Mode;\n+import javax.xml.ws.WebServiceException;\n+import javax.xml.ws.WebServiceFeature;\n+import javax.xml.ws.handler.Handler;\n+import javax.xml.ws.handler.HandlerResolver;\n+import javax.xml.ws.soap.SOAPBinding;\n+import javax.xml.ws.spi.ServiceDelegate;\n+\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.BusException;\n+import org.apache.cxf.BusFactory;\n+import org.apache.cxf.binding.BindingFactoryManager;\n+import org.apache.cxf.binding.soap.wsdl.extensions.SoapAddress;\n+import org.apache.cxf.binding.soap.wsdl.extensions.SoapBinding;\n+import org.apache.cxf.common.i18n.Message;\n+import org.apache.cxf.common.i18n.UncheckedException;\n+import org.apache.cxf.common.logging.LogUtils;\n+import org.apache.cxf.common.util.PackageUtils;\n+import org.apache.cxf.common.util.StringUtils;\n+import org.apache.cxf.configuration.Configurer;\n+import org.apache.cxf.databinding.DataBinding;\n+import org.apache.cxf.databinding.source.SourceDataBinding;\n+import org.apache.cxf.endpoint.Client;\n+import org.apache.cxf.endpoint.ClientImpl;\n+import org.apache.cxf.endpoint.EndpointException;\n+import org.apache.cxf.endpoint.ServiceContractResolverRegistry;\n+import org.apache.cxf.feature.Feature;\n+import org.apache.cxf.frontend.ClientProxy;\n+import org.apache.cxf.helpers.CastUtils;\n+import org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;\n+import org.apache.cxf.jaxb.JAXBDataBinding;\n+import org.apache.cxf.jaxws.binding.soap.JaxWsSoapBindingConfiguration;\n+import org.apache.cxf.jaxws.handler.HandlerResolverImpl;\n+import org.apache.cxf.jaxws.handler.PortInfoImpl;\n+import org.apache.cxf.jaxws.spi.ProviderImpl;\n+import org.apache.cxf.jaxws.support.BindingID;\n+import org.apache.cxf.jaxws.support.DummyImpl;\n+import org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl;\n+import org.apache.cxf.jaxws.support.JaxWsEndpointImpl;\n+import org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean;\n+import org.apache.cxf.service.Service;\n+import org.apache.cxf.service.factory.AbstractServiceFactoryBean;\n+import org.apache.cxf.service.factory.ServiceConstructionException;\n+import org.apache.cxf.service.model.BindingInfo;\n+import org.apache.cxf.service.model.BindingOperationInfo;\n+import org.apache.cxf.service.model.EndpointInfo;\n+import org.apache.cxf.service.model.ServiceInfo;\n+import org.apache.cxf.service.model.ServiceModelUtil;\n+import org.apache.cxf.transport.DestinationFactory;\n+import org.apache.cxf.transport.DestinationFactoryManager;\n+import org.apache.cxf.ws.addressing.EndpointReferenceType;\n+import org.apache.cxf.ws.addressing.EndpointReferenceUtils;\n+import org.apache.cxf.wsdl.WSDLManager;\n+import org.apache.cxf.wsdl.http.AddressType;\n+import org.apache.cxf.wsdl.service.factory.ReflectionServiceFactoryBean;\n+import org.apache.cxf.wsdl11.WSDLServiceFactory;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3NzIwMA==", "bodyText": "No Liberty change comments in this class. What did you change from the vanilla CXF version?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533377200", "createdAt": "2020-12-01T12:39:12Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxws.3.2/src/org/apache/cxf/jaxws/handler/soap/SOAPHandlerInterceptor.java", "diffHunk": "@@ -0,0 +1,349 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.jaxws.handler.soap;\n+\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Set;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.soap.Node;\n+import javax.xml.soap.SOAPBody;\n+import javax.xml.soap.SOAPElement;\n+import javax.xml.soap.SOAPException;\n+import javax.xml.soap.SOAPHeader;\n+import javax.xml.soap.SOAPMessage;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.ws.Binding;\n+import javax.xml.ws.handler.Handler;\n+import javax.xml.ws.handler.MessageContext;\n+import javax.xml.ws.handler.soap.SOAPHandler;\n+import javax.xml.ws.handler.soap.SOAPMessageContext;\n+\n+import org.apache.cxf.binding.soap.HeaderUtil;\n+import org.apache.cxf.binding.soap.SoapMessage;\n+import org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor;\n+import org.apache.cxf.binding.soap.interceptor.SoapInterceptor;\n+import org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor;\n+import org.apache.cxf.binding.soap.saaj.SAAJInInterceptor;\n+import org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor;\n+import org.apache.cxf.binding.soap.saaj.SAAJUtils;\n+import org.apache.cxf.endpoint.Endpoint;\n+import org.apache.cxf.helpers.CastUtils;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.interceptor.Interceptor;\n+import org.apache.cxf.interceptor.InterceptorChain;\n+import org.apache.cxf.interceptor.OutgoingChainInterceptor;\n+import org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor;\n+import org.apache.cxf.jaxws.handler.HandlerChainInvoker;\n+import org.apache.cxf.message.Exchange;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.message.MessageImpl;\n+import org.apache.cxf.phase.Phase;\n+import org.apache.cxf.staxutils.StaxUtils;\n+import org.apache.cxf.transport.MessageObserver;\n+import org.apache.cxf.ws.addressing.Names;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3OTQxNw==", "bodyText": "No Liberty change comments in this class. What did you change from the vanilla CXF version?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533379417", "createdAt": "2020-12-01T12:43:09Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.wsdl.3.2/src/org/apache/cxf/wsdl/interceptor/DocLiteralInInterceptor.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.wsdl.interceptors;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.stream.XMLStreamConstants;\n+import javax.xml.stream.XMLStreamReader;\n+\n+import org.apache.cxf.common.logging.LogUtils;\n+import org.apache.cxf.databinding.DataReader;\n+import org.apache.cxf.endpoint.Endpoint;\n+import org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.message.Exchange;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.message.MessageContentsList;\n+import org.apache.cxf.message.MessageUtils;\n+import org.apache.cxf.phase.Phase;\n+import org.apache.cxf.service.Service;\n+import org.apache.cxf.service.model.BindingMessageInfo;\n+import org.apache.cxf.service.model.BindingOperationInfo;\n+import org.apache.cxf.service.model.MessageInfo;\n+import org.apache.cxf.service.model.MessagePartInfo;\n+import org.apache.cxf.service.model.OperationInfo;\n+import org.apache.cxf.service.model.ServiceInfo;\n+import org.apache.cxf.service.model.ServiceModelUtil;\n+import org.apache.cxf.staxutils.DepthXMLStreamReader;\n+import org.apache.cxf.staxutils.StaxUtils;\n+import org.apache.ws.commons.schema.XmlSchemaElement;\n+import org.apache.ws.commons.schema.constants.Constants;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3OTY4OQ==", "bodyText": "No Liberty change comments in this class. What did you change from the vanilla CXF version?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533379689", "createdAt": "2020-12-01T12:43:35Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.wsdl.3.2/src/org/apache/cxf/wsdl/service/factory/ReflectionServiceFactoryBean.java", "diffHunk": "@@ -0,0 +1,2626 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.wsdl.service.factory;\n+\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Array;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.GenericArrayType;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.ParameterizedType;\n+import java.lang.reflect.Proxy;\n+import java.lang.reflect.Type;\n+import java.lang.reflect.TypeVariable;\n+import java.net.MalformedURLException;\n+import java.net.URI;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.Executor;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import javax.wsdl.Operation;\n+import javax.xml.bind.annotation.XmlAttachmentRef;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlList;\n+import javax.xml.bind.annotation.XmlMimeType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import javax.xml.namespace.QName;\n+\n+import org.w3c.dom.DOMError;\n+import org.w3c.dom.DOMErrorHandler;\n+\n+import org.apache.cxf.BusException;\n+import org.apache.cxf.annotations.EvaluateAllEndpoints;\n+import org.apache.cxf.binding.BindingFactoryManager;\n+import org.apache.cxf.catalog.CatalogXmlSchemaURIResolver;\n+import org.apache.cxf.common.classloader.ClassLoaderUtils;\n+import org.apache.cxf.common.i18n.Message;\n+import org.apache.cxf.common.logging.LogUtils;\n+import org.apache.cxf.common.util.StringUtils;\n+import org.apache.cxf.common.util.SystemPropertyAction;\n+import org.apache.cxf.common.xmlschema.SchemaCollection;\n+import org.apache.cxf.common.xmlschema.XmlSchemaUtils;\n+import org.apache.cxf.databinding.DataBinding;\n+import org.apache.cxf.databinding.source.mime.MimeAttribute;\n+import org.apache.cxf.databinding.source.mime.MimeSerializer;\n+import org.apache.cxf.endpoint.Endpoint;\n+import org.apache.cxf.endpoint.EndpointException;\n+import org.apache.cxf.endpoint.EndpointImpl;\n+import org.apache.cxf.endpoint.ServiceContractResolverRegistry;\n+import org.apache.cxf.feature.Feature;\n+import org.apache.cxf.helpers.CastUtils;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.interceptor.FaultOutInterceptor;\n+import org.apache.cxf.message.Exchange;\n+import org.apache.cxf.resource.ResourceManager;\n+import org.apache.cxf.service.Service;\n+import org.apache.cxf.service.ServiceImpl;\n+import org.apache.cxf.service.ServiceModelSchemaValidator;\n+import org.apache.cxf.service.factory.FactoryBeanListener;\n+import org.apache.cxf.service.factory.FactoryBeanListener.Event;\n+import org.apache.cxf.service.factory.ServiceConstructionException;\n+import org.apache.cxf.service.factory.SimpleMethodDispatcher;\n+import org.apache.cxf.service.invoker.FactoryInvoker;\n+import org.apache.cxf.service.invoker.Invoker;\n+import org.apache.cxf.service.invoker.MethodDispatcher;\n+import org.apache.cxf.service.invoker.SingletonFactory;\n+import org.apache.cxf.service.model.AbstractMessageContainer;\n+import org.apache.cxf.service.model.BindingInfo;\n+import org.apache.cxf.service.model.BindingOperationInfo;\n+import org.apache.cxf.service.model.EndpointInfo;\n+import org.apache.cxf.service.model.FaultInfo;\n+import org.apache.cxf.service.model.InterfaceInfo;\n+import org.apache.cxf.service.model.MessageInfo;\n+import org.apache.cxf.service.model.MessagePartInfo;\n+import org.apache.cxf.service.model.OperationInfo;\n+import org.apache.cxf.service.model.SchemaInfo;\n+import org.apache.cxf.service.model.ServiceInfo;\n+import org.apache.cxf.service.model.UnwrappedOperationInfo;\n+import org.apache.cxf.wsdl.WSDLConstants;\n+import org.apache.cxf.wsdl11.WSDLServiceBuilder;\n+import org.apache.cxf.wsdl11.WSDLServiceFactory;\n+import org.apache.ws.commons.schema.XmlSchema;\n+import org.apache.ws.commons.schema.XmlSchemaComplexType;\n+import org.apache.ws.commons.schema.XmlSchemaElement;\n+import org.apache.ws.commons.schema.XmlSchemaExternal;\n+import org.apache.ws.commons.schema.XmlSchemaForm;\n+import org.apache.ws.commons.schema.XmlSchemaImport;\n+import org.apache.ws.commons.schema.XmlSchemaSequence;\n+import org.apache.ws.commons.schema.XmlSchemaType;\n+import org.apache.ws.commons.schema.constants.Constants;\n+import org.apache.ws.commons.schema.utils.NamespaceMap;\n+\n+\n+\n+/**\n+ * Introspects a class and builds a {@link Service} from it. If a WSDL URL is\n+ * specified, a Service model will be directly from the WSDL and then metadata\n+ * will be filled in from the service class. If no WSDL URL is specified, the\n+ * Service will be constructed directly from the class structure.\n+ */\n+//CHECKSTYLE:OFF:NCSS    -   This class is just huge and complex\n+public class ReflectionServiceFactoryBean extends org.apache.cxf.service.factory.AbstractServiceFactoryBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM4MDU3OQ==", "bodyText": "Why 1.0.0 instead of 2.0 like you had in the other bnd files?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r533380579", "createdAt": "2020-12-01T12:45:08Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.webservices.javaee.common/bnd.bnd", "diffHunk": "@@ -24,6 +24,7 @@ Private-Package: \\\n \n Import-Package: \\\n  javax.xml.ws.*;version=\"[2.2,3)\", \\\n+ com.ibm.ws.jaxws.* ;version=\"[1.0.0,3)\", \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6acc20fd1ba794ff76daa387c092f02af53f57d", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a6acc20fd1ba794ff76daa387c092f02af53f57d", "committedDate": "2020-11-30T15:49:41Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets\n\nMore code review comments\n\nMore code review comments\n\nremove wrong version change\n\nremove wrong version change\n\nMore code review changes\n\nUdno bnd.overrides typo\n\nDiable instrumentation to prevent unncessary FFDCs from being generating by custom JAX-RS execptions"}, "afterCommit": {"oid": "16a88ef8099870fb3887e2d8ef7708e612bd24f2", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/16a88ef8099870fb3887e2d8ef7708e612bd24f2", "committedDate": "2020-12-03T09:18:10Z", "message": "Code Review Changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73dcd098c478ec2b9c81940779089ce5bcf72cc7", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/73dcd098c478ec2b9c81940779089ce5bcf72cc7", "committedDate": "2020-12-03T09:38:56Z", "message": "fix merge problems"}, "afterCommit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/37d25f2714cff4b328891a449e17266aa2edf824", "committedDate": "2020-12-03T09:50:25Z", "message": "Code Review Changes\n\nfix merge problems\n\nFix missing artifact from merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTQ3MzYz", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-543947363", "createdAt": "2020-12-03T13:23:52Z", "commit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyMzo1MlrOH-bd0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyMzo1MlrOH-bd0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyMzc2MA==", "bodyText": "I thought for 2.3 we required activation 1.1 independent of java 9 or not because jaxb 2.3 requires activation 1.1.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r535223760", "createdAt": "2020-12-03T13:23:52Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.internal.optional.jaxb-2.3.feature", "diffHunk": "@@ -10,7 +10,7 @@ Subsystem-Name: Java XML Bindings 2.3 for all Java versions\n -features=\\\n   com.ibm.websphere.appserver.classloading-1.0\n -bundles=\\\n-  com.ibm.websphere.javaee.activation.1.1; location:=\"dev/api/spec/,lib/\"; apiJar=false, \\\n+  com.ibm.websphere.javaee.activation.1.1; require-java:=\"9\" ;location:=\"dev/api/spec/,lib/\"; apiJar=false, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTQ3NzMy", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-543947732", "createdAt": "2020-12-03T13:24:20Z", "commit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyNDoyMFrOH-bfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyNDoyMFrOH-bfHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNDA5Mg==", "bodyText": "I thought for 2.3 we required activation 1.1 independent of java 9 or not because jaxb 2.3 requires activation 1.1.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r535224092", "createdAt": "2020-12-03T13:24:20Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.optional.jaxb-2.3.feature", "diffHunk": "@@ -6,7 +6,7 @@ IBM-App-ForceRestart: uninstall, install\n IBM-Process-Types: client, server\n Subsystem-Name: Java XML Bindings 2.3\n IBM-API-Package: \\\n-  javax.activation; type=\"spec\", \\\n+  javax.activation; require-java:=\"9\"; type=\"spec\", \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTQ5Mzg0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-543949384", "createdAt": "2020-12-03T13:26:17Z", "commit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyNjoxOFrOH-bkSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyNjoxOFrOH-bkSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNTQxOA==", "bodyText": "If we don't export the packages for the application to use then how are they made available to the customer application?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r535225418", "createdAt": "2020-12-03T13:26:18Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jaxb-2.3/com.ibm.websphere.appserver.jaxb-2.3.feature", "diffHunk": "@@ -4,24 +4,13 @@ visibility=public\n singleton=true\n IBM-App-ForceRestart: uninstall, \\\n  install\n-IBM-API-Package: \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTU0MDc0", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-543954074", "createdAt": "2020-12-03T13:31:38Z", "commit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzozMTozOFrOH-byrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzozMTozOFrOH-byrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyOTEwMw==", "bodyText": "This logic doesn't work.  You will get an NPE if clientMetaData is null.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r535229103", "createdAt": "2020-12-03T13:31:38Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.common/src/com/ibm/ws/jaxws/client/LibertyProviderImpl.java", "diffHunk": "@@ -73,31 +73,25 @@ public ServiceDelegate createServiceDelegate(URL url, QName qname,\n             throw new IllegalStateException(e);\n         }\n         \n-        Bus bus = null;\n+\n+        final Bus bus;\n         JaxWsClientMetaData clientMetaData = JaxWsMetaDataManager.getJaxWsClientMetaData();\n-        if (clientMetaData != null) {\n+        boolean hasClientBus = (clientMetaData.getClientBus() != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37d25f2714cff4b328891a449e17266aa2edf824", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/37d25f2714cff4b328891a449e17266aa2edf824", "committedDate": "2020-12-03T09:50:25Z", "message": "Code Review Changes\n\nfix merge problems\n\nFix missing artifact from merge"}, "afterCommit": {"oid": "930439119c42755db35c506cc6ae242021a2462b", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/930439119c42755db35c506cc6ae242021a2462b", "committedDate": "2020-12-03T21:16:05Z", "message": "Code Review Changes\n\nfix merge problems\n\nFix missing artifact from merge\n\nMore code review changes to refactor jaxws-2.3\n\nReadd eecomptabile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDczODYy", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-544473862", "createdAt": "2020-12-03T21:42:45Z", "commit": {"oid": "930439119c42755db35c506cc6ae242021a2462b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTo0Mjo0NlrOH-1xAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTo0Mjo0NlrOH-1xAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY1NDY1Ng==", "bodyText": "Why are you removing these bundles in this feature.  I see that they are pulled in with internal.optional, but there is no maven coordinates settings with the internal optional feature.  And it isn't listed as an apiJar of course in the internal as well.  This is the feature that exposes the bundle.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r535654656", "createdAt": "2020-12-03T21:42:46Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jaxb-2.3/com.ibm.websphere.appserver.jaxb-2.3.feature", "diffHunk": "@@ -19,9 +19,6 @@ Subsystem-Name: Java XML Bindings 2.3\n -features=\\\n   com.ibm.websphere.appserver.classloading-1.0, \\\n   com.ibm.websphere.appserver.optional.jaxb-2.3\n--bundles=\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "930439119c42755db35c506cc6ae242021a2462b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDgxNjQ5", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-544481649", "createdAt": "2020-12-03T21:49:24Z", "commit": {"oid": "930439119c42755db35c506cc6ae242021a2462b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTo0OToyNVrOH-2Olg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTo0OToyNVrOH-2Olg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2MjIzMA==", "bodyText": "This auto feature goes away now doesn't it?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r535662230", "createdAt": "2020-12-03T21:49:25Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.jaxwscdi-2.3.feature", "diffHunk": "@@ -8,6 +8,6 @@ IBM-Provision-Capability: \\\n   osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=com.ibm.websphere.appserver.cdi-2.0))\"\n IBM-Install-Policy: when-satisfied", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "930439119c42755db35c506cc6ae242021a2462b"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a2905d2bdeb37d1dce875df1c4af4e0c7942a8b", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1a2905d2bdeb37d1dce875df1c4af4e0c7942a8b", "committedDate": "2020-12-03T22:27:26Z", "message": "remove jaxwscdi-2.3"}, "afterCommit": {"oid": "6a928ddd5d9622e484cc21ab05a5ae2c0ebf3a98", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6a928ddd5d9622e484cc21ab05a5ae2c0ebf3a98", "committedDate": "2020-12-03T22:47:02Z", "message": "remove autoprovisioning on jaxws-2.3\n\nReadd jaxb-2.3 changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTI4NzYw", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-544528760", "createdAt": "2020-12-03T22:52:26Z", "commit": {"oid": "6a928ddd5d9622e484cc21ab05a5ae2c0ebf3a98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a928ddd5d9622e484cc21ab05a5ae2c0ebf3a98", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6a928ddd5d9622e484cc21ab05a5ae2c0ebf3a98", "committedDate": "2020-12-03T22:47:02Z", "message": "remove autoprovisioning on jaxws-2.3\n\nReadd jaxb-2.3 changes"}, "afterCommit": {"oid": "9abf6a20245cd2d9b23da2eda5569cc61734b93c", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9abf6a20245cd2d9b23da2eda5569cc61734b93c", "committedDate": "2020-12-04T08:14:27Z", "message": "Code Review Changes\n\nfix merge problems\n\nFix missing artifact from merge\n\nMore code review changes to refactor jaxws-2.3\n\nReadd eecomptabile\n\nremove autoprovisioning on jaxws-2.3\n\nReadd jaxb-2.3 changes\n\nFat test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0OTQ1NDA3", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#pullrequestreview-544945407", "createdAt": "2020-12-04T13:11:30Z", "commit": {"oid": "9abf6a20245cd2d9b23da2eda5569cc61734b93c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoxMTozMFrOH_QRtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoxMTozMFrOH_QRtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4OTAxMw==", "bodyText": "Should this be 2.3?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14963#discussion_r536089013", "createdAt": "2020-12-04T13:11:30Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jaxws.2.3.wsat/bnd.bnd", "diffHunk": "@@ -0,0 +1,53 @@\n+#*******************************************************************************\n+# Copyright (c) 2017, 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+\n+bVersion=1.0\n+exportVer=2.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9abf6a20245cd2d9b23da2eda5569cc61734b93c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49820a9e33ec2681714c1a6948934639fade187d", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/49820a9e33ec2681714c1a6948934639fade187d", "committedDate": "2020-12-04T19:59:32Z", "message": "Update jaxws.2.3.common to implement missing methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e409d66d259bbabccb31b0811408c7eb2351b66", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9e409d66d259bbabccb31b0811408c7eb2351b66", "committedDate": "2020-12-04T19:59:33Z", "message": "Changes to support CXF jaxws-2.3 runtime updates\n\nWIP: fat changes for PB run\n\nUndo changes to jaxws.common by bad merge\n\nRevert \"Undo changes to jaxws.common by bad merge\"\n\nThis reverts commit 7331953aa59a9edd7eed6aa79ef2ca5bd41c3a44.\n\nRevert \"Update jaxws.2.3.common to implement missing methods\"\n\nThis reverts commit b083587f1bb1c3c408a17d4164d2961a3f720dfd.\n\nRevert \"WIP: fat changes for PB run\"\n\nThis reverts commit 3dc167ac029ff4b18b5219fd188d834e549d8e49.\n\nRevert \"Revert \"WIP: fat changes for PB run\"\"\n\nThis reverts commit 310fc06d4f435c45e9165af7ed6d35ddb851865f."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c548f5af67c48b09684a37ad9daf16ef1ddf764", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1c548f5af67c48b09684a37ad9daf16ef1ddf764", "committedDate": "2020-12-04T19:59:36Z", "message": "add wsat\n\njaxws-2.3 runtime and FAT updates\n\nmerge fixing\n\nadditional jaxws-2.3 code clean up changes\n\nAdd jaxws-2.3 changes for code review and more test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79d6222c9a42e081d8cb9d6943f6354c4accab41", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/79d6222c9a42e081d8cb9d6943f6354c4accab41", "committedDate": "2020-12-04T19:59:37Z", "message": "Update CXF versions to match CXF Core to fix failures in multiple jaxrs and jaxws buckets\n\nMore code review comments\n\nMore code review comments\n\nremove wrong version change\n\nremove wrong version change\n\nMore code review changes\n\nUdno bnd.overrides typo\n\nDiable instrumentation to prevent unncessary FFDCs from being generating by custom JAX-RS execptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "526a86baefbab145dfeab4ea411f84917a0fef72", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/526a86baefbab145dfeab4ea411f84917a0fef72", "committedDate": "2020-12-04T19:59:39Z", "message": "Code Review Changes\n\nfix merge problems\n\nFix missing artifact from merge\n\nMore code review changes to refactor jaxws-2.3\n\nReadd eecomptabile\n\nremove autoprovisioning on jaxws-2.3\n\nReadd jaxb-2.3 changes\n\nFat test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5719b538682d41b29d0bb769f6021c07156b588f", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5719b538682d41b29d0bb769f6021c07156b588f", "committedDate": "2020-12-04T19:59:43Z", "message": "Fix test repeat actions\n\nadd missing forServers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18308c29fe5fa9fcbe530f890be8ad0dd3f089bc", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/18308c29fe5fa9fcbe530f890be8ad0dd3f089bc", "committedDate": "2020-12-04T16:34:19Z", "message": "Fix test repeat actions"}, "afterCommit": {"oid": "5719b538682d41b29d0bb769f6021c07156b588f", "author": {"user": {"login": "neuwerk", "name": "Thomas Johnson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5719b538682d41b29d0bb769f6021c07156b588f", "committedDate": "2020-12-04T19:59:43Z", "message": "Fix test repeat actions\n\nadd missing forServers"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2816, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}