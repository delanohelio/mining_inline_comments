{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDU4Mjg2", "number": 15126, "title": "move away from shrinkwrapsharedserver", "bodyText": "This is part of https://wasrtc.hursley.ibm.com:9443/jazz/web/projects/WS-CD#action=com.ibm.team.workitem.viewWorkItem&id=279982\nUnlike my earlier impression moving from the outdated framework wont fix the issue, but its done now and good to move away from depreciated code.", "createdAt": "2020-11-30T10:43:39Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126", "merged": true, "mergeCommit": {"oid": "0a789fa5ffa38e2fb62e234222180ebdda83ad4c"}, "closed": true, "closedAt": "2020-12-01T10:33:53Z", "author": {"login": "benjamin-confino"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhjhW9gBqjQwNTE0MTgxNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh3ctCAFqTU0MTc2MjI0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eaf029a8e98e33e4f29b755229fed01d82ffa60d", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/eaf029a8e98e33e4f29b755229fed01d82ffa60d", "committedDate": "2020-11-30T10:41:15Z", "message": "move away from shrinkwrapsharedserver"}, "afterCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ca297da3c641962bac9de88225e8b44cad8283e8", "committedDate": "2020-11-30T11:19:37Z", "message": "move away from shrinkwrapsharedserver"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwODI1Mzc0", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#pullrequestreview-540825374", "createdAt": "2020-11-30T11:35:25Z", "commit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTozNToyNVrOH73KIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTo0ODowN1rOH73lWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzMTc0NA==", "bodyText": "You can take this line out and add @Server to the LibertyServer field instead.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532531744", "createdAt": "2020-11-30T11:35:25Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -26,28 +27,34 @@\n import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n import org.jboss.shrinkwrap.api.spec.WebArchive;\n \n-import com.ibm.ws.fat.util.BuildShrinkWrap;\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+import com.ibm.websphere.simplicity.ShrinkHelper.DeployOptions;\n import com.ibm.ws.fat.util.LoggingTest;\n-import com.ibm.ws.fat.util.ShrinkWrapSharedServer;\n+import com.ibm.ws.fat.util.SharedServer;\n import com.ibm.ws.fat.util.browser.WebBrowser;\n+import com.ibm.ws.fat.util.browser.WebBrowserException;\n+import com.ibm.ws.fat.util.browser.WebBrowserFactory;\n+import com.ibm.ws.fat.util.browser.WebResponse;\n \n import componenttest.annotation.ExpectedFFDC;\n import componenttest.custom.junit.runner.Mode;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n \n public class BeanDiscoveryModeNoneTest extends LoggingTest {\n \n-    @ClassRule\n-    // Create the server.\n-    public static ShrinkWrapSharedServer SHARED_SERVER = new ShrinkWrapSharedServer(\"cdi12BeanDiscoveryModeNoneServer\");\n+    private static LibertyServer server;\n \n-    @BuildShrinkWrap\n-    public static Archive buildShrinkWrap() {\n-         \n-         return ShrinkWrap.create(WebArchive.class, \"beanDiscoveryModeNone.war\")\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+         server = LibertyServerFactory.getLibertyServer(\"cdi12BeanDiscoveryModeNoneServer\"); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzMTk2NA==", "bodyText": "I think you need @RunWith(FATRunner.class) here", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532531964", "createdAt": "2020-11-30T11:35:49Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -26,28 +27,34 @@\n import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n import org.jboss.shrinkwrap.api.spec.WebArchive;\n \n-import com.ibm.ws.fat.util.BuildShrinkWrap;\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+import com.ibm.websphere.simplicity.ShrinkHelper.DeployOptions;\n import com.ibm.ws.fat.util.LoggingTest;\n-import com.ibm.ws.fat.util.ShrinkWrapSharedServer;\n+import com.ibm.ws.fat.util.SharedServer;\n import com.ibm.ws.fat.util.browser.WebBrowser;\n+import com.ibm.ws.fat.util.browser.WebBrowserException;\n+import com.ibm.ws.fat.util.browser.WebBrowserFactory;\n+import com.ibm.ws.fat.util.browser.WebResponse;\n \n import componenttest.annotation.ExpectedFFDC;\n import componenttest.custom.junit.runner.Mode;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n \n public class BeanDiscoveryModeNoneTest extends LoggingTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzMzI0Mw==", "bodyText": "If you're not using getSharedServer() then I guess you're not using any of the methods on LoggingTest either?\nIn that case you can probably stop extending LoggingTest.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532533243", "createdAt": "2020-11-30T11:38:19Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -56,19 +63,25 @@ public static Archive buildShrinkWrap() {\n      * @see com.ibm.ws.fat.LoggingTest#getSharedServer()\n      */\n     @Override\n-    protected ShrinkWrapSharedServer getSharedServer() {\n-        return SHARED_SERVER;\n+    protected SharedServer getSharedServer() {\n+        return null;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzNDUzNA==", "bodyText": "I don't think you need this if block (server will never be null and if the server is not started then stopServer() will just print a message and return)", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532534534", "createdAt": "2020-11-30T11:40:29Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -56,19 +63,25 @@ public static Archive buildShrinkWrap() {\n      * @see com.ibm.ws.fat.LoggingTest#getSharedServer()\n      */\n     @Override\n-    protected ShrinkWrapSharedServer getSharedServer() {\n-        return SHARED_SERVER;\n+    protected SharedServer getSharedServer() {\n+        return null;\n     }\n \n     @Test\n     @ExpectedFFDC({ \"javax.servlet.UnavailableException\", \"com.ibm.wsspi.injectionengine.InjectionException\" })\n     public void testcorrectExceptionThrown() throws Exception {\n-        this.verifyStatusCode(\"/beanDiscoveryModeNone/TestServlet\", 404);\n+        WebBrowser webBrowser = WebBrowserFactory.getInstance().createWebBrowser((File) null);\n+        int statusCode = 404;\n+        int actualStatusCode = webBrowser.request(createURL(\"/beanDiscoveryModeNone/TestServlet\"), statusCode);\n+\n+        if (actualStatusCode != statusCode) {\n+            throw new WebBrowserException(\"The expected status code was not thrown.  Expected \" + statusCode + \", was \" + actualStatusCode);\n+        }\n     }\n \n     @AfterClass\n     public static void tearDown() throws Exception {\n-        if (SHARED_SERVER != null && SHARED_SERVER.getLibertyServer().isStarted()) {\n+        if (server != null && server.isStarted()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzODcxNQ==", "bodyText": "We have a class HttpRequest which can create the URL for you and is a little simpler.\nI think you'd do\nnew HttpRequest(server, \"/beanDiscoveryModeNone/TestServlet\").expectCode(404).run(String.class);", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532538715", "createdAt": "2020-11-30T11:48:07Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -56,19 +63,25 @@ public static Archive buildShrinkWrap() {\n      * @see com.ibm.ws.fat.LoggingTest#getSharedServer()\n      */\n     @Override\n-    protected ShrinkWrapSharedServer getSharedServer() {\n-        return SHARED_SERVER;\n+    protected SharedServer getSharedServer() {\n+        return null;\n     }\n \n     @Test\n     @ExpectedFFDC({ \"javax.servlet.UnavailableException\", \"com.ibm.wsspi.injectionengine.InjectionException\" })\n     public void testcorrectExceptionThrown() throws Exception {\n-        this.verifyStatusCode(\"/beanDiscoveryModeNone/TestServlet\", 404);\n+        WebBrowser webBrowser = WebBrowserFactory.getInstance().createWebBrowser((File) null);\n+        int statusCode = 404;\n+        int actualStatusCode = webBrowser.request(createURL(\"/beanDiscoveryModeNone/TestServlet\"), statusCode);\n+\n+        if (actualStatusCode != statusCode) {\n+            throw new WebBrowserException(\"The expected status code was not thrown.  Expected \" + statusCode + \", was \" + actualStatusCode);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "committedDate": "2020-11-30T12:07:36Z", "message": "move away from shrinkwrapsharedserver"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca297da3c641962bac9de88225e8b44cad8283e8", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ca297da3c641962bac9de88225e8b44cad8283e8", "committedDate": "2020-11-30T11:19:37Z", "message": "move away from shrinkwrapsharedserver"}, "afterCommit": {"oid": "c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "committedDate": "2020-11-30T12:07:36Z", "message": "move away from shrinkwrapsharedserver"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzYyMjQ3", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#pullrequestreview-541762247", "createdAt": "2020-12-01T10:32:52Z", "commit": {"oid": "c223e1b6193b2a64b77b0eee4249f9c2b45a96aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2702, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}