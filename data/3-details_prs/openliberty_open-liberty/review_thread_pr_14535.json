{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MDU3Mjg3", "number": 14535, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDo1NTozNVrOEwzs9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTowMTo1MlrOEwz4xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjE0MTk3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.messaging.open_jms20_fat/publish/files/EJBMDB_server.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDo1NTozNVrOHml94A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjowNDowNlrOHmpHgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyOTk4NA==", "bodyText": "I've been commenting these out once the tests are running.  Not sure if it is better to leave the trace enabled (for quicker debugging problems) or to have the trace present but commented out (for faster test runs).", "url": "https://github.com/OpenLiberty/open-liberty/pull/14535#discussion_r510229984", "createdAt": "2020-10-22T14:55:35Z", "author": {"login": "tbitonti"}, "path": "dev/com.ibm.ws.messaging.open_jms20_fat/publish/files/EJBMDB_server.xml", "diffHunk": "@@ -20,16 +20,17 @@\n   <variable name=\"onError\" value=\"FAIL\"/>\n \n   <logging ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2523a436cab9bf686112e792f80990d4c55e8b23"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI4MTYwMA==", "bodyText": "Will comment out the logging element.  Thanks.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14535#discussion_r510281600", "createdAt": "2020-10-22T16:04:06Z", "author": {"login": "dazavala"}, "path": "dev/com.ibm.ws.messaging.open_jms20_fat/publish/files/EJBMDB_server.xml", "diffHunk": "@@ -20,16 +20,17 @@\n   <variable name=\"onError\" value=\"FAIL\"/>\n \n   <logging ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyOTk4NA=="}, "originalCommit": {"oid": "2523a436cab9bf686112e792f80990d4c55e8b23"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjE3MjIyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.messaging.open_jms20_fat/fat/src/com/ibm/ws/messaging/JMS20/fat/SharedSubscription/SharedSubscriptionWithMsgSelTest_129623.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTowMTo1MlrOHmmRNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjozNToyM1rOHmqbTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNDkzNA==", "bodyText": "Doesn't the usual server transformation steps handle this file?  Or is it not transformed because it is not under the 'servers' folder?  Also, there are some helper methods, either on LibertyServer or on ShrinkWrapHelper which may do something similar.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14535#discussion_r510234934", "createdAt": "2020-10-22T15:01:52Z", "author": {"login": "tbitonti"}, "path": "dev/com.ibm.ws.messaging.open_jms20_fat/fat/src/com/ibm/ws/messaging/JMS20/fat/SharedSubscription/SharedSubscriptionWithMsgSelTest_129623.java", "diffHunk": "@@ -85,27 +79,33 @@ private static String getLocalAddress() {\n     }\n \n     private static boolean runInServlet(String test) throws IOException {\n-        return TestUtils.runInServlet( clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress() );\n+        return TestUtils.runInServlet(clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress());\n         // throws IOException\n     }\n \n-    //\n-\n     @BeforeClass\n     public static void testConfigFileChange() throws Exception {\n         engineServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         engineServer.setServerConfigurationFile(\"SharedSubscriptionEngine.xml\");\n \n         clientServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         TestUtils.addDropinsWebApp(clientServer, subscriptionAppName, subscriptionPackages);\n-        clientServer.setServerConfigurationFile(\"SharedSubscriptionDurClient.xml\");\n+        final String clientXml = \"SharedSubscriptionDurClient.xml\";\n+        if (JakartaEE9Action.isActive()) {\n+            Path clientXmlFile = Paths.get(\n+                                           \"lib/LibertyFATTestFiles\",\n+                                           clientXml);\n+            JakartaEE9Action.transformApp(clientXmlFile);\n+            Log.info(c, \"setUp\", \"Transformed server \" + clientXmlFile);\n+        }\n+        clientServer.setServerConfigurationFile(clientXml);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2523a436cab9bf686112e792f80990d4c55e8b23"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI4MTE3MA==", "bodyText": "Simplicity does not invoke the transformer on server.xml files, at least not yet.  The most simple solution is to invoke the transformer directly on the server configuration file and ensure the file name and match-replace properties are in the transformer property set.  That's what I've done here.  @KyleAure Simplicity can be modified to transform server and client configuration files, and there a couple ways this can be done.  Simplicity could scan the publish/ and publish/server/ directories for xml files and transform all that match file names declared in a repeat action builder method, where the transformer is called with arg1=properties file containing the file name(s) and arg2=properties file containing match-replace values for all config metatypes.  Not all server configuration files need transformation.  Alternatively, Simplicity could directly replace matching strings in the ServerConfiguration instance that is created when replacing features.  When the instance is streamed to file all necessary transformation has been done -- i.e., there's no need to invoke the transformer, which is expensive.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14535#discussion_r510281170", "createdAt": "2020-10-22T16:03:25Z", "author": {"login": "dazavala"}, "path": "dev/com.ibm.ws.messaging.open_jms20_fat/fat/src/com/ibm/ws/messaging/JMS20/fat/SharedSubscription/SharedSubscriptionWithMsgSelTest_129623.java", "diffHunk": "@@ -85,27 +79,33 @@ private static String getLocalAddress() {\n     }\n \n     private static boolean runInServlet(String test) throws IOException {\n-        return TestUtils.runInServlet( clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress() );\n+        return TestUtils.runInServlet(clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress());\n         // throws IOException\n     }\n \n-    //\n-\n     @BeforeClass\n     public static void testConfigFileChange() throws Exception {\n         engineServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         engineServer.setServerConfigurationFile(\"SharedSubscriptionEngine.xml\");\n \n         clientServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         TestUtils.addDropinsWebApp(clientServer, subscriptionAppName, subscriptionPackages);\n-        clientServer.setServerConfigurationFile(\"SharedSubscriptionDurClient.xml\");\n+        final String clientXml = \"SharedSubscriptionDurClient.xml\";\n+        if (JakartaEE9Action.isActive()) {\n+            Path clientXmlFile = Paths.get(\n+                                           \"lib/LibertyFATTestFiles\",\n+                                           clientXml);\n+            JakartaEE9Action.transformApp(clientXmlFile);\n+            Log.info(c, \"setUp\", \"Transformed server \" + clientXmlFile);\n+        }\n+        clientServer.setServerConfigurationFile(clientXml);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNDkzNA=="}, "originalCommit": {"oid": "2523a436cab9bf686112e792f80990d4c55e8b23"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5MTQ4OQ==", "bodyText": "Thanks for the heads up!  I have a PR that does option 1 (calls the transformer on server.xml) here: #14397  but as you mentioned this is an expensive operation to do for each server.xml.  However, it does offer us more control in what we are replacing since not ever instance of javax should be replaced (i.e. javax.sql.XADataSource)\nDirectly replacing strings could work, but the feature replacement action knows it needs to replace config under FeatureManager > Features.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14535#discussion_r510291489", "createdAt": "2020-10-22T16:18:10Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.messaging.open_jms20_fat/fat/src/com/ibm/ws/messaging/JMS20/fat/SharedSubscription/SharedSubscriptionWithMsgSelTest_129623.java", "diffHunk": "@@ -85,27 +79,33 @@ private static String getLocalAddress() {\n     }\n \n     private static boolean runInServlet(String test) throws IOException {\n-        return TestUtils.runInServlet( clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress() );\n+        return TestUtils.runInServlet(clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress());\n         // throws IOException\n     }\n \n-    //\n-\n     @BeforeClass\n     public static void testConfigFileChange() throws Exception {\n         engineServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         engineServer.setServerConfigurationFile(\"SharedSubscriptionEngine.xml\");\n \n         clientServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         TestUtils.addDropinsWebApp(clientServer, subscriptionAppName, subscriptionPackages);\n-        clientServer.setServerConfigurationFile(\"SharedSubscriptionDurClient.xml\");\n+        final String clientXml = \"SharedSubscriptionDurClient.xml\";\n+        if (JakartaEE9Action.isActive()) {\n+            Path clientXmlFile = Paths.get(\n+                                           \"lib/LibertyFATTestFiles\",\n+                                           clientXml);\n+            JakartaEE9Action.transformApp(clientXmlFile);\n+            Log.info(c, \"setUp\", \"Transformed server \" + clientXmlFile);\n+        }\n+        clientServer.setServerConfigurationFile(clientXml);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNDkzNA=="}, "originalCommit": {"oid": "2523a436cab9bf686112e792f80990d4c55e8b23"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwMzA1NA==", "bodyText": "Yes, that's the idea.  Augment the ee9 repeat action to replace strings in config elements other than <FeatureManager> according to, say a new builder method, before the ServerConfiguration is streamed to file.  Any solution will have full control over what is transformed.  Even if the repeat action is modified to perform separate operations to replace features and other config, the two operations are still much less costly than invoking the transformer.  Something to consider.  What I like about using the transformer is the consistency of using it for both config metatype metadata and server/client configuration metadata.  Thanks!", "url": "https://github.com/OpenLiberty/open-liberty/pull/14535#discussion_r510303054", "createdAt": "2020-10-22T16:35:23Z", "author": {"login": "dazavala"}, "path": "dev/com.ibm.ws.messaging.open_jms20_fat/fat/src/com/ibm/ws/messaging/JMS20/fat/SharedSubscription/SharedSubscriptionWithMsgSelTest_129623.java", "diffHunk": "@@ -85,27 +79,33 @@ private static String getLocalAddress() {\n     }\n \n     private static boolean runInServlet(String test) throws IOException {\n-        return TestUtils.runInServlet( clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress() );\n+        return TestUtils.runInServlet(clientHostName, clientPort, subscriptionContextRoot, test, getLocalAddress());\n         // throws IOException\n     }\n \n-    //\n-\n     @BeforeClass\n     public static void testConfigFileChange() throws Exception {\n         engineServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         engineServer.setServerConfigurationFile(\"SharedSubscriptionEngine.xml\");\n \n         clientServer.copyFileToLibertyInstallRoot(\n-            \"lib/features\",\n-            \"features/testjmsinternals-1.0.mf\");\n+                                                  \"lib/features\",\n+                                                  \"features/testjmsinternals-1.0.mf\");\n         TestUtils.addDropinsWebApp(clientServer, subscriptionAppName, subscriptionPackages);\n-        clientServer.setServerConfigurationFile(\"SharedSubscriptionDurClient.xml\");\n+        final String clientXml = \"SharedSubscriptionDurClient.xml\";\n+        if (JakartaEE9Action.isActive()) {\n+            Path clientXmlFile = Paths.get(\n+                                           \"lib/LibertyFATTestFiles\",\n+                                           clientXml);\n+            JakartaEE9Action.transformApp(clientXmlFile);\n+            Log.info(c, \"setUp\", \"Transformed server \" + clientXmlFile);\n+        }\n+        clientServer.setServerConfigurationFile(clientXml);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNDkzNA=="}, "originalCommit": {"oid": "2523a436cab9bf686112e792f80990d4c55e8b23"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2616, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}