{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTI4MDM1", "number": 12452, "title": "Update Monitor SimpleTimer and the REST Stat Mbean to track high/low time durations effectively", "bodyText": "Definition:\nLatest minute - The latest minute is the latest/last, most-recent, minute in which values were recorded. It can be the current-instantaneous minute or a complete minute x-minutes ago (x >= 1).\nPrevious minute - The previous minute is the minute previous to the latest minute. It can be y minutes prior to the latest minute). (y >= 1)\n\nMetrics-Monitor / MBean behavious:\nThe mechanism behind the metrics monitor bundle (i.e for vendor metrics (and REST base metrics)) is to utilize MBeans. The metrics-monitor bundle implements their own versions of the metric interfaces which retrieve value by querying the appropriate MBeans when the metrics endpoint is queried. The update of Mbean values and the querying of the metric values are not synchronized. They can be dramatically staggered or imbalanced.\n\nThis PR serves to introduce the minimum and maximum elapsed time duration tracking for the REST stat metrics. This is a feature of the simple timer that the MP Metrics 3.0 specification has defined. It will display the min/max of the previous complete minute for a duration of one complete minute as well.\nNote that the last and most recent complete minute does not necessarily mean the minute immediately prior to the \"current/instantaneous\" one. It is a recorded minute that is \"complete\" (i.e 12:00:00 - 12:00:59) that is prior to the current/instantaneous minute.  This is similar to the high/low - min/max behavior of concurrent gauge. The previous complete minute is not necessary the current minute - 1. This is so that whatever monitoring tool is running can get the most recent data whenever it queries (potentially 2 or more minutes after).\nThe REST Mbean is now  introduced with the latest and previous min/max values. Ideally the Mbean is constantly updated so that the latest value is the current minute's value and the previous value is the last complete minute. Ideally we will always query the \"previous\" value. Also ideally, the /metrics endpoint is queried constantly enough that we do not lose a previous value in reporting.\nBut however, due to high probability of imbalanced updating (i.e REST endpoint hit at various times) and the /metrics endpoint being queried at irregular times this poses an issue for retrieving and displaying the SimpleTimer's minimum and maximum recorded values of the most recent complete minute.\nThe main issue that arises is that the Mbean (i.e REST endpoint) is only ever updated once (REST endpoint hit once) and we need to account for that by obtaining that \"latest\" value when appropriate.\nA variation of that is that the last REST hit and subsequent Mbean  update needs to be presented on the /metrics endpoint at the appropriate time (i.e after the complete minute is finished and the subsequent metrics query is invoked)\nAnother issue that can arise is if we're using the Mbean's latest value as it is now the most recent complete minute and the Mbean is updated. We will need to account for the value shift and still report the value until the minute is complete.\nThe logic to handle this is purely in the MonitorSimpleTimer.java. The REST/JAX-RS code purely updates the latest and previous values as appropriate.", "createdAt": "2020-06-01T17:54:17Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452", "merged": true, "mergeCommit": {"oid": "8da0aa16eef696b19e2b247741dd3e3d4f860506"}, "closed": true, "closedAt": "2020-06-17T14:53:57Z", "author": {"login": "Channyboy"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnEKcCgBqjMzOTQyNTg2MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcri7Z4gFqTQzMDc4ODMyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53fa5505cf8651e161441515c6cd4aec0e0f0e23", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/53fa5505cf8651e161441515c6cd4aec0e0f0e23", "committedDate": "2020-06-01T17:56:43Z", "message": "formatting 1"}, "afterCommit": {"oid": "fff730e87eab9377bb0737235d5147b75a0d1118", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fff730e87eab9377bb0737235d5147b75a0d1118", "committedDate": "2020-06-01T17:59:56Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fff730e87eab9377bb0737235d5147b75a0d1118", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fff730e87eab9377bb0737235d5147b75a0d1118", "committedDate": "2020-06-01T17:59:56Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively"}, "afterCommit": {"oid": "82c55180da0548f96afc63bc60448ba776350c5c", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/82c55180da0548f96afc63bc60448ba776350c5c", "committedDate": "2020-06-01T18:03:59Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82c55180da0548f96afc63bc60448ba776350c5c", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/82c55180da0548f96afc63bc60448ba776350c5c", "committedDate": "2020-06-01T18:03:59Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively"}, "afterCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb", "committedDate": "2020-06-01T18:07:00Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjIxODA1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422221805", "createdAt": "2020-06-01T22:22:22Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyMjoyMlrOGdcBsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyMjoyMlrOGdcBsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMTA3Mw==", "bodyText": "Does \"the latest minute\" sound better?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433521073", "createdAt": "2020-06-01T22:22:22Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 132}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjI2NTE4", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422226518", "createdAt": "2020-06-01T22:34:02Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjozNDowMlrOGdcQ3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjozNDowMlrOGdcQ3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyNDk1Nw==", "bodyText": "Mix of tab and space messed up the indentation in github.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433524957", "createdAt": "2020-06-01T22:34:02Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/JaxRsMonitorFilter.java", "diffHunk": "@@ -135,8 +139,48 @@ public void filter(ContainerRequestContext reqCtx, ContainerResponseContext resp\n             //Store the response time for the resource method.\n             stats.updateRT(elapsedTime < 0 ? 0 : elapsedTime);\n         \t\n-        }\n+            \n+\t\t\t// Figure out min/max", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjMzNjcx", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422233671", "createdAt": "2020-06-01T22:52:48Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1Mjo0OVrOGdcn3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1Mjo0OVrOGdcn3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMDg0Ng==", "bodyText": "Irregular indentation", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433530846", "createdAt": "2020-06-01T22:52:49Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "diffHunk": "@@ -155,10 +222,82 @@ public Counter getRequestCountDetails() {\n      * Type = StatisticMeter.\n      * Data: mean, min, max, description, unit\n      **/\n-\n     @Override\n     public StatisticsMeter getResponseTimeDetails() {\n         return this.responseTime;\n     }\n+    \n+    \n+    /**\n+     * Method getMinutePreviousMinimumDuration()\n+     * This is returning the details for the minimum\n+     * timed duration of the previous complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinutePreviousMinimumDuration() {\n+        return this.minutePreviousMinimumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinutePreviousMaximumDuration\n+     * This is returning the details for the maximum\n+     * timed duration of the previous complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinutePreviousMaximumDuration() {\n+        return this.minutePreviousMaximumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinuteLatestMinimumDuration()\n+     * This is returning the details for the minimum\n+     * timed duration of the latest complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinuteLatestMinimumDuration() {\n+        return this.minuteLatestMinimumDuration;\n+    }\n+    \n+    /**\n+     * Method getMinuteLatestMaximumDuration()\n+     * This is returning the details for the maximum\n+     * timed duration of the latest complete minute\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+    @Override\n+    public Gauge getMinuteLatestMaximumDuration() {\n+        return this.minuteLatestMaximumDuration;\n+    }\n+\n+    /**\n+     * Method getMinuteLatest()\n+     * This is returning the details for the latest\n+     * minute (measured in minutes since epoch)\n+     * Type = Gauge.\n+     * Data: currentValue\n+     */\n+\t@Override\n+\tpublic Gauge getMinuteLatest() {\n+\t\treturn this.minuteLatest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 174}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjkyMjQ5", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422292249", "createdAt": "2020-06-02T01:56:50Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo1Njo1MFrOGdfmpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo1Njo1MFrOGdfmpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3OTY4NQ==", "bodyText": "Use of min to represent both minimum and minute may be confusing to readers.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433579685", "createdAt": "2020-06-02T01:56:50Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/ws/jaxrs/monitor/REST_Stats.java", "diffHunk": "@@ -138,6 +180,31 @@ public void updateRT(long elapsed) {\n         this.responseTime.addDataPoint(elapsed);\n     }\n \n+    \n+    public void updateMinutePreviousMaximumDuration(long max) {\n+        this.minutePreviousMaximumDuration.setCurrentValue(max);\n+    }\n+    \n+    public void updateMinutePreviousMinimumDuration(long min) {\n+        this.minutePreviousMinimumDuration.setCurrentValue(min);\n+    }\n+    \n+    public void updateMinutePrevious(long min) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjk1Nzg0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422295784", "createdAt": "2020-06-02T02:09:16Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjowOToxNlrOGdfxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjowOToxNlrOGdfxtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MjUxNg==", "bodyText": "inconsistent variable names", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433582516", "createdAt": "2020-06-02T02:09:16Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.microprofile.metrics.3.0.monitor/src/com/ibm/ws/microprofile/metrics/monitor/MonitorSimpleTimer.java", "diffHunk": "@@ -33,30 +33,29 @@\n     \n     HashSet<Long> usedTimes = new HashSet<Long>();\n \n-    private long cachedMaxOldMinute = 0L;\n-    private long cachedMinOldMinute = 0L;\n-    private long cachedMaxCurrentMinute = 0L;\n-    private long cachedMinCurrentMinute = 0L;\n+    private long cachedMBPreviousMinute_max = 0L;\n+    private long cachedMBPreviousMinute_min = 0L;\n+    private long cachedMBLatestMinute_max = 0L;\n+    private long cachedMBLatestMinute_min = 0L;\n     \n-    private long displayMaxCurrent_thisMinute = 0L;\n-    private long displayMinCurrent_thisMinute = 0L;\n-    private long displayMaxCurrent_thisMinute_val = 0L;\n-    private long displayMinCurrent_thisMinute_val = 0L;\n+    private long displayMaxLatest_forThisMinute = 0L;\n+    private long displayMinLatest_forThisMinute = 0L;\n+    private long displayMaxLatest_forThisMinute_val = 0L;\n+    private long displayMinLatest_forThisMinute_val = 0L;\n     \n     \n-    private long displayMaxOld_thisMinute = 0L;\n-    private long displayMinOld_thisMinute = 0L;\n+    private long displayMaxPrev_forThisMinute = 0L;\n+    private long displayMinPrev_forThisMinute = 0L;\n     \n-    private long minCurrent;\n-    private long maxCurrent;\n+    private long mbean_latest_min;\n+    private long mbean_latest_max;\n+    private long mbean_latestMinute;\n     \n-    private long minuteCurrent;\n-\n-    private long rollingBaseMinute = 0L;\n+    private long mbean_previous_min;\n+    private long mbean_prev_max;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzAwNDQ3", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422300447", "createdAt": "2020-06-02T02:25:06Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoyNTowNlrOGdgAhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoyNTowNlrOGdgAhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4NjMwOQ==", "bodyText": "These are API breaking changes!", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r433586309", "createdAt": "2020-06-02T02:25:06Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/RestStatsMXBean.java", "diffHunk": "@@ -12,63 +12,131 @@\n \n import com.ibm.websphere.monitor.jmx.Counter;\n import com.ibm.websphere.monitor.jmx.StatisticsMeter;\n+import com.ibm.websphere.monitor.meters.Gauge;\n \n /**\n- * Management12 interface for MBeans with names of the form \"WebSphere:type=RestStats,name=*\"\n- * where * is the name of a RESTful resource method within an application under the Liberty profile of the form <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such MBean for each resource method in the system is available\n- * from the Liberty profile platform MBean server when the monitor-1.0 feature is enabled. This interface can be used to request a proxy object via the {@link javax.management.JMX#newMMBeanProxy} method.\n+ * Management12 interface for MBeans with names of the form\n+ * \"WebSphere:type=RestStats,name=*\" where * is the name of a RESTful resource\n+ * method within an application under the Liberty profile of the form\n+ * <appName>.<resourceMethodName>. For example, myApp.DemoResource. One such\n+ * MBean for each resource method in the system is available from the Liberty\n+ * profile platform MBean server when the monitor-1.0 feature is enabled. This\n+ * interface can be used to request a proxy object via the\n+ * {@link javax.management.JMX#newMMBeanProxy} method.\n  * \n  * @ibm-api\n  */\n public interface RestStatsMXBean {\n \n-    /**\n-     * Retrieves the value of the read-only attribute Description, which is a description of the MBean itself.\n-     * \n-     * @return description\n-     */\n-    public String getDescription();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute MethodName, the name of the resource method as specified in the deployment descriptor.\n-     * \n-     * @return method name\n-     */\n-    public String getMethodName();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCount, the number of requests the server has received for this resource method.\n-     * \n-     * @return request count\n-     */\n-    public long getRequestCount();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute RequestCountDetails, which provides other details on the request count.\n-     * \n-     * @return request count details\n-     */\n-    public Counter getRequestCountDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseTime, which is the average (mean) time spent responding to each request for the resource method.\n-     * \n-     * @return response time\n-     */\n-    public double getResponseTime();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute ResponseCountDetails, which provides statistical details on the response time.\n-     * \n-     * @return response time details\n-     */\n-    public StatisticsMeter getResponseTimeDetails();\n-\n-    /**\n-     * Retrieves the value of the read-only attribute AppName, the name of the application of which the resource method belongs.\n-     * \n-     * @return app name\n-     */\n-    public String getAppName();\n+\t/**\n+\t * Retrieves the value of the read-only attribute Description, which is a\n+\t * description of the MBean itself.\n+\t * \n+\t * @return description\n+\t */\n+\tpublic String getDescription();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MethodName, the name of the\n+\t * resource method as specified in the deployment descriptor.\n+\t * \n+\t * @return method name\n+\t */\n+\tpublic String getMethodName();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCount, the number of\n+\t * requests the server has received for this resource method.\n+\t * \n+\t * @return request count\n+\t */\n+\tpublic long getRequestCount();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute RequestCountDetails, which\n+\t * provides other details on the request count.\n+\t * \n+\t * @return request count details\n+\t */\n+\tpublic Counter getRequestCountDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseTime, which is the\n+\t * average (mean) time spent responding to each request for the resource method.\n+\t * \n+\t * @return response time\n+\t */\n+\tpublic double getResponseTime();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute ResponseCountDetails, which\n+\t * provides statistical details on the response time.\n+\t * \n+\t * @return response time details\n+\t */\n+\tpublic StatisticsMeter getResponseTimeDetails();\n+\n+\t/**\n+\t * Retrieves the value of the read-only attribute MinuteLatestMinimumDuration,\n+\t * which provides details of the minimum duration of the latest, most-recently,\n+\t * recorded complete minute (latest minute can be on-going and not \"complete\" \n+\t * if mbean is being updated in the current minute).\n+\t * \n+\t * @return minimum elapsed duration of latest minute\n+\t */\n+\tpublic Gauge getMinuteLatestMinimumDuration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzAwOTcy", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-422300972", "createdAt": "2020-06-02T02:26:49Z", "commit": {"oid": "8e037b1aa0b80f9a0ec65e9bf198c846dcfa97eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95a832084102e9dce18c9b8873266c0a22eade23", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/95a832084102e9dce18c9b8873266c0a22eade23", "committedDate": "2020-06-08T16:44:38Z", "message": "Address comments: indentation, grammer update, variable consistency"}, "afterCommit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cbfb61eea281ba9eb4bf5041b575380023d8059e", "committedDate": "2020-06-10T16:36:01Z", "message": "Update Gauge usage of RestStatsMXBean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTI2MzQy", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-429126342", "createdAt": "2020-06-11T17:23:59Z", "commit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoyMzo1OVrOGinR0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoyMzo1OVrOGinR0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0ODMwNg==", "bodyText": "Version to 1.1 instead of 2.0 as requested.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r438948306", "createdAt": "2020-06-11T17:23:59Z", "author": {"login": "Channyboy"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/package-info.java", "diffHunk": "@@ -11,5 +11,5 @@\n /**\n  * @version 1.0\n  */\n-@org.osgi.annotation.versioning.Version(\"1.0\")\n+@org.osgi.annotation.versioning.Version(\"1.1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTY3Nzcw", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-429167770", "createdAt": "2020-06-11T18:10:27Z", "commit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MzIyMTIw", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-429322120", "createdAt": "2020-06-11T21:58:39Z", "commit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1ODozOVrOGiwPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1ODozOVrOGiwPFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NTA2Mg==", "bodyText": "version 1.1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#discussion_r439095062", "createdAt": "2020-06-11T21:58:39Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.jaxrs.2.x.monitor/src/com/ibm/websphere/jaxrs/monitor/package-info.java", "diffHunk": "@@ -11,5 +11,5 @@\n /**\n  * @version 1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbfb61eea281ba9eb4bf5041b575380023d8059e"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a9bc2827eb203da88f5cb33365377e9b43a5d9", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e0a9bc2827eb203da88f5cb33365377e9b43a5d9", "committedDate": "2020-06-15T15:49:40Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively\n\nAddress comments: indentation, grammar update, variable inconsistency\nUpdate: Update Gauge usage of RestStatsMXBean (return long instead of Gauge object)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85b43e000a8373fff8e9470c5353fe297eae2fba", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/85b43e000a8373fff8e9470c5353fe297eae2fba", "committedDate": "2020-06-15T15:46:51Z", "message": "Update commented version"}, "afterCommit": {"oid": "e0a9bc2827eb203da88f5cb33365377e9b43a5d9", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e0a9bc2827eb203da88f5cb33365377e9b43a5d9", "committedDate": "2020-06-15T15:49:40Z", "message": "Update Monitor SimpleTimer and the REST Stat mbean to track high/low time durations effectively\n\nAddress comments: indentation, grammar update, variable inconsistency\nUpdate: Update Gauge usage of RestStatsMXBean (return long instead of Gauge object)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzg4MzI1", "url": "https://github.com/OpenLiberty/open-liberty/pull/12452#pullrequestreview-430788325", "createdAt": "2020-06-15T16:06:29Z", "commit": {"oid": "e0a9bc2827eb203da88f5cb33365377e9b43a5d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2545, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}