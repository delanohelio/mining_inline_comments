{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxOTQxNDc1", "number": 10758, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1MDoyOVrODdxmsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozODowNFrODe4DfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTQ4MDE4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1MDoyOVrOFmkeuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0MjozOFrOFoaN3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4Nzg5Ng==", "bodyText": "change\ncookie specific\nto\ncookie-specific", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r375987896", "createdAt": "2020-02-06T17:50:29Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -94,6 +98,9 @@ http.remoteip.useRemoteIpInAccessLog.desc=If this property is set to true and th\n http.compression=Compression Options\n http.compression.desc=An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider compressing response bodies based on the client's Accept-Encoding header.\n \n+http.cookies=Cookie Options\n+http.cookies.desc=An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider cookie specific configurations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxNjg5Mg==", "bodyText": "Changes added", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r377916892", "createdAt": "2020-02-11T21:42:38Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -94,6 +98,9 @@ http.remoteip.useRemoteIpInAccessLog.desc=If this property is set to true and th\n http.compression=Compression Options\n http.compression.desc=An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider compressing response bodies based on the client's Accept-Encoding header.\n \n+http.cookies=Cookie Options\n+http.cookies.desc=An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider cookie specific configurations.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4Nzg5Ng=="}, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTQ5ODI4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1NjowOVrOFmkqBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0MzoxN1rOFoaPPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MDc5MQ==", "bodyText": "the desc sentence is confusing to me, but this is what I think you mean:\nList of cookies that should have the SameSite attribute set to a value of \"Lax\", if not already defined.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r375990791", "createdAt": "2020-02-06T17:56:09Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -216,4 +223,13 @@ http.compression.types=List of content types for response compression\n http.compression.types.desc=To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.\n \n http.compression.serverPreferredAlgorithm=Server-preferred algorithm for compression\n-http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n\\ No newline at end of file\n+http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n+\n+http.cookies.samesite.lax=Lax cookies\n+http.cookies.samesite.lax.desc=List of cookies which should have the value of Lax set to the SameSite attribute if not already defined.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxNzI0Ng==", "bodyText": "A bit outdated now, changes reviewed and updated.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r377917246", "createdAt": "2020-02-11T21:43:17Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -216,4 +223,13 @@ http.compression.types=List of content types for response compression\n http.compression.types.desc=To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.\n \n http.compression.serverPreferredAlgorithm=Server-preferred algorithm for compression\n-http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n\\ No newline at end of file\n+http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n+\n+http.cookies.samesite.lax=Lax cookies\n+http.cookies.samesite.lax.desc=List of cookies which should have the value of Lax set to the SameSite attribute if not already defined.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MDc5MQ=="}, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTUwMTQ3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1NzowN1rOFmksHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1NzowN1rOFmksHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MTMyNw==", "bodyText": "same desc edits as above:\nList of cookies that should have the SameSite attribute set to a value of \"None\", if not already defined.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r375991327", "createdAt": "2020-02-06T17:57:07Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -216,4 +223,13 @@ http.compression.types=List of content types for response compression\n http.compression.types.desc=To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.\n \n http.compression.serverPreferredAlgorithm=Server-preferred algorithm for compression\n-http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n\\ No newline at end of file\n+http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n+\n+http.cookies.samesite.lax=Lax cookies\n+http.cookies.samesite.lax.desc=List of cookies which should have the value of Lax set to the SameSite attribute if not already defined.\n+\n+http.cookies.samesite.none=None cookies\n+http.cookies.samesite.none.desc=List of cookies which should have the value of None set to the SameSite attribute if not already defined.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTUwMjEyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1NzoyM1rOFmksoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0MzozOFrOFoaQBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MTQ1Nw==", "bodyText": "same desc edits as above:\nList of cookies that should have the SameSite attribute set to a value of \"Strict\", if not already defined.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r375991457", "createdAt": "2020-02-06T17:57:23Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -216,4 +223,13 @@ http.compression.types=List of content types for response compression\n http.compression.types.desc=To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.\n \n http.compression.serverPreferredAlgorithm=Server-preferred algorithm for compression\n-http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n\\ No newline at end of file\n+http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n+\n+http.cookies.samesite.lax=Lax cookies\n+http.cookies.samesite.lax.desc=List of cookies which should have the value of Lax set to the SameSite attribute if not already defined.\n+\n+http.cookies.samesite.none=None cookies\n+http.cookies.samesite.none.desc=List of cookies which should have the value of None set to the SameSite attribute if not already defined.\n+\n+http.cookies.samesite.strict=Strict cookies\n+http.cookies.samesite.strict.desc=List of cookies which should have the value of Strict set to the SameSite attribute if not already defined.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxNzQ0Nw==", "bodyText": "Updated messages.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r377917447", "createdAt": "2020-02-11T21:43:38Z", "author": {"login": "mrsaldana"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -216,4 +223,13 @@ http.compression.types=List of content types for response compression\n http.compression.types.desc=To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.\n \n http.compression.serverPreferredAlgorithm=Server-preferred algorithm for compression\n-http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n\\ No newline at end of file\n+http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n+\n+http.cookies.samesite.lax=Lax cookies\n+http.cookies.samesite.lax.desc=List of cookies which should have the value of Lax set to the SameSite attribute if not already defined.\n+\n+http.cookies.samesite.none=None cookies\n+http.cookies.samesite.none.desc=List of cookies which should have the value of None set to the SameSite attribute if not already defined.\n+\n+http.cookies.samesite.strict=Strict cookies\n+http.cookies.samesite.strict.desc=List of cookies which should have the value of Strict set to the SameSite attribute if not already defined.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MTQ1Nw=="}, "originalCommit": {"oid": "740c2e3b48301d0ffb7f9e6d727af5df9858201e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzAwNjA1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozNDowMFrOFoQI2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozNDowMFrOFoQI2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1MTc3MA==", "bodyText": "The use of \"single\" in the second sentence makes me think people might think they only get one wildcard used with a prefix.  What about this (note that I have left the asterisks out only because this editor thinks I mean that the text between them is supposed to be italicized):\nA single wildcard ( ) character is supported as a standalone value, or following cookie name prefixes.\nor\nA single wildcard ( ) character is supported as a standalone value. Any number of cookie name prefixes can have a wildcard as a final character.\n(If you think is a good change, make the same edit for the other two .desc's also)", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r377751770", "createdAt": "2020-02-11T16:34:00Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -216,4 +223,13 @@ http.compression.types=List of content types for response compression\n http.compression.types.desc=To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.\n \n http.compression.serverPreferredAlgorithm=Server-preferred algorithm for compression\n-http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n\\ No newline at end of file\n+http.compression.serverPreferredAlgorithm.desc=The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.\n+\n+http.cookies.samesite.lax=List of samesite=lax cookies\n+http.cookies.samesite.lax.desc=List of cookie names or patterns that should have the SameSite attribute set to a value of \"Lax\", if not already defined. A single wildcard (*) character is supported as a standalone value, or following a cookie name prefix. Any cookie name or pattern defined by this list must be unique and not present in the 'sameSiteNone' nor 'sameSiteStrict' configurations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a383a12936bf50e5bf39e96c0fe41a6bab4704"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzAxOTM3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozNzoxMVrOFoQRAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozNzoxMVrOFoQRAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1Mzg1OQ==", "bodyText": "Change second sentence to:\nSupport consists of a single wildcard (*) character used as a standalone value, or following any number of cookie name prefixes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r377753859", "createdAt": "2020-02-11T16:37:11Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "diffHunk": "@@ -164,4 +164,12 @@ compression.unsupportedAlgorithm.useraction= When defining the value, ensure tha\n \n decompression.tolerance.reached=CWWKT0034E: The HTTP channel attempted to decompress a body with a larger than tolerated ratio.\n decompression.tolerance.reached.explanation=The maximum number of decompression cycles has reached, resulting in a decompression ratio larger than the configured limit. The decompression limit is defined by the decompressionRatioLimit httpOption attribute.\n-decompression.tolerance.reached.useraction=When this exception happens on a valid request body, reconfigure the decompressionTolerance and decompressionRatioLimit httpOption attributes to achieve the appropriate decompression results.\n\\ No newline at end of file\n+decompression.tolerance.reached.useraction=When this exception happens on a valid request body, reconfigure the decompressionTolerance and decompressionRatioLimit httpOption attributes to achieve the appropriate decompression results.\n+\n+cookies.samesite.duplicateName=CWWKT0035W:A duplicate value [{0}] was found while parsing the SameSite cookie configuration.\n+cookies.samesite.duplicateName.explanation=The specified value was already found by the configuration and mapped to a SameSite value. \n+cookies.samesite.duplicateName.useraction=When defining the 'sameSiteLax', 'sameSiteNone', and 'sameSiteStrict' lists, ensure cookie names and patterns are unique across all three lists.\n+\n+cookies.samesite.unsupportedWildcard=CWWKT0036W:An unsupported use of the wildcard character was attempted by the value [{0}]. The SameSite configuration will not be set for this value.\n+cookies.samesite.unsupportedWildcard.explanation=The wildcard (*) character was used in an unsupported way. Support consists of a single wildcard (*) character, used as a standalone value or following a cookie name prefix.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a383a12936bf50e5bf39e96c0fe41a6bab4704"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzAyMjY4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozODowNFrOFoQTJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjozODowNFrOFoQTJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1NDQwNA==", "bodyText": "Change\nfollowing a cookie name prefix.\nto\nfollowing cookie name prefixes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10758#discussion_r377754404", "createdAt": "2020-02-11T16:38:04Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.ws.transport.http/resources/com/ibm/ws/http/channel/internal/resources/httpchannelmessages.nlsprops", "diffHunk": "@@ -164,4 +164,12 @@ compression.unsupportedAlgorithm.useraction= When defining the value, ensure tha\n \n decompression.tolerance.reached=CWWKT0034E: The HTTP channel attempted to decompress a body with a larger than tolerated ratio.\n decompression.tolerance.reached.explanation=The maximum number of decompression cycles has reached, resulting in a decompression ratio larger than the configured limit. The decompression limit is defined by the decompressionRatioLimit httpOption attribute.\n-decompression.tolerance.reached.useraction=When this exception happens on a valid request body, reconfigure the decompressionTolerance and decompressionRatioLimit httpOption attributes to achieve the appropriate decompression results.\n\\ No newline at end of file\n+decompression.tolerance.reached.useraction=When this exception happens on a valid request body, reconfigure the decompressionTolerance and decompressionRatioLimit httpOption attributes to achieve the appropriate decompression results.\n+\n+cookies.samesite.duplicateName=CWWKT0035W:A duplicate value [{0}] was found while parsing the SameSite cookie configuration.\n+cookies.samesite.duplicateName.explanation=The specified value was already found by the configuration and mapped to a SameSite value. \n+cookies.samesite.duplicateName.useraction=When defining the 'sameSiteLax', 'sameSiteNone', and 'sameSiteStrict' lists, ensure cookie names and patterns are unique across all three lists.\n+\n+cookies.samesite.unsupportedWildcard=CWWKT0036W:An unsupported use of the wildcard character was attempted by the value [{0}]. The SameSite configuration will not be set for this value.\n+cookies.samesite.unsupportedWildcard.explanation=The wildcard (*) character was used in an unsupported way. Support consists of a single wildcard (*) character, used as a standalone value or following a cookie name prefix.\n+cookies.samesite.unsupportedWildcard.useraction=When defining the 'sameSiteLax', 'sameSiteNone', and 'sameSiteStrict' lists, ensure that only a single wildcard (*) character is used per pattern. Additionally, use of this character is supported only under the following two conditions: as a standalone value or following a cookie name prefix. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a383a12936bf50e5bf39e96c0fe41a6bab4704"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2102, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}