{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNjI2NjUw", "number": 12799, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOTowMlrOEJzX7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0Mjo0MFrOEJzdKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE0MzUxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOTowMlrOGqfY6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOTowMlrOGqfY6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwNzY1Ng==", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447207656", "createdAt": "2020-06-29T19:39:02Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -169,6 +169,12 @@ public void cleanUp() throws Exception {\n     public void testAccessLogFieldNamesEnv() throws Exception {\n         setUp(envServer);\n         waitForSecurityPrerequisites(envServer, WAIT_TIMEOUT);\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      envServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      envServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE0NDY5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOToyNVrOGqfZqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOToyNVrOGqfZqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwNzg0OA==", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447207848", "createdAt": "2020-06-29T19:39:25Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -184,6 +190,12 @@ public void testAccessLogFieldNamesEnv() throws Exception {\n     public void testAccessLogFieldNamesBootstrap() throws Exception {\n         setUp(bootstrapServer);\n         waitForSecurityPrerequisites(bootstrapServer, WAIT_TIMEOUT);\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      bootstrapServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE0NjQzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOTo1N1rOGqfa2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTozOTo1N1rOGqfa2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODE1NA==", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208154", "createdAt": "2020-06-29T19:39:57Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -200,10 +212,14 @@ public void testAccessLogFieldNamesXml() throws Exception {\n         setUp(xmlServer);\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n-        } else {\n-            assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                          xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n         }\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE0NjkyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDowNVrOGqfbJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDowNVrOGqfbJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODIzMA==", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208230", "createdAt": "2020-06-29T19:40:05Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -274,10 +290,14 @@ public void testAllFieldsArePrinted() throws Exception {\n         waitForConfigUpdate(xmlServer);\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n-        } else {\n-            assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                          xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n         }\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE0NzQ1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDoxMlrOGqfbew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDoxMlrOGqfbew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODMxNQ==", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208315", "createdAt": "2020-06-29T19:40:12Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -330,10 +350,14 @@ public void testFieldsInAccessLogAreSameInJSON() throws Exception {\n         setUp(xmlServer);\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n-        } else {\n-            assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                          xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n         }\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE0Nzk1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDoyMVrOGqfbwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDoyMVrOGqfbwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODM4NQ==", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208385", "createdAt": "2020-06-29T19:40:21Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -376,6 +400,12 @@ public void testFieldsInAccessLogAreSameInJSON() throws Exception {\n     public void testChangeJsonAccessLogFieldsConfigValue() throws Exception {\n         setUp(changeConfigServer);\n         waitForSecurityPrerequisites(changeConfigServer, WAIT_TIMEOUT);\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      changeConfigServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE1NjQwOnYy", "diffSide": "LEFT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MjozM1rOGqfgtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MjozM1rOGqfgtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTY1NQ==", "bodyText": "Do you expect the test to fail when you catch an IOException?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447209655", "createdAt": "2020-06-29T19:42:33Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -583,7 +612,7 @@ private static void hitHttpEndpoint(String stringUrl, LibertyServer server) {\n             assertTrue(\"Nothing was returned from the servlet - there was a problem connecting.\", lines.length() > 0);\n             con.disconnect();\n         } catch (IOException e) {\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzE1Njg5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0Mjo0MFrOGqfhBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0Mjo0MFrOGqfhBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTczNA==", "bodyText": "Do you expect the test to fail when you catch an IOException?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447209734", "createdAt": "2020-06-29T19:42:40Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -623,12 +651,11 @@ public boolean verify(String arg0, SSLSession arg1) {\n             } finally {\n                 br.close();\n             }\n-\n             Log.info(c, \"hitHttpsEndpointSecure\", url + \" reached successfully.\");\n             assertTrue(\"Nothing was returned from the servlet - there was a problem connecting.\", lines.length() > 0);\n             con.disconnect();\n         } catch (IOException e) {\n-\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b682bebc64598e3a989ab8c59c6b5519c8ba1720"}, "originalPosition": 128}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1575, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}