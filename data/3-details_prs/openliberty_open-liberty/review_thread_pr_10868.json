{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTQwMDEw", "number": 10868, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOTo0NTozMlrODgfaKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo1NToxOFrODh7Rlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Mzk1NjI0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc_fat_oracle/fat/src/com/ibm/ws/jdbc/fat/oracle/FATSuite.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOTo0NTozMlrOFquYvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOTo0NTozMlrOFquYvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0NDUxMA==", "bodyText": "Minor: mixture of tabs and spaces makes this code for the following method format awkwardly", "url": "https://github.com/OpenLiberty/open-liberty/pull/10868#discussion_r380344510", "createdAt": "2020-02-17T19:45:32Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc_fat_oracle/fat/src/com/ibm/ws/jdbc/fat/oracle/FATSuite.java", "diffHunk": "@@ -28,4 +37,54 @@ public static void beforeSuite() throws Exception {\n         //Allows local tests to switch between using a local docker client, to using a remote docker client. \n         ExternalTestServiceDockerClientStrategy.clearTestcontainersConfig();\n     }\n+    \n+    public static void initDatabaseTables(OracleContainer oracle) throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41564d8110197e4286c720f1e55b6df5063e85b0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Mzk3NDE4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc_fat_oracle/test-applications/oracletracefat/src/trace/web/OracleTraceTestServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOTo1NToxNVrOFqujCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOTo1NToxNVrOFqujCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0NzE0Nw==", "bodyText": "minor: System.out with initials accidentally left in test code?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10868#discussion_r380347147", "createdAt": "2020-02-17T19:55:15Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.jdbc_fat_oracle/test-applications/oracletracefat/src/trace/web/OracleTraceTestServlet.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package trace.web;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.servlet.annotation.WebServlet;\n+import javax.sql.DataSource;\n+\n+import org.junit.Test;\n+\n+import componenttest.app.FATServlet;\n+\n+\n+@DataSourceDefinition(\n+        name = \"java:comp/env/jdbc/conn_prop_dsd\",\n+        className = \"oracle.jdbc.pool.OracleDataSource\",\n+        url = \"${env.URL}\",\n+        user = \"${env.USER}\",\n+        password = \"${env.PASSWORD}\",\n+        properties = {\n+                       \"connectionProperties=\" +\n+                       \"oracle.net.ssl_version=1.2;\" +\n+                       \"oracle.net.authentication_services=(TCPS);\" + \n+                       \"javax.net.ssl.keyStore=path-to-keystore/keystore.p12;\\n\" + \n+                       \"javax.net.ssl.keyStoreType=PKCS12;\\n\" + \n+                       \"javax.net.ssl.keyStorePassword=${env.SSL_PASSWORD};\\n\" + \n+                       \"javax.net.ssl.trustStore= path-to-keystore/keystore.p12;\\n\" + \n+                       \"javax.net.ssl.trustStoreType=PKCS12;\\n\" + \n+                       \"javax.net.ssl.trustStorePassword=${env.SSL_PASSWORD}\"\n+        })\n+\n+\n+@SuppressWarnings(\"serial\")\n+@WebServlet(urlPatterns = \"/OracleTraceTestServlet\")\n+public class OracleTraceTestServlet extends FATServlet {\n+    \n+    @Resource(lookup = \"jdbc/conn-prop-ds\")\n+    private DataSource conn_prop_ds;\n+    \n+    @Resource(lookup = \"java:comp/env/jdbc/conn_prop_dsd\")\n+    private DataSource conn_prop_dsd;\n+    \n+    //These tests are not expected to actually create an SSL connection to our Oracle Database\n+    //The oracle test container does not have SSL connections enabled.  Instead we are just\n+    //using these connections to make sure the trust/key store passwords are not traced.  \n+    @Test\n+    public void testDSUsingConnProps() throws Exception {\n+        Connection conn = conn_prop_ds.getConnection();\n+\n+        try {\n+            PreparedStatement ps = conn.prepareStatement(\"INSERT INTO MYTABLE VALUES(?,?)\");\n+            ps.setInt(1, 10);\n+            ps.setString(2, \"ten\");\n+            ps.executeUpdate();\n+            ps.close();\n+        } finally {\n+            conn.close();\n+        }\n+    }\n+    \n+    @Test\n+    public void testDSDUsingConnProps() throws Exception {\n+    \tSystem.out.println(\"KJA1017 connection property settings: \" + conn_prop_dsd.toString() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41564d8110197e4286c720f1e55b6df5063e85b0"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTAwNzU5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc/resources/OSGI-INF/metatype/metatype.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo1NToxOFrOFs7twQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo1NToxOFrOFs7twQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2MDAzMw==", "bodyText": "Changed URL to password and added connectionProperties as an internal element inside generic properties so that if someone is using generic properties to connect to oracle these passwords are still sufficiently hidden.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10868#discussion_r382660033", "createdAt": "2020-02-21T15:55:18Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.jdbc/resources/OSGI-INF/metatype/metatype.xml", "diffHunk": "@@ -110,9 +110,11 @@\n   <AD id=\"databaseName\"         required=\"false\" type=\"String\"  name=\"%databaseName\" description=\"%databaseName.desc\"/>\n   <AD id=\"serverName\"           required=\"false\" type=\"String\"  name=\"%serverName\" description=\"%serverName.desc\"/>\n   <AD id=\"portNumber\"           required=\"false\" type=\"Integer\" name=\"%portNumber\" description=\"%portNumber.desc\"/>\n-  <AD id=\"URL\"                  required=\"false\" type=\"String\"  name=\"%URL\" description=\"%URL.desc\"/>\n+  <AD id=\"URL\"                  required=\"false\" type=\"String\"  ibm:type=\"password\" name=\"%URL\" description=\"%URL.desc\"/>\n   <AD id=\"user\"                 required=\"false\" type=\"String\"  name=\"%user\" description=\"%user.desc\"/>\n   <AD id=\"password\"             required=\"false\" type=\"String\"  ibm:type=\"password\" name=\"%password\" description=\"%password.desc\"/>\n+  <!-- If using generic properties and user provides oracle connectionProperties then make sure it is not traced as it could container passwords -->\n+  <AD id=\"connectionProperties\" required=\"false\" type=\"String\"  ibm:type=\"password\" name=\"internal\" description=\"internal use only\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f68b5e0c3887d38ec8bbe04ba980c21c8e6517"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2134, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}