{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjA0ODkz", "number": 13401, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzozMTo0M1rOEXT7_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzozMjowMFrOEXT8Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODc5MzU4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzozMTo0M1rOG_CG_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzo0MDo0OVrOG_CatA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODAyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\",\n          \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containing SocketTimeoutException in logs.\",", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468748029", "createdAt": "2020-08-11T17:31:43Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "diffHunk": "@@ -685,8 +686,20 @@ public void httpReadConnectTimeouts() throws Exception {\n \t\t\tconfiguration.getAcmeCA().setAcmeTransportConfig(acmeTransportConfig);\n \t\t\tAcmeFatUtils.configureAcmeCA(server, caContainer, configuration);\n \t\t\tAcmeFatUtils.renewCertificate(server);\n-\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\",\n-\t\t\t\t\tserver.waitForStringInLog(\"CWPKI2016E.*SocketTimeoutException\"));\n+\t\t\tString returnString = server.waitForStringInLog(\"CWPKI2016E\");\n+\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n+\t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n+\t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n+\t\t\t\t\t/*\n+\t\t\t\t\t * On some OpenJDKs, the cause by error message isn't as consistent. For\n+\t\t\t\t\t * example, Caused by:\n+\t\t\t\t\t * sun.security.provider.certpath.SunCertPathBuilderException: unable to find\n+\t\t\t\t\t * valid certification path to requested target\n+\t\t\t\t\t */\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276f419bb12821082f76a0e0e0d10bf068ebde7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1MzA3Ng==", "bodyText": "Updated", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468753076", "createdAt": "2020-08-11T17:40:49Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "diffHunk": "@@ -685,8 +686,20 @@ public void httpReadConnectTimeouts() throws Exception {\n \t\t\tconfiguration.getAcmeCA().setAcmeTransportConfig(acmeTransportConfig);\n \t\t\tAcmeFatUtils.configureAcmeCA(server, caContainer, configuration);\n \t\t\tAcmeFatUtils.renewCertificate(server);\n-\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\",\n-\t\t\t\t\tserver.waitForStringInLog(\"CWPKI2016E.*SocketTimeoutException\"));\n+\t\t\tString returnString = server.waitForStringInLog(\"CWPKI2016E\");\n+\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n+\t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n+\t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n+\t\t\t\t\t/*\n+\t\t\t\t\t * On some OpenJDKs, the cause by error message isn't as consistent. For\n+\t\t\t\t\t * example, Caused by:\n+\t\t\t\t\t * sun.security.provider.certpath.SunCertPathBuilderException: unable to find\n+\t\t\t\t\t * valid certification path to requested target\n+\t\t\t\t\t */\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODAyOQ=="}, "originalCommit": {"oid": "276f419bb12821082f76a0e0e0d10bf068ebde7c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODc5NDU4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzozMjowMFrOG_CHlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzo0MDo1N1rOG_CbAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODE4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));\n          \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containing SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468748180", "createdAt": "2020-08-11T17:32:00Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "diffHunk": "@@ -700,8 +713,14 @@ public void httpReadConnectTimeouts() throws Exception {\n \t\t\tacmeTransportConfig.setHttpReadTimeout(\"1ms\");\n \t\t\tAcmeFatUtils.configureAcmeCA(server, caContainer, configuration);\n \t\t\tAcmeFatUtils.renewCertificate(server);\n-\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\",\n-\t\t\t\t\tserver.waitForStringInLog(\"CWPKI2016E.*SocketTimeoutException\"));\n+\t\t\t\n+\t\t\treturnString = server.waitForStringInLog(\"CWPKI2016E\");\n+\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n+\t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n+\t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276f419bb12821082f76a0e0e0d10bf068ebde7c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1MzE1Mw==", "bodyText": "Updated", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468753153", "createdAt": "2020-08-11T17:40:57Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "diffHunk": "@@ -700,8 +713,14 @@ public void httpReadConnectTimeouts() throws Exception {\n \t\t\tacmeTransportConfig.setHttpReadTimeout(\"1ms\");\n \t\t\tAcmeFatUtils.configureAcmeCA(server, caContainer, configuration);\n \t\t\tAcmeFatUtils.renewCertificate(server);\n-\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\",\n-\t\t\t\t\tserver.waitForStringInLog(\"CWPKI2016E.*SocketTimeoutException\"));\n+\t\t\t\n+\t\t\treturnString = server.waitForStringInLog(\"CWPKI2016E\");\n+\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n+\t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n+\t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODE4MA=="}, "originalCommit": {"oid": "276f419bb12821082f76a0e0e0d10bf068ebde7c"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2943, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}