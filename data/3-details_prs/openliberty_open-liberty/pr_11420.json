{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDQ3ODI1", "number": 11420, "title": "Invalid charset", "bodyText": "This change makes Jaxrs requests with an invalid charset in the content-type header return HTTP 400 instead of 500 by throwing a BadRequestException instead of a generic IOException.\nHowever, this is only the fix for Jaxrs. After this change, the webcontainer throws it's own exception which causes the return code to still be 500 instead of 400 because they also process the content-type independently from Jaxrs.\nHere is the new webcontainer stack:\njava.io.UnsupportedEncodingException: SRVE0254E: Failed to set request character encoding: [invalid].\n\tat com.ibm.ws.webcontainer.srt.SRTServletRequest.setCharacterEncoding(SRTServletRequest.java:474)\n\tat com.ibm.ws.webcontainer.srt.SRTServletRequest.getCharacterEncoding(SRTServletRequest.java:1531)\n\tat com.ibm.ws.webcontainer.webapp.WebApp.sendError(WebApp.java:4164)\n\tat com.ibm.ws.webcontainer.webapp.WebApp.handleException(WebApp.java:5110)\n\tat com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:5090)\n\tat com.ibm.ws.webcontainer.osgi.DynamicVirtualHost$2.handleRequest(DynamicVirtualHost.java:314)\n\tat com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1007)\n\tat com.ibm.ws.webcontainer.osgi.DynamicVirtualHost$2.run(DynamicVirtualHost.java:279)\n\tat com.ibm.ws.http.dispatcher.internal.channel.HttpDispatcherLink$TaskWrapper.run(HttpDispatcherLink.java:1134)\n\tat com.ibm.ws.http.dispatcher.internal.channel.HttpDispatcherLink.wrapHandlerAndExecute(HttpDispatcherLink.java:415)\n\tat com.ibm.ws.http.dispatcher.internal.channel.HttpDispatcherLink.ready(HttpDispatcherLink.java:374)\n\tat com.ibm.ws.http.channel.internal.inbound.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:551)\n\tat com.ibm.ws.http.channel.internal.inbound.HttpInboundLink.handleNewRequest(HttpInboundLink.java:484)\n\tat com.ibm.ws.http.channel.internal.inbound.HttpInboundLink.processRequest(HttpInboundLink.java:346)\n\tat com.ibm.ws.http.channel.internal.inbound.HttpInboundLink.ready(HttpInboundLink.java:317)\n\tat com.ibm.ws.tcpchannel.internal.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:167)\n\tat com.ibm.ws.tcpchannel.internal.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:75)\n\tat com.ibm.ws.tcpchannel.internal.WorkQueueManager.requestComplete(WorkQueueManager.java:504)\n\tat com.ibm.ws.tcpchannel.internal.WorkQueueManager.attemptIO(WorkQueueManager.java:574)\n\tat com.ibm.ws.tcpchannel.internal.WorkQueueManager.workerRun(WorkQueueManager.java:958)\n\tat com.ibm.ws.tcpchannel.internal.WorkQueueManager$Worker.run(WorkQueueManager.java:1047)\n\tat com.ibm.ws.threading.internal.ExecutorServiceImpl$RunnableWrapper.run(ExecutorServiceImpl.java:239)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:831)```", "createdAt": "2020-03-23T15:14:32Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420", "merged": true, "mergeCommit": {"oid": "dacc5c2f6127af748053c179a5b80ccbd54faaef"}, "closed": true, "closedAt": "2020-03-26T20:14:20Z", "author": {"login": "WhiteCat22"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQiinRgFqTM3OTcwNDM0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRJehsgBqjMxNjQ1NjU1Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzA0MzQz", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#pullrequestreview-379704343", "createdAt": "2020-03-23T18:23:27Z", "commit": {"oid": "23b4aebc465a33fc242efcad170b57ca67ff6d40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMzQwNzIw", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#pullrequestreview-380340720", "createdAt": "2020-03-24T14:05:05Z", "commit": {"oid": "23b4aebc465a33fc242efcad170b57ca67ff6d40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23b4aebc465a33fc242efcad170b57ca67ff6d40", "author": {"user": {"login": "WhiteCat22", "name": "Adam Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/23b4aebc465a33fc242efcad170b57ca67ff6d40", "committedDate": "2020-03-23T15:08:36Z", "message": "jaxrs - add test for invalid charset on jaxrs requests"}, "afterCommit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a", "author": {"user": {"login": "WhiteCat22", "name": "Adam Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/501464f393b8ae3a5b5b4826cd77ac35757da98a", "committedDate": "2020-03-24T20:50:08Z", "message": "jaxrs - test invalid content-type encoding"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjg2OTU0", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#pullrequestreview-380686954", "createdAt": "2020-03-24T20:52:04Z", "commit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMDo1MjowNFrOF7Cm8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMDo1MjowNFrOF7Cm8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1MzA0MA==", "bodyText": "ignore the comparison, this is a new method that git wants to conflict with another one", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#discussion_r397453040", "createdAt": "2020-03-24T20:52:04Z", "author": {"login": "WhiteCat22"}, "path": "dev/com.ibm.ws.jaxrs.2.0_fat/fat/src/com/ibm/ws/jaxrs20/fat/helloworld/HelloWorldTest.java", "diffHunk": "@@ -119,36 +126,18 @@ private StringBuilder runGetMethod(int exprc, String requestUri, String testOut)\n         }\n     }\n \n-    private StringBuilder runDeleteMethod(int exprc, String testOut)\n+    private int runGetMethodInvalidCharset(String requestUri)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjkwMjQ4", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#pullrequestreview-380690248", "createdAt": "2020-03-24T20:56:59Z", "commit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMDo1NzowMFrOF7CxgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMTowMToyNFrOF7C7Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1NTc0NQ==", "bodyText": "Delete?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#discussion_r397455745", "createdAt": "2020-03-24T20:57:00Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.transports.http.3.2/src/org/apache/cxf/transport/http/AbstractHTTPDestination.java", "diffHunk": "@@ -36,6 +36,7 @@\n import javax.servlet.ServletContext;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n+//import javax.ws.rs.BadRequestException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1NzM1MQ==", "bodyText": "Maybe add import static org.junit.Assert.assertEquals; to the imports and then remove Assert.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#discussion_r397457351", "createdAt": "2020-03-24T20:59:51Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.2.0_fat/fat/src/com/ibm/ws/jaxrs20/fat/helloworld/HelloWorldTest.java", "diffHunk": "@@ -83,6 +84,12 @@ public void testSimpleWithEncodedURL() throws IOException {\n         runGetMethod(200, \"/helloworld/apppathrest%21/helloworld\", \"Hello World\");\n     }\n \n+    // disable this test until webcontainer fixes on their end as well\n+//    @Test\n+    public void testInvalidCharset() throws Exception {\n+        Assert.assertEquals(400, runGetMethodInvalidCharset(\"/helloworld/rest/helloworld\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1ODE3OQ==", "bodyText": "Maybe you (or your IDE) deleted the old one?  I don't think anything calls it, so it's fine to remove it in any case.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11420#discussion_r397458179", "createdAt": "2020-03-24T21:01:24Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.jaxrs.2.0_fat/fat/src/com/ibm/ws/jaxrs20/fat/helloworld/HelloWorldTest.java", "diffHunk": "@@ -119,36 +126,18 @@ private StringBuilder runGetMethod(int exprc, String requestUri, String testOut)\n         }\n     }\n \n-    private StringBuilder runDeleteMethod(int exprc, String testOut)\n+    private int runGetMethodInvalidCharset(String requestUri)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1MzA0MA=="}, "originalCommit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "493d386b9237e1527567a4e84689a9f45fe26d78", "author": {"user": {"login": "WhiteCat22", "name": "Adam Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/493d386b9237e1527567a4e84689a9f45fe26d78", "committedDate": "2020-03-25T15:40:56Z", "message": "jaxrs - throw BadRequestException instead of a generic IOException when request content-type contains an invalid charset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fb86fbd4f3f332eae0b7bd2336ad7c256c6fd62", "author": {"user": {"login": "WhiteCat22", "name": "Adam Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7fb86fbd4f3f332eae0b7bd2336ad7c256c6fd62", "committedDate": "2020-03-25T15:41:47Z", "message": "jaxrs - test invalid content-type encoding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "501464f393b8ae3a5b5b4826cd77ac35757da98a", "author": {"user": {"login": "WhiteCat22", "name": "Adam Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/501464f393b8ae3a5b5b4826cd77ac35757da98a", "committedDate": "2020-03-24T20:50:08Z", "message": "jaxrs - test invalid content-type encoding"}, "afterCommit": {"oid": "7fb86fbd4f3f332eae0b7bd2336ad7c256c6fd62", "author": {"user": {"login": "WhiteCat22", "name": "Adam Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/7fb86fbd4f3f332eae0b7bd2336ad7c256c6fd62", "committedDate": "2020-03-25T15:41:47Z", "message": "jaxrs - test invalid content-type encoding"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2991, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}