{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDg4MDU1", "number": 15296, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzo0Mzo1NlrOFGcx5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzo1ODoyM1rOFGdBgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzA3MzAzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jaxrs.2.1.client_fat/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzo0Mzo1NlrOIHeFLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDowNjowOVrOIHem8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMzc4OA==", "bodyText": "Looks like this one could be updated to use\napply from: '../wlp-gradle/subprojects/maven-central-mirror.gradle'", "url": "https://github.com/OpenLiberty/open-liberty/pull/15296#discussion_r544703788", "createdAt": "2020-12-16T23:43:56Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.jaxrs.2.1.client_fat/build.gradle", "diffHunk": "@@ -9,17 +9,17 @@\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n repositories {\n-  if (isUsingArtifactory) {\n-    maven {\n-      credentials {\n-        username userProps.getProperty(\"artifactory.download.user\")\n-        password userProps.getProperty(\"artifactory.download.token\")\n-      }\n-      url (\"https://\" + gradle.userProps.getProperty(\"artifactory.download.server\") + \"/artifactory/wasliberty-maven-remote\")\n-    }\n-  } else {\n-    mavenCentral()\n-  }\n+  if (isUsingArtifactory) { ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d7961b9fb998549153a8ba23d91e05c17ba"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcxMjQzMg==", "bodyText": "Originally I had this one using the common gradle file, but the FAT started failing with a non-obvious issue and I didn't want to delay these changes any further. The only difference between the two is that the common file does repositories.clear() and the original file did not, so that must be where the behavior difference was", "url": "https://github.com/OpenLiberty/open-liberty/pull/15296#discussion_r544712432", "createdAt": "2020-12-17T00:06:09Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jaxrs.2.1.client_fat/build.gradle", "diffHunk": "@@ -9,17 +9,17 @@\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n repositories {\n-  if (isUsingArtifactory) {\n-    maven {\n-      credentials {\n-        username userProps.getProperty(\"artifactory.download.user\")\n-        password userProps.getProperty(\"artifactory.download.token\")\n-      }\n-      url (\"https://\" + gradle.userProps.getProperty(\"artifactory.download.server\") + \"/artifactory/wasliberty-maven-remote\")\n-    }\n-  } else {\n-    mavenCentral()\n-  }\n+  if (isUsingArtifactory) { ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMzc4OA=="}, "originalCommit": {"oid": "c6b95d7961b9fb998549153a8ba23d91e05c17ba"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzExMjk2OnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/containers/ArtifactoryImageNameSubstitutor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzo1ODoyM1rOIHebOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNToyNzozOVrOIH7AyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwOTQzMw==", "bodyText": "I do not really understand what this class is doing.  Or more accurately how our infrastructure is set up to support this.\nDo we have a system set up that caches docker images from docker hub and hosts them within our test environment?\nWill developers running tests locally still be able to run against our remote docker machines?", "url": "https://github.com/OpenLiberty/open-liberty/pull/15296#discussion_r544709433", "createdAt": "2020-12-16T23:58:23Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.simplicity/src/componenttest/containers/ArtifactoryImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.containers;\n+\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.ImageNameSubstitutor;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.topology.utils.ExternalTestService;\n+\n+/**\n+ * An image name substituter is configured in testcontainers.properties and will transform docker image names.\n+ * Here we use it to apply a private registry prefix so that in remote builds we use an internal mirror\n+ * of Docker Hub, instead of downloading from Docker Hub in each build which causes rate limiting issues.\n+ */\n+public class ArtifactoryImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d7961b9fb998549153a8ba23d91e05c17ba"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcxNTU0OA==", "bodyText": "The image name substitutor is an SPI that Testcontainers recently added specifically for addressing the docker hub rate limiting issue:\nhttps://www.testcontainers.org/features/image_name_substitution/\nBasically you can configure an ImageNameSubstitutor globally (as we do in this PR) and it will remap all of the docker image names used by Testcontainers. So if some FAT bucket does:\npublic static GenericContainer myContainer = new GenericContainer(\"someImage:1.0\");\nWhen the substitutor is activated the code will effectively be:\npublic static GenericContainer myContainer = new GenericContainer(\"com.mycompany.registry/someImage:1.0\");\nWhere com.mycompany.registry is a companies private docker registry (ideally a mirror of Docker Hub). I've set up a mirror registry within the IBM network to handle this. A registry mirror is basically a lazily-populated cache. If a bucket does a pull of a new image someImage:1.0, the mirror will check to see if it's available within the mirror, and if not it'll download the image from Docker Hub and cache it for future use. So that way the next time we do a pull of someImage:1.0 it comes from the mirror registry and we don't need to touch Docker Hub, thus avoiding the rate limiting issue.\n\nWill developers running tests locally still be able to run against our remote docker machines?\n\nYes. If we detect that remote docker is being used, then the new ExternalTestServiceDockerClient.setupTestcontainers method will rewrite the .testcontainers.properties file to use the ArtifactoryImageNameSubstitutor and it will generate a ~/.docker/config.json with a the private docker registry mirror auth token.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15296#discussion_r544715548", "createdAt": "2020-12-17T00:14:13Z", "author": {"login": "aguibert"}, "path": "dev/fattest.simplicity/src/componenttest/containers/ArtifactoryImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.containers;\n+\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.ImageNameSubstitutor;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.topology.utils.ExternalTestService;\n+\n+/**\n+ * An image name substituter is configured in testcontainers.properties and will transform docker image names.\n+ * Here we use it to apply a private registry prefix so that in remote builds we use an internal mirror\n+ * of Docker Hub, instead of downloading from Docker Hub in each build which causes rate limiting issues.\n+ */\n+public class ArtifactoryImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwOTQzMw=="}, "originalCommit": {"oid": "c6b95d7961b9fb998549153a8ba23d91e05c17ba"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE3NzgwMQ==", "bodyText": "Okay thanks for that extra explanation! \ud83d\udc4d", "url": "https://github.com/OpenLiberty/open-liberty/pull/15296#discussion_r545177801", "createdAt": "2020-12-17T15:27:39Z", "author": {"login": "KyleAure"}, "path": "dev/fattest.simplicity/src/componenttest/containers/ArtifactoryImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.containers;\n+\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.ImageNameSubstitutor;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.topology.utils.ExternalTestService;\n+\n+/**\n+ * An image name substituter is configured in testcontainers.properties and will transform docker image names.\n+ * Here we use it to apply a private registry prefix so that in remote builds we use an internal mirror\n+ * of Docker Hub, instead of downloading from Docker Hub in each build which causes rate limiting issues.\n+ */\n+public class ArtifactoryImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwOTQzMw=="}, "originalCommit": {"oid": "c6b95d7961b9fb998549153a8ba23d91e05c17ba"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2328, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}