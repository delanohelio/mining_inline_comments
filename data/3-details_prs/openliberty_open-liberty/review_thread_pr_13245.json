{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzEzMTcy", "number": 13245, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTo1Mzo1NlrOEWAV7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMjoyMToyOVrOEXZtiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTA5NzQzOnYy", "diffSide": "LEFT", "path": "dev/com.ibm.websphere.javaee.persistence.2.1/bnd.bnd", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTo1Mzo1NlrOG9Fhqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDozMDo1MlrOG-6uaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNjg1OQ==", "bodyText": "I don't understand why you are doing these changes.  Don't you want the activator to be in there any longer?  Shouldn't this bundle and the 2.2 bundle be just like the 2.0 bundle above and the ws.javaee 2.1 and 2.2 below?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r466706859", "createdAt": "2020-08-06T21:53:56Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.javaee.persistence.2.1/bnd.bnd", "diffHunk": "@@ -12,24 +12,12 @@\n bVersion=1.0\n \n Bundle-SymbolicName: com.ibm.websphere.javaee.persistence.2.1; singleton:=true\n-Bundle-Activator: com.ibm.ws.javaee.persistence.internal.HybridPersistenceActivator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4NjI5MQ==", "bodyText": "I agree. I'm not sure what the reason is for jpa-2.0 changes in com.ibm.websphere.javaee.persistence. being different from com.ibm.websphere.javaee.persistence. jpa-2.1/jpa-2.2 just removing everything. I do see there are changes to com.ibm.ws.javaee.persistence. jpa-2.1/jpa-2.2 that I thought would be in com.ibm.websphere.javaee.persistence. jpa-2.1/jpa-2.2. Perhaps I don't understand the precise difference between these bundles", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r467086291", "createdAt": "2020-08-07T14:44:44Z", "author": {"login": "dazey3"}, "path": "dev/com.ibm.websphere.javaee.persistence.2.1/bnd.bnd", "diffHunk": "@@ -12,24 +12,12 @@\n bVersion=1.0\n \n Bundle-SymbolicName: com.ibm.websphere.javaee.persistence.2.1; singleton:=true\n-Bundle-Activator: com.ibm.ws.javaee.persistence.internal.HybridPersistenceActivator", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNjg1OQ=="}, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyNzA1MQ==", "bodyText": "@jhanders34 Yeah, removing the activator was a mistake.  Corrected that.  Please review again.\n@dazey3 If I understand the setup right (remember the persistence service had to make everything 1000% more complex), the server uses the jpa apis in /lib for the actual runtime (remember we have to have 2 jpa api jars, one with a consumer=persistenceService, and one without.  The jar in dev/api/spec is for Eclipse users to compile against.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r468627051", "createdAt": "2020-08-11T14:30:52Z", "author": {"login": "jgrassel"}, "path": "dev/com.ibm.websphere.javaee.persistence.2.1/bnd.bnd", "diffHunk": "@@ -12,24 +12,12 @@\n bVersion=1.0\n \n Bundle-SymbolicName: com.ibm.websphere.javaee.persistence.2.1; singleton:=true\n-Bundle-Activator: com.ibm.ws.javaee.persistence.internal.HybridPersistenceActivator", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNjg1OQ=="}, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTExNzk0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jpa.hybridpersistenceactivator/src/com/ibm/ws/javaee/persistence/internal/HybridPersistenceActivator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjowMjoxMVrOG9FuEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxOTo0NTo1NVrOG_v8jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDAzNA==", "bodyText": "WeakHashMap is not thread safe.  Nothing is done to give you thread safety when accessing the map.  This can lead to infinite loops.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r466710034", "createdAt": "2020-08-06T22:02:11Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jpa.hybridpersistenceactivator/src/com/ibm/ws/javaee/persistence/internal/HybridPersistenceActivator.java", "diffHunk": "@@ -23,14 +23,16 @@\n import org.apache.geronimo.osgi.locator.ProviderLocator;\n import org.apache.geronimo.specs.jpa.PersistenceActivator;\n \n+import com.ibm.ws.runtime.metadata.ModuleMetaData;\n+import com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl;\n+\n /**\n  * An override of the default persistence activator that provides a hybrid mechanism\n  * to discover persistence providers by searching for providers available from\n  * META-INF/services in addition to those registered in the OSGi service registry.\n  */\n public class HybridPersistenceActivator extends PersistenceActivator {\n-\n-    private volatile WeakHashMap<ClassLoader, List<PersistenceProvider>> providerCache = new WeakHashMap<ClassLoader, List<PersistenceProvider>>();\n+    private volatile WeakHashMap<ModuleMetaData, List<PersistenceProvider>> providerCache = new WeakHashMap<ModuleMetaData, List<PersistenceProvider>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE3MDQ4MA==", "bodyText": "Protected map access with a sync block.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r468170480", "createdAt": "2020-08-10T20:35:07Z", "author": {"login": "jgrassel"}, "path": "dev/com.ibm.ws.jpa.hybridpersistenceactivator/src/com/ibm/ws/javaee/persistence/internal/HybridPersistenceActivator.java", "diffHunk": "@@ -23,14 +23,16 @@\n import org.apache.geronimo.osgi.locator.ProviderLocator;\n import org.apache.geronimo.specs.jpa.PersistenceActivator;\n \n+import com.ibm.ws.runtime.metadata.ModuleMetaData;\n+import com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl;\n+\n /**\n  * An override of the default persistence activator that provides a hybrid mechanism\n  * to discover persistence providers by searching for providers available from\n  * META-INF/services in addition to those registered in the OSGi service registry.\n  */\n public class HybridPersistenceActivator extends PersistenceActivator {\n-\n-    private volatile WeakHashMap<ClassLoader, List<PersistenceProvider>> providerCache = new WeakHashMap<ClassLoader, List<PersistenceProvider>>();\n+    private volatile WeakHashMap<ModuleMetaData, List<PersistenceProvider>> providerCache = new WeakHashMap<ModuleMetaData, List<PersistenceProvider>>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDAzNA=="}, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyNzIxOQ==", "bodyText": "@jhanders34 please re-review.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r468627219", "createdAt": "2020-08-11T14:31:06Z", "author": {"login": "jgrassel"}, "path": "dev/com.ibm.ws.jpa.hybridpersistenceactivator/src/com/ibm/ws/javaee/persistence/internal/HybridPersistenceActivator.java", "diffHunk": "@@ -23,14 +23,16 @@\n import org.apache.geronimo.osgi.locator.ProviderLocator;\n import org.apache.geronimo.specs.jpa.PersistenceActivator;\n \n+import com.ibm.ws.runtime.metadata.ModuleMetaData;\n+import com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl;\n+\n /**\n  * An override of the default persistence activator that provides a hybrid mechanism\n  * to discover persistence providers by searching for providers available from\n  * META-INF/services in addition to those registered in the OSGi service registry.\n  */\n public class HybridPersistenceActivator extends PersistenceActivator {\n-\n-    private volatile WeakHashMap<ClassLoader, List<PersistenceProvider>> providerCache = new WeakHashMap<ClassLoader, List<PersistenceProvider>>();\n+    private volatile WeakHashMap<ModuleMetaData, List<PersistenceProvider>> providerCache = new WeakHashMap<ModuleMetaData, List<PersistenceProvider>>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDAzNA=="}, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5NTcyNg==", "bodyText": "Yeah it is going to need some work still.  You are going to have to do like the previous code to do the put after you populate the List.  If you don't you can erroneously return an empty or partial list in another thread.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r468895726", "createdAt": "2020-08-11T22:17:33Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.jpa.hybridpersistenceactivator/src/com/ibm/ws/javaee/persistence/internal/HybridPersistenceActivator.java", "diffHunk": "@@ -23,14 +23,16 @@\n import org.apache.geronimo.osgi.locator.ProviderLocator;\n import org.apache.geronimo.specs.jpa.PersistenceActivator;\n \n+import com.ibm.ws.runtime.metadata.ModuleMetaData;\n+import com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl;\n+\n /**\n  * An override of the default persistence activator that provides a hybrid mechanism\n  * to discover persistence providers by searching for providers available from\n  * META-INF/services in addition to those registered in the OSGi service registry.\n  */\n public class HybridPersistenceActivator extends PersistenceActivator {\n-\n-    private volatile WeakHashMap<ClassLoader, List<PersistenceProvider>> providerCache = new WeakHashMap<ClassLoader, List<PersistenceProvider>>();\n+    private volatile WeakHashMap<ModuleMetaData, List<PersistenceProvider>> providerCache = new WeakHashMap<ModuleMetaData, List<PersistenceProvider>>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDAzNA=="}, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5OTAyMA==", "bodyText": "Believe this is addressed now.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r469499020", "createdAt": "2020-08-12T19:45:55Z", "author": {"login": "jgrassel"}, "path": "dev/com.ibm.ws.jpa.hybridpersistenceactivator/src/com/ibm/ws/javaee/persistence/internal/HybridPersistenceActivator.java", "diffHunk": "@@ -23,14 +23,16 @@\n import org.apache.geronimo.osgi.locator.ProviderLocator;\n import org.apache.geronimo.specs.jpa.PersistenceActivator;\n \n+import com.ibm.ws.runtime.metadata.ModuleMetaData;\n+import com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl;\n+\n /**\n  * An override of the default persistence activator that provides a hybrid mechanism\n  * to discover persistence providers by searching for providers available from\n  * META-INF/services in addition to those registered in the OSGi service registry.\n  */\n public class HybridPersistenceActivator extends PersistenceActivator {\n-\n-    private volatile WeakHashMap<ClassLoader, List<PersistenceProvider>> providerCache = new WeakHashMap<ClassLoader, List<PersistenceProvider>>();\n+    private volatile WeakHashMap<ModuleMetaData, List<PersistenceProvider>> providerCache = new WeakHashMap<ModuleMetaData, List<PersistenceProvider>>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDAzNA=="}, "originalCommit": {"oid": "331525b3ad14ffffa32ce61ff401438596a1144e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTczOTYxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.javax.persistence-2.1.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMjoyMToyOVrOG_LN_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMzoxMDoxM1rOG_MQ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5NzI3Ng==", "bodyText": "com.ibm.websphere.appserver.javax.persistence.base features also should be updated to depend on containerServices features.  It is possible that this feature doesn't need to depend on containerServices then since it depends on the base feature.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r468897276", "createdAt": "2020-08-11T22:21:29Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.javax.persistence-2.1.feature", "diffHunk": "@@ -3,7 +3,8 @@ symbolicName=com.ibm.websphere.appserver.javax.persistence-2.1\n singleton=true\n IBM-Process-Types: server, \\\n  client\n--features=com.ibm.websphere.appserver.javax.persistence.base-2.1\n+-features=com.ibm.websphere.appserver.javax.persistence.base-2.1, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b7cd1fbae31802acb85ffc9da863c1c88c9acd4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkxNDM5NQ==", "bodyText": "Noted. I'll follow up on it.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13245#discussion_r468914395", "createdAt": "2020-08-11T23:10:13Z", "author": {"login": "jgrassel"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/com.ibm.websphere.appserver.javax.persistence-2.1.feature", "diffHunk": "@@ -3,7 +3,8 @@ symbolicName=com.ibm.websphere.appserver.javax.persistence-2.1\n singleton=true\n IBM-Process-Types: server, \\\n  client\n--features=com.ibm.websphere.appserver.javax.persistence.base-2.1\n+-features=com.ibm.websphere.appserver.javax.persistence.base-2.1, \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5NzI3Ng=="}, "originalCommit": {"oid": "2b7cd1fbae31802acb85ffc9da863c1c88c9acd4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3020, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}