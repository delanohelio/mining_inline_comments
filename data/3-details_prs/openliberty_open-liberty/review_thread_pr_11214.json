{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTQxODg5", "number": 11214, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowNjo1NVrODmVj4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyOToxN1rODmWJ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTI1NzMxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/impl/Config14Impl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowNjo1NVrOFzskWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToxNjoyOVrOFzs9uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc1MTg5Ng==", "bodyText": "The 500 should be in a constant somewhere, possibly a constants file and possibly configurable??", "url": "https://github.com/OpenLiberty/open-liberty/pull/11214#discussion_r389751896", "createdAt": "2020-03-09T15:06:55Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/impl/Config14Impl.java", "diffHunk": "@@ -47,13 +50,14 @@\n      */\n     public Config14Impl(ConversionManager conversionManager, SortedSources sources, ScheduledExecutorService executor, long refreshInterval) {\n         super(conversionManager, sources);\n+        rawValueCache = new TimedCache<>(executor, 500, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fca2c003d716484e9b001b6a9c15f4aa3e9ea50"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc1ODM5Mg==", "bodyText": "Unless you object, I'll do that as a follow up.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11214#discussion_r389758392", "createdAt": "2020-03-09T15:16:29Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/impl/Config14Impl.java", "diffHunk": "@@ -47,13 +50,14 @@\n      */\n     public Config14Impl(ConversionManager conversionManager, SortedSources sources, ScheduledExecutorService executor, long refreshInterval) {\n         super(conversionManager, sources);\n+        rawValueCache = new TimedCache<>(executor, 500, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc1MTg5Ng=="}, "originalCommit": {"oid": "5fca2c003d716484e9b001b6a9c15f4aa3e9ea50"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTI2NTYzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/impl/Config14Impl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowOTowNlrOFzsp1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToxNjowOFrOFzs8tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc1MzMwMg==", "bodyText": "Does the convertedValueCache need clearing?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11214#discussion_r389753302", "createdAt": "2020-03-09T15:09:06Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/impl/Config14Impl.java", "diffHunk": "@@ -135,6 +144,18 @@ private SourcedValue getRawValue(String key) {\n         return raw;\n     }\n \n+    @Override\n+    public void close() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fca2c003d716484e9b001b6a9c15f4aa3e9ea50"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc1ODEzNQ==", "bodyText": "No. Potentially that could be an improvement, but this whole class should be GC'd shortly after close() is called.\nThe only reason for closing TimedCache is to cancel any pending invalidation task.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11214#discussion_r389758135", "createdAt": "2020-03-09T15:16:08Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/impl/Config14Impl.java", "diffHunk": "@@ -135,6 +144,18 @@ private SourcedValue getRawValue(String key) {\n         return raw;\n     }\n \n+    @Override\n+    public void close() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc1MzMwMg=="}, "originalCommit": {"oid": "5fca2c003d716484e9b001b6a9c15f4aa3e9ea50"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTM1NDQ0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.config.1.4/test/src/com/ibm/ws/microprofile/config14/test/ConversionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyOToxN1rOFzth3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyOToxN1rOFzth3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc2NzY0NQ==", "bodyText": "should be based on the 500 constant ... unless that is made configurable", "url": "https://github.com/OpenLiberty/open-liberty/pull/11214#discussion_r389767645", "createdAt": "2020-03-09T15:29:17Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.config.1.4/test/src/com/ibm/ws/microprofile/config14/test/ConversionTest.java", "diffHunk": "@@ -47,14 +47,16 @@ public void testBadCharUnicode() {\n     }\n \n     @Test\n-    public void testConverterCache() {\n+    public void testConverterCache() throws InterruptedException {\n         Config config = ConfigProviderResolver.instance().getBuilder().addDefaultSources().withConverter(TestType.class, 100, new TestTypeConverter()).build();\n         String key = \"testConverterCache\";\n \n         String rawString = \"This is the RAW String 1\";\n         String expected = rawString + \" - 1\";\n         System.setProperty(key, rawString);\n \n+        Thread.sleep(700); // Let the raw value cache expire", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fca2c003d716484e9b001b6a9c15f4aa3e9ea50"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2052, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}