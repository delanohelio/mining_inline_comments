{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDU3MTI5", "number": 12041, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoyMjo1NFrOD5FlBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowOToyMVrOD5Wuyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTg2ODIwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/mpFaultTolerance-3.0/resources/l10n/com.ibm.websphere.appserver.mpFaultTolerance-3.0.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoyMjo1NFrOGQKS-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoyMjo1NFrOGQKS-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5OTA5Ng==", "bodyText": "Change,\n\"This feature provides support for the MicroProfile Fault Tolerance 3.0 API.\"\nto,\n\"This feature supports the MicroProfile Fault Tolerance 3.0 API.\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r419599096", "createdAt": "2020-05-04T17:22:54Z", "author": {"login": "ManasiGandhi"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/mpFaultTolerance-3.0/resources/l10n/com.ibm.websphere.appserver.mpFaultTolerance-3.0.properties", "diffHunk": "@@ -0,0 +1,17 @@\n+###############################################################################\n+# Copyright (c) 2019 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=This feature provides support for the MicroProfile Fault Tolerance 3.0 API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd5e3b85f4c40d385dea20729d71ce881a99874e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDYyNDYzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.mpFaultTolerance3.0-metrics.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1MTo0N1rOGQkE5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1Mjo1M1rOGQkG4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyMTQ3Ng==", "bodyText": "Does the auto feature need WLP-Activation-Type: parallel too?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420021476", "createdAt": "2020-05-05T10:51:47Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.mpFaultTolerance3.0-metrics.feature", "diffHunk": "@@ -0,0 +1,9 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=com.ibm.websphere.appserver.mpFaultTolerance3.0-metrics\n+singleton=true\n+IBM-Provision-Capability: osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=com.ibm.websphere.appserver.mpFaultTolerance-3.0))\", \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=com.ibm.websphere.appserver.mpMetrics-2.3))\"\n+IBM-Install-Policy: when-satisfied\n+-bundles=com.ibm.ws.microprofile.faulttolerance.3.0.metrics\n+kind=noship\n+edition=full", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyMTk4NQ==", "bodyText": "Hmm, probably", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420021985", "createdAt": "2020-05-05T10:52:53Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.mpFaultTolerance3.0-metrics.feature", "diffHunk": "@@ -0,0 +1,9 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=com.ibm.websphere.appserver.mpFaultTolerance3.0-metrics\n+singleton=true\n+IBM-Provision-Capability: osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=com.ibm.websphere.appserver.mpFaultTolerance-3.0))\", \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=com.ibm.websphere.appserver.mpMetrics-2.3))\"\n+IBM-Install-Policy: when-satisfied\n+-bundles=com.ibm.ws.microprofile.faulttolerance.3.0.metrics\n+kind=noship\n+edition=full", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyMTQ3Ng=="}, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDYyNTQ1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/mpFaultTolerance-3.0/resources/l10n/com.ibm.websphere.appserver.mpFaultTolerance-3.0.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1MjowNlrOGQkFdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1MjowNlrOGQkFdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyMTYyMA==", "bodyText": "2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420021620", "createdAt": "2020-05-05T10:52:06Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/mpFaultTolerance-3.0/resources/l10n/com.ibm.websphere.appserver.mpFaultTolerance-3.0.properties", "diffHunk": "@@ -0,0 +1,17 @@\n+###############################################################################\n+# Copyright (c) 2019 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY1MDE5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/bnd.bnd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowMDowMVrOGQkUYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozMjo0NlrOGRTJeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNTQ0Mg==", "bodyText": "What is the minimum version of MP Config that FT 3.0 will require? The feature file above says it tolerates 1.1-1.4 ... in which case, this build path should use the 1.1 API? I realise that is subject to change because it will probably also have to support MP Config 2.0.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420025442", "createdAt": "2020-05-05T11:00:01Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/bnd.bnd", "diffHunk": "@@ -0,0 +1,44 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+\n+Bundle-Name: com.ibm.ws.microprofile.faulttolerance.3.0.metrics\n+Bundle-SymbolicName: com.ibm.ws.microprofile.faulttolerance.3.0.metrics\n+\n+Bundle-Description:MicroProfile Fault Tolerance 3.0 metrics integration, version ${bVersion}\n+\n+WS-TraceGroup: FAULTTOLERANCE\n+\n+-dsannotations: \\\n+        com.ibm.ws.microprofile.faulttolerance.metrics.integration.MetricRecorderProvider30Impl\n+\n+-buildpath: \\\n+        com.ibm.ws.logging;version=latest, \\\n+        com.ibm.ws.logging.core;version=latest, \\\n+        com.ibm.ws.kernel.service;version=latest,\\\n+        org.eclipse.osgi;version=latest, \\\n+        com.ibm.websphere.org.osgi.core;version=latest, \\\n+        com.ibm.websphere.org.osgi.service.component;version=latest, \\\n+        com.ibm.wsspi.org.osgi.service.component.annotations;version=latest, \\\n+        com.ibm.ws.microprofile.faulttolerance;version=latest, \\\n+        com.ibm.ws.microprofile.faulttolerance.spi;version=latest, \\\n+        com.ibm.websphere.org.eclipse.microprofile.metrics.2.3;version=latest, \\\n+        com.ibm.websphere.org.eclipse.microprofile.config.1.3;version=latest,\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MjY5Ng==", "bodyText": "We decided we'd leave this as-is for now, but will update it when we have the features available for MP 4.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420792696", "createdAt": "2020-05-06T13:32:46Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/bnd.bnd", "diffHunk": "@@ -0,0 +1,44 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+\n+Bundle-Name: com.ibm.ws.microprofile.faulttolerance.3.0.metrics\n+Bundle-SymbolicName: com.ibm.ws.microprofile.faulttolerance.3.0.metrics\n+\n+Bundle-Description:MicroProfile Fault Tolerance 3.0 metrics integration, version ${bVersion}\n+\n+WS-TraceGroup: FAULTTOLERANCE\n+\n+-dsannotations: \\\n+        com.ibm.ws.microprofile.faulttolerance.metrics.integration.MetricRecorderProvider30Impl\n+\n+-buildpath: \\\n+        com.ibm.ws.logging;version=latest, \\\n+        com.ibm.ws.logging.core;version=latest, \\\n+        com.ibm.ws.kernel.service;version=latest,\\\n+        org.eclipse.osgi;version=latest, \\\n+        com.ibm.websphere.org.osgi.core;version=latest, \\\n+        com.ibm.websphere.org.osgi.service.component;version=latest, \\\n+        com.ibm.wsspi.org.osgi.service.component.annotations;version=latest, \\\n+        com.ibm.ws.microprofile.faulttolerance;version=latest, \\\n+        com.ibm.ws.microprofile.faulttolerance.spi;version=latest, \\\n+        com.ibm.websphere.org.eclipse.microprofile.metrics.2.3;version=latest, \\\n+        com.ibm.websphere.org.eclipse.microprofile.config.1.3;version=latest,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNTQ0Mg=="}, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY1NDU0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/MetricRecorder30Impl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowMToyOVrOGQkXGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowMToyOVrOGQkXGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNjEzOA==", "bodyText": "This class is kinda hard to read in a github diff ... do you think it needs more doc?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420026138", "createdAt": "2020-05-05T11:01:29Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/MetricRecorder30Impl.java", "diffHunk": "@@ -0,0 +1,469 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.faulttolerance.metrics.integration;\n+\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.FallbackOccurred.NO_FALLBACK;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.FallbackOccurred.WITH_FALLBACK;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.RetriesOccurred.NO_RETRIES;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.RetriesOccurred.WITH_RETRIES;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.EXCEPTION_IN_ABORT_ON;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.EXCEPTION_NOT_IN_RETRY_ON;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.MAX_DURATION_REACHED;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.MAX_RETRIES_REACHED;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.NO_EXCEPTION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.util.EnumMap;\n+import java.util.function.LongSupplier;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Gauge;\n+import org.eclipse.microprofile.metrics.Histogram;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.MetricType;\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.Tag;\n+\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.ffdc.annotation.FFDCIgnore;\n+import com.ibm.ws.microprofile.faulttolerance.spi.BulkheadPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.CircuitBreakerPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.FallbackPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder;\n+import com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorderProvider.AsyncType;\n+import com.ibm.ws.microprofile.faulttolerance.spi.RetryPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory;\n+import com.ibm.ws.microprofile.faulttolerance.spi.TimeoutPolicy;\n+\n+/**\n+ *\n+ */\n+public class MetricRecorder30Impl implements MetricRecorder {\n+\n+    private static final EnumMap<RetryResultCategory, Tag> RETRY_RESULT_TAGS = new EnumMap<>(RetryResultCategory.class);\n+    private static final EnumMap<RetriesOccurred, Tag> RETRIES_OCCURRED_TAGS = new EnumMap<>(RetriesOccurred.class);\n+    static {\n+        RETRY_RESULT_TAGS.put(NO_EXCEPTION, new Tag(\"retryResult\", \"valueReturned\"));\n+        RETRY_RESULT_TAGS.put(EXCEPTION_IN_ABORT_ON, new Tag(\"retryResult\", \"exceptionNotRetryable\"));\n+        RETRY_RESULT_TAGS.put(EXCEPTION_NOT_IN_RETRY_ON, new Tag(\"retryResult\", \"exceptionNotRetryable\"));\n+        RETRY_RESULT_TAGS.put(MAX_DURATION_REACHED, new Tag(\"retryResult\", \"maxDurationReached\"));\n+        RETRY_RESULT_TAGS.put(MAX_RETRIES_REACHED, new Tag(\"retryResult\", \"maxRetriesReached\"));\n+\n+        RETRIES_OCCURRED_TAGS.put(WITH_RETRIES, new Tag(\"retried\", \"true\"));\n+        RETRIES_OCCURRED_TAGS.put(NO_RETRIES, new Tag(\"retried\", \"false\"));\n+    }\n+\n+    private final EnumMap<FallbackOccurred, Counter> invocationSuccessCounter;\n+    private final EnumMap<FallbackOccurred, Counter> invocationFailedCounter;\n+    private final EnumMap<RetryResultCategory, EnumMap<RetriesOccurred, Counter>> retryCallsCounter;\n+    private final Counter retryRetriesCounter;\n+    private final Histogram timeoutDurationHistogram;\n+    private final Counter timeoutTrueCalls;\n+    private final Counter timeoutFalseCalls;\n+    private final Counter circuitBreakerCallsSuccessCounter;\n+    private final Counter circuitBreakerCallsFailureCounter;\n+    private final Counter circuitBreakerCallsOpenCounter;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> circuitBreakerOpenTime;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> circuitBreakerHalfOpenTime;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> circuitBreakerClosedTime;\n+    private final Counter circuitBreakerTimesOpenedCounter;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> bulkheadConcurrentExecutions;\n+    private final Counter bulkheadRejectionsCounter;\n+    private final Counter bulkheadAcceptedCounter;\n+    private final Histogram bulkheadExecutionDuration;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> bulkheadQueuePopulation;\n+    private final Histogram bulkheadQueueWaitTimeHistogram;\n+    private LongSupplier concurrentExecutionCountSupplier = null;\n+    private LongSupplier queuePopulationSupplier = null;\n+    private long openNanos;\n+    private long halfOpenNanos;\n+    private long closedNanos;\n+\n+    private enum CircuitBreakerState {\n+        CLOSED,\n+        HALF_OPEN,\n+        OPEN\n+    }\n+\n+    public MetricRecorder30Impl(String methodName, MetricRegistry registry, RetryPolicy retryPolicy, CircuitBreakerPolicy circuitBreakerPolicy, TimeoutPolicy timeoutPolicy,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY2MTk1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowMzo0OFrOGQkbaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowMzo0OFrOGQkbaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNzI0Mw==", "bodyText": "2020", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420027243", "createdAt": "2020-05-05T11:03:48Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 IBM Corporation and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY2NDc0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowNDozMlrOGQkc9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTozNzowNVrOGQlY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNzYzOA==", "bodyText": "Should this package be com.ibm.ws.microprofile.faulttolerance30.metrics.integration to avoid an future clashes?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420027638", "createdAt": "2020-05-05T11:04:32Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+/**\n+ * @version 1.0\n+ */\n+@org.osgi.annotation.versioning.Version(\"1.0\")\n+@TraceOptions(traceGroup = \"FAULTTOLERANCE\")\n+package com.ibm.ws.microprofile.faulttolerance.metrics.integration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0Mjk5Mw==", "bodyText": "yes", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420042993", "createdAt": "2020-05-05T11:37:05Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+/**\n+ * @version 1.0\n+ */\n+@org.osgi.annotation.versioning.Version(\"1.0\")\n+@TraceOptions(traceGroup = \"FAULTTOLERANCE\")\n+package com.ibm.ws.microprofile.faulttolerance.metrics.integration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNzYzOA=="}, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY2ODQ1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/fat/src/com/ibm/ws/microprofile/faulttolerance/tck/FaultToleranceTck30Launcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowNTo0OFrOGQkfWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTozNjo1MlrOGQlYlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyODI0OA==", "bodyText": "is this debug still needed?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420028248", "createdAt": "2020-05-05T11:05:48Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/fat/src/com/ibm/ws/microprofile/faulttolerance/tck/FaultToleranceTck30Launcher.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.faulttolerance.tck;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import componenttest.annotation.AllowedFFDC;\n+import componenttest.annotation.Server;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.custom.junit.runner.Mode;\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+import componenttest.custom.junit.runner.TestModeFilter;\n+import componenttest.topology.impl.JavaInfo;\n+import componenttest.topology.impl.JavaInfo.Vendor;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.MvnUtils;\n+\n+/**\n+ * This is a test class that runs the whole Fault Tolerance 3.0 TCK. The TCK results\n+ * are copied in the results/junit directory before the Simplicity FAT framework\n+ * generates the html report - so there is detailed information on individual\n+ * tests as if they were running as simplicity junit FAT tests in the standard\n+ * location.\n+ */\n+@RunWith(FATRunner.class)\n+@Mode(TestMode.EXPERIMENTAL)\n+public class FaultToleranceTck30Launcher {\n+\n+    private static final String SERVER_NAME = \"FaultTolerance30TCKServer\";\n+\n+    @Server(SERVER_NAME)\n+    public static LibertyServer server;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        Vendor vendor = JavaInfo.forServer(server).vendor();\n+        // For J9 JVMs, add JIT trace for getConfig method to diagnose crashes\n+        if (vendor == Vendor.IBM || vendor == Vendor.OPENJ9) {\n+            Map<String, String> jvmOptions = server.getJvmOptionsAsMap();\n+            jvmOptions.put(\"-Xjit:{org/eclipse/microprofile/config/ConfigProvider.getConfig(Ljava/lang/ClassLoader;)Lorg/eclipse/microprofile/config/Config;}(tracefull,traceInlining,traceCG,log=getConfig.trace)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0MjkwMQ==", "bodyText": "Hopefully not, I haven't seen the issue occur on the latest OpenJ9. Once we're happy it's not happening any more, we should go through and remove it from all the test projects.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420042901", "createdAt": "2020-05-05T11:36:52Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/fat/src/com/ibm/ws/microprofile/faulttolerance/tck/FaultToleranceTck30Launcher.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.faulttolerance.tck;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import componenttest.annotation.AllowedFFDC;\n+import componenttest.annotation.Server;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.custom.junit.runner.Mode;\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+import componenttest.custom.junit.runner.TestModeFilter;\n+import componenttest.topology.impl.JavaInfo;\n+import componenttest.topology.impl.JavaInfo.Vendor;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.MvnUtils;\n+\n+/**\n+ * This is a test class that runs the whole Fault Tolerance 3.0 TCK. The TCK results\n+ * are copied in the results/junit directory before the Simplicity FAT framework\n+ * generates the html report - so there is detailed information on individual\n+ * tests as if they were running as simplicity junit FAT tests in the standard\n+ * location.\n+ */\n+@RunWith(FATRunner.class)\n+@Mode(TestMode.EXPERIMENTAL)\n+public class FaultToleranceTck30Launcher {\n+\n+    private static final String SERVER_NAME = \"FaultTolerance30TCKServer\";\n+\n+    @Server(SERVER_NAME)\n+    public static LibertyServer server;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        Vendor vendor = JavaInfo.forServer(server).vendor();\n+        // For J9 JVMs, add JIT trace for getConfig method to diagnose crashes\n+        if (vendor == Vendor.IBM || vendor == Vendor.OPENJ9) {\n+            Map<String, String> jvmOptions = server.getJvmOptionsAsMap();\n+            jvmOptions.put(\"-Xjit:{org/eclipse/microprofile/config/ConfigProvider.getConfig(Ljava/lang/ClassLoader;)Lorg/eclipse/microprofile/config/Config;}(tracefull,traceInlining,traceCG,log=getConfig.trace)\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyODI0OA=="}, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY3MTMyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowNjo1MlrOGQkhLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowNjo1MlrOGQkhLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyODcxNg==", "bodyText": "3.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420028716", "createdAt": "2020-05-05T11:06:52Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/pom.xml", "diffHunk": "@@ -0,0 +1,84 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.ibm.ws.microprofile.faulttolerance</groupId>\n+    <artifactId>tck.runner</artifactId>\n+    <version>2.1-SNAPSHOT</version>\n+    <packaging>pom</packaging>\n+    <name>MicroProfile Fault Tolerance 2.1 TCK Runner</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY3MTg3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowNzowNVrOGQkhlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowNzowNVrOGQkhlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyODgyMw==", "bodyText": "3.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420028823", "createdAt": "2020-05-05T11:07:05Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/pom.xml", "diffHunk": "@@ -0,0 +1,84 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.ibm.ws.microprofile.faulttolerance</groupId>\n+    <artifactId>tck.runner</artifactId>\n+    <version>2.1-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY3NDc3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite-lite.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowODowOVrOGQkjfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowODowOVrOGQkjfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyOTMwOA==", "bodyText": "3.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420029308", "createdAt": "2020-05-05T11:08:09Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite-lite.xml", "diffHunk": "@@ -0,0 +1,57 @@\n+<!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you \n+    may not use this file except in compliance with the License. You may obtain \n+    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless \n+    required by applicable law or agreed to in writing, software distributed \n+    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES \n+    OR CONDITIONS OF ANY KIND, either express or implied. See the License for \n+    the specific language governing permissions and limitations under the License. -->\n+<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\" >\n+\n+<suite name=\"microprofile-faulttolerance-2.1-TCK\" verbose=\"2\"\n+    configfailurepolicy=\"continue\">\n+\n+    <test name=\"microprofile-faulttolerance 2.1 TCK\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY3Nzg1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite-lite.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowOTowOVrOGQklYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTozNToxMFrOGQlVTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyOTc5NQ==", "bodyText": "Are we going to fix the timing on these tests for 3.0?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420029795", "createdAt": "2020-05-05T11:09:09Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite-lite.xml", "diffHunk": "@@ -0,0 +1,57 @@\n+<!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you \n+    may not use this file except in compliance with the License. You may obtain \n+    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless \n+    required by applicable law or agreed to in writing, software distributed \n+    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES \n+    OR CONDITIONS OF ANY KIND, either express or implied. See the License for \n+    the specific language governing permissions and limitations under the License. -->\n+<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\" >\n+\n+<suite name=\"microprofile-faulttolerance-2.1-TCK\" verbose=\"2\"\n+    configfailurepolicy=\"continue\">\n+\n+    <test name=\"microprofile-faulttolerance 2.1 TCK\">\n+        <method-selectors>\n+            <method-selector>\n+                <script language=\"beanshell\">\n+                     <!-- Some tests are sensitive to timing and can spuriously fail on slow build machines. -->\n+                     <!-- We exclude all of these tests when running in lite mode -->\n+                     <![CDATA[", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0MjA2Mg==", "bodyText": "I hope so, we have eclipse/microprofile-fault-tolerance#271 open and assigned to the 3.0 milestone", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420042062", "createdAt": "2020-05-05T11:35:10Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite-lite.xml", "diffHunk": "@@ -0,0 +1,57 @@\n+<!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you \n+    may not use this file except in compliance with the License. You may obtain \n+    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless \n+    required by applicable law or agreed to in writing, software distributed \n+    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES \n+    OR CONDITIONS OF ANY KIND, either express or implied. See the License for \n+    the specific language governing permissions and limitations under the License. -->\n+<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\" >\n+\n+<suite name=\"microprofile-faulttolerance-2.1-TCK\" verbose=\"2\"\n+    configfailurepolicy=\"continue\">\n+\n+    <test name=\"microprofile-faulttolerance 2.1 TCK\">\n+        <method-selectors>\n+            <method-selector>\n+                <script language=\"beanshell\">\n+                     <!-- Some tests are sensitive to timing and can spuriously fail on slow build machines. -->\n+                     <!-- We exclude all of these tests when running in lite mode -->\n+                     <![CDATA[", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyOTc5NQ=="}, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDY3ODUxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowOToyMVrOGQklvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTowOToyMVrOGQklvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyOTg4Nw==", "bodyText": "3.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420029887", "createdAt": "2020-05-05T11:09:21Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/publish/tckRunner/tck/tck-suite.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you \n+    may not use this file except in compliance with the License. You may obtain \n+    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless \n+    required by applicable law or agreed to in writing, software distributed \n+    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES \n+    OR CONDITIONS OF ANY KIND, either express or implied. See the License for \n+    the specific language governing permissions and limitations under the License. -->\n+<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\" >\n+\n+<suite name=\"microprofile-faulttolerance-2.1-TCK\" verbose=\"2\"\n+    configfailurepolicy=\"continue\">\n+\n+    <test name=\"microprofile-faulttolerance 2.1 TCK\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1887, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}