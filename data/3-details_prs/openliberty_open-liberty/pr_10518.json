{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NTM4MDE1", "number": 10518, "title": "MicroProfile Metrics 2.3 Implementation", "bodyText": "See #9985\n#build\nImplementation includes two new features\n\nSimpleTimer REST metric\nRuntime provided REST metrics (from monitoring/tracking REST resources)", "createdAt": "2020-01-21T21:58:16Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518", "merged": true, "mergeCommit": {"oid": "f115a952f8fed0c78b8d898141ab23f756595e77"}, "closed": true, "closedAt": "2020-01-28T15:29:17Z", "author": {"login": "Channyboy"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8z6UzgFqTM0NjUxMzEyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-hyGAgBqjI5ODMwNjk0NDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTEzMTIy", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518#pullrequestreview-346513122", "createdAt": "2020-01-22T11:19:15Z", "commit": {"oid": "1dc5b6db0cef5e6432e32c5a5a68b3b94ea7de54"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTczNjY3", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518#pullrequestreview-346973667", "createdAt": "2020-01-22T23:23:17Z", "commit": {"oid": "52bb05fed650e164ddd8688e5a5f54d198afcbd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyMzoxN1rOFgufMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyMzoxN1rOFgufMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2MDQwMw==", "bodyText": "This needs to be version 2.3 when it is uncommented.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518#discussion_r369860403", "createdAt": "2020-01-22T23:23:17Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile.metrics.2.3/bnd.bnd", "diffHunk": "@@ -0,0 +1,42 @@\n+#*******************************************************************************\n+# Copyright (c) 2019 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+Bundle-SymbolicName: com.ibm.websphere.org.eclipse.microprofile.metrics.2.3; singleton:=true\n+\n+Import-Package: \\\n+  javax.enterprise.util; version=\"[1.1,3)\",\\\n+  *\n+\n+Export-Package: \\\n+  org.eclipse.microprofile.metrics;version=2.3, \\\n+  org.eclipse.microprofile.metrics.annotation;version=2.3\n+\n+#Include-Resource: \\\n+#  @${repo;org.eclipse.microprofile.metrics:microprofile-metrics-api;2.2;EXACT}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52bb05fed650e164ddd8688e5a5f54d198afcbd9"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTQyODI3", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518#pullrequestreview-347542827", "createdAt": "2020-01-23T19:14:25Z", "commit": {"oid": "52bb05fed650e164ddd8688e5a5f54d198afcbd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxNDoyNVrOFhJmrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxNDoyNVrOFhJmrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDY4Nw==", "bodyText": "Do we need synchronization when using SimpleTimer in multiple threads?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518#discussion_r370304687", "createdAt": "2020-01-23T19:14:25Z", "author": {"login": "fmhwong"}, "path": "dev/com.ibm.ws.microprofile.metrics.2.3/src/com/ibm/ws/microprofile/metrics23/impl/SimpleTimerImpl.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.metrics23.impl;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Meter;\n+import org.eclipse.microprofile.metrics.SimpleTimer;\n+\n+import com.ibm.ws.microprofile.metrics.impl.Clock;\n+import com.ibm.ws.microprofile.metrics.impl.CounterImpl;\n+\n+/**\n+ * A timer metric which aggregates timing durations and provides duration statistics, plus\n+ * throughput statistics via {@link Meter}.\n+ */\n+public class SimpleTimerImpl implements SimpleTimer {\n+    /**\n+     * A timing context.\n+     *\n+     * @see SimpleTimerImpl#time()\n+     */\n+    public static class Context implements SimpleTimer.Context {\n+        private final SimpleTimerImpl simpleTimer;\n+        private final Clock clock;\n+        private final long startTime;\n+\n+        private Context(SimpleTimerImpl simpleTimer, Clock clock) {\n+            this.simpleTimer = simpleTimer;\n+            this.clock = clock;\n+            this.startTime = clock.getTick();\n+        }\n+\n+        /**\n+         * Updates the timer with the difference between current and start time. Call to this method will\n+         * not reset the start time. Multiple calls result in multiple updates.\n+         *\n+         * @return the elapsed time in nanoseconds\n+         */\n+        @Override\n+        public long stop() {\n+            final long elapsed = clock.getTick() - startTime;\n+            simpleTimer.update(elapsed, TimeUnit.NANOSECONDS);\n+            return elapsed;\n+        }\n+\n+        /** Equivalent to calling {@link #stop()}. */\n+        @Override\n+        public void close() {\n+            stop();\n+        }\n+    }\n+\n+    private final Counter count;\n+    private long elapsedTime;\n+    private final Clock clock;\n+\n+    public SimpleTimerImpl() {\n+        this(Clock.defaultClock());\n+    }\n+\n+    public SimpleTimerImpl(Clock clock) {\n+        this.clock = clock;\n+        this.count = new CounterImpl();\n+        this.elapsedTime = 0;\n+    }\n+\n+    /**\n+     * Adds a recorded duration.\n+     *\n+     * @param duration the length of the duration\n+     * @param unit     the scale unit of {@code duration}\n+     */\n+    @Override\n+    public void update(long duration, TimeUnit unit) {\n+        update(unit.toNanos(duration));\n+    }\n+\n+    @Override\n+    public <T> T time(Callable<T> event) throws Exception {\n+        final long startTime = clock.getTick();\n+        try {\n+            return event.call();\n+        } finally {\n+            update(clock.getTick() - startTime);\n+        }\n+    }\n+\n+    @Override\n+    public void time(Runnable event) {\n+        final long startTime = clock.getTick();\n+        try {\n+            event.run();\n+        } finally {\n+            update(clock.getTick() - startTime);\n+        }\n+    }\n+\n+    @Override\n+    public Context time() {\n+        return new Context(this, clock);\n+    }\n+\n+    private void update(long duration) {\n+        elapsedTime += duration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52bb05fed650e164ddd8688e5a5f54d198afcbd9"}, "originalPosition": 115}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5faaebae00ec203c82ad467389e09240446b2870", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5faaebae00ec203c82ad467389e09240446b2870", "committedDate": "2020-01-24T16:16:58Z", "message": "Remove 'ful' after RESTful and some cleanup"}, "afterCommit": {"oid": "d0c480c98383346ea4ad73c26ce23a9d3c73e096", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d0c480c98383346ea4ad73c26ce23a9d3c73e096", "committedDate": "2020-01-24T20:20:19Z", "message": "Remove 'ful' after RESTful and some cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjgyMTg3", "url": "https://github.com/OpenLiberty/open-liberty/pull/10518#pullrequestreview-348282187", "createdAt": "2020-01-24T23:42:54Z", "commit": {"oid": "d0c480c98383346ea4ad73c26ce23a9d3c73e096"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca26ca863aa85ae4ccbfea35624c7ecbdbbf759f", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ca26ca863aa85ae4ccbfea35624c7ecbdbbf759f", "committedDate": "2020-01-27T19:19:40Z", "message": "MicroProfile Metrics 2.3 Implementation with SimpleTimer and REST stat metrics"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0c480c98383346ea4ad73c26ce23a9d3c73e096", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d0c480c98383346ea4ad73c26ce23a9d3c73e096", "committedDate": "2020-01-24T20:20:19Z", "message": "Remove 'ful' after RESTful and some cleanup"}, "afterCommit": {"oid": "ca26ca863aa85ae4ccbfea35624c7ecbdbbf759f", "author": {"user": {"login": "Channyboy", "name": "David Chan"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ca26ca863aa85ae4ccbfea35624c7ecbdbbf759f", "committedDate": "2020-01-27T19:19:40Z", "message": "MicroProfile Metrics 2.3 Implementation with SimpleTimer and REST stat metrics"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3396, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}