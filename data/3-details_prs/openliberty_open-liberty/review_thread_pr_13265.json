{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NDU4MDI4", "number": 13265, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo0ODowMFrOEZ6_Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo1NTozNVrOEcnVcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjE2MjkwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.org.eclipse.microprofile/bnd.bnd", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo0ODowMFrOHDBzfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzozMToxM1rOHEMNkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNzM0Mg==", "bodyText": "What does this root bnd.bnd file in the com.ibm.websphere.org.eclipse.microprofile project do?\nInitially I expected it to be doing nothing, but there's quite a lot in here if that's the case.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472937342", "createdAt": "2020-08-19T10:48:00Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/bnd.bnd", "diffHunk": "@@ -0,0 +1,24 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion: 1.0\n+\n+-sub: *.bnd\n+\n+publish.wlp.jar.suffix: dev/api/stable\n+\n+instrument.disabled: true\n+\n+-buildpath: \\\n+  com.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.interceptor.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.jsonp.1.0, \\\n+  org.eclipse.microprofile.reactive.messaging:microprofile-reactive-messaging-api;version=1.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3NTc4Mg==", "bodyText": "The outer project references the sub bundles.  The subprojects inherit settings from the outer bnd file.  The settings in the file (instrument.disabled, publish.wlp.jar.suffix and buildpath) are set for all of the sub projects.  Unless assemble.gradle is updated to handle some of these liberty build properties like instrument.disabled and publish.wlp.jar.suffix in the sub projects, they need to be in the outer bnd file.  The buildpath is defined by bnd and is required to be in the outer bnd file.  buildpath will not be used if it is specified in the sub bnd files.  In the end, the buildpath here is used to set the import versions in the sub project bundles.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472975782", "createdAt": "2020-08-19T12:01:46Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/bnd.bnd", "diffHunk": "@@ -0,0 +1,24 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion: 1.0\n+\n+-sub: *.bnd\n+\n+publish.wlp.jar.suffix: dev/api/stable\n+\n+instrument.disabled: true\n+\n+-buildpath: \\\n+  com.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.interceptor.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.jsonp.1.0, \\\n+  org.eclipse.microprofile.reactive.messaging:microprofile-reactive-messaging-api;version=1.0.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNzM0Mg=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3NjAzMg==", "bodyText": "I will add some comments in the bnd file to help explain this.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472976032", "createdAt": "2020-08-19T12:02:18Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/bnd.bnd", "diffHunk": "@@ -0,0 +1,24 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion: 1.0\n+\n+-sub: *.bnd\n+\n+publish.wlp.jar.suffix: dev/api/stable\n+\n+instrument.disabled: true\n+\n+-buildpath: \\\n+  com.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.interceptor.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.jsonp.1.0, \\\n+  org.eclipse.microprofile.reactive.messaging:microprofile-reactive-messaging-api;version=1.0.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNzM0Mg=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE1NjQzMw==", "bodyText": "I updated the bnd.bnd files for the outer projects with comments.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r474156433", "createdAt": "2020-08-20T17:31:13Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/bnd.bnd", "diffHunk": "@@ -0,0 +1,24 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion: 1.0\n+\n+-sub: *.bnd\n+\n+publish.wlp.jar.suffix: dev/api/stable\n+\n+instrument.disabled: true\n+\n+-buildpath: \\\n+  com.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.interceptor.1.2;version=latest, \\\n+  com.ibm.websphere.javaee.jsonp.1.0, \\\n+  org.eclipse.microprofile.reactive.messaging:microprofile-reactive-messaging-api;version=1.0.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNzM0Mg=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjE2OTY1OnYy", "diffSide": "LEFT", "path": "dev/com.ibm.websphere.org.eclipse.microprofile/config.1.1.bnd", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo0OTo1NVrOHDB3jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzozMTozMlrOHEMOUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzODM4MQ==", "bodyText": "Copyright dates on all these modified bnd files should be updated.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472938381", "createdAt": "2020-08-19T10:49:55Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/config.1.1.bnd", "diffHunk": "@@ -26,14 +25,4 @@ Export-Package: \\\n Include-Resource: \\\n   @${repo;org.eclipse.microprofile.config:microprofile-config-api;1.1;EXACT}\n \n-\n WS-TraceGroup: APPCONFIG\n-\n--buildpath: \\\n-\tcom.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n-\n-instrument.disabled: true\n-\n-publish.wlp.jar.suffix: dev/api/stable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3MzY3NA==", "bodyText": "I will update them accordingly.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472973674", "createdAt": "2020-08-19T11:57:44Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/config.1.1.bnd", "diffHunk": "@@ -26,14 +25,4 @@ Export-Package: \\\n Include-Resource: \\\n   @${repo;org.eclipse.microprofile.config:microprofile-config-api;1.1;EXACT}\n \n-\n WS-TraceGroup: APPCONFIG\n-\n--buildpath: \\\n-\tcom.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n-\n-instrument.disabled: true\n-\n-publish.wlp.jar.suffix: dev/api/stable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzODM4MQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE1NjYyNQ==", "bodyText": "Copyright dates are updated.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r474156625", "createdAt": "2020-08-20T17:31:32Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/config.1.1.bnd", "diffHunk": "@@ -26,14 +25,4 @@ Export-Package: \\\n Include-Resource: \\\n   @${repo;org.eclipse.microprofile.config:microprofile-config-api;1.1;EXACT}\n \n-\n WS-TraceGroup: APPCONFIG\n-\n--buildpath: \\\n-\tcom.ibm.websphere.javaee.cdi.1.2;version=latest, \\\n-\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest\n-\n-instrument.disabled: true\n-\n-publish.wlp.jar.suffix: dev/api/stable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzODM4MQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjE3NzE3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo1MjowNFrOHDB78Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo1Njo0MVrOHHQKYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzOTUwNQ==", "bodyText": "This looks iffy. Previously we were including the 1.4 API jar, now we're including... the whole com.ibm.websphere.org.eclipse.microprofile project? What does that contain?\nAlso, it's worth noting that different versions of the MP specs often contain different conflicting versions of the same classes, so if we were putting all of them on the same classpath, that would not be ideal.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472939505", "createdAt": "2020-08-19T10:52:04Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "diffHunk": "@@ -10,5 +10,5 @@\n  *******************************************************************************/\n \n dependencies {\n-  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile.config.1.4')\n+  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3MzU2Nw==", "bodyText": "This is depending on the project I thought.  I did not think that was adding to the classpath, but if it is then I agree that it should be changed and will look to see what the behavior is.  I thought it was just adding a dependency on the project so that it is built before this project.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472973567", "createdAt": "2020-08-19T11:57:31Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "diffHunk": "@@ -10,5 +10,5 @@\n  *******************************************************************************/\n \n dependencies {\n-  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile.config.1.4')\n+  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzOTUwNQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAyNDE2OA==", "bodyText": "Adding things to the requiredLibs dependency configuration means they get packaged in the autoFVT zip lib directory so that they're on the classpath when your test runs.\nhttps://github.com/OpenLiberty/open-liberty/wiki/FAT-tests#adding-libraries-to-the-fat-classpath", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r473024168", "createdAt": "2020-08-19T13:21:28Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "diffHunk": "@@ -10,5 +10,5 @@\n  *******************************************************************************/\n \n dependencies {\n-  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile.config.1.4')\n+  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzOTUwNQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE1NzA5Nw==", "bodyText": "Will work on this early next week", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r474157097", "createdAt": "2020-08-20T17:32:23Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "diffHunk": "@@ -10,5 +10,5 @@\n  *******************************************************************************/\n \n dependencies {\n-  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile.config.1.4')\n+  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzOTUwNQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwMjEyMQ==", "bodyText": "I put in a change to resolve this issue.  It is part of commit 1 and commit 3", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r475902121", "createdAt": "2020-08-24T21:22:37Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "diffHunk": "@@ -10,5 +10,5 @@\n  *******************************************************************************/\n \n dependencies {\n-  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile.config.1.4')\n+  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzOTUwNQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2Njg4MA==", "bodyText": "I think this problem has been solved, but also see my new comment below: #13265 (comment)", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r477366880", "createdAt": "2020-08-26T14:56:41Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/build.gradle", "diffHunk": "@@ -10,5 +10,5 @@\n  *******************************************************************************/\n \n dependencies {\n-  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile.config.1.4')\n+  requiredLibs 'commons-logging:commons-logging:1.1.3', project(':com.ibm.ws.microprofile.config_repeat_tests'), project(':com.ibm.websphere.org.eclipse.microprofile')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzOTUwNQ=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjE4MTc5OnYy", "diffSide": "RIGHT", "path": "dev/wlp-gradle/subprojects/assemble.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo1MzozNVrOHDB-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzozMTo1NFrOHEMPHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MDIyNA==", "bodyText": "Comments to explain what this is doing and why it's needed would be helpful.\nPossibly some of it could be refactored into separate methods to make it more readable.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472940224", "createdAt": "2020-08-19T10:53:35Z", "author": {"login": "Azquelt"}, "path": "dev/wlp-gradle/subprojects/assemble.gradle", "diffHunk": "@@ -24,39 +24,68 @@ task publishWLPJars(type: Copy) {\n     from project.buildDir\n     into buildImage.file('wlp/' + bnd('publish.wlp.jar.suffix', 'lib'))\n     include bnd('publish.wlp.jar.include', '*.jar')\n+    def hasIFIXHeaders = [:]\n+    def fullVersions = [:]\n     if (parseBoolean(bnd('publish.wlp.jar.rename', 'true'))) {\n+        def outerSymbolicName = bnd('Bundle-SymbolicName', project.name)\n+        if (outerSymbolicName != null) {\n+            int index = outerSymbolicName.indexOf(\";\")\n+            if (index != -1) {\n+                outerSymbolicName = outerSymbolicName.substring(0, index).trim()\n+            }\n+        }\n+        def outerVersion = bnd('bVersion')\n+        def outerFullVersion = bnd('bFullVersion')\n+        fullVersions.put(outerSymbolicName, outerFullVersion)\n+\n         // iFixed jars should get renamed with a qualifier so they can exist in the filesystem\n         // next to the base version of the jar, *except* for jars that are directly\n         // referenced in a tool script's classpath...\n-        if (((bnd('IBM-Interim-Fixes', '').empty) && (bnd('IBM-Test-Fixes', '').empty))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot\"))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot.archive\"))\n-                || (project.name.equals(\"com.ibm.ws.appclient.boot\"))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot.cmdline\"))) {\n-            rename '(.*).jar', '$1' + \"_${bnd.bFullVersion}.jar\"\n+        if (((!bnd('IBM-Interim-Fixes', '').empty) || (!bnd('IBM-Test-Fixes', '').empty))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot\"))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot.archive\"))\n+                && (!project.name.equals(\"com.ibm.ws.appclient.boot\"))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot.cmdline\"))) {\n+            hasIFIXHeaders.put(outerSymbolicName, true)\n         }\n-        else {\n-            rename '(.*).jar', '$1' + \"_${bnd.bFullVersion}.${qualifier}.jar\"\n-        }\n-    }\n-    if (!bnd('-sub', '').empty) {\n-        def hasIFIXHeaders = [:]\n-        fileTree(dir: projectDir, include: bnd('-sub', '')).each { subBndFile ->\n-            Properties subBndProperties = new Properties()\n-            subBndFile.withInputStream { subBndProperties.load(it) }\n-            if (subBndProperties.getProperty(\"IBM-Interim-Fixes\") != null\n-                    || subBndProperties.getProperty(\"IBM-Test-Fixes\") != null) {\n-                hasIFIXHeaders.put(subBndProperties.getProperty(\"Bundle-SymbolicName\"), true)\n+\n+        if (!bnd('-sub', '').empty) {\n+            fileTree(dir: projectDir, include: bnd('-sub', '')).each { subBndFile ->\n+                Properties subBndProperties = new Properties()\n+                subBndFile.withInputStream { subBndProperties.load(it) }\n+                def symbolicName = subBndProperties.getProperty(\"Bundle-SymbolicName\")\n+                if (symbolicName != null) {\n+                    int index = symbolicName.indexOf(\";\")\n+                    if (index != -1) {\n+                        symbolicName = symbolicName.substring(0, index).trim()\n+                    }\n+\n+                    if (subBndProperties.getProperty(\"IBM-Interim-Fixes\") != null\n+                        || subBndProperties.getProperty(\"IBM-Test-Fixes\") != null) {\n+                        hasIFIXHeaders.put(symbolicName, true)\n+                    }\n+\n+                    def subBVersion = subBndProperties.getProperty('bVersion')\n+                    if (outerVersion.equals(subBVersion)) {\n+                        fullVersions.put(symbolicName, outerFullVersion)\n+                    } else {\n+                        fullVersions.put(symbolicName, subBVersion + outerFullVersion.substring(outerVersion.length()))\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3NzAyMA==", "bodyText": "I will add comments.  Refactoring into separate methods may not be as feasible.  It is mainly a swizzle of existing logic though.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r472977020", "createdAt": "2020-08-19T12:04:19Z", "author": {"login": "jhanders34"}, "path": "dev/wlp-gradle/subprojects/assemble.gradle", "diffHunk": "@@ -24,39 +24,68 @@ task publishWLPJars(type: Copy) {\n     from project.buildDir\n     into buildImage.file('wlp/' + bnd('publish.wlp.jar.suffix', 'lib'))\n     include bnd('publish.wlp.jar.include', '*.jar')\n+    def hasIFIXHeaders = [:]\n+    def fullVersions = [:]\n     if (parseBoolean(bnd('publish.wlp.jar.rename', 'true'))) {\n+        def outerSymbolicName = bnd('Bundle-SymbolicName', project.name)\n+        if (outerSymbolicName != null) {\n+            int index = outerSymbolicName.indexOf(\";\")\n+            if (index != -1) {\n+                outerSymbolicName = outerSymbolicName.substring(0, index).trim()\n+            }\n+        }\n+        def outerVersion = bnd('bVersion')\n+        def outerFullVersion = bnd('bFullVersion')\n+        fullVersions.put(outerSymbolicName, outerFullVersion)\n+\n         // iFixed jars should get renamed with a qualifier so they can exist in the filesystem\n         // next to the base version of the jar, *except* for jars that are directly\n         // referenced in a tool script's classpath...\n-        if (((bnd('IBM-Interim-Fixes', '').empty) && (bnd('IBM-Test-Fixes', '').empty))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot\"))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot.archive\"))\n-                || (project.name.equals(\"com.ibm.ws.appclient.boot\"))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot.cmdline\"))) {\n-            rename '(.*).jar', '$1' + \"_${bnd.bFullVersion}.jar\"\n+        if (((!bnd('IBM-Interim-Fixes', '').empty) || (!bnd('IBM-Test-Fixes', '').empty))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot\"))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot.archive\"))\n+                && (!project.name.equals(\"com.ibm.ws.appclient.boot\"))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot.cmdline\"))) {\n+            hasIFIXHeaders.put(outerSymbolicName, true)\n         }\n-        else {\n-            rename '(.*).jar', '$1' + \"_${bnd.bFullVersion}.${qualifier}.jar\"\n-        }\n-    }\n-    if (!bnd('-sub', '').empty) {\n-        def hasIFIXHeaders = [:]\n-        fileTree(dir: projectDir, include: bnd('-sub', '')).each { subBndFile ->\n-            Properties subBndProperties = new Properties()\n-            subBndFile.withInputStream { subBndProperties.load(it) }\n-            if (subBndProperties.getProperty(\"IBM-Interim-Fixes\") != null\n-                    || subBndProperties.getProperty(\"IBM-Test-Fixes\") != null) {\n-                hasIFIXHeaders.put(subBndProperties.getProperty(\"Bundle-SymbolicName\"), true)\n+\n+        if (!bnd('-sub', '').empty) {\n+            fileTree(dir: projectDir, include: bnd('-sub', '')).each { subBndFile ->\n+                Properties subBndProperties = new Properties()\n+                subBndFile.withInputStream { subBndProperties.load(it) }\n+                def symbolicName = subBndProperties.getProperty(\"Bundle-SymbolicName\")\n+                if (symbolicName != null) {\n+                    int index = symbolicName.indexOf(\";\")\n+                    if (index != -1) {\n+                        symbolicName = symbolicName.substring(0, index).trim()\n+                    }\n+\n+                    if (subBndProperties.getProperty(\"IBM-Interim-Fixes\") != null\n+                        || subBndProperties.getProperty(\"IBM-Test-Fixes\") != null) {\n+                        hasIFIXHeaders.put(symbolicName, true)\n+                    }\n+\n+                    def subBVersion = subBndProperties.getProperty('bVersion')\n+                    if (outerVersion.equals(subBVersion)) {\n+                        fullVersions.put(symbolicName, outerFullVersion)\n+                    } else {\n+                        fullVersions.put(symbolicName, subBVersion + outerFullVersion.substring(outerVersion.length()))\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MDIyNA=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE1NjgyOA==", "bodyText": "Comments have been added", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r474156828", "createdAt": "2020-08-20T17:31:54Z", "author": {"login": "jhanders34"}, "path": "dev/wlp-gradle/subprojects/assemble.gradle", "diffHunk": "@@ -24,39 +24,68 @@ task publishWLPJars(type: Copy) {\n     from project.buildDir\n     into buildImage.file('wlp/' + bnd('publish.wlp.jar.suffix', 'lib'))\n     include bnd('publish.wlp.jar.include', '*.jar')\n+    def hasIFIXHeaders = [:]\n+    def fullVersions = [:]\n     if (parseBoolean(bnd('publish.wlp.jar.rename', 'true'))) {\n+        def outerSymbolicName = bnd('Bundle-SymbolicName', project.name)\n+        if (outerSymbolicName != null) {\n+            int index = outerSymbolicName.indexOf(\";\")\n+            if (index != -1) {\n+                outerSymbolicName = outerSymbolicName.substring(0, index).trim()\n+            }\n+        }\n+        def outerVersion = bnd('bVersion')\n+        def outerFullVersion = bnd('bFullVersion')\n+        fullVersions.put(outerSymbolicName, outerFullVersion)\n+\n         // iFixed jars should get renamed with a qualifier so they can exist in the filesystem\n         // next to the base version of the jar, *except* for jars that are directly\n         // referenced in a tool script's classpath...\n-        if (((bnd('IBM-Interim-Fixes', '').empty) && (bnd('IBM-Test-Fixes', '').empty))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot\"))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot.archive\"))\n-                || (project.name.equals(\"com.ibm.ws.appclient.boot\"))\n-                || (project.name.equals(\"com.ibm.ws.kernel.boot.cmdline\"))) {\n-            rename '(.*).jar', '$1' + \"_${bnd.bFullVersion}.jar\"\n+        if (((!bnd('IBM-Interim-Fixes', '').empty) || (!bnd('IBM-Test-Fixes', '').empty))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot\"))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot.archive\"))\n+                && (!project.name.equals(\"com.ibm.ws.appclient.boot\"))\n+                && (!project.name.equals(\"com.ibm.ws.kernel.boot.cmdline\"))) {\n+            hasIFIXHeaders.put(outerSymbolicName, true)\n         }\n-        else {\n-            rename '(.*).jar', '$1' + \"_${bnd.bFullVersion}.${qualifier}.jar\"\n-        }\n-    }\n-    if (!bnd('-sub', '').empty) {\n-        def hasIFIXHeaders = [:]\n-        fileTree(dir: projectDir, include: bnd('-sub', '')).each { subBndFile ->\n-            Properties subBndProperties = new Properties()\n-            subBndFile.withInputStream { subBndProperties.load(it) }\n-            if (subBndProperties.getProperty(\"IBM-Interim-Fixes\") != null\n-                    || subBndProperties.getProperty(\"IBM-Test-Fixes\") != null) {\n-                hasIFIXHeaders.put(subBndProperties.getProperty(\"Bundle-SymbolicName\"), true)\n+\n+        if (!bnd('-sub', '').empty) {\n+            fileTree(dir: projectDir, include: bnd('-sub', '')).each { subBndFile ->\n+                Properties subBndProperties = new Properties()\n+                subBndFile.withInputStream { subBndProperties.load(it) }\n+                def symbolicName = subBndProperties.getProperty(\"Bundle-SymbolicName\")\n+                if (symbolicName != null) {\n+                    int index = symbolicName.indexOf(\";\")\n+                    if (index != -1) {\n+                        symbolicName = symbolicName.substring(0, index).trim()\n+                    }\n+\n+                    if (subBndProperties.getProperty(\"IBM-Interim-Fixes\") != null\n+                        || subBndProperties.getProperty(\"IBM-Test-Fixes\") != null) {\n+                        hasIFIXHeaders.put(symbolicName, true)\n+                    }\n+\n+                    def subBVersion = subBndProperties.getProperty('bVersion')\n+                    if (outerVersion.equals(subBVersion)) {\n+                        fullVersions.put(symbolicName, outerFullVersion)\n+                    } else {\n+                        fullVersions.put(symbolicName, subBVersion + outerFullVersion.substring(outerVersion.length()))\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MDIyNA=="}, "originalCommit": {"oid": "10b80ed348257850206ce0c17585ce7380aeea23"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDQwMDUwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.org.eclipse.microprofile/build.gradle", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo1NTozNVrOHHQHNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo0NTo0MVrOHHUxHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2NjA3MA==", "bodyText": "I can see that this is solving the problem of exposing the sub-bundles to fat tests which want to depend on them.\nHowever, it looks a little at odds with what's in the Gradle user guide here: https://docs.gradle.org/current/userguide/declaring_dependencies.html#sec:resolvable-consumable-configs\nThe user guide suggests:\n\ncanBeResolved and canBeConsumed both default to true.\nfor a configuration exposed to other projects as a dependency, you want canBeResolved = false and canBeConsumed = true\n\nI'm not necessarily saying this is wrong, since I'm not familiar enough with gradle (and I wouldn't be surprised if we were doing something a bit weird), but thought it worth mentioning that it looks different to what the user guide suggests.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r477366070", "createdAt": "2020-08-26T14:55:35Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/build.gradle", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+configurations {\n+  config11 {\n+    canBeResolved = true\n+  }\n+  config121 {\n+    canBeResolved = true\n+  }\n+  config13 {\n+    canBeResolved = true\n+  }\n+  config14 {\n+    canBeResolved = true\n+  }\n+  ft10 {\n+    canBeResolved = true\n+  }\n+  ft11 {\n+    canBeResolved = true\n+  }\n+}\n+\n+artifacts {\n+  config11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.1.jar'))\n+  config121(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.2.1.jar'))\n+  config13(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.3.jar'))\n+  config14(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.4.jar'))\n+  ft10(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.0.jar'))\n+  ft11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.1.jar'))\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1246eb7f74086fad01ddfa740067746d9e1c95c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM3MDY3NQ==", "bodyText": "Yes I struggled some with what to set them to.  I will say it is working the way that I have it configured.  Tests are getting just the bundle they are after.  I have asked @fritze2 to take another look at the PR in light of these new gradle file changes to get his feedback since he has a lot more experience with using gradle.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r477370675", "createdAt": "2020-08-26T15:01:41Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/build.gradle", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+configurations {\n+  config11 {\n+    canBeResolved = true\n+  }\n+  config121 {\n+    canBeResolved = true\n+  }\n+  config13 {\n+    canBeResolved = true\n+  }\n+  config14 {\n+    canBeResolved = true\n+  }\n+  ft10 {\n+    canBeResolved = true\n+  }\n+  ft11 {\n+    canBeResolved = true\n+  }\n+}\n+\n+artifacts {\n+  config11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.1.jar'))\n+  config121(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.2.1.jar'))\n+  config13(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.3.jar'))\n+  config14(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.4.jar'))\n+  ft10(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.0.jar'))\n+  ft11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.1.jar'))\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2NjA3MA=="}, "originalCommit": {"oid": "a1246eb7f74086fad01ddfa740067746d9e1c95c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM3MTgzNQ==", "bodyText": "Yes, I'd expect it to work since canBeConsumed will default to true.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r477371835", "createdAt": "2020-08-26T15:03:17Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/build.gradle", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+configurations {\n+  config11 {\n+    canBeResolved = true\n+  }\n+  config121 {\n+    canBeResolved = true\n+  }\n+  config13 {\n+    canBeResolved = true\n+  }\n+  config14 {\n+    canBeResolved = true\n+  }\n+  ft10 {\n+    canBeResolved = true\n+  }\n+  ft11 {\n+    canBeResolved = true\n+  }\n+}\n+\n+artifacts {\n+  config11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.1.jar'))\n+  config121(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.2.1.jar'))\n+  config13(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.3.jar'))\n+  config14(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.4.jar'))\n+  ft10(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.0.jar'))\n+  ft11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.1.jar'))\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2NjA3MA=="}, "originalCommit": {"oid": "a1246eb7f74086fad01ddfa740067746d9e1c95c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQzOTA2MQ==", "bodyText": "I read through what you pointed to in the guide and updated it to consume = true and resolve = false based off of my reading.  I ran one of the FATs with the change and it worked just fine.  With consume = false it failed miserably, but resolve = false looks to be what we want from reading through things.  The PR commit 1 is updated with the change.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r477439061", "createdAt": "2020-08-26T16:40:32Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/build.gradle", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+configurations {\n+  config11 {\n+    canBeResolved = true\n+  }\n+  config121 {\n+    canBeResolved = true\n+  }\n+  config13 {\n+    canBeResolved = true\n+  }\n+  config14 {\n+    canBeResolved = true\n+  }\n+  ft10 {\n+    canBeResolved = true\n+  }\n+  ft11 {\n+    canBeResolved = true\n+  }\n+}\n+\n+artifacts {\n+  config11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.1.jar'))\n+  config121(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.2.1.jar'))\n+  config13(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.3.jar'))\n+  config14(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.4.jar'))\n+  ft10(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.0.jar'))\n+  ft11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.1.jar'))\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2NjA3MA=="}, "originalCommit": {"oid": "a1246eb7f74086fad01ddfa740067746d9e1c95c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0MjMzMw==", "bodyText": "Looks good, thanks.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13265#discussion_r477442333", "createdAt": "2020-08-26T16:45:41Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.websphere.org.eclipse.microprofile/build.gradle", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+configurations {\n+  config11 {\n+    canBeResolved = true\n+  }\n+  config121 {\n+    canBeResolved = true\n+  }\n+  config13 {\n+    canBeResolved = true\n+  }\n+  config14 {\n+    canBeResolved = true\n+  }\n+  ft10 {\n+    canBeResolved = true\n+  }\n+  ft11 {\n+    canBeResolved = true\n+  }\n+}\n+\n+artifacts {\n+  config11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.1.jar'))\n+  config121(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.2.1.jar'))\n+  config13(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.3.jar'))\n+  config14(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.config.1.4.jar'))\n+  ft10(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.0.jar'))\n+  ft11(file('build/libs/com.ibm.websphere.org.eclipse.microprofile.faulttolerance.1.1.jar'))\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2NjA3MA=="}, "originalCommit": {"oid": "a1246eb7f74086fad01ddfa740067746d9e1c95c"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3024, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}