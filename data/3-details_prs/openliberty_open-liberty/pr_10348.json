{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDU4MDI0", "number": 10348, "title": "testUnmanagedThreadSubmitsTask waits for what never happens", "bodyText": "pull fixes #10347", "createdAt": "2020-01-09T16:49:24Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348", "merged": true, "mergeCommit": {"oid": "96c62d86044484bd5abc2525aa8d40339cb012cb"}, "closed": true, "closedAt": "2020-01-13T14:21:51Z", "author": {"login": "njr-11"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4s01MgH2gAyMzYxMDU4MDI0OmYwYzMwM2MyYTY3MTEzNWM1YzY4YzdjMTcyMzJhOWMzNDUwNzZmZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5GV9tAFqTM0MTQ1NzQxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f0c303c2a671135c5c68c7c17232a9c345076fd4", "committedDate": "2020-01-09T16:48:13Z", "message": "Issue #10347 testUnmanagedThreadSubmitsTask waits for what never happens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwOTAxNTU4", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#pullrequestreview-340901558", "createdAt": "2020-01-10T00:46:33Z", "commit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwMDo0NjozM1rOFcHlnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwMDo0NjozM1rOFcHlnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyODc2NA==", "bodyText": "Instead of adding this logic inline, why not correct the logic in pollForResult?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#discussion_r365028764", "createdAt": "2020-01-10T00:46:33Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat/test-applications/schedtest/src/web/SchedulerFATServlet.java", "diffHunk": "@@ -2086,8 +2065,21 @@ public void testFindByName(PrintWriter out) throws Exception {\n             throw new Exception(\"Should not be able to see tasks from outside of application. \" + resultsByTaskId);\n \n         // Wait for tasks C and D to complete their only execution.\n-        pollForResult(statusC.getTaskId(), 1);\n-        pollForResult(statusD.getTaskId(), 1);\n+        for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDM2ODQ4", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#pullrequestreview-341436848", "createdAt": "2020-01-10T21:40:11Z", "commit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0MDoxMVrOFcgxBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0MDoxMVrOFcgxBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0MTI4NA==", "bodyText": "Should Integer.valueOf(1) here be Integer.valueOf(3) instead?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#discussion_r365441284", "createdAt": "2020-01-10T21:40:11Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat/test-applications/schedtest/src/web/SchedulerFATServlet.java", "diffHunk": "@@ -3830,9 +3853,13 @@ public Integer call() throws Exception {\n                     if (status.hasResult())\n                         throw new Exception(\"Task status initial snapshot should not have a result. \" + status);\n \n-                    status = pollForResult(status.getTaskId(), 3);\n+                    long taskId = status.getTaskId();\n+                    for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS\n+                            && (status = scheduler.getStatus(taskId)) != null\n+                            && !(status.hasResult() && Integer.valueOf(1).equals(status.getResult())); )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "originalPosition": 145}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDM3NzIx", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#pullrequestreview-341437721", "createdAt": "2020-01-10T21:42:20Z", "commit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0MjoyMFrOFcgztA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0MjoyMFrOFcgztA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0MTk3Mg==", "bodyText": "Should we first check if statusC == null before we check statusC.hasResults()?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#discussion_r365441972", "createdAt": "2020-01-10T21:42:20Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat/test-applications/schedtest/src/web/SchedulerFATServlet.java", "diffHunk": "@@ -2086,8 +2065,21 @@ public void testFindByName(PrintWriter out) throws Exception {\n             throw new Exception(\"Should not be able to see tasks from outside of application. \" + resultsByTaskId);\n \n         // Wait for tasks C and D to complete their only execution.\n-        pollForResult(statusC.getTaskId(), 1);\n-        pollForResult(statusD.getTaskId(), 1);\n+        for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS\n+                && (statusC = scheduler.getStatus(statusC.getTaskId())) != null\n+                && !(statusC.hasResult() && Integer.valueOf(1).equals(statusC.getResult())); )\n+            Thread.sleep(POLL_INTERVAL);\n+\n+        if (!statusC.hasResult() || !Integer.valueOf(1).equals(statusC.getResult()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDM4MDQw", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#pullrequestreview-341438040", "createdAt": "2020-01-10T21:43:01Z", "commit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0MzowMVrOFcg0jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0MzowMVrOFcg0jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0MjE4OA==", "bodyText": "Should we first check if statusD == null before we check statusD.hasResults()?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#discussion_r365442188", "createdAt": "2020-01-10T21:43:01Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat/test-applications/schedtest/src/web/SchedulerFATServlet.java", "diffHunk": "@@ -2086,8 +2065,21 @@ public void testFindByName(PrintWriter out) throws Exception {\n             throw new Exception(\"Should not be able to see tasks from outside of application. \" + resultsByTaskId);\n \n         // Wait for tasks C and D to complete their only execution.\n-        pollForResult(statusC.getTaskId(), 1);\n-        pollForResult(statusD.getTaskId(), 1);\n+        for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS\n+                && (statusC = scheduler.getStatus(statusC.getTaskId())) != null\n+                && !(statusC.hasResult() && Integer.valueOf(1).equals(statusC.getResult())); )\n+            Thread.sleep(POLL_INTERVAL);\n+\n+        if (!statusC.hasResult() || !Integer.valueOf(1).equals(statusC.getResult()))\n+            throw new Exception(\"Task C did not complete \" + statusC);\n+\n+        for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS\n+                && (statusD = scheduler.getStatus(statusD.getTaskId())) != null\n+                && !(statusD.hasResult() && Integer.valueOf(1).equals(statusD.getResult())); )\n+            Thread.sleep(POLL_INTERVAL);\n+\n+        if (!statusD.hasResult() || !Integer.valueOf(1).equals(statusD.getResult()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDM5NDI3", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#pullrequestreview-341439427", "createdAt": "2020-01-10T21:46:21Z", "commit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0NjoyMVrOFcg4fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo0NjoyMVrOFcg4fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0MzE5Ng==", "bodyText": "Is statusB.isDone() the same thing as statusB.hasResult()?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#discussion_r365443196", "createdAt": "2020-01-10T21:46:21Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat/test-applications/schedtest/src/web/SchedulerFATServlet.java", "diffHunk": "@@ -3779,13 +3794,21 @@ public void testTwoTasksInOneTransaction(PrintWriter out) throws Exception {\n             tran.commit();\n         }\n \n-        statusA = pollForResult(statusA.getTaskId(), 1);\n-        if (statusA == null || !statusA.isDone())\n-            throw new Exception(\"TaskA not completed in allotted interval. Status: \" + statusA);\n+        for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS\n+                && (statusA = scheduler.getStatus(statusA.getTaskId())) != null\n+                && !(statusA.hasResult() && Integer.valueOf(1).equals(statusA.getResult())); )\n+            Thread.sleep(POLL_INTERVAL);\n+\n+        if (statusA == null || !statusA.isDone() || !Integer.valueOf(1).equals(statusA.getResult()))\n+            throw new Exception(\"TaskA not completed with expected result in allotted interval. Status: \" + statusA);\n+\n+        for (long start = System.nanoTime(); System.nanoTime() - start < TIMEOUT_NS\n+                && (statusB = scheduler.getStatus(statusB.getTaskId())) != null\n+                && !(statusB.hasResult() && Integer.valueOf(1).equals(statusB.getResult())); )\n+            Thread.sleep(POLL_INTERVAL);\n \n-        statusB = pollForResult(statusB.getTaskId(), 1);\n-        if (statusB == null || !statusB.isDone())\n-            throw new Exception(\"TaskB not completed in allotted interval. Status: \" + statusB);\n+        if (statusB == null || !statusB.isDone() || !Integer.valueOf(1).equals(statusB.getResult()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c303c2a671135c5c68c7c17232a9c345076fd4"}, "originalPosition": 132}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ac78395bfc6be95e9de9b998320f41a37bc034", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/91ac78395bfc6be95e9de9b998320f41a37bc034", "committedDate": "2020-01-10T22:28:59Z", "message": "Issue #8610 code review improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDU3NDEw", "url": "https://github.com/OpenLiberty/open-liberty/pull/10348#pullrequestreview-341457410", "createdAt": "2020-01-10T22:32:02Z", "commit": {"oid": "91ac78395bfc6be95e9de9b998320f41a37bc034"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3469, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}