{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNjIzMTQz", "number": 10338, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDo1MDo1N1rODWqmHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMTowNDoyNVrODWqypQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDkzMTQ4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.concurrent.persistent_fat_demo_timers/publish/servers/com.ibm.ws.concurrent.persistent.fat.demo.timers/server.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDo1MDo1N1rOFbjeZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDo1MDo1N1rOFbjeZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzNzA5Mw==", "bodyText": "The 3 second value will not be permitted (too small) on latest level of code (meaning tests will fail when you try a personal build).  There is a way for tests to override that, but the performance test is intended to be more like real world scenarios.  The minimum allowed value is currently 100s.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10338#discussion_r364437093", "createdAt": "2020-01-08T20:50:57Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat_demo_timers/publish/servers/com.ibm.ws.concurrent.persistent.fat.demo.timers/server.xml", "diffHunk": "@@ -16,8 +16,11 @@\n   </featureManager>\n \n   <include location=\"../fatTestPorts.xml\"/>\n-\n-  <dataSource id=\"DefaultDataSource\" fat.modify=\"true\">\n+  \n+  <!-- Edit persistentExecutor defaults with attribute missedTaskThreshold to enable failover -->\n+  <persistentExecutor id=\"defaultEJBPersistentTimerExecutor\" missedTaskThreshold=\"3s\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3e180167af8938717ecf9042ec1b1d34781b6"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDk2MzU3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.concurrent.persistent_fat_demo_timers/fat/src/com/ibm/ws/concurrent/persistent/fat/demo/timers/DemoTimerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMTowNDoyNVrOFbjynw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMToyODo1MFrOFbkYeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjI3MQ==", "bodyText": "The fact that it is possible to run the test with a one-phase only data source tells me that we need to add/update a scenario to cover multiple transactional resources.  It's fine to deliver this for now, be we need a follow-on work item to cover that.  It should be an easy update, just tweak the @Resource for the DataSource in AutomaticDatabase timer.  But then the create table code will need to be moved so that XADataSource can be used.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10338#discussion_r364442271", "createdAt": "2020-01-08T21:04:25Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat_demo_timers/fat/src/com/ibm/ws/concurrent/persistent/fat/demo/timers/DemoTimerTest.java", "diffHunk": "@@ -56,6 +56,15 @@ public static void setUp() throws Exception {\n         //Get driver name\n         server.addEnvVar(\"DB_DRIVER\", DatabaseContainerType.valueOf(testContainer).getDriverName());\n \n+        if (DatabaseContainerType.valueOf(testContainer) == DatabaseContainerType.Oracle) {\n+            //Type=javax.sql.ConnectionPoolDataSource to avoid\n+            //  ORA-02089: COMMIT is not allowed in a subordinate session\n+            //  when application tries to create a new table using oracle.\n+            server.addEnvVar(\"DS_TYPE\", \"javax.sql.ConnectionPoolDataSource\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3e180167af8938717ecf9042ec1b1d34781b6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1MTk2Mg==", "bodyText": "Yes, I will come back to this in another PR.", "url": "https://github.com/OpenLiberty/open-liberty/pull/10338#discussion_r364451962", "createdAt": "2020-01-08T21:28:50Z", "author": {"login": "KyleAure"}, "path": "dev/com.ibm.ws.concurrent.persistent_fat_demo_timers/fat/src/com/ibm/ws/concurrent/persistent/fat/demo/timers/DemoTimerTest.java", "diffHunk": "@@ -56,6 +56,15 @@ public static void setUp() throws Exception {\n         //Get driver name\n         server.addEnvVar(\"DB_DRIVER\", DatabaseContainerType.valueOf(testContainer).getDriverName());\n \n+        if (DatabaseContainerType.valueOf(testContainer) == DatabaseContainerType.Oracle) {\n+            //Type=javax.sql.ConnectionPoolDataSource to avoid\n+            //  ORA-02089: COMMIT is not allowed in a subordinate session\n+            //  when application tries to create a new table using oracle.\n+            server.addEnvVar(\"DS_TYPE\", \"javax.sql.ConnectionPoolDataSource\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjI3MQ=="}, "originalCommit": {"oid": "c4b3e180167af8938717ecf9042ec1b1d34781b6"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2291, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}