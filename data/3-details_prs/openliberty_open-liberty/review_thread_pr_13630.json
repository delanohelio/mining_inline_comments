{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzI0MDYx", "number": 13630, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0MTo0NlrOEcGlLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDowOToxNFrOEtpNJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTAzNDA3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurityClient.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0MTo0NlrOHGbeOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxMzowN1rOHGc6UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMzYwOA==", "bodyText": "does com.ibm.ws.cdi.client bundle need to be transformed?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r476503608", "createdAt": "2020-08-25T14:41:46Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurityClient.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.cdi3.0-appSecurityClient\n+visibility=private\n+IBM-Process-Types: client, \\\n+ server\n+IBM-Provision-Capability: \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.appSecurityClient-2.0))\"\n+-bundles=\\\n+ com.ibm.ws.cdi.client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyNzE4NQ==", "bodyText": "No. It does not depend on any Java EE classes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r476527185", "createdAt": "2020-08-25T15:13:07Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurityClient.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.cdi3.0-appSecurityClient\n+visibility=private\n+IBM-Process-Types: client, \\\n+ server\n+IBM-Provision-Capability: \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.appSecurityClient-2.0))\"\n+-bundles=\\\n+ com.ibm.ws.cdi.client", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMzYwOA=="}, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTA1NDAyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurity.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0NTo1MVrOHGbqdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxMzoyOFrOHGc7Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwNjc0Mw==", "bodyText": "does com.ibm.ws.cdi.security need to be transformed?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r476506743", "createdAt": "2020-08-25T14:45:51Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurity.feature", "diffHunk": "@@ -0,0 +1,11 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.cdi3.0-appSecurity\n+visibility=private\n+IBM-Provision-Capability: \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.appSecurity-4.0))\"\n+-bundles=\\\n+ com.ibm.ws.cdi.security", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyNzQyMg==", "bodyText": "No. It does not depend on any Java EE classes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r476527422", "createdAt": "2020-08-25T15:13:28Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurity.feature", "diffHunk": "@@ -0,0 +1,11 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.cdi3.0-appSecurity\n+visibility=private\n+IBM-Provision-Capability: \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+ osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.appSecurity-4.0))\"\n+-bundles=\\\n+ com.ibm.ws.cdi.security", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwNjc0Mw=="}, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTA4MzQyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.client_fat/.classpath", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo1MjowOVrOHGb82Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxNDo1MlrOHGc_Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxMTQ0OQ==", "bodyText": "New projects should be named io.openliberty.... In this case io.openliberty.security.internal.client_fat or maybe io.openliberty.security.client.internal_fat?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r476511449", "createdAt": "2020-08-25T14:52:09Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.security.client_fat/.classpath", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyODQ3MQ==", "bodyText": "Technically, this is a project that I moved from WS-CD-Open. Additionally, I name the fats to match the project they are testing. In this case, the project being tested is com.ibm.ws.security.client.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r476528471", "createdAt": "2020-08-25T15:14:52Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.client_fat/.classpath", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxMTQ0OQ=="}, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODc3MTQxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/appSecurityClient-2.0/resources/l10n/io.openliberty.appSecurityClient-2.0.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyMToyNlrOHJcclg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTozMDozMFrOHM4JWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTMwMg==", "bodyText": "needs a serial comma\nThis feature enables application security, CSIv2, and SSL on the client.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r479665302", "createdAt": "2020-08-29T16:21:26Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/appSecurityClient-2.0/resources/l10n/io.openliberty.appSecurityClient-2.0.properties", "diffHunk": "@@ -0,0 +1,18 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=Support for securing the client container runtime environment \\\n+ and applications. This feature enables application security, CSIv2 and SSL on the client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI2NDg1Nw==", "bodyText": "Updated the text.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r483264857", "createdAt": "2020-09-03T21:30:30Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/appSecurityClient-2.0/resources/l10n/io.openliberty.appSecurityClient-2.0.properties", "diffHunk": "@@ -0,0 +1,18 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=Support for securing the client container runtime environment \\\n+ and applications. This feature enables application security, CSIv2 and SSL on the client.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTMwMg=="}, "originalCommit": {"oid": "b3eb1e01e4842b785f7e780ab55d6eebeba73b3d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzYyODQ5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurityClient.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToxMTo1MlrOHd4S7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjozNjo0NlrOHd8Cmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5MzEwMg==", "bodyText": "The javaee version of this autofeature had 1.0 after appSecurityClient.  Did you remove it on purpose?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501093102", "createdAt": "2020-10-07T15:11:52Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurityClient.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NDQ1OA==", "bodyText": "Yes. I didn't want to tie it to any version of appSecurityClient, just that app security is enabled.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501154458", "createdAt": "2020-10-07T16:36:46Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurityClient.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5MzEwMg=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzYzODY3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurity.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToxNDowNlrOHd4ZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjozNjo0OVrOHd8CuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5NDgyOA==", "bodyText": "The javaee version of this autofeature had 1.0 after appSecurity. Did you remove it on purpose?  Should it be 4.0 for this one?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501094828", "createdAt": "2020-10-07T15:14:06Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurity.feature", "diffHunk": "@@ -0,0 +1,11 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NDQ4OQ==", "bodyText": "Yes. I didn't want to tie it to any version of appSecurity, just that app security is enabled.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501154489", "createdAt": "2020-10-07T16:36:49Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.cdi3.0-appSecurity.feature", "diffHunk": "@@ -0,0 +1,11 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5NDgyOA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzY1MjEwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.csiv2-2.0.feature", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToxNzowMlrOHd4iEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzozNDozMlrOHepMMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5Njk3OQ==", "bodyText": "I don't see any reason that this auto feature cannot be changed to io.openliberty.  It is not singleton feature.  It is funny that is is named csiv2 in reality since the auto feature doesn't actually rely on a csiv2 feature being enabled, but rather enterpriseBeansRemote and appSecurity", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501096979", "createdAt": "2020-10-07T15:17:02Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.csiv2-2.0.feature", "diffHunk": "@@ -0,0 +1,14 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NDkyMQ==", "bodyText": "It could be renamed. I only kept it named similar to the original b/c I couldn't rename that one and I wanted them to be paired. If you want me to rename with io.openliberty i can. I believe the CSIV2 is probably indicative of the functionality that is being enabled since remote EJBs required CSIv2.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501154921", "createdAt": "2020-10-07T16:37:30Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.csiv2-2.0.feature", "diffHunk": "@@ -0,0 +1,14 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5Njk3OQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNDY4Mg==", "bodyText": "In general the direction is for new features to be io.openliberty if possible.  We are not trying to do renames of existing features.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501214682", "createdAt": "2020-10-07T18:14:37Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.csiv2-2.0.feature", "diffHunk": "@@ -0,0 +1,14 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5Njk3OQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5NDE5NA==", "bodyText": "Renamed it io.openliberty.enterpriseBeansRemote-appSecurity-1.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501894194", "createdAt": "2020-10-08T17:34:32Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/com.ibm.websphere.appserver.csiv2-2.0.feature", "diffHunk": "@@ -0,0 +1,14 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5Njk3OQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzY3Mjc3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.cdi.web/src/com/ibm/ws/cdi/web/impl/AbstractInitialListenerRegistration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyMToyMVrOHd4vCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjozODoxMVrOHd8F6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMDI5OQ==", "bodyText": "getName() is a much simpler method to call and there is no reason to require getCanonicalName", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501100299", "createdAt": "2020-10-07T15:21:21Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.cdi.web/src/com/ibm/ws/cdi/web/impl/AbstractInitialListenerRegistration.java", "diffHunk": "@@ -89,7 +89,7 @@ public void registerListener(IServletContext isc) {\n                     Tr.debug(tc, \"added WeldInitialListener to the servlet context\");\n \n                 //Put bean manager on the servlet context\n-                isc.setAttribute(\"javax.enterprise.inject.spi.BeanManager\", beanManager);\n+                isc.setAttribute(BeanManager.class.getCanonicalName(), beanManager);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NTMwNQ==", "bodyText": "Changed.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501155305", "createdAt": "2020-10-07T16:38:11Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.cdi.web/src/com/ibm/ws/cdi/web/impl/AbstractInitialListenerRegistration.java", "diffHunk": "@@ -89,7 +89,7 @@ public void registerListener(IServletContext isc) {\n                     Tr.debug(tc, \"added WeldInitialListener to the servlet context\");\n \n                 //Put bean manager on the servlet context\n-                isc.setAttribute(\"javax.enterprise.inject.spi.BeanManager\", beanManager);\n+                isc.setAttribute(BeanManager.class.getCanonicalName(), beanManager);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMDI5OQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzY4MDQ1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.kernel.feature.core/src/com/ibm/ws/kernel/feature/internal/subsystem/FeatureDefinitionUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyMjo0OFrOHd4zuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjozODo1NVrOHd8H7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMTQ5Nw==", "bodyText": "There is no appSecurityClient-2.0 feature", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501101497", "createdAt": "2020-10-07T15:22:48Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.kernel.feature.core/src/com/ibm/ws/kernel/feature/internal/subsystem/FeatureDefinitionUtils.java", "diffHunk": "@@ -85,7 +85,8 @@\n     public final static Collection<String> ALLOWED_ON_CLIENT_ONLY_FEATURES = Arrays.asList(\"com.ibm.websphere.appserver.javaeeClient-7.0\",\n                                                                                            \"com.ibm.websphere.appserver.javaeeClient-8.0\",\n                                                                                            \"io.openliberty.jakartaeeClient-9.0\",\n-                                                                                           \"com.ibm.websphere.appserver.appSecurityClient-1.0\");\n+                                                                                           \"com.ibm.websphere.appserver.appSecurityClient-1.0\",\n+                                                                                           \"io.openliberty.appSecurityClient-2.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NTgyMA==", "bodyText": "Changed.\nI had originally created one before the private servlet feature rename. Had missed this change from prior to merging in those changes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501155820", "createdAt": "2020-10-07T16:38:55Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.kernel.feature.core/src/com/ibm/ws/kernel/feature/internal/subsystem/FeatureDefinitionUtils.java", "diffHunk": "@@ -85,7 +85,8 @@\n     public final static Collection<String> ALLOWED_ON_CLIENT_ONLY_FEATURES = Arrays.asList(\"com.ibm.websphere.appserver.javaeeClient-7.0\",\n                                                                                            \"com.ibm.websphere.appserver.javaeeClient-8.0\",\n                                                                                            \"io.openliberty.jakartaeeClient-9.0\",\n-                                                                                           \"com.ibm.websphere.appserver.appSecurityClient-1.0\");\n+                                                                                           \"com.ibm.websphere.appserver.appSecurityClient-1.0\",\n+                                                                                           \"io.openliberty.appSecurityClient-2.0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMTQ5Nw=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzcwOTUwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyODo0MVrOHd5Frw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowOToyMVrOHeyGpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjA5NQ==", "bodyText": "Shouldn't some of these applications be built automatically with the tooling without having to write them all out in the gradle file?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501106095", "createdAt": "2020-10-07T15:28:41Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "diffHunk": "@@ -0,0 +1,1033 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+// TODO earDD.ear, TechnologySamples.ear\n+\n+dependencies {\n+  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',\n+               'org.apache.httpcomponents:httpcore:4.1.2',\n+               'commons-codec:commons-codec:1.4',\n+               'commons-logging:commons-logging:1.1.1',\n+               project(':com.ibm.websphere.javaee.servlet.3.0'),\n+               project(':com.ibm.ws.security.audit_fat.common.tooling')\n+}\n+\n+addRequiredLibraries.dependsOn addJakartaTransformer\n+\n+/* \n+ * This is where all test applications will be built.\n+ */\n+def appBuildDir = \"${buildDir}/test-application\"\n+\n+\n+/******************************************************************", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2MTU3Nw==", "bodyText": "Is there an easy way to do this? If so, I am more than happy to make the changes.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501161577", "createdAt": "2020-10-07T16:47:53Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "diffHunk": "@@ -0,0 +1,1033 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+// TODO earDD.ear, TechnologySamples.ear\n+\n+dependencies {\n+  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',\n+               'org.apache.httpcomponents:httpcore:4.1.2',\n+               'commons-codec:commons-codec:1.4',\n+               'commons-logging:commons-logging:1.1.1',\n+               project(':com.ibm.websphere.javaee.servlet.3.0'),\n+               project(':com.ibm.ws.security.audit_fat.common.tooling')\n+}\n+\n+addRequiredLibraries.dependsOn addJakartaTransformer\n+\n+/* \n+ * This is where all test applications will be built.\n+ */\n+def appBuildDir = \"${buildDir}/test-application\"\n+\n+\n+/******************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjA5NQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNTczOQ==", "bodyText": "I thought you wanted to do it proactively during build and bloat the autoFVT.zip file instead of during execution of the tests.  I don't know if you can do that without what you are doing.  @aguibert would probably know more.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501215739", "createdAt": "2020-10-07T18:16:20Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "diffHunk": "@@ -0,0 +1,1033 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+// TODO earDD.ear, TechnologySamples.ear\n+\n+dependencies {\n+  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',\n+               'org.apache.httpcomponents:httpcore:4.1.2',\n+               'commons-codec:commons-codec:1.4',\n+               'commons-logging:commons-logging:1.1.1',\n+               project(':com.ibm.websphere.javaee.servlet.3.0'),\n+               project(':com.ibm.ws.security.audit_fat.common.tooling')\n+}\n+\n+addRequiredLibraries.dependsOn addJakartaTransformer\n+\n+/* \n+ * This is where all test applications will be built.\n+ */\n+def appBuildDir = \"${buildDir}/test-application\"\n+\n+\n+/******************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjA5NQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MDIzMQ==", "bodyText": "I left them in the build.gradle, as we do with all our other projects.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r502040231", "createdAt": "2020-10-08T22:09:21Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "diffHunk": "@@ -0,0 +1,1033 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+// TODO earDD.ear, TechnologySamples.ear\n+\n+dependencies {\n+  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',\n+               'org.apache.httpcomponents:httpcore:4.1.2',\n+               'commons-codec:commons-codec:1.4',\n+               'commons-logging:commons-logging:1.1.1',\n+               project(':com.ibm.websphere.javaee.servlet.3.0'),\n+               project(':com.ibm.ws.security.audit_fat.common.tooling')\n+}\n+\n+addRequiredLibraries.dependsOn addJakartaTransformer\n+\n+/* \n+ * This is where all test applications will be built.\n+ */\n+def appBuildDir = \"${buildDir}/test-application\"\n+\n+\n+/******************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjA5NQ=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzcyNTg2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/WebAppSecurityCollaboratorImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozMjowN1rOHd5P7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0MDo1NVrOHd8NMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwODcxNw==", "bodyText": "The OR of the conditional will never be triggered, so is there a point in having it?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501108717", "createdAt": "2020-10-07T15:32:07Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/WebAppSecurityCollaboratorImpl.java", "diffHunk": "@@ -461,9 +461,32 @@ public void handleException(HttpServletRequest req, HttpServletResponse rsp, Thr\n     }\n \n     @Override\n+    @FFDCIgnore(NumberFormatException.class)\n     public boolean isCDINeeded() {\n-        return WebContainer.getServletContainerSpecLevel() >= WebContainer.SPEC_LEVEL_40 &&\n-               provisionerService.getInstalledFeatures().contains(\"appSecurity-3.0\");\n+        int specLevel = WebContainer.getServletContainerSpecLevel();\n+\n+        /*\n+         * Determine which version of appSecurity we are running.\n+         */\n+        Set<String> installedFeatures = provisionerService.getInstalledFeatures();\n+        float appSecurityVers = 0.0f;\n+        for (String feature : installedFeatures) {\n+            if (feature.startsWith(\"appSecurity-\")) {\n+                try {\n+                    appSecurityVers = Float.valueOf(feature.substring(12));\n+                    break;\n+                } catch (NumberFormatException e) {\n+                    // Ignore. Not the feature we are looking for.\n+                }\n+            }\n+        }\n+\n+        /*\n+         * Future-proof check. Some of these combinations aren't valid, but\n+         * they will not make it this far.\n+         */\n+        return (appSecurityVers >= 3.0 && specLevel >= WebContainer.SPEC_LEVEL_40) ||\n+               (appSecurityVers >= 4.0 && specLevel >= WebContainer.SPEC_LEVEL_50);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NzE3MA==", "bodyText": "Good catch. Removed the OR.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501157170", "createdAt": "2020-10-07T16:40:55Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/WebAppSecurityCollaboratorImpl.java", "diffHunk": "@@ -461,9 +461,32 @@ public void handleException(HttpServletRequest req, HttpServletResponse rsp, Thr\n     }\n \n     @Override\n+    @FFDCIgnore(NumberFormatException.class)\n     public boolean isCDINeeded() {\n-        return WebContainer.getServletContainerSpecLevel() >= WebContainer.SPEC_LEVEL_40 &&\n-               provisionerService.getInstalledFeatures().contains(\"appSecurity-3.0\");\n+        int specLevel = WebContainer.getServletContainerSpecLevel();\n+\n+        /*\n+         * Determine which version of appSecurity we are running.\n+         */\n+        Set<String> installedFeatures = provisionerService.getInstalledFeatures();\n+        float appSecurityVers = 0.0f;\n+        for (String feature : installedFeatures) {\n+            if (feature.startsWith(\"appSecurity-\")) {\n+                try {\n+                    appSecurityVers = Float.valueOf(feature.substring(12));\n+                    break;\n+                } catch (NumberFormatException e) {\n+                    // Ignore. Not the feature we are looking for.\n+                }\n+            }\n+        }\n+\n+        /*\n+         * Future-proof check. Some of these combinations aren't valid, but\n+         * they will not make it this far.\n+         */\n+        return (appSecurityVers >= 3.0 && specLevel >= WebContainer.SPEC_LEVEL_40) ||\n+               (appSecurityVers >= 4.0 && specLevel >= WebContainer.SPEC_LEVEL_50);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwODcxNw=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzc0MTcxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozNTo0MFrOHd5aAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTowMzoyM1rOHeBiLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTI5OA==", "bodyText": "Will this be used on the commercial liberty repo still?  If so you will probably want to set the publish attribute so a stub project is created over there pointing to it on the open liberty side.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501111298", "createdAt": "2020-10-07T15:35:40Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2MDE0MA==", "bodyText": "Do I need to set this?\npublish.wlp.jar.disabled: false", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501160140", "createdAt": "2020-10-07T16:45:36Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTI5OA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNzg1MA==", "bodyText": "yes if it is needed both other fats outside of open liberty", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501217850", "createdAt": "2020-10-07T18:18:48Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTI5OA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NDQ2MA==", "bodyText": "Updated the bnd.bnd file.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501244460", "createdAt": "2020-10-07T19:03:23Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTI5OA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzc1MTQ0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozNzo0OVrOHd5gLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowODo0OFrOHeyF3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMjg3OA==", "bodyText": "Why using a binary here instead of depending on a maven / dhe repository location?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501112878", "createdAt": "2020-10-07T15:37:49Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+src:\\\n+  src,\\\n+  test-applications/testmarker.war/src\n+\n+\n+test.project: true\n+\n+\n+#   lib/jdom-1.1.2.jar;version=file,\\\n+-buildpath: \\\n+  com.ibm.ws.com.meterware.httpunit.1.7;version=latest,\\\n+  com.ibm.ws.logging;version=latest,\\\n+  com.ibm.ws.mongo_fat;version=latest,\\\n+  com.ibm.ws.org.joda.time.1.6.2;version=latest,\\\n+  com.ibm.websphere.javaee.servlet.3.0;version=latest,\\\n+  com.ibm.websphere.org.osgi.core;version=latest,\\\n+  com.ibm.websphere.org.osgi.service.component;version=latest,\\\n+  com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\\\n+  commons-lang:commons-lang;version=2.4,\\\n+  fattest.simplicity;version=latest,\\\n+  org.jdom:jdom;version=1.1.2,\\\n+  lib/htmlunit-2.20-OSGi.jar;version=file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2MDY2Nw==", "bodyText": "They made some changes to this JAR, I am not entirely certain what those changes were. I pulled in the one they were using over in WS.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501160667", "createdAt": "2020-10-07T16:46:31Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+src:\\\n+  src,\\\n+  test-applications/testmarker.war/src\n+\n+\n+test.project: true\n+\n+\n+#   lib/jdom-1.1.2.jar;version=file,\\\n+-buildpath: \\\n+  com.ibm.ws.com.meterware.httpunit.1.7;version=latest,\\\n+  com.ibm.ws.logging;version=latest,\\\n+  com.ibm.ws.mongo_fat;version=latest,\\\n+  com.ibm.ws.org.joda.time.1.6.2;version=latest,\\\n+  com.ibm.websphere.javaee.servlet.3.0;version=latest,\\\n+  com.ibm.websphere.org.osgi.core;version=latest,\\\n+  com.ibm.websphere.org.osgi.service.component;version=latest,\\\n+  com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\\\n+  commons-lang:commons-lang;version=2.4,\\\n+  fattest.simplicity;version=latest,\\\n+  org.jdom:jdom;version=1.1.2,\\\n+  lib/htmlunit-2.20-OSGi.jar;version=file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMjg3OA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIyMDcxNg==", "bodyText": "You can still publish a version of it into the dhe / artifactory repo.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501220716", "createdAt": "2020-10-07T18:21:49Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+src:\\\n+  src,\\\n+  test-applications/testmarker.war/src\n+\n+\n+test.project: true\n+\n+\n+#   lib/jdom-1.1.2.jar;version=file,\\\n+-buildpath: \\\n+  com.ibm.ws.com.meterware.httpunit.1.7;version=latest,\\\n+  com.ibm.ws.logging;version=latest,\\\n+  com.ibm.ws.mongo_fat;version=latest,\\\n+  com.ibm.ws.org.joda.time.1.6.2;version=latest,\\\n+  com.ibm.websphere.javaee.servlet.3.0;version=latest,\\\n+  com.ibm.websphere.org.osgi.core;version=latest,\\\n+  com.ibm.websphere.org.osgi.service.component;version=latest,\\\n+  com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\\\n+  commons-lang:commons-lang;version=2.4,\\\n+  fattest.simplicity;version=latest,\\\n+  org.jdom:jdom;version=1.1.2,\\\n+  lib/htmlunit-2.20-OSGi.jar;version=file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMjg3OA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MDAyOQ==", "bodyText": "I removed this project since parts of it had been created already.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r502040029", "createdAt": "2020-10-08T22:08:48Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security_fat.common.tooling/bnd.bnd", "diffHunk": "@@ -0,0 +1,50 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+src:\\\n+  src,\\\n+  test-applications/testmarker.war/src\n+\n+\n+test.project: true\n+\n+\n+#   lib/jdom-1.1.2.jar;version=file,\\\n+-buildpath: \\\n+  com.ibm.ws.com.meterware.httpunit.1.7;version=latest,\\\n+  com.ibm.ws.logging;version=latest,\\\n+  com.ibm.ws.mongo_fat;version=latest,\\\n+  com.ibm.ws.org.joda.time.1.6.2;version=latest,\\\n+  com.ibm.websphere.javaee.servlet.3.0;version=latest,\\\n+  com.ibm.websphere.org.osgi.core;version=latest,\\\n+  com.ibm.websphere.org.osgi.service.component;version=latest,\\\n+  com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\\\n+  commons-lang:commons-lang;version=2.4,\\\n+  fattest.simplicity;version=latest,\\\n+  org.jdom:jdom;version=1.1.2,\\\n+  lib/htmlunit-2.20-OSGi.jar;version=file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMjg3OA=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzc5NjkyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo0NzoyMVrOHd573g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0NzowM1rOHd8cNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExOTk2Ng==", "bodyText": "Not sure why these binaries are included in the application or put into github.  The APIs are provided by the liberty runtime.   I suggest removing them from github and not be included in the ear file if possible.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501119966", "createdAt": "2020-10-07T15:47:21Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "diffHunk": "@@ -0,0 +1,1033 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+// TODO earDD.ear, TechnologySamples.ear\n+\n+dependencies {\n+  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',\n+               'org.apache.httpcomponents:httpcore:4.1.2',\n+               'commons-codec:commons-codec:1.4',\n+               'commons-logging:commons-logging:1.1.1',\n+               project(':com.ibm.websphere.javaee.servlet.3.0'),\n+               project(':com.ibm.ws.security.audit_fat.common.tooling')\n+}\n+\n+addRequiredLibraries.dependsOn addJakartaTransformer\n+\n+/* \n+ * This is where all test applications will be built.\n+ */\n+def appBuildDir = \"${buildDir}/test-application\"\n+\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** Java2Client.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task Java2Client_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'Java2Client.jar'\n+\n+  from (new File(projectDir, 'test-applications/Java2Client.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/java2/Java2App.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** Java2Client.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task Java2Client_EAR (type: Zip, dependsOn: Java2Client_JAR) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'Java2Client.ear'\n+\n+  from (new File(projectDir, 'test-applications/Java2Client.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'Java2Client.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** Java2ClientNoPermissionsXML.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task Java2ClientNoPermissionsXML_EAR (type: Zip, dependsOn: Java2Client_JAR) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'Java2ClientNoPermissionsXML.ear'\n+\n+  from (new File(projectDir, 'test-applications/Java2ClientNoPermissionsXML.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'Java2Client.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** JavaColonInjectionAppClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task JavaColonInjectionAppClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'JavaColonInjectionAppClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/JavaColonInjectionAppClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/InjectionClientMain.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** JavaColonInjectionAppEJB.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task JavaColonInjectionAppEJB_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'JavaColonInjectionAppEJB.jar'\n+  \n+  from (new File(projectDir, 'test-applications/JavaColonInjectionAppEJB.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/My*Bean.class'\n+    include 'com/ibm/ws/security/client/fat/view/*.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** JavaColonInjectionApp.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task JavaColonInjectionApp_EAR (type: Zip) {\n+  dependsOn JavaColonInjectionAppClient_JAR, JavaColonInjectionAppEJB_JAR\n+  \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'JavaColonInjectionApp.ear'\n+\n+  from (new File(projectDir, 'test-applications/JavaColonInjectionApp.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'JavaColonInjectionAppClient.jar', 'JavaColonInjectionAppEJB.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** FileMonitorClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task FileMonitorClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'FileMonitorClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/FileMonitorClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/FileMonitorClientMain.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** FileMonitor.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task FileMonitor_EAR (type: Zip, dependsOn: FileMonitorClient_JAR) {\n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'FileMonitor.ear'\n+\n+  from (new File(projectDir, 'test-applications/FileMonitor.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'FileMonitorClient.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** SSLHttpsClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task SSLHttpsClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'SSLHttpsClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/SSLHttpsClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/BasicSSLClientMain*.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** SSLClient.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task SSLClient_EAR (type: Zip, dependsOn: SSLHttpsClient_JAR) {\n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'SSLClient.ear'\n+\n+  from (new File(projectDir, 'test-applications/SSLClient.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'SSLHttpsClient.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** BasicCalculatorClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task BasicCalculatorClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'BasicCalculatorClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/BasicCalculatorClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/websphere/samples/technologysamples/basiccalcclient/*.class'\n+    include 'com/ibm/websphere/samples/technologysamples/basiccalcclient/common/*.class'\n+    include 'com/ibm/websphere/samples/technologysamples/ejb/stateless/basiccalculatorejb/BasicCalculator.class'\n+    include 'com/ibm/websphere/samples/technologysamples/ejb/stateless/basiccalculatorejb/BasicCalculatorHome.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** BasicCalculatorClient.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task BasicCalculatorClient_EAR (type: Zip, dependsOn: BasicCalculatorClient_JAR) {\n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'BasicCalculatorClient.ear'\n+\n+  from (new File(projectDir, 'test-applications/BasicCalculatorClient.ear/resources')) {\n+    include 'META-INF/**'\n+    include 'lib/**'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2MTAxNQ==", "bodyText": "When reviewing with Ryan, I realized these were here. Removed them.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r501161015", "createdAt": "2020-10-07T16:47:03Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.client_fat/build.gradle", "diffHunk": "@@ -0,0 +1,1033 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+// TODO earDD.ear, TechnologySamples.ear\n+\n+dependencies {\n+  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',\n+               'org.apache.httpcomponents:httpcore:4.1.2',\n+               'commons-codec:commons-codec:1.4',\n+               'commons-logging:commons-logging:1.1.1',\n+               project(':com.ibm.websphere.javaee.servlet.3.0'),\n+               project(':com.ibm.ws.security.audit_fat.common.tooling')\n+}\n+\n+addRequiredLibraries.dependsOn addJakartaTransformer\n+\n+/* \n+ * This is where all test applications will be built.\n+ */\n+def appBuildDir = \"${buildDir}/test-application\"\n+\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** Java2Client.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task Java2Client_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'Java2Client.jar'\n+\n+  from (new File(projectDir, 'test-applications/Java2Client.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/java2/Java2App.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** Java2Client.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task Java2Client_EAR (type: Zip, dependsOn: Java2Client_JAR) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'Java2Client.ear'\n+\n+  from (new File(projectDir, 'test-applications/Java2Client.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'Java2Client.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** Java2ClientNoPermissionsXML.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task Java2ClientNoPermissionsXML_EAR (type: Zip, dependsOn: Java2Client_JAR) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'Java2ClientNoPermissionsXML.ear'\n+\n+  from (new File(projectDir, 'test-applications/Java2ClientNoPermissionsXML.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'Java2Client.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** JavaColonInjectionAppClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task JavaColonInjectionAppClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'JavaColonInjectionAppClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/JavaColonInjectionAppClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/InjectionClientMain.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** JavaColonInjectionAppEJB.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task JavaColonInjectionAppEJB_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'JavaColonInjectionAppEJB.jar'\n+  \n+  from (new File(projectDir, 'test-applications/JavaColonInjectionAppEJB.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/My*Bean.class'\n+    include 'com/ibm/ws/security/client/fat/view/*.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** JavaColonInjectionApp.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task JavaColonInjectionApp_EAR (type: Zip) {\n+  dependsOn JavaColonInjectionAppClient_JAR, JavaColonInjectionAppEJB_JAR\n+  \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'JavaColonInjectionApp.ear'\n+\n+  from (new File(projectDir, 'test-applications/JavaColonInjectionApp.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'JavaColonInjectionAppClient.jar', 'JavaColonInjectionAppEJB.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** FileMonitorClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task FileMonitorClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'FileMonitorClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/FileMonitorClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/FileMonitorClientMain.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** FileMonitor.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task FileMonitor_EAR (type: Zip, dependsOn: FileMonitorClient_JAR) {\n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'FileMonitor.ear'\n+\n+  from (new File(projectDir, 'test-applications/FileMonitor.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'FileMonitorClient.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** SSLHttpsClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task SSLHttpsClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'SSLHttpsClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/SSLHttpsClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/ws/security/client/fat/BasicSSLClientMain*.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** SSLClient.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task SSLClient_EAR (type: Zip, dependsOn: SSLHttpsClient_JAR) {\n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'SSLClient.ear'\n+\n+  from (new File(projectDir, 'test-applications/SSLClient.ear/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(buildDir, 'test-application')) {\n+    include 'SSLHttpsClient.jar' \n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** BasicCalculatorClient.jar\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task BasicCalculatorClient_JAR (type: Zip, dependsOn: classes) { \n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'BasicCalculatorClient.jar'\n+  \n+  from (new File(projectDir, 'test-applications/BasicCalculatorClient.jar/resources')) {\n+    include 'META-INF/**'\n+  }\n+  from (new File(projectDir, 'build/classes/java/main')) {\n+    include 'com/ibm/websphere/samples/technologysamples/basiccalcclient/*.class'\n+    include 'com/ibm/websphere/samples/technologysamples/basiccalcclient/common/*.class'\n+    include 'com/ibm/websphere/samples/technologysamples/ejb/stateless/basiccalculatorejb/BasicCalculator.class'\n+    include 'com/ibm/websphere/samples/technologysamples/ejb/stateless/basiccalculatorejb/BasicCalculatorHome.class'\n+  }\n+}\n+\n+/******************************************************************\n+ ******************************************************************\n+ **\n+ ** BasicCalculatorClient.ear\n+ **\n+ ******************************************************************\n+ ******************************************************************/\n+task BasicCalculatorClient_EAR (type: Zip, dependsOn: BasicCalculatorClient_JAR) {\n+  destinationDirectory = new File(appBuildDir)\n+  archiveFileName = 'BasicCalculatorClient.ear'\n+\n+  from (new File(projectDir, 'test-applications/BasicCalculatorClient.ear/resources')) {\n+    include 'META-INF/**'\n+    include 'lib/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExOTk2Ng=="}, "originalCommit": {"oid": "be7fcc6ae5392edef089c90fd639c0f940b2a675"}, "originalPosition": 259}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzgyMjE1OnYy", "diffSide": "RIGHT", "path": "dev/cnf/oss_dependencies.maven", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo0MDo0M1rOHgMg5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxMTo1MFrOHhfLcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMTUwOA==", "bodyText": "Since you no longer are bringing in that common tooling project you do not need to add this jdom dependency any longer it would appear.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r503521508", "createdAt": "2020-10-12T20:40:43Z", "author": {"login": "jhanders34"}, "path": "dev/cnf/oss_dependencies.maven", "diffHunk": "@@ -470,6 +470,7 @@ org.jboss.weld:weld-osgi-bundle:2.4.8.Final\n org.jboss.weld:weld-osgi-bundle:3.1.4.Final\n org.jboss.weld:weld-osgi-bundle:4.0.0.Alpha3\n org.jboss:jandex:2.1.2.Final\n+org.jdom:jdom:1.1.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83520c0295f35d3ad6b9c5ca24f8f1c2a8c814a1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NTg5MQ==", "bodyText": "Removed.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504875891", "createdAt": "2020-10-14T18:11:50Z", "author": {"login": "jvanhill"}, "path": "dev/cnf/oss_dependencies.maven", "diffHunk": "@@ -470,6 +470,7 @@ org.jboss.weld:weld-osgi-bundle:2.4.8.Final\n org.jboss.weld:weld-osgi-bundle:3.1.4.Final\n org.jboss.weld:weld-osgi-bundle:4.0.0.Alpha3\n org.jboss:jandex:2.1.2.Final\n+org.jdom:jdom:1.1.2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMTUwOA=="}, "originalCommit": {"oid": "83520c0295f35d3ad6b9c5ca24f8f1c2a8c814a1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTk2OTEwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.enterpriseBeansRemote-appSecurity-1.0.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo0NjoyM1rOHhZnQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxNjo0OVrOHhfWdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4NDcwNA==", "bodyText": "Not sure why this one has 1.0 on it.  Above you removed the version number.  Since it is appSecurity 4.0 this doesn't make a lot of sense to have 1.0 on it.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504784704", "createdAt": "2020-10-14T15:46:23Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.enterpriseBeansRemote-appSecurity-1.0.feature", "diffHunk": "@@ -0,0 +1,14 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.enterpriseBeansRemote-appSecurity-1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3ODcxMQ==", "bodyText": "I originally added -1.0 to indicate the first version of the feature, not the version of any feature that provisions this feature. I will remove the -1.0 from the end of the feature / symbolic name.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504878711", "createdAt": "2020-10-14T18:16:49Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.enterpriseBeansRemote-appSecurity-1.0.feature", "diffHunk": "@@ -0,0 +1,14 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.enterpriseBeansRemote-appSecurity-1.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4NDcwNA=="}, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjAzMDUxOnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/JakartaEE9Action.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo1OToyOVrOHhaM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxODowMVrOHhfZpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NDM0NA==", "bodyText": "I think you want to change this to mail-2.0, not jakartaMail-1.6", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504794344", "createdAt": "2020-10-14T15:59:29Z", "author": {"login": "jhanders34"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/JakartaEE9Action.java", "diffHunk": "@@ -74,7 +74,7 @@\n                                                  \"enterpriseBeansTest-2.0\",\n                                                  \"jacc-2.0\",\n                                                  \"jaspic-2.0\",\n-                                                 \"javaMail-2.0\",\n+                                                 \"jakartaMail-1.6\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3OTUyNw==", "bodyText": "Made the change.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504879527", "createdAt": "2020-10-14T18:18:01Z", "author": {"login": "jvanhill"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/JakartaEE9Action.java", "diffHunk": "@@ -74,7 +74,7 @@\n                                                  \"enterpriseBeansTest-2.0\",\n                                                  \"jacc-2.0\",\n                                                  \"jaspic-2.0\",\n-                                                 \"javaMail-2.0\",\n+                                                 \"jakartaMail-1.6\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NDM0NA=="}, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjAzNDEzOnYy", "diffSide": "RIGHT", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowMDoxOFrOHhaPOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxODowOVrOHhfaIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NDkzOA==", "bodyText": "I think you want this to be mail not jakartaMail", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504794938", "createdAt": "2020-10-14T16:00:18Z", "author": {"login": "jhanders34"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "diffHunk": "@@ -60,6 +60,7 @@\n         featureNameMapping.put(\"ejbTest\", \"enterpriseBeansTest\");\n         featureNameMapping.put(\"javaee\", \"jakartaee\");\n         featureNameMapping.put(\"javaeeClient\", \"jakartaeeClient\");\n+        featureNameMapping.put(\"javaMail\", \"jakartaMail\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3OTY1MA==", "bodyText": "Made the change.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504879650", "createdAt": "2020-10-14T18:18:09Z", "author": {"login": "jvanhill"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureReplacementAction.java", "diffHunk": "@@ -60,6 +60,7 @@\n         featureNameMapping.put(\"ejbTest\", \"enterpriseBeansTest\");\n         featureNameMapping.put(\"javaee\", \"jakartaee\");\n         featureNameMapping.put(\"javaeeClient\", \"jakartaeeClient\");\n+        featureNameMapping.put(\"javaMail\", \"jakartaMail\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NDkzOA=="}, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjA0MzAyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.client_fat/fat/src/com/ibm/ws/security/client/fat/JavaColonInjectionsTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowMjoyM1rOHhaU8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTo1NTowOFrOHhiywg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NjQwMQ==", "bodyText": "This comment should say mail-2.0.  It might be available now.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504796401", "createdAt": "2020-10-14T16:02:23Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security.client_fat/fat/src/com/ibm/ws/security/client/fat/JavaColonInjectionsTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.security.client.fat;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.List;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TestName;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.websphere.simplicity.ProgramOutput;\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.annotation.SkipForRepeat;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.custom.junit.runner.Mode;\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+import componenttest.topology.impl.LibertyClient;\n+import componenttest.topology.impl.LibertyClientFactory;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n+\n+@SkipForRepeat(SkipForRepeat.EE9_FEATURES) // TODO jakartaMail-1.6 is not yet available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwNjU1Nw==", "bodyText": "I just looked and it is edition = beta so it would appears available.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504806557", "createdAt": "2020-10-14T16:17:11Z", "author": {"login": "jhanders34"}, "path": "dev/com.ibm.ws.security.client_fat/fat/src/com/ibm/ws/security/client/fat/JavaColonInjectionsTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.security.client.fat;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.List;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TestName;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.websphere.simplicity.ProgramOutput;\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.annotation.SkipForRepeat;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.custom.junit.runner.Mode;\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+import componenttest.topology.impl.LibertyClient;\n+import componenttest.topology.impl.LibertyClientFactory;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n+\n+@SkipForRepeat(SkipForRepeat.EE9_FEATURES) // TODO jakartaMail-1.6 is not yet available.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NjQwMQ=="}, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkzNTEwNg==", "bodyText": "Removed the skip for repeat as mail-2.0 is available. I also had to update wlp-jakartaee-transform/rules/jakarta-renames.properties (rename javax.mail to jakarta.mail) and com.ibm.ws.security.client_fat/bnd.bnd  (add EE9 tested features) for this change.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504935106", "createdAt": "2020-10-14T19:55:08Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.client_fat/fat/src/com/ibm/ws/security/client/fat/JavaColonInjectionsTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.security.client.fat;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.List;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TestName;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.websphere.simplicity.ProgramOutput;\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.annotation.SkipForRepeat;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.custom.junit.runner.Mode;\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+import componenttest.topology.impl.LibertyClient;\n+import componenttest.topology.impl.LibertyClientFactory;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n+\n+@SkipForRepeat(SkipForRepeat.EE9_FEATURES) // TODO jakartaMail-1.6 is not yet available.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NjQwMQ=="}, "originalCommit": {"oid": "66ea03057cab1eaaebc5f213612967d92de98d3e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mjk2NDg1OnYy", "diffSide": "RIGHT", "path": "dev/wlp-jakartaee-transform/rules/jakarta-xml-dd.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDowOToxNFrOHhjQfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDo0ODoyMVrOHhkf1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk0MjcxNg==", "bodyText": "This particular one was moved earlier in the file to line up with other ones.  You may want to remove this duplicate.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504942716", "createdAt": "2020-10-14T20:09:14Z", "author": {"login": "jhanders34"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-xml-dd.properties", "diffHunk": "@@ -43,3 +43,5 @@ javax.faces.WEBAPP_CONTRACTS_DIRECTORY=jakarta.faces.WEBAPP_CONTRACTS_DIRECTORY\n javax.faces.CLIENT_WINDOW_MODE=jakarta.faces.CLIENT_WINDOW_MODE\n javax.faces.SERIALIZE_SERVER_STATE=jakarta.faces.SERIALIZE_SERVER_STATE\n \n+javax.resource.spi.security.PasswordCredential=jakarta.resource.spi.security.PasswordCredential", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1679146f2f8f35ad8341367c8e635a726c5deb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2MzAzMA==", "bodyText": "Removed this duplicate.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13630#discussion_r504963030", "createdAt": "2020-10-14T20:48:21Z", "author": {"login": "jvanhill"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-xml-dd.properties", "diffHunk": "@@ -43,3 +43,5 @@ javax.faces.WEBAPP_CONTRACTS_DIRECTORY=jakarta.faces.WEBAPP_CONTRACTS_DIRECTORY\n javax.faces.CLIENT_WINDOW_MODE=jakarta.faces.CLIENT_WINDOW_MODE\n javax.faces.SERIALIZE_SERVER_STATE=jakarta.faces.SERIALIZE_SERVER_STATE\n \n+javax.resource.spi.security.PasswordCredential=jakarta.resource.spi.security.PasswordCredential", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk0MjcxNg=="}, "originalCommit": {"oid": "df1679146f2f8f35ad8341367c8e635a726c5deb"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2905, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}