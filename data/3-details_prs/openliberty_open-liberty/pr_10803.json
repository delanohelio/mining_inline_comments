{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjI2MDg1", "number": 10803, "title": "Fixing test infrastructure to allow for accurate database tracing", "bodyText": "Fixes #10642", "createdAt": "2020-02-07T22:22:17Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803", "merged": true, "mergeCommit": {"oid": "4148917d1ffd4f4e0e5b4327c91d61f6c7a1e44a"}, "closed": true, "closedAt": "2020-02-12T17:40:35Z", "author": {"login": "KyleAure"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCHCMqABqjMwMTkzMTA0NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDauZiABqjMwMjg3Mjc2MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2928e92fc3521b720ff49a3313b01225772b59f", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c2928e92fc3521b720ff49a3313b01225772b59f", "committedDate": "2020-02-07T22:19:48Z", "message": "Fixing test infrastructure to allow for accurate database tracing"}, "afterCommit": {"oid": "5c9a8eb83c5492aa92430ca9dfb055c3361e8a8e", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5c9a8eb83c5492aa92430ca9dfb055c3361e8a8e", "committedDate": "2020-02-07T22:25:26Z", "message": "Fixing test infrastructure to allow for accurate database tracing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c9a8eb83c5492aa92430ca9dfb055c3361e8a8e", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5c9a8eb83c5492aa92430ca9dfb055c3361e8a8e", "committedDate": "2020-02-07T22:25:26Z", "message": "Fixing test infrastructure to allow for accurate database tracing"}, "afterCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/081181c7db2d48a956558865908d18942b85e5a1", "committedDate": "2020-02-07T22:27:27Z", "message": "Fixing test infrastructure to allow for accurate database tracing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDk4MzY5", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-355498369", "createdAt": "2020-02-07T23:40:19Z", "commit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzo0MDoxOVrOFnNVaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzo0MDoxOVrOFnNVaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzI1Nw==", "bodyText": "What does this change do?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r376657257", "createdAt": "2020-02-07T23:40:19Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.jdbc_fat/publish/servers/com.ibm.ws.jdbc.fat/bootstrap.properties", "diffHunk": "@@ -12,8 +12,7 @@ com.ibm.ws.logging.trace.specification=*=info=enabled:\\\n com.ibm.ws.jdbc.*=all=enabled:\\\n com.ibm.ejs.j2c.*=all=enabled:\\\n com.ibm.ws.rsadapter.*=all=enabled:\\\n-com.ibm.ws.security.jca.*=all=enabled:\\\n-LogService=all\n+com.ibm.ws.security.jca.*=all=enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MTk1MTM2", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-356195136", "createdAt": "2020-02-10T19:17:54Z", "commit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOToxNzo1NVrOFnyWvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOToxNzo1NVrOFnyWvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg==", "bodyText": "Where does org.testcontainers.containers exist?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377263806", "createdAt": "2020-02-10T19:17:55Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjA1NTA2", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-356205506", "createdAt": "2020-02-10T19:33:44Z", "commit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOTozMzo0NFrOFny2Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOTozMzo0NFrOFny2Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MTg0Mw==", "bodyText": "typo?: \"Could not find one...\"\nI only see one class that will be displayed in the failed assertion.  Suggest changing the message to something like \"Could not find class: ...\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377271843", "createdAt": "2020-02-10T19:33:44Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find class: \" + className);\n+\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2Mjg2Nzk4", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-356286798", "createdAt": "2020-02-10T21:44:59Z", "commit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTo0NDo1OVrOFn2sGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTo0NDo1OVrOFn2sGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ==", "bodyText": "How did you manufacture this class?  Did you copy another one and change the names to Postgres as needed?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377334811", "createdAt": "2020-02-10T21:44:59Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops/Properties_postgresql.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*******************************************************************************", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjkwNzU2", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-356290756", "createdAt": "2020-02-10T21:51:25Z", "commit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTo1MToyNVrOFn23zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTo1MToyNVrOFn23zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg==", "bodyText": "Where does com.ibm.websphere.simplicity.config.dsprops.* exist?", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377337806", "createdAt": "2020-02-10T21:51:25Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081181c7db2d48a956558865908d18942b85e5a1"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODYzNTM4", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-356863538", "createdAt": "2020-02-11T17:46:52Z", "commit": {"oid": "cbd8a30468cc1e18782703f8f3b4d9558f71b0b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzo0Njo1MlrOFoSyow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzo0Njo1MlrOFoSyow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5NTIzNQ==", "bodyText": "typo? changes -> changed", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377795235", "createdAt": "2020-02-11T17:46:52Z", "author": {"login": "gjwatts"}, "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java", "diffHunk": "@@ -30,6 +31,24 @@\n     private DatabaseContainerUtil() {\n     \t//No objects should be created from this class\n     }\n+    \n+    /**\n+     * Performs the same property substitution as {@link DatabaseContainerUtil#setupDataSourceProperties(LibertyServer, JdbcDatabaseContainer)}\n+     * but ensures that we use properties.{database} instead of generic properties.\n+     */\n+    public static void setupDataSourceDatabaseProperties(LibertyServer serv, JdbcDatabaseContainer<?> cont) throws CloneNotSupportedException, Exception {\n+        //Skip for Derby and DerbyClient\n+    \tif (DatabaseContainerType.valueOf(cont) == DatabaseContainerType.Derby ||\n+    \t\t\tDatabaseContainerType.valueOf(cont) == DatabaseContainerType.DerbyClient)\n+            return; //Derby used by default no need to change DS properties\n+    \t\n+    \t//Get server config\n+    \tServerConfiguration cloneConfig = serv.getServerConfiguration().clone();\n+    \t//Get datasources to be changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbd8a30468cc1e18782703f8f3b4d9558f71b0b6"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbd8a30468cc1e18782703f8f3b4d9558f71b0b6", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cbd8a30468cc1e18782703f8f3b4d9558f71b0b6", "committedDate": "2020-02-11T15:59:50Z", "message": "feedback changes"}, "afterCommit": {"oid": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "committedDate": "2020-02-11T19:04:59Z", "message": "feedback changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDU5OTQ3", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#pullrequestreview-357059947", "createdAt": "2020-02-11T23:00:26Z", "commit": {"oid": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a782fb826427ed1536484c8643ab60a30fc05f49", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a782fb826427ed1536484c8643ab60a30fc05f49", "committedDate": "2020-02-11T23:39:03Z", "message": "Fixing test infrastructure to allow for accurate database tracing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e18c9f9d184b86f5acc42986b110393b9eaf80e9", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e18c9f9d184b86f5acc42986b110393b9eaf80e9", "committedDate": "2020-02-11T23:39:03Z", "message": "feedback changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "committedDate": "2020-02-11T23:55:55Z", "message": "Deprecated unsued db rotation methods/classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "committedDate": "2020-02-11T19:04:59Z", "message": "feedback changes"}, "afterCommit": {"oid": "fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "author": {"user": {"login": "KyleAure", "name": "Kyle Aure"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "committedDate": "2020-02-11T23:55:55Z", "message": "Deprecated unsued db rotation methods/classes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3170, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}