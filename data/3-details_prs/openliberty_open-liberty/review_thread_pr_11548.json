{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTM3Njc4", "number": 11548, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowNjoxOVrODtJ2Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowNzoyMFrODtJ3-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjczODIyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jca_fat_bval/fat/src/com/ibm/ws/jca/fat/bval/BeanValidationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowNjoxOVrOF-aaZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowNjoxOVrOF-aaZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk4ODc3NQ==", "bodyText": "can we evaluate the runtime of these test method? Since this one is doing a server restart I expect it takes >5s -- can we move this test and other long-running tests to FULL mode?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11548#discussion_r400988775", "createdAt": "2020-03-31T15:06:19Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jca_fat_bval/fat/src/com/ibm/ws/jca/fat/bval/BeanValidationTest.java", "diffHunk": "@@ -0,0 +1,201 @@\n+/*******************************************************************************\n+ * Copyright (c) 2014, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.jca.fat.bval;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+\n+import componenttest.annotation.ExpectedFFDC;\n+import componenttest.annotation.Server;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.FATServletClient;\n+\n+@RunWith(FATRunner.class)\n+public class BeanValidationTest extends FATServletClient {\n+    private static final String BVAL_APP = \"jca-bval\";\n+    private static final String BVAL_RAR = \"BvalRA\";\n+\n+    @Server(\"com.ibm.ws.jca.fat.bval\")\n+    public static LibertyServer server;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        // Create applications\n+        ShrinkHelper.defaultApp(server, BVAL_APP, \"web\", \"web.mdb\");\n+        ShrinkHelper.defaultRar(server, BVAL_RAR, \"com.ibm.bval.jca.adapter\");\n+    }\n+\n+    @AfterClass\n+    public static void tearDown() throws Exception {\n+        if (server.isStarted())\n+            server.stopServer();\n+    }\n+\n+    @After\n+    public void afterEach() throws Exception {\n+        if (server.isStarted())\n+            server.stopServer();\n+    }\n+\n+    /**\n+     * Utility method to run a test on RABValServlet.\n+     *\n+     * @param query query string for the servlet\n+     * @return output of the servlet\n+     * @throws IOException if an error occurs\n+     */\n+    private StringBuilder runInServlet(String queryString) throws Exception {\n+        return runTestWithResponse(server, BVAL_APP, \"testBeanValidation&\" + queryString);\n+    }\n+\n+    @Test\n+    public void testAddAndFind() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c336bd126895365d545482df04a083f6954fa57e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Njc0Mjk2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jca_fat_bval/publish/servers/com.ibm.ws.jca.fat.bval/bootstrap.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowNzoyMFrOF-addQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowNzoyMFrOF-addQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk4OTU1Nw==", "bodyText": "this trace spec is pretty heavy. Lets take out webcontainer, EJBContainer, and Transaction", "url": "https://github.com/OpenLiberty/open-liberty/pull/11548#discussion_r400989557", "createdAt": "2020-03-31T15:07:20Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jca_fat_bval/publish/servers/com.ibm.ws.jca.fat.bval/bootstrap.properties", "diffHunk": "@@ -0,0 +1,25 @@\n+###############################################################################\n+# Copyright (c) 2014, 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+com.ibm.ws.logging.trace.specification=*=event=enabled:\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c336bd126895365d545482df04a083f6954fa57e"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1938, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}