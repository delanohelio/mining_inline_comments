{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NjU5NDM4", "number": 15080, "title": "Create generic MP Repeat Actions", "bodyText": "#build", "createdAt": "2020-11-23T11:23:50Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080", "merged": true, "mergeCommit": {"oid": "884f5a9741cdb4f9963480f814438057324ff2b0"}, "closed": true, "closedAt": "2020-12-02T10:26:01Z", "author": {"login": "tevans78"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfYds1gBqjQwMjg3ODYxMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh7hXpgBqjQwNTc3NDU2ODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c514ecbd9710ff7c3b77d6a99dec2c4ebd1e114", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6c514ecbd9710ff7c3b77d6a99dec2c4ebd1e114", "committedDate": "2020-11-23T11:23:21Z", "message": "Create generic MP Repeat Actions"}, "afterCommit": {"oid": "e8635033583a6d192587a89426837176bf006ed1", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e8635033583a6d192587a89426837176bf006ed1", "committedDate": "2020-11-23T17:18:52Z", "message": "Remove enum"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzE1MDEx", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-536715011", "createdAt": "2020-11-23T17:53:39Z", "commit": {"oid": "e8635033583a6d192587a89426837176bf006ed1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzo1Mzo0MFrOH4Y-tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODowMDozNVrOH4ZPqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg5MTU3Mw==", "bodyText": "Needs javadoc.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r528891573", "createdAt": "2020-11-23T17:53:40Z", "author": {"login": "Azquelt"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/RepeatFeatureSet.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.rules.repeater;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class RepeatFeatureSet {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8635033583a6d192587a89426837176bf006ed1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg5NTkxNQ==", "bodyText": "I worry a little that this will confuse people, since it looks similar to the methods on FeatureReplacementAction but it works differently.\nI do like the ability to take an modify an existing feature set.\nI don't like that you can add features to an existing feature set without changing the ID.\nI think it would be better if the ID had to be provided in the constructor, but you could copy the feature list from another set. E.g:\nnew RepeatFeatureSet(ID).addAllFrom(MP40).remove(\"mpConfig-2.0\").add(\"mpConfig-2.0\");\n\nHowever, this wouldn't stop someone doing this and getting a featureset with the MP4.0 ID.\nMP40.add(\"someOtherFeature\");\n\nNot sure if you can prevent that without using a builder pattern.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r528895915", "createdAt": "2020-11-23T18:00:35Z", "author": {"login": "Azquelt"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/RepeatFeatureSet.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.rules.repeater;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class RepeatFeatureSet {\n+    private final String id;\n+    private final Set<String> features;\n+\n+    public RepeatFeatureSet(String id, Set<String> features) {\n+        this.id = id;\n+        this.features = Collections.unmodifiableSet(features);\n+    }\n+\n+    public String getID() {\n+        return this.id;\n+    }\n+\n+    public RepeatFeatureSet withFeature(String id, String feature) {\n+        Set<String> newFeatures = new HashSet<String>(this.features);\n+        newFeatures.add(feature);\n+        RepeatFeatureSet newSet = new RepeatFeatureSet(id, newFeatures);\n+        return newSet;\n+    }\n+\n+    public RepeatFeatureSet removeFeature(String id, String feature) {\n+        Set<String> newFeatures = new HashSet<String>(this.features);\n+        newFeatures.remove(feature);\n+        RepeatFeatureSet newSet = new RepeatFeatureSet(id, newFeatures);\n+        return newSet;\n+    }\n+\n+    public RepeatFeatureSet withFeature(String feature) {\n+        return withFeature(this.id, feature);\n+    }\n+\n+    public RepeatFeatureSet removeFeature(String feature) {\n+        return removeFeature(this.id, feature);\n+    }\n+\n+    public RepeatFeatureSet withID(String id) {\n+        return new RepeatFeatureSet(id, this.features);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8635033583a6d192587a89426837176bf006ed1"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8635033583a6d192587a89426837176bf006ed1", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/e8635033583a6d192587a89426837176bf006ed1", "committedDate": "2020-11-23T17:18:52Z", "message": "Remove enum"}, "afterCommit": {"oid": "2f0d0f1e807e447e692b7118c201fe6c6f87ff8e", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2f0d0f1e807e447e692b7118c201fe6c6f87ff8e", "committedDate": "2020-11-24T18:15:20Z", "message": "rework FeatureSets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f0d0f1e807e447e692b7118c201fe6c6f87ff8e", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/2f0d0f1e807e447e692b7118c201fe6c6f87ff8e", "committedDate": "2020-11-24T18:15:20Z", "message": "rework FeatureSets"}, "afterCommit": {"oid": "d4b515e25aac5184668c279e248a39a53589682b", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d4b515e25aac5184668c279e248a39a53589682b", "committedDate": "2020-11-25T11:52:41Z", "message": "Create generic MP Repeat Actions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4b515e25aac5184668c279e248a39a53589682b", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d4b515e25aac5184668c279e248a39a53589682b", "committedDate": "2020-11-25T11:52:41Z", "message": "Create generic MP Repeat Actions"}, "afterCommit": {"oid": "bb87a23c7969b28493d113ff2dd94280fe2a0875", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/bb87a23c7969b28493d113ff2dd94280fe2a0875", "committedDate": "2020-11-25T11:53:52Z", "message": "Create generic MP Repeat Actions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb87a23c7969b28493d113ff2dd94280fe2a0875", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/bb87a23c7969b28493d113ff2dd94280fe2a0875", "committedDate": "2020-11-25T11:53:52Z", "message": "Create generic MP Repeat Actions"}, "afterCommit": {"oid": "5174a810e47952baf092ffc307a8216576829617", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5174a810e47952baf092ffc307a8216576829617", "committedDate": "2020-11-25T12:02:55Z", "message": "Create generic MP Repeat Actions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NDY0NTM3", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-538464537", "createdAt": "2020-11-25T12:54:12Z", "commit": {"oid": "5174a810e47952baf092ffc307a8216576829617"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjo1NDoxMlrOH5yI7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjo1Njo1NVrOH5yPbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1MjM2Nw==", "bodyText": "Javadoc (particularly important here as the meaning of allFeatureSets and otherFeatureSetsTestMode isn't particularly intuitive)", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r530352367", "createdAt": "2020-11-25T12:54:12Z", "author": {"login": "Azquelt"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/MicroProfileActions.java", "diffHunk": "@@ -0,0 +1,263 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.rules.repeater;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+\n+public class MicroProfileActions {\n+\n+    public static final String MP10_ID = \"MicroProfile_10\";\n+    public static final String MP12_ID = \"MicroProfile_12\";\n+    public static final String MP13_ID = \"MicroProfile_13\";\n+    public static final String MP14_ID = \"MicroProfile_14\";\n+    public static final String MP20_ID = \"MicroProfile_20\";\n+    public static final String MP21_ID = \"MicroProfile_21\";\n+    public static final String MP22_ID = \"MicroProfile_22\";\n+    public static final String MP30_ID = \"MicroProfile_30\";\n+    public static final String MP32_ID = \"MicroProfile_32\";\n+    public static final String MP33_ID = \"MicroProfile_33\";\n+    public static final String MP40_ID = \"MicroProfile_40\";\n+\n+    private static final String[] MP10_FEATURES_ARRAY = { \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jsonp-1.0\" };\n+\n+    private static final String[] MP12_FEATURES_ARRAY = { \"servlet-3.1\",\n+                                                          \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jsonp-1.0\",\n+                                                          \"mpConfig-1.1\",\n+                                                          \"mpFaultTolerance-1.0\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.0\",\n+                                                          \"mpMetrics-1.0\" };\n+\n+    private static final String[] MP13_FEATURES_ARRAY = { \"servlet-3.1\",\n+                                                          \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jaxrsClient-2.0\",\n+                                                          \"jsonp-1.0\",\n+                                                          \"mpConfig-1.2\",\n+                                                          \"mpFaultTolerance-1.0\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.0\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.0\",\n+                                                          \"mpRestClient-1.0\" };\n+\n+    private static final String[] MP14_FEATURES_ARRAY = { \"servlet-3.1\",\n+                                                          \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jaxrsClient-2.0\",\n+                                                          \"jsonp-1.0\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-1.1\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.1\",\n+                                                          \"mpRestClient-1.1\" };\n+\n+    private static final String[] MP20_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-1.1\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.1\",\n+                                                          \"mpRestClient-1.1\" };\n+\n+    private static final String[] MP21_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-1.1\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.2\",\n+                                                          \"mpRestClient-1.1\" };\n+\n+    private static final String[] MP22_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-2.0\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.2\" };\n+\n+    private static final String[] MP30_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-2.0\",\n+                                                          \"mpHealth-2.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-2.0\",\n+                                                          \"mpOpenAPI-1.1\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.3\" };\n+\n+    private static final String[] MP32_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-2.0\",\n+                                                          \"mpHealth-2.1\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-2.2\",\n+                                                          \"mpOpenAPI-1.1\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.3\" };\n+\n+    private static final String[] MP33_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.4\",\n+                                                          \"mpFaultTolerance-2.1\",\n+                                                          \"mpHealth-2.2\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-2.3\",\n+                                                          \"mpOpenAPI-1.1\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.4\" };\n+\n+    private static final String[] MP40_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-2.0\",\n+                                                          \"mpFaultTolerance-3.0\",\n+                                                          \"mpHealth-3.0\",\n+                                                          \"mpJwt-1.2\",\n+                                                          \"mpMetrics-3.0\",\n+                                                          \"mpOpenAPI-2.0\",\n+                                                          \"mpOpenTracing-2.0\",\n+                                                          \"mpRestClient-2.0\" };\n+\n+    private static final Set<String> MP10_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP10_FEATURES_ARRAY)));\n+    private static final Set<String> MP12_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP12_FEATURES_ARRAY)));\n+    private static final Set<String> MP13_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP13_FEATURES_ARRAY)));\n+    private static final Set<String> MP14_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP14_FEATURES_ARRAY)));\n+    private static final Set<String> MP20_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP20_FEATURES_ARRAY)));\n+    private static final Set<String> MP21_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP21_FEATURES_ARRAY)));\n+    private static final Set<String> MP22_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP22_FEATURES_ARRAY)));\n+    private static final Set<String> MP30_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP30_FEATURES_ARRAY)));\n+    private static final Set<String> MP32_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP32_FEATURES_ARRAY)));\n+    private static final Set<String> MP33_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP33_FEATURES_ARRAY)));\n+    private static final Set<String> MP40_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP40_FEATURES_ARRAY)));\n+\n+    public static final FeatureSet MP10 = new FeatureSet(MP10_ID, MP10_FEATURE_SET);\n+    public static final FeatureSet MP12 = new FeatureSet(MP12_ID, MP12_FEATURE_SET);\n+    public static final FeatureSet MP13 = new FeatureSet(MP13_ID, MP13_FEATURE_SET);\n+    public static final FeatureSet MP14 = new FeatureSet(MP14_ID, MP14_FEATURE_SET);\n+    public static final FeatureSet MP20 = new FeatureSet(MP20_ID, MP20_FEATURE_SET);\n+    public static final FeatureSet MP21 = new FeatureSet(MP21_ID, MP21_FEATURE_SET);\n+    public static final FeatureSet MP22 = new FeatureSet(MP22_ID, MP22_FEATURE_SET);\n+    public static final FeatureSet MP30 = new FeatureSet(MP30_ID, MP30_FEATURE_SET);\n+    public static final FeatureSet MP32 = new FeatureSet(MP32_ID, MP32_FEATURE_SET);\n+    public static final FeatureSet MP33 = new FeatureSet(MP33_ID, MP33_FEATURE_SET);\n+    public static final FeatureSet MP40 = new FeatureSet(MP40_ID, MP40_FEATURE_SET);\n+\n+    public static final FeatureSet LATEST = MP40;\n+\n+    public static final FeatureSet[] ALL_SETS_ARRAY = { MP10, MP12, MP13, MP14, MP20, MP21, MP22, MP30, MP32, MP33, MP40 };\n+    public static final Set<FeatureSet> ALL = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(ALL_SETS_ARRAY)));\n+\n+    /**\n+     * Get a RepeatTests instance for the given FeatureSets. All FeatureSets will be run in LITE mode.\n+     *\n+     * @param  server           The server to repeat on\n+     * @param  firstFeatureSet  The first FeatureSet\n+     * @param  otherFeatureSets The other FeatureSets\n+     * @return                  a RepeatTests instance\n+     */\n+    public static RepeatTests repeat(String server, FeatureSet firstFeatureSet, FeatureSet... otherFeatureSets) {\n+        return repeat(server, TestMode.LITE, ALL, firstFeatureSet, otherFeatureSets);\n+    }\n+\n+    /**\n+     * @param  server\n+     * @param  otherFeatureSetsTestMode\n+     * @param  allFeatureSets\n+     * @param  firstFeatureSet\n+     * @param  otherFeatureSets\n+     * @return\n+     */\n+    public static RepeatTests repeat(String server, TestMode otherFeatureSetsTestMode, Set<FeatureSet> allFeatureSets, FeatureSet firstFeatureSet, FeatureSet... otherFeatureSets) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5174a810e47952baf092ffc307a8216576829617"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1MjQ4MA==", "bodyText": "Javadoc", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r530352480", "createdAt": "2020-11-25T12:54:22Z", "author": {"login": "Azquelt"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/MicroProfileActions.java", "diffHunk": "@@ -0,0 +1,263 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.rules.repeater;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+\n+public class MicroProfileActions {\n+\n+    public static final String MP10_ID = \"MicroProfile_10\";\n+    public static final String MP12_ID = \"MicroProfile_12\";\n+    public static final String MP13_ID = \"MicroProfile_13\";\n+    public static final String MP14_ID = \"MicroProfile_14\";\n+    public static final String MP20_ID = \"MicroProfile_20\";\n+    public static final String MP21_ID = \"MicroProfile_21\";\n+    public static final String MP22_ID = \"MicroProfile_22\";\n+    public static final String MP30_ID = \"MicroProfile_30\";\n+    public static final String MP32_ID = \"MicroProfile_32\";\n+    public static final String MP33_ID = \"MicroProfile_33\";\n+    public static final String MP40_ID = \"MicroProfile_40\";\n+\n+    private static final String[] MP10_FEATURES_ARRAY = { \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jsonp-1.0\" };\n+\n+    private static final String[] MP12_FEATURES_ARRAY = { \"servlet-3.1\",\n+                                                          \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jsonp-1.0\",\n+                                                          \"mpConfig-1.1\",\n+                                                          \"mpFaultTolerance-1.0\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.0\",\n+                                                          \"mpMetrics-1.0\" };\n+\n+    private static final String[] MP13_FEATURES_ARRAY = { \"servlet-3.1\",\n+                                                          \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jaxrsClient-2.0\",\n+                                                          \"jsonp-1.0\",\n+                                                          \"mpConfig-1.2\",\n+                                                          \"mpFaultTolerance-1.0\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.0\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.0\",\n+                                                          \"mpRestClient-1.0\" };\n+\n+    private static final String[] MP14_FEATURES_ARRAY = { \"servlet-3.1\",\n+                                                          \"cdi-1.2\",\n+                                                          \"jaxrs-2.0\",\n+                                                          \"jaxrsClient-2.0\",\n+                                                          \"jsonp-1.0\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-1.1\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.1\",\n+                                                          \"mpRestClient-1.1\" };\n+\n+    private static final String[] MP20_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-1.1\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.1\",\n+                                                          \"mpRestClient-1.1\" };\n+\n+    private static final String[] MP21_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-1.1\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.2\",\n+                                                          \"mpRestClient-1.1\" };\n+\n+    private static final String[] MP22_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-2.0\",\n+                                                          \"mpHealth-1.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-1.1\",\n+                                                          \"mpOpenAPI-1.0\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.2\" };\n+\n+    private static final String[] MP30_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-2.0\",\n+                                                          \"mpHealth-2.0\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-2.0\",\n+                                                          \"mpOpenAPI-1.1\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.3\" };\n+\n+    private static final String[] MP32_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.3\",\n+                                                          \"mpFaultTolerance-2.0\",\n+                                                          \"mpHealth-2.1\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-2.2\",\n+                                                          \"mpOpenAPI-1.1\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.3\" };\n+\n+    private static final String[] MP33_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-1.4\",\n+                                                          \"mpFaultTolerance-2.1\",\n+                                                          \"mpHealth-2.2\",\n+                                                          \"mpJwt-1.1\",\n+                                                          \"mpMetrics-2.3\",\n+                                                          \"mpOpenAPI-1.1\",\n+                                                          \"mpOpenTracing-1.3\",\n+                                                          \"mpRestClient-1.4\" };\n+\n+    private static final String[] MP40_FEATURES_ARRAY = { \"servlet-4.0\",\n+                                                          \"cdi-2.0\",\n+                                                          \"jaxrs-2.1\",\n+                                                          \"jaxrsClient-2.1\",\n+                                                          \"jsonb-1.0\",\n+                                                          \"jsonp-1.1\",\n+                                                          \"mpConfig-2.0\",\n+                                                          \"mpFaultTolerance-3.0\",\n+                                                          \"mpHealth-3.0\",\n+                                                          \"mpJwt-1.2\",\n+                                                          \"mpMetrics-3.0\",\n+                                                          \"mpOpenAPI-2.0\",\n+                                                          \"mpOpenTracing-2.0\",\n+                                                          \"mpRestClient-2.0\" };\n+\n+    private static final Set<String> MP10_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP10_FEATURES_ARRAY)));\n+    private static final Set<String> MP12_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP12_FEATURES_ARRAY)));\n+    private static final Set<String> MP13_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP13_FEATURES_ARRAY)));\n+    private static final Set<String> MP14_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP14_FEATURES_ARRAY)));\n+    private static final Set<String> MP20_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP20_FEATURES_ARRAY)));\n+    private static final Set<String> MP21_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP21_FEATURES_ARRAY)));\n+    private static final Set<String> MP22_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP22_FEATURES_ARRAY)));\n+    private static final Set<String> MP30_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP30_FEATURES_ARRAY)));\n+    private static final Set<String> MP32_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP32_FEATURES_ARRAY)));\n+    private static final Set<String> MP33_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP33_FEATURES_ARRAY)));\n+    private static final Set<String> MP40_FEATURE_SET = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(MP40_FEATURES_ARRAY)));\n+\n+    public static final FeatureSet MP10 = new FeatureSet(MP10_ID, MP10_FEATURE_SET);\n+    public static final FeatureSet MP12 = new FeatureSet(MP12_ID, MP12_FEATURE_SET);\n+    public static final FeatureSet MP13 = new FeatureSet(MP13_ID, MP13_FEATURE_SET);\n+    public static final FeatureSet MP14 = new FeatureSet(MP14_ID, MP14_FEATURE_SET);\n+    public static final FeatureSet MP20 = new FeatureSet(MP20_ID, MP20_FEATURE_SET);\n+    public static final FeatureSet MP21 = new FeatureSet(MP21_ID, MP21_FEATURE_SET);\n+    public static final FeatureSet MP22 = new FeatureSet(MP22_ID, MP22_FEATURE_SET);\n+    public static final FeatureSet MP30 = new FeatureSet(MP30_ID, MP30_FEATURE_SET);\n+    public static final FeatureSet MP32 = new FeatureSet(MP32_ID, MP32_FEATURE_SET);\n+    public static final FeatureSet MP33 = new FeatureSet(MP33_ID, MP33_FEATURE_SET);\n+    public static final FeatureSet MP40 = new FeatureSet(MP40_ID, MP40_FEATURE_SET);\n+\n+    public static final FeatureSet LATEST = MP40;\n+\n+    public static final FeatureSet[] ALL_SETS_ARRAY = { MP10, MP12, MP13, MP14, MP20, MP21, MP22, MP30, MP32, MP33, MP40 };\n+    public static final Set<FeatureSet> ALL = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(ALL_SETS_ARRAY)));\n+\n+    /**\n+     * Get a RepeatTests instance for the given FeatureSets. All FeatureSets will be run in LITE mode.\n+     *\n+     * @param  server           The server to repeat on\n+     * @param  firstFeatureSet  The first FeatureSet\n+     * @param  otherFeatureSets The other FeatureSets\n+     * @return                  a RepeatTests instance\n+     */\n+    public static RepeatTests repeat(String server, FeatureSet firstFeatureSet, FeatureSet... otherFeatureSets) {\n+        return repeat(server, TestMode.LITE, ALL, firstFeatureSet, otherFeatureSets);\n+    }\n+\n+    /**\n+     * @param  server\n+     * @param  otherFeatureSetsTestMode\n+     * @param  allFeatureSets\n+     * @param  firstFeatureSet\n+     * @param  otherFeatureSets\n+     * @return\n+     */\n+    public static RepeatTests repeat(String server, TestMode otherFeatureSetsTestMode, Set<FeatureSet> allFeatureSets, FeatureSet firstFeatureSet, FeatureSet... otherFeatureSets) {\n+        RepeatTests r = RepeatTests.with(forFeatureSet(allFeatureSets, firstFeatureSet, server, TestMode.LITE));\n+        for (int i = 0; i < otherFeatureSets.length; i++) {\n+            r = r.andWith(forFeatureSet(allFeatureSets, otherFeatureSets[i], server, otherFeatureSetsTestMode));\n+        }\n+        return r;\n+    }\n+\n+    /**\n+     * @param  allFeatureSets\n+     * @param  version\n+     * @param  server\n+     * @param  testMode\n+     * @return\n+     */\n+    public static FeatureReplacementAction forFeatureSet(Set<FeatureSet> allFeatureSets, FeatureSet version, String server, TestMode testMode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5174a810e47952baf092ffc307a8216576829617"}, "originalPosition": 245}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1NDAyOA==", "bodyText": "Ideally these methods would have Javadoc too, though I think the class is fairly intuitive. Otherwise I'd take the tags out completely.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r530354028", "createdAt": "2020-11-25T12:56:55Z", "author": {"login": "Azquelt"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureSet.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.rules.repeater;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * An immutable set of features with an ID\n+ */\n+public class FeatureSet {\n+    private final String id;\n+    private final Set<String> features;\n+\n+    /**\n+     * Create a new FeatureSet with the given ID and set of features\n+     *\n+     * @param id       The ID of the FeatureSet. It is recommended that this should be unique.\n+     * @param features The features to include in the set\n+     */\n+    public FeatureSet(String id, Set<String> features) {\n+        this.id = id;\n+        this.features = Collections.unmodifiableSet(features);\n+    }\n+\n+    /**\n+     * Get the ID of this FeatureSet\n+     *\n+     * @return the id\n+     */\n+    public final String getID() {\n+        return this.id;\n+    }\n+\n+    /**\n+     * Get an unmodifiable set of the features\n+     *\n+     * @return the features\n+     */\n+    public final Set<String> getFeatures() {\n+        return this.features;\n+    }\n+\n+    /**\n+     * Create a new FeatureSetBuilder based on this FeatureSet\n+     *\n+     * @param  feature the feature to add to the set\n+     * @return         a FeatureSetBuilder\n+     */\n+    public FeatureSetBuilder addFeature(String feature) {\n+        FeatureSetBuilder builder = new FeatureSetBuilder(this);\n+        builder.addFeature(feature);\n+        return builder;\n+    }\n+\n+    /**\n+     * Create a new FeatureSetBuilder based on this FeatureSet\n+     *\n+     * @param  feature the feature to remove from the set\n+     * @return         a FeatureSetBuilder\n+     */\n+    public FeatureSetBuilder removeFeature(String feature) {\n+        FeatureSetBuilder builder = new FeatureSetBuilder(this);\n+        builder.removeFeature(feature);\n+        return builder;\n+    }\n+\n+    public static class FeatureSetBuilder {\n+\n+        private final HashSet<String> features;\n+\n+        /**\n+         * @param featureSet\n+         */\n+        public FeatureSetBuilder(FeatureSet featureSet) {\n+            this(featureSet.getFeatures());\n+        }\n+\n+        /**\n+         * @param features\n+         */\n+        public FeatureSetBuilder(Set<String> features) {\n+            this.features = new HashSet<>(features);\n+        }\n+\n+        /**\n+         *\n+         */\n+        public FeatureSetBuilder() {\n+            this.features = new HashSet<>();\n+        }\n+\n+        /**\n+         * @param feature\n+         */\n+        public FeatureSetBuilder addFeature(String feature) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5174a810e47952baf092ffc307a8216576829617"}, "originalPosition": 105}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5174a810e47952baf092ffc307a8216576829617", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5174a810e47952baf092ffc307a8216576829617", "committedDate": "2020-11-25T12:02:55Z", "message": "Create generic MP Repeat Actions"}, "afterCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c42f7090ba0bf664ba229b2c162df3ae75e2e6fd", "committedDate": "2020-11-27T15:19:16Z", "message": "Create generic MP Repeat Actions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDYyMTEy", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540062112", "createdAt": "2020-11-27T15:37:25Z", "commit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozNzoyNVrOH7CVMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozNzoyNVrOH7CVMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NjIyNQ==", "bodyText": "We should probably document what equality means for this class if we're overriding equals and hashCode", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r531666225", "createdAt": "2020-11-27T15:37:25Z", "author": {"login": "Azquelt"}, "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/FeatureSet.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package componenttest.rules.repeater;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * An immutable set of features with an ID\n+ */\n+public class FeatureSet {\n+    private final String id;\n+    private final Set<String> features;\n+\n+    /**\n+     * Create a new FeatureSet with the given ID and set of features\n+     *\n+     * @param id       The ID of the FeatureSet. Must be unique.\n+     * @param features The features to include in the set\n+     */\n+    public FeatureSet(String id, Set<String> features) {\n+        if (id == null)\n+            throw new NullPointerException();\n+        this.id = id;\n+        this.features = Collections.unmodifiableSet(new HashSet<>(features));\n+    }\n+\n+    /**\n+     * Get the ID of this FeatureSet\n+     *\n+     * @return the id\n+     */\n+    public final String getID() {\n+        return this.id;\n+    }\n+\n+    /**\n+     * Get an unmodifiable set of the features\n+     *\n+     * @return the features\n+     */\n+    public final Set<String> getFeatures() {\n+        return this.features;\n+    }\n+\n+    /**\n+     * Create a new FeatureSetBuilder based on this FeatureSet\n+     *\n+     * @param  feature the feature to add to the set\n+     * @return         a FeatureSetBuilder\n+     */\n+    public FeatureSetBuilder addFeature(String feature) {\n+        FeatureSetBuilder builder = new FeatureSetBuilder(this);\n+        builder.addFeature(feature);\n+        return builder;\n+    }\n+\n+    /**\n+     * Create a new FeatureSetBuilder based on this FeatureSet\n+     *\n+     * @param  feature the feature to remove from the set\n+     * @return         a FeatureSetBuilder\n+     */\n+    public FeatureSetBuilder removeFeature(String feature) {\n+        FeatureSetBuilder builder = new FeatureSetBuilder(this);\n+        builder.removeFeature(feature);\n+        return builder;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return id.hashCode();\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+        if (obj == null)\n+            return false;\n+        if (getClass() != obj.getClass())\n+            return false;\n+\n+        FeatureSet other = (FeatureSet) obj;\n+\n+        if (id == null) {\n+            if (other.id != null)\n+                return false;\n+        } else if (!id.equals(other.id))\n+            return false;\n+\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "originalPosition": 102}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDgwNzg3", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540080787", "createdAt": "2020-11-27T16:11:04Z", "commit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoxMTowNFrOH7DQwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoxMTowNFrOH7DQwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY4MTQ3Mw==", "bodyText": "The old config was equivalent to MP14, rather than MP20. Probably unimportant but was this a deliberate change?", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r531681473", "createdAt": "2020-11-27T16:11:04Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.1_fat/fat/src/com/ibm/ws/microprofile/config/fat/tests/StressTest.java", "diffHunk": "@@ -48,7 +47,7 @@\n     public static LibertyServer server;\n \n     @ClassRule\n-    public static RepeatTests r = RepeatConfigActions.repeat(\"StressServer\", Version.CONFIG13_EE7, Version.LATEST);\n+    public static RepeatTests r = MicroProfileActions.repeat(\"StressServer\", MicroProfileActions.MP20, MicroProfileActions.LATEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDgwOTQ5", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540080949", "createdAt": "2020-11-27T16:11:24Z", "commit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoxMToyNFrOH7DRQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoxMToyNFrOH7DRQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY4MTYwMg==", "bodyText": "This should use the contstant.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r531681602", "createdAt": "2020-11-27T16:11:24Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.1_fat/test-applications/cdiConfig.jar/src/com/ibm/ws/microprofile/appConfig/cdi/web/FieldTestServlet.java", "diffHunk": "@@ -79,7 +78,7 @@ public void testDiscovered() throws Exception {\n     }\n \n     @Test\n-    @SkipForRepeat(RepeatConfig20EE8.ID) // TODO: The intended behaviour for this is not defined in the MP Config spec. It may be covered by the answer to this: https://github.com/eclipse/microprofile-config/issues/608\n+    @SkipForRepeat(\"MicroProfile_40\") // TODO: The intended behaviour for this is not defined in the MP Config spec. It may be covered by the answer to this: https://github.com/eclipse/microprofile-config/issues/608", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDgyNzIx", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540082721", "createdAt": "2020-11-27T16:14:42Z", "commit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoxNDo0MlrOH7DWxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoxNDo0MlrOH7DWxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY4MzAxMw==", "bodyText": "These tests are only supposed to run against 1.x, and I think LATEST would make them run against 2.0", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r531683013", "createdAt": "2020-11-27T16:14:42Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.config.1.4_fat/fat/src/com/ibm/ws/microprofile/config14/test/LibertySpecificConfigTests.java", "diffHunk": "@@ -51,7 +50,7 @@\n      * Test covered in io.openliberty.microprofile.config.2.0.internal_fat.\n      */\n     @ClassRule\n-    public static RepeatTests r = RepeatConfigActions.repeat(SERVER_NAME, Version.CONFIG14_EE7, Version.CONFIG14_EE8);\n+    public static RepeatTests r = MicroProfileActions.repeat(SERVER_NAME, MicroProfileActions.LATEST, MicroProfileActions.MP33);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDg1ODQ0", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540085844", "createdAt": "2020-11-27T16:21:14Z", "commit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoyMToxNFrOH7Dg3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjoyMToxNFrOH7Dg3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY4NTU5Ng==", "bodyText": "I think the design of this method was to repeat for Fault Tolerance 2.0 and above, rather than MP 2.0 and above (because the FT core was rewritten for FT 2.0).\nIt should not include MP20 - the rest is correct.", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#discussion_r531685596", "createdAt": "2020-11-27T16:21:14Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.microprofile.faulttolerance_repeat_tests/src/com/ibm/ws/microprofile/faulttolerance/fat/repeat/RepeatFaultTolerance.java", "diffHunk": "@@ -146,21 +79,19 @@ public static RepeatTests repeatDefault(String server) {\n      * @return the RepeatTests rule\n      */\n     public static RepeatTests repeatAll(String server) {\n-        return RepeatTests.with(mp13Features(server))\n-                        .andWith(mp20Features(server))\n-                        .andWith(ft20metrics11Features(server))\n-                        .andWith(mp30Features(server))\n-                        .andWith(mp32Features(server))\n-                        .andWith(mp33Features(server))\n-                        .andWith(mp40Features(server));\n+        return repeat(server, TestMode.LITE, MicroProfileActions.MP13, MicroProfileActions.MP20, MicroProfileActions.MP22, MicroProfileActions.MP30, MicroProfileActions.MP32,\n+                      MicroProfileActions.MP33, MicroProfileActions.MP40);\n     }\n \n+    /**\n+     * Repeat on MicroProfile 2.0 and above. MP40 will be in LITE mode, the others in FULL mode.\n+     *\n+     * @param server the server name\n+     * @return the RepeatTests rule\n+     */\n     public static RepeatTests repeat20AndAbove(String server) {\n-        return RepeatTests.with(ft20metrics11Features(server).fullFATOnly())\n-                        .andWith(mp30Features(server).fullFATOnly())\n-                        .andWith(mp32Features(server).fullFATOnly())\n-                        .andWith(mp33Features(server).fullFATOnly())\n-                        .andWith(mp40Features(server));\n+        return repeat(server, TestMode.FULL, MicroProfileActions.MP40, MicroProfileActions.MP20, MicroProfileActions.MP22, MicroProfileActions.MP30, MicroProfileActions.MP32,\n+                      MicroProfileActions.MP33);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "originalPosition": 182}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDg2ODE1", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540086815", "createdAt": "2020-11-27T16:23:08Z", "commit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c42f7090ba0bf664ba229b2c162df3ae75e2e6fd", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c42f7090ba0bf664ba229b2c162df3ae75e2e6fd", "committedDate": "2020-11-27T15:19:16Z", "message": "Create generic MP Repeat Actions"}, "afterCommit": {"oid": "3741cddea2b624fcddffac4334510aa9b8e897ff", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3741cddea2b624fcddffac4334510aa9b8e897ff", "committedDate": "2020-11-27T17:01:48Z", "message": "Create generic MP Repeat Actions.\nAlso reduces the MP Config RepeatTests down to just the standard MicroProfile FeatureSets."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMTA2OTc4", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540106978", "createdAt": "2020-11-27T17:08:10Z", "commit": {"oid": "3741cddea2b624fcddffac4334510aa9b8e897ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3741cddea2b624fcddffac4334510aa9b8e897ff", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3741cddea2b624fcddffac4334510aa9b8e897ff", "committedDate": "2020-11-27T17:01:48Z", "message": "Create generic MP Repeat Actions.\nAlso reduces the MP Config RepeatTests down to just the standard MicroProfile FeatureSets."}, "afterCommit": {"oid": "1c8d179def45781d85f7d370d5eab407281dba55", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1c8d179def45781d85f7d370d5eab407281dba55", "committedDate": "2020-11-30T14:38:47Z", "message": "Fix FT tests to only use appSecurity-2.0 where needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTgyMjA3", "url": "https://github.com/OpenLiberty/open-liberty/pull/15080#pullrequestreview-540982207", "createdAt": "2020-11-30T14:52:35Z", "commit": {"oid": "1c8d179def45781d85f7d370d5eab407281dba55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48541ee304c302a67bb89b38f78a4e170a806bad", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/48541ee304c302a67bb89b38f78a4e170a806bad", "committedDate": "2020-12-01T10:03:30Z", "message": "Create generic MP Repeat Actions.\nAlso reduces the MP Config RepeatTests down to just the standard MicroProfile FeatureSets."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ad4627bfe3555273bc01ed0292990c052dc465", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/a8ad4627bfe3555273bc01ed0292990c052dc465", "committedDate": "2020-12-01T10:03:30Z", "message": "Fix FT tests to only use appSecurity-2.0 where needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c74f882606c19f2f54eb6869f08f730bf9fd1fe8", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c74f882606c19f2f54eb6869f08f730bf9fd1fe8", "committedDate": "2020-12-01T15:17:14Z", "message": "Fix some FT FAT bucket issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c8d179def45781d85f7d370d5eab407281dba55", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/1c8d179def45781d85f7d370d5eab407281dba55", "committedDate": "2020-11-30T14:38:47Z", "message": "Fix FT tests to only use appSecurity-2.0 where needed"}, "afterCommit": {"oid": "c74f882606c19f2f54eb6869f08f730bf9fd1fe8", "author": {"user": {"login": "tevans78", "name": "Tom Evans"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c74f882606c19f2f54eb6869f08f730bf9fd1fe8", "committedDate": "2020-12-01T15:17:14Z", "message": "Fix some FT FAT bucket issues"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2888, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}