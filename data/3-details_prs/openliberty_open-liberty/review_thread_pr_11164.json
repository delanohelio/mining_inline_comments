{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTAwMzU0", "number": 11164, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTowMDowN1rODlYPuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTowMDowN1rODlYPuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTIxMTQ0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/sources/AppPropertyConfig14Source.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTowMDowN1rOFyPKlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTowMDowN1rOFyPKlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMTU4OQ==", "bodyText": "Can you lift this out as a system property to configure it? It can be done as a follow up PR.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11164#discussion_r388221589", "createdAt": "2020-03-05T11:00:07Z", "author": {"login": "Emily-Jiang"}, "path": "dev/com.ibm.ws.microprofile.config.1.4/src/com/ibm/ws/microprofile/config14/sources/AppPropertyConfig14Source.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.config14.sources;\n+\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import com.ibm.ws.microprofile.config13.sources.AppPropertyConfigSource;\n+\n+/**\n+ *\n+ */\n+public class AppPropertyConfig14Source extends AppPropertyConfigSource {\n+\n+    private final AtomicReference<Map<String, String>> cachedValues = new AtomicReference<>();\n+    private final AtomicLong lastUpdated = new AtomicLong();\n+    private static final long CACHE_TIME = Duration.of(500, ChronoUnit.MILLIS).toNanos();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532978d35db3444bea75e3d646d96a09f5961203"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2036, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}