{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NjgwNTcy", "number": 12238, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNDoxNFrOD96aOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDoxNjowMlrOEF9X1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQ2NzEyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/com.ibm.websphere.appserver.beanValidation-3.0.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNDoxNFrOGXsaCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMjo0NVrOGcq9jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5Nzk5Mg==", "bodyText": "change\nannotation based\nto\nannotation-based", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r427497992", "createdAt": "2020-05-19T18:04:14Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/com.ibm.websphere.appserver.beanValidation-3.0.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=The Bean Validation 3.0 specification provides an annotation based model for validating \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "affb3dffee26cc661acfd4534c8f0ec55316cdb0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzE5OA==", "bodyText": "I've made the requested update.  The file has been renamed to:\ncom.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/io.openliberty.beanValidation-3.0.properties", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432717198", "createdAt": "2020-05-29T20:22:45Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/com.ibm.websphere.appserver.beanValidation-3.0.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=The Bean Validation 3.0 specification provides an annotation based model for validating \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5Nzk5Mg=="}, "originalCommit": {"oid": "affb3dffee26cc661acfd4534c8f0ec55316cdb0"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQ3NDcyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/com.ibm.websphere.appserver.beanValidation-3.0.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNjoxN1rOGXse1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMjo1M1rOGcq9vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5OTIyMQ==", "bodyText": "change\nThis feature is built on top of the Hibernate Validator Engine.\nto\nThis feature is built on the Hibernate Validator Engine.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r427499221", "createdAt": "2020-05-19T18:06:17Z", "author": {"login": "jantley-ibm"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/com.ibm.websphere.appserver.beanValidation-3.0.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=The Bean Validation 3.0 specification provides an annotation based model for validating \\\n+ JavaBeans.  It can be used to assert and maintain the integrity of data as it travels through \\\n+ an application. This feature is built on top of the Hibernate Validator Engine.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "affb3dffee26cc661acfd4534c8f0ec55316cdb0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzI0Ng==", "bodyText": "I've made the requested update.  The file has been renamed to:\ncom.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/io.openliberty.beanValidation-3.0.properties", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432717246", "createdAt": "2020-05-29T20:22:53Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/beanValidation-3.0/resources/l10n/com.ibm.websphere.appserver.beanValidation-3.0.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=The Bean Validation 3.0 specification provides an annotation based model for validating \\\n+ JavaBeans.  It can be used to assert and maintain the integrity of data as it travels through \\\n+ an application. This feature is built on top of the Hibernate Validator Engine.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5OTIyMQ=="}, "originalCommit": {"oid": "affb3dffee26cc661acfd4534c8f0ec55316cdb0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcwNTMyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.beanValidationCDI-3.0.feature", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo0OTo1OVrOGcJUsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDowOToxM1rOGcqnEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjA2Ng==", "bodyText": "should be kind=noship and edition=full\n(same comment applies for all other .feature files in this PR)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432166066", "createdAt": "2020-05-28T22:49:59Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.beanValidationCDI-3.0.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.beanValidationCDI-3.0\n+visibility=private\n+IBM-App-ForceRestart: install, uninstall\n+IBM-Provision-Capability: \\\n+  osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+  osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.beanValidation-3.0))\"\n+IBM-Install-Policy: when-satisfied\n+-bundles=\\\n+  com.ibm.ws.beanvalidation.v20.cdi.jakarta,\\\n+  io.openliberty.org.hibernate.validator.cdi.7.0\n+kind=ga", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMTQ3Mw==", "bodyText": "Done.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432531473", "createdAt": "2020-05-29T14:38:28Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.beanValidationCDI-3.0.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.beanValidationCDI-3.0\n+visibility=private\n+IBM-App-ForceRestart: install, uninstall\n+IBM-Provision-Capability: \\\n+  osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+  osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.beanValidation-3.0))\"\n+IBM-Install-Policy: when-satisfied\n+-bundles=\\\n+  com.ibm.ws.beanvalidation.v20.cdi.jakarta,\\\n+  io.openliberty.org.hibernate.validator.cdi.7.0\n+kind=ga", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjA2Ng=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMTQ0Mg==", "bodyText": "Features have been updated to noship/full.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432711442", "createdAt": "2020-05-29T20:09:13Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/auto/io.openliberty.beanValidationCDI-3.0.feature", "diffHunk": "@@ -0,0 +1,13 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.beanValidationCDI-3.0\n+visibility=private\n+IBM-App-ForceRestart: install, uninstall\n+IBM-Provision-Capability: \\\n+  osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.cdi-3.0))\", \\\n+  osgi.identity; filter:=\"(&(type=osgi.subsystem.feature)(osgi.identity=io.openliberty.beanValidation-3.0))\"\n+IBM-Install-Policy: when-satisfied\n+-bundles=\\\n+  com.ibm.ws.beanvalidation.v20.cdi.jakarta,\\\n+  io.openliberty.org.hibernate.validator.cdi.7.0\n+kind=ga", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjA2Ng=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcwNzg5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.beanValidationCore-2.0.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MDo1NVrOGcJWGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzo1NjoyMFrOGcdqqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjQyNw==", "bodyText": "should this be 3.0 instead of 2.0?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432166427", "createdAt": "2020-05-28T22:50:55Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.beanValidationCore-2.0.feature", "diffHunk": "@@ -0,0 +1,19 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.beanValidationCore-2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5OTM3MA==", "bodyText": "No 2.0 is correct, previously there was only beanValidationCore for bval 1.0, bval 1.1, and bval 2.0.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432499370", "createdAt": "2020-05-29T13:56:20Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.beanValidationCore-2.0.feature", "diffHunk": "@@ -0,0 +1,19 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.beanValidationCore-2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjQyNw=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcyMDEyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.v11_fat/fat/src/com/ibm/ws/beanvalidation/fat/cdi/BeanValidation20CDITest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1NjoyNVrOGcJdgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMDowOFrOGcqopg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2ODMyMg==", "bodyText": "Are we tracking this in any github issues? Perhaps under the CDI epic for EE9?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432168322", "createdAt": "2020-05-28T22:56:25Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/fat/src/com/ibm/ws/beanvalidation/fat/cdi/BeanValidation20CDITest.java", "diffHunk": "@@ -33,6 +34,8 @@\n  */\n @RunWith(FATRunner.class)\n @MinimumJavaLevel(javaLevel = 8)\n+// TODO: Remove skip when injection is enabled for jakartaee9", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMTg0Ng==", "bodyText": "Yes, #12434 and #12435", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432711846", "createdAt": "2020-05-29T20:10:08Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/fat/src/com/ibm/ws/beanvalidation/fat/cdi/BeanValidation20CDITest.java", "diffHunk": "@@ -33,6 +34,8 @@\n  */\n @RunWith(FATRunner.class)\n @MinimumJavaLevel(javaLevel = 8)\n+// TODO: Remove skip when injection is enabled for jakartaee9", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2ODMyMg=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcyMTk2OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.v11_fat/fat/src/com/ibm/ws/beanvalidation/fat/ejb/EJBModule_Common.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1NzoxN1rOGcJepw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzo1MTo1NlrOGcdfsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2ODYxNQ==", "bodyText": "Perhaps a simpler way to do this check is:\nif (!JakartaEE9Action.isActive()) {", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432168615", "createdAt": "2020-05-28T22:57:17Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/fat/src/com/ibm/ws/beanvalidation/fat/ejb/EJBModule_Common.java", "diffHunk": "@@ -36,6 +38,12 @@ public static void createAndExportEJBWARs(LibertyServer server) throws Exception\n         JavaArchive jar = ShrinkHelper.buildJavaArchive(\"EJBModule1EJB.jar\", \"beanvalidation.ejbmodule.*\");\n         JavaArchive jar2 = ShrinkHelper.buildJavaArchive(\"EJBModule2EJB.jar\", \"beanvalidation.ejbmodule2.ejb\");\n \n+        Set<String> features = server.getServerConfiguration().getFeatureManager().getFeatures();\n+        if (!(features.contains(\"beanValidation-1.0\") || features.contains(\"beanValidation-1.1\") || features.contains(\"beanValidation-2.0\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NjU2MQ==", "bodyText": "Thanks, that would be better.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432496561", "createdAt": "2020-05-29T13:51:56Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/fat/src/com/ibm/ws/beanvalidation/fat/ejb/EJBModule_Common.java", "diffHunk": "@@ -36,6 +38,12 @@ public static void createAndExportEJBWARs(LibertyServer server) throws Exception\n         JavaArchive jar = ShrinkHelper.buildJavaArchive(\"EJBModule1EJB.jar\", \"beanvalidation.ejbmodule.*\");\n         JavaArchive jar2 = ShrinkHelper.buildJavaArchive(\"EJBModule2EJB.jar\", \"beanvalidation.ejbmodule2.ejb\");\n \n+        Set<String> features = server.getServerConfiguration().getFeatureManager().getFeatures();\n+        if (!(features.contains(\"beanValidation-1.0\") || features.contains(\"beanValidation-1.1\") || features.contains(\"beanValidation-2.0\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2ODYxNQ=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcyNDk3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.v11_fat/test-applications/EJBModule1EJB.jar/resources/META-INF/constraints-house_EE9.xml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1ODo0MlrOGcJgdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMTowNVrOGcqqdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTA3OA==", "bodyText": "The transformer tool should be automatically converting this sort of stuff. Can you check with @tbitonti to see if we can get this support added?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432169078", "createdAt": "2020-05-28T22:58:42Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/test-applications/EJBModule1EJB.jar/resources/META-INF/constraints-house_EE9.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<constraint-mappings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd\"\n+  xmlns=\"http://jboss.org/xml/ns/javax/validation/mapping\">\n+  <default-package>beanvalidation.ejbmodule.ejb</default-package>\n+\n+  <bean class=\"AValidationXMLTestBean\" ignore-annotations=\"true\">\n+    <field name=\"builder\">\n+      <constraint annotation=\"jakarta.validation.constraints.NotNull\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTIyMw==", "bodyText": "Same comment applies to the other XML files in this PR that have been duplicated for EE9", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432169223", "createdAt": "2020-05-28T22:59:08Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/test-applications/EJBModule1EJB.jar/resources/META-INF/constraints-house_EE9.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<constraint-mappings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd\"\n+  xmlns=\"http://jboss.org/xml/ns/javax/validation/mapping\">\n+  <default-package>beanvalidation.ejbmodule.ejb</default-package>\n+\n+  <bean class=\"AValidationXMLTestBean\" ignore-annotations=\"true\">\n+    <field name=\"builder\">\n+      <constraint annotation=\"jakarta.validation.constraints.NotNull\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTA3OA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NDAwNg==", "bodyText": "Is the transformer tool supposed to work with arbitrary xml file names?  These files could be named anything in theory. Otherwise we'd be adding FAT specific scanning to the tool. We could scan all XML for constraint-mappings, or add \"smarts\" to read the validation.xml and figured out what constraint mapping files it points to. I wasn't sure if that was in the scope of the tooling. @tbitonti Your thoughts?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432494006", "createdAt": "2020-05-29T13:47:56Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/test-applications/EJBModule1EJB.jar/resources/META-INF/constraints-house_EE9.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<constraint-mappings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd\"\n+  xmlns=\"http://jboss.org/xml/ns/javax/validation/mapping\">\n+  <default-package>beanvalidation.ejbmodule.ejb</default-package>\n+\n+  <bean class=\"AValidationXMLTestBean\" ignore-annotations=\"true\">\n+    <field name=\"builder\">\n+      <constraint annotation=\"jakarta.validation.constraints.NotNull\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTA3OA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNTM5NA==", "bodyText": "Is constraints-house.xml an arbitrary name or a spec-defined name? The scanner tool is handing spec-defined XML files like web.xml and beans.xml, so it should also handle validation.xml's too", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432525394", "createdAt": "2020-05-29T14:30:05Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/test-applications/EJBModule1EJB.jar/resources/META-INF/constraints-house_EE9.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<constraint-mappings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd\"\n+  xmlns=\"http://jboss.org/xml/ns/javax/validation/mapping\">\n+  <default-package>beanvalidation.ejbmodule.ejb</default-package>\n+\n+  <bean class=\"AValidationXMLTestBean\" ignore-annotations=\"true\">\n+    <field name=\"builder\">\n+      <constraint annotation=\"jakarta.validation.constraints.NotNull\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTA3OA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMjMwOA==", "bodyText": "I've talked with Tom and opened issue #12431 .", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432712308", "createdAt": "2020-05-29T20:11:05Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.v11_fat/test-applications/EJBModule1EJB.jar/resources/META-INF/constraints-house_EE9.xml", "diffHunk": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<constraint-mappings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd\"\n+  xmlns=\"http://jboss.org/xml/ns/javax/validation/mapping\">\n+  <default-package>beanvalidation.ejbmodule.ejb</default-package>\n+\n+  <bean class=\"AValidationXMLTestBean\" ignore-annotations=\"true\">\n+    <field name=\"builder\">\n+      <constraint annotation=\"jakarta.validation.constraints.NotNull\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTA3OA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTczNDQ0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.v20_fat/fat/src/com/ibm/ws/bval/v20/fat/BeanVal20Test.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowMjo1OFrOGcJmKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzo0MTo1MVrOGcdG9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDUzNg==", "bodyText": "We don't want to disable these tests outright because we will lose coverage for bval-2.0 in the short term.\nInstead, can we just disable these tests using @SkipForRepeat on the test servlet class? Currently you can use @SkipForRepeat on test servlet methods, but not at the class level. It would be nice to have class-level support, but if that's too much work you could just add the annotation on each test servlet method instead", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432170536", "createdAt": "2020-05-28T23:02:58Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v20_fat/fat/src/com/ibm/ws/bval/v20/fat/BeanVal20Test.java", "diffHunk": "@@ -54,43 +40,52 @@\n     @Server(\"beanval.v20_fat\")\n     @TestServlets({\n                     @TestServlet(servlet = BeanVal20TestServlet.class, contextRoot = REG_APP),\n-                    @TestServlet(servlet = BeanValCDIServlet.class, contextRoot = CDI_APP),\n-                    @TestServlet(servlet = BeanValidationTestServlet.class, contextRoot = MULTI_VAL_APP),\n-                    @TestServlet(servlet = ValueExtractorServlet.class, contextRoot = VAL_EXT_APP),\n+                    //TODO: Once CDI 3.0 and EJBLite 4.0 are ready, enable these four applications for Jakarta EE 9.\n+//                    @TestServlet(servlet = BeanValCDIServlet.class, contextRoot = CDI_APP),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MDIzMA==", "bodyText": "The tests are temporarily disabled here. They have been moved to their own test class that only runs for bval 1.1 and bval 2.0, so we don't lose coverage.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432490230", "createdAt": "2020-05-29T13:41:51Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.v20_fat/fat/src/com/ibm/ws/bval/v20/fat/BeanVal20Test.java", "diffHunk": "@@ -54,43 +40,52 @@\n     @Server(\"beanval.v20_fat\")\n     @TestServlets({\n                     @TestServlet(servlet = BeanVal20TestServlet.class, contextRoot = REG_APP),\n-                    @TestServlet(servlet = BeanValCDIServlet.class, contextRoot = CDI_APP),\n-                    @TestServlet(servlet = BeanValidationTestServlet.class, contextRoot = MULTI_VAL_APP),\n-                    @TestServlet(servlet = ValueExtractorServlet.class, contextRoot = VAL_EXT_APP),\n+                    //TODO: Once CDI 3.0 and EJBLite 4.0 are ready, enable these four applications for Jakarta EE 9.\n+//                    @TestServlet(servlet = BeanValCDIServlet.class, contextRoot = CDI_APP),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDUzNg=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc0MjUxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.v20_fat/fat/src/com/ibm/ws/bval/v20/fat/BeanVal20_CDI_EJB_Test.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowNzowOFrOGcJrEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzo0MDowOFrOGcdCrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MTc5NQ==", "bodyText": "I guess this is a good compromise. If you are interested though, the class-level support for @SkipForRepeat on test servlets would be nice", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432171795", "createdAt": "2020-05-28T23:07:08Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.beanvalidation.v20_fat/fat/src/com/ibm/ws/bval/v20/fat/BeanVal20_CDI_EJB_Test.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.bval.v20.fat;\n+\n+import static com.ibm.websphere.simplicity.ShrinkHelper.addDirectory;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.buildDefaultApp;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.buildJavaArchive;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.defaultDropinApp;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.exportToServer;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.EnterpriseArchive;\n+import org.jboss.shrinkwrap.api.spec.WebArchive;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+\n+import bval.v20.cdi.web.BeanValCDIServlet;\n+import bval.v20.customprovider.CustomProviderTestServlet;\n+import bval.v20.multixml.web.BeanValidationTestServlet;\n+import bval.v20.valueextractor.web.ValueExtractorServlet;\n+import componenttest.annotation.Server;\n+import componenttest.annotation.SkipForRepeat;\n+import componenttest.annotation.TestServlet;\n+import componenttest.annotation.TestServlets;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.FATServletClient;\n+\n+//TODO: Delete this class and re-enable these tests in BeanVal20Test once CDI 3.0 and EJBLite 4.0 are ready.\n+@SkipForRepeat({ SkipForRepeat.EE9_FEATURES })\n+@RunWith(FATRunner.class)\n+public class BeanVal20_CDI_EJB_Test extends FATServletClient {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4OTEzMw==", "bodyText": "I couldn't get the class-level support for the @SkipForRepeat to work since that required the applications to start, and these apps depend on CDI and EJB to start up.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432489133", "createdAt": "2020-05-29T13:40:08Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.v20_fat/fat/src/com/ibm/ws/bval/v20/fat/BeanVal20_CDI_EJB_Test.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.bval.v20.fat;\n+\n+import static com.ibm.websphere.simplicity.ShrinkHelper.addDirectory;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.buildDefaultApp;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.buildJavaArchive;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.defaultDropinApp;\n+import static com.ibm.websphere.simplicity.ShrinkHelper.exportToServer;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.EnterpriseArchive;\n+import org.jboss.shrinkwrap.api.spec.WebArchive;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+\n+import bval.v20.cdi.web.BeanValCDIServlet;\n+import bval.v20.customprovider.CustomProviderTestServlet;\n+import bval.v20.multixml.web.BeanValidationTestServlet;\n+import bval.v20.valueextractor.web.ValueExtractorServlet;\n+import componenttest.annotation.Server;\n+import componenttest.annotation.SkipForRepeat;\n+import componenttest.annotation.TestServlet;\n+import componenttest.annotation.TestServlets;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.FATServletClient;\n+\n+//TODO: Delete this class and re-enable these tests in BeanVal20Test once CDI 3.0 and EJBLite 4.0 are ready.\n+@SkipForRepeat({ SkipForRepeat.EE9_FEATURES })\n+@RunWith(FATRunner.class)\n+public class BeanVal20_CDI_EJB_Test extends FATServletClient {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MTc5NQ=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc1NjM4OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.hibernate.validator.7.0/bnd.overrides", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxMzo0NFrOGcJzHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMzowN1rOGcqt5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3Mzg1NA==", "bodyText": "Maybe add a TODO to replace all of the jaxb related imports/dynamic-imports with standard imports for jaxb 3.0 (which should be getting delivered in liberty soon, not sure if bval supports it yet though)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432173854", "createdAt": "2020-05-28T23:13:44Z", "author": {"login": "aguibert"}, "path": "dev/io.openliberty.org.hibernate.validator.7.0/bnd.overrides", "diffHunk": "@@ -0,0 +1,87 @@\n+-include= ~../cnf/resources/bnd/rejar.props, \\\n+          ~../cnf/resources/bnd/app-resources.bnd\n+bVersion=1.0\n+bSymbolicName=io.openliberty.org.hibernate.validator.7.0\n+\n+Bundle-Name: Hibernate Validator Engine\n+Bundle-SymbolicName: io.openliberty.org.hibernate.validator.7.0\n+Bundle-Description: Hibernate's Bean Validation (JSR-380) reference implementation; version=7.0.0.Alpha2\n+\n+# Provide these as resources to applications\n+app-resources= \\\n+  META-INF/services/jakarta.validation.spi.ValidationProvider | \\\n+  META-INF/validation-mapping-1.0.xsd | \\\n+  META-INF/validation-configuration-1.0.xsd | \\\n+  META-INF/validation-mapping-1.1.xsd | \\\n+  META-INF/validation-configuration-1.1.xsd | \\\n+  META-INF/validation-mapping-2.0.xsd | \\\n+  META-INF/validation-configuration-2.0.xsd | \\\n+  META-INF/validation-mapping-3.0.xsd | \\\n+  META-INF/validation-configuration-3.0.xsd\n+\n+Export-Package: \\\n+  org.hibernate.validator.*;version=\"7.0.0.Alpha2\";thread-context=true\n+\n+Import-Package: \\\n+  !jakarta.persistence, \\\n+  jakarta.validation;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.constraints;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.constraintvalidation;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.executable;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.groups;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.metadata;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.spi;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.valueextraction;version=\"[3.0.0,4.0.0)\", \\\n+  javax.script;version=0, \\\n+  !javax.xml.bind.*, \\\n+  javax.xml.namespace;version=0, \\\n+  javax.xml.stream;version=0, \\\n+  javax.xml.stream.events;version=0, \\\n+  javax.xml.transform;version=0, \\\n+  javax.xml.transform.stream;version=0, \\\n+  javax.xml.validation;version=0, \\\n+  jakarta.el;version=\"[4.0.0,5.0.0)\";resolution:=optional, \\\n+  org.xml.sax;version=0, \\\n+  org.jboss.logging;version=\"[3.1.0,4.0.0)\", \\\n+  com.fasterxml.classmate;version=\"[1.3,2.0.0)\", \\\n+  com.fasterxml.classmate.members;version=\"[1.3,2.0.0)\", \\\n+  org.joda.time;version=\"[2.0.0,3.0.0)\";resolution:=optional, \\\n+  org.jsoup;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.nodes;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.parser;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.safety;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  javax.money;version=\"[1.0.0,2.0.0)\";resolution:=optional, \\\n+  com.thoughtworks.paranamer;version=\"[2.5.5,3.0.0)\";resolution:=optional, \\\n+  com.ibm.wsspi.classloading,\\\n+  org.apache.el\n+\n+# Use dynamicImport-Package for JAXB APIs, with this, Equonix will have a chance to wire\n+# those packages to the JAXB-2.2 API if the target bundle is started, or the one from system\n+# bundle will be always used due to JAXB 2.2 API is not resolved. Similarly, do the same\n+# with persistence because the open source optionally uses jpa if it is there for a customized\n+# TraversableRevolver implementation.\n+DynamicImport-Package: \\\n+ jakarta.persistence, \\\n+ javax.xml.bind, \\\n+ javax.xml.bind.annotation, \\\n+ javax.xml.bind.annotation.adapters, \\\n+ javax.xml.bind.attachment, \\\n+ javax.xml.bind.helpers, \\\n+ javax.xml.bind.util", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUxNTc4Ng==", "bodyText": "Added the following:\n# TODO: Replace all of the jaxb related dynamic-imports with standard imports for JAXB 3.0 once available.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432515786", "createdAt": "2020-05-29T14:20:09Z", "author": {"login": "nmittles"}, "path": "dev/io.openliberty.org.hibernate.validator.7.0/bnd.overrides", "diffHunk": "@@ -0,0 +1,87 @@\n+-include= ~../cnf/resources/bnd/rejar.props, \\\n+          ~../cnf/resources/bnd/app-resources.bnd\n+bVersion=1.0\n+bSymbolicName=io.openliberty.org.hibernate.validator.7.0\n+\n+Bundle-Name: Hibernate Validator Engine\n+Bundle-SymbolicName: io.openliberty.org.hibernate.validator.7.0\n+Bundle-Description: Hibernate's Bean Validation (JSR-380) reference implementation; version=7.0.0.Alpha2\n+\n+# Provide these as resources to applications\n+app-resources= \\\n+  META-INF/services/jakarta.validation.spi.ValidationProvider | \\\n+  META-INF/validation-mapping-1.0.xsd | \\\n+  META-INF/validation-configuration-1.0.xsd | \\\n+  META-INF/validation-mapping-1.1.xsd | \\\n+  META-INF/validation-configuration-1.1.xsd | \\\n+  META-INF/validation-mapping-2.0.xsd | \\\n+  META-INF/validation-configuration-2.0.xsd | \\\n+  META-INF/validation-mapping-3.0.xsd | \\\n+  META-INF/validation-configuration-3.0.xsd\n+\n+Export-Package: \\\n+  org.hibernate.validator.*;version=\"7.0.0.Alpha2\";thread-context=true\n+\n+Import-Package: \\\n+  !jakarta.persistence, \\\n+  jakarta.validation;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.constraints;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.constraintvalidation;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.executable;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.groups;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.metadata;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.spi;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.valueextraction;version=\"[3.0.0,4.0.0)\", \\\n+  javax.script;version=0, \\\n+  !javax.xml.bind.*, \\\n+  javax.xml.namespace;version=0, \\\n+  javax.xml.stream;version=0, \\\n+  javax.xml.stream.events;version=0, \\\n+  javax.xml.transform;version=0, \\\n+  javax.xml.transform.stream;version=0, \\\n+  javax.xml.validation;version=0, \\\n+  jakarta.el;version=\"[4.0.0,5.0.0)\";resolution:=optional, \\\n+  org.xml.sax;version=0, \\\n+  org.jboss.logging;version=\"[3.1.0,4.0.0)\", \\\n+  com.fasterxml.classmate;version=\"[1.3,2.0.0)\", \\\n+  com.fasterxml.classmate.members;version=\"[1.3,2.0.0)\", \\\n+  org.joda.time;version=\"[2.0.0,3.0.0)\";resolution:=optional, \\\n+  org.jsoup;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.nodes;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.parser;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.safety;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  javax.money;version=\"[1.0.0,2.0.0)\";resolution:=optional, \\\n+  com.thoughtworks.paranamer;version=\"[2.5.5,3.0.0)\";resolution:=optional, \\\n+  com.ibm.wsspi.classloading,\\\n+  org.apache.el\n+\n+# Use dynamicImport-Package for JAXB APIs, with this, Equonix will have a chance to wire\n+# those packages to the JAXB-2.2 API if the target bundle is started, or the one from system\n+# bundle will be always used due to JAXB 2.2 API is not resolved. Similarly, do the same\n+# with persistence because the open source optionally uses jpa if it is there for a customized\n+# TraversableRevolver implementation.\n+DynamicImport-Package: \\\n+ jakarta.persistence, \\\n+ javax.xml.bind, \\\n+ javax.xml.bind.annotation, \\\n+ javax.xml.bind.annotation.adapters, \\\n+ javax.xml.bind.attachment, \\\n+ javax.xml.bind.helpers, \\\n+ javax.xml.bind.util", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3Mzg1NA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMzE4OA==", "bodyText": "Correction.  JAXB is no longer needed by Hibernate Validator.  I've cleaned up the bnd.overrides and feature accordingly.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432713188", "createdAt": "2020-05-29T20:13:07Z", "author": {"login": "nmittles"}, "path": "dev/io.openliberty.org.hibernate.validator.7.0/bnd.overrides", "diffHunk": "@@ -0,0 +1,87 @@\n+-include= ~../cnf/resources/bnd/rejar.props, \\\n+          ~../cnf/resources/bnd/app-resources.bnd\n+bVersion=1.0\n+bSymbolicName=io.openliberty.org.hibernate.validator.7.0\n+\n+Bundle-Name: Hibernate Validator Engine\n+Bundle-SymbolicName: io.openliberty.org.hibernate.validator.7.0\n+Bundle-Description: Hibernate's Bean Validation (JSR-380) reference implementation; version=7.0.0.Alpha2\n+\n+# Provide these as resources to applications\n+app-resources= \\\n+  META-INF/services/jakarta.validation.spi.ValidationProvider | \\\n+  META-INF/validation-mapping-1.0.xsd | \\\n+  META-INF/validation-configuration-1.0.xsd | \\\n+  META-INF/validation-mapping-1.1.xsd | \\\n+  META-INF/validation-configuration-1.1.xsd | \\\n+  META-INF/validation-mapping-2.0.xsd | \\\n+  META-INF/validation-configuration-2.0.xsd | \\\n+  META-INF/validation-mapping-3.0.xsd | \\\n+  META-INF/validation-configuration-3.0.xsd\n+\n+Export-Package: \\\n+  org.hibernate.validator.*;version=\"7.0.0.Alpha2\";thread-context=true\n+\n+Import-Package: \\\n+  !jakarta.persistence, \\\n+  jakarta.validation;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.constraints;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.constraintvalidation;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.executable;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.groups;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.metadata;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.spi;version=\"[3.0.0,4.0.0)\", \\\n+  jakarta.validation.valueextraction;version=\"[3.0.0,4.0.0)\", \\\n+  javax.script;version=0, \\\n+  !javax.xml.bind.*, \\\n+  javax.xml.namespace;version=0, \\\n+  javax.xml.stream;version=0, \\\n+  javax.xml.stream.events;version=0, \\\n+  javax.xml.transform;version=0, \\\n+  javax.xml.transform.stream;version=0, \\\n+  javax.xml.validation;version=0, \\\n+  jakarta.el;version=\"[4.0.0,5.0.0)\";resolution:=optional, \\\n+  org.xml.sax;version=0, \\\n+  org.jboss.logging;version=\"[3.1.0,4.0.0)\", \\\n+  com.fasterxml.classmate;version=\"[1.3,2.0.0)\", \\\n+  com.fasterxml.classmate.members;version=\"[1.3,2.0.0)\", \\\n+  org.joda.time;version=\"[2.0.0,3.0.0)\";resolution:=optional, \\\n+  org.jsoup;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.nodes;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.parser;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  org.jsoup.safety;version=\"[1.5.2,2.0.0)\";resolution:=optional, \\\n+  javax.money;version=\"[1.0.0,2.0.0)\";resolution:=optional, \\\n+  com.thoughtworks.paranamer;version=\"[2.5.5,3.0.0)\";resolution:=optional, \\\n+  com.ibm.wsspi.classloading,\\\n+  org.apache.el\n+\n+# Use dynamicImport-Package for JAXB APIs, with this, Equonix will have a chance to wire\n+# those packages to the JAXB-2.2 API if the target bundle is started, or the one from system\n+# bundle will be always used due to JAXB 2.2 API is not resolved. Similarly, do the same\n+# with persistence because the open source optionally uses jpa if it is there for a customized\n+# TraversableRevolver implementation.\n+DynamicImport-Package: \\\n+ jakarta.persistence, \\\n+ javax.xml.bind, \\\n+ javax.xml.bind.annotation, \\\n+ javax.xml.bind.annotation.adapters, \\\n+ javax.xml.bind.attachment, \\\n+ javax.xml.bind.helpers, \\\n+ javax.xml.bind.util", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3Mzg1NA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc1OTQ1OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.org.hibernate.validator.cdi.7.0/bnd.overrides", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxNTowOVrOGcJ1BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTozNDo0NVrOGchziQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDM0MA==", "bodyText": "Is this clause intentionally left blank? If so, it can be removed", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432174340", "createdAt": "2020-05-28T23:15:09Z", "author": {"login": "aguibert"}, "path": "dev/io.openliberty.org.hibernate.validator.cdi.7.0/bnd.overrides", "diffHunk": "@@ -0,0 +1,20 @@\n+-include= ~../cnf/resources/bnd/rejar.props\n+\n+bVersion=1.0\n+Bundle-SymbolicName: io.openliberty.org.hibernate.validator.cdi.7.0\n+\n+# Something that wildfly/thorntail apparently uses but blows up on Liberty\n+Fragment-Host:\n+\n+Import-Package: \\\n+  org.apache.el,\\\n+  *\n+\n+Export-Package: \\\n+  org.hibernate.validator.cdi.*;version=\"7.0.0.Alpha2\"\n+\n+Include-Resource: \\\n+  @${repo;org.hibernate.validator:hibernate-validator-cdi;7.0.0.Alpha2}!/META-INF/services/*,\\\n+  META-INF=resources/META-INF\n+\n+-cdiannotations:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU2NzE3Nw==", "bodyText": "It looks to be needed. I took it out and the Manifest changed.  Here is some of the background info I was given:\nWhen we updated to Bnd 4.3.1 the default behavior changed. Bnd is finding and processing CDI beans in  bundles. The default for Bnd is -cdiannotations: * which means process all classes for CDI beans. You can disable that if you don't use OSGi's CDI Integration spec by using -cdiannotations:", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432567177", "createdAt": "2020-05-29T15:34:45Z", "author": {"login": "nmittles"}, "path": "dev/io.openliberty.org.hibernate.validator.cdi.7.0/bnd.overrides", "diffHunk": "@@ -0,0 +1,20 @@\n+-include= ~../cnf/resources/bnd/rejar.props\n+\n+bVersion=1.0\n+Bundle-SymbolicName: io.openliberty.org.hibernate.validator.cdi.7.0\n+\n+# Something that wildfly/thorntail apparently uses but blows up on Liberty\n+Fragment-Host:\n+\n+Import-Package: \\\n+  org.apache.el,\\\n+  *\n+\n+Export-Package: \\\n+  org.hibernate.validator.cdi.*;version=\"7.0.0.Alpha2\"\n+\n+Include-Resource: \\\n+  @${repo;org.hibernate.validator:hibernate-validator-cdi;7.0.0.Alpha2}!/META-INF/services/*,\\\n+  META-INF=resources/META-INF\n+\n+-cdiannotations:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDM0MA=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc2MTU0OnYy", "diffSide": "RIGHT", "path": "dev/wlp-jakartaee-transform/rules/jakarta-renames.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxNjoxM1rOGcJ2SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDozMjo0NFrOGcfZ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDY2NQ==", "bodyText": "do we really need to list these packages for transform if they're not changing?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432174665", "createdAt": "2020-05-28T23:16:13Z", "author": {"login": "aguibert"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-renames.properties", "diffHunk": "@@ -79,3 +79,18 @@ javax.xml.bind.attachment=jakarta.xml.bind.attachment\n \n javax.transaction=jakarta.transaction\n \n+javax.validation=jakarta.validation\n+javax.validation.bootstrap=jakarta.validation.bootstrap\n+javax.validation.constraints=jakarta.validation.constraints\n+javax.validation.constraintvalidation=jakarta.validation.constraintvalidation\n+javax.validation.executable=jakarta.validation.executable\n+javax.validation.groups=jakarta.validation.groups\n+javax.validation.metadata=jakarta.validation.metadata\n+javax.validation.spi=jakarta.validation.spi\n+javax.validation.valueextraction=jakarta.validation.valueextraction\n+org.hibernate.validator=org.hibernate.validator\n+org.hibernate.validator.cdi.internal=org.hibernate.validator.cdi.internal\n+org.hibernate.validator.cdi=org.hibernate.validator.cdi\n+org.hibernate.validator.internal.engine.valueextraction=org.hibernate.validator.internal.engine.valueextraction\n+org.hibernate.validator.internal.util.privilegedactions=org.hibernate.validator.internal.util.privilegedactions\n+org.hibernate.validator.internal=org.hibernate.validator.internal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwODE2Nw==", "bodyText": "It was the only way I could get the package versions to be changed. Is there a better way?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432508167", "createdAt": "2020-05-29T14:10:46Z", "author": {"login": "nmittles"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-renames.properties", "diffHunk": "@@ -79,3 +79,18 @@ javax.xml.bind.attachment=jakarta.xml.bind.attachment\n \n javax.transaction=jakarta.transaction\n \n+javax.validation=jakarta.validation\n+javax.validation.bootstrap=jakarta.validation.bootstrap\n+javax.validation.constraints=jakarta.validation.constraints\n+javax.validation.constraintvalidation=jakarta.validation.constraintvalidation\n+javax.validation.executable=jakarta.validation.executable\n+javax.validation.groups=jakarta.validation.groups\n+javax.validation.metadata=jakarta.validation.metadata\n+javax.validation.spi=jakarta.validation.spi\n+javax.validation.valueextraction=jakarta.validation.valueextraction\n+org.hibernate.validator=org.hibernate.validator\n+org.hibernate.validator.cdi.internal=org.hibernate.validator.cdi.internal\n+org.hibernate.validator.cdi=org.hibernate.validator.cdi\n+org.hibernate.validator.internal.engine.valueextraction=org.hibernate.validator.internal.engine.valueextraction\n+org.hibernate.validator.internal.util.privilegedactions=org.hibernate.validator.internal.util.privilegedactions\n+org.hibernate.validator.internal=org.hibernate.validator.internal", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDY2NQ=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNzg0MQ==", "bodyText": "Ah ok, that's fine then. It seems kind of clunky that the tool requires packages that won't be renamed to be defined in this file and the version mapping props file, but that's an issue with the xformer tool, not this PR so lets ignore it", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r432527841", "createdAt": "2020-05-29T14:32:44Z", "author": {"login": "aguibert"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-renames.properties", "diffHunk": "@@ -79,3 +79,18 @@ javax.xml.bind.attachment=jakarta.xml.bind.attachment\n \n javax.transaction=jakarta.transaction\n \n+javax.validation=jakarta.validation\n+javax.validation.bootstrap=jakarta.validation.bootstrap\n+javax.validation.constraints=jakarta.validation.constraints\n+javax.validation.constraintvalidation=jakarta.validation.constraintvalidation\n+javax.validation.executable=jakarta.validation.executable\n+javax.validation.groups=jakarta.validation.groups\n+javax.validation.metadata=jakarta.validation.metadata\n+javax.validation.spi=jakarta.validation.spi\n+javax.validation.valueextraction=jakarta.validation.valueextraction\n+org.hibernate.validator=org.hibernate.validator\n+org.hibernate.validator.cdi.internal=org.hibernate.validator.cdi.internal\n+org.hibernate.validator.cdi=org.hibernate.validator.cdi\n+org.hibernate.validator.internal.engine.valueextraction=org.hibernate.validator.internal.engine.valueextraction\n+org.hibernate.validator.internal.util.privilegedactions=org.hibernate.validator.internal.util.privilegedactions\n+org.hibernate.validator.internal=org.hibernate.validator.internal", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDY2NQ=="}, "originalCommit": {"oid": "cd23f534df9249f6043b2270b20acf956c756e69"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Njc0MTEwOnYy", "diffSide": "RIGHT", "path": "dev/cnf/oss_dependencies.maven", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzo1NToyNVrOGkciXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzo1NToyNVrOGkciXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg2OTQ3MQ==", "bodyText": "I really am going to write some gradle that fails the build if this file isn't kept alphabetical :-o", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r440869471", "createdAt": "2020-06-16T13:55:25Z", "author": {"login": "tevans78"}, "path": "dev/cnf/oss_dependencies.maven", "diffHunk": "@@ -153,6 +153,7 @@ jakarta.transaction:jakarta.transaction-api:2.0.0-RC1\n jakarta.xml.bind:jakarta.xml.bind-api:3.0.0-RC3\n jakarta.xml.soap:jakarta.xml.soap-api:2.0.0-RC3\n jakarta.xml.ws:jakarta.xml.ws-api:3.0.0-RC3\n+jakarta.validation:jakarta.validation-api:3.0.0-M1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89975a34d20d80319950461844007b94825665bc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjgzNjQ5OnYy", "diffSide": "RIGHT", "path": "dev/wlp-jakartaee-transform/rules/jakarta-renames.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDoxNTozNlrOGkdfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDoxNTozNlrOGkdfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg4NTA2NQ==", "bodyText": "alphabetical please otherwise we end up with duplicates", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r440885065", "createdAt": "2020-06-16T14:15:36Z", "author": {"login": "tevans78"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-renames.properties", "diffHunk": "@@ -64,6 +64,15 @@ javax.xml.bind.helpers=jakarta.xml.bind.helpers\n javax.xml.bind.util=jakarta.xml.bind.util\n javax.xml.bind=jakarta.xml.bind\n javax.xml.ws=jakarta.xml.ws\n+javax.validation=jakarta.validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89975a34d20d80319950461844007b94825665bc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjgzODYxOnYy", "diffSide": "RIGHT", "path": "dev/wlp-jakartaee-transform/rules/jakarta-versions.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDoxNjowM1rOGkdgrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDoxNjowM1rOGkdgrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg4NTQyMQ==", "bodyText": "alphabetical please otherwise we end up with duplicates", "url": "https://github.com/OpenLiberty/open-liberty/pull/12238#discussion_r440885421", "createdAt": "2020-06-16T14:16:03Z", "author": {"login": "tevans78"}, "path": "dev/wlp-jakartaee-transform/rules/jakarta-versions.properties", "diffHunk": "@@ -93,3 +93,18 @@ org.jboss.weld.serialization.spi=[4.0,5)\n org.jboss.weld.transaction.spi=[4.0,5)\n org.jboss.weld.util.collections=[4.0,5)\n org.jboss.weld=[4.0,5)\n+jakarta.validation=[3.0,4)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89975a34d20d80319950461844007b94825665bc"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1645, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}