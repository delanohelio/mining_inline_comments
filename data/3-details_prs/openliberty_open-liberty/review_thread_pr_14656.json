{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTA1NjU0", "number": 14656, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0MzowN1rOEyhgzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzozMjo1M1rOEzy00Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDEzMzI3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0MzowN1rOHpN2eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxNTowOFrOHqouaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MDYwMg==", "bodyText": "Add javadoc.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r512980602", "createdAt": "2020-10-27T19:43:07Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -424,10 +434,14 @@ public void registerRealmConfigChangeListener(RealmConfigChangeListener listener\n             listeners.add(listener);\n     }\n \n+    public void deregisterRealmConfigChangeListener(RealmConfigChangeListener listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2OTQ4MQ==", "bodyText": "Done", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r514469481", "createdAt": "2020-10-29T18:15:08Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -424,10 +434,14 @@ public void registerRealmConfigChangeListener(RealmConfigChangeListener listener\n             listeners.add(listener);\n     }\n \n+    public void deregisterRealmConfigChangeListener(RealmConfigChangeListener listener) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MDYwMg=="}, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDE0MDY0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0NDo1MlrOHpN7Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxNTozMVrOHqovZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MTc4Mg==", "bodyText": "Remove trivial? Add javadoc.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r512981782", "createdAt": "2020-10-27T19:44:52Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -496,4 +510,56 @@ public long getPageCacheTimeOut() {\n     void setRepositoryManager(RepositoryManager repositoryManager) {\n         this.repositoryManager = repositoryManager;\n     }\n+\n+    @Trivial", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2OTczMw==", "bodyText": "Done", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r514469733", "createdAt": "2020-10-29T18:15:31Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -496,4 +510,56 @@ public long getPageCacheTimeOut() {\n     void setRepositoryManager(RepositoryManager repositoryManager) {\n         this.repositoryManager = repositoryManager;\n     }\n+\n+    @Trivial", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MTc4Mg=="}, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDE0MTQ1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0NTowMFrOHpN7fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxNToyM1rOHqovEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MTg4Nw==", "bodyText": "Ditto.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r512981887", "createdAt": "2020-10-27T19:45:00Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -496,4 +510,56 @@ public long getPageCacheTimeOut() {\n     void setRepositoryManager(RepositoryManager repositoryManager) {\n         this.repositoryManager = repositoryManager;\n     }\n+\n+    @Trivial\n+    @Reference(service = FutureMonitor.class)\n+    protected void setFutureMonitor(FutureMonitor futureMonitor) {\n+        _futureMonitor = futureMonitor;\n+    }\n+\n+    @Trivial", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2OTY0OQ==", "bodyText": "Done", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r514469649", "createdAt": "2020-10-29T18:15:23Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -496,4 +510,56 @@ public long getPageCacheTimeOut() {\n     void setRepositoryManager(RepositoryManager repositoryManager) {\n         this.repositoryManager = repositoryManager;\n     }\n+\n+    @Trivial\n+    @Reference(service = FutureMonitor.class)\n+    protected void setFutureMonitor(FutureMonitor futureMonitor) {\n+        _futureMonitor = futureMonitor;\n+    }\n+\n+    @Trivial", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MTg4Nw=="}, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDE2MDA0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0ODo0NlrOHpOHGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxNjozNlrOHqox_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4NDg1OQ==", "bodyText": "Reverse the string equality check so the constant is first to protect against possible NPE.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r512984859", "createdAt": "2020-10-27T19:48:46Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -496,4 +510,56 @@ public long getPageCacheTimeOut() {\n     void setRepositoryManager(RepositoryManager repositoryManager) {\n         this.repositoryManager = repositoryManager;\n     }\n+\n+    @Trivial\n+    @Reference(service = FutureMonitor.class)\n+    protected void setFutureMonitor(FutureMonitor futureMonitor) {\n+        _futureMonitor = futureMonitor;\n+    }\n+\n+    @Trivial\n+    protected void unsetFutureMonitor(FutureMonitor futureMonitor) {\n+        _futureMonitor = null;\n+    }\n+\n+    /**\n+     * After a configuration modification, run a RealConfigChange check which will verify the participatingBaseEntries.\n+     *\n+     * We used to do this directly from the modify command, but timing change during startup/modify and we would process the check\n+     * before the user registries activated, leading to misleading error messages being printed.\n+     */\n+    @Trivial\n+    @Override\n+    public void notificationCreated(RuntimeUpdateManager updateManager, RuntimeUpdateNotification notification) {\n+        if (modified && notification.getName().equals(RuntimeUpdateNotification.CONFIG_UPDATES_DELIVERED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MDM5Ng==", "bodyText": "Done", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r514470396", "createdAt": "2020-10-29T18:16:36Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.wim.core/src/com/ibm/ws/security/wim/ConfigManager.java", "diffHunk": "@@ -496,4 +510,56 @@ public long getPageCacheTimeOut() {\n     void setRepositoryManager(RepositoryManager repositoryManager) {\n         this.repositoryManager = repositoryManager;\n     }\n+\n+    @Trivial\n+    @Reference(service = FutureMonitor.class)\n+    protected void setFutureMonitor(FutureMonitor futureMonitor) {\n+        _futureMonitor = futureMonitor;\n+    }\n+\n+    @Trivial\n+    protected void unsetFutureMonitor(FutureMonitor futureMonitor) {\n+        _futureMonitor = null;\n+    }\n+\n+    /**\n+     * After a configuration modification, run a RealConfigChange check which will verify the participatingBaseEntries.\n+     *\n+     * We used to do this directly from the modify command, but timing change during startup/modify and we would process the check\n+     * before the user registries activated, leading to misleading error messages being printed.\n+     */\n+    @Trivial\n+    @Override\n+    public void notificationCreated(RuntimeUpdateManager updateManager, RuntimeUpdateNotification notification) {\n+        if (modified && notification.getName().equals(RuntimeUpdateNotification.CONFIG_UPDATES_DELIVERED)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4NDg1OQ=="}, "originalCommit": {"oid": "19bf4e0171b279996218cdb22cbbe279e65abe2b"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzQ1NTUzOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.wim.core_fat/publish/servers/com.ibm.ws.security.wim.core.fat.mod/.gitignore", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzozMjo1M1rOHrPJQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoxNDozMFrOHrQ9Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5ODk0NA==", "bodyText": "We should be building in the autofvt build directory, so not sure we should need this.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r515098944", "createdAt": "2020-10-30T13:32:53Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.wim.core_fat/publish/servers/com.ibm.ws.security.wim.core.fat.mod/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/dropins", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf95fa7679e8c438191bad413eaddad683d360c2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyODY3MA==", "bodyText": "Removed", "url": "https://github.com/OpenLiberty/open-liberty/pull/14656#discussion_r515128670", "createdAt": "2020-10-30T14:14:30Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.wim.core_fat/publish/servers/com.ibm.ws.security.wim.core.fat.mod/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/dropins", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5ODk0NA=="}, "originalCommit": {"oid": "bf95fa7679e8c438191bad413eaddad683d360c2"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2561, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}