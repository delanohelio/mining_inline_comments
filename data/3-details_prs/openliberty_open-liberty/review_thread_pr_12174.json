{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjE1MTIx", "number": 12174, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozODo1NVrOD8Pvuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozODo1NVrOD8Pvuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk5MTMxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.concurrent_fat/test-bundles/test.resource/src/test/resource/internal/TestResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozODo1NVrOGVEdrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1Mzo0M1rOGVE3ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NjQxMg==", "bodyText": "Missing \"x\" in \"javax\".  Should be:\njavax.enterprise.concurrent.ManagedScheduledExecutorService", "url": "https://github.com/OpenLiberty/open-liberty/pull/12174#discussion_r424746412", "createdAt": "2020-05-13T21:38:55Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.concurrent_fat/test-bundles/test.resource/src/test/resource/internal/TestResource.java", "diffHunk": "@@ -68,12 +66,18 @@ public Object run() throws Exception {\n                     if (!\"com.ibm.ws.threading.internal.ScheduledExecutorImpl\".equals(componentName))\n                         throw new Exception(\"Unexpected ScheduledExecutorService with highest service.ranking: \" + schedExecSvcRef);\n \n-                    ServiceReference<ManagedExecutorService> mgdExecSvcRef = bundleContext.getServiceReference(ManagedExecutorService.class);\n+                    ServiceReference<?> mgdExecSvcRef = bundleContext.getServiceReference(\"jakarta.enterprise.concurrent.ManagedExecutorService\");\n+                    if (mgdExecSvcRef == null)\n+                        mgdExecSvcRef = bundleContext.getServiceReference(\"javax.enterprise.concurrent.ManagedExecutorService\");\n+\n                     String displayId = (String) mgdExecSvcRef.getProperty(\"config.displayId\");\n                     if (!\"managedExecutorService[DefaultManagedExecutorService]\".equals(displayId))\n                         throw new Exception(\"Unexpected ManagedExecutorService with highest service.ranking: \" + displayId);\n \n-                    ServiceReference<ManagedScheduledExecutorService> mgdSchedExecSvcRef = bundleContext.getServiceReference(ManagedScheduledExecutorService.class);\n+                    ServiceReference<?> mgdSchedExecSvcRef = bundleContext.getServiceReference(\"java.enterprise.concurrent.ManagedScheduledExecutorService\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e229bc877e51094c90445cc0445494b731b6721"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MzAzNA==", "bodyText": "Good catch - added a commit to fix it.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12174#discussion_r424753034", "createdAt": "2020-05-13T21:53:43Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.ws.concurrent_fat/test-bundles/test.resource/src/test/resource/internal/TestResource.java", "diffHunk": "@@ -68,12 +66,18 @@ public Object run() throws Exception {\n                     if (!\"com.ibm.ws.threading.internal.ScheduledExecutorImpl\".equals(componentName))\n                         throw new Exception(\"Unexpected ScheduledExecutorService with highest service.ranking: \" + schedExecSvcRef);\n \n-                    ServiceReference<ManagedExecutorService> mgdExecSvcRef = bundleContext.getServiceReference(ManagedExecutorService.class);\n+                    ServiceReference<?> mgdExecSvcRef = bundleContext.getServiceReference(\"jakarta.enterprise.concurrent.ManagedExecutorService\");\n+                    if (mgdExecSvcRef == null)\n+                        mgdExecSvcRef = bundleContext.getServiceReference(\"javax.enterprise.concurrent.ManagedExecutorService\");\n+\n                     String displayId = (String) mgdExecSvcRef.getProperty(\"config.displayId\");\n                     if (!\"managedExecutorService[DefaultManagedExecutorService]\".equals(displayId))\n                         throw new Exception(\"Unexpected ManagedExecutorService with highest service.ranking: \" + displayId);\n \n-                    ServiceReference<ManagedScheduledExecutorService> mgdSchedExecSvcRef = bundleContext.getServiceReference(ManagedScheduledExecutorService.class);\n+                    ServiceReference<?> mgdSchedExecSvcRef = bundleContext.getServiceReference(\"java.enterprise.concurrent.ManagedScheduledExecutorService\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NjQxMg=="}, "originalCommit": {"oid": "2e229bc877e51094c90445cc0445494b731b6721"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1784, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}