{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MDQ2NjM2", "number": 14544, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowMzo0M1rOEzZUeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowNToxNlrOEzZW_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzI3Njc0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.dynacache/src/com/ibm/ws/cache/CacheConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowMzo0M1rOHql1yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowMzo0M1rOHql1yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyMjIxOA==", "bodyText": "If the values of the system properties are changed by another thread while calling putAll it will lead to a ConcurrentModificationException:\n\nStack Dump = java.util.ConcurrentModificationException\nat java.util.Hashtable$Enumerator.next(Hashtable.java:1506)\nat java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1094)\nat com.ibm.ws.cache.CacheConfig.(CacheConfig.java:382)\nat com.ibm.ws.cache.CacheServiceImpl.parsePropertiesFromOSGiConfigAdmin(CacheServiceImpl.java:210)\nat com.ibm.ws.cache.CacheServiceImpl.start(CacheServiceImpl.java:140)", "url": "https://github.com/OpenLiberty/open-liberty/pull/14544#discussion_r514422218", "createdAt": "2020-10-29T17:03:43Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.dynacache/src/com/ibm/ws/cache/CacheConfig.java", "diffHunk": "@@ -455,6 +459,8 @@ public CacheConfig(Properties properties, CacheConfig config) {\n         // -------------------------------------------------\n         FieldInitializer.initFromSystemProperties(this);\n         overrideCacheConfig(properties);\n+        _passedInProperties.putAll(properties);\n+        _passedInProperties.putAll(System.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b069f1a6ccbebcd6e8488a8f945864db7645e159"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzI4MzE3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.dynacache/src/com/ibm/ws/cache/CacheConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowNToxNlrOHql5tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowNToxNlrOHql5tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyMzIyMw==", "bodyText": "When doing putAll across system properties you will need to synchronize on the properties object returned by System.getProperties while calling putAll here.", "url": "https://github.com/OpenLiberty/open-liberty/pull/14544#discussion_r514423223", "createdAt": "2020-10-29T17:05:16Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.dynacache/src/com/ibm/ws/cache/CacheConfig.java", "diffHunk": "@@ -377,6 +378,9 @@ public CacheConfig(Map<String, Object> map) {\n         FieldInitializer.initFromSystemProperties(this);\n         overrideCacheConfig(convert(map));\n         determineCacheProvider();\n+        _passedInProperties.putAll(map);\n+        _passedInProperties.putAll(System.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b069f1a6ccbebcd6e8488a8f945864db7645e159"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2619, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}