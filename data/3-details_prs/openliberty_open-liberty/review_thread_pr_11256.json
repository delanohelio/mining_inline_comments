{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzkzMjY5", "number": 11256, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNjo0OVrODnGAyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxOToyMDoxOFrOEJPXtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzE5NTYxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jdbcLegacyApi-1.0/resources/l10n/com.ibm.websphere.appserver.jdbcLegacyApi-1.0.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNjo0OVrOF043qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDo0NTozMVrOGdZgFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMjAyNQ==", "bodyText": "suggested edit:\nThis feature enables the traditional JDBC API. If a timeout occurs waiting for a JDBC connection, this API allows the JDBC component to throw a ConnectionWaitTimeoutException, instead of throwing a SQLTransientConnectionException with a ConnectionWaitTimeoutException as the cause. Use this feature only for compatibility with WebSphere Application\nServer traditional applications that require the ConnectionWaitTimeoutException to be thrown.\nnote that IBM style advises against using the term \"legacy\":\nFor products that are still supported but are not being actively developed, use \"existing,\" \"heritage,\" \"traditional,\" \"established,\" \"mature,\" \"earlier,\" or another appropriate neutral description instead of \"legacy.\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r391002025", "createdAt": "2020-03-11T14:16:49Z", "author": {"login": "dmuelle"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jdbcLegacyApi-1.0/resources/l10n/com.ibm.websphere.appserver.jdbcLegacyApi-1.0.properties", "diffHunk": "@@ -0,0 +1,20 @@\n+###############################################################################\n+# Copyright (c) 2013, 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=This feature enables the legacy JDBC API.  This API allows the JDBC component to throw ConnectionWaitTimeoutException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49c20a0ff44467b5e3652c449fe85c70fdca809"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2NjU3NA==", "bodyText": "I added the \"ID review not needed\" because this pull is not intended for delivery.  It is just for Greg to experiment with.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r392266574", "createdAt": "2020-03-13T14:36:06Z", "author": {"login": "njr-11"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jdbcLegacyApi-1.0/resources/l10n/com.ibm.websphere.appserver.jdbcLegacyApi-1.0.properties", "diffHunk": "@@ -0,0 +1,20 @@\n+###############################################################################\n+# Copyright (c) 2013, 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=This feature enables the legacy JDBC API.  This API allows the JDBC component to throw ConnectionWaitTimeoutException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMjAyNQ=="}, "originalCommit": {"oid": "d49c20a0ff44467b5e3652c449fe85c70fdca809"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ3OTcwMQ==", "bodyText": "Hi David.  We are going to be pushing code changes out in this PR to support a new feature, but the feature will not be in OL.", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433479701", "createdAt": "2020-06-01T20:45:31Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.websphere.appserver.features/visibility/public/jdbcLegacyApi-1.0/resources/l10n/com.ibm.websphere.appserver.jdbcLegacyApi-1.0.properties", "diffHunk": "@@ -0,0 +1,20 @@\n+###############################################################################\n+# Copyright (c) 2013, 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=This feature enables the legacy JDBC API.  This API allows the JDBC component to throw ConnectionWaitTimeoutException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMjAyNQ=="}, "originalCommit": {"oid": "d49c20a0ff44467b5e3652c449fe85c70fdca809"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Mzc2NDIyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzo1MDowN1rOGcdbLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoxNjo0NFrOGdYoQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ==", "bodyText": "Lets remove this section of doc, using Throwable#initCause() is not really recommended in general", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r432495405", "createdAt": "2020-05-29T13:50:07Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "diffHunk": "@@ -21,11 +21,127 @@\n     private static final long serialVersionUID = 5958695928250441720L;\n \n     /**\n-     * Make a new ConnectionWaitTimeoutException.\n-     * \n-     * @param message the exception message.\n+     * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n+     * The <code>reason</code>, <code>SQLState</code> are initialized\n+     * to <code>null</code> and the vendor code is initialized to 0.\n+     *\n+     * The <code>cause</code> is not initialized, and may subsequently be\n+     * initialized by a call to the\n+     * {@link Throwable#initCause(java.lang.Throwable)} method.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24ae2deb787718d32855987da3852de0abd690de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTU1NA==", "bodyText": "Same comment applies to javadoc of other ctors", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r432495554", "createdAt": "2020-05-29T13:50:23Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "diffHunk": "@@ -21,11 +21,127 @@\n     private static final long serialVersionUID = 5958695928250441720L;\n \n     /**\n-     * Make a new ConnectionWaitTimeoutException.\n-     * \n-     * @param message the exception message.\n+     * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n+     * The <code>reason</code>, <code>SQLState</code> are initialized\n+     * to <code>null</code> and the vendor code is initialized to 0.\n+     *\n+     * The <code>cause</code> is not initialized, and may subsequently be\n+     * initialized by a call to the\n+     * {@link Throwable#initCause(java.lang.Throwable)} method.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, "originalCommit": {"oid": "24ae2deb787718d32855987da3852de0abd690de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4ODUxMA==", "bodyText": "Done.  Since I pulled the constructor methods and javadoc straight from the SQLTransientConnectionException parent class, should I remove the Throwable#initCause() text from the javadoc there as well?", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433388510", "createdAt": "2020-06-01T17:44:44Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "diffHunk": "@@ -21,11 +21,127 @@\n     private static final long serialVersionUID = 5958695928250441720L;\n \n     /**\n-     * Make a new ConnectionWaitTimeoutException.\n-     * \n-     * @param message the exception message.\n+     * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n+     * The <code>reason</code>, <code>SQLState</code> are initialized\n+     * to <code>null</code> and the vendor code is initialized to 0.\n+     *\n+     * The <code>cause</code> is not initialized, and may subsequently be\n+     * initialized by a call to the\n+     * {@link Throwable#initCause(java.lang.Throwable)} method.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, "originalCommit": {"oid": "24ae2deb787718d32855987da3852de0abd690de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NjU4MA==", "bodyText": "SQLTransientConnectionException comes from the JDK, so we can't modify that class or its doc", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433396580", "createdAt": "2020-06-01T17:59:34Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "diffHunk": "@@ -21,11 +21,127 @@\n     private static final long serialVersionUID = 5958695928250441720L;\n \n     /**\n-     * Make a new ConnectionWaitTimeoutException.\n-     * \n-     * @param message the exception message.\n+     * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n+     * The <code>reason</code>, <code>SQLState</code> are initialized\n+     * to <code>null</code> and the vendor code is initialized to 0.\n+     *\n+     * The <code>cause</code> is not initialized, and may subsequently be\n+     * initialized by a call to the\n+     * {@link Throwable#initCause(java.lang.Throwable)} method.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, "originalCommit": {"oid": "24ae2deb787718d32855987da3852de0abd690de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NTQwOQ==", "bodyText": "D'OH!  Good catch... :-)", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433465409", "createdAt": "2020-06-01T20:16:44Z", "author": {"login": "gjwatts"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "diffHunk": "@@ -21,11 +21,127 @@\n     private static final long serialVersionUID = 5958695928250441720L;\n \n     /**\n-     * Make a new ConnectionWaitTimeoutException.\n-     * \n-     * @param message the exception message.\n+     * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n+     * The <code>reason</code>, <code>SQLState</code> are initialized\n+     * to <code>null</code> and the vendor code is initialized to 0.\n+     *\n+     * The <code>cause</code> is not initialized, and may subsequently be\n+     * initialized by a call to the\n+     * {@link Throwable#initCause(java.lang.Throwable)} method.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, "originalCommit": {"oid": "24ae2deb787718d32855987da3852de0abd690de"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Mzg0Nzg1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDoxMjoyMlrOGceQ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDoxMjoyMlrOGceQ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwOTE2Nw==", "bodyText": "Lets remove these references to heritageAPIs-1.0 and the commercial offering -- this repo shouldn't make any explicit references to CL or its features", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r432509167", "createdAt": "2020-05-29T14:12:22Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java", "diffHunk": "@@ -821,11 +821,15 @@ public static SQLException toSQLException(ResourceException resX)\n             // The J2C connection manager raises a special exception subclass.\n             else if (linkedX instanceof ResourceAllocationException\n                      && linkedX.getClass().getName().equals(\"com.ibm.websphere.ce.j2c.ConnectionWaitTimeoutException\")) {\n-                // Use a special SQLException subclass for connection wait timeout. \n-                sqlX = new ConnectionWaitTimeoutException(linkedX.getMessage()); \n-                sqlX.initCause(resX); \n-\n-                sqlX = new SQLTransientConnectionException(linkedX.getMessage(), \"08001\", 0, sqlX); \n+                // With the heritageAPIs-1.0 feature in our commercial offering, a change was made from throwing an SQLTransientConnectionException \n+                // to a ConnectionWaitTimeoutException to allow for traditional WebSphere applications to work since they expect a \n+                // ConnectionWaitTimeoutException instead.  This will continue to work with existing liberty applications as well since ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24ae2deb787718d32855987da3852de0abd690de"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTI0NDcxOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.jdbc/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxOToyMDoxOFrOGpsGAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxOToyMDoxOFrOGpsGAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NzIzNA==", "bodyText": "this package is also listed under the Private-package list. I don't think that will cause an immediate issue but should be cleaned up", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r446367234", "createdAt": "2020-06-26T19:20:18Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.jdbc/bnd.bnd", "diffHunk": "@@ -27,7 +27,8 @@ Export-Package: \\\n     com.ibm.ws.jdbc.timedoperations, \\\n     com.ibm.ws.rsadapter, \\\n     com.ibm.ws.rsadapter.jdbc, \\\n-    com.ibm.ws.rsadapter.impl\n+    com.ibm.ws.rsadapter.impl, \\\n+    com.ibm.websphere.ce.cm", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8be86d60785e96937c51bee63f8656c61589253a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2064, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}