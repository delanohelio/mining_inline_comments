{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NzQyOTg5", "number": 13553, "title": "update weld to 3.1.7 and 4.0.1", "bodyText": "", "createdAt": "2020-08-18T20:56:54Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553", "merged": true, "mergeCommit": {"oid": "171030803830fd113bc13d01da192ceefbd29404"}, "closed": true, "closedAt": "2021-08-17T11:59:12Z", "author": {"login": "benjamin-confino"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAYCOLgBqjM2Njk4NjExNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeysf1oAH2gAyNDY5NzQyOTg5OjgzMzkzODQ0ZTBlYWVlY2Y4MWZkM2Y1NzU0NmVlOGQ1MjExMzlkNmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13aed29aa07f0f2059b2e56943170dee9301eb73", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/13aed29aa07f0f2059b2e56943170dee9301eb73", "committedDate": "2020-08-18T20:55:50Z", "message": "update weld to 3.1.5"}, "afterCommit": {"oid": "f2c31721c82aeca442b037acf170cefe878ee8f0", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f2c31721c82aeca442b037acf170cefe878ee8f0", "committedDate": "2020-08-19T09:17:08Z", "message": "update weld to 3.1.5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "220c33ee121e357b95acb4d125e7fac477436fa7", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/220c33ee121e357b95acb4d125e7fac477436fa7", "committedDate": "2020-12-17T15:24:17Z", "message": "Merge branch 'integration' into 13552-update-weld-315"}, "afterCommit": {"oid": "f50defbdaa4e667b69bb2aeaac1327feb2174c38", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/f50defbdaa4e667b69bb2aeaac1327feb2174c38", "committedDate": "2021-04-27T13:46:44Z", "message": "Update to weld 3.1.5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce91dabfc786b25a586f7a75d5e6fad7b0b2278", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/6ce91dabfc786b25a586f7a75d5e6fad7b0b2278", "committedDate": "2021-06-21T15:49:13Z", "message": "Update to weld 3.1.5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd93e7d7b5762f8e18318e6f07af1562e301fde8", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/bd93e7d7b5762f8e18318e6f07af1562e301fde8", "committedDate": "2021-04-27T15:37:06Z", "message": "Update weld 4.0.0 to 4.0.1"}, "afterCommit": {"oid": "9f35e1e559e45681d262b21ebac49e82824c6b07", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9f35e1e559e45681d262b21ebac49e82824c6b07", "committedDate": "2021-06-21T15:51:02Z", "message": "Update weld 4.0.0 to 4.0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "472683de1b2a115110461664369d2a9358f55198", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/472683de1b2a115110461664369d2a9358f55198", "committedDate": "2021-06-21T16:12:49Z", "message": "Update weld 4.0.0 to 4.0.1"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f35e1e559e45681d262b21ebac49e82824c6b07", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9f35e1e559e45681d262b21ebac49e82824c6b07", "committedDate": "2021-06-21T15:51:02Z", "message": "Update weld 4.0.0 to 4.0.1"}, "afterCommit": {"oid": "472683de1b2a115110461664369d2a9358f55198", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/472683de1b2a115110461664369d2a9358f55198", "committedDate": "2021-06-21T16:12:49Z", "message": "Update weld 4.0.0 to 4.0.1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg5NjQxOTUw", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-689641950", "createdAt": "2021-06-22T15:10:22Z", "commit": {"oid": "48acaef123d669cbe28446f8ca52c2e1460a79b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yMlQxNToxMDoyMlrOJx6gTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yMlQxNToxMDoyMlrOJx6gTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjMxODU0MQ==", "bodyText": "i don't think you want to export this package from here. Put the proxy class in it's own new package and export that from here and the 2.0 version", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r656318541", "createdAt": "2021-06-22T15:10:22Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.1.2.weld/bnd.bnd", "diffHunk": "@@ -19,7 +19,9 @@ Bundle-Description:CDI 1.2 Weld Integration, version ${bVersion}\n -dsannotations: com.ibm.ws.cdi.impl.DefaultSecurityService\n \n Export-Package: com.ibm.ws.cdi.executor, \\\n-                com.ibm.ws.cdi.utils\n+                com.ibm.ws.cdi.utils, \\\n+                com.ibm.ws.cdi.impl.weld, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48acaef123d669cbe28446f8ca52c2e1460a79b1"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg5NjQyNzE0", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-689642714", "createdAt": "2021-06-22T15:10:57Z", "commit": {"oid": "48acaef123d669cbe28446f8ca52c2e1460a79b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yMlQxNToxMDo1N1rOJx6ieA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yMlQxNToxMDo1N1rOJx6ieA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjMxOTA5Ng==", "bodyText": "don't use this same package name, use a new one", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r656319096", "createdAt": "2021-06-22T15:10:57Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.1.2.weld/src/com/ibm/ws/cdi/impl/weld/package-info.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ * IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+@org.osgi.annotation.versioning.Version(\"1.0\")\n+package com.ibm.ws.cdi.impl.weld;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48acaef123d669cbe28446f8ca52c2e1460a79b1"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48acaef123d669cbe28446f8ca52c2e1460a79b1", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/48acaef123d669cbe28446f8ca52c2e1460a79b1", "committedDate": "2021-06-22T14:10:08Z", "message": "cdi 2.0 compiles"}, "afterCommit": {"oid": "3abb04484337689e6149d74669399bf764d32d21", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3abb04484337689e6149d74669399bf764d32d21", "committedDate": "2021-06-23T08:45:34Z", "message": "cdi 2.0 compiles"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8472a6a1e019f3996c3c3b0f038354927dc4208", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c8472a6a1e019f3996c3c3b0f038354927dc4208", "committedDate": "2021-06-28T09:25:17Z", "message": "update ref"}, "afterCommit": {"oid": "87e23fcae4226a2222eaf6c6617c0b84da02406f", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/87e23fcae4226a2222eaf6c6617c0b84da02406f", "committedDate": "2021-06-28T14:01:08Z", "message": "update ref"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09521147990d9be819e4a021358791e3d77ebfea", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/09521147990d9be819e4a021358791e3d77ebfea", "committedDate": "2021-06-28T16:23:51Z", "message": "test passes"}, "afterCommit": {"oid": "9059ff19382cd4ab3c4922d9e24002836a1da1d9", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9059ff19382cd4ab3c4922d9e24002836a1da1d9", "committedDate": "2021-06-29T16:57:34Z", "message": "test passes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c38a957b8754c7cdbb5bf444dcfcaae15b6e1e5a", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c38a957b8754c7cdbb5bf444dcfcaae15b6e1e5a", "committedDate": "2021-07-08T08:53:55Z", "message": "export proxy"}, "afterCommit": {"oid": "8b861dd5f301ffee0229d96b2fbcaa1e075d3a96", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/8b861dd5f301ffee0229d96b2fbcaa1e075d3a96", "committedDate": "2021-07-08T16:43:09Z", "message": "export proxy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA2MDkxNDI1", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-706091425", "createdAt": "2021-07-14T10:09:14Z", "commit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDowOToxNFrOJ-dkIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDowOToxNFrOJ-dkIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ3NTg3Mw==", "bodyText": "don't forget to remove this", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r669475873", "createdAt": "2021-07-14T10:09:14Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.1.2.weld/src/com/ibm/ws/cdi/proxy/ProxyServicesImpl.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.cdi.proxy;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+import org.eclipse.osgi.container.ModuleLoader;\n+import org.eclipse.osgi.container.ModuleWiring;\n+import org.eclipse.osgi.util.ManifestElement;\n+import org.jboss.weld.serialization.spi.ProxyServices;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.wiring.BundleWiring;\n+\n+import com.ibm.ws.cdi.impl.weld.AbstractProxyServices;\n+\n+/**\n+ * This service is used to load proxy classes. We need a special classloader so that\n+ * we can load both weld classes and app classes.\n+ *\n+ *\n+ */\n+public class ProxyServicesImpl extends AbstractProxyServices implements ProxyServices {\n+\n+    public ProxyServicesImpl() {\n+        System.out.println(\"GREP 1.2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA2MDk1MzI4", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-706095328", "createdAt": "2021-07-14T10:13:45Z", "commit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDoxMzo0NlrOJ-dv-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDoxMzo0NlrOJ-dv-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ3ODkwNQ==", "bodyText": "was this section kept the same as before or re-copied from the 4.0.1 weld osgi bundle?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r669478905", "createdAt": "2021-07-14T10:13:46Z", "author": {"login": "tevans78"}, "path": "dev/io.openliberty.org.jboss.weld4/bnd.overrides", "diffHunk": "@@ -8,16 +8,16 @@ Build-Identifier: SNAPSHOT-${now}\n Bundle-Version: ${bFullVersion}.${if;${driver;gradle};${version.qualifier};eclipse}\n \n Export-Package: \\\n- org.jboss.weldx.transaction;version=\"4.0.0\",\\\n- org.jboss.weld.annotated.enhanced;version=\"4.0.0\",\\\n- org.jboss.weld.contexts;version=\"4.0.0\",\\\n- org.jboss.weld.executor;version=\"4.0.0\",\\\n- org.jboss.weld.metadata;version=\"4.0.0\",\\\n- org.jboss.weld.resolution;version=\"4.0.0\",\\\n- org.jboss.weld.resources;version=\"4.0.0\",\\\n- org.jboss.weld.util.collections;version=\"4.0.0\",\\\n- org.jboss.weld.bean.proxy.util;version=\"4.0.0\",\\\n- org.jboss.weld.bootstrap.api;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.spi,org.jboss.weld.manager.api\",org.jboss.weld.bootstrap.api.helpers;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.manager.api\",org.jboss.weld.construction.api;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi\",org.jboss.weld.context.api;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi\",org.jboss.weld.ejb.api;version=\"4.0.0\",org.jboss.weld.manager.api;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.construction.api,org.jboss.weld.context,org.jboss.weld.ejb.spi,org.jboss.weld.serialization.spi\",org.jboss.weld.servlet.api;version=\"4.0.0\";uses:=\"jakarta.servlet,jakarta.servlet.http\",org.jboss.weld.servlet.api.helpers;version=\"4.0.0\";uses:=\"jakarta.servlet,jakarta.servlet.http,org.jboss.weld.servlet.api\",org.jboss.weld.bootstrap.spi;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.ejb.spi\",org.jboss.weld.bootstrap.spi.helpers;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.ejb.spi\",org.jboss.weld.configuration.spi;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.api\",org.jboss.weld.configuration.spi.helpers;version=\"4.0.0\";uses:=\"org.jboss.weld.configuration.spi\",org.jboss.weld.ejb.spi;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.ejb.api\",org.jboss.weld.ejb.spi.helpers;version=\"4.0.0\";uses:=\"org.jboss.weld.ejb.api,org.jboss.weld.ejb.spi\",org.jboss.weld.injection.spi;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject.spi,jakarta.persistence,org.jboss.weld.bootstrap.api\",org.jboss.weld.injection.spi.helpers;version=\"4.0.0\";uses:=\"jakarta.annotation,jakarta.enterprise.inject.spi,jakarta.persistence,javax.naming,org.jboss.weld.bootstrap.api,org.jboss.weld.injection.spi\",org.jboss.weld.interceptor.spi.metadata;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,org.jboss.weld.interceptor.proxy,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager\",org.jboss.weld.interceptor.spi.model;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.interceptor.spi.metadata\",org.jboss.weld.resources.spi;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.api\",org.jboss.weld.resources.spi.helpers;version=\"4.0.0\";uses:=\"org.jboss.weld.resources.spi\",org.jboss.weld.security.spi;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.api\",org.jboss.weld.serialization.spi;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.serialization.spi.helpers\",org.jboss.weld.serialization.spi.helpers;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,org.jboss.weld.context.api\",org.jboss.weld.servlet.spi;version=\"4.0.0\";uses:=\"jakarta.servlet.http,org.jboss.weld.bootstrap.api\",org.jboss.weld.servlet.spi.helpers;version=\"4.0.0\";uses:=\"jakarta.servlet.http,org.jboss.weld.servlet.spi\",org.jboss.weld.transaction.spi;version=\"4.0.0\";uses:=\"jakarta.transaction,org.jboss.weld.bootstrap.api\",org.jboss.weld.bootstrap.event;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.inject.spi.configurator,jakarta.enterprise.util,jakarta.interceptor\",org.jboss.weld.context;version=\"4.0.0\";uses:=\"jakarta.enterprise.context,jakarta.enterprise.context.spi,org.jboss.weld.context.api\",org.jboss.weld.context.activator;version=\"4.0.0\";uses:=\"jakarta.enterprise.util,jakarta.interceptor\",org.jboss.weld.context.bound;version=\"4.0.0\";uses:=\"jakarta.enterprise.util,jakarta.inject,org.jboss.weld.context\",org.jboss.weld.context.ejb;version=\"4.0.0\";uses:=\"jakarta.enterprise.util,jakarta.inject,jakarta.interceptor,org.jboss.weld.context\",org.jboss.weld.context.http;version=\"4.0.0\";uses:=\"jakarta.enterprise.util,jakarta.inject,jakarta.servlet.http,org.jboss.weld.context\",org.jboss.weld.context.unbound;version=\"4.0.0\";uses:=\"jakarta.enterprise.util,jakarta.inject\",org.jboss.weld.events;version=\"4.0.0\";uses:=\"jakarta.enterprise.event,jakarta.enterprise.util\",org.jboss.weld.inject;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util\",org.jboss.weld.interceptor;version=\"4.0.0\";uses:=\"jakarta.interceptor\",org.jboss.weld.proxy;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject.spi\",org.jboss.weld.probe;version=\"4.0.0\";uses:=\"jakarta.annotation,jakarta.enterprise.context,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.interceptor,jakarta.servlet,javax.management,org.jboss.logging,org.jboss.weld.exceptions\",org.jboss.weld.module;version=\"4.0.0\";uses:=\"jakarta.el,jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,org.jboss.weld.bean,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.ejb.spi,org.jboss.weld.event,org.jboss.weld.manager\",org.jboss.weld.module.ejb;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.interceptor,org.jboss.weld.bean,org.jboss.weld.bean.proxy,org.jboss.weld.context.ejb,org.jboss.weld.manager,org.jboss.weld.module\",org.jboss.weld.module.ejb.context;version=\"4.0.0\";uses:=\"jakarta.interceptor,org.jboss.weld.context.ejb\",org.jboss.weld.module.ejb.context.beanstore;version=\"4.0.0\";uses:=\"jakarta.interceptor\",org.jboss.weld.module.jsf;version=\"4.0.0\";uses:=\"jakarta.faces.application,jakarta.faces.context,org.jboss.weld.bootstrap.api,org.jboss.weld.module,org.jboss.weld.resources.spi,org.jboss.weld.util\",org.jboss.weld.module.jsf.servlet;version=\"4.0.0\";uses:=\"jakarta.servlet\",org.jboss.weld.module.jta;version=\"4.0.0\";uses:=\"org.jboss.weld.module\",org.jboss.weld.module.web;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.servlet,jakarta.servlet.http,org.jboss.weld.bean.builtin,org.jboss.weld.manager,org.jboss.weld.module\",org.jboss.weld.module.web.context.beanstore.http;version=\"4.0.0\";uses:=\"jakarta.servlet.http,org.jboss.weld.bootstrap.api,org.jboss.weld.context.api,org.jboss.weld.serialization.spi\",org.jboss.weld.module.web.context.http;version=\"4.0.0\";uses:=\"jakarta.enterprise.context,jakarta.servlet.http,org.jboss.weld.bootstrap.api,org.jboss.weld.context.http\",org.jboss.weld.module.web.el;version=\"4.0.0\";uses:=\"jakarta.el,org.jboss.weld.manager,org.jboss.weld.module.web.util.el\",org.jboss.weld.module.web.logging;version=\"4.0.0\";uses:=\"org.jboss.logging,org.jboss.weld.exceptions,org.jboss.weld.logging,org.jboss.weld.module.web.servlet\",org.jboss.weld.module.web.servlet;version=\"4.0.0\";uses:=\"jakarta.servlet,jakarta.servlet.http,org.jboss.weld.bootstrap.api,org.jboss.weld.context.http,org.jboss.weld.manager,org.jboss.weld.resources.spi,org.jboss.weld.servlet.api.helpers,org.jboss.weld.servlet.spi,org.jboss.weld.util\",org.jboss.weld.module.web.util.el;version=\"4.0.0\";uses:=\"jakarta.el\",org.jboss.weld.module.web.util.servlet;version=\"4.0.0\";uses:=\"jakarta.servlet,org.jboss.weld.manager,org.jboss.weld.servlet.spi\",org.jboss.weld;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.inject,org.jboss.weld.manager\",org.jboss.weld.bean;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.interceptor,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.ejb.spi,org.jboss.weld.interceptor.spi.metadata,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager,org.jboss.weld.serialization.spi\",org.jboss.weld.bean.builtin;version=\"4.0.0\";uses:=\"jakarta.enterprise.context,jakarta.enterprise.context.control,jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util,org.jboss.weld.bean,org.jboss.weld.bean.proxy,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.construction.api,org.jboss.weld.ejb.spi,org.jboss.weld.inject,org.jboss.weld.injection,org.jboss.weld.manager,org.jboss.weld.manager.api,org.jboss.weld.serialization.spi,org.jboss.weld.util\",org.jboss.weld.bean.proxy;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,org.jboss.classfilewriter,org.jboss.classfilewriter.code,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.api.helpers,org.jboss.weld.config,org.jboss.weld.exceptions,org.jboss.weld.interceptor.proxy,org.jboss.weld.interceptor.spi.model,org.jboss.weld.interceptor.util.proxy,org.jboss.weld.manager,org.jboss.weld.proxy,org.jboss.weld.serialization.spi,org.jboss.weld.serialization.spi.helpers,org.jboss.weld.util\",org.jboss.weld.bootstrap;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,org.jboss.weld.bean,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.api.helpers,org.jboss.weld.bootstrap.spi,org.jboss.weld.event,org.jboss.weld.exceptions,org.jboss.weld.logging,org.jboss.weld.manager,org.jboss.weld.manager.api,org.jboss.weld.module,org.jboss.weld.resources.spi\",org.jboss.weld.config;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi\",org.jboss.weld.event;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject.spi,jakarta.enterprise.util,org.jboss.weld.bean,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap.api,org.jboss.weld.events,org.jboss.weld.injection,org.jboss.weld.manager,org.jboss.weld.module,org.jboss.weld.util\",org.jboss.weld.exceptions;version=\"4.0.0\";uses:=\"jakarta.enterprise.inject,jakarta.enterprise.inject.spi\",org.jboss.weld.injection;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.enterprise.inject.spi.configurator,org.jboss.weld.bootstrap.api,org.jboss.weld.injection.spi,org.jboss.weld.manager\",org.jboss.weld.interceptor.proxy;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.interceptor,org.jboss.weld.bean.proxy,org.jboss.weld.interceptor,org.jboss.weld.interceptor.spi.metadata,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager,org.jboss.weld.util\",org.jboss.weld.interceptor.util.proxy;version=\"4.0.0\";uses:=\"org.jboss.weld.bean.proxy\",org.jboss.weld.logging;version=\"4.0.0\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,javax.naming,org.jboss.logging,org.jboss.weld.exceptions\",org.jboss.weld.manager;version=\"4.0.0\";uses:=\"jakarta.el,jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.inject.spi.configurator,org.jboss.weld.bean,org.jboss.weld.bean.proxy,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.construction.api,org.jboss.weld.ejb.spi,org.jboss.weld.event,org.jboss.weld.events,org.jboss.weld.inject,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager.api,org.jboss.weld.serialization.spi\",org.jboss.weld.security;version=\"4.0.0\";uses:=\"org.jboss.weld.security.spi\",org.jboss.weld.util;version=\"4.0.0\";uses:=\"jakarta.el,jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util,jakarta.interceptor,org.jboss.weld.bean,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.exceptions,org.jboss.weld.inject,org.jboss.weld.injection,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager,org.jboss.weld.resources.spi,org.jboss.weld.serialization.spi\",org.jboss.weld.xml;version=\"4.0.0\";uses:=\"org.jboss.weld.bootstrap.spi,org.xml.sax,org.xml.sax.helpers\"\n+ org.jboss.weldx.transaction;version=\"4.0.1\",\\\n+ org.jboss.weld.annotated.enhanced;version=\"4.0.1\",\\\n+ org.jboss.weld.contexts;version=\"4.0.1\",\\\n+ org.jboss.weld.executor;version=\"4.0.1\",\\\n+ org.jboss.weld.metadata;version=\"4.0.1\",\\\n+ org.jboss.weld.resolution;version=\"4.0.1\",\\\n+ org.jboss.weld.resources;version=\"4.0.1\",\\\n+ org.jboss.weld.util.collections;version=\"4.0.1\",\\\n+ org.jboss.weld.bean.proxy.util;version=\"4.0.1\",\\\n+ org.jboss.weld.proxy;version=\"4.0.1\",\\ org.jboss.weld.bootstrap.api;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.spi,org.jboss.weld.manager.api\",org.jboss.weld.bootstrap.api.helpers;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.manager.api\",org.jboss.weld.construction.api;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi\",org.jboss.weld.context.api;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi\",org.jboss.weld.ejb.api;version=\"4.0.1\",org.jboss.weld.manager.api;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.construction.api,org.jboss.weld.context,org.jboss.weld.ejb.spi,org.jboss.weld.serialization.spi\",org.jboss.weld.servlet.api;version=\"4.0.1\";uses:=\"jakarta.servlet,jakarta.servlet.http\",org.jboss.weld.servlet.api.helpers;version=\"4.0.1\";uses:=\"jakarta.servlet,jakarta.servlet.http,org.jboss.weld.servlet.api\",org.jboss.weld.bootstrap.spi;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.ejb.spi\",org.jboss.weld.bootstrap.spi.helpers;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.ejb.spi\",org.jboss.weld.configuration.spi;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.api\",org.jboss.weld.configuration.spi.helpers;version=\"4.0.1\";uses:=\"org.jboss.weld.configuration.spi\",org.jboss.weld.ejb.spi;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.ejb.api\",org.jboss.weld.ejb.spi.helpers;version=\"4.0.1\";uses:=\"org.jboss.weld.ejb.api,org.jboss.weld.ejb.spi\",org.jboss.weld.injection.spi;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject.spi,jakarta.persistence,org.jboss.weld.bootstrap.api\",org.jboss.weld.injection.spi.helpers;version=\"4.0.1\";uses:=\"jakarta.annotation,jakarta.enterprise.inject.spi,jakarta.persistence,javax.naming,org.jboss.weld.bootstrap.api,org.jboss.weld.injection.spi\",org.jboss.weld.interceptor.spi.metadata;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,org.jboss.weld.interceptor.proxy,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager\",org.jboss.weld.interceptor.spi.model;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject.spi,org.jboss.weld.interceptor.spi.metadata\",org.jboss.weld.resources.spi;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.api\",org.jboss.weld.resources.spi.helpers;version=\"4.0.1\";uses:=\"org.jboss.weld.resources.spi\",org.jboss.weld.security.spi;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.api\",org.jboss.weld.serialization.spi;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,org.jboss.weld.bootstrap.api,org.jboss.weld.serialization.spi.helpers\",org.jboss.weld.serialization.spi.helpers;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,org.jboss.weld.context.api\",org.jboss.weld.servlet.spi;version=\"4.0.1\";uses:=\"jakarta.servlet.http,org.jboss.weld.bootstrap.api\",org.jboss.weld.servlet.spi.helpers;version=\"4.0.1\";uses:=\"jakarta.servlet.http,org.jboss.weld.servlet.spi\",org.jboss.weld.transaction.spi;version=\"4.0.1\";uses:=\"jakarta.transaction,org.jboss.weld.bootstrap.api\",org.jboss.weld.bootstrap.event;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.inject.spi.configurator,jakarta.enterprise.util,jakarta.interceptor\",org.jboss.weld.context;version=\"4.0.1\";uses:=\"jakarta.enterprise.context,jakarta.enterprise.context.spi,org.jboss.weld.context.api\",org.jboss.weld.context.activator;version=\"4.0.1\";uses:=\"jakarta.enterprise.util,jakarta.interceptor\",org.jboss.weld.context.bound;version=\"4.0.1\";uses:=\"jakarta.enterprise.util,jakarta.inject,org.jboss.weld.context\",org.jboss.weld.context.ejb;version=\"4.0.1\";uses:=\"jakarta.enterprise.util,jakarta.inject,jakarta.interceptor,org.jboss.weld.context\",org.jboss.weld.context.http;version=\"4.0.1\";uses:=\"jakarta.enterprise.util,jakarta.inject,jakarta.servlet.http,org.jboss.weld.context\",org.jboss.weld.context.unbound;version=\"4.0.1\";uses:=\"jakarta.enterprise.util,jakarta.inject\",org.jboss.weld.events;version=\"4.0.1\";uses:=\"jakarta.enterprise.event,jakarta.enterprise.util\",org.jboss.weld.inject;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util\",org.jboss.weld.interceptor;version=\"4.0.1\";uses:=\"jakarta.interceptor\",org.jboss.weld.proxy;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject.spi\",org.jboss.weld.probe;version=\"4.0.1\";uses:=\"jakarta.annotation,jakarta.enterprise.context,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.interceptor,jakarta.servlet,javax.management,org.jboss.logging,org.jboss.weld.exceptions\",org.jboss.weld.module;version=\"4.0.1\";uses:=\"jakarta.el,jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,org.jboss.weld.bean,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.ejb.spi,org.jboss.weld.event,org.jboss.weld.manager\",org.jboss.weld.module.ejb;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.interceptor,org.jboss.weld.bean,org.jboss.weld.bean.proxy,org.jboss.weld.context.ejb,org.jboss.weld.manager,org.jboss.weld.module\",org.jboss.weld.module.ejb.context;version=\"4.0.1\";uses:=\"jakarta.interceptor,org.jboss.weld.context.ejb\",org.jboss.weld.module.ejb.context.beanstore;version=\"4.0.1\";uses:=\"jakarta.interceptor\",org.jboss.weld.module.jsf;version=\"4.0.1\";uses:=\"jakarta.faces.application,jakarta.faces.context,org.jboss.weld.bootstrap.api,org.jboss.weld.module,org.jboss.weld.resources.spi,org.jboss.weld.util\",org.jboss.weld.module.jsf.servlet;version=\"4.0.1\";uses:=\"jakarta.servlet\",org.jboss.weld.module.jta;version=\"4.0.1\";uses:=\"org.jboss.weld.module\",org.jboss.weld.module.web;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.servlet,jakarta.servlet.http,org.jboss.weld.bean.builtin,org.jboss.weld.manager,org.jboss.weld.module\",org.jboss.weld.module.web.context.beanstore.http;version=\"4.0.1\";uses:=\"jakarta.servlet.http,org.jboss.weld.bootstrap.api,org.jboss.weld.context.api,org.jboss.weld.serialization.spi\",org.jboss.weld.module.web.context.http;version=\"4.0.1\";uses:=\"jakarta.enterprise.context,jakarta.servlet.http,org.jboss.weld.bootstrap.api,org.jboss.weld.context.http\",org.jboss.weld.module.web.el;version=\"4.0.1\";uses:=\"jakarta.el,org.jboss.weld.manager,org.jboss.weld.module.web.util.el\",org.jboss.weld.module.web.logging;version=\"4.0.1\";uses:=\"org.jboss.logging,org.jboss.weld.exceptions,org.jboss.weld.logging,org.jboss.weld.module.web.servlet\",org.jboss.weld.module.web.servlet;version=\"4.0.1\";uses:=\"jakarta.servlet,jakarta.servlet.http,org.jboss.weld.bootstrap.api,org.jboss.weld.context.http,org.jboss.weld.manager,org.jboss.weld.resources.spi,org.jboss.weld.servlet.api.helpers,org.jboss.weld.servlet.spi,org.jboss.weld.util\",org.jboss.weld.module.web.util.el;version=\"4.0.1\";uses:=\"jakarta.el\",org.jboss.weld.module.web.util.servlet;version=\"4.0.1\";uses:=\"jakarta.servlet,org.jboss.weld.manager,org.jboss.weld.servlet.spi\",org.jboss.weld;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.inject,org.jboss.weld.manager\",org.jboss.weld.bean;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.interceptor,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.ejb.spi,org.jboss.weld.interceptor.spi.metadata,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager,org.jboss.weld.serialization.spi\",org.jboss.weld.bean.builtin;version=\"4.0.1\";uses:=\"jakarta.enterprise.context,jakarta.enterprise.context.control,jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util,org.jboss.weld.bean,org.jboss.weld.bean.proxy,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.construction.api,org.jboss.weld.ejb.spi,org.jboss.weld.inject,org.jboss.weld.injection,org.jboss.weld.manager,org.jboss.weld.manager.api,org.jboss.weld.serialization.spi,org.jboss.weld.util\",org.jboss.weld.bean.proxy;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,org.jboss.classfilewriter,org.jboss.classfilewriter.code,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.api.helpers,org.jboss.weld.config,org.jboss.weld.exceptions,org.jboss.weld.interceptor.proxy,org.jboss.weld.interceptor.spi.model,org.jboss.weld.interceptor.util.proxy,org.jboss.weld.manager,org.jboss.weld.proxy,org.jboss.weld.serialization.spi,org.jboss.weld.serialization.spi.helpers,org.jboss.weld.util\",org.jboss.weld.bootstrap;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,org.jboss.weld.bean,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.api.helpers,org.jboss.weld.bootstrap.spi,org.jboss.weld.event,org.jboss.weld.exceptions,org.jboss.weld.logging,org.jboss.weld.manager,org.jboss.weld.manager.api,org.jboss.weld.module,org.jboss.weld.resources.spi\",org.jboss.weld.config;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi\",org.jboss.weld.event;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject.spi,jakarta.enterprise.util,org.jboss.weld.bean,org.jboss.weld.bean.builtin,org.jboss.weld.bootstrap.api,org.jboss.weld.events,org.jboss.weld.injection,org.jboss.weld.manager,org.jboss.weld.module,org.jboss.weld.util\",org.jboss.weld.exceptions;version=\"4.0.1\";uses:=\"jakarta.enterprise.inject,jakarta.enterprise.inject.spi\",org.jboss.weld.injection;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.enterprise.inject.spi.configurator,org.jboss.weld.bootstrap.api,org.jboss.weld.injection.spi,org.jboss.weld.manager\",org.jboss.weld.interceptor.proxy;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,jakarta.interceptor,org.jboss.weld.bean.proxy,org.jboss.weld.interceptor,org.jboss.weld.interceptor.spi.metadata,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager,org.jboss.weld.util\",org.jboss.weld.interceptor.util.proxy;version=\"4.0.1\";uses:=\"org.jboss.weld.bean.proxy\",org.jboss.weld.logging;version=\"4.0.1\";uses:=\"jakarta.enterprise.context.spi,jakarta.enterprise.inject.spi,javax.naming,org.jboss.logging,org.jboss.weld.exceptions\",org.jboss.weld.manager;version=\"4.0.1\";uses:=\"jakarta.el,jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.inject.spi.configurator,org.jboss.weld.bean,org.jboss.weld.bean.proxy,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.construction.api,org.jboss.weld.ejb.spi,org.jboss.weld.event,org.jboss.weld.events,org.jboss.weld.inject,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager.api,org.jboss.weld.serialization.spi\",org.jboss.weld.security;version=\"4.0.1\";uses:=\"org.jboss.weld.security.spi\",org.jboss.weld.util;version=\"4.0.1\";uses:=\"jakarta.el,jakarta.enterprise.context.spi,jakarta.enterprise.event,jakarta.enterprise.inject,jakarta.enterprise.inject.spi,jakarta.enterprise.util,jakarta.interceptor,org.jboss.weld.bean,org.jboss.weld.bootstrap,org.jboss.weld.bootstrap.api,org.jboss.weld.bootstrap.spi,org.jboss.weld.exceptions,org.jboss.weld.inject,org.jboss.weld.injection,org.jboss.weld.interceptor.spi.model,org.jboss.weld.manager,org.jboss.weld.resources.spi,org.jboss.weld.serialization.spi\",org.jboss.weld.xml;version=\"4.0.1\";uses:=\"org.jboss.weld.bootstrap.spi,org.xml.sax,org.xml.sax.helpers\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA2MDk3NzU5", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-706097759", "createdAt": "2021-07-14T10:16:29Z", "commit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDoxNjoyOVrOJ-d3pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDoxNjoyOVrOJ-d3pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ4MDg3MQ==", "bodyText": "put some comments here... and actually I don't see a reason why this code wouldn't be kept the same for the older version too?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r669480871", "createdAt": "2021-07-14T10:16:29Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.2.0.weld/src/com/ibm/ws/cdi/impl/weld/AbstractProxyServices.java", "diffHunk": "@@ -117,6 +120,8 @@ public ClassLoader run() {\n                 if (cl instanceof BundleReference) {\n                     Bundle b = ((BundleReference) cl).getBundle();\n                     addWeldDynamicImports(b, WELD_PACKAGES);\n+                } else if (cl == null) {\n+                    return CLASS_LOADER_FOR_SYSTEM_CLASSES;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA2MDk4Mzg3", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-706098387", "createdAt": "2021-07-14T10:17:12Z", "commit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDoxNzoxMlrOJ-d5jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNFQxMDoxNzoxMlrOJ-d5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ4MTM1OA==", "bodyText": "definitely put comments here ... I don't like a Thread.sleep really", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r669481358", "createdAt": "2021-07-14T10:17:12Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.2.0.weld/src/com/ibm/ws/cdi/impl/weld/AbstractProxyServices.java", "diffHunk": "@@ -155,6 +160,19 @@ public ClassLoader run() {\n                 }\n                 Class<?> clazz = (Class) method.invoke(loader, args);\n                 return clazz;\n+\n+             } catch (LinkageError e) {\n+                int tries = 10;\n+                while (tries > 0) {\n+                    Class<?> clazz = loadClass\u200b(className, loader);\n+                    if (clazz != null) {\n+                        return clazz;\n+                    }\n+                    Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3ad11b01a0458f7478ebb3a6527e617501559c3"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMTgzMjQ2", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-723183246", "createdAt": "2021-08-05T10:17:53Z", "commit": {"oid": "fa337b07cda6103e23971d42ea778991917cd42f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wNVQxMDoxNzo1M1rOKLqxMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wNVQxMDoxNzo1M1rOKLqxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzMyMzY5OA==", "bodyText": "indentation!", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r683323698", "createdAt": "2021-08-05T10:17:53Z", "author": {"login": "tevans78"}, "path": "dev/com.ibm.ws.cdi.2.0.weld/src/com/ibm/ws/cdi/impl/weld/AbstractProxyServices.java", "diffHunk": "@@ -0,0 +1,232 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2021 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.cdi.impl.weld;\n+\n+import java.lang.reflect.Method;\n+import java.net.URLClassLoader;\n+import java.net.URL;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n+import java.security.ProtectionDomain;\n+import java.util.WeakHashMap;\n+\n+import org.eclipse.osgi.util.ManifestElement;\n+import org.jboss.weld.serialization.spi.ProxyServices;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.BundleReference;\n+import org.osgi.framework.Constants;\n+\n+import com.ibm.ws.cdi.CDIRuntimeException;\n+import com.ibm.ws.ffdc.annotation.FFDCIgnore;\n+\n+/**\n+ * This service is used to load proxy classes. We need a special classloader so that\n+ * we can load both weld classes and app classes.\n+ *\n+ *\n+ */\n+public abstract class AbstractProxyServices implements ProxyServices {\n+\n+    private static final ManifestElement[] WELD_PACKAGES;\n+    private static final ClassLoader CLASS_LOADER_FOR_SYSTEM_CLASSES = org.jboss.weld.proxy.WeldConstruct.class.getClassLoader(); //I'm using this classloader because we'll need the weld classes to proxy anything.\n+\n+    private static enum ClassLoaderMethods {\n+        ;//No enum instances\n+\n+        private static final Method defineClass1, defineClass2, getClassLoadingLock;\n+\n+        static {\n+            try {\n+                Method[] methods = AccessController.doPrivileged(new PrivilegedExceptionAction<Method[]>() {\n+                    public Method[] run() throws Exception {\n+                        Class<?> cl = Class.forName(\"java.lang.ClassLoader\");\n+                        final String name = \"defineClass\";\n+                        final String getClassLoadingLockName = \"getClassLoadingLock\";\n+\n+                        Method[] methods = new Method[3];\n+\n+                        methods[0] = cl.getDeclaredMethod(name, String.class, byte[].class, int.class, int.class);\n+                        methods[1] = cl.getDeclaredMethod(name, String.class, byte[].class, int.class, int.class, ProtectionDomain.class);\n+                        methods[2] = cl.getDeclaredMethod(getClassLoadingLockName, String.class);\n+                        methods[0].setAccessible(true);\n+                        methods[1].setAccessible(true);\n+                        methods[2].setAccessible(true);\n+                        return methods;\n+                    }\n+                });\n+                defineClass1 = methods[0];\n+                defineClass2 = methods[1];\n+                getClassLoadingLock = methods[2];\n+            } catch (PrivilegedActionException pae) {\n+                throw new RuntimeException(\"cannot initialize ClassPool\", pae.getException());\n+            }\n+        }\n+    }\n+\n+    static {\n+        try {\n+            WELD_PACKAGES = ManifestElement.parseHeader(Constants.DYNAMICIMPORT_PACKAGE, \"org.jboss.weld.*\");\n+        } catch (BundleException e) {\n+            throw new CDIRuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void cleanup() {\n+        // This implementation requires no cleanup\n+    }\n+\n+    @Override\n+    public ClassLoader getClassLoader(final Class<?> proxiedBeanType) {\n+        return AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() {\n+            @Override\n+            public ClassLoader run() {\n+                // Must always use the bean type's classloader;\n+                // Otherwise package private access does not work.\n+                // Unfortunately this causes us issues for types from OSGi bundles.\n+\n+                // It would be nice if we could have a marking header that allowed for\n+                // bundles to declare they provide CDI bean types, but this becomes\n+                // problematic for interface types that beans may be using for\n+                // injection types because the exporter may have no idea their types\n+                // are going to be used for CDI.  Therefore we have no way of knowing\n+                // ahead of time what bundles are providing CDI bean types.\n+\n+                // This makes it impossible to use weaving hooks to add new dynamic\n+                // import packages.  The weaving hook approach requires\n+                // a weaving hook registration that knows ahead of time what\n+                // bundles provide CDI bean types and then on first class define using\n+                // that bundle's class loader the weaving hook would add the necessary\n+                // weld packages as dynamic imports.  We cannot and will\n+                // not be able to know exactly which bundles are providing bean\n+                // types until this getClassLoader method is called.  But by the time\n+                // this method is called it is too late for a weaving hook to do\n+                // anything because weld is going to use the returned class loader\n+                // immediately to reflectively define a proxy class.  The class loader\n+                // MUST have visibility to the weld packages before this reflective\n+                // call to defineClass.\n+                ClassLoader cl = proxiedBeanType.getClassLoader();\n+                if (cl instanceof BundleReference) {\n+                    Bundle b = ((BundleReference) cl).getBundle();\n+                    addWeldDynamicImports(b, WELD_PACKAGES);\n+                } else if (cl == null) {\n+                    return CLASS_LOADER_FOR_SYSTEM_CLASSES;\n+                }\n+                return cl;\n+            }\n+        });\n+    }\n+\n+    @Override\n+    @FFDCIgnore(ClassNotFoundException.class)\n+    public Class<?> defineClass\u200b(Class<?> originalClass, String className, byte[] classBytes, int off, int len, ProtectionDomain protectionDomain) throws ClassFormatError {\n+\n+        ClassLoader loader = loaderMap.get(originalClass);\n+        Object classLoaderLock = null;\n+        try {\n+            classLoaderLock = ClassLoaderMethods.getClassLoadingLock.invoke(loader, className);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        synchronized (classLoaderLock) {\n+            try {\n+                //First check we haven't defined this in another thread.\n+                return loadClass\u200b(className, loader);\n+            } catch (ClassNotFoundException e) {\n+                //Do nothing, move on to defining the class. \n+            }\n+try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa337b07cda6103e23971d42ea778991917cd42f"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9c80b1fbde990fa043d713c4158b2506e9815d", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5c9c80b1fbde990fa043d713c4158b2506e9815d", "committedDate": "2021-08-05T10:40:36Z", "message": "Implement SPI method for weld to define proxy classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd40181a5a1cd1a61cd09b21cc0296799268126", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5cd40181a5a1cd1a61cd09b21cc0296799268126", "committedDate": "2021-08-05T10:40:53Z", "message": "add transform rules"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa337b07cda6103e23971d42ea778991917cd42f", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fa337b07cda6103e23971d42ea778991917cd42f", "committedDate": "2021-07-14T15:47:33Z", "message": "add transform rules"}, "afterCommit": {"oid": "5cd40181a5a1cd1a61cd09b21cc0296799268126", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/5cd40181a5a1cd1a61cd09b21cc0296799268126", "committedDate": "2021-08-05T10:40:53Z", "message": "add transform rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea6e06d0c7afa3a4004e8ad77850817671cc9ed", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/cea6e06d0c7afa3a4004e8ad77850817671cc9ed", "committedDate": "2021-08-05T16:44:53Z", "message": "test without linkage catch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04c4b41055f823354ad126e42f7216eb01ac835a", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/04c4b41055f823354ad126e42f7216eb01ac835a", "committedDate": "2021-08-09T09:53:08Z", "message": "test without exporting weld"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MjI3Mzc1", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-725227375", "createdAt": "2021-08-09T10:25:13Z", "commit": {"oid": "04c4b41055f823354ad126e42f7216eb01ac835a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wOVQxMDoyNToxM1rOKNVxWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wOVQxMDoyNToxM1rOKNVxWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTA3NjgyNA==", "bodyText": "remove commented out code.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r685076824", "createdAt": "2021-08-09T10:25:13Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.cdi.2.0.weld/src/com/ibm/ws/cdi/impl/weld/AbstractProxyServices.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2021 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.cdi.impl.weld;\n+\n+import java.lang.reflect.Method;\n+import java.net.URLClassLoader;\n+import java.net.URL;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n+import java.security.ProtectionDomain;\n+import java.util.WeakHashMap;\n+\n+import org.eclipse.osgi.util.ManifestElement;\n+import org.jboss.weld.serialization.spi.ProxyServices;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.BundleReference;\n+import org.osgi.framework.Constants;\n+\n+import com.ibm.ws.cdi.CDIRuntimeException;\n+import com.ibm.ws.ffdc.annotation.FFDCIgnore;\n+\n+/**\n+ * This service is used to load proxy classes. We need a special classloader so that\n+ * we can load both weld classes and app classes.\n+ *\n+ *\n+ */\n+public abstract class AbstractProxyServices implements ProxyServices {\n+\n+\tprivate static final ManifestElement[] WELD_PACKAGES;\n+\tprivate static final ClassLoader CLASS_LOADER_FOR_SYSTEM_CLASSES = org.jboss.weld.proxy.WeldConstruct.class.getClassLoader(); //I'm using this classloader because we'll need the weld classes to proxy anything.\n+\n+\tprivate static enum ClassLoaderMethods {\n+\t\t;//No enum instances\n+\n+\t\tprivate static final Method defineClass1, defineClass2, getClassLoadingLock;\n+\n+\t\tstatic {\n+\t\t\ttry {\n+\t\t\t\tMethod[] methods = AccessController.doPrivileged(new PrivilegedExceptionAction<Method[]>() {\n+\t\t\t\t\tpublic Method[] run() throws Exception {\n+\t\t\t\t\t\tClass<?> cl = Class.forName(\"java.lang.ClassLoader\");\n+\t\t\t\t\t\tfinal String name = \"defineClass\";\n+\t\t\t\t\t\tfinal String getClassLoadingLockName = \"getClassLoadingLock\";\n+\n+\t\t\t\t\t\tMethod[] methods = new Method[3];\n+\n+\t\t\t\t\t\tmethods[0] = cl.getDeclaredMethod(name, String.class, byte[].class, int.class, int.class);\n+\t\t\t\t\t\tmethods[1] = cl.getDeclaredMethod(name, String.class, byte[].class, int.class, int.class, ProtectionDomain.class);\n+\t\t\t\t\t\tmethods[2] = cl.getDeclaredMethod(getClassLoadingLockName, String.class);\n+\t\t\t\t\t\tmethods[0].setAccessible(true);\n+\t\t\t\t\t\tmethods[1].setAccessible(true);\n+\t\t\t\t\t\tmethods[2].setAccessible(true);\n+\t\t\t\t\t\treturn methods;\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tdefineClass1 = methods[0];\n+\t\t\t\tdefineClass2 = methods[1];\n+\t\t\t\tgetClassLoadingLock = methods[2];\n+\t\t\t} catch (PrivilegedActionException pae) {\n+\t\t\t\tthrow new RuntimeException(\"cannot initialize ClassPool\", pae.getException());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tWELD_PACKAGES = ManifestElement.parseHeader(Constants.DYNAMICIMPORT_PACKAGE, \"org.jboss.weld.*\");\n+\t\t} catch (BundleException e) {\n+\t\t\tthrow new CDIRuntimeException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void cleanup() {\n+\t\t// This implementation requires no cleanup\n+\t}\n+\n+\t@Override\n+\tpublic ClassLoader getClassLoader(final Class<?> proxiedBeanType) {\n+\t\treturn AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() {\n+\t\t\t@Override\n+\t\t\tpublic ClassLoader run() {\n+\t\t\t\t// Must always use the bean type's classloader;\n+\t\t\t\t// Otherwise package private access does not work.\n+\t\t\t\t// Unfortunately this causes us issues for types from OSGi bundles.\n+\n+\t\t\t\t// It would be nice if we could have a marking header that allowed for\n+\t\t\t\t// bundles to declare they provide CDI bean types, but this becomes\n+\t\t\t\t// problematic for interface types that beans may be using for\n+\t\t\t\t// injection types because the exporter may have no idea their types\n+\t\t\t\t// are going to be used for CDI.  Therefore we have no way of knowing\n+\t\t\t\t// ahead of time what bundles are providing CDI bean types.\n+\n+\t\t\t\t// This makes it impossible to use weaving hooks to add new dynamic\n+\t\t\t\t// import packages.  The weaving hook approach requires\n+\t\t\t\t// a weaving hook registration that knows ahead of time what\n+\t\t\t\t// bundles provide CDI bean types and then on first class define using\n+\t\t\t\t// that bundle's class loader the weaving hook would add the necessary\n+\t\t\t\t// weld packages as dynamic imports.  We cannot and will\n+\t\t\t\t// not be able to know exactly which bundles are providing bean\n+\t\t\t\t// types until this getClassLoader method is called.  But by the time\n+\t\t\t\t// this method is called it is too late for a weaving hook to do\n+\t\t\t\t// anything because weld is going to use the returned class loader\n+\t\t\t\t// immediately to reflectively define a proxy class.  The class loader\n+\t\t\t\t// MUST have visibility to the weld packages before this reflective\n+\t\t\t\t// call to defineClass.\n+\t\t\t\tClassLoader cl = proxiedBeanType.getClassLoader();\n+\t\t\t\tif (cl instanceof BundleReference) {\n+\t\t\t\t\tBundle b = ((BundleReference) cl).getBundle();\n+\t\t\t\t\taddWeldDynamicImports(b, WELD_PACKAGES);\n+\t\t\t\t} else if (cl == null) {\n+\t\t\t\t\treturn CLASS_LOADER_FOR_SYSTEM_CLASSES;\n+\t\t\t\t}\n+\t\t\t\treturn cl;\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\t@Override\n+\t@FFDCIgnore(ClassNotFoundException.class)\n+\tpublic Class<?> defineClass\u200b(Class<?> originalClass, String className, byte[] classBytes, int off, int len, ProtectionDomain protectionDomain) throws ClassFormatError {\n+\n+\t\tClassLoader loader = loaderMap.get(originalClass);\n+\t\tObject classLoaderLock = null;\n+\t\ttry {\n+\t\t\tclassLoaderLock = ClassLoaderMethods.getClassLoadingLock.invoke(loader, className);\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\n+\t\tsynchronized (classLoaderLock) {\n+\t\t\ttry {\n+\t\t\t\t//First check we haven't defined this in another thread.\n+\t\t\t\treturn loadClass\u200b(className, loader);\n+\t\t\t} catch (ClassNotFoundException e) {\n+\t\t\t\t//Do nothing, move on to defining the class. \n+\t\t\t}\n+\t\t\ttry {\n+\t\t\t\tjava.lang.reflect.Method method;\n+\t\t\t\tObject[] args;\n+\t\t\t\tif (protectionDomain == null) {\n+\t\t\t\t\tmethod = ClassLoaderMethods.defineClass1;\n+\t\t\t\t\targs = new Object[]{className, classBytes, off, len};\n+\t\t\t\t} else {\n+\t\t\t\t\tmethod = ClassLoaderMethods.defineClass2;\n+\t\t\t\t\targs = new Object[]{className, classBytes, off, len, protectionDomain};\n+\t\t\t\t}\n+\t\t\t\tClass<?> clazz = (Class) method.invoke(loader, args); //This is the line that actually puts a new class into a ClassLoader.\n+\t\t\t\treturn clazz;\n+\t\t\t} catch (RuntimeException e) {\n+\t\t\t\tthrow e;\n+\t\t\t} catch (java.lang.reflect.InvocationTargetException e) {\n+\t\t\t\tthrow new RuntimeException(e.getTargetException());\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new RuntimeException(e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<?> loadClass\u200b(Class<?> originalClass, String classBinaryName) throws ClassNotFoundException {\n+\t\tClassLoader cl = loaderMap.get(originalClass);\n+\t\treturn loadClass\u200b(classBinaryName, cl);\n+\t}\n+\n+\tprivate Class<?> loadClass\u200b(String classBinaryName, ClassLoader cl) throws ClassNotFoundException {\n+\t\treturn Class.forName(classBinaryName, true, cl);\n+\t}\n+\n+\t/*    @FFDCIgnore(ClassNotFoundException.class)\n+    public Class<?> loadClass\u200b(Class<?> originalClass, String classBinaryName) throws ClassNotFoundException {\n+         if (originalClassToProxyClass.containsKey(originalClass)) {\n+             return originalClassToProxyClass.get(originalClass);\n+         } else {\n+             throw new ClassNotFoundException(\"We failed to find a proxy class \" + classBinaryName);\n+         }\n+    }*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c4b41055f823354ad126e42f7216eb01ac835a"}, "originalPosition": 189}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c71019599196886b1fc50d9a716a29a1cfc4ffa9", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c71019599196886b1fc50d9a716a29a1cfc4ffa9", "committedDate": "2021-08-09T10:54:38Z", "message": "tweaks to APS"}, "afterCommit": {"oid": "9c4c553f1e257639f211f4dfed767d297a412fbf", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9c4c553f1e257639f211f4dfed767d297a412fbf", "committedDate": "2021-08-09T10:59:22Z", "message": "tweaks to APS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c4c553f1e257639f211f4dfed767d297a412fbf", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/9c4c553f1e257639f211f4dfed767d297a412fbf", "committedDate": "2021-08-09T10:59:22Z", "message": "tweaks to APS"}, "afterCommit": {"oid": "921f98ae10ee4eed4b665857ffc87e234ae4fe10", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/921f98ae10ee4eed4b665857ffc87e234ae4fe10", "committedDate": "2021-08-09T10:59:41Z", "message": "tweaks to APS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c935219de72d50e39e1ce7ed82bc8fee9cd6ce3a", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c935219de72d50e39e1ce7ed82bc8fee9cd6ce3a", "committedDate": "2021-08-09T11:00:20Z", "message": "tweaks to APS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "921f98ae10ee4eed4b665857ffc87e234ae4fe10", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/921f98ae10ee4eed4b665857ffc87e234ae4fe10", "committedDate": "2021-08-09T10:59:41Z", "message": "tweaks to APS"}, "afterCommit": {"oid": "c935219de72d50e39e1ce7ed82bc8fee9cd6ce3a", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/c935219de72d50e39e1ce7ed82bc8fee9cd6ce3a", "committedDate": "2021-08-09T11:00:20Z", "message": "tweaks to APS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "411d37b8d3eacc064a135da480ed7864002e0002", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/411d37b8d3eacc064a135da480ed7864002e0002", "committedDate": "2021-08-09T11:00:59Z", "message": "remove package info files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MjYyMDU1", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-725262055", "createdAt": "2021-08-09T11:13:22Z", "commit": {"oid": "411d37b8d3eacc064a135da480ed7864002e0002"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wOVQxMToxMzoyMlrOKNXcPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wOVQxMToxMzoyMlrOKNXcPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTEwNDE4OA==", "bodyText": "Why this change. Were these packages unexported in the 3.1.7.SP1 bundle manifest?", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#discussion_r685104188", "createdAt": "2021-08-09T11:13:22Z", "author": {"login": "Azquelt"}, "path": "dev/com.ibm.ws.org.jboss.weld3/bnd.overrides", "diffHunk": "@@ -3,18 +3,22 @@ bVersion=1.0\n \n Bundle-Name: weld OSGi bundle\n Bundle-SymbolicName: com.ibm.ws.org.jboss.weld3\n-Bundle-Description: Weld OSGi Bundle, version 3.1.4.Final\n+Bundle-Description: Weld OSGi Bundle, version 3.1.7.SP1\n Implementation-Title: Weld OSGi Bundle\n Bundle-License: http://www.apache.org/licenses/LICENSE-2.0.html\n-Implementation-Version: 3.1.4.Final\n+Implementation-Version: 3.1.7.SP1\n Embed-Dependency: *; scope=compile; inline=true\n Specification-Title: JSR-365 Contexts and Dependency Injection for Java\n Specification-Version: 2.0\n DynamicImport-Package: *\n Export-Package: !org.jboss.weld.environment.se.*, \\\n- org.jboss.*;version=\"3.1.4.Final\", \\\n- org.jboss.weldx.transaction;version=\"1.0.16\"\n-Private-Package: org.jboss.weld.environment.se.*\n+ org.jboss.*;version=\"3.1.7.SP1\", \\\n+ org.jboss.weldx.transaction;version=\"1.0.16\", \\\n+ !org.jboss.weld.bean.proxy.util\\\n+ !org.jboss.weld.proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411d37b8d3eacc064a135da480ed7864002e0002"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MjY1NDM1", "url": "https://github.com/OpenLiberty/open-liberty/pull/13553#pullrequestreview-725265435", "createdAt": "2021-08-09T11:18:11Z", "commit": {"oid": "411d37b8d3eacc064a135da480ed7864002e0002"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83393844e0eaeecf81fd3f57546ee8d521139d6b", "author": {"user": {"login": "benjamin-confino", "name": "Benjamin Confino"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/83393844e0eaeecf81fd3f57546ee8d521139d6b", "committedDate": "2021-08-09T13:35:12Z", "message": "Move packages"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3496, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}