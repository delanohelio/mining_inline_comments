{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NDM2MzQw", "number": 12157, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjowOToyMFrOD8IvmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0NTowNlrOD8JnGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mzg0NDA4OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjowOToyMFrOGU5CmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjowOToyMFrOGU5CmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1OTI1Nw==", "bodyText": "propertyValues can be null, so this should be \"if (propertyValues[i] != NOT_FOUND) {\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424559257", "createdAt": "2020-05-13T16:09:20Z", "author": {"login": "dettmoney"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e1e2b4a1782d5193898168b75901b4f8f072f4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mzg0OTk1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjoxMDo0MVrOGU5GSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjoxMDo0MVrOGU5GSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU2MDIwMw==", "bodyText": "There should be a comma and space (or some other delimiter) between each name/value pair for both the propertyValues and the forEach calls below", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424560203", "createdAt": "2020-05-13T16:10:41Z", "author": {"login": "dettmoney"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != null) {\n+                sb.append(propertyNames[i]).append(\"=\").append(propertyValues[i]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e1e2b4a1782d5193898168b75901b4f8f072f4"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mzk4NjE5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0NTowNlrOGU6eBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoxNTo0NFrOGVB8Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MjY2MQ==", "bodyText": "The last name/value isn't going to look pretty with a trailing \", \", but not a big deal. I'll let you decide if you want to resolve that.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424582661", "createdAt": "2020-05-13T16:45:06Z", "author": {"login": "dettmoney"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != NOT_FOUND) {\n+                sb.append(propertyNames[i]).append(\"=\").append(propertyValues[i]).append(\", \");\n+            }\n+        }\n+        try {\n+            forEach((k, v) -> { sb.append(k).append(\"=\").append(v).append(\", \"); });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca9b60e395cf46599a5c8adc57d33f462dbcd97d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNTA5MQ==", "bodyText": "yeah, I'm fine with a trailing comma - we should only ever see it when trace is enabled - and we'll only be looking at a trace if something uglier has already happened.  :)", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424705091", "createdAt": "2020-05-13T20:15:44Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != NOT_FOUND) {\n+                sb.append(propertyNames[i]).append(\"=\").append(propertyValues[i]).append(\", \");\n+            }\n+        }\n+        try {\n+            forEach((k, v) -> { sb.append(k).append(\"=\").append(v).append(\", \"); });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MjY2MQ=="}, "originalCommit": {"oid": "ca9b60e395cf46599a5c8adc57d33f462dbcd97d"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1769, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}