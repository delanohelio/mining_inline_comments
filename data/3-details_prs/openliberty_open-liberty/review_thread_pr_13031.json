{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTgyMjk3", "number": 13031, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzo1OToxNFrOEPJJ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxMToyOVrOERI_3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzE0MTAyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeApplicationStateListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzo1OToxNFrOGysR4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMToyNDozMVrOGy9Tyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgwNzQ1OA==", "bodyText": "I would probably make this a WARNING, since it is significant and would help us debug the issue immediately.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13031#discussion_r455807458", "createdAt": "2020-07-16T13:59:14Z", "author": {"login": "jvanhill"}, "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeApplicationStateListener.java", "diffHunk": "@@ -140,10 +196,51 @@ public void waitUntilWebAppAvailable() throws AcmeCaException {\n \t\t\t\t}\n \n \t\t\t} else {\n-\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isEntryEnabled()) {\n+\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n \t\t\t\t\tTr.debug(tc, methodName + \": ACME authorization web application already started - not waiting.\");\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\tif (!isHttpStarted) {\n+\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n+\n+\t\t\t\t\tTr.debug(tc, methodName + \": HTTP has not started - waiting.\");\n+\t\t\t\t}\n+\n+\t\t\t\tboolean signaled = false, keepWaiting = true;\n+\t\t\t\tCalendar cal = Calendar.getInstance();\n+\t\t\t\tint timeToWait = 1;\n+\t\t\t\tcal.add(Calendar.MINUTE, timeToWait); // Wait 1 minute, the HTTP port should open after 30 seconds\n+\t\t\t\twhile (keepWaiting) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tkeepWaiting = false;\n+\t\t\t\t\t\tsignaled = httpStartedCondition.awaitUntil(cal.getTime());\n+\t\t\t\t\t} catch (InterruptedException e) {\n+\t\t\t\t\t\tkeepWaiting = true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isEntryEnabled()) {\n+\t\t\t\t\tTr.debug(tc, methodName + \": Finished waiting.\");\n+\t\t\t\t}\n+\n+\t\t\t\t/*\n+\t\t\t\t * If the wait above expired and we weren't signaled by the startedPhase2\n+\t\t\t\t * method, we will attempt to start ACME anyway. If the HTTP port is truly not\n+\t\t\t\t * open, then the CA call back to the well-known URL will fail\n+\t\t\t\t * (\"Connection refused\" or similar).\n+\t\t\t\t */\n+\t\t\t\tif (!signaled || !isHttpStarted) {\n+\t\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+\t\t\t\t\t\tTr.event(tc, methodName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c651b5ac4e7721a749660ba3460fe3de38b9e71d"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4NjQ3NA==", "bodyText": "Added a warning message.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13031#discussion_r456086474", "createdAt": "2020-07-16T21:24:31Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeApplicationStateListener.java", "diffHunk": "@@ -140,10 +196,51 @@ public void waitUntilWebAppAvailable() throws AcmeCaException {\n \t\t\t\t}\n \n \t\t\t} else {\n-\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isEntryEnabled()) {\n+\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n \t\t\t\t\tTr.debug(tc, methodName + \": ACME authorization web application already started - not waiting.\");\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\tif (!isHttpStarted) {\n+\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n+\n+\t\t\t\t\tTr.debug(tc, methodName + \": HTTP has not started - waiting.\");\n+\t\t\t\t}\n+\n+\t\t\t\tboolean signaled = false, keepWaiting = true;\n+\t\t\t\tCalendar cal = Calendar.getInstance();\n+\t\t\t\tint timeToWait = 1;\n+\t\t\t\tcal.add(Calendar.MINUTE, timeToWait); // Wait 1 minute, the HTTP port should open after 30 seconds\n+\t\t\t\twhile (keepWaiting) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tkeepWaiting = false;\n+\t\t\t\t\t\tsignaled = httpStartedCondition.awaitUntil(cal.getTime());\n+\t\t\t\t\t} catch (InterruptedException e) {\n+\t\t\t\t\t\tkeepWaiting = true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isEntryEnabled()) {\n+\t\t\t\t\tTr.debug(tc, methodName + \": Finished waiting.\");\n+\t\t\t\t}\n+\n+\t\t\t\t/*\n+\t\t\t\t * If the wait above expired and we weren't signaled by the startedPhase2\n+\t\t\t\t * method, we will attempt to start ACME anyway. If the HTTP port is truly not\n+\t\t\t\t * open, then the CA call back to the well-known URL will fail\n+\t\t\t\t * (\"Connection refused\" or similar).\n+\t\t\t\t */\n+\t\t\t\tif (!signaled || !isHttpStarted) {\n+\t\t\t\t\tif (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+\t\t\t\t\t\tTr.event(tc, methodName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgwNzQ1OA=="}, "originalCommit": {"oid": "c651b5ac4e7721a749660ba3460fe3de38b9e71d"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDA4NjcwOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.security.acme/resources/com/ibm/ws/security/acme/resources/AcmeMessages.nlsprops", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxMToyOVrOG1sKhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODoxNTo0M1rOG1uiCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MTMwMA==", "bodyText": "A nit:  Change \"URL which indicates the internal application started.\" to \"URL to indicate that the internal application started.\" or to \"URL, which indicates that the internal application started.\"", "url": "https://github.com/OpenLiberty/open-liberty/pull/13031#discussion_r458951300", "createdAt": "2020-07-22T17:11:29Z", "author": {"login": "helyarp"}, "path": "dev/com.ibm.ws.security.acme/resources/com/ibm/ws/security/acme/resources/AcmeMessages.nlsprops", "diffHunk": "@@ -179,9 +179,9 @@ CWPKI2035E=CWPKI2035E: The ACME service could not store the signed certificate i\n CWPKI2035E.explanation=The certificate was successfully retrieved from the certificate authority, but it cannot be stored locally.\n CWPKI2035E.useraction=Review the error message for details on the failure. Verify the keystore file location is correct and the server has write file permissions.\n \n-CWPKI2036E=CWPKI2036E: The ACME service timed out waiting for the web authorization application to start. The application is required to complete a certificate request with an ACME certificate authority. The service waited for {0} minutes.\n-CWPKI2036E.explanation=The application used to complete a certificate request did not start in the expected time frame. A signed certificate cannot be requested.\n-CWPKI2036E.useraction=Review the log for earlier messages or errors.\n+CWPKI2036W=CWPKI2036W: The ACME service timed out waiting for the web authorization application to start. The application is required to complete a certificate request with an ACME certificate authority. The certificate request is attempted. The service waited for {0}.\n+CWPKI2036W.explanation=The application used to complete a certificate request did not start in the expected time frame. If the application starts, the request proceeds. If the application does not start, the certificate request fails.\n+CWPKI2036W.useraction=Review the log for earlier messages or errors. Review the log for a CWWKT0016I message that includes a web application with the ''acme-challenge'' URL which indicates the internal application started.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57584bace5150ff6be5d368ce6c67d447c7567f7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5MDA5MA==", "bodyText": "Changed", "url": "https://github.com/OpenLiberty/open-liberty/pull/13031#discussion_r458990090", "createdAt": "2020-07-22T18:15:43Z", "author": {"login": "kristip17"}, "path": "dev/com.ibm.ws.security.acme/resources/com/ibm/ws/security/acme/resources/AcmeMessages.nlsprops", "diffHunk": "@@ -179,9 +179,9 @@ CWPKI2035E=CWPKI2035E: The ACME service could not store the signed certificate i\n CWPKI2035E.explanation=The certificate was successfully retrieved from the certificate authority, but it cannot be stored locally.\n CWPKI2035E.useraction=Review the error message for details on the failure. Verify the keystore file location is correct and the server has write file permissions.\n \n-CWPKI2036E=CWPKI2036E: The ACME service timed out waiting for the web authorization application to start. The application is required to complete a certificate request with an ACME certificate authority. The service waited for {0} minutes.\n-CWPKI2036E.explanation=The application used to complete a certificate request did not start in the expected time frame. A signed certificate cannot be requested.\n-CWPKI2036E.useraction=Review the log for earlier messages or errors.\n+CWPKI2036W=CWPKI2036W: The ACME service timed out waiting for the web authorization application to start. The application is required to complete a certificate request with an ACME certificate authority. The certificate request is attempted. The service waited for {0}.\n+CWPKI2036W.explanation=The application used to complete a certificate request did not start in the expected time frame. If the application starts, the request proceeds. If the application does not start, the certificate request fails.\n+CWPKI2036W.useraction=Review the log for earlier messages or errors. Review the log for a CWWKT0016I message that includes a web application with the ''acme-challenge'' URL which indicates the internal application started.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MTMwMA=="}, "originalCommit": {"oid": "57584bace5150ff6be5d368ce6c67d447c7567f7"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}