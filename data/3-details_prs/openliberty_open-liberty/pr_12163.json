{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NDg1MjU2", "number": 12163, "title": "Get only the raw features from server xml", "bodyText": "", "createdAt": "2020-05-13T16:45:49Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163", "merged": true, "mergeCommit": {"oid": "6c10cfbab84f186b36645a8c40ccee16bb4af60a"}, "closed": true, "closedAt": "2020-05-20T16:33:46Z", "author": {"login": "TayyabDev"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg7tQCgH2gAyNDE3NDg1MjU2OmQyYzkzNjgxZWQ4ZjE2ZThjYTA3YWMyM2ZiMmUyNDQ3YjBhMDcyM2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjLfN0gFqTQxNTUwMDM1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2c93681ed8f16e8ca07ac23fb2e2447b0a0723b", "author": {"user": {"login": "TayyabDev", "name": "Tayyab Waqar"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/d2c93681ed8f16e8ca07ac23fb2e2447b0a0723b", "committedDate": "2020-05-13T16:45:29Z", "message": "Get only the raw features from server xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bad1826202f0255b01d5a64b509b1b2229a43a8", "author": {"user": {"login": "TayyabDev", "name": "Tayyab Waqar"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/3bad1826202f0255b01d5a64b509b1b2229a43a8", "committedDate": "2020-05-15T04:54:55Z", "message": "server.xml include support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0", "author": {"user": {"login": "TayyabDev", "name": "Tayyab Waqar"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/06fc75118ccc201b4f079222ca45a4e7847049a0", "committedDate": "2020-05-15T14:54:51Z", "message": "Fix logic for parsing include"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNzQwMDc5", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#pullrequestreview-412740079", "createdAt": "2020-05-15T15:16:26Z", "commit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjoyNlrOGWJJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjoyNlrOGWJJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MTc2MQ==", "bodyText": "Please remove the code commented out.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#discussion_r425871761", "createdAt": "2020-05-15T15:16:26Z", "author": {"login": "alvinso"}, "path": "dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallUtils.java", "diffHunk": "@@ -663,11 +663,47 @@ public static String getShortName(ProvisioningFeatureDefinition fd) {\n         return null;\n     }\n \n-    public static Collection<String> getFeatures(InputStream serverXMLInputStream, String xml) throws InstallException {\n-        Collection<String> features = new ArrayList<String>();\n-        try {\n-            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(serverXMLInputStream);\n+\n+\n+    public static Set<String> getFeatures(File serverXml, String xml, List<String> visitedServerXmls) throws InstallException {\n+        System.out.println(\"Processing server: \" + serverXml);\n+        Set<String> features = new HashSet<String>();\n+        List<String> newLocations = new ArrayList<>();\n+\n+        if(visitedServerXmls.contains(serverXml.getAbsolutePath())) {\n+            return features;\n+        }\n+        try (InputStream is = new FileInputStream(serverXml)){\n+            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);\n             Element element = doc.getDocumentElement();\n+            NodeList childs = doc.getChildNodes();\n+            for(int i =0; i < childs.getLength(); i++){\n+                if (childs.item(i).getNodeType() == Node.ELEMENT_NODE) {\n+                    Element el = (Element) childs.item(i);\n+                    if(el.getNodeName().equals(\"include\")){\n+                        String location = el.getAttribute(\"location\");\n+                        if(!newLocations.contains(location) && !visitedServerXmls.contains(location)){\n+                            newLocations.add(location);\n+                        }\n+                    }\n+                }\n+\n+            }\n+//            NodeList includeList = element.getElementsByTagName(\"include\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNzQwODI3", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#pullrequestreview-412740827", "createdAt": "2020-05-15T15:17:16Z", "commit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNzoxN1rOGWJMBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNzoxN1rOGWJMBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjM4OQ==", "bodyText": "Please replace system out with proper logging", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#discussion_r425872389", "createdAt": "2020-05-15T15:17:17Z", "author": {"login": "alvinso"}, "path": "dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallUtils.java", "diffHunk": "@@ -663,11 +663,47 @@ public static String getShortName(ProvisioningFeatureDefinition fd) {\n         return null;\n     }\n \n-    public static Collection<String> getFeatures(InputStream serverXMLInputStream, String xml) throws InstallException {\n-        Collection<String> features = new ArrayList<String>();\n-        try {\n-            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(serverXMLInputStream);\n+\n+\n+    public static Set<String> getFeatures(File serverXml, String xml, List<String> visitedServerXmls) throws InstallException {\n+        System.out.println(\"Processing server: \" + serverXml);\n+        Set<String> features = new HashSet<String>();\n+        List<String> newLocations = new ArrayList<>();\n+\n+        if(visitedServerXmls.contains(serverXml.getAbsolutePath())) {\n+            return features;\n+        }\n+        try (InputStream is = new FileInputStream(serverXml)){\n+            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);\n             Element element = doc.getDocumentElement();\n+            NodeList childs = doc.getChildNodes();\n+            for(int i =0; i < childs.getLength(); i++){\n+                if (childs.item(i).getNodeType() == Node.ELEMENT_NODE) {\n+                    Element el = (Element) childs.item(i);\n+                    if(el.getNodeName().equals(\"include\")){\n+                        String location = el.getAttribute(\"location\");\n+                        if(!newLocations.contains(location) && !visitedServerXmls.contains(location)){\n+                            newLocations.add(location);\n+                        }\n+                    }\n+                }\n+\n+            }\n+//            NodeList includeList = element.getElementsByTagName(\"include\");\n+//            System.out.println(includeList.getLength());\n+//\n+//            for (int i = 0; i < includeList.getLength(); i++) {\n+//                Node includeNode = includeList.item(i);\n+//                System.out.println(\"node: \" + includeNode.getNodeName());\n+//                System.out.println(\"attrs : \" + includeNode.getAttributes());\n+//                Element includeElement = (Element) includeNode;\n+//                String location = includeElement.getAttribute(\"location\");\n+//                if(!newLocations.contains(location) && !visitedServerXmls.contains(location)){\n+//                    newLocations.add(location);\n+//                }\n+//            }\n+            System.out.println(\"locations: \" +newLocations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNzQxMzU5", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#pullrequestreview-412741359", "createdAt": "2020-05-15T15:17:57Z", "commit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNzo1OFrOGWJN1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNzo1OFrOGWJN1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3Mjg1Mg==", "bodyText": "Remove the code commented out", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#discussion_r425872852", "createdAt": "2020-05-15T15:17:58Z", "author": {"login": "alvinso"}, "path": "dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallUtils.java", "diffHunk": "@@ -679,8 +715,15 @@ public static String getShortName(ProvisioningFeatureDefinition fd) {\n                 }\n             }\n         } catch (Exception e) {\n-            throw new InstallException(Messages.INSTALL_KERNEL_MESSAGES.getLogMessage(\"ERROR_INVALID_SERVER_XML\", xml, e.getMessage()), e, InstallException.IO_FAILURE);\n+            // do nothing\n+//            throw new InstallException(Messages.INSTALL_KERNEL_MESSAGES.getLogMessage(\"ERROR_INVALID_SERVER_XML\", xml, e.getMessage()), e, InstallException.IO_FAILURE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06fc75118ccc201b4f079222ca45a4e7847049a0"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb2aafd2470025440aa2480fd81f5db2b0cd66db", "author": {"user": {"login": "TayyabDev", "name": "Tayyab Waqar"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/fb2aafd2470025440aa2480fd81f5db2b0cd66db", "committedDate": "2020-05-15T20:50:00Z", "message": "Remove comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "421f873b1447cf4c30e457d6ad8820924608f2ee", "author": {"user": {"login": "TayyabDev", "name": "Tayyab Waqar"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/421f873b1447cf4c30e457d6ad8820924608f2ee", "committedDate": "2020-05-19T17:27:20Z", "message": "Switch implementation to Paths"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTAwMzUz", "url": "https://github.com/OpenLiberty/open-liberty/pull/12163#pullrequestreview-415500353", "createdAt": "2020-05-20T16:16:29Z", "commit": {"oid": "421f873b1447cf4c30e457d6ad8820924608f2ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2613, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}