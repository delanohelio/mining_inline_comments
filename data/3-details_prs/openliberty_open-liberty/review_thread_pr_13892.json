{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTkxNTk2", "number": 13892, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNToxMzoxOFrOEklskA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNToxMzoxOFrOEklskA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODAxODA4OnYy", "diffSide": "RIGHT", "path": "dev/io.openliberty.microprofile.openapi.2.0.internal/src/io/openliberty/microprofile/openapi20/WebModuleOpenAPIProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNToxMzoxOFrOHTngtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNToxMzoxOFrOHTngtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzMjM0MA==", "bodyText": "This is much better.\nHowever, is there a possibility that anything else could be reading openAPIModel at the same point that this modification is happening? (E.g. line 125)\nI suspect that you need to synchronize around every access to openAPIModel to be safe here.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13892#discussion_r490332340", "createdAt": "2020-09-17T15:13:18Z", "author": {"login": "Azquelt"}, "path": "dev/io.openliberty.microprofile.openapi.2.0.internal/src/io/openliberty/microprofile/openapi20/WebModuleOpenAPIProvider.java", "diffHunk": "@@ -56,12 +75,68 @@ public String getOpenAPIDocument(Format format) {\n         return document;\n     }\n \n+    /**\n+     * @see io.openliberty.microprofile.openapi20.OpenAPIProvider#getOpenAPIDocument(List<Server>, Format)\n+     */\n+    @Override\n+    public String getOpenAPIDocument(List<Server> servers, Format format) {\n+        // Create the variable to return\n+        String document = null;\n+\n+        // Make sure that the list of servers is valid\n+        if (servers != null && !servers.isEmpty()) {\n+            /*\n+             * We only store a single copy of the OpenAPI model for a given application, but the OpenAPI document could\n+             * be requested by multiple clients concurrently.  As a result, we need to synchronize operations that\n+             * update the model to ensure consistent behaviour. \n+             */\n+            synchronized (openAPIModel) {\n+                // Set the servers in the OpenAPI model and generate the OpenAPI document\n+                openAPIModel.setServers(servers);\n+                document = OpenAPIUtils.getOpenAPIDocument(openAPIModel, format);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f75940c7a6c6d030f442f6ca6a27e0db82494de0"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2793, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}