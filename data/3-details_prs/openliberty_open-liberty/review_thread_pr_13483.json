{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDE5MTI4", "number": 13483, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzowNDowN1rOEYJEaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzoxNTozOVrOEYJgeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzQ5ODY1OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/app/AppTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzowNDowN1rOHAUdSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowMToyM1rOHAbk6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NzIyNw==", "bodyText": "Should this test be updated to cover VERSION_9_0?  It looks like that was missed when that version was added to JavaEEVersion back in July.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470097227", "createdAt": "2020-08-13T17:04:07Z", "author": {"login": "brideck"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/app/AppTest.java", "diffHunk": "@@ -17,58 +17,55 @@\n import com.ibm.ws.javaee.ddmodel.DDParser;\n import com.ibm.ws.javaee.version.JavaEEVersion;\n \n-\n /**\n  * Application deployment descriptor parse tests.\n  */\n public class AppTest extends AppTestBase {\n-    public static final Version[] TEST_VERSIONS =\n-        new Version[] { \n-            JavaEEVersion.VERSION_6_0,\n-            JavaEEVersion.VERSION_7_0,\n-            JavaEEVersion.VERSION_8_0\n-        };\n+    public static final Version[] TEST_VERSIONS = new Version[] {\n+                                                                  JavaEEVersion.VERSION_6_0,\n+                                                                  JavaEEVersion.VERSION_7_0,\n+                                                                  JavaEEVersion.VERSION_8_0\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMzg2Ng==", "bodyText": "done", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470213866", "createdAt": "2020-08-13T20:01:23Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/app/AppTest.java", "diffHunk": "@@ -17,58 +17,55 @@\n import com.ibm.ws.javaee.ddmodel.DDParser;\n import com.ibm.ws.javaee.version.JavaEEVersion;\n \n-\n /**\n  * Application deployment descriptor parse tests.\n  */\n public class AppTest extends AppTestBase {\n-    public static final Version[] TEST_VERSIONS =\n-        new Version[] { \n-            JavaEEVersion.VERSION_6_0,\n-            JavaEEVersion.VERSION_7_0,\n-            JavaEEVersion.VERSION_8_0\n-        };\n+    public static final Version[] TEST_VERSIONS = new Version[] {\n+                                                                  JavaEEVersion.VERSION_6_0,\n+                                                                  JavaEEVersion.VERSION_7_0,\n+                                                                  JavaEEVersion.VERSION_8_0\n+    };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NzIyNw=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzUwMTExOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/app/AppTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzowNDo0N1rOHAUe0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowMTowMFrOHAbkOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NzYxNg==", "bodyText": "The matrix of expected results would likewise need updating.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470097616", "createdAt": "2020-08-13T17:04:47Z", "author": {"login": "brideck"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/app/AppTest.java", "diffHunk": "@@ -17,58 +17,55 @@\n import com.ibm.ws.javaee.ddmodel.DDParser;\n import com.ibm.ws.javaee.version.JavaEEVersion;\n \n-\n /**\n  * Application deployment descriptor parse tests.\n  */\n public class AppTest extends AppTestBase {\n-    public static final Version[] TEST_VERSIONS =\n-        new Version[] { \n-            JavaEEVersion.VERSION_6_0,\n-            JavaEEVersion.VERSION_7_0,\n-            JavaEEVersion.VERSION_8_0\n-        };\n+    public static final Version[] TEST_VERSIONS = new Version[] {\n+                                                                  JavaEEVersion.VERSION_6_0,\n+                                                                  JavaEEVersion.VERSION_7_0,\n+                                                                  JavaEEVersion.VERSION_8_0\n+    };\n \n     public static final int CMP_LT = -1;\n     public static final int CMP_GT = +1;\n-    public static final int CMP_EQ =  0;\n+    public static final int CMP_EQ = 0;\n \n     public static int asCmp(int cmpResult) {\n-        return ( (cmpResult < 0) ? CMP_LT : ((cmpResult > 0) ? CMP_GT : CMP_EQ) );\n+        return ((cmpResult < 0) ? CMP_LT : ((cmpResult > 0) ? CMP_GT : CMP_EQ));\n     }\n \n-    public static int[][] COMPARE_VERSION_RESULTS =\n-        new int[][] {\n-            { CMP_EQ, CMP_LT, CMP_LT },\n-            { CMP_GT, CMP_EQ, CMP_LT },\n-            { CMP_GT, CMP_GT, CMP_EQ }\n-        };\n+    public static int[][] COMPARE_VERSION_RESULTS = new int[][] {\n+                                                                  { CMP_EQ, CMP_LT, CMP_LT },\n+                                                                  { CMP_GT, CMP_EQ, CMP_LT },\n+                                                                  { CMP_GT, CMP_GT, CMP_EQ }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMzY5MA==", "bodyText": "done", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470213690", "createdAt": "2020-08-13T20:01:00Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/app/AppTest.java", "diffHunk": "@@ -17,58 +17,55 @@\n import com.ibm.ws.javaee.ddmodel.DDParser;\n import com.ibm.ws.javaee.version.JavaEEVersion;\n \n-\n /**\n  * Application deployment descriptor parse tests.\n  */\n public class AppTest extends AppTestBase {\n-    public static final Version[] TEST_VERSIONS =\n-        new Version[] { \n-            JavaEEVersion.VERSION_6_0,\n-            JavaEEVersion.VERSION_7_0,\n-            JavaEEVersion.VERSION_8_0\n-        };\n+    public static final Version[] TEST_VERSIONS = new Version[] {\n+                                                                  JavaEEVersion.VERSION_6_0,\n+                                                                  JavaEEVersion.VERSION_7_0,\n+                                                                  JavaEEVersion.VERSION_8_0\n+    };\n \n     public static final int CMP_LT = -1;\n     public static final int CMP_GT = +1;\n-    public static final int CMP_EQ =  0;\n+    public static final int CMP_EQ = 0;\n \n     public static int asCmp(int cmpResult) {\n-        return ( (cmpResult < 0) ? CMP_LT : ((cmpResult > 0) ? CMP_GT : CMP_EQ) );\n+        return ((cmpResult < 0) ? CMP_LT : ((cmpResult > 0) ? CMP_GT : CMP_EQ));\n     }\n \n-    public static int[][] COMPARE_VERSION_RESULTS =\n-        new int[][] {\n-            { CMP_EQ, CMP_LT, CMP_LT },\n-            { CMP_GT, CMP_EQ, CMP_LT },\n-            { CMP_GT, CMP_GT, CMP_EQ }\n-        };\n+    public static int[][] COMPARE_VERSION_RESULTS = new int[][] {\n+                                                                  { CMP_EQ, CMP_LT, CMP_LT },\n+                                                                  { CMP_GT, CMP_EQ, CMP_LT },\n+                                                                  { CMP_GT, CMP_GT, CMP_EQ }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NzYxNg=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzU3MDQ5OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzoxNTozOVrOHAVGug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozOTozN1rOHAc06A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwNzgzNA==", "bodyText": "Is this right?  I can't tell what exactly this test is doing, but you've set DEFAULT_MAX_VERSION to 4_0 in EJBJarEntryAdapter, bumping it from 3_1.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470107834", "createdAt": "2020-08-13T17:15:39Z", "author": {"login": "brideck"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "diffHunk": "@@ -34,11 +34,12 @@ public void testGetVersionID() throws Exception {\n         Assert.assertEquals(EJBJar.VERSION_3_0, parse(ejbJar30() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_1, parse(ejbJar31() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_2, parse(ejbJar32() + \"</ejb-jar>\").getVersionID());\n+        Assert.assertEquals(EJBJar.VERSION_4_0, parse(ejbJar40() + \"</ejb-jar>\").getVersionID());\n     }\n \n     @Test(expected = DDParser.ParseException.class)\n-    public void testMaxVersion31() throws Exception {\n-        parse(ejbJar32() + \"</ejb-jar>\", EJBJar.VERSION_3_1);\n+    public void testMaxVersion() throws Exception {\n+        parse(ejbJar40() + \"</ejb-jar>\", EJBJar.VERSION_3_2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwOTk1OQ==", "bodyText": "Apparently it is, since this test has passed in your personal build.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470109959", "createdAt": "2020-08-13T17:17:53Z", "author": {"login": "brideck"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "diffHunk": "@@ -34,11 +34,12 @@ public void testGetVersionID() throws Exception {\n         Assert.assertEquals(EJBJar.VERSION_3_0, parse(ejbJar30() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_1, parse(ejbJar31() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_2, parse(ejbJar32() + \"</ejb-jar>\").getVersionID());\n+        Assert.assertEquals(EJBJar.VERSION_4_0, parse(ejbJar40() + \"</ejb-jar>\").getVersionID());\n     }\n \n     @Test(expected = DDParser.ParseException.class)\n-    public void testMaxVersion31() throws Exception {\n-        parse(ejbJar32() + \"</ejb-jar>\", EJBJar.VERSION_3_1);\n+    public void testMaxVersion() throws Exception {\n+        parse(ejbJar40() + \"</ejb-jar>\", EJBJar.VERSION_3_2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwNzgzNA=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMzI2NQ==", "bodyText": "this is to test } else if (maxVersion >= EJBJar.VERSION_4_0 && \"4.0\".equals(vers)) { gets a parse exception if the maxVersion variable is lower than 4, the test is passing in a new max version EJBJar.VERSION_3_2 so we aren't using the default from the Mock", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470213265", "createdAt": "2020-08-13T20:00:04Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "diffHunk": "@@ -34,11 +34,12 @@ public void testGetVersionID() throws Exception {\n         Assert.assertEquals(EJBJar.VERSION_3_0, parse(ejbJar30() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_1, parse(ejbJar31() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_2, parse(ejbJar32() + \"</ejb-jar>\").getVersionID());\n+        Assert.assertEquals(EJBJar.VERSION_4_0, parse(ejbJar40() + \"</ejb-jar>\").getVersionID());\n     }\n \n     @Test(expected = DDParser.ParseException.class)\n-    public void testMaxVersion31() throws Exception {\n-        parse(ejbJar32() + \"</ejb-jar>\", EJBJar.VERSION_3_1);\n+    public void testMaxVersion() throws Exception {\n+        parse(ejbJar40() + \"</ejb-jar>\", EJBJar.VERSION_3_2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwNzgzNA=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxNTMyMA==", "bodyText": "In FATs and a live server. maxVersion is determined by what feature level is set by which ejb feature is specified in server.xml.  So, if the have an EJB 4.0 ejb-jar.xml but have enabled ejb-lite-3.2 they will get the parse exception.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470215320", "createdAt": "2020-08-13T20:03:47Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "diffHunk": "@@ -34,11 +34,12 @@ public void testGetVersionID() throws Exception {\n         Assert.assertEquals(EJBJar.VERSION_3_0, parse(ejbJar30() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_1, parse(ejbJar31() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_2, parse(ejbJar32() + \"</ejb-jar>\").getVersionID());\n+        Assert.assertEquals(EJBJar.VERSION_4_0, parse(ejbJar40() + \"</ejb-jar>\").getVersionID());\n     }\n \n     @Test(expected = DDParser.ParseException.class)\n-    public void testMaxVersion31() throws Exception {\n-        parse(ejbJar32() + \"</ejb-jar>\", EJBJar.VERSION_3_1);\n+    public void testMaxVersion() throws Exception {\n+        parse(ejbJar40() + \"</ejb-jar>\", EJBJar.VERSION_3_2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwNzgzNA=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIyNzg5MA==", "bodyText": "Though I was wrong to get rid of the check for 3.2", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470227890", "createdAt": "2020-08-13T20:26:46Z", "author": {"login": "olendvcook"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "diffHunk": "@@ -34,11 +34,12 @@ public void testGetVersionID() throws Exception {\n         Assert.assertEquals(EJBJar.VERSION_3_0, parse(ejbJar30() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_1, parse(ejbJar31() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_2, parse(ejbJar32() + \"</ejb-jar>\").getVersionID());\n+        Assert.assertEquals(EJBJar.VERSION_4_0, parse(ejbJar40() + \"</ejb-jar>\").getVersionID());\n     }\n \n     @Test(expected = DDParser.ParseException.class)\n-    public void testMaxVersion31() throws Exception {\n-        parse(ejbJar32() + \"</ejb-jar>\", EJBJar.VERSION_3_1);\n+    public void testMaxVersion() throws Exception {\n+        parse(ejbJar40() + \"</ejb-jar>\", EJBJar.VERSION_3_2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwNzgzNA=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNDM0NA==", "bodyText": "Aha.  Thanks for the clarification on what this test is doing.", "url": "https://github.com/OpenLiberty/open-liberty/pull/13483#discussion_r470234344", "createdAt": "2020-08-13T20:39:37Z", "author": {"login": "brideck"}, "path": "dev/com.ibm.ws.javaee.ddmodel/test/com/ibm/ws/javaee/ddmodel/ejb/EJBJarTest.java", "diffHunk": "@@ -34,11 +34,12 @@ public void testGetVersionID() throws Exception {\n         Assert.assertEquals(EJBJar.VERSION_3_0, parse(ejbJar30() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_1, parse(ejbJar31() + \"</ejb-jar>\").getVersionID());\n         Assert.assertEquals(EJBJar.VERSION_3_2, parse(ejbJar32() + \"</ejb-jar>\").getVersionID());\n+        Assert.assertEquals(EJBJar.VERSION_4_0, parse(ejbJar40() + \"</ejb-jar>\").getVersionID());\n     }\n \n     @Test(expected = DDParser.ParseException.class)\n-    public void testMaxVersion31() throws Exception {\n-        parse(ejbJar32() + \"</ejb-jar>\", EJBJar.VERSION_3_1);\n+    public void testMaxVersion() throws Exception {\n+        parse(ejbJar40() + \"</ejb-jar>\", EJBJar.VERSION_3_2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwNzgzNA=="}, "originalCommit": {"oid": "3f48ac0be96e913315f22c647cfcebbd0ded81b8"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2872, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}