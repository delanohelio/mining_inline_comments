{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODE3Njc5", "number": 12462, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxMzo1MVrOEB7Bvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoxOFrOEC_GJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDUxMTM0OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.v20.cdi/src/com/ibm/ws/beanvalidation/v20/cdi/internal/LibertyHibernateValidatorExtension.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxMzo1MlrOGeELgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToyNjozNVrOGehK3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3ODk0Nw==", "bodyText": "To make sure I understand the nature of this fix.  I think the problem could only occur if (newClassloaderHint !=null) because in that case the code above would wrapper the class loader in a Validation20ClassLoader instance and that would always force a replacement of the TCCL even if the expected TCCL instance was already set.  So that would force us to release the existing (previous) TCCL even though we may not have created it.  Is my understanding correct?", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#discussion_r434178947", "createdAt": "2020-06-02T21:13:52Z", "author": {"login": "tjwatson"}, "path": "dev/com.ibm.ws.beanvalidation.v20.cdi/src/com/ibm/ws/beanvalidation/v20/cdi/internal/LibertyHibernateValidatorExtension.java", "diffHunk": "@@ -109,8 +110,8 @@ private ValidationExtension delegate(String newClassloaderHint) {\n                         Tr.debug(tc, \"Set Class loader back to \" + oldClassLoader);\n                     }\n                 }\n-                if (setClassLoader != null && setClassLoader.wasChanged) {\n-                    releaseLoader(tcclClassLoader);\n+                if (tuple != null && tuple.wasCreatedViaClassLoadingService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ff485e629ba3e78a5e31771c7850ca3d807f68"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1MzkxOQ==", "bodyText": "Yes, for sure that case, but it's also possible that the TCCL is inadvertently destroyed (without being created) in a case where the current thread's context classloader is set to anything other than AppClassLoader or ThreadContextClassLoader - so I think it could occur when the thread's context classloader is set to an OSGi loader like \"ContextFinder\", etc.", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#discussion_r434653919", "createdAt": "2020-06-03T15:26:35Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.beanvalidation.v20.cdi/src/com/ibm/ws/beanvalidation/v20/cdi/internal/LibertyHibernateValidatorExtension.java", "diffHunk": "@@ -109,8 +110,8 @@ private ValidationExtension delegate(String newClassloaderHint) {\n                         Tr.debug(tc, \"Set Class loader back to \" + oldClassLoader);\n                     }\n                 }\n-                if (setClassLoader != null && setClassLoader.wasChanged) {\n-                    releaseLoader(tcclClassLoader);\n+                if (tuple != null && tuple.wasCreatedViaClassLoadingService) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3ODk0Nw=="}, "originalCommit": {"oid": "82ff485e629ba3e78a5e31771c7850ca3d807f68"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY2MzcyOnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.beanvalidation.core/src/com/ibm/ws/beanvalidation/ValidatorFactoryAccessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoxOFrOGfxo5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo1Nzo0N1rOGf58Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MjMyNw==", "bodyText": "I think this check is a duplicate of the check done in AbstractBeanValidation.instance().releaseLoader(tuple).", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#discussion_r435972327", "createdAt": "2020-06-05T14:48:18Z", "author": {"login": "nmittles"}, "path": "dev/com.ibm.ws.beanvalidation.core/src/com/ibm/ws/beanvalidation/ValidatorFactoryAccessor.java", "diffHunk": "@@ -240,8 +241,8 @@ public static ValidatorFactory getValidatorFactory(ClassLoader classLoader, bool\n                     Tr.debug(tc, \"Set Class loader back to \" + oldClassLoader);\n                 }\n             }\n-            if (setClassLoader != null && setClassLoader.wasChanged) {\n-                AbstractBeanValidation.instance().releaseLoader(classLoader);\n+            if (tuple != null && tuple.wasCreatedViaClassLoadingService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86a75f27fb70da005e85bcf18fda62ba5809e4c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwODI5MQ==", "bodyText": "We'll plan to fix the 1.1 classes in a followup PR - we can remove the extra check in that PR too.  Thanks for the reviews!", "url": "https://github.com/OpenLiberty/open-liberty/pull/12462#discussion_r436108291", "createdAt": "2020-06-05T18:57:47Z", "author": {"login": "andymc12"}, "path": "dev/com.ibm.ws.beanvalidation.core/src/com/ibm/ws/beanvalidation/ValidatorFactoryAccessor.java", "diffHunk": "@@ -240,8 +241,8 @@ public static ValidatorFactory getValidatorFactory(ClassLoader classLoader, bool\n                     Tr.debug(tc, \"Set Class loader back to \" + oldClassLoader);\n                 }\n             }\n-            if (setClassLoader != null && setClassLoader.wasChanged) {\n-                AbstractBeanValidation.instance().releaseLoader(classLoader);\n+            if (tuple != null && tuple.wasCreatedViaClassLoadingService) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MjMyNw=="}, "originalCommit": {"oid": "b86a75f27fb70da005e85bcf18fda62ba5809e4c"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1586, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}