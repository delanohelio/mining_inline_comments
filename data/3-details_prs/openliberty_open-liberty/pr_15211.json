{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MDMwOTEy", "number": 15211, "title": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files", "bodyText": "Add xsd files to the container and API bundles\nUpdate the bundle name to be batch.2.0 instead of batch-2.0\nAdd JAXB files for both job V1 and V2 files so that we can read either version of the XML files.\nAdd unit test to easily test the ModelResolver.", "createdAt": "2020-12-08T00:16:40Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/15211", "merged": true, "mergeCommit": {"oid": "4f9a23c3ddd68e4ae69605b550e2642290270808"}, "closed": true, "closedAt": "2020-12-10T17:45:58Z", "author": {"login": "jhanders34"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkJxIRgBqjQwODQ2NjEyOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk1Zv0AFqTU0OTMzODg0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba77f18eb7ff9f56c4b71e40894af47fe25882c3", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/ba77f18eb7ff9f56c4b71e40894af47fe25882c3", "committedDate": "2020-12-08T00:15:07Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}, "afterCommit": {"oid": "93bd588cbfcb8c7452dc0724553c144fa94b7736", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/93bd588cbfcb8c7452dc0724553c144fa94b7736", "committedDate": "2020-12-08T13:01:11Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93bd588cbfcb8c7452dc0724553c144fa94b7736", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/93bd588cbfcb8c7452dc0724553c144fa94b7736", "committedDate": "2020-12-08T13:01:11Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}, "afterCommit": {"oid": "778dee8e6257ee8640ca8e25579672c8acf0e1fe", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/778dee8e6257ee8640ca8e25579672c8acf0e1fe", "committedDate": "2020-12-09T13:13:41Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "778dee8e6257ee8640ca8e25579672c8acf0e1fe", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/778dee8e6257ee8640ca8e25579672c8acf0e1fe", "committedDate": "2020-12-09T13:13:41Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}, "afterCommit": {"oid": "abfcd50d185f2f1c07d0636a269c1e1a5255da07", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/abfcd50d185f2f1c07d0636a269c1e1a5255da07", "committedDate": "2020-12-09T16:34:27Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91411a63631b922b19b44e2f927af9b533654107", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/91411a63631b922b19b44e2f927af9b533654107", "committedDate": "2020-12-09T19:09:04Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abfcd50d185f2f1c07d0636a269c1e1a5255da07", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/abfcd50d185f2f1c07d0636a269c1e1a5255da07", "committedDate": "2020-12-09T16:34:27Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}, "afterCommit": {"oid": "91411a63631b922b19b44e2f927af9b533654107", "author": {"user": {"login": "jhanders34", "name": "Jared Anderson"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/91411a63631b922b19b44e2f927af9b533654107", "committedDate": "2020-12-09T19:09:04Z", "message": "Update to be able to parse both 1.0 and 2.0 jobXML and batchXML files\n\n- Add xsd files to the container and API bundles\n- Update the bundle name to be batch.2.0 instead of batch-2.0\n- Add JAXB files for both job V1 and V2 files so that we can read either\nversion of the XML files."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzM4ODQy", "url": "https://github.com/OpenLiberty/open-liberty/pull/15211#pullrequestreview-549338842", "createdAt": "2020-12-10T15:51:27Z", "commit": {"oid": "91411a63631b922b19b44e2f927af9b533654107"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNTo1MToyN1rOIDQG5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNTo1MToyN1rOIDQG5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI4MDU0OQ==", "bodyText": "So anything not explicitly 1.0 is treated as 2.0? I'm curious what the current behavior is.. does this version attribute not exist, not get evaluated (everything is assumed to be 1.0), or do we actually do something for invalid values?", "url": "https://github.com/OpenLiberty/open-liberty/pull/15211#discussion_r540280549", "createdAt": "2020-12-10T15:51:27Z", "author": {"login": "cgianfra"}, "path": "dev/com.ibm.jbatch.container/src/com/ibm/jbatch/container/jsl/impl/JobModelHandler.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.jbatch.container.jsl.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBException;\n+import javax.xml.bind.Unmarshaller;\n+import javax.xml.bind.UnmarshallerHandler;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.SAXParseException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import com.ibm.jbatch.container.jsl.JSLValidationEventHandler;\n+import com.ibm.jbatch.container.jsl.ValidatorHelper;\n+import com.ibm.jbatch.jsl.model.JSLJob;\n+\n+/**\n+ *\n+ */\n+public class JobModelHandler extends DefaultHandler {\n+\n+    private final static String sourceClass = JobModelHandler.class.getName();\n+    private final static Logger logger = Logger.getLogger(sourceClass);\n+\n+    private static final String JCP_NAMESPACE_URI = \"http://xmlns.jcp.org/xml/ns/javaee\";\n+    private static final String JAKARTA_NAMESPACE_URI = \"https://jakarta.ee/xml/ns/jakartaee\";\n+\n+    public final static String SCHEMA_LOCATION_V1 = \"jobXML_1_0.xsd\";\n+\n+    public final static String SCHEMA_LOCATION_V2 = \"jobXML_2_0.xsd\";\n+\n+    /**\n+     * The JAXB unmarshaller that has been selected for the job XML file.\n+     * This field will be null until the root job element has been\n+     * parsed and its version has been determined.\n+     */\n+    UnmarshallerHandler ivHandler;\n+\n+    /**\n+     * The buffered locator that will be set on ivHandler once created.\n+     */\n+    private Locator ivLocator;\n+\n+    /**\n+     * The buffered startPrefixMapping events that will be replaced to ivHandler\n+     * once created.\n+     */\n+    private final List<PrefixMapping> ivPrefixMappings = new ArrayList<PrefixMapping>();\n+\n+    final JSLValidationEventHandler validationHandler = new JSLValidationEventHandler();\n+\n+    @Override\n+    public void setDocumentLocator(Locator locator) {\n+        ivLocator = locator;\n+    }\n+\n+    @Override\n+    public void endDocument() throws SAXException {\n+        if (ivHandler != null) {\n+            ivHandler.endDocument();\n+        }\n+    }\n+\n+    @Override\n+    public void startPrefixMapping(String prefix, String uri) throws SAXException {\n+        // Buffer events until startElement is called.\n+        if (ivHandler != null) {\n+            ivHandler.startPrefixMapping(prefix, uri);\n+        } else {\n+            ivPrefixMappings.add(new PrefixMapping(prefix, uri));\n+        }\n+    }\n+\n+    @Override\n+    public void endPrefixMapping(String prefix) throws SAXException {\n+        if (ivHandler != null) {\n+            ivHandler.endPrefixMapping(prefix);\n+        }\n+    }\n+\n+    @Override\n+    public void startElement(String uri, String localName, String qName, Attributes atts) throws SAXException {\n+        if (ivHandler == null) {\n+            if (!\"job\".equals(localName) ||\n+                (!(JCP_NAMESPACE_URI.equals(uri))\n+                 && !(JAKARTA_NAMESPACE_URI.equals(uri)))) {\n+                throw new SAXParseException(\"unexpected root element {\" +\n+                                            uri + \"}\" + localName, ivLocator);\n+            }\n+\n+            String version = atts.getValue(\"\", \"version\");\n+\n+            final String jaxbPackageName;\n+            String schemaName = SCHEMA_LOCATION_V1;\n+\n+            if (\"1.0\".equals(version)) {\n+                jaxbPackageName = \"com.ibm.jbatch.jsl.model.v1\";\n+                schemaName = SCHEMA_LOCATION_V1;\n+            } else {\n+                jaxbPackageName = \"com.ibm.jbatch.jsl.model.v2\";\n+                schemaName = SCHEMA_LOCATION_V2;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91411a63631b922b19b44e2f927af9b533654107"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2764, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}