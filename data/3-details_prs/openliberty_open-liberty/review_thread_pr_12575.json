{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMDcwNzI4", "number": 12575, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0OTozMFrOEK9ayQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0OTozMFrOEK9ayQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTI3NDk3OnYy", "diffSide": "RIGHT", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/osgi/webapp/WebApp.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0OTozMFrOGsTifA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjowOToxM1rOGsUVhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExMDY1Mg==", "bodyText": "Can you use the constant instead: com.ibm.ws.webcontainer.osgi.WebContainer.SPEC_LEVEL_40", "url": "https://github.com/OpenLiberty/open-liberty/pull/12575#discussion_r449110652", "createdAt": "2020-07-02T15:49:30Z", "author": {"login": "pnicolucci"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/osgi/webapp/WebApp.java", "diffHunk": "@@ -1052,18 +1052,29 @@ protected void addClassToHandlesTypesStartupSet(String targetClassName, Set<Clas\n       \n       boolean enableTrace = ( com.ibm.ejs.ras.TraceComponent.isAnyTracingEnabled() && logger.isLoggable (Level.FINE) );\n \n+      int servletSpecLevel = com.ibm.ws.webcontainer.osgi.WebContainer.getServletContainerSpecLevel();\n       //check if excluded because the subclasses includes this... and could be more than we want\n       //might need to exclude something else like javax.* or java*\n-      if (targetClassName.startsWith(\"java\")) {\n-          if ((targetClassName.charAt(4) == '.') || (targetClassName.startsWith(\"javax.\"))) {\n-              if ( enableTrace ) { \n-                  logger.logp(Level.FINE, CLASS_NAME, methodName,\n-                              \"Internal class, {0}, is not added to the ServletContainerInitializers in the application: {1}\",\n-                              new Object[] { targetClassName, this.config.getDisplayName() });\n-              }\n-              return;\n+      if(servletSpecLevel <= 40){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1405f75d8870f987ce6a4212845871b5f3c755a6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyMzcxOA==", "bodyText": "Changed", "url": "https://github.com/OpenLiberty/open-liberty/pull/12575#discussion_r449123718", "createdAt": "2020-07-02T16:09:13Z", "author": {"login": "volosied"}, "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/ws/webcontainer/osgi/webapp/WebApp.java", "diffHunk": "@@ -1052,18 +1052,29 @@ protected void addClassToHandlesTypesStartupSet(String targetClassName, Set<Clas\n       \n       boolean enableTrace = ( com.ibm.ejs.ras.TraceComponent.isAnyTracingEnabled() && logger.isLoggable (Level.FINE) );\n \n+      int servletSpecLevel = com.ibm.ws.webcontainer.osgi.WebContainer.getServletContainerSpecLevel();\n       //check if excluded because the subclasses includes this... and could be more than we want\n       //might need to exclude something else like javax.* or java*\n-      if (targetClassName.startsWith(\"java\")) {\n-          if ((targetClassName.charAt(4) == '.') || (targetClassName.startsWith(\"javax.\"))) {\n-              if ( enableTrace ) { \n-                  logger.logp(Level.FINE, CLASS_NAME, methodName,\n-                              \"Internal class, {0}, is not added to the ServletContainerInitializers in the application: {1}\",\n-                              new Object[] { targetClassName, this.config.getDisplayName() });\n-              }\n-              return;\n+      if(servletSpecLevel <= 40){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExMDY1Mg=="}, "originalCommit": {"oid": "1405f75d8870f987ce6a4212845871b5f3c755a6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1631, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}