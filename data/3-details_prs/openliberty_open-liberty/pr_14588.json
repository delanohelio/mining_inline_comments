{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MTE5ODU5", "number": 14588, "title": "extension point for WorkManager built on managed executors", "bodyText": "Create an extension point so that a feature can be written on top of the managed executors and context service to provide an implementation of CommonJ WorkManager.", "createdAt": "2020-10-20T21:57:03Z", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588", "merged": true, "mergeCommit": {"oid": "609c839266af07ae20abb764306bb7cb84d66ecc"}, "closed": true, "closedAt": "2020-10-21T13:48:23Z", "author": {"login": "njr-11"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUf_VEgH2gAyNTA3MTE5ODU5OjBiMjRkY2YyMGIwZThhYWI3MDNlZDcxNzNlZDZmMmMzMjMzZjgxODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUhBJ9gFqTUxMzE4ODU4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186", "author": {"user": {"login": "njr-11", "name": "Nathan Rauh"}}, "url": "https://github.com/OpenLiberty/open-liberty/commit/0b24dcf20b0e8aab703ed7173ed6f2c3233f8186", "committedDate": "2020-10-20T21:51:57Z", "message": "Issue #14587 extension point for WorkManager built on managed executors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTg4NTgz", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#pullrequestreview-513188583", "createdAt": "2020-10-20T22:44:58Z", "commit": {"oid": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjo0NDo1OVrOHlTzUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjo1NzozOVrOHlUFgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg4Mzc5NA==", "bodyText": "can the ResourceInfo param be removed?", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#discussion_r508883794", "createdAt": "2020-10-20T22:44:59Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.concurrent/src/com/ibm/ws/concurrent/ext/ManagedExecutorExtension.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.ext;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.function.Supplier;\n+\n+import javax.enterprise.concurrent.ManagedExecutorService;\n+\n+import org.eclipse.microprofile.context.ManagedExecutor;\n+import org.eclipse.microprofile.context.ThreadContext;\n+\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.concurrent.WSManagedExecutorService;\n+import com.ibm.ws.threading.CompletionStageExecutor;\n+import com.ibm.ws.threading.PolicyExecutor;\n+import com.ibm.wsspi.resource.ResourceInfo;\n+import com.ibm.wsspi.threadcontext.WSContextService;\n+\n+/**\n+ * Extend this interface to intercept and replace resource reference lookups for\n+ * <code>managedExecutorService</code>.\n+ *\n+ * At most one extension implementation can be supplied across the entire system.\n+ * A feature that provides this extension point makes itself incompatible\n+ * with every other feature that also provides this extension point.\n+ * Do not implement if this restriction is unacceptable.\n+ */\n+@Trivial\n+public class ManagedExecutorExtension implements CompletionStageExecutor, ManagedExecutor, ManagedExecutorService, WSManagedExecutorService {\n+    private final WSManagedExecutorService executor;\n+\n+    protected ManagedExecutorExtension(WSManagedExecutorService executor, ResourceInfo resourceInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg4ODQ0OQ==", "bodyText": "Instead of re-declaring the service reference set/unset methods, you can set -dsannotations-inherit: true in the bnd.bnd", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#discussion_r508888449", "createdAt": "2020-10-20T22:57:39Z", "author": {"login": "aguibert"}, "path": "dev/com.ibm.ws.concurrent/src/com/ibm/ws/concurrent/internal/ManagedScheduledExecutorServiceImpl.java", "diffHunk": "@@ -206,6 +206,13 @@ protected void setConcurrencyPolicy(ConcurrencyPolicy svc) {\n         super.setConcurrencyPolicy(svc);\n     }\n \n+    @Override\n+    @Reference(policy = ReferencePolicy.STATIC)\n+    @Trivial\n+    protected void setConcurrencyService(ConcurrencyService svc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3103, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}