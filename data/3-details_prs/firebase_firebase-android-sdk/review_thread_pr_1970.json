{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MTkzMzk4", "number": 1970, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxMjoyOVrOEiRnbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxMjoyOVrOEiRnbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mzc1NjYyOnYy", "diffSide": "RIGHT", "path": "smoke-tests/src/main/java/com/google/firebase/testing/PerformanceMonitoringTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxMjoyOVrOHQEEug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxNTo0OFrOHQELeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNjAxMA==", "bodyText": "Missing a new line here, but it's up to you.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1970#discussion_r486606010", "createdAt": "2020-09-10T20:12:29Z", "author": {"login": "yifanyang"}, "path": "smoke-tests/src/main/java/com/google/firebase/testing/PerformanceMonitoringTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.testing;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import androidx.test.runner.AndroidJUnit4;\n+import com.google.firebase.perf.FirebasePerformance;\n+import com.google.firebase.perf.metrics.HttpMetric;\n+import com.google.firebase.perf.metrics.Trace;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(AndroidJUnit4.class)\n+public final class PerformanceMonitoringTest {\n+\n+  @Test\n+  public void trace() {\n+    Trace trace = FirebasePerformance.getInstance().newTrace(\"test_trace\");\n+    trace.start();\n+\n+    trace.putMetric(\"counter\", 1);\n+    trace.incrementMetric(\"counter\", 2);\n+    trace.putAttribute(\"is_test\", \"true\");\n+\n+    trace.stop();\n+\n+    assertThat(trace.getLongMetric(\"counter\")).isEqualTo(3);\n+    assertThat(trace.getAttribute(\"is_test\")).isEqualTo(\"true\");\n+  }\n+\n+  @Test\n+  public void networkRequest() {\n+    HttpMetric networkRequest =\n+        FirebasePerformance.getInstance()\n+            .newHttpMetric(\"https://www.google.com\", FirebasePerformance.HttpMethod.GET);\n+    networkRequest.start();\n+\n+    networkRequest.setRequestPayloadSize(128);\n+    networkRequest.setResponsePayloadSize(1024);\n+    networkRequest.setHttpResponseCode(200);\n+    networkRequest.setResponseContentType(\"text/html\");\n+    networkRequest.putAttribute(\"is_test\", \"true\");\n+\n+    networkRequest.stop();\n+\n+    assertThat(networkRequest.getAttribute(\"is_test\")).isEqualTo(\"true\");\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbd92998edc922218f6ed75d3e686f4bf184dd86"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNzczNw==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1970#discussion_r486607737", "createdAt": "2020-09-10T20:15:48Z", "author": {"login": "jposuna"}, "path": "smoke-tests/src/main/java/com/google/firebase/testing/PerformanceMonitoringTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.testing;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import androidx.test.runner.AndroidJUnit4;\n+import com.google.firebase.perf.FirebasePerformance;\n+import com.google.firebase.perf.metrics.HttpMetric;\n+import com.google.firebase.perf.metrics.Trace;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(AndroidJUnit4.class)\n+public final class PerformanceMonitoringTest {\n+\n+  @Test\n+  public void trace() {\n+    Trace trace = FirebasePerformance.getInstance().newTrace(\"test_trace\");\n+    trace.start();\n+\n+    trace.putMetric(\"counter\", 1);\n+    trace.incrementMetric(\"counter\", 2);\n+    trace.putAttribute(\"is_test\", \"true\");\n+\n+    trace.stop();\n+\n+    assertThat(trace.getLongMetric(\"counter\")).isEqualTo(3);\n+    assertThat(trace.getAttribute(\"is_test\")).isEqualTo(\"true\");\n+  }\n+\n+  @Test\n+  public void networkRequest() {\n+    HttpMetric networkRequest =\n+        FirebasePerformance.getInstance()\n+            .newHttpMetric(\"https://www.google.com\", FirebasePerformance.HttpMethod.GET);\n+    networkRequest.start();\n+\n+    networkRequest.setRequestPayloadSize(128);\n+    networkRequest.setResponsePayloadSize(1024);\n+    networkRequest.setHttpResponseCode(200);\n+    networkRequest.setResponseContentType(\"text/html\");\n+    networkRequest.putAttribute(\"is_test\", \"true\");\n+\n+    networkRequest.stop();\n+\n+    assertThat(networkRequest.getAttribute(\"is_test\")).isEqualTo(\"true\");\n+  }\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNjAxMA=="}, "originalCommit": {"oid": "fbd92998edc922218f6ed75d3e686f4bf184dd86"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1167, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}