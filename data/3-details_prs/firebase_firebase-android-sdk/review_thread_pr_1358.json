{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTUwMTky", "number": 1358, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjo1MTozM1rODozf4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MDo1MVrODo0pKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTEzMzc3OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjo1MTozM1rOF3lK1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzowMDowNVrOF3lhig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyNDk4MA==", "bodyText": "if it is not relevant to the test, I'm happy with inlining, e.g., 0L for all of these", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393824980", "createdAt": "2020-03-17T16:51:33Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java", "diffHunk": "@@ -199,7 +232,10 @@ public void testFinalizeReports_capsReports() throws IOException {\n     for (int i = 0; i < 10; i++) {\n       persistReportWithEvent(reportPersistence, \"testSession\" + i, true);\n     }\n-    reportPersistence.finalizeReports(\"skippedSession\");\n+\n+    final long endedAt = System.currentTimeMillis();\n+\n+    reportPersistence.finalizeReports(\"skippedSession\", endedAt);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDc5NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393830794", "createdAt": "2020-03-17T17:00:05Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java", "diffHunk": "@@ -199,7 +232,10 @@ public void testFinalizeReports_capsReports() throws IOException {\n     for (int i = 0; i < 10; i++) {\n       persistReportWithEvent(reportPersistence, \"testSession\" + i, true);\n     }\n-    reportPersistence.finalizeReports(\"skippedSession\");\n+\n+    final long endedAt = System.currentTimeMillis();\n+\n+    reportPersistence.finalizeReports(\"skippedSession\", endedAt);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyNDk4MA=="}, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTE1NjIzOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjo1NzowOFrOF3lZuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MzoyN1rOF3nNpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyODc5NQ==", "bodyText": "this finalizeReports call is pretty nested. Suggestion:\nRefactor to make it so this method is much shorter, like:\nwriteReport(...);\nrecursiveDelete(sessionDirectory);\n\nThen in writeReport(...), flip the two nested ifs into early terminating statements:\nif (eventFiles.isEmpty()) {\n  return;\n}\n...\nif (report == null) {\n  // TODO: Handle null case\n  return\n}```", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393828795", "createdAt": "2020-03-17T16:57:08Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -192,17 +192,20 @@ public void finalizeReports(String currentSessionId) {\n \n         CrashlyticsReport report =\n             TRANSFORM.reportFromJson(readTextFile(new File(sessionDirectory, REPORT_FILE_NAME)));\n-        final String sessionId = report.getSession().getIdentifier();\n \n-        if (userId != null) {\n-          report = report.withUserId(userId);\n-        }\n+        // TODO: Handle null case\n+\n+        if (report != null) {\n+          report = report.withSessionEndFields(sessionEndTime, isHighPriorityReport, userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1MDIxMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393850212", "createdAt": "2020-03-17T17:30:29Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -192,17 +192,20 @@ public void finalizeReports(String currentSessionId) {\n \n         CrashlyticsReport report =\n             TRANSFORM.reportFromJson(readTextFile(new File(sessionDirectory, REPORT_FILE_NAME)));\n-        final String sessionId = report.getSession().getIdentifier();\n \n-        if (userId != null) {\n-          report = report.withUserId(userId);\n-        }\n+        // TODO: Handle null case\n+\n+        if (report != null) {\n+          report = report.withSessionEndFields(sessionEndTime, isHighPriorityReport, userId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyODc5NQ=="}, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1ODQ3MQ==", "bodyText": "nice!!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393858471", "createdAt": "2020-03-17T17:43:27Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -192,17 +192,20 @@ public void finalizeReports(String currentSessionId) {\n \n         CrashlyticsReport report =\n             TRANSFORM.reportFromJson(readTextFile(new File(sessionDirectory, REPORT_FILE_NAME)));\n-        final String sessionId = report.getSession().getIdentifier();\n \n-        if (userId != null) {\n-          report = report.withUserId(userId);\n-        }\n+        // TODO: Handle null case\n+\n+        if (report != null) {\n+          report = report.withSessionEndFields(sessionEndTime, isHighPriorityReport, userId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyODc5NQ=="}, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTE2Nzg0OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjo1OTo1OVrOF3lhSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODowMDoyMVrOF3n3Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ==", "bodyText": "This didn't break any CrashlyticsController tests. Do we not mock reportingCoordinator in those tests to check it was called in unit?\n... one pattern I often see (and implement) is a TimeProvider interface that would do new Date().getTime() / 1000, what's nice about that pattern is then you could pass it in and mock it to make the tests not break (if they had)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393830731", "createdAt": "2020-03-17T16:59:59Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java", "diffHunk": "@@ -860,7 +860,7 @@ private void doCloseSessions(int maxCustomExceptionEvents, boolean includeCurren\n \n     closeOpenSessions(sessionBeginFiles, offset, maxCustomExceptionEvents);\n \n-    reportingCoordinator.finalizeSessions();\n+    reportingCoordinator.finalizeSessions(new Date().getTime() / 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMjc2MA==", "bodyText": "This didn't break any CrashlyticsController tests. Do we not mock reportingCoordinator in those tests to check it was called in unit?\n\nApparently not.\n\n... one pattern I often see (and implement) is a TimeProvider interface that would do new Date().getTime() / 1000, what's nice about that pattern is then you could pass it in and mock it to make the tests not break (if they had)\n\nI considered that pattern, and in fact we actually have a SystemCurrentTimeProvider, but I wasn't sure whether to pass it in here or into the constructor.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393832760", "createdAt": "2020-03-17T17:03:01Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java", "diffHunk": "@@ -860,7 +860,7 @@ private void doCloseSessions(int maxCustomExceptionEvents, boolean includeCurren\n \n     closeOpenSessions(sessionBeginFiles, offset, maxCustomExceptionEvents);\n \n-    reportingCoordinator.finalizeSessions();\n+    reportingCoordinator.finalizeSessions(new Date().getTime() / 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ=="}, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NDg3MA==", "bodyText": "Cool, there's probably a wider discussion about that which I'm happy to punt on, but we can chat about when you're interested.\nGiven that this change didn't break any tests, do you need to add any tests that validate this method?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393854870", "createdAt": "2020-03-17T17:37:44Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java", "diffHunk": "@@ -860,7 +860,7 @@ private void doCloseSessions(int maxCustomExceptionEvents, boolean includeCurren\n \n     closeOpenSessions(sessionBeginFiles, offset, maxCustomExceptionEvents);\n \n-    reportingCoordinator.finalizeSessions();\n+    reportingCoordinator.finalizeSessions(new Date().getTime() / 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ=="}, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2OTA5NQ==", "bodyText": "I think we can do a separate pass and add tests for validating all of the SessionReportingCoordinator calls in CrashlyticsController.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393869095", "createdAt": "2020-03-17T18:00:21Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java", "diffHunk": "@@ -860,7 +860,7 @@ private void doCloseSessions(int maxCustomExceptionEvents, boolean includeCurren\n \n     closeOpenSessions(sessionBeginFiles, offset, maxCustomExceptionEvents);\n \n-    reportingCoordinator.finalizeSessions();\n+    reportingCoordinator.finalizeSessions(new Date().getTime() / 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ=="}, "originalCommit": {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTMxNTI3OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzozOToxNFrOF3nDPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo1MjoyN1rOF3njSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NTgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  isHighPriorityReport = isHighPriorityReport || isHighPriorityEventFile(eventFile.getName());\n          \n          \n            \n                  isHighPriorityReport |= isHighPriorityEventFile(eventFile.getName());", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393855805", "createdAt": "2020-03-17T17:39:14Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+\n+    // Only process the session if it has associated events\n+    if (eventFiles.isEmpty()) {\n+      return;\n+    }\n+\n+    // TODO: Handle all nullable return values\n+\n+    Collections.sort(eventFiles);\n+    final List<Event> events = new ArrayList<>();\n+    boolean isHighPriorityReport = false;\n+    for (File eventFile : eventFiles) {\n+      final String eventJson = readTextFile(eventFile);\n+      if (eventJson == null) {\n+        // TODO: Handle null case\n+        continue;\n+      }\n+      final Event event = TRANSFORM.eventFromJson(eventJson);\n+      isHighPriorityReport = isHighPriorityReport || isHighPriorityEventFile(eventFile.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7de2d2de8c2d1472bce57963365ef69167c588"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2NDAxMA==", "bodyText": "Personally I find this less clear, and would prefer we keep it as is if it's all the same to you.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393864010", "createdAt": "2020-03-17T17:52:27Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+\n+    // Only process the session if it has associated events\n+    if (eventFiles.isEmpty()) {\n+      return;\n+    }\n+\n+    // TODO: Handle all nullable return values\n+\n+    Collections.sort(eventFiles);\n+    final List<Event> events = new ArrayList<>();\n+    boolean isHighPriorityReport = false;\n+    for (File eventFile : eventFiles) {\n+      final String eventJson = readTextFile(eventFile);\n+      if (eventJson == null) {\n+        // TODO: Handle null case\n+        continue;\n+      }\n+      final Event event = TRANSFORM.eventFromJson(eventJson);\n+      isHighPriorityReport = isHighPriorityReport || isHighPriorityEventFile(eventFile.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NTgwNQ=="}, "originalCommit": {"oid": "6d7de2d2de8c2d1472bce57963365ef69167c588"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTMxOTQ4OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MDoyM1rOF3nGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MDoyM1rOF3nGCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NjUyMA==", "bodyText": "which values are the return values in this comment?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393856520", "createdAt": "2020-03-17T17:40:23Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+\n+    // Only process the session if it has associated events\n+    if (eventFiles.isEmpty()) {\n+      return;\n+    }\n+\n+    // TODO: Handle all nullable return values", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7de2d2de8c2d1472bce57963365ef69167c588"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTMyMTM3OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MDo1MVrOF3nHUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MDo1MVrOF3nHUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1Njg1MQ==", "bodyText": "is it worth pulling (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX) into a static constant?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393856851", "createdAt": "2020-03-17T17:40:51Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7de2d2de8c2d1472bce57963365ef69167c588"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1404, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}