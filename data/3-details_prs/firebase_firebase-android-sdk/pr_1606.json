{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjUwNzI3", "number": 1606, "title": "Changed TypeTokenContainer from interface to class", "bodyText": "Changed TypeTokenContainer from an interface to a class.\nChanged field typeArguments of type TypeTokenContainer in non-generic ClassToken from null to an empty instance.\nChanged TypeToken to throw an exception when a non-supported type <? super Foo> is passed to create a TypeToken, instead of throwing an exception only when trying to get the type arguments from it.", "createdAt": "2020-05-31T18:26:43Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606", "merged": true, "mergeCommit": {"oid": "3e14a1f5c379c84bb0dca5ba569014357d69d074"}, "closed": true, "closedAt": "2020-06-01T16:26:08Z", "author": {"login": "James201311"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmvsszAH2gAyNDI1NjUwNzI3OjU0M2ZhYjlhY2JlZjhmMzhiMjY4NDAzYjhjZmQ4ZDEzOTZiY2FhMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnCdmOABqjMzOTM3NjM5ODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "543fab9acbef8f38b268403b8cfd8d1396bcaa26", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/543fab9acbef8f38b268403b8cfd8d1396bcaa26", "committedDate": "2020-05-31T18:09:34Z", "message": "Changed TypeTokenContainer from interface to class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/7d07433a992506b7dfbfddc1f5401b428683ab3d", "committedDate": "2020-05-31T18:38:56Z", "message": "regenerate api information"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODMzOTkx", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#pullrequestreview-421833991", "createdAt": "2020-06-01T13:17:27Z", "commit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzoxNzoyN1rOGdKHNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzo0MDoxMFrOGdK2YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNzU3Mw==", "bodyText": "suggestion: Since TypeTokenContainer is immutable, let's have a singleton TypeTokenContainer .EMPTY instance that can be shared by all non-generic classes as opposed to allocating one each time.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#discussion_r433227573", "createdAt": "2020-06-01T13:17:27Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -118,7 +110,7 @@ private TypeToken() {}\n \n     private ClassToken(Class<T> token) {\n       this.rawType = token;\n-      this.typeArguments = null;\n+      this.typeArguments = new TypeTokenContainer(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzNjc3OA==", "bodyText": "Consider moving the conversion logic Type->TypeToken into the TypeToken class itself, this would increase cohesion of this class and will not require making TypeToken#of(Type) non-private, effectively exposing its implementation details.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#discussion_r433236778", "createdAt": "2020-06-01T13:35:04Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -15,13 +15,33 @@\n package com.google.firebase.decoders;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.lang.reflect.Type;\n \n /**\n  * {@link TypeTokenContainer} is used to get actual type parameter in a generic class at given\n  * index.\n  */\n-// TODO: change from interface to class\n-public interface TypeTokenContainer {\n+public class TypeTokenContainer {\n+  private final TypeToken<?>[] typeTokens;\n+\n+  TypeTokenContainer(@Nullable Type[] types) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzODAwMg==", "bodyText": "Also might make sense to make the constructor public and class final.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#discussion_r433238002", "createdAt": "2020-06-01T13:37:11Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -15,13 +15,33 @@\n package com.google.firebase.decoders;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.lang.reflect.Type;\n \n /**\n  * {@link TypeTokenContainer} is used to get actual type parameter in a generic class at given\n  * index.\n  */\n-// TODO: change from interface to class\n-public interface TypeTokenContainer {\n+public class TypeTokenContainer {\n+  private final TypeToken<?>[] typeTokens;\n+\n+  TypeTokenContainer(@Nullable Type[] types) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzNjc3OA=="}, "originalCommit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzODMwNg==", "bodyText": "I think IllegalArgumentException is more appropriate here.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#discussion_r433238306", "createdAt": "2020-06-01T13:37:44Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -15,13 +15,33 @@\n package com.google.firebase.decoders;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.lang.reflect.Type;\n \n /**\n  * {@link TypeTokenContainer} is used to get actual type parameter in a generic class at given\n  * index.\n  */\n-// TODO: change from interface to class\n-public interface TypeTokenContainer {\n+public class TypeTokenContainer {\n+  private final TypeToken<?>[] typeTokens;\n+\n+  TypeTokenContainer(@Nullable Type[] types) {\n+    TypeToken[] typeTokens;\n+    if (types == null) {\n+      typeTokens = new TypeToken[0];\n+    } else {\n+      typeTokens = new TypeToken[types.length];\n+      for (int i = 0; i < types.length; i++) {\n+        typeTokens[i] = TypeToken.of(types[i]);\n+      }\n+    }\n+    this.typeTokens = typeTokens;\n+  }\n+\n   @NonNull\n-  <T> TypeToken<T> at(int index);\n+  public <T> TypeToken<T> at(int index) {\n+    if (index >= typeTokens.length)\n+      throw new NullPointerException(\"No type token at index: \" + index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzODY1NA==", "bodyText": "nit: what if the index is less than zero?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#discussion_r433238654", "createdAt": "2020-06-01T13:38:25Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -15,13 +15,33 @@\n package com.google.firebase.decoders;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.lang.reflect.Type;\n \n /**\n  * {@link TypeTokenContainer} is used to get actual type parameter in a generic class at given\n  * index.\n  */\n-// TODO: change from interface to class\n-public interface TypeTokenContainer {\n+public class TypeTokenContainer {\n+  private final TypeToken<?>[] typeTokens;\n+\n+  TypeTokenContainer(@Nullable Type[] types) {\n+    TypeToken[] typeTokens;\n+    if (types == null) {\n+      typeTokens = new TypeToken[0];\n+    } else {\n+      typeTokens = new TypeToken[types.length];\n+      for (int i = 0; i < types.length; i++) {\n+        typeTokens[i] = TypeToken.of(types[i]);\n+      }\n+    }\n+    this.typeTokens = typeTokens;\n+  }\n+\n   @NonNull\n-  <T> TypeToken<T> at(int index);\n+  public <T> TypeToken<T> at(int index) {\n+    if (index >= typeTokens.length)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzOTY0OQ==", "bodyText": "Doesn't this produce an unchecked cast warning? if so worth adding a @SuppressWarnings?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#discussion_r433239649", "createdAt": "2020-06-01T13:40:10Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -15,13 +15,33 @@\n package com.google.firebase.decoders;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.lang.reflect.Type;\n \n /**\n  * {@link TypeTokenContainer} is used to get actual type parameter in a generic class at given\n  * index.\n  */\n-// TODO: change from interface to class\n-public interface TypeTokenContainer {\n+public class TypeTokenContainer {\n+  private final TypeToken<?>[] typeTokens;\n+\n+  TypeTokenContainer(@Nullable Type[] types) {\n+    TypeToken[] typeTokens;\n+    if (types == null) {\n+      typeTokens = new TypeToken[0];\n+    } else {\n+      typeTokens = new TypeToken[types.length];\n+      for (int i = 0; i < types.length; i++) {\n+        typeTokens[i] = TypeToken.of(types[i]);\n+      }\n+    }\n+    this.typeTokens = typeTokens;\n+  }\n+\n   @NonNull\n-  <T> TypeToken<T> at(int index);\n+  public <T> TypeToken<T> at(int index) {\n+    if (index >= typeTokens.length)\n+      throw new NullPointerException(\"No type token at index: \" + index);\n+    return (TypeToken<T>) typeTokens[index];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d07433a992506b7dfbfddc1f5401b428683ab3d"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6c5a6556e0b423395791de83b5789d265c03c4d", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/d6c5a6556e0b423395791de83b5789d265c03c4d", "committedDate": "2020-06-01T14:55:32Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTE4MzI3", "url": "https://github.com/firebase/firebase-android-sdk/pull/1606#pullrequestreview-421918327", "createdAt": "2020-06-01T15:03:17Z", "commit": {"oid": "d6c5a6556e0b423395791de83b5789d265c03c4d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f20d7586ecef9da3e70487a2d9306d15f24e0a", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/47f20d7586ecef9da3e70487a2d9306d15f24e0a", "committedDate": "2020-06-01T15:59:52Z", "message": "update api file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42d8d8e5ed6f924088c0d3489573bdafa486eaba", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/42d8d8e5ed6f924088c0d3489573bdafa486eaba", "committedDate": "2020-06-01T15:44:12Z", "message": "update api file"}, "afterCommit": {"oid": "47f20d7586ecef9da3e70487a2d9306d15f24e0a", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/47f20d7586ecef9da3e70487a2d9306d15f24e0a", "committedDate": "2020-06-01T15:59:52Z", "message": "update api file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2693, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}